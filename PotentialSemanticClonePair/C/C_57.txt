$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51935285_51935415_1_10
51935285_51937345_12_22
Title: How to check whether a pointer is pointing to an element inside an array? 
----------------------------------------

bool between (int *a, int len, int *b) {
    int i;
    for (i = 0; i < len; i++) {
        if (a + i == b) {
            return true;
        }
    }
    return false;
}
----------------------------------------

bool between (int *a, size_t a_sz, int *b) {
    if (bsearch (b, a, a_sz, sizeof *a, fcmp)) {
        return true;
    }
    for (size_t i = 0; i < a_sz; i++) {
        if (a + i == b) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51938878_51938922_3_36
51938878_51939015_4_27
Title: Removing extra whitespaces from a string - C programming 
----------------------------------------

char *IzbaciViskaRazmake (char *Str) {
    char *p = Str;
    char *p2 = Str;
    while (*p != '\0') {
        if (*p == ' ') {
            if (*p != *Str) {
                *p2 = *p;
                p2++;
                p++;
            }
            while (*p == ' ') {
                p++;
            }
        }
        else {
            *p2 = *p;
            p2++;
            p++;
        }
    }
    if (*(p2 - 1) == ' ') {
        p2--;
    }
    *p2 = '\0';
    return Str;
}
----------------------------------------

char *IzbaciViskaRazmake (char *Str) {
    char *p = Str;
    char *p2 = Str;
    while (*p != '\0') {
        if (*p == ' ')
            p++;
        else if (*p != ' ') {
            *p2 = *p;
            p2++;
            p++;
            if (*p == ' ') {
                *p2 = *p;
                p2++;
                p++;
            }
        }
    }
    *(p2 - 1) = '\0';
    return Str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51962053_51977807_5_22
51962053_52011502_6_61
Title: Store contents of a file with both integers and characters in C 
----------------------------------------

int main () {
    char *expression [1000] [256];
    char buffer [256];
    int line = 0;
    while (fgets (buffer, 256, stdin)) {
        int word = 0;
        char *token = strtok (buffer, " \r\n");
        do {
            expression[line][word] = calloc (sizeof (char), strlen (token) +1);
            strcpy (expression [line] [word], token);
            word++;
        }
        while ((token = strtok (NULL, " \r\n")) != NULL);
        line++;
    }
    printf ("'%s', '%s', '%s'\n", expression [0] [0], expression [0] [1], expression [0] [2]);
    return 0;
}
----------------------------------------

int main () {
    char buffer [256];
    int stack [sizeof (buffer) / 2];
    int i, sp, tos;
    while (fgets (buffer, sizeof buffer, stdin)) {
        char *p = buffer, *token, *q;
        sp = -1;
        stack[++sp] = 1;
        stack[++sp] = 1;
        while ((token = strtok (p, " \t\r\n")) != NULL) {
            p = NULL;
            tos = stack[sp];
            if (!strcmp (token, "+")) {
                stack[--sp] += tos;
            }
            else if (!strcmp (token, "-")) {
                stack[--sp] -= tos;
            }
            else if (!strcmp (token, "*")) {
                stack[--sp] *= tos;
            }
            else if (!strcmp (token, "/")) {
                if (tos == 0 || (tos == -1 && stack[sp - 1] == INT_MAX)) {
                    printf ("division overflow\n");
                    break;
                }
                stack[--sp] /= tos;
            }
            else if (!strcmp (token, "%")) {
                if (tos == 0 || (tos == -1 && stack[sp - 1] == INT_MAX)) {
                    printf ("division overflow\n");
                    break;
                }
                stack[--sp] %= tos;
            }
            else {
                tos = strtol (token, &q, 0);
                if (q == token || *q != '\0') {
                    printf ("invalid token: %s\n", token);
                    break;
                }
                stack[++sp] = tos;
            }
            if (sp < 2) {
                printf ("stack underflow for %s\n", token);
                break;
            }
        }
        if (token == NULL) {
            for (i = 2; i <= sp; i++) {
                printf ("%d%c", stack [i], i == sp ? '\n' : ' ');
            }
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51962569_51962670_3_23
51962569_51962754_3_22
Title: Perfect numbers between 1 and 1000 
----------------------------------------

int main () {
    int number = 1;
    while (number <= 1000) {
        int i, sum = 0;
        for (i = 1; i < number; i++) {
            if (number % i == 0) {
                sum += i;
            }
        }
        if (sum == number) {
            printf ("%d is perfect\n", numero);
        }
        number++;
    }
    return 0;
}
----------------------------------------

int main () {
    int sum;
    for (int number = 1; number <= 1000; number++) {
        sum = 0;
        for (int i = 1; i <= number / 2; i++) {
            if (number % i == 0) {
                sum += i;
            }
        }
        if (sum == number) {
            printf ("%d is perfect\n", number);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51968896_51969272_4_34
51968896_51969509_5_37
Title: Reading a matrix of numbers from a txt file 
----------------------------------------

int main () {
    FILE *fptr;
    double a = 0, b = 0, c = 0;
    double matrix [3] [3];
    fptr = fopen ("mat.txt", "r");
    if (fptr == NULL) {
        printf ("Cannot open file \n");
        exit (0);
    }
    int i = 0;
    while (fscanf (fptr, "%lf#%lf#%lf", &a, &b, &c) == 3) {
        double sum = a + b + c;
        matrix[i][0] = a / sum;
        matrix[i][1] = b / sum;
        matrix[i][2] = c / sum;
        i++;
    }
    for (i = 0; i < 3; i++)
        printf ("%lf %lf %lf\n", matrix[i][0], matrix[i][1], matrix[i][2]);
    fclose (fptr);
    return 0;
}
----------------------------------------

int main () {
    size_t x = 3, y = 3;
    int ret, i, j;
    FILE *fptr_in, *fptr_out;
    double (*d) [y], sum = 0;
    d = malloc (sizeof (double) * x * y);
    assert (d != NULL);
    fptr_in = fopen ("mat.txt", "r");
    assert (fptr_in != NULL);
    fptr_out = fopen ("mat_out.txt", "w");
    assert (fptr_out != NULL);
    for (i = 0; i < x; i++) {
        sum = 0;
        for (j = 0; j < y; j++) {
            ret = fscanf (fptr_in, "%lf", &d[i][j]);
            assert (ret > 0);
            sum += d[i][j];
        }
        for (j = 0; j < x; j++) {
            ret = fprintf (fptr_out, "%lf ", d[i][j] / sum);
        }
        fprintf (fptr_out, "\n");
    }
    free (d);
    fclose (fptr_in);
    fclose (fptr_out);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51973854_51974141_3_20
51973854_51975798_3_11
Title: filtering input to only numbers. C 
----------------------------------------

int main (void) {
    size_t len = 0;
    char str [32];
    int ch;
    while (len < sizeof (str) - 1) {
        ch = getchar ();
        if ((ch >= '0') && (ch <= '9')) {
            str[len++] = (char) ch;
        }
        else {
            break;
        }
    }
    str[len] = '\0';
    puts (str);
    return 0;
}
----------------------------------------

int main () {
    char ch;
    do {
        ch = getchar ();
    }
    while (!(ch >= 48 && ch <= 57));
    printf ("yay,we got a number : %c !", ch);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5198232_5198369_1_13
5198232_5198508_32_63
Title: fork order of execution 
----------------------------------------

int main () {
    if (!fork ())
        while (1) {
            printf ("HELLO");
            fflush (stdout);
        }
        else
            while (1) {
                printf ("WORLD");
                fflush (stdout);
            }
}
----------------------------------------

int main () {
    int pipe1 [2];
    int pipe2 [2];
    pid_t pid;
    if (pipe (pipe1) != 0)
        err ("pipe1");
    if (pipe (pipe2) != 0)
        err ("pipe2");
    if ((pid = fork ()) == 0) {
        char ch = '.';
        if (write (pipe1[1], &ch, 1) != 1)
            err ("write");
        close (pipe1 [0]);
        close (pipe2 [1]);
        run_handler (pipe2 [0], pipe1 [1], "WORLD\n");
    }
    else if (pid > 0) {
        close (pipe1 [1]);
        close (pipe2 [0]);
        run_handler (pipe1 [0], pipe2 [1], "HELLO ");
    }
    else {
        err ("fork");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_18817150_4_20
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_18967410_6_28
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_21025574_7_18
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_21520739_5_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_23843686_4_26
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_17306758_3_44
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n = 0;
std :
    : cout << "n = ";
std :
    : cin >> n;
std :
    : cout << std : : endl;
    if (n == 0 || n == 1) {
    std :
        : cout << "No primes in this range" << std : : endl;
        return 0;
    }
    const int array_len = n - 2 + 1;
    int the_int_array [array_len];
    for (int counter = 2; counter <= n; counter++)
        the_int_array[counter - 2] = counter;
    int runner = 0;
    int new_runner = 0;
    while (runner < array_len) {
        if (the_int_array[runner] != 0) {
            new_runner = runner;
            new_runner = new_runner + the_int_array[runner];
            while (new_runner < array_len) {
                the_int_array[new_runner] = 0;
                new_runner = (new_runner + the_int_array[runner]);
            }
        }
        runner++;
    }
    runner = 0;
    while (runner < array_len) {if (the_int_array [runner] != 0) std : : cout << the_int_array [runner] << " ";
    runner++;
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_18967410_6_28
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_21025574_7_18
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_21520739_5_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_23843686_4_26
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18817150_4_20
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    int f = 0;
    for (int i = 2; i <= 100; i++) {
        f = 0;
        for (int j = 2; j <= i / 2; j++) {
            if (i % j == 0) {
                f = 1;
                break;
            }
        }
        if (f == 0)
            cout << i << " ";
    }
    system ("pause");
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_21025574_7_18
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_21520739_5_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_23843686_4_26
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_18967410_6_28
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int a = 2;
    long long int b = 1000;
    for (int i = a; i <= b; i++) {
        for (int j = 2; j <= i; j++) {
            if (!(i % j) && (i != j)) {
                break;
            }
            if (j == i) {
                cout << i << endl;
            }
        }
    }
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_21520739_5_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_23843686_4_26
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21025574_7_18
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    for (i = 2; i < 101; i++) {
        b[i] = true;
    }
    for (i = 1; i < 101; i++) {
        if (b[i]) {
            cout << i << " ";
            for (j = i * 2; j < 101; j += i)
                b[j] = false;
        }
    }
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21520739_5_24
5200879_23843686_4_26
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21520739_5_24
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21520739_5_24
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21520739_5_24
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_21520739_5_24
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int n, counter = 0;
    cout << "Enter a number to check whether it is prime or not \n";
    cin >> n;
    for (int i = 2; i <= n - 1; i++) {
        if (n % i == 0) {
            cout << n << " is NOT a prime number \n";
            break;
        }
        counter++;
    }
    if (counter == n - 2)
        cout << n << " is prime \n";
    return 0;
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_23843686_4_26
5200879_25411361_4_22
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_23843686_4_26
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_23843686_4_26
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_23843686_4_26
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    int N;
    cin >> N;
    for (int i = 2; N > 0; ++i) {
        bool isPrime = true;
        for (int j = 2; j < i; ++j) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            --N;
            cout << i << "\n";
        }
    }
    return 0;
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_25411361_4_22
5200879_5200926_28_48
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_25411361_4_22
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_25411361_4_22
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

void main () {
    clrscr ();
    int n, i, j, k;
    cout << "Enter n\n";
    cin >> n;
    for (i = 1; i <= n; i++) {
        k = 0;
        for (j = 1; j <= i; j++) {
            if ((i % j) == 0)
                k++;
        }
        if (k == 2)
            cout << i << endl;
    }
    getch ();
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_5200926_28_48
5200879_5200931_2_25
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_5200926_28_48
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
    unsigned int *l;
    unsigned int n;
    cout << "Ingrese tope de criba" << endl;
    cin >> n;
    l = new unsigned int [n];
    initialize (l, n);
    cout << "Esta es la lista" << endl;
    show_list (l, n);
    criba (l, n);
    cout << "Estos son los primos" << endl;
    show_list (l, n);
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5200879_5200931_2_25
5200879_9656938_3_24
Title: Printing prime numbers from 1 through 100 
----------------------------------------

int main () {
std :
    : vector < int > primes;
    primes.push_back (2);
    for (int i = 3; i < 100; i++) {
        bool prime = true;
        for (int j = 0; j < primes.size () && primes[j] * primes[j] <= i; j++) {
            if (i % primes[j] == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            primes.push_back (i);
            cout << i << " ";
        }
    }
    return 0;
}
----------------------------------------

void main () {
    int num, i, j, prime;
    cout << "Enter the upper limit :";
    cin >> num;
    cout << "Prime numbers till " << num << " are :2, ";
    for (i = 3; i <= num; i++) {
        prime = 1;
        for (j = 2; j < i; j++) {
            if (i % j == 0) {
                prime = 0;
                break;
            }
        }
        if (prime == 1)
            cout << i << ", ";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014192_1_27
52013812_52014680_6_47
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

enter code here int main () {
    int mn, a;
    float la, y, m1, md, p, eb, i, x, z, b, c;
    printf ("Enter the loan amount:");
    scanf ("%f", & la);
    printf ("Enter the desired load term(years):");
    scanf ("%f", & y);
    m1 = y * 12;
    md = la / m1;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & z);
    i = z / 100;
    x = (la * i * y) / m1;
    p = md + x;
    b = la + (i * la);
    printf ("Month no.\tMonthly due\tEnding balance\n");
    for (a = 1; a <= 48; a++) {
        c = b - (p * a);
        printf ("%d\t\t%f%\t\t%f\n", a, p, c);
    }
    getch ();
    return 0;
}
----------------------------------------

int main () {
    int monthNumber, loopVariable;
    float loanAmount, totalInterestPerMonth, years, monthlyDue, totalMonths, interestRate, interest, totalAmountPerMonth, amountToPay;
    printf ("\nEnter Load Amount: ");
    scanf ("%f", & loanAmount);
    printf ("\nEnter desired load term (in years): ");
    scanf ("%f", & years);
    totalMonths = years * TOTAL_MONTHS_IN_A_YEAR;
    monthlyDue = loanAmount / totalMonths;
    printf ("\nEnter the annual interest rate: ");
    scanf ("%f", & interestRate);
    interest = interestRate / 100;
    totalInterestPerMonth = (loanAmount * interest * years) / totalMonths;
    totalAmountPerMonth = monthlyDue + totalInterestPerMonth;
    amountToPay = totalAmountPerMonth * totalMonths;
    printf ("\n\nMonth no.\tMonthly due\tEnding balance\n");
    for (loopVariable = 0; loopVariable < totalMonths; loopVariable++) {
        printf ("%d\t\t%.2f%\t\t%.2f\n", loopVariable, totalAmountPerMonth, amountToPay);
        amountToPay = amountToPay - totalAmountPerMonth;
    }
    printf ("Remaining Amount to Pay in last Month: %0.2f", amountToPay + totalAmountPerMonth);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014192_1_27
52013812_52014803_3_34
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

enter code here int main () {
    int mn, a;
    float la, y, m1, md, p, eb, i, x, z, b, c;
    printf ("Enter the loan amount:");
    scanf ("%f", & la);
    printf ("Enter the desired load term(years):");
    scanf ("%f", & y);
    m1 = y * 12;
    md = la / m1;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & z);
    i = z / 100;
    x = (la * i * y) / m1;
    p = md + x;
    b = la + (i * la);
    printf ("Month no.\tMonthly due\tEnding balance\n");
    for (a = 1; a <= 48; a++) {
        c = b - (p * a);
        printf ("%d\t\t%f%\t\t%f\n", a, p, c);
    }
    getch ();
    return 0;
}
----------------------------------------

int main () {
    int mn;
    float loan_amount, years, time_in_months, monthly_due, p, ending_balance, interest, x, interest_rate;
    printf ("Enter the loan amount:");
    scanf ("%f", & loan_amount);
    printf ("Enter the desired loan term(years):");
    scanf ("%f", & years);
    time_in_months = years * 12;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & interest_rate);
    interest = (loan_amount * years * interest_rate) / 100;
    monthly_due = (loan_amount + interest) / time_in_months;
    printf ("\n\nAmount to be paid back : %d", loan_amount + interest);
    printf ("Month no.\tMonthly Due\tEnding balance\n");
    int month_no;
    for (month_no = 1, ending_balance = loan_amount + interest; month_no <= time_in_months; month_no++) {
        printf ("%d\t\t%.2f\t\t%.2f\n", month_no, monthly_due, ending_balance);
        ending_balance -= monthly_due;
    }
    getch ();
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014192_1_27
52013812_52015289_3_33
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

enter code here int main () {
    int mn, a;
    float la, y, m1, md, p, eb, i, x, z, b, c;
    printf ("Enter the loan amount:");
    scanf ("%f", & la);
    printf ("Enter the desired load term(years):");
    scanf ("%f", & y);
    m1 = y * 12;
    md = la / m1;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & z);
    i = z / 100;
    x = (la * i * y) / m1;
    p = md + x;
    b = la + (i * la);
    printf ("Month no.\tMonthly due\tEnding balance\n");
    for (a = 1; a <= 48; a++) {
        c = b - (p * a);
        printf ("%d\t\t%f%\t\t%f\n", a, p, c);
    }
    getch ();
    return 0;
}
----------------------------------------

int main () {
    printf ("Enter the loan amount: ");
    float loan_amount = 0.0;
    scanf ("%f", & loan_amount);
    int loan_term_in_years = 0;
    printf ("Enter the desired loan term (years): ");
    scanf ("%d", & loan_term_in_years);
    int const loan_term_in_months = loan_term_in_years * 12;
    float const monthly_principal = loan_amount / loan_term_in_months;
    printf ("Monthly Principal: %.2f\n", monthly_principal);
    printf ("Enter the annual interest rate: ");
    float annual_interest_rate_percent = 0.0;
    scanf ("%f", & annual_interest_rate_percent);
    float const annual_interest_rate = annual_interest_rate_percent / 100.0;
    printf ("Anual interest rate: %.2f\n", annual_interest_rate);
    float const monthly_interest = (loan_amount * annual_interest_rate * loan_term_in_years) / loan_term_in_months;
    float const payment = monthly_principal + monthly_interest;
    printf ("Month no.\tMonthly due\tEnding balance\n");
    float ending_balance = loan_amount;
    for (int payment_month = 1; payment_month <= loan_term_in_months; payment_month++) {
        ending_balance -= monthly_principal;
        printf ("%d\t\t%.2f\t\t%.2f\n", payment_month, payment, ending_balance);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014680_6_47
52013812_52014803_3_34
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

int main () {
    int monthNumber, loopVariable;
    float loanAmount, totalInterestPerMonth, years, monthlyDue, totalMonths, interestRate, interest, totalAmountPerMonth, amountToPay;
    printf ("\nEnter Load Amount: ");
    scanf ("%f", & loanAmount);
    printf ("\nEnter desired load term (in years): ");
    scanf ("%f", & years);
    totalMonths = years * TOTAL_MONTHS_IN_A_YEAR;
    monthlyDue = loanAmount / totalMonths;
    printf ("\nEnter the annual interest rate: ");
    scanf ("%f", & interestRate);
    interest = interestRate / 100;
    totalInterestPerMonth = (loanAmount * interest * years) / totalMonths;
    totalAmountPerMonth = monthlyDue + totalInterestPerMonth;
    amountToPay = totalAmountPerMonth * totalMonths;
    printf ("\n\nMonth no.\tMonthly due\tEnding balance\n");
    for (loopVariable = 0; loopVariable < totalMonths; loopVariable++) {
        printf ("%d\t\t%.2f%\t\t%.2f\n", loopVariable, totalAmountPerMonth, amountToPay);
        amountToPay = amountToPay - totalAmountPerMonth;
    }
    printf ("Remaining Amount to Pay in last Month: %0.2f", amountToPay + totalAmountPerMonth);
}
----------------------------------------

int main () {
    int mn;
    float loan_amount, years, time_in_months, monthly_due, p, ending_balance, interest, x, interest_rate;
    printf ("Enter the loan amount:");
    scanf ("%f", & loan_amount);
    printf ("Enter the desired loan term(years):");
    scanf ("%f", & years);
    time_in_months = years * 12;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & interest_rate);
    interest = (loan_amount * years * interest_rate) / 100;
    monthly_due = (loan_amount + interest) / time_in_months;
    printf ("\n\nAmount to be paid back : %d", loan_amount + interest);
    printf ("Month no.\tMonthly Due\tEnding balance\n");
    int month_no;
    for (month_no = 1, ending_balance = loan_amount + interest; month_no <= time_in_months; month_no++) {
        printf ("%d\t\t%.2f\t\t%.2f\n", month_no, monthly_due, ending_balance);
        ending_balance -= monthly_due;
    }
    getch ();
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014680_6_47
52013812_52015289_3_33
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

int main () {
    int monthNumber, loopVariable;
    float loanAmount, totalInterestPerMonth, years, monthlyDue, totalMonths, interestRate, interest, totalAmountPerMonth, amountToPay;
    printf ("\nEnter Load Amount: ");
    scanf ("%f", & loanAmount);
    printf ("\nEnter desired load term (in years): ");
    scanf ("%f", & years);
    totalMonths = years * TOTAL_MONTHS_IN_A_YEAR;
    monthlyDue = loanAmount / totalMonths;
    printf ("\nEnter the annual interest rate: ");
    scanf ("%f", & interestRate);
    interest = interestRate / 100;
    totalInterestPerMonth = (loanAmount * interest * years) / totalMonths;
    totalAmountPerMonth = monthlyDue + totalInterestPerMonth;
    amountToPay = totalAmountPerMonth * totalMonths;
    printf ("\n\nMonth no.\tMonthly due\tEnding balance\n");
    for (loopVariable = 0; loopVariable < totalMonths; loopVariable++) {
        printf ("%d\t\t%.2f%\t\t%.2f\n", loopVariable, totalAmountPerMonth, amountToPay);
        amountToPay = amountToPay - totalAmountPerMonth;
    }
    printf ("Remaining Amount to Pay in last Month: %0.2f", amountToPay + totalAmountPerMonth);
}
----------------------------------------

int main () {
    printf ("Enter the loan amount: ");
    float loan_amount = 0.0;
    scanf ("%f", & loan_amount);
    int loan_term_in_years = 0;
    printf ("Enter the desired loan term (years): ");
    scanf ("%d", & loan_term_in_years);
    int const loan_term_in_months = loan_term_in_years * 12;
    float const monthly_principal = loan_amount / loan_term_in_months;
    printf ("Monthly Principal: %.2f\n", monthly_principal);
    printf ("Enter the annual interest rate: ");
    float annual_interest_rate_percent = 0.0;
    scanf ("%f", & annual_interest_rate_percent);
    float const annual_interest_rate = annual_interest_rate_percent / 100.0;
    printf ("Anual interest rate: %.2f\n", annual_interest_rate);
    float const monthly_interest = (loan_amount * annual_interest_rate * loan_term_in_years) / loan_term_in_months;
    float const payment = monthly_principal + monthly_interest;
    printf ("Month no.\tMonthly due\tEnding balance\n");
    float ending_balance = loan_amount;
    for (int payment_month = 1; payment_month <= loan_term_in_months; payment_month++) {
        ending_balance -= monthly_principal;
        printf ("%d\t\t%.2f\t\t%.2f\n", payment_month, payment, ending_balance);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52013812_52014803_3_34
52013812_52015289_3_33
Title: "C program that will display no. of months ending balance and monthly due" 
----------------------------------------

int main () {
    int mn;
    float loan_amount, years, time_in_months, monthly_due, p, ending_balance, interest, x, interest_rate;
    printf ("Enter the loan amount:");
    scanf ("%f", & loan_amount);
    printf ("Enter the desired loan term(years):");
    scanf ("%f", & years);
    time_in_months = years * 12;
    printf ("Enter the annual interest rate:");
    scanf ("%f", & interest_rate);
    interest = (loan_amount * years * interest_rate) / 100;
    monthly_due = (loan_amount + interest) / time_in_months;
    printf ("\n\nAmount to be paid back : %d", loan_amount + interest);
    printf ("Month no.\tMonthly Due\tEnding balance\n");
    int month_no;
    for (month_no = 1, ending_balance = loan_amount + interest; month_no <= time_in_months; month_no++) {
        printf ("%d\t\t%.2f\t\t%.2f\n", month_no, monthly_due, ending_balance);
        ending_balance -= monthly_due;
    }
    getch ();
    return 0;
}
----------------------------------------

int main () {
    printf ("Enter the loan amount: ");
    float loan_amount = 0.0;
    scanf ("%f", & loan_amount);
    int loan_term_in_years = 0;
    printf ("Enter the desired loan term (years): ");
    scanf ("%d", & loan_term_in_years);
    int const loan_term_in_months = loan_term_in_years * 12;
    float const monthly_principal = loan_amount / loan_term_in_months;
    printf ("Monthly Principal: %.2f\n", monthly_principal);
    printf ("Enter the annual interest rate: ");
    float annual_interest_rate_percent = 0.0;
    scanf ("%f", & annual_interest_rate_percent);
    float const annual_interest_rate = annual_interest_rate_percent / 100.0;
    printf ("Anual interest rate: %.2f\n", annual_interest_rate);
    float const monthly_interest = (loan_amount * annual_interest_rate * loan_term_in_years) / loan_term_in_months;
    float const payment = monthly_principal + monthly_interest;
    printf ("Month no.\tMonthly due\tEnding balance\n");
    float ending_balance = loan_amount;
    for (int payment_month = 1; payment_month <= loan_term_in_months; payment_month++) {
        ending_balance -= monthly_principal;
        printf ("%d\t\t%.2f\t\t%.2f\n", payment_month, payment, ending_balance);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52053135_52054071_34_54
52053135_52054197_5_25
Title: store ncurses cursor position as variable 
----------------------------------------

int main () {
    WINDOW *w = initscr ();
    for (int i = 2; i; --i) {
        move (10, 10);
        printw ("YX TEST %d", i);
        refresh ();
        int x, y;
        getyx (w, y, x);
        mybox (w, 9, 9, x, y + 1);
        refresh ();
        getch ();
        clear ();
    }
    endwin ();
    return 0;
}
----------------------------------------

int main (void) {
    WINDOW *win = initscr ();
    mvaddstr (10, 10, "Hello, world!");
    refresh ();
    int y, x;
    getyx (win, y, x);
    y += 2;
    mvprintw (y, x, "X: %d, Y: %d", x, y);
    refresh ();
    getch ();
    endwin ();
    return EXIT_SUCCESS;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52054541_52054756_1_16
52054541_52057285_1_19
Title: Store lines from .txt file in variables 
----------------------------------------

int main () {
    FILE *ptr_fp;
    char Line [600] [600];
    ptr_fp = fopen ("messages.txt", "r");
    int i = 0;
    if (ptr_fp != NULL) {
        while (fgets (Line[i], 600, ptr_fp) && i < 600) {
            i++;
        }
    }
    for (int j = 0; j < i; j++) {
        printf ("%s", Line [j]);
    }
    return 0;
}
----------------------------------------

int main () {
    FILE *ptr_fp;
    char **Line_buf, *buf;
    int line = 0, biggest_line_size = 0;
    ptr_fp = fopen ("messages.txt", "r");
    int i = 0, file_size = 0;
    lseek (ptr_fp, 0, SEEK_END);
    file_size = ftell (ptr_fp);
    buf = malloc (file_size);
    rewind (ptr_fp);
    if (ptr_fp != NULL) {
        while (fgets (buf, file_size, ptr_fp)) {line ++;
        if (strlen (buf) > biggest_line_size)
            biggest_line_size = strlen (buf);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5206840_5206935_3_13
5206840_5207028_4_24
Title: duplicating an array of strings (or copying them to another array)? 
----------------------------------------

void main (int argc, char **argv) {
    int myargc = argc;
    char **myargv = malloc ((argc - 1) * sizeof (void *));
    int i;
    for (i = 1; i < argc; i++) {
        int len = strlen (argv[i]);
        myargv[i - 1] = malloc (len +1);
        memcpy (myargv [i - 1], argv [i], len + 1);
    }
    getch ();
}
----------------------------------------

int main (int argc, char **argv) {
    int i;
    char **myargs;
    if (argc <= 0) {
        return EXIT_FAILURE;
    }
    myargs = malloc (sizeof *myargs * (argc + 1));
    myargs[0] = "your_program_name_here";
    for (i = 1; i < argc; ++i) {
        myargs[i] = argv[i];
    }
    myargs[argc] = 0;
    execv ("/your/program/here", myargs);
    return EXIT_FAILURE;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52085818_52085875_2_11
52085818_52085902_2_11
Title: printf printing zero when printing a double 
----------------------------------------

int main () {
    double pi = 3.1415926;
    double z = 0.0;
    printf ("What is the radius of the circle? \n ");
    scanf ("%lf", & z);
    double c = 2.0 * pi * z;
    printf ("The circumference is %lf", c);
    return 0;
}
----------------------------------------

int main () {
    double pi = 3.1415926;
    double z = 0.0;
    printf ("What is the radius of the circle? \n ");
    scanf ("%1f", & z);
    double c = 2.0 * pi * z;
    printf ("The circumference is %.1f", c);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52100048_52100179_3_27
52100048_52100648_4_42
Title: "drawing a rectangle for user-defined dimensions using for lops using extended ASCII characters" 
----------------------------------------

int main () {
    int length, width, i, j;
    printf ("Enter the length and width of the rectangle : ");
    scanf ("%d%d", & length, & width);
    for (i = 0; i < width; i++) {
        for (j = 0; j < length; j++) {
            if (j == 0 || j == length - 1 || i == 0 || i == width - 1) {
                printf ("%c", '*');
            }
            else {
                printf (" ");
            }
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int length, width, i, j;
    printf ("Enter the length and width of the rectangle : ");
    scanf ("%d%d", & length, & width);
    printf ("\n%c", 218);
    for (i = 1; i <= length; i++) {
        printf ("%c", 196);
    }
    printf ("%c", 191);
    for (j = 1; j <= width; j++) {
        printf ("\n");
        printf ("%c", 179);
        for (i = 1; i <= length; i++) {
            printf (" ");
        }
        printf ("%c", 179);
    }
    printf ("\n");
    printf ("%c", 192);
    for (i = 1; i <= length; i++) {
        printf ("%c", 196);
    }
    printf ("%c", 217);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52129023_52129979_5_34
52129023_52135145_7_32
Title: Program to find how many words in a text don't contain a specific character 
----------------------------------------

void find_word (char s []) {
    bool wordfound = false;
    int i, j = 0, word = 0;
    i = 0;
    while (s[i]) {
        if (s[i] != 'p' && s[i + 1] != space) {
            wordfound = true;
            word++;
        }
        wordfound = false;
        if (s[i] == space && s[i + 1] != space) {
            for (j = i + 1; s[j] && s[j] != space; j++)
                if (s[j] != 'p' && s[j + 1] != space)
                    wordfound = true;
        }
        if (wordfound) {
            word++;
        }
        wordfound = false;
        i++;
    }
    printf ("Number of words not contain p character%d\n\n", word);
}
----------------------------------------

void find_word (char s []) {
    bool is_in = false;
    short words_count = 0, i = 0;
    while (s[i]) {
        if (s[i] == 'p') {
            is_in = true;
        }
        if (s[i] == space) {
            if (!is_in) {
                words_count++;
            }
            is_in = false;
        }
        i++;
    }
    if (!is_in) {
        words_count++;
    }
    printf ("no. of words without p is %d\n", words_count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52140627_52141000_10_22
52140627_52141111_5_25
Title: How do I save values to a pointer I have allocated memory to? 
----------------------------------------

char *convertToBinary (int number) {
    char result [BINARY_INT_SIZE] = {0};
    for (int counter = 0; number; counter++) {
        printf ("%d %d %d\n", counter, number, number % 2);
        result[counter] = BINARY_TO_CHAR[number % 2];
        number /= 2;
    }
    return strdup (result);
}
----------------------------------------

char *convertToBinary (unsigned int baseTenNumber) {
    int counter = 0;
    char *result = NULL;
    char *temp = NULL;
    int remainder = baseTenNumber;
    while (remainder) {
        if (NULL == (temp = realloc (result, counter +2))) {
            fprintf (stderr, "problem realloc\n");
            exit (0);
        }
        result = temp;
        printf ("%d\n", remainder);
        result[counter] = remainder % 2 + '0';
        remainder /= 2;
        counter++;
    }
    result[counter] = 0;
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52145360_52145537_50_76
52145360_52161481_5_150
Title: How to create a list of word with specific length 
----------------------------------------

int main (void) {
    char *input = "ABCDEFGIHJ";
    size_t inputLen = strlen (input);
    char **result = NULL;
    for (size_t len = 1; len <= inputLen; ++len) {
        if (!(result = Magic (input, len))) {
            continue;
        }
        printf ("result for %zu len : ", len);
        for (size_t i = 0; result[i]; ++i) {
            printf ("%s%s", result [i], result [i + 1] ? ", " : "\n");
        }
        for (size_t i = 0; result[i]; ++i) {
            free (result [i]);
        }
        free (result);
        result = NULL;
    }
    return (EXIT_SUCCESS);
}
----------------------------------------

int main (void) {
    char wmers [115];
    int i = 1, j = 2;
    FILE *input = NULL;
    FILE *output;
    if (!(input = fopen ("exon11.txt", "r"))) {
        return (EXIT_FAILURE);
    }
    if (!fgets (wmers, 115, input)) {
    }
    printf ("><![CDATA[%d\n%s\n\n", i, wmers);
    i++;
    output = fopen ("2.txt", "w");
    fputs (wmers, output);
    for (int c = fgetc (input); c != EOF; c = fgetc (input)) {
        wmers[0] = wmers[1];
        wmers[1] = wmers[2];
        wmers[2] = wmers[3];
        wmers[3] = wmers[4];
        wmers[4] = wmers[5];
        wmers[5] = wmers[6];
        wmers[6] = wmers[7];
        wmers[7] = wmers[8];
        wmers[8] = wmers[9];
        wmers[9] = wmers[10];
        wmers[10] = wmers[11];
        wmers[11] = wmers[12];
        wmers[12] = wmers[13];
        wmers[13] = wmers[14];
        wmers[14] = wmers[15];
        wmers[15] = wmers[16];
        wmers[16] = wmers[17];
        wmers[17] = wmers[18];
        wmers[18] = wmers[19];
        wmers[19] = wmers[20];
        wmers[20] = wmers[21];
        wmers[21] = wmers[22];
        wmers[22] = wmers[23];
        wmers[23] = wmers[24];
        wmers[24] = wmers[25];
        wmers[25] = wmers[26];
        wmers[26] = wmers[27];
        wmers[27] = wmers[28];
        wmers[28] = wmers[29];
        wmers[29] = wmers[30];
        wmers[30] = wmers[31];
        wmers[31] = wmers[32];
        wmers[32] = wmers[33];
        wmers[33] = wmers[34];
        wmers[34] = wmers[35];
        wmers[35] = wmers[36];
        wmers[36] = wmers[37];
        wmers[37] = wmers[38];
        wmers[38] = wmers[39];
        wmers[39] = wmers[40];
        wmers[40] = wmers[41];
        wmers[41] = wmers[42];
        wmers[42] = wmers[43];
        wmers[43] = wmers[44];
        wmers[44] = wmers[45];
        wmers[45] = wmers[46];
        wmers[46] = wmers[47];
        wmers[47] = wmers[48];
        wmers[48] = wmers[49];
        wmers[49] = wmers[50];
        wmers[50] = wmers[51];
        wmers[51] = wmers[52];
        wmers[52] = wmers[53];
        wmers[53] = wmers[54];
        wmers[54] = wmers[55];
        wmers[55] = wmers[56];
        wmers[56] = wmers[57];
        wmers[57] = wmers[58];
        wmers[58] = wmers[59];
        wmers[59] = wmers[60];
        wmers[60] = wmers[61];
        wmers[61] = wmers[62];
        wmers[62] = wmers[63];
        wmers[63] = wmers[64];
        wmers[64] = wmers[65];
        wmers[65] = wmers[66];
        wmers[66] = wmers[67];
        wmers[67] = wmers[68];
        wmers[68] = wmers[69];
        wmers[69] = wmers[70];
        wmers[70] = wmers[71];
        wmers[71] = wmers[72];
        wmers[72] = wmers[73];
        wmers[73] = wmers[74];
        wmers[74] = wmers[75];
        wmers[75] = wmers[76];
        wmers[76] = wmers[77];
        wmers[77] = wmers[78];
        wmers[78] = wmers[79];
        wmers[79] = wmers[80];
        wmers[80] = wmers[81];
        wmers[81] = wmers[82];
        wmers[82] = wmers[83];
        wmers[83] = wmers[84];
        wmers[84] = wmers[84];
        wmers[85] = wmers[86];
        wmers[86] = wmers[87];
        wmers[87] = wmers[88];
        wmers[88] = wmers[89];
        wmers[89] = wmers[90];
        wmers[90] = wmers[91];
        wmers[91] = wmers[92];
        wmers[92] = wmers[93];
        wmers[93] = wmers[94];
        wmers[94] = wmers[95];
        wmers[95] = wmers[96];
        wmers[96] = wmers[97];
        wmers[97] = wmers[98];
        wmers[98] = wmers[99];
        wmers[99] = wmers[100];
        wmers[100] = wmers[101];
        wmers[101] = wmers[102];
        wmers[102] = wmers[103];
        wmers[103] = wmers[104];
        wmers[104] = wmers[105];
        wmers[105] = wmers[106];
        wmers[106] = wmers[107];
        wmers[107] = wmers[108];
        wmers[108] = wmers[109];
        wmers[109] = wmers[110];
        wmers[110] = wmers[111];
        wmers[111] = wmers[112];
        wmers[112] = wmers[113];
        wmers[113] = wmers[114];
        wmers[114] = c;
        printf ("><![CDATA[%d\n%s\n\n", j, wmers);
        j++;
        fputs (wmers, output);
    }
    return (EXIT_SUCCESS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52163000_52163259_1_11
52163000_52163350_1_11
Title: How to free a tree struct using double pointer? 
----------------------------------------

void free_tree (node_t **root) {
    if (root != NULL) {
        free_tree ((* root) -> left);
        << < '(*root)->left' is of type 'node_t *' free_tree ((* root) -> mid);
        << < '(*root)->mid' is of type 'node_t *' free_tree ((* root) -> right);
        << < '(*root)->right' is of type 'node_t *' free (* root);
    }
    return;
}
----------------------------------------

void free_tree (node_t **root) {
    if (root && *root) {
        free_tree (& (* root) -> left);
        free_tree (& (* root) -> mid);
        free_tree (& (* root) -> right);
        free (*root);
        *root = NULL;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52191975_20_41
52191799_52192020_24_55
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int main () {
    int a;
    int b, c, d, count = 0;
    printf ("Enter Number\n");
    scanf ("%d", & a);
    for (b = 2; b < (a + 1) / 2; b++) {
        c = prime (b);
        d = prime (a -b);
        if (c == 1 && d == 1) {
            printf ("%d = %d + %d\n", a, b, a - b);
            count++;
        }
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", a);
    }
    return 0;
}
----------------------------------------

int main () {
    int read_number;
    int summand1;
    int summand2;
    int count = 0;
    int max;
    char buffer [100];
    printf ("Enter Number\n");
    fgets (buffer, sizeof (buffer), stdin);
    read_number = atoi (buffer);
    max = (read_number + 1) / 2;
    for (summand1 = 2; summand1 < max; ++summand1) {
        summand2 = read_number - summand1;
        if ((prime (summand1) == 1) && (prime (summand2) == 1)) {
            printf ("%d = %d + %d\n", read_number, summand1, summand2);
            count++;
        }
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", read_number);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52191975_20_41
52191799_52192728_35_74
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int main () {
    int a;
    int b, c, d, count = 0;
    printf ("Enter Number\n");
    scanf ("%d", & a);
    for (b = 2; b < (a + 1) / 2; b++) {
        c = prime (b);
        d = prime (a -b);
        if (c == 1 && d == 1) {
            printf ("%d = %d + %d\n", a, b, a - b);
            count++;
        }
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", a);
    }
    return 0;
}
----------------------------------------

int main () {
    int a, b, a2, count = 0;
    printf ("Enter Number\n");
    scanf ("%d", & a);
    a2 = (a + 1) / 2;
    b = 2;
    if (b < a2) {
        if (prime (b) && prime (a -b)) {
            printf ("%d = %d + %d\n", a, b, a - b);
            count++;
        }
    }
    for (b = 3; b < a2; b += 2) {
        if (!prime (b))
            continue;
        if (!prime (a -b))
            continue;
        printf ("%d = %d + %d\n", a, b, a - b);
        count++;
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", a);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52191975_5_19
52191799_52192020_4_22
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int prime (int x) {
    int fact = 0, i;
    if (x < 2)
        return 0;
    for (i = 2; i < x; i++) {
        if (x % i == 0) {
            fact++;
        }
    }
    if (fact == 0)
        return 1;
    else
        return 0;
}
----------------------------------------

int prime (int x) {
    int i;
    if (x == 2) {
        return 1;
    }
    for (i = 2; i < x; i++) {
        if (x % i == 0) {
            return 0;
        }
    }
    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52191975_5_19
52191799_52192728_6_33
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int prime (int x) {
    int fact = 0, i;
    if (x < 2)
        return 0;
    for (i = 2; i < x; i++) {
        if (x % i == 0) {
            fact++;
        }
    }
    if (fact == 0)
        return 1;
    else
        return 0;
}
----------------------------------------

int prime (int x) {
    int pflg = 1;
    int sqr;
    int i;
    if (x <= 3)
        return (x >= 2);
    if ((x & 1) == 0)
        return 0;
    for (sqr = 0; (sqr * sqr) < x; ++sqr)
        ;
    for (i = 3; i <= sqr; i += 2) {
        if (x % i == 0) {
            pflg = 0;
            break;
        }
    }
    return pflg;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52192020_24_55
52191799_52192728_35_74
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int main () {
    int read_number;
    int summand1;
    int summand2;
    int count = 0;
    int max;
    char buffer [100];
    printf ("Enter Number\n");
    fgets (buffer, sizeof (buffer), stdin);
    read_number = atoi (buffer);
    max = (read_number + 1) / 2;
    for (summand1 = 2; summand1 < max; ++summand1) {
        summand2 = read_number - summand1;
        if ((prime (summand1) == 1) && (prime (summand2) == 1)) {
            printf ("%d = %d + %d\n", read_number, summand1, summand2);
            count++;
        }
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", read_number);
    }
    return 0;
}
----------------------------------------

int main () {
    int a, b, a2, count = 0;
    printf ("Enter Number\n");
    scanf ("%d", & a);
    a2 = (a + 1) / 2;
    b = 2;
    if (b < a2) {
        if (prime (b) && prime (a -b)) {
            printf ("%d = %d + %d\n", a, b, a - b);
            count++;
        }
    }
    for (b = 3; b < a2; b += 2) {
        if (!prime (b))
            continue;
        if (!prime (a -b))
            continue;
        printf ("%d = %d + %d\n", a, b, a - b);
        count++;
    }
    if (count == 0) {
        printf ("%d cannot be expressed as sum of two prime numbers.\n", a);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52191799_52192020_4_22
52191799_52192728_6_33
Title: Program to check whether a number can be expressed as a sum of two prime numbers 
----------------------------------------

int prime (int x) {
    int i;
    if (x == 2) {
        return 1;
    }
    for (i = 2; i < x; i++) {
        if (x % i == 0) {
            return 0;
        }
    }
    return 1;
}
----------------------------------------

int prime (int x) {
    int pflg = 1;
    int sqr;
    int i;
    if (x <= 3)
        return (x >= 2);
    if ((x & 1) == 0)
        return 0;
    for (sqr = 0; (sqr * sqr) < x; ++sqr)
        ;
    for (i = 3; i <= sqr; i += 2) {
        if (x % i == 0) {
            pflg = 0;
            break;
        }
    }
    return pflg;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52203587_52203757_5_21
52203587_52203796_2_16
Title: "How to fix ""error:assignment to expression with array type""?" 
----------------------------------------

int main () {
    char rec [300];
    int zbroj1 = 0, br = 0, zbroj2 = 0;
    while ((br = getchar ()) != '\n') {
        rec[zbroj1] = br;
        zbroj1++;
    }
    rec[zbroj1] = '\0';
    if (zbroj1 >= 4 && zbroj1 <= 8)
        printf ("Nova recenica je: %s", re);
    return 0;
}
----------------------------------------

int main (void) {
    int ret;
    char rec [300];
    int zbroj1 = 0, br = 0, zbroj2 = 0;
    while ((ret = getchar ()) != '\n') {
        rec[zbroj1] = ret;
        zbroj1++;
    }
    rec[zbroj1] = '\0';
    if (zbroj1 >= 4 && zbroj1 <= 8)
        printf ("Nova recenica je: %s", rec);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52203587_52203757_5_21
52203587_52204459_3_24
Title: "How to fix ""error:assignment to expression with array type""?" 
----------------------------------------

int main () {
    char rec [300];
    int zbroj1 = 0, br = 0, zbroj2 = 0;
    while ((br = getchar ()) != '\n') {
        rec[zbroj1] = br;
        zbroj1++;
    }
    rec[zbroj1] = '\0';
    if (zbroj1 >= 4 && zbroj1 <= 8)
        printf ("Nova recenica je: %s", re);
    return 0;
}
----------------------------------------

int main (void) {
    char rec [9];
    int br = 0, zbroj2 = 0;
    while ((zbroj2 = getchar ()) != '\n') {
        if (br < 8)
            rec[br] = zbroj2;
        br++;
        if (zbroj2 == 32) {
            if (br > 4 && br <= 8) {
                rec[br] = '\0';
                printf ("Nova recenica je: %s\n", rec);
            }
            br = 0;
        }
    }
    if (br >= 4 && br <= 8) {
        rec[br] = '\0';
        printf ("Nova recenica je: %s\n", rec);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52203587_52203796_2_16
52203587_52204459_3_24
Title: "How to fix ""error:assignment to expression with array type""?" 
----------------------------------------

int main (void) {
    int ret;
    char rec [300];
    int zbroj1 = 0, br = 0, zbroj2 = 0;
    while ((ret = getchar ()) != '\n') {
        rec[zbroj1] = ret;
        zbroj1++;
    }
    rec[zbroj1] = '\0';
    if (zbroj1 >= 4 && zbroj1 <= 8)
        printf ("Nova recenica je: %s", rec);
    return 0;
}
----------------------------------------

int main (void) {
    char rec [9];
    int br = 0, zbroj2 = 0;
    while ((zbroj2 = getchar ()) != '\n') {
        if (br < 8)
            rec[br] = zbroj2;
        br++;
        if (zbroj2 == 32) {
            if (br > 4 && br <= 8) {
                rec[br] = '\0';
                printf ("Nova recenica je: %s\n", rec);
            }
            br = 0;
        }
    }
    if (br >= 4 && br <= 8) {
        rec[br] = '\0';
        printf ("Nova recenica je: %s\n", rec);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_33964533_2_15
5224244_43257568_2_14
Title: Simple C question 
----------------------------------------

int main (void) {
    int i, j;
    char ch = '$';
    for (i = 1; i < 5; i++) {
        for (j = 1; j <= i; j++)
            printf ("%c", ch);
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main (void) {
    for (int i = 1; i <= 6; i++) {
        for (int j = 1; j <= 6; j++) {
            if (i - j >= 0)
                printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_33964533_2_15
5224244_44239248_2_12
Title: Simple C question 
----------------------------------------

int main (void) {
    int i, j;
    char ch = '$';
    for (i = 1; i < 5; i++) {
        for (j = 1; j <= i; j++)
            printf ("%c", ch);
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int row, col;
    for (row = 1; row <= 5; row++) {
        for (col = 0; col < row; col++)
            printf ("$");
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_33964533_2_15
5224244_5224301_3_15
Title: Simple C question 
----------------------------------------

int main (void) {
    int i, j;
    char ch = '$';
    for (i = 1; i < 5; i++) {
        for (j = 1; j <= i; j++)
            printf ("%c", ch);
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int line, dollar;
    for (line = 1; line <= 5; line++) {
        for (dollar = 0; dollar < line; dollar++) {
            printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_43257568_2_14
5224244_44239248_2_12
Title: Simple C question 
----------------------------------------

int main (void) {
    for (int i = 1; i <= 6; i++) {
        for (int j = 1; j <= 6; j++) {
            if (i - j >= 0)
                printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int row, col;
    for (row = 1; row <= 5; row++) {
        for (col = 0; col < row; col++)
            printf ("$");
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_43257568_2_14
5224244_5224301_3_15
Title: Simple C question 
----------------------------------------

int main (void) {
    for (int i = 1; i <= 6; i++) {
        for (int j = 1; j <= 6; j++) {
            if (i - j >= 0)
                printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int line, dollar;
    for (line = 1; line <= 5; line++) {
        for (dollar = 0; dollar < line; dollar++) {
            printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5224244_44239248_2_12
5224244_5224301_3_15
Title: Simple C question 
----------------------------------------

int main () {
    int row, col;
    for (row = 1; row <= 5; row++) {
        for (col = 0; col < row; col++)
            printf ("$");
        printf ("\n");
    }
    return 0;
}
----------------------------------------

int main () {
    int line, dollar;
    for (line = 1; line <= 5; line++) {
        for (dollar = 0; dollar < line; dollar++) {
            printf ("$");
        }
        printf ("\n");
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52258229_52258719_3_17
52258229_52258843_36_47
Title: Format Adjustment in C 
----------------------------------------

int main () {
    char discount_amount_string [255];
    char discount_percent_string [255];
    int subtotal = 2000;
    int discount_percent = 10;
    int discount_amount = subtotal * discount_percent / 100;
    snprintf (discount_amount_string, sizeof (discount_amount_string), "-  %d", discount_amount);
    snprintf (discount_percent_string, sizeof (discount_percent_string), "(%d%%)", discount_percent);
    printf ("Subtotal%15d\n", subtotal);
    printf ("Discount%-7s%8s\n", discount_percent_string, discount_amount_string);
    return 0;
}
----------------------------------------

int main (int argc, char *argv []) {
    print (20, 0);
    print (20, 10);
    print (100, 9);
    print (100, 10);
    print (100, 11);
    print (1000, 50);
    print (100000, 99);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52265031_52266720_3_16
52265031_52268873_1_13
Title: C - pointer to pointer to structure - segmentation fault 
----------------------------------------

void set_users () {
    static User *pUser;
    pUser = (User *) malloc (MAX_USERS_NUMBER * sizeof (User));
    users = &pUser;
    int i;
    for (i = 0; i < MAX_USERS_NUMBER; i++) {
        (*users + i)->id = i;
        (*users + i)->username = (char *) malloc (MAX_CHARS_USERNAME);
        snprintf ((* users + i) -> username, MAX_CHARS_USERNAME, "username%d", i);
        printf ("%d. id: %d, username: %s\n", i, (* users + i) -> id, (* users + i) -> username);
    }
}
----------------------------------------

void set_users () {
    users = (User **) malloc (MAX_USERS_NUMBER * sizeof (User *));
    int i;
    for (i = 0; i < MAX_USERS_NUMBER; i++) {
        *(users + i) = (User *) malloc (sizeof (User));
        (*(users + i))->id = i;
        (*(users + i))->username = (char *) malloc (strlen ("username") + 1);
        strcpy ((* (users + i)) -> username, "username");
        printf ("%d. id: %d, username: %s\n", i, (* (users + i)) -> id, (* (users + i)) -> username);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302336_14_33
52302083_52302372_15_38
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

int func (int n) {
    printf ("\t%d \n", n);
    if (forward != 1) {
        if (n == 1 || n == 2) {
            forward = 1;
            func (n + 2);
        }
        else {
            return func (n -2);
        }
    }
    else {
        if (n >= a) {
            return;
        }
        return func (n +2);
    }
}
----------------------------------------

void func (int n) {
    static char reverse;
    static char init = 1;
    static int val;
    if (init) {
        val = n;
        init = 0;
    }
    printf ("%d\t", n);
    if (n <= 2) {
        reverse = 1;
    }
    n += (reverse) ? 2 : -2;
    if (n > val)
        return;
    func (n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302336_14_33
52302083_52302609_2_25
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

int func (int n) {
    printf ("\t%d \n", n);
    if (forward != 1) {
        if (n == 1 || n == 2) {
            forward = 1;
            func (n + 2);
        }
        else {
            return func (n -2);
        }
    }
    else {
        if (n >= a) {
            return;
        }
        return func (n +2);
    }
}
----------------------------------------

int func (int n, int counter, int originalNum) {
    printf ("\t%d", n);
    if (counter == 0) {
        if (n == 1 || n == 2) {
            counter = 1;
            return func (n +2, counter, originalNum);
        }
        return func (n -2, counter, originalNum);
    }
    else {
        if (n == originalNum) {
            return 1;
        }
        return func (n +2, counter, originalNum);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302336_14_33
52302083_52303981_3_19
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

int func (int n) {
    printf ("\t%d \n", n);
    if (forward != 1) {
        if (n == 1 || n == 2) {
            forward = 1;
            func (n + 2);
        }
        else {
            return func (n -2);
        }
    }
    else {
        if (n >= a) {
            return;
        }
        return func (n +2);
    }
}
----------------------------------------

void func (int n) {
    if (n > 0) {
        printf ("<<%d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
        printf ("><![CDATA[>\n");
    }
    else {
        n = -n;
        printf (" %d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302372_15_38
52302083_52302609_2_25
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

void func (int n) {
    static char reverse;
    static char init = 1;
    static int val;
    if (init) {
        val = n;
        init = 0;
    }
    printf ("%d\t", n);
    if (n <= 2) {
        reverse = 1;
    }
    n += (reverse) ? 2 : -2;
    if (n > val)
        return;
    func (n);
}
----------------------------------------

int func (int n, int counter, int originalNum) {
    printf ("\t%d", n);
    if (counter == 0) {
        if (n == 1 || n == 2) {
            counter = 1;
            return func (n +2, counter, originalNum);
        }
        return func (n -2, counter, originalNum);
    }
    else {
        if (n == originalNum) {
            return 1;
        }
        return func (n +2, counter, originalNum);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302372_15_38
52302083_52303981_3_19
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

void func (int n) {
    static char reverse;
    static char init = 1;
    static int val;
    if (init) {
        val = n;
        init = 0;
    }
    printf ("%d\t", n);
    if (n <= 2) {
        reverse = 1;
    }
    n += (reverse) ? 2 : -2;
    if (n > val)
        return;
    func (n);
}
----------------------------------------

void func (int n) {
    if (n > 0) {
        printf ("<<%d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
        printf ("><![CDATA[>\n");
    }
    else {
        n = -n;
        printf (" %d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52302083_52302609_2_25
52302083_52303981_3_19
Title: Recursive function that prints all integers from N to 1 and then from 1 to N 
----------------------------------------

int func (int n, int counter, int originalNum) {
    printf ("\t%d", n);
    if (counter == 0) {
        if (n == 1 || n == 2) {
            counter = 1;
            return func (n +2, counter, originalNum);
        }
        return func (n -2, counter, originalNum);
    }
    else {
        if (n == originalNum) {
            return 1;
        }
        return func (n +2, counter, originalNum);
    }
}
----------------------------------------

void func (int n) {
    if (n > 0) {
        printf ("<<%d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
        printf ("><![CDATA[>\n");
    }
    else {
        n = -n;
        printf (" %d", n);
        if (n > 2) {
            func (- (n - 2));
            printf (" %d", n);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52344134_52344436_1_19
52344134_52344480_23_33
Title: How to find the smallest digit in a number and its position in a vector in C? 
----------------------------------------

int main () {
    int n, i = 0, v [100], Min = 9, Position = 0;
    scanf ("%d", & n);
    while (n != 0) {
        v[i] = n % 10;
        if (v[i] < Min) {
            Min = v[i];
            Position = i;
        }
        i++;
        n = n / 10;
    }
    printf ("%d, %d", Min, (i - Position - 1));
    printf ("\n");
}
----------------------------------------

int main () {
    int n;
    scanf ("%d", & n);
    if (n < 0)
        n = -n;
    locate (n);
    printf ("Position %d  Min %d\n", position, Min);
    return n;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52346054_52346504_6_29
52346054_52346817_3_28
Title: Scan unknown number of inputs and print bar chart in C 
----------------------------------------

int main (void) {
    char *prompt = "Enter the number of values to graph, followed by the values" " (-1 to exit)";
    int num_values;
    puts (prompt);
    int ret_scanf = scanf ("%d", &num_values);
    while (ret_scanf == 1 && num_values > 0) {
        for (int i = 0; i < num_values; i++) {
            int val;
            if (scanf ("%d", &val) == 1) {
                print_bar (val);
            }
        }
        putchar ('\n');
        puts (prompt);
        clear_stream ();
        ret_scanf = scanf ("%d", &num_values);
    }
    return 0;
}
----------------------------------------

int main () {
    int i, j, k, l = 1;
    printf ("Enter intergers from 1 to 40 where first number indicates how many 
numbers follow: ");
    scanf ("%d", & i);
a :
    scanf ("%d", &j);
    for (k = 1; k <= j; k++) {
        printf ("*");
    }
    printf ("\n");
    l++;
    if (l <= i)
        goto a;
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52349750_52350030_9_45
52349750_52371530_8_48
Title: For loop error with 2D dynamically allocated array 
----------------------------------------

int main () {
    int ms = 0, i = 0, j = 0, n = 0;
    double value = 0;
    double **KAB;
    KAB = (double **) malloc (3 * sizeof (double *));
    for (i = 0; i < 15; i++) {
        KAB[i] = (double *) malloc (3 * sizeof (double));
    }
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 15; j++) {
            KAB[i][j] = 0.0;
        }
    }
    for (ms = 0; ms < 3; ms++) {
        for (i = 0; i < 15; i++) {
            value = 0;
            for (n = 0; n < 5; n++) {
                value += ms * 1.0 + 1;
            }
            KAB[ms][i] = value;
            printf ("Step:%d MS:%d\n", i, ms);
            printf ("KAB[0][7]=%lf KAB[1][7]=%lf KAB[2][7]=%lf\n", KAB [0] [7], KAB [1] [7], KAB [2] [7]);
        }
    }
    return 0;
}
----------------------------------------

int main (void) {
    double **kab = NULL;
    kab = calloc (ROW, sizeof *kab);
    if (!kab) {
        perror ("calloc-kab");
        exit (EXIT_FAILURE);
    }
    for (int ms = 0; ms < ROW; ms++) {
        kab[ms] = calloc (COL, sizeof *kab[ms]);
        if (!kab[ms]) {
            perror ("calloc-kab[ms]");
            exit (EXIT_FAILURE);
        }
        for (int i = 0; i < COL; i++) {
            double value = 0;
            for (int n = 0; n < NVAL; n++)
                value += ms * 1.0 + 1;
            kab[ms][i] = value;
        }
    }
    for (int ms = 0; ms < ROW; ms++) {
        for (int i = 0; i < COL; i++)
            printf (" %4.1lf", kab[ms][i]);
        putchar ('\n');
        free (kab [ms]);
    }
    free (kab);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52367049_52367155_4_24
52367049_52368471_7_52
Title: Comparing the permutations of two strings in C 
----------------------------------------

int main () {
    char str1 [15];
    char str2 [15];
    int ret;
    strcpy (str1, "abcdef");
    strcpy (str2, "ABCDEF");
    ret = strcmp (str1, str2);
    if (ret < 0) {
        printf ("str1 is less than str2");
    }
    else if (ret > 0) {
        printf ("str2 is less than str1");
    }
    else {
        printf ("str1 is equal to str2");
    }
    return (0);
}
----------------------------------------

int main () {
    char str_one [] = "abbcd";
    char str_two [] = "bcab";
    int arr [26] = {0};
    int index = 0;
    int len_one = strlen (str_one);
    int len_two = strlen (str_two);
    int val;
    if (len_one != len_two) {
        printf ("NO");
        exit (0);
    }
    while (index < len_one) {
        ++arr[str_one[index++] - 'a'];
    }
    index = 0;
    while (index < len_two) {
        --arr[str_two[index++] - 'a'];
        if (arr[str_two[index] - 'a'] < 0) {
            printf ("NO");
            exit (0);
        }
    }
    index = 0;
    while (index < 26) {
        if (arr[index] != 0) {
            printf ("NO");
            exit (0);
        }
        ++index;
    }
    printf ("yes");
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52375135_52379091_3_38
52375135_52401506_53_71
Title: How to find couples of numbers with the same sum from 1 to n and from n+1 to m 
----------------------------------------

int main () {
    int count = 0;
    unsigned long long n = 1;
    unsigned long long m = 2;
    unsigned long long before = 0;
    unsigned long long after = 2;
    for (;;) {
        if (before < after) {
            before += n;
            n++;
            after -= n;
        }
        else {
            m++;
            if (after > 0x8000000000000000) {
                after -= 0x4000000000000000;
                before -= 0x4000000000000000;
            }
            after += m;
            while (before > after) {
                after += n;
                n--;
                before -= n;
            }
        }
        if (before == after) {
            printf ("%llu\t%llu\n", n, m);
            count++;
            if (count == 15)
                break;
        }
    }
    printf ("%d solutions up to %llu\n", count, m);
    return 0;
}
----------------------------------------

int main (void) {
    int i;
    uval_t n = 1, d = 0;
    uval_t sum = 0;
    for (i = 1; i <= MAX; i++) {
        d += n * 2;
        n += d * 2 + 1;
        sum = mul (n, n -1) / 2;
        if (sum == 0)
            break;
        printf ("%2d\t%20llu\t%20llu\t%20llu\n", i, n, n + d, sum);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52389315_52389542_1_12
52389315_52389992_1_15
Title: getting correct address of char* 
----------------------------------------

char *my_strcat (char *first, char *second) {
    int l_first = strlen (first), l_second = strlen (second);
    char *tmp = malloc (l_first +l_second + 1);
    char *result = temp;
    while ((*tmp++ = *first++))
        ;
    tmp--;
    while ((*tmp++ = *second++))
        ;
    return result;
}
----------------------------------------

char *my_strcat (const char **dest, const char *source) {
    size_t l_first = strlen (first), l_second = strlen (second);
    char *tmp = malloc (l_first +l_second + 1);
    char *result = temp;
    const char *tmpdest = *dest;
    if (tmp) {
        while ((*tmp++ = *tmpdest++))
            ;
        tmp--;
        while ((*tmp++ = *second++))
            ;
        *dest = result;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52418015_52418694_3_36
52418015_52418882_7_87
Title: How to take multiple inputs (integer and string) for a program with different conditions 
----------------------------------------

int main (void) {
    printf ("start\n");
    int c;
    char ch [10];
    int light_id = 1;
    while (light_id > 0) {
        printf ("\nEnter number and on/off_str:\n");
        scanf ("%d%s", & c, ch);
        if (c == 1) {
            if (strcmp (ch, "on") == 0) {
                printf ("\n1 and on");
            }
            else if (strcmp (ch, "off") == 0) {
                printf ("\n1 and off");
            }
        }
        else if (c == 2) {
            if (strcmp (ch, "on") == 0) {
                printf ("\n2 and on");
            }
            else if (strcmp (ch, "off") == 0) {
                printf ("\n2 and off");
            }
        }
        else if ((c != 1) && (c != 2)) {
            printf ("break\n");
            break;
        }
    }
    return 0;
}
----------------------------------------

int main (void) {
    printf ("start\n");
    long c = 0;
    char ch [5] = {0}, buf [BUFFER_SIZE] = {0};
    char *loc;
    int light_id = 1;
    char found = 0;
    while (light_id > 0) {
        c = 0;
        printf ("Enter number and on/off_str:\n");
        if (NULL == fgets (buf, BUFFER_SIZE, stdin))
            return EXIT_FAILURE;
        loc = buf;
        found = 0;
        while (!found && *loc != 0) {
            if (isdigit (*loc)) {
                c = strtol (loc, &loc, 10);
                found = 1;
            }
            else {
                loc++;
            }
        }
        while (NULL == strchr (buf, '\n')) {
            if (NULL == fgets (buf, BUFFER_SIZE, stdin))
                return EXIT_FAILURE;
        }
        if (NULL == fgets (buf, BUFFER_SIZE, stdin))
            return EXIT_FAILURE;
        strncpy (ch, buf, 4);
        loc = strchr (ch, '\n');
        if (NULL != loc)
            *loc = 0;
        if (c == 1) {
            if (!strcmp ("on", ch)) {
                printf ("1 and on\n");
            }
            if (!strcmp ("off", ch)) {
                printf ("1 and off\n");
            }
        }
        else if (c == 2) {
            if (!strcmp ("on", ch)) {
                printf ("2 and on\n");
            }
            if (!strcmp ("off", ch)) {
                printf ("2 and off\n");
            }
        }
        else {
            printf ("break\n");
            light_id = 0;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52441516_52441789_6_27
52441516_52458457_9_39
Title: Segfault when changing macro values 
----------------------------------------

int main () {
    srand (time (NULL));
    double matrix [len] [hi];
    double delimo, delitel;
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < hi; j++) {
            delimo = rand () % (len * hi);
            delitel = rand () % (len * hi);
            matrix[i][j] = delimo / ++delitel;
            printf (" %5.2lf ", matrix [i] [j]);
        }
        puts ("");
    }
    puts ("Transpose: ");
    transpose (matrix);
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < hi; j++) {
            printf (" %5.2lf ", matrix [i] [j]);
        }
        puts ("");
    }
}
----------------------------------------

int main (void) {
    srand (time (NULL));
    int cols = 10;
    int rows = 8;
    double (*matrix) [rows] [cols] = malloc (sizeof (double [rows] [cols]));
    double (*result) [cols] [rows] = malloc (sizeof (double [cols] [rows]));
    if (matrix == 0 || result == 0) {
        fprintf (stderr, "failed to allocate memory\n");
        exit (EXIT_FAILURE);
    }
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            double delimo = rand () % (rows * cols);
            double delitel = rand () % (rows * cols) + 1;
            (*matrix)[i][j] = delimo / delitel;
        }
    }
    print_matrix ("original", rows, cols, * matrix);
    transpose (rows, cols, * matrix, * result);
    print_matrix ("transpose", cols, rows, * result);
    free (matrix);
    free (result);
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52447511_52447889_1_22
52447511_52448444_1_15
Title: What is it wrong with this power function? 
----------------------------------------

int power (int a, int b) {
    if (a == 1)
        return a;
    if (!b)
        return 1;
    if (b == 1)
        return a;
    int p = a;
    for (int i = 1; i < b; i++) {
        a = p * a;
    }
    return a;
}
----------------------------------------

int power (int a, int b) {
    int p = a;
    for (int i = 1; i < b; ++i) {
        if ((b != 1) && (b != 0)) {
            a = p * a;
        }
        if ((b == 1)) {
            a = a;
        }
        if ((b == 0)) {
            a = 1;
        }
    }
    return (a);
}
----------------------------------------
