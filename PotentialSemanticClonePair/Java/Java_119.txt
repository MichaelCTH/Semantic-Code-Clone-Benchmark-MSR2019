$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50139235_50139376_4_19
50139235_50139905_2_19
Title: Java Array Help Needed 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] a = new int [input];
    for (int i = 0;
    i < a.length; i ++) {
        if (i % 2 == 0) {
            a [i] = 0;
        } else {
            a [i] = 1;
        }
    }
    input.close ();
    printArray (a);
}
----------------------------------------

public static void main (String [] args) {
    int [] [] a = new int [5] [5];
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < a [i].length; j ++) {
            int x = j;
            if (x % 2 == 0) {
                a [i] [j] = 0;
            } else {
                a [i] [j] = 1;
            }
        }
    }
    printArray (a);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5014765_5015074_11_45
5014765_5018460_11_45
Title: Simultaneously right-align and wrap text in an SWT label in Linux/Gnome 
----------------------------------------

public static void main (String [] args) {
    Display display = new Display ();
    Shell shell = new Shell (display);
    GridLayout layout = new GridLayout ();
    layout.numColumns = 2;
    shell.setLayout (layout);
    shell.setText ("Alignment Test");
    String [] labelTexts = new String [] {"label 1:", "Another label:", "Another label with wrapped text:"};
    for (String labelText : labelTexts) {
        Label fieldLabel = new Label (shell, SWT.RIGHT | SWT.WRAP | SWT.BORDER);
        fieldLabel.setText (labelText);
        GridData labelGridData = new GridData (GridData.HORIZONTAL_ALIGN_END);
        labelGridData.widthHint = 100;
        fieldLabel.setLayoutData (labelGridData);
        Text textField = new Text (shell, SWT.BORDER);
        GridData textGridData = new GridData (GridData.FILL_HORIZONTAL);
        textGridData.horizontalAlignment = GridData.HORIZONTAL_ALIGN_BEGINNING;
        textGridData.widthHint = 248;
        textField.setLayoutData (textGridData);
    }
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) display.sleep ();

    }
    display.dispose ();
}
----------------------------------------

public static void main (String [] args) {
    Display display = new Display ();
    Shell shell = new Shell (display);
    GridLayout layout = new GridLayout ();
    layout.numColumns = 2;
    shell.setLayout (layout);
    shell.setText ("Alignment Test");
    String [] labelTexts = new String [] {"label 1:", "Another label:", "Another label with wrapped text:"};
    for (String labelText : labelTexts) {
        StyledText fieldText = new StyledText (shell, SWT.RIGHT | SWT.WRAP | SWT.BORDER);
        fieldText.setText (labelText);
        GridData labelGridData = new GridData (GridData.HORIZONTAL_ALIGN_END);
        labelGridData.widthHint = 100;
        fieldText.setLayoutData (labelGridData);
        Text textField = new Text (shell, SWT.BORDER);
        GridData textGridData = new GridData (GridData.FILL_HORIZONTAL);
        textGridData.horizontalAlignment = GridData.HORIZONTAL_ALIGN_BEGINNING;
        textGridData.widthHint = 248;
        textField.setLayoutData (textGridData);
    }
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) display.sleep ();

    }
    display.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147856_3_18
50147769_50147902_6_25
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    String y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) System.out.println (y);

    }
}
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    if (Arrays.asList (names).contains (name)) {
        System.out.print (name);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147856_3_18
50147769_50147937_6_33
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    String y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) System.out.println (y);

    }
}
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    boolean found = false;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    for (int i = 0;
    i < names.length; ++ i) {
        if (names [i].equals (name)) {
            System.out.print (i);
            found = true;
        }
    }
    if (! found) System.out.println ("NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147856_3_18
50147769_50147998_3_27
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    String y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) System.out.println (y);

    }
}
----------------------------------------

public static void main (String args []) {
    String y;
    int x = 0;
    int found = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) {
            System.out.println ("index of " + a + " is :" + x);
            found ++;
        }
        x ++;
    }
    if (found == 0) System.out.println ("NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147902_6_25
50147769_50147937_6_33
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    if (Arrays.asList (names).contains (name)) {
        System.out.print (name);
    }
}
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    boolean found = false;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    for (int i = 0;
    i < names.length; ++ i) {
        if (names [i].equals (name)) {
            System.out.print (i);
            found = true;
        }
    }
    if (! found) System.out.println ("NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147902_6_25
50147769_50147998_3_27
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    if (Arrays.asList (names).contains (name)) {
        System.out.print (name);
    }
}
----------------------------------------

public static void main (String args []) {
    String y;
    int x = 0;
    int found = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) {
            System.out.println ("index of " + a + " is :" + x);
            found ++;
        }
        x ++;
    }
    if (found == 0) System.out.println ("NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50147769_50147937_6_33
50147769_50147998_3_27
Title: How to find if a string entered into scanner is in an array? 
----------------------------------------

public static void main (String [] args) {
    int y = 0;
    int x = 0;
    String name = "";
    boolean found = false;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    name = s.nextLine ();
    for (int i = 0;
    i < names.length; ++ i) {
        if (names [i].equals (name)) {
            System.out.print (i);
            found = true;
        }
    }
    if (! found) System.out.println ("NOT FOUND");

}
----------------------------------------

public static void main (String args []) {
    String y;
    int x = 0;
    int found = 0;
    Scanner s = new Scanner (System.in);
    String [] names = {"bob", "maxwell", "charley", "tomtomjack"};
    System.out.print ("Enter String Name:");
    y = s.nextLine ();
    for (String a : names) {
        if (a.equals (y)) {
            System.out.println ("index of " + a + " is :" + x);
            found ++;
        }
        x ++;
    }
    if (found == 0) System.out.println ("NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50151376_50152043_1_20
50151376_50153025_29_45
Title: Splitting string on spaces unless in double quotes but double quotes can have a preceding string attached 
----------------------------------------

public static void main (String [] args) {
    String test = "abc test=\"x y z\"   magic=\"  hello   \"   hola";
    Pattern pattern = Pattern.compile ("([^\\\"]+=\\\"[^\\\"]+\\\" )");
    Matcher matcher = pattern.matcher (test);
    int lastIndex = 0;
    while (matcher.find ()) {
        String [] parts = matcher.group (0).trim ().split ("=");
        boolean newLine = false;
        for (String string : parts [0].split ("\\s+")) {
            if (newLine) System.out.println ();

            newLine = true;
            System.out.print (string);
        }
        System.out.println ("=" + parts [1].replaceAll ("\\s", ""));
        lastIndex = matcher.end ();
    }
    System.out.println (test.substring (lastIndex).trim ());
}
----------------------------------------

public static void main (String [] args) {
    String test = "abc test=\"x y z\" magic=\" hello \" hola";
    StringTokenizer tokenizer = new StringTokenizer (test, "\"");
    boolean inQuotes = false;
    List < Object > out = new LinkedList < > ();
    while (tokenizer.hasMoreTokens ()) {
        final String token = tokenizer.nextToken ();
        if (inQuotes) {
            out.add (new QuotedString (token));
        } else {
            out.addAll (TokenizeWhitespace (token));
        }
        inQuotes = ! inQuotes;
    }
    System.out.println (joinAsStrings (out));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50160568_50160751_1_22
50160568_50160915_1_20
Title: Simon Says button color won't return to normal after button press 
----------------------------------------

public void flashButton (int color) {
    final ImageView colors = findViewById (R.id.buttonsImage);
    final int newColor = color;
    if (newColor == 1) colors.setImageResource (R.drawable.green_activated_png);

    if (newColor == 2) colors.setImageResource (R.drawable.yellow_activated_png);

    if (newColor == 3) colors.setImageResource (R.drawable.red_activated_png);

    if (newColor == 4) colors.setImageResource (R.drawable.blue_activated_png);

    System.out.println ("Flashed color: " + newColor);
    Handler handler = new Handler ();
    final Runnable r = new Runnable () {
        public void run () {
            colors.setImageResource (R.drawable.normal_buttons);
            System.out.println ("Returned Color.");
        }}

    ;
    handler.postDelayed (r, 1000);
}
----------------------------------------

public void flashButton (int color) {
    final ImageView colors = findViewById (R.id.buttonsImage);
    final int newColor = color;
    if (newColor == 1) colors.setImageResource (R.drawable.green_activated_png);

    if (newColor == 2) colors.setImageResource (R.drawable.yellow_activated_png);

    if (newColor == 3) colors.setImageResource (R.drawable.red_activated_png);

    if (newColor == 4) colors.setImageResource (R.drawable.blue_activated_png);

    Handler handler = new Handler ();
    final Runnable r = new Runnable () {
        public void run () {
            colors.setImageResource (R.drawable.normal_buttons);
        }}

    ;
    handler.postDelayed (r, 1000);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50171876_50172014_1_19
50171876_50172200_1_19
Title: "program to show if the value is alphabet then print ""Alphabet"" if it’s a number then print ""Digit"" and for other characters print ""Special Character""?" 
----------------------------------------

public static void main (String args []) {
    Scanner scanner = new Scanner (System.in);
    char char1 = scanner.next ().charAt (0);
    if ((char1 >= 48 && char1 <= 57) || char1 == 45) {
        System.out.print ("char is Digit");
    } else if ((char1 >= 'a' && char1 <= 'z') || (char1 >= 'A' && char1 <= 'Z')) {
        System.out.print ("char is Alphabet");
    } else {
        System.out.print ("char is special character");
    }

}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String char1 = String.valueOf (scanner.next ().charAt (0));
    if (char1.matches ("[0-9]") || char1.matches ("-[0-9]")) {
        System.out.print ("char is Digit");
    } else if (char1.matches ("[a-zA-Z]")) {
        System.out.print ("char is Alphabet");
    } else {
        System.out.print ("char is special character");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50173803_50174099_1_17
50173803_50175026_1_11
Title: Reversing a List via ListIterator 
----------------------------------------

public static < T > List < T > reverse (List < T > input) {
    ListIterator < T > it = input.listIterator ();
    ListIterator < T > itR = input.listIterator (input.size ());
    while (it.nextIndex () - itR.previousIndex () < 0) {
        T temp = input.get (it.nextIndex ());
        input.set (it.nextIndex (), input.get (itR.previousIndex ()));
        input.set (itR.previousIndex (), temp);
        it.next ();
        itR.previous ();
    }
    return input;
}
----------------------------------------

public static < T > List < T > reverse (List < T > input) {
    ListIterator < T > iterator = input.listIterator (input.size ());
    ListIterator < T > reversedIterator = input.listIterator ();
    for (int i = 0;
    i < input.size () / 2; i ++) {
        T previous = iterator.previous ();
        T next = reversedIterator.next ();
        iterator.set (next);
        reversedIterator.set (previous);
    }
    return input;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50173803_50174099_1_17
50173803_50175224_1_11
Title: Reversing a List via ListIterator 
----------------------------------------

public static < T > List < T > reverse (List < T > input) {
    ListIterator < T > it = input.listIterator ();
    ListIterator < T > itR = input.listIterator (input.size ());
    while (it.nextIndex () - itR.previousIndex () < 0) {
        T temp = input.get (it.nextIndex ());
        input.set (it.nextIndex (), input.get (itR.previousIndex ()));
        input.set (itR.previousIndex (), temp);
        it.next ();
        itR.previous ();
    }
    return input;
}
----------------------------------------

private static < T > List < T > reverse (List < T > list) {
    ListIterator < T > fIterator = list.listIterator ();
    ListIterator < T > bIterator = list.listIterator (list.size ());
    for (int i = 0;
    i < list.size () / 2; i ++) {
        T backward = bIterator.previous ();
        T forward = fIterator.next ();
        bIterator.set (forward);
        fIterator.set (backward);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5018997_5019025_2_14
5018997_5019082_1_18
Title: boolean recursion 
----------------------------------------

public boolean isDescendant (member x) {
    if (children.contains (x)) {
        return true;
    }
    for (Child c : children) {
        if (children.get (i).isDescendant (x)) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean isDescendant (member currentRoot, member x) {
    if (currentRoot.children ().contains (x)) {
        return true;
    }
    if (currentRoot.children ().isEmpty ()) {
        return false;
    }
    boolean found = false;
    for (Member child : currentRoot.children ()) {
        found = isDescendant (child, x);
        if (found) break;

    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50193933_50194325_128_139
50193933_50194342_8_50
Title: Getting the bounds of the text inside a jlabel 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    TextBounds bounds = calculateTextBounds (label);
    g2d.setColor (Color.RED);
    g2d.draw (bounds.getPaintBounds ());
    g2d.setColor (Color.GREEN);
    g2d.draw (bounds.getTextBounds ());
    g2d.setColor (Color.BLUE);
    g2d.draw (bounds.getIconBounds ());
    g2d.dispose ();
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics grid = g.create ();
    grid.setColor (Color.ORANGE);
    Rectangle viewR = new Rectangle ();
    viewR.width = getSize ().width;
    viewR.height = getSize ().height;
    Rectangle iconR = new Rectangle ();
    Rectangle textR = new Rectangle ();
    String clippedText = SwingUtilities.layoutCompoundLabel (this, grid.getFontMetrics (), getText (), getIcon (), getVerticalAlignment (), getHorizontalAlignment (), getVerticalTextPosition (), getHorizontalTextPosition (), viewR, iconR, textR, getIconTextGap ());
    int gridSize = 10;
    int start = iconR.x;
    int end = iconR.x + iconR.width;
    System.out.println ("Text bounds: " + textR);
    System.out.println ("Icon bounds: " + iconR);
    for (int i = start;
    i < end; i += gridSize) {
        grid.drawLine (i, iconR.y, i, iconR.y + iconR.height);
    }
    grid.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50197464_50197549_10_18
50197464_50197595_25_33
Title: Is it possible to avoid duplicate code when implementing methods for two similar class? 
----------------------------------------

private int countDead (ArrayList < LivingThing > things) {
    int totalCount = 0;
    for (LivingThing thing : things) {
        if (! thing.isAlive ()) {
            totalCount ++;
        }
    }
    return totalCount;
}
----------------------------------------

private int countDead (Collection < LiveObject > objects) {
    int totalCount = 0;
    for (LiveObject obj : objects) {
        if (obj.isAlive () == false) {
            totalCount += 1;
        }
    }
    return totalCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50197525_50198058_9_18
50197525_50199483_72_90
Title: Thread waiting to multiple threads 
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep (RANDOM.nextInt (20) * 1000);
            int sectionHeight = hedge.grow ();
            hedgeSizeListener.accept (sectionHeight);
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    synchronized (this) {
        while (! isStop) {
            if (Math.random () < 0.0000001) {
                incrementSize ();
            }
            if (getCurrentSize () >= 9) {
                notify ();
                try {
                    wait ();
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50218273_50218440_1_16
50218273_50218470_1_13
Title: Variable-Length Argument List passing generics and generic arrays as params - Java 
----------------------------------------

public static void print (Object...items) {
    for (Object item : items) {
        if (item.getClass ().isArray ()) {
            Object [] objs = primitiveArrayFrom (item);
            if (objs == null) {
                objs = (Object []) item;
            }
            for (Object obj : objs) {
                System.out.println (obj);
            }
        } else {
            System.out.println (item);
        }
    }
}
----------------------------------------

public static void print (Object...toPrint) {
    for (Object item : toPrint) {
        if (item.getClass () == int [].class) {
            System.out.println (Arrays.toString ((int []) item));
        } else if (item.getClass () == double [].class) {
            System.out.println (Arrays.toString ((double []) item));
        } else if (item instanceof Object []) {
            System.out.println (Arrays.toString ((Object []) item));
        } else {
            System.out.println (item);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50220868_50221005_2_35
50220868_50221420_91_105
Title: Prinitng matching information from 2 files in Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    File file = new File ("file.txt");
    File file2 = new File ("file2.txt");
    BufferedReader reader = new BufferedReader (new FileReader (file));
    BufferedReader reader2 = new BufferedReader (new FileReader (file2));
    String st, st2;
    Map < Integer, String > nameMap = new LinkedHashMap < > ();
    Map < Integer, String > majorMap = new LinkedHashMap < > ();
    while ((st = reader.readLine ()) != null) {
        System.out.println (st);
        String [] parts = st.split (" ");
        String name = parts [0];
        Integer id = Integer.parseInt (parts [1]);
        nameMap.put (id, name);
    }
    while ((st2 = reader2.readLine ()) != null) {
        System.out.println (st2);
        String [] parts = st2.split (" ");
        String name = parts [1];
        Integer id = Integer.parseInt (parts [0]);
        majorMap.put (id, name);
    }
    reader.close ();
    reader2.close ();
    nameMap.keySet ().stream ().forEach (id -> {
        System.out.println (nameMap.get (id) + " " + majorMap.get (id));
    })
}
----------------------------------------

public static void main (String [] args) throws Exception {
    File names = new File ("names.txt");
    File classes = new File ("classes.txt");
    Map < String, String > nameMap = fileToMap (names);
    Map < String, String > classMap = fileToMap (classes);
    Set < String > commonKeys = commonKeys (nameMap, classMap);
    Map < String, String > nameToClass = joinByKey (nameMap, classMap, commonKeys);
    System.out.println (nameToClass);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5022824_5022857_5_20
5022824_5022875_4_30
Title: How to fill a two Dimensional ArrayList in java with Integers? 
----------------------------------------

public static void main (String [] args) {
    List < List < Integer > > twoDim = new ArrayList < List < Integer > > ();
    String [] inputLines = {"0 1 0 1 0", "0 1 1 0 1", "0 0 0 1 0"};
    for (String line : inputLines) {
        List < Integer > row = new ArrayList < Integer > ();
        Scanner s = new Scanner (line);
        while (s.hasNextInt ()) row.add (s.nextInt ());

        twoDim.add (row);
    }
}
----------------------------------------

public static void main (String...args) {
    List < List < Integer > > array = new ArrayList < List < Integer > > ();
    Scanner input = new Scanner (System.in);
    out.println ("Enter n:");
    int n = input.nextInt ();
    out.println ("Enter m:");
    int m = input.nextInt ();
    out.println ("Enter the values:");
    for (int i = 0;
    i < n; i ++) {
        List < Integer > list = new ArrayList < Integer > ();
        array.add (list);
        for (int j = 0;
        j < m; j ++) {
            list.add (input.nextInt ());
        }
    }
    out.println ("Result:");
    out.println (array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5024012_5024023_1_13
5024012_5024052_1_11
Title: Building a Scanner with an embedded FileReader recursively in java 
----------------------------------------

public static Scanner getFileScanner () {
    Scanner input = new Scanner (System.in);
    Scanner fs = null;
    while (fs == null) {
        try {
            String file = input.nextLine ();
            Scanner fs = new Scanner (new File (file));
        } catch (FileNotFoundException fe) {
            System.out.println ("Invalid filename. Try another:");
        }
    }
    return fs;
}
----------------------------------------

public static Scanner getFileScanner () {
    Scanner input = new Scanner (System.in);
    File file = null;
    while (true) {
        file = new File (input.nextLine ());
        if (file.exists () && file.isFile ()) break;

        System.out.println ("Invalid filename. Try another:");
    }
    return new Scanner (new FileReader (file));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5024012_5024023_1_13
5024012_5024812_1_12
Title: Building a Scanner with an embedded FileReader recursively in java 
----------------------------------------

public static Scanner getFileScanner () {
    Scanner input = new Scanner (System.in);
    Scanner fs = null;
    while (fs == null) {
        try {
            String file = input.nextLine ();
            Scanner fs = new Scanner (new File (file));
        } catch (FileNotFoundException fe) {
            System.out.println ("Invalid filename. Try another:");
        }
    }
    return fs;
}
----------------------------------------

public static Scanner getFileScanner () throws NoSuchElementException {
    Scanner input = new Scanner (System.in);
    while (true) {
        String file = input.nextLine ();
        try {
            return new Scanner (new FileReader (file));
        } catch (FileNotFoundException fe) {
            System.out.println ("Invalid filename. Try another:");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5024012_5024052_1_11
5024012_5024812_1_12
Title: Building a Scanner with an embedded FileReader recursively in java 
----------------------------------------

public static Scanner getFileScanner () {
    Scanner input = new Scanner (System.in);
    File file = null;
    while (true) {
        file = new File (input.nextLine ());
        if (file.exists () && file.isFile ()) break;

        System.out.println ("Invalid filename. Try another:");
    }
    return new Scanner (new FileReader (file));
}
----------------------------------------

public static Scanner getFileScanner () throws NoSuchElementException {
    Scanner input = new Scanner (System.in);
    while (true) {
        String file = input.nextLine ();
        try {
            return new Scanner (new FileReader (file));
        } catch (FileNotFoundException fe) {
            System.out.println ("Invalid filename. Try another:");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50243655_50243758_3_28
50243655_50256533_5_38
Title: Next Line problems with spacing 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String [] students;
    int size;
    System.out.print ("Enter the amount of students in your class: ");
    size = scan.nextInt ();
    scan.nextLine ();
    students = new String [size];
    for (int i = 0;
    i < students.length; i ++) {
        System.out.print ("Enter a student name: ");
        students [i] = scan.nextLine ();
    }
    System.out.println ("Student Roster");
    for (int i = 0;
    i < students.length; i ++) {
        System.out.println (students [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    Student [] students;
    int size;
    String name;
    String lastname;
    System.out.println ("Enter the amount of students in your class: ");
    size = scan.nextInt ();
    students = new Student [size];
    Student student;
    for (int i = 0;
    i < students.length; i ++) {
        student = new Student ();
        System.out.println ("Enter a student name: ");
        name = scan.next ();
        System.out.println ("Enter a student lastname: ");
        lastname = scan.next ();
        student.setName (name);
        student.setLastname (lastname);
        students [i] = student;
    }
    System.out.println ("Student Roster");
    for (int i = 0;
    i < students.length; i ++) {
        System.out.println (students [i].getName ());
        System.out.println (students [i].getLastname ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50258948_50259319_11_23
50258948_50271366_18_29
Title: How do i access variable of void method of other class from another class 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    WebDriver d1 = null;
    if (FireFox.isSelected ()) {
        dispose ();
        System.setProperty ("webdriver.gecko.driver", "driverPath");
        d1 = new FirefoxDriver ();
    }
    this.setDriver (d1);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String driverSelected = "";
    if (FireFox.isSelected ()) {
        driverSelected = "firefox";
    } else if (Chrome.isSelected ()) {
        driverSelected = "chrome";
    }

    Browserselection bs = new Browserselection ();
    bs.BrowserSelection1 (driverSelected);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50259577_50259697_2_15
50259577_50259706_4_22
Title: Iterate over an array and get all multiples of 10 java 
----------------------------------------

public static void main (String [] args) {
    int [] myFirstArray = new int [100];
    for (int i = 0;
    i < myFirstArray.length; i ++) {
        myFirstArray [i] = i;
    }
    for (int i = 0;
    i < myFirstArray.length; i ++) {
        if (i % 10 == 0 && i != 0) {
            System.out.println (myFirstArray [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] myFirstArray = new int [100];
    int [] myMultiplesArray = new int [9];
    for (int i = 0;
    i < myFirstArray.length; i ++) {
        myFirstArray [i] = i;
    }
    int j = 0;
    for (int i : myFirstArray) {
        if (i % 10 == 0) {
            myMultiplesArray [j] = i;
            j ++;
        }
    }
    System.out.println (Arrays.toString (myMultiplesArray));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50268443_50269686_70_107
50268443_50270031_15_37
Title: Cannot to be cast json 
----------------------------------------

public static void main (String [] args) {
    try {
        FileReader reader = new FileReader (filePath);
        JSONParser jsonParser = new JSONParser ();
        Object jsonThing = jsonParser.parse (reader);
        if (jsonThing instanceof JSONArray) {
            searchJSONArray ((JSONArray) jsonThing);
        } else if (jsonThing instanceof JSONObject) {
            JSONObject jobj = (JSONObject) jsonThing;
            Set keyset = jobj.keySet ();
            for (Iterator iter2 = keyset.iterator ();
            iter2.hasNext ();) {
                String key = (String) iter2.next ();
                String value = (String) jobj.get (key);
                System.out.println (key + "=" + value);
            }
        }

    } catch (FileNotFoundException ex) {
        ex.printStackTrace ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    } catch (ParseException ex) {
        ex.printStackTrace ();
    } catch (NullPointerException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try (InputStream source = Files.newInputStream (Paths.get (FILE_PATH), StandardOpenOption.READ)) {
        ObjectMapper mapper = new ObjectMapper ();
        mapper.enable (SerializationFeature.INDENT_OUTPUT);
        List < Map > jo = mapper.readValue (source, List.class);
        jo.forEach ((elem) -> {
            System.out.println ("Transaction " + elem.get ("Transaction"));
            System.out.println ("Description " + elem.get ("Description"));
            System.out.println ("Co-no " + elem.get ("Co-no"));
            System.out.println ("Project " + elem.get ("Project"));
            System.out.println ("***************************************");
        });
        String jsonStr = mapper.writeValueAsString (jo);
        System.out.println ("Json content\n" + jsonStr);
    } catch (IOException | NullPointerException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50268602_50268715_1_12
50268602_50268959_1_12
Title: Decoding an encoded text 
----------------------------------------

private static String decode (String input) {
    StringBuilder b = new StringBuilder ();
    input = new StringBuilder (input).reverse ().toString ();
    for (int i = input.length () - 1;
    i >= 0; i --) {
        char c = input.charAt (i);
        int data = (int) c;
        data = data - i;
        data = (data) / 2;
        b.append ((char) data);
    }
    return b.reverse ().toString ();
}
----------------------------------------

private static String decode (String input) {
    StringBuilder b = new StringBuilder ();
    int length = input.length () - 1;
    for (int i = length;
    i >= 0; i --) {
        char c = input.charAt (i);
        int data = (int) c;
        data = data - (length - i);
        data = (data) / 2;
        b.append ((char) data);
    }
    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50273202_50273378_1_35
50273202_50273673_1_17
Title: Validate User Input Using Java Chars and Strings 
----------------------------------------

private static boolean validateCode (String code) {
    if (code.length () != 6) {
        return false;
    } else {
        boolean valid = true;
        if (code.charAt (0) != 'I' && code.charAt (0) != 'i') {
            System.out.println ("integer is not an I or i");
            valid = false;
        }
        if (code.charAt (1) != 'T' && code.charAt (1) != 't') {
            System.out.println ("integer is not a T or t");
            valid = false;
        }
        if (! Character.isDigit (code.charAt (2))) {
            System.out.println ("integer 3 is not a number");
            valid = false;
        }
        if (! Character.isDigit (code.charAt (3))) {
            System.out.println ("integer 4 is not a number");
            valid = false;
        }
        if (! Character.isDigit (code.charAt (4))) {
            System.out.println ("integer 5 is not a number");
            valid = false;
        }
        if (! Character.isDigit (code.charAt (5))) {
            System.out.println ("integer 6 is not a number");
            valid = false;
        }
        return valid;
    }
}
----------------------------------------

private static boolean validateCode (String code, String validCode) {
    boolean b = true;
    if (code.length () != 6) {
        return false;
    }
    for (int i = 0;
    i < code.length (); i ++) {
        if (code.toLowerCase ().charAt (i) != validCode.toLowerCase ().charAt (i) && i < 2) {
            System.out.println ("Character at " + i + " position is not an " + validCode.charAt (i));
            b = false;
        }
        if (Character.isDigit (code.charAt (i)) && i > 2) {
            System.out.println ("Character at " + i + " is not a digit");
            b = false;
        }
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50275598_50275720_1_42
50275598_50275918_1_24
Title: Doubly Linked List - RemoveFirst Method 
----------------------------------------

public boolean remove (Integer value) {
    if (isEmpty ()) {
        throw new NoSuchElementException ();
    }
    if (head == tail) {
        if (head.getValue () == value) {
            head = tail = null;
        } else {
            size --;
            return false;
        }
    }
    ListElement current = head;
    while (current != null) {
        if (current.getValue () == value) {
            if (current.getPrev () == null) {
                head = current.getNext ();
                current.setPrev (null);
            } else if (current.next () == null) {
                tail = current;
                current.setNext (null);
            } else {
                ListElement prev = current.getPrev ();
                ListElement next = current.getNext ();
                prev.setNext (next);
                next.setPrev (prev);
            }

            size --;
            return true;
        }
    }
    size --;
    return false;
}
----------------------------------------

public boolean remove (Integer value) {
    if (isEmpty ()) {
        throw new NoSuchElementException ();
    }
    ListElement found = head;
    while (null != found && ! found.value.equals (value)) {
        found = found.next;
    }
    if (null == found) {
        throw new NoSuchElementException ();
    }
    if (found.prev != null) found.prev.next = found.next;
    else head = found.next;

    if (found.next != null) found.next.prev = found.prev;
    else tail = found.prev;

    size --;
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50284663_50284724_1_23
50284663_50285187_1_36
Title: How do you print a specific line of text from a text file using math.random in Java? 
----------------------------------------

public void askFortune () {
    Scanner input = new Scanner ("fortunes.txt");
    double number = Math.random ();
    int num = (int) number * 100;
    num += 1;
    int counter = 0;
    String line = "";
    while (counter < number) {
        if (! input.hasNextLine ()) {
            break;
        }
        line = input.nextLine ();
        ++ counter;
    }
    if (counter == number) {
        System.out.println ("Found line:\n" + line);
    } else {
        System.out.println ("Input file does not have enough lines");
    }
}
----------------------------------------

public void askFortune () {
    BufferedReader input = null;
    double number = Math.random ();
    int num = (int) (number * 100);
    num += 1;
    int lineCount = 0;
    String line = "";
    try {
        String foundLine = null;
        input = new BufferedReader (new InputStreamReader (new FileInputStream ("fortunes.txt")));
        while ((line = input.readLine ()) != null) {
            if (num == lineCount) {
                foundLine = line;
                break;
            }
            lineCount ++;
        }
        if (foundLine != null) System.out.printf ("Found line[%d]:%s\n", num, foundLine);
        else System.out.println ("Wrong line number" + number + ":" + num);

    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50302549_50302600_1_12
50302549_50302602_7_19
Title: Call a method in the Static void main 
----------------------------------------

public static String [] getcontestants () {
    int numcontestants = 8;
    String name [] = new String [numcontestants];
    for (int j = 0;
    j < numcontestants; j ++) {
        Scanner ip = new Scanner (System.in);
        System.out.println ("Enter contestant's name");
        name [j] = ip.nextLine ();
    }
    return name;
}
----------------------------------------

public static String [] getcontestants (int numcontestants) {
    Scanner ip = new Scanner (System.in);
    String [] names = new String [numcontestants];
    for (int j = 0;
    j < numcontestants; j ++) {
        System.out.println ("Enter contestant's name");
        names [j] = ip.nextLine ();
    }
    ip.close ();
    return names;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50304174_50304188_2_15
50304174_50304234_2_13
Title: Same condition in C and Java but different Output 
----------------------------------------

public static void main (String [] args) {
    int i, j;
    for (i = 1; i <= 5; i ++) {
        for (j = 1; j <= 9; j ++) {
            if (j <= (6 - i) || j >= (4 + i)) System.out.print ("*");
            else System.out.print (" ");

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, j;
    for (i = 1; i <= 5; i ++) {
        for (j = 1; j <= 9; j ++) {
            if (j <= (6 - i) || j >= (4 + i)) System.out.print ("*");
            else System.out.print (" ");

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50304207_50385998_8_17
50304207_50390978_2_21
Title: Generic Functional Interface that accepts and returns same type 
----------------------------------------

public static void main (String [] args) {
    A a;
    B b;
    UnaryOperator < A > fooA = getFooFunction ();
    a = fooA.apply (new A ());
    UnaryOperator < B > fooB = getFooFunction ();
    b = fooB.apply (new B ());
    System.out.println (fooA == (Object) fooB);
}
----------------------------------------

public static void main (String [] args) {
    A a;
    B b;
    MonoFunction foo = new MonoFunction ((obj) -> {
        System.out.println (obj);
        return obj;
    });
    a = foo.apply (new A ());
    b = foo.apply (new B ());
    MonoFunction bad = new MonoFunction ((A obj) -> {
        System.out.println (obj);
        return obj;
    });
    a = bad.apply (a);
    b = bad.apply (b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50310905_50315311_1_19
50310905_52248780_1_48
Title: method/function to generate the column names for a spreadsheet application similar to Excel 
----------------------------------------

static List < String > columnNames (int n) {
    List < String > result = new ArrayList < String > ();
    String alphabets [] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
    StringBuilder sb = new StringBuilder ();
    for (int j = 0;
    j < n; j ++) {
        int index = j / 26;
        char ch = (char) (j % 26 + 'A');
        sb.append (ch);
        String item = "";
        if (index > 0) {
            item += alphabets [index - 1];
        }
        item += alphabets [j % 26];
        result.add (item);
    }
    sb.reverse ();
    return result;
}
----------------------------------------

static List < String > columnNames (int n) {
    List < String > result = new ArrayList < String > ();
    String [] alphs = new String [] {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
    if (n > - 1 && n < 27) {
        for (int i = 0;
        i < n; i ++) {
            result.add (alphs [i]);
        }
    } else {
        for (int i = 0;
        i < 26; i ++) {
            result.add (alphs [i]);
            n --;
        }
        for (int i = 0;
        i < result.size (); i ++) {
            for (int j = 0;
            j < 26; j ++) {
                if (n != 0) {
                    result.add (result.get (i).concat (alphs [j]));
                    n --;
                } else {
                    return result;
                }
            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5031804_6258351_114_123
5031804_6258351_92_112
Title: Creating gzip file using jzlib 
----------------------------------------

private static void deflate (ZStream z, int flushMode) throws IOException {
    int err = z.deflate (flushMode);
    if (err != JZlib.Z_OK) {
        boolean finish = JZlib.Z_FINISH == flushMode;
        if (finish && err == JZlib.Z_STREAM_END) return;

        throw new IOException (String.format ("Deflate exception:[%s]  msg: %s", err, z.msg));
    }
}
----------------------------------------

private void deflate (int flushMode) throws IOException {
    final boolean force = JZlib.Z_NO_FLUSH != flushMode;
    while (zip.avail_in > 0 || force) {
        byte [] b = this.buf;
        int remaining;
        {
            zip.next_out_index = 0;
            remaining = b.length;
        } zip.next_out = b;
        zip.avail_out = remaining;
        deflate (zip, this.finished ? JZlib.Z_FINISH : flushMode);
        int len = remaining - zip.avail_out;
        out.write (this.buf, 0, len);
        if (force) return;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50320686_50320739_1_15
50320686_50320957_1_20
Title: Ask user to input a double instead of a String without making the program shutdown 
----------------------------------------

public static double [] getscores () {
    int numscores = 8;
    double score [] = new double [numscores];
    for (int a = 0;
    a < numscores; a ++) {
        Scanner ip = new Scanner (System.in);
        System.out.println ("Enter a score");
        try {
            score [a] = ip.nextDouble ();
        } catch (InputMismatchException ime) {
            System.out.println ("Wrong input");
            a --;
        }
    }
    return score;
}
----------------------------------------

public static double [] getscores () {
    int numscores = 8;
    double score [] = new double [numscores];
    for (int a = 0;
    a < numscores; a ++) {
        Scanner ip = new Scanner (System.in);
        System.out.println ("Enter a score");
        boolean isDouble = false;
        do {
            try {
                score [a] = ip.nextDouble ();
                isDouble = true;
            } catch (InputMismatchException ex) {
                System.out.println ("You didn't enter a double, please try again");
            }
        } while (! isDouble);
    }
    return score;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50336770_50340797_1_40
50336770_50513022_31_51
Title: "Sort multiple arrays simultaneously ""in place""" 
----------------------------------------

public static void main (String [] args) {
    int array1 [] = {5, 1, 9, 3, 8};
    int array2 [] = {2, 0, 3, 6, 1};
    int array3 [] = {3, 1, 4, 5, 9};
    Integer [] I = new Integer [array1.length];
    for (int i = 0;
    i < I.length; i ++) I [i] = i;

    Arrays.sort (I, (i, j) -> array1 [i] - array1 [j]);
    for (int i = 0;
    i < I.length; i ++) {
        if (i != I [i]) {
            int t1 = array1 [i];
            int t2 = array2 [i];
            int t3 = array3 [i];
            int j;
            int k = i;
            while (i != (j = I [k])) {
                array1 [k] = array1 [j];
                array2 [k] = array2 [j];
                array3 [k] = array3 [j];
                I [k] = k;
                k = j;
            }
            array1 [k] = t1;
            array2 [k] = t2;
            array3 [k] = t3;
            I [k] = k;
        }
    }
    for (int i = 0;
    i < array1.length; i ++) {
        System.out.println ("array1 " + array1 [i] + " array2 " + array2 [i] + " array3 " + array3 [i]);
    }
}
----------------------------------------

public static void main (String args []) {
    myClass myClass1 = new myClass (0, "how", "I");
    myClass myClass2 = new myClass (2, "are", "am");
    myClass myClass3 = new myClass (8, "today", "thanks");
    myClass myClass4 = new myClass (5, "you", "fine");
    myClass [] myClasses = {myClass1, myClass2, myClass3, myClass4};
    sort_myClass (myClasses);
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.x + " ");
    }
    System.out.print ("\n");
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.source + " ");
    }
    System.out.print ("\n");
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.target + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50336770_50340797_1_40
50336770_50563839_7_30
Title: "Sort multiple arrays simultaneously ""in place""" 
----------------------------------------

public static void main (String [] args) {
    int array1 [] = {5, 1, 9, 3, 8};
    int array2 [] = {2, 0, 3, 6, 1};
    int array3 [] = {3, 1, 4, 5, 9};
    Integer [] I = new Integer [array1.length];
    for (int i = 0;
    i < I.length; i ++) I [i] = i;

    Arrays.sort (I, (i, j) -> array1 [i] - array1 [j]);
    for (int i = 0;
    i < I.length; i ++) {
        if (i != I [i]) {
            int t1 = array1 [i];
            int t2 = array2 [i];
            int t3 = array3 [i];
            int j;
            int k = i;
            while (i != (j = I [k])) {
                array1 [k] = array1 [j];
                array2 [k] = array2 [j];
                array3 [k] = array3 [j];
                I [k] = k;
                k = j;
            }
            array1 [k] = t1;
            array2 [k] = t2;
            array3 [k] = t3;
            I [k] = k;
        }
    }
    for (int i = 0;
    i < array1.length; i ++) {
        System.out.println ("array1 " + array1 [i] + " array2 " + array2 [i] + " array3 " + array3 [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] indexes = new int [] {0, 2, 8, 5};
    String [] sources = new String [] {"how", "are", "today", "you"};
    String [] targets = new String [] {"I", "am", "thanks", "fine"};
    ArrayList < myClass > myArr = new ArrayList < > ();
    for (int i = 0;
    i < indexes.length; i ++) {
        myArr.add (new myClass (indexes [i], sources [i], targets [i]));
    }
    Collections.sort (myArr, (mC1, mC2) -> mC1.getX () - mC2.getX ());
    for (int i = 0;
    i < myArr.size (); i ++) {
        indexes [i] = myArr.get (i).getX ();
        sources [i] = myArr.get (i).getSource ();
        targets [i] = myArr.get (i).getTarget ();
    }
    System.out.println (Arrays.toString (indexes));
    System.out.println (Arrays.toString (sources));
    System.out.println (Arrays.toString (targets));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50336770_50513022_31_51
50336770_50563839_7_30
Title: "Sort multiple arrays simultaneously ""in place""" 
----------------------------------------

public static void main (String args []) {
    myClass myClass1 = new myClass (0, "how", "I");
    myClass myClass2 = new myClass (2, "are", "am");
    myClass myClass3 = new myClass (8, "today", "thanks");
    myClass myClass4 = new myClass (5, "you", "fine");
    myClass [] myClasses = {myClass1, myClass2, myClass3, myClass4};
    sort_myClass (myClasses);
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.x + " ");
    }
    System.out.print ("\n");
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.source + " ");
    }
    System.out.print ("\n");
    for (myClass myClass_dummy : myClasses) {
        System.out.print (myClass_dummy.target + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] indexes = new int [] {0, 2, 8, 5};
    String [] sources = new String [] {"how", "are", "today", "you"};
    String [] targets = new String [] {"I", "am", "thanks", "fine"};
    ArrayList < myClass > myArr = new ArrayList < > ();
    for (int i = 0;
    i < indexes.length; i ++) {
        myArr.add (new myClass (indexes [i], sources [i], targets [i]));
    }
    Collections.sort (myArr, (mC1, mC2) -> mC1.getX () - mC2.getX ());
    for (int i = 0;
    i < myArr.size (); i ++) {
        indexes [i] = myArr.get (i).getX ();
        sources [i] = myArr.get (i).getSource ();
        targets [i] = myArr.get (i).getTarget ();
    }
    System.out.println (Arrays.toString (indexes));
    System.out.println (Arrays.toString (sources));
    System.out.println (Arrays.toString (targets));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5034311_30262036_45_58
5034311_48994125_271_309
Title: Multiple readers for InputStream in Java 
----------------------------------------

public int read (int readerId) throws IOException {
    if (readPositions.get (readerId) >= writePosition) {
        readjustBuffer ();
        buffer [writePosition ++] = source.read ();
    }
    int pos = readPositions.get (readerId);
    int b = buffer [pos];
    if (b != - 1) readPositions.set (readerId, pos + 1);

    return b;
}
----------------------------------------

public synchronized int read () throws IOException {
    if (! connected) {
        throw new IOException ("Pipe not connected");
    } else if (closedByReader) {
        throw new IOException ("Pipe closed");
    } else if (writeSide != null && ! writeSide.isAlive () && ! closedByWriter && (in < 0)) {
        throw new IOException ("Write end dead");
    }

    readSide = Thread.currentThread ();
    int trials = 2;
    while (in < 0) {
        if (closedByWriter) {
            return - 1;
        }
        if ((writeSide != null) && (! writeSide.isAlive ()) && (-- trials < 0)) {
            throw new IOException ("Pipe broken");
        }
        notifyAll ();
        try {
            wait (1000);
        } catch (InterruptedException ex) {
            throw new java.io.InterruptedIOException ();
        }
    }
    int ret = buffer [out ++] & 0xFF;
    if (out >= buffer.length) {
        out = 0;
    }
    if (in == out) {
        in = - 1;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5034311_30262036_45_58
5034311_48994125_335_379
Title: Multiple readers for InputStream in Java 
----------------------------------------

public int read (int readerId) throws IOException {
    if (readPositions.get (readerId) >= writePosition) {
        readjustBuffer ();
        buffer [writePosition ++] = source.read ();
    }
    int pos = readPositions.get (readerId);
    int b = buffer [pos];
    if (b != - 1) readPositions.set (readerId, pos + 1);

    return b;
}
----------------------------------------

public synchronized int read (byte b [], int off, int len) throws IOException {
    if (b == null) {
        throw new NullPointerException ();
    } else if (off < 0 || len < 0 || len > b.length - off) {
        throw new IndexOutOfBoundsException ();
    } else if (len == 0) {
        return 0;
    }

    int c = read ();
    if (c < 0) {
        return - 1;
    }
    b [off] = (byte) c;
    int rlen = 1;
    while ((in >= 0) && (len > 1)) {
        int available;
        if (in > out) {
            available = Math.min ((buffer.length - out), (in - out));
        } else {
            available = buffer.length - out;
        }
        if (available > (len - 1)) {
            available = len - 1;
        }
        System.arraycopy (buffer, out, b, off + rlen, available);
        out += available;
        rlen += available;
        len -= available;
        if (out >= buffer.length) {
            out = 0;
        }
        if (in == out) {
            in = - 1;
        }
    }
    return rlen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5034311_48994125_168_181
5034311_48994125_193_222
Title: Multiple readers for InputStream in Java 
----------------------------------------

protected synchronized void receive (int b) throws IOException {
    checkStateForReceive ();
    writeSide = Thread.currentThread ();
    if (in == out) awaitSpace ();

    if (in < 0) {
        in = 0;
        out = 0;
    }
    buffer [in ++] = (byte) (b & 0xFF);
    if (in >= buffer.length) {
        in = 0;
    }
}
----------------------------------------

synchronized void receive (byte b [], int off, int len) throws IOException {
    checkStateForReceive ();
    writeSide = Thread.currentThread ();
    int bytesToTransfer = len;
    while (bytesToTransfer > 0) {
        if (in == out) awaitSpace ();

        int nextTransferAmount = 0;
        if (out < in) {
            nextTransferAmount = buffer.length - in;
        } else if (in < out) {
            if (in == - 1) {
                in = out = 0;
                nextTransferAmount = buffer.length - in;
            } else {
                nextTransferAmount = out - in;
            }
        }

        if (nextTransferAmount > bytesToTransfer) nextTransferAmount = bytesToTransfer;

        assert (nextTransferAmount > 0);
        System.arraycopy (b, off, buffer, in, nextTransferAmount);
        bytesToTransfer -= nextTransferAmount;
        off += nextTransferAmount;
        in += nextTransferAmount;
        if (in >= buffer.length) {
            in = 0;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5034311_48994125_271_309
5034311_48994125_335_379
Title: Multiple readers for InputStream in Java 
----------------------------------------

public synchronized int read () throws IOException {
    if (! connected) {
        throw new IOException ("Pipe not connected");
    } else if (closedByReader) {
        throw new IOException ("Pipe closed");
    } else if (writeSide != null && ! writeSide.isAlive () && ! closedByWriter && (in < 0)) {
        throw new IOException ("Write end dead");
    }

    readSide = Thread.currentThread ();
    int trials = 2;
    while (in < 0) {
        if (closedByWriter) {
            return - 1;
        }
        if ((writeSide != null) && (! writeSide.isAlive ()) && (-- trials < 0)) {
            throw new IOException ("Pipe broken");
        }
        notifyAll ();
        try {
            wait (1000);
        } catch (InterruptedException ex) {
            throw new java.io.InterruptedIOException ();
        }
    }
    int ret = buffer [out ++] & 0xFF;
    if (out >= buffer.length) {
        out = 0;
    }
    if (in == out) {
        in = - 1;
    }
    return ret;
}
----------------------------------------

public synchronized int read (byte b [], int off, int len) throws IOException {
    if (b == null) {
        throw new NullPointerException ();
    } else if (off < 0 || len < 0 || len > b.length - off) {
        throw new IndexOutOfBoundsException ();
    } else if (len == 0) {
        return 0;
    }

    int c = read ();
    if (c < 0) {
        return - 1;
    }
    b [off] = (byte) c;
    int rlen = 1;
    while ((in >= 0) && (len > 1)) {
        int available;
        if (in > out) {
            available = Math.min ((buffer.length - out), (in - out));
        } else {
            available = buffer.length - out;
        }
        if (available > (len - 1)) {
            available = len - 1;
        }
        System.arraycopy (buffer, out, b, off + rlen, available);
        out += available;
        rlen += available;
        len -= available;
        if (out >= buffer.length) {
            out = 0;
        }
        if (in == out) {
            in = - 1;
        }
    }
    return rlen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50347417_50348501_1_28
50347417_50349168_1_18
Title: Exclude extensions in filename filter in Java 
----------------------------------------

private String [] getFileListing (String servers) throws IOException {
    Properties prop = new Properties ();
    String propFileName = "config.properties";
    InputStream input = getClass ().getClassLoader ().getResourceAsStream (propFileName);
    prop.load (input);
    if (servers.equals ("MS1")) {
        File f = new File (prop.getProperty ("path.MS1"));
        String [] list = f.list (new FilenameFilter () {
            public boolean accept (File dir) {
                return ! (dir.toLowerCase ().endsWith (".gz") || dir.endsWith (".sh")) && dir.isFile ();
            }}

        );
        return list;
    } else {
        File f = new File (prop.getProperty ("path.MS2"));
        String [] list = f.list (new FilenameFilter () {
            public boolean accept (File dir) {
                return ! (dir.toLowerCase ().endsWith (".gz") || dir.endsWith (".sh")) && dir.isFile ();
            }}

        );
        return list;
    }
}
----------------------------------------

private String [] getFileListing (String servers) throws IOException {
    List < String > allowedExtensions = Arrays.asList ("log txt".split (" "));
    Properties prop = new Properties ();
    String propFileName = "config.properties";
    InputStream input = getClass ().getClassLoader ().getResourceAsStream (propFileName);
    prop.load (input);
    File f = new File (prop.getProperty ("path.ms2"));
    if (servers.equals ("MS1")) {
        f = new File (prop.getProperty ("path." + servers));
    }
    String [] list = f.list (new FilenameFilter () {
        public boolean accept (File dir, String name) {
            return allowedExtensions.contains (name.substring (name.lastIndexOf (".") + 1, name.length ()));
        }}

    );
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50361758_50361797_1_12
50361758_50361840_8_21
Title: How Can Print a Visualization to Factorial of a Number with Recursion 
----------------------------------------

public static long factorial (int n) {
    try {
        System.out.println ("factorial(" + n + ")");
        if (n == 1) {
            System.out.println ("return 1");
            return 1;
        }
        return n * factorial (n - 1);
    } finally {
        System.out.println ("return " + n);
    }
}
----------------------------------------

private static long factorial (int n, int depth) {
    String spaces = repeat (' ', depth);
    System.out.print (spaces);
    System.out.println ("factorial(" + n + ")");
    if (n <= 1) {
        System.out.println (spaces + " return 1");
        return 1;
    }
    long fac = factorial (n - 1, depth + 1);
    System.out.print (spaces);
    System.out.printf ("return %d * %d = %d%n", n, fac, n * fac);
    return n * fac;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50362418_50362572_6_26
50362418_50422107_6_23
Title: printStars method with recursion 
----------------------------------------

public static void printStars (int count) {
    if (count == 0) {
    } else {
        int tempCount = count;
        while (tempCount > 0) {
            System.out.print ("*");
            tempCount --;
        }
        System.out.println ();
        printStars (count - 1);
        while (tempCount < count) {
            System.out.print ("*");
            tempCount ++;
        }
        System.out.println ();
    }
}
----------------------------------------

public static void printStars (int count, int max, int increment) {
    for (int i = 0;
    i < count; i ++) {
        System.out.print ("*");
    }
    count += increment;
    if (count == 0) {
        increment = - increment;
    } else {
        System.out.println ("");
    }
    if (count > max) {
        return;
    }
    printStars (count, max, increment);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50365790_50368275_6_14
50365790_50369427_3_16
Title: how can I multiply a and b with my recursive method? 
----------------------------------------

public static void main (String [] args) {
    Terminal.printLine ("Please enter n , a and b ");
    int n = Integer.parseInt (args [0]);
    a = Integer.parseInt (args [1]);
    b = Integer.parseInt (args [2]);
    for (int i = 1;
    i <= n; i ++) Terminal.printLine (i + "," + recursiv (n));

}
----------------------------------------

public static void main (String [] args) {
    try {
        System.out.println ("Please enter n, a and b");
        int n = Integer.parseInt (args [0]);
        int a = Integer.parseInt (args [1]);
        int b = Integer.parseInt (args [2]);
        for (int i = 1;
        i <= n; i ++) {
            System.out.println ("i= " + i + "\tpi= " + result (a, b, i));
        }
    } catch (NumberFormatException e) {
        System.out.println ("Invalid Input!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50368736_50368809_1_14
50368736_50368878_1_16
Title: How does returning a value work in a recursive method? [Java] 
----------------------------------------

private boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    System.out.println ("New Release [Y/N]? ");
    String movieType = sc.nextLine ();
    switch (movieType) {
        case "Y" :
        case "y" :
            return true;
        case "N" :
        case "n" :
            return false;
        default :
            return nrCheck ();
    }
}
----------------------------------------

private boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    boolean isNewRelease;
    System.out.println ("New Release [Y/N]? ");
    menuRedirect (movieType);
    do {
        String movieType = sc.nextLine ();
    } while (! movieType.equalsIgnoreCase ("Y") && ! movieType.equalsIgnoreCase ("N"));
    isNewRelease = movieType.equalsIgnoreCase ("Y") ? true : false;
    return isNewRelease;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50368736_50368809_1_14
50368736_50369076_1_35
Title: How does returning a value work in a recursive method? [Java] 
----------------------------------------

private boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    System.out.println ("New Release [Y/N]? ");
    String movieType = sc.nextLine ();
    switch (movieType) {
        case "Y" :
        case "y" :
            return true;
        case "N" :
        case "n" :
            return false;
        default :
            return nrCheck ();
    }
}
----------------------------------------

private Boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    Boolean isNewRelease = null;
    while (isNewRelease == null) {
        System.out.println ("New Release [Y/N]? ");
        String movieType = sc.nextLine ();
        menuRedirect (movieType);
        switch (movieType) {
            case "Y" :
            case "y" :
                isNewRelease = true;
                break;
            case "N" :
            case "n" :
                isNewRelease = false;
                break;
            default :
                System.out.println ("Try Again");
                isNewRelease = null;
                break;
        }
    }
    return isNewRelease;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50368736_50368878_1_16
50368736_50369076_1_35
Title: How does returning a value work in a recursive method? [Java] 
----------------------------------------

private boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    boolean isNewRelease;
    System.out.println ("New Release [Y/N]? ");
    menuRedirect (movieType);
    do {
        String movieType = sc.nextLine ();
    } while (! movieType.equalsIgnoreCase ("Y") && ! movieType.equalsIgnoreCase ("N"));
    isNewRelease = movieType.equalsIgnoreCase ("Y") ? true : false;
    return isNewRelease;
}
----------------------------------------

private Boolean nrCheck () {
    Scanner sc = new Scanner (System.in);
    Boolean isNewRelease = null;
    while (isNewRelease == null) {
        System.out.println ("New Release [Y/N]? ");
        String movieType = sc.nextLine ();
        menuRedirect (movieType);
        switch (movieType) {
            case "Y" :
            case "y" :
                isNewRelease = true;
                break;
            case "N" :
            case "n" :
                isNewRelease = false;
                break;
            default :
                System.out.println ("Try Again");
                isNewRelease = null;
                break;
        }
    }
    return isNewRelease;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50374500_50376308_1_13
50374500_50377072_1_13
Title: Check generic type before casting at runtime 
----------------------------------------

public static void main (String [] args) {
    Expression left1 = new BasicExpression (ScriptObject.of (42));
    Expression right1 = new BasicExpression (ScriptObject.of (3));
    Expression sum = createSumExpression (left1, right1);
    System.out.printf ("%s + %s = %s%n", left1.getValue (), right1.getValue (), sum.getValue ());
    Expression left2 = new BasicExpression (ScriptObject.of (true));
    Expression right2 = new BasicExpression (ScriptObject.of (false));
    Expression and = createAndExpression (left2, right2);
    System.out.printf ("%s && %s = %s%n", left2.getValue (), right2.getValue (), and.getValue ());
    createAndExpression (left1, right2).getValue ();
}
----------------------------------------

public static void main (String [] args) {
    IntegerExpressionFactory integerExpressionFactory = new IntegerExpressionFactory ();
    Expression < Integer > left1 = new BasicExpression < > (42);
    Expression < Integer > right1 = new BasicExpression < > (3);
    Expression < Integer > sum = integerExpressionFactory.createSumExpression (left1, right1);
    System.out.printf ("%d + %d = %d%n", left1.getValue (), right1.getValue (), sum.getValue ());
    integerExpressionFactory.createAndExpression (left1, right1);
    Expression < Boolean > left2 = new BasicExpression < > (true);
    Expression < Boolean > right2 = new BasicExpression < > (false);
    integerExpressionFactory.createAndExpression (left2, right2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50383176_50383354_6_40
50383176_50383472_9_58
Title: How to add the bonus? 
----------------------------------------

public static void main (String [] args) {
    String phrases;
    int salary = 0;
    try {
        FileReader in = new FileReader ("bonus.txt");
        BufferedReader readFile = new BufferedReader (in);
        while ((phrases = readFile.readLine ()) != null) {
            System.out.println (phrases);
            phrases = phrases.trim ().replaceAll ("[ ]{2,}", " ");
            String splitStr [] = phrases.split (" ");
            double bonus;
            salary = Integer.parseInt (splitStr [1]);
            if (splitStr [2].contains ("1")) {
                bonus = salary / 0.03;
                System.out.println ("Bonus: " + bonus);
            } else if (splitStr [2].contains ("2")) {
                bonus = salary / 0.08;
                System.out.println ("Bonus: " + bonus);
            } else if (splitStr [2].contains ("3")) {
                bonus = salary / 0.20;
                System.out.println ("Bonus: " + bonus);
            }

        }
        readFile.close ();
        in.close ();
    } catch (IOException e) {
        System.out.println ("Problem reading file.");
        System.err.println ("IOException: " + e.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String name, phrase, grade;
    double bonus = 0;
    int salary = 0;
    BufferedReader readFile = null;
    try {
        readFile = new BufferedReader (new FileReader ("resource/aa/employeeBonus.txt"));
        while ((phrase = readFile.readLine ()) != null) {
            StringTokenizer stTok = new StringTokenizer (phrase, " \t");
            name = stTok.nextToken ();
            salary = Integer.valueOf (stTok.nextToken ()).intValue ();
            grade = stTok.nextToken ();
            if (grade != null && ! grade.equals ("")) {
                if (grade.equals ("1")) {
                    bonus = salary / 0.03;
                } else if (grade.equals ("2")) {
                    bonus = salary / 0.08;
                } else if (grade.equals ("3")) {
                    bonus = salary / 0.20;
                }

                System.out.printf ("name[%s]salary[%d]Bonus[%f] \n", name, salary, bonus);
            }
        }
    } catch (IOException e) {
        System.out.println ("Problem reading file.");
        System.err.println ("IOException: " + e.getMessage ());
    } finally {
        try {
            readFile.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50405211_50405292_1_13
50405211_50405750_1_16
Title: String to Date Conversion mm/dd/yy to YYYY-MM-DD in java 
----------------------------------------

public static Date stringToDateLinen (String dateVlaue) {
    Date date = null;
    SimpleDateFormat formatter = new SimpleDateFormat ("dd/MM/yy");
    try {
        date = formatter.parse (dateVlaue);
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    return date;
}
----------------------------------------

public static String stringToDateLinen (String dateVlaue) {
    Date date = null;
    SimpleDateFormat formatter = new SimpleDateFormat ("dd/mm/yy");
    String dateString = null;
    try {
        date = formatter.parse (dateVlaue);
        SimpleDateFormat formatter1 = new SimpleDateFormat ("yyyy-MM-dd");
        dateString = formatter1.format (date);
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    return dateString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50407274_50407762_1_17
50407274_50408413_6_48
Title: Regex to get particular values from a string data 
----------------------------------------

public static void main (String [] args) {
    String str = "abc def \n" + "key=123 \n " + "pass=456 \n" + "not working";
    String [] sarray = str.split ("\\r?\\n");
    for (String eachline : sarray) {
        System.out.println ("line " + " : " + eachline);
        if (eachline.contains ("=")) {
            String [] sarray2 = eachline.split ("=");
            System.out.println ("key:" + sarray2 [0] + ":Value:" + sarray2 [1]);
        }
    }
    System.out.println ("" + sarray.length);
}
----------------------------------------

public static void main (String [] args) {
    String input = "dat /var/france.log\n" + "\n" + "exit\n" + "\n" + "root@france24:~# \n" + "root@france24:~# dat /var/france.log\n" + "bluetooth_mac=45h6kuu\n" + "franceIP=testMarmiton\n" + "build_type=BFD\n" + "france_mac=F4:0E:83:35:E8:D1\n" + "seloger_mac=F4:0E:83:35:E8:D0\n" + "tdVersion=1.2\n" + "td_number=45G67j\n" + "france_mac=fjdjjjgj\n" + "logo_mac=tiuyiiy\n" + "root@france24:~# \n" + "root@france24:~# exit\n" + "logout\n" + "Connection to testMarmiton closed.\n" + "\n" + "Disconnected channel and session";
    String [] keys = {"bluetooth_mac", "build_type", "tdVersion", "seloger_mac", "france_mac"};
    HashMap < String, String > map = new HashMap < > ();
    for (String key : keys) {
        String value = getValueOf (input, key);
        if (value != null) map.put (key, value);

    }
    for (String key : keys) System.out.println (key + " = " + map.get (key));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50457159_50457260_5_20
50457159_50457556_2_28
Title: generate bank account number with random 
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    String card = "BE";
    for (int i = 0;
    i < 14; i ++) {
        int n = rand.nextInt (10) + 0;
        card += Integer.toString (n);
    }
    for (int i = 0;
    i < 16; i ++) {
        if (i % 4 == 0) System.out.print (" ");

        System.out.print (card.charAt (i));
    }
}
----------------------------------------

public static void main (String args []) {
    String start = "BE";
    Random value = new Random ();
    int r1 = value.nextInt (10);
    int r2 = value.nextInt (10);
    start += Integer.toString (r1) + Integer.toString (r2) + " ";
    int count = 0;
    int n = 0;
    for (int i = 0;
    i < 12; i ++) {
        if (count == 4) {
            start += " ";
            count = 0;
        } else n = value.nextInt (10);

        start += Integer.toString (n);
        count ++;
    }
    System.out.println (start);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50462388_50463786_41_57
50462388_50463786_5_19
Title: How to Compare 2 LinkedHashMap and get difference in keys & values? 
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < String, String > map1 = new LinkedHashMap < > ();
    map1.put ("A", "a");
    map1.put ("B", "b");
    map1.put ("C", "c");
    LinkedHashMap < String, String > map2 = new LinkedHashMap < > ();
    map2.put ("A", "a");
    map2.put ("C", "c");
    map2.put ("B", "r");
    map2.put ("Z", "z");
    MapCompare mapCompare = new MapCompare ();
    mapCompare.main (map1, map2);
    System.out.println ("diff: " + mapCompare.getDifferencesMap ());
    System.out.println ("extra: " + mapCompare.getExtraMap ());
}
----------------------------------------

private void main (LinkedHashMap < String, String > map1, LinkedHashMap < String, String > map2) {
    this.differencesMap = new LinkedHashMap < > ();
    this.extraMap = new LinkedHashMap < > ();
    Set < Map.Entry < String, String > > set1 = ((LinkedHashMap < String, String >) map1.clone ()).entrySet ();
    Set < Map.Entry < String, String > > set2 = ((LinkedHashMap < String, String >) map2.clone ()).entrySet ();
    set1.removeAll (set2);
    compare (set1, map2);
    set1 = map1.entrySet ();
    set2.removeAll (set1);
    compare (set2, map1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50475385_50475629_1_10
50475385_50475868_1_20
Title: onClickListner in RecyclerViewer 
----------------------------------------

@Override
public void onBindViewHolder (ExampleViewHolder holder, int position) {
    holder.relativelayout.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Intent i = new Intent (context, NextActivity.class);
            startactivity (i);
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (ExampleViewHolder holder, int position) {
    ExampleItem currentItem = mExampleList.get (position);
    holder.mImageView.setImageResource (currentItem.getImageResource ());
    holder.mTextView1.setText (currentItem.getText1 ());
    holder.mTextView2.setText (currentItem.getText2 ());
    holder.mTextView3.setText (currentItem.getText3 ());
    holder.itemView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Intent intent = new Intent (context, SecondActivity.class);
            startactivity (intent);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50485993_50486140_1_29
50485993_50486237_1_35
Title: Improper output while filtering a hashmap 
----------------------------------------

public static void main (String [] args) {
    String [] valArr;
    String ky;
    Map < String, String > hmap = new HashMap < String, String > ();
    List < String > filtered = new ArrayList < String > ();
    hmap.put ("Table1", "Table1:SSN1,SSN2,SSN3,SSN4,SSN5");
    hmap.put ("Table2", "Table2:SSN1,SSN4,SSN2,SSN5,SSN8,SSN9,SSN10");
    hmap.put ("Table3", "Table3:SSN4,SSN1");
    hmap.put ("Table4", "Table4:SSN5,SSN6,SSN7");
    hmap.put ("Table5", "Table5:SSN8,SSN1,SSN5,SSN2");
    if (args.length > 0) {
        for (String ssname : args) {
            for (Entry < String, String > entry : hmap.entrySet ()) {
                if (entry.getValue ().contains (ssname)) {
                    ky = entry.getKey ();
                    valArr = entry.getValue ().split (":");
                    filtered.add (valArr [0] + ":" + ssname);
                }
            }
        }
    }
    for (String iter : filtered) {
        System.out.println (iter.split (":") [0] + "->" + iter);
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] valArr;
    String ky;
    Map < String, String > hmap = new HashMap < String, String > ();
    Map < String, String > filtered = new HashMap < String, String > ();
    hmap.put ("Table1", "Table1:SSN1,SSN2,SSN3,SSN4,SSN5");
    hmap.put ("Table2", "Table2:SSN1,SSN4,SSN2,SSN5,SSN8,SSN9,SSN10");
    hmap.put ("Table3", "Table3:SSN4,SSN1");
    hmap.put ("Table4", "Table4:SSN5,SSN6,SSN7");
    hmap.put ("Table5", "Table5:SSN8,SSN1,SSN5,SSN2");
    if (args.length > 0) {
        for (String ssname : args) {
            for (Entry < String, String > entry : hmap.entrySet ()) {
                if (entry.getValue ().contains (ssname)) {
                    ky = entry.getKey ();
                    valArr = entry.getValue ().substring (entry.getValue ().indexOf (":")).split (",");
                    for (String val : valArr) {
                        if (val.equals (ssname)) {
                            filtered.put (ky, ky + ":" + ssname);
                        }
                    }
                }
            }
        }
    }
    for (String iter : filtered.keySet ()) {
        String key = iter.toString ();
        String value = filtered.get (key).toString ();
        System.out.println (key + "->" + value);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50491097_50491291_4_18
50491097_50491505_7_22
Title: scanner error for alphabets 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("enter input:");
    String qty = input.nextLine ();
    System.out.println (" input =" + qty);
    try {
        Double.parseDouble (qty);
        System.out.println ("correct format");
    } catch (NumberFormatException e) {
        System.out.println ("Wrong format");
    }
}
----------------------------------------

public static void main (String [] args) {
    double qty;
    while (true) {
        try {
            System.out.println ("Please enter the qty:");
            qty = IN.nextDouble ();
            System.out.println ("You entered " + qty);
        } catch (Exception e) {
            System.out.println ("Please input the number in double format");
            IN.next ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50525358_50525701_4_16
50525358_50525906_7_31
Title: I Would Like To Have A Single Button Display A Different Line Of Text Each Consecutive Time It's Pressed in Android Studio 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.content_layout_id);
    et = (EditText) findViewById (R.id.edittext);
    button = (Button) findViewById (R.id.button_id);
    button.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            et.setText ("New text");
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.content_layout_id);
    et = (EditText) findViewById (R.id.edittext);
    button1 = (Button) findViewById (R.id.button1);
    button1.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            CLICKS ++;
            switch (clicks) {
                case 1 :
                    et.setText ("Pick a number");
                    break;
                case 2 :
                    et.setText ("Add 15");
                    break;
                case 3 :
                    et.setText ("Multiply times 5");
                    break;
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50536790_50547548_40_60
50536790_52463435_3_33
Title: Using visitor pattern instead of casting 
----------------------------------------

public static void main (String [] args) {
    Animal dog = new Dog ();
    Animal cat = new Cat ();
    AnimalVisitor < Dog > dogFinder = new AnimalVisitor < Dog > () {
        @Override
        public Optional < Dog > visit (Dog dog) {
            return Optional.of (dog);
        }}

    ;
    AnimalVisitor < Void > dogPrinter = new AnimalVisitor < Void > () {
        @Override
        public Optional < Void > visit (Dog dog) {
            System.out.println ("Found dog " + dog);
            return Optional.empty ();
        }}

    ;
    System.out.println (dog.accept (dogFinder).findAny ());
    System.out.println (cat.accept (dogFinder).findAny ());
    dog.accept (dogPrinter);
    cat.accept (dogPrinter);
}
----------------------------------------

public static void main (String [] args) {
    Animal dog = new Dog ();
    Animal cat = new Cat ();
    AnimalVisitor < Dog > dogFinder = Optional :: of;
    Optional fido = dog.accept (dogFinder).findAny ();
    Optional felix = cat.accept (dogFinder).findAny ();
    System.out.println (fido);
    System.out.println (felix);
    felix.ifPresent (a -> System.out.printf ("Found %s\n", a));
    fido.ifPresent (a -> System.out.printf ("Found %s\n", a));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50542715_50542739_1_13
50542715_50542784_1_14
Title: "Do i also need to return string outside if-else condition when the return type is String" 
----------------------------------------

public String isValidID (String id) {
    String result = "right";
    if (getId ().length () != 6) {
        result = "wrong";
    } else {
        for (int i = 0;
        i < getId ().length (); i ++) {
            if (Id.charAt (i) > '9' || Id.charAt (i) < '0') result = "wrong";

        }
    }
    return result;
}
----------------------------------------

public String isValidID (String id) {
    if (getId ().length () != 6) {
        return "wrong";
    } else {
        for (int i = 0;
        i < getId ().length (); i ++) {
            if (Id.charAt (i) > '9' || Id.charAt (i) < '0') return "wrong";

        }
    }
    return "right";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50545592_50546249_38_54
50545592_50547473_12_23
Title: android.view.WindowManager$BadTokenException error while creating dialog box 
----------------------------------------

public AlertDialog showDialog (String title, String msg, String btn1, String btn2, DialogInterface.OnClickListener listener1, DialogInterface.OnClickListener listener2) {
    if (liveActivity == null) return null;

    AlertDialog.Builder builder = new AlertDialog.Builder (liveActivity).setTitle (title).setMessage (msg).setCancelable (false).setPositiveButton (btn1, listener1);
    if (btn2 != null) builder.setNegativeButton (btn2, listener2);

    AlertDialog alert = builder.create ();
    alert.show ();
    return alert;
}
----------------------------------------

public void showDialog () {
    AlertDialog.Builder b = new AlertDialog.Builder (mActivity);
    b.setTitle ("Title");
    b.setMessage ("message");
    b.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int which) {
            Log.e (TAG, "showDialog : onClick");
        }}

    );
    b.create ().show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50554459_50554801_11_22
50554459_50554856_1_16
Title: Java – Working with 2 dimensional array and constructor (Beginner) 
----------------------------------------

public void fillArray () {
    for (int row = 0, i = size - 1;
    row < size; row ++, i --) {
        for (int col = 0, j = size - 1;
        col < size; col ++, j --) {
            if (row == col || row == j) field [row] [col] = '*';
            else if (col > row) field [row] [col] = col < i ? '1' : '2';
            else field [row] [col] = col > i ? '3' : '4';

        }
    }
}
----------------------------------------

public void fillArray () {
    int fS = field.length;
    char c = ' ';
    int len = fS - 1;
    for (int row = 0;
    row < fS; row ++) for (int col = 0;
    col < fS; col ++) {
        if (row == col || row + col == len) c = '*';

        if (row < col && row < len - col) c = '1';

        if (row < col && row > len - col) c = '2';

        if (row > col && row > len - col) c = '3';

        if (row > col && row < len - col) c = '4';

        field [row] [col] = c;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50558635_50559261_111_135
50558635_50632943_137_160
Title: "Cannot change long period for timer.scheduleAtFixedRate(TimerTask task long delay long period) while my program is running" 
----------------------------------------

private void repain () {
    offScrGraph.setColor (Color.BLACK);
    offScrGraph.fillRect (0, 0, jPanel2.getWidth (), jPanel2.getHeight ());
    for (int i = 0;
    i < hei; i ++) {
        for (int j = 0;
        j < wid; j ++) {
            if (currentMove [i] [j]) {
                offScrGraph.setColor (Color.getHSBColor ((float) Math.random (), .8f, .8f));
                int x = j * jPanel2.getWidth () / wid;
                int y = i * jPanel2.getHeight () / hei;
                offScrGraph.fillRect (x, y, jPanel2.getWidth () / wid, jPanel2.getHeight () / hei);
            }
        }
    }
    offScrGraph.setColor (Color.BLACK);
    for (int i = 1;
    i < hei; i ++) {
        int y = i * jPanel2.getHeight () / hei;
        offScrGraph.drawLine (0, y, jPanel2.getWidth (), y);
    }
    for (int j = 1;
    j < wid; j ++) {
        int x = j * jPanel2.getWidth () / wid;
        offScrGraph.drawLine (x, 0, x, jPanel2.getHeight ());
    }
    jPanel2.getGraphics ().drawImage (offScrImg, 0, 0, jPanel2);
}
----------------------------------------

private void repain () {
    offScrGraph.setColor (Color.BLACK);
    offScrGraph.fillRect (0, 0, jPanel2.getWidth (), jPanel2.getHeight ());
    for (int i = 0;
    i < hei; i ++) {
        for (int j = 0;
        j < wid; j ++) {
            if (currentMove [i] [j]) {
                offScrGraph.setColor (Color.getHSBColor ((float) Math.random (), .8f, .8f));
                int x = j * jPanel2.getWidth () / wid;
                int y = i * jPanel2.getHeight () / hei;
                offScrGraph.fillRect (x, y, jPanel2.getWidth () / wid, jPanel2.getHeight () / hei);
            }
        }
    }
    offScrGraph.setColor (Color.BLACK);
    for (int i = 1;
    i < hei; i ++) {
        int y = i * jPanel2.getHeight () / hei;
        offScrGraph.drawLine (0, y, jPanel2.getWidth (), y);
    }
    for (int j = 1;
    j < wid; j ++) {
        int x = j * jPanel2.getWidth () / wid;
        offScrGraph.drawLine (x, 0, x, jPanel2.getHeight ());
    }
    jPanel2.getGraphics ().drawImage (offScrImg, 0, 0, jPanel2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50558635_50559261_160_167
50558635_50632943_344_353
Title: "Cannot change long period for timer.scheduleAtFixedRate(TimerTask task long delay long period) while my program is running" 
----------------------------------------

private void jPanel2MouseDragged (java.awt.event.MouseEvent evt) {
    int j = wid * evt.getX () / jPanel2.getWidth ();
    int i = hei * evt.getY () / jPanel2.getHeight ();
    if (SwingUtilities.isLeftMouseButton (evt)) {
        currentMove [i] [j] = true;
        intpopulation ++;
    } else currentMove [i] [j] = false;

}
----------------------------------------

private void jPanel2MouseDragged (java.awt.event.MouseEvent evt) {
    int j = wid * evt.getX () / jPanel2.getWidth ();
    int i = hei * evt.getY () / jPanel2.getHeight ();
    if (SwingUtilities.isLeftMouseButton (evt)) {
        currentMove [i] [j] = true;
        intpopulation ++;
    } else {
        currentMove [i] [j] = false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50558635_50559261_59_75
50558635_50632943_49_65
Title: "Cannot change long period for timer.scheduleAtFixedRate(TimerTask task long delay long period) while my program is running" 
----------------------------------------

public void run () {
    if (play == true) {
        intGeneration ++;
        for (int i = 0;
        i < hei; i ++) {
            for (int j = 0;
            j < wid; j ++) {
                nextMove [i] [j] = decide (i, j);
            }
        }
        for (int i = 0;
        i < hei; i ++) {
            for (int j = 0;
            j < wid; j ++) {
                currentMove [i] [j] = nextMove [i] [j];
            }
        }
        repain ();
    }
}
----------------------------------------

public void run () {
    if (play == true) {
        intGeneration ++;
        jLabel6.setText ("Generation: " + intGeneration);
        for (int i = 0;
        i < hei; i ++) {
            for (int j = 0;
            j < wid; j ++) {
                nextMove [i] [j] = decide (i, j);
            }
        }
        for (int i = 0;
        i < hei; i ++) {
            for (int j = 0;
            j < wid; j ++) {
                currentMove [i] [j] = nextMove [i] [j];
            }
        }
        repain ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50558635_50559261_87_109
50558635_50632943_73_135
Title: "Cannot change long period for timer.scheduleAtFixedRate(TimerTask task long delay long period) while my program is running" 
----------------------------------------

private boolean decide (int i, int j) {
    int neighbors = 0;
    if (j > 0) {
        if (currentMove [i] [j - 1]) neighbors ++;

        if (i > 0) if (currentMove [i - 1] [j - 1]) neighbors ++;

        if (i < hei - 1) if (currentMove [i + 1] [j - 1]) neighbors ++;

    }
    if (j < wid - 1) {
        if (currentMove [i] [j + 1]) neighbors ++;

        if (i > 0) if (currentMove [i - 1] [j + 1]) neighbors ++;

        if (i < hei - 1) if (currentMove [i + 1] [j + 1]) neighbors ++;

    }
    if (i > 0) if (currentMove [i - 1] [j]) neighbors ++;

    if (i < hei - 1) if (currentMove [i + 1] [j]) neighbors ++;

    if (currentMove [i] [j] && neighbors < 2) intpopulation --;

    if (currentMove [i] [j] && neighbors > 3) intpopulation --;

    if (currentMove [i] [j] && neighbors == 3) intpopulation --;

    if (neighbors == 3) intpopulation ++;

    jLabel5.setText ("Population: " + Integer.toString (intpopulation));
    if (neighbors == 3) return true;

    if (currentMove [i] [j] && neighbors == 2) return true;

    return false;
}
----------------------------------------

private boolean decide (int i, int j) {
    int neighbors = 0;
    if (j > 0) {
        if (currentMove [i] [j - 1]) {
            neighbors ++;
        }
        if (i > 0) {
            if (currentMove [i - 1] [j - 1]) {
                neighbors ++;
            }
        }
        if (i < hei - 1) {
            if (currentMove [i + 1] [j - 1]) {
                neighbors ++;
            }
        }
    }
    if (j < wid - 1) {
        if (currentMove [i] [j + 1]) {
            neighbors ++;
        }
        if (i > 0) {
            if (currentMove [i - 1] [j + 1]) {
                neighbors ++;
            }
        }
        if (i < hei - 1) {
            if (currentMove [i + 1] [j + 1]) {
                neighbors ++;
            }
        }
    }
    if (i > 0) {
        if (currentMove [i - 1] [j]) {
            neighbors ++;
        }
    }
    if (i < hei - 1) {
        if (currentMove [i + 1] [j]) {
            neighbors ++;
        }
    }
    if (currentMove [i] [j] && neighbors < 2) {
        intpopulation --;
    }
    if (currentMove [i] [j] && neighbors > 3) {
        intpopulation --;
    }
    if (currentMove [i] [j] && neighbors == 3) {
        intpopulation --;
    }
    if (neighbors == 3) {
        intpopulation ++;
    }
    jLabel5.setText ("Population: " + Integer.toString (intpopulation));
    if (neighbors == 3) {
        return true;
    }
    if (currentMove [i] [j] && neighbors == 2) {
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5056450_5056933_47_75
5056450_5056974_6_25
Title: Why do I get StackOverFlowError when trying to DFS this graph? 
----------------------------------------

public int isConnected (String s) {
    System.out.println ("Handling node " + s);
    int in = nodes.indexOf (s);
    visited [in] = true;
    counter ++;
    for (int i = 0;
    i < listOfChildren (s).size (); i ++) {
        int ind = nodes.indexOf (listOfChildren (s).get (i));
        if (visited [ind] == false) {
            System.out.println ("Recursing into child " + listOfChildren (s).get (i));
            isConnected (listOfChildren (s).get (i));
        } else {
            System.out.println ("Node " + listOfChildren (s).get (i) + " has already been visited");
        }
    }
    if (counter == nodes.size ()) return 1;

    return 0;
}
----------------------------------------

private int isConnected (String s, boolean [] visited, int counter) {
    int in = nodes.indexOf (s);
    visited [in] = true;
    counter ++;
    for (int i = 0;
    i < listOfChildren (s).size (); i ++) {
        int ind = nodes.indexOf (listOfChildren (s).get (i));
        if (visited [ind] == false) {
            counter = isConnected (listOfChildren (s).get (i), visited, counter);
        }
    }
    System.out.println (counter);
    return counter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50578263_50578472_41_51
50578263_50578472_53_85
Title: How to resize an image after selecting it from the gallery? 
----------------------------------------

public String compress (String imageUri, boolean deleteSourceImage) {
    String compressUri = compress (imageUri);
    if (deleteSourceImage) {
        File source = new File (getRealPathFromURI (imageUri));
        if (source.exists ()) {
            boolean isdeleted = source.delete ();
            Log.e (LOG_TAG, (isdeleted) ? "SourceImage File deleted" : "SourceImage File not deleted");
        }
    }
    return compressUri;
}
----------------------------------------

public String compress (int drawableID) throws IOException {
    Bitmap bitmap = BitmapFactory.decodeResource (mContext.getApplicationContext ().getResources (), drawableID);
    if (null != bitmap) {
        String timeStamp = new SimpleDateFormat ("yyyyMMdd_HHmmss", Locale.ENGLISH).format (new Date ());
        String imageFileName = "JPEG_" + timeStamp + "_";
        File storageDir = Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_PICTURES);
        File image = File.createTempFile (imageFileName, ".jpg", storageDir);
        FileOutputStream out = new FileOutputStream (image);
        bitmap.compress (Bitmap.CompressFormat.JPEG, 100, out);
        Uri copyImageUri = Uri.fromFile (image);
        String compressImagePath = compressImage (copyImageUri.toString (), new File (Environment.getExternalStorageDirectory (), "ImageCompression/images"));
        if (image.exists ()) {
            boolean isdeleted = image.delete ();
            Log.e (LOG_TAG, (isdeleted) ? "SourceImage File deleted" : "SourceImage File not deleted");
        }
        return compressImagePath;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5058157_5058210_20_52
5058157_5060096_21_59
Title: JComboBox popup is not resized if i add item when it is visible 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    comboBox.showPopup ();
    Object child = comboBox.getAccessibleContext ().getAccessibleChild (0);
    BasicComboPopup popup = (BasicComboPopup) child;
    JList list = popup.getList ();
    Container c = SwingUtilities.getAncestorOfClass (JScrollPane.class, list);
    JScrollPane scrollPane = (JScrollPane) c;
    Dimension size = scrollPane.getSize ();
    if (size.width > 20) size.width -= 5;

    scrollPane.setPreferredSize (size);
    scrollPane.setMaximumSize (size);
    Dimension popupSize = popup.getSize ();
    popupSize.width = size.width;
    Component parent = popup.getParent ();
    parent.setSize (popupSize);
    parent.validate ();
    parent.repaint ();
    Window mainFrame = SwingUtilities.windowForComponent (comboBox);
    Window popupWindow = SwingUtilities.windowForComponent (popup);
    if (popupWindow != mainFrame) popupWindow.pack ();

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String text = comboBox.getItemAt (comboBox.getItemCount () - 1).toString ();
    comboBox.addItem (text + "1");
    comboBox.showPopup ();
    Object child = comboBox.getAccessibleContext ().getAccessibleChild (0);
    BasicComboPopup popup = (BasicComboPopup) child;
    JList list = popup.getList ();
    Dimension preferred = list.getPreferredSize ();
    preferred.width += 20;
    int rowHeight = preferred.height / comboBox.getItemCount ();
    int maxHeight = comboBox.getMaximumRowCount () * rowHeight;
    preferred.height = Math.min (preferred.height, maxHeight);
    Container c = SwingUtilities.getAncestorOfClass (JScrollPane.class, list);
    JScrollPane scrollPane = (JScrollPane) c;
    scrollPane.setPreferredSize (preferred);
    scrollPane.setMaximumSize (preferred);
    Dimension popupSize = popup.getSize ();
    popupSize.width = preferred.width;
    popupSize.height = preferred.height + 2;
    Component parent = popup.getParent ();
    parent.setSize (popupSize);
    parent.validate ();
    parent.repaint ();
    Window mainFrame = SwingUtilities.windowForComponent (comboBox);
    Window popupWindow = SwingUtilities.windowForComponent (popup);
    if (popupWindow != mainFrame) popupWindow.pack ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5058157_5058210_54_63
5058157_5060096_61_70
Title: JComboBox popup is not resized if i add item when it is visible 
----------------------------------------

private static void createAndShowGUI () {
    JFrame frame = new JFrame ("ComboBoxExample");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JComponent newContentPane = new ComboBoxExample ();
    newContentPane.setOpaque (true);
    frame.setContentPane (newContentPane);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

private static void createAndShowGUI () {
    JFrame frame = new JFrame ("ComboBoxExample2");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JComponent newContentPane = new ComboBoxExample2 ();
    newContentPane.setOpaque (true);
    frame.setContentPane (newContentPane);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50596687_50597016_1_32
50596687_50597799_1_30
Title: How do i create desired JSON structure by taking values from a String array or ArrayList in java? 
----------------------------------------

public static void main (String [] args) throws Exception {
    String [] alias = {"topping", "cake"};
    String [] entityType = {"Topping", "cake"};
    String [] textString = {"pizza", "pancake"};
    String [] usersays_text = {"I want ", "I want "};
    JSONArray parts = new JSONArray ();
    for (int i = 0;
    i < usersays_text.length; i ++) {
        JSONArray JSA = new JSONArray ();
        JSONObject TP1 = new JSONObject ();
        TP1.put ("text", usersays_text [i]);
        JSONObject TP2 = new JSONObject ();
        TP2.put ("text", textString [i]);
        TP2.put ("entityType", entityType [i]);
        TP2.put ("alias", alias [i]);
        JSA.put (TP1);
        JSA.put (TP2);
        parts.put (JSA);
    }
    JSONObject partsObject = new JSONObject ();
    partsObject.put ("parts", parts);
    JSONObject root = new JSONObject ();
    root.put ("trainingPhrases", partsObject);
    JSONObject json = new JSONObject (root.toString ());
    System.out.println (json.toString (4));
}
----------------------------------------

public static void main (String args []) {
    JSONObject TP1 = new JSONObject ();
    String [] alias = {"topping", "cake"};
    String [] entityType = {"Topping", "cake"};
    String [] textString = {"pizza", "pancake"};
    String [] usersays_text = {"I want ", "I want "};
    JSONObject jobj = new JSONObject ();
    JSONArray jarr = new JSONArray ();
    for (int index = 0;
    index < usersays_text.length; index ++) {
        JSONObject parts = new JSONObject ();
        JSONArray partsArr = new JSONArray ();
        JSONObject partsObj = new JSONObject ();
        partsObj.put ("text", usersays_text [index].toString ());
        JSONObject cont = new JSONObject ();
        cont.put ("alias", alias [index].toString ());
        cont.put ("text", textString [index].toString ());
        cont.put ("entityType", entityType [index].toString ());
        partsArr.put (partsObj);
        partsArr.put (cont);
        parts.put ("parts", partsArr);
        jarr.put (parts);
    }
    jobj.put ("trainingPhrases", jarr);
    System.out.println (jobj.toString (4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5060057_5060097_1_13
5060057_5060148_1_13
Title: Java: generic filter map function 
----------------------------------------

public static < K, V > Map < K, V > filterAttrs (Map < K, V > args, String...unless) {
    Map < K, V > filteredAttrs = new HashMap < K, V > ();
    Arrays.sort (unless);
    for (K o : args.keySet ()) {
        String attr = o.toString ();
        if (Arrays.binarySearch (unless, o.toString ()) < 0) {
            filteredAttrs.put (o, args.get (o));
        }
    }
    return filteredAttrs;
}
----------------------------------------

public static < T, K > Map < T, K > filterAttrs (Map < T, K > args, T...unless) {
    Map < T, K > filteredAttrs;
    filteredAttrs = new HashMap < T, K > ();
    Arrays.sort (unless);
    for (T o : args.keySet ()) {
        if (Arrays.binarySearch (unless, o) < 0) {
            filteredAttrs.put (o, args.get (o));
        }
    }
    return filteredAttrs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5060057_5060097_1_13
5060057_5060170_1_11
Title: Java: generic filter map function 
----------------------------------------

public static < K, V > Map < K, V > filterAttrs (Map < K, V > args, String...unless) {
    Map < K, V > filteredAttrs = new HashMap < K, V > ();
    Arrays.sort (unless);
    for (K o : args.keySet ()) {
        String attr = o.toString ();
        if (Arrays.binarySearch (unless, o.toString ()) < 0) {
            filteredAttrs.put (o, args.get (o));
        }
    }
    return filteredAttrs;
}
----------------------------------------

public static < K, V > Map < K, V > filterAttrs (Map < K, V > args, String...unless) {
    Map < K, V > filteredAttrs = new HashMap < K, V > ();
    Arrays.sort (unless);
    for (K o : args.keySet ()) {
        if (Arrays.binarySearch (unless, o.toString ()) < 0) {
            filteredAttrs.put (o, args.get (o));
        }
    }
    return filteredAttrs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50612577_50779095_16_26
50612577_50779095_29_44
Title: CSV copy to Postgres with array of custom type using JDBC 
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    for (int i = off;
    i < off + len; i ++) {
        int c = this.read ();
        if (c == - 1) {
            return i - off > 0 ? i - off : - 1;
        }
        cbuf [i] = (char) c;
    }
    return len;
}
----------------------------------------

public int read () throws IOException {
    final int c = this.csvFileReader.read ();
    if (c == '(' && ! this.wasParenthese) {
        this.wasParenthese = true;
        this.csvFileReader.unread ('(');
        return '"';
    } else {
        this.wasParenthese = false;
        if (c == ')') {
            this.csvFileReader.unread ('"');
            return ')';
        } else {
            return c;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50615564_50627666_27_36
50615564_50627666_72_96
Title: JAVA TCP Server Error 
----------------------------------------

public void run () {
    Socket msocket;
    try {
        msocket = mServer_Socket.accept ();
        System.out.println ("connected");
        managers.add (new SocketManager (msocket));
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("listen..");
        while (true) {
            int arrlen = din.readInt ();
            byte [] b = new byte [arrlen];
            din.readFully (b);
            while (min.read () != 'y');

            mout.write ('y');
            mout.flush ();
            InputStream bais = new ByteArrayInputStream (b);
            BufferedImage image = ImageIO.read (bais);
            bais.close ();
            Main.drawImage (image);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50624315_50624402_1_13
50624315_50624699_1_10
Title: Duplicate number check doesn't always work 
----------------------------------------

public List < Integer > getNormalList () {
    Random r = new Random ();
    int [] arr = new int [3];
    int Low = 0;
    int High = 6;
    while (arr [0] == arr [1] && arr [1] == arr [2]) {
        for (int i = 0;
        i < arr.length; i ++) {
            arr [i] = r.nextInt (High - Low) + Low;
        }
    }
    return Arrays.asList (arr);
}
----------------------------------------

public ArrayList < Integer > getNormalList () {
    Set < Integer > resultSet = new HashSet < > (3);
    Random r = new Random ();
    int Low = 0;
    int High = 6;
    while (resultSet.size () < 3) {
        resultSet.add (r.nextInt (High - Low) + Low);
    }
    return new ArrayList < > (resultSet);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50625824_50625880_13_22
50625824_50625942_13_22
Title: Trying to calculate sum of odd numbers in given range (java) - bug in a code? 
----------------------------------------

public static int sumOdd (int start, int end) {
    int sum = 0;
    for (int i = start;
    i <= end; i ++) {
        if (isOdd (i)) {
            sum += i;
        }
    }
    return sum;
}
----------------------------------------

public static int sumOdd (int start, int end) {
    int sum = 0;
    for (int i = start;
    i <= end; i ++) {
        if (isOdd (i)) {
            sum += i;
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50625824_50625880_13_22
50625824_50625997_2_22
Title: Trying to calculate sum of odd numbers in given range (java) - bug in a code? 
----------------------------------------

public static int sumOdd (int start, int end) {
    int sum = 0;
    for (int i = start;
    i <= end; i ++) {
        if (isOdd (i)) {
            sum += i;
        }
    }
    return sum;
}
----------------------------------------

public static int sumOdd (int start, int end) {
    if (start > end) {
        throw new IllegalArgumentException (start + " > " + end);
    }
    int sum = 0;
    if (start % 2 == 0) {
        start ++;
    }
    for (int i = start;
    i <= end; i += 2) {
        sum += i;
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50625824_50625880_2_11
50625824_50625942_2_11
Title: Trying to calculate sum of odd numbers in given range (java) - bug in a code? 
----------------------------------------

public static boolean isOdd (int number) {
    if (number < 0) {
        return false;
    } else if (number % 2 > 0) {
        return true;
    } else {
        return false;
    }

}
----------------------------------------

public static boolean isOdd (int number) {
    if (number < 0) {
        return false;
    } else if (number % 2 > 0) {
        return true;
    } else {
        return false;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50625824_50625942_13_22
50625824_50625997_2_22
Title: Trying to calculate sum of odd numbers in given range (java) - bug in a code? 
----------------------------------------

public static int sumOdd (int start, int end) {
    int sum = 0;
    for (int i = start;
    i <= end; i ++) {
        if (isOdd (i)) {
            sum += i;
        }
    }
    return sum;
}
----------------------------------------

public static int sumOdd (int start, int end) {
    if (start > end) {
        throw new IllegalArgumentException (start + " > " + end);
    }
    int sum = 0;
    if (start % 2 == 0) {
        start ++;
    }
    for (int i = start;
    i <= end; i += 2) {
        sum += i;
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5063713_9893115_129_148
5063713_9893115_84_120
Title: jaxb and jsr303 
----------------------------------------

public void recorrePropiedad (CAttributePropertyInfo property, ClassOutline clase, Outline model) {
    FieldOutline field = model.getField (property);
    System.out.println ("Tratando attributo " + property.getName () + " de la clase " + clase.implClass.name ());
    XSComponent definicion = property.getSchemaComponent ();
    AttributeUseImpl particle = (AttributeUseImpl) definicion;
    JFieldVar var = (JFieldVar) clase.implClass.fields ().get (getField ("privateName", property));
    if (particle.isRequired ()) {
        if (! hasAnnotation (var, NotNull.class)) {
            System.out.println ("@NotNull: " + property.getName () + " de la clase " + clase.implClass.name ());
            var.annotate (NotNull.class);
        }
    }
    if (particle.getDecl ().getType ().getTargetNamespace ().startsWith ("http://hotelbeds.com")) {
        if (! hasAnnotation (var, Valid.class)) {
            System.out.println ("@Valid: " + property.getName () + " de la clase " + clase.implClass.name ());
            var.annotate (Valid.class);
        }
    }
    procesaType (particle.getDecl ().getType (), var, property.getName (), clase.implClass.name ());
}
----------------------------------------

public void recorrePropiedad (CElementPropertyInfo property, ClassOutline clase, Outline model) {
    FieldOutline field = model.getField (property);
    XSComponent definicion = property.getSchemaComponent ();
    ParticleImpl particle = (ParticleImpl) definicion;
    int maxOccurs = ((BigInteger) getField ("maxOccurs", particle)).intValue ();
    int minOccurs = ((BigInteger) getField ("minOccurs", particle)).intValue ();
    JFieldVar var = (JFieldVar) clase.implClass.fields ().get (getField ("privateName", property));
    if (minOccurs < 0 || minOccurs >= 1) {
        if (! hasAnnotation (var, NotNull.class)) {
            System.out.println ("@NotNull: " + property.getName () + " de la clase " + clase.implClass.name ());
            var.annotate (NotNull.class);
        }
    }
    if (maxOccurs > 1) {
        if (! hasAnnotation (var, Size.class)) {
            System.out.println ("@Size (" + minOccurs + "," + maxOccurs + ") " + property.getName () + " de la clase " + clase.implClass.name ());
            var.annotate (Size.class).param ("min", minOccurs).param ("max", maxOccurs);
        }
    }
    ElementDecl declaracion = (ElementDecl) getField ("term", particle);
    if (declaracion.getType ().getTargetNamespace ().startsWith ("http://hotelbeds.com")) {
        if (! hasAnnotation (var, Valid.class)) {
            System.out.println ("@Valid: " + property.getName () + " de la clase " + clase.implClass.name ());
            var.annotate (Valid.class);
        }
    }
    if (declaracion.getType () instanceof XSSimpleType) {
        procesaType ((XSSimpleType) declaracion.getType (), var, property.getName (), clase.implClass.name ());
    } else if (declaracion.getType ().getBaseType () instanceof XSSimpleType) {
        procesaType ((XSSimpleType) declaracion.getType ().getBaseType (), var, property.getName (), clase.implClass.name ());
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50639366_50639778_1_13
50639366_50646928_1_11
Title: "Another method to multiply two numbers without using the ""*"" operator" 
----------------------------------------

public static int multiply (int n, int m) {
    int ans = 0, count = 0;
    while (m > 0) {
        if (m % 2 == 1) ans += n << count;

        count ++;
        m /= 2;
    }
    return ans;
}
----------------------------------------

uint16_t multiply (uint16_t a, uint16_t b) {
    uint16_t i = 0;
    uint16_t result = 0;
    for (i = 0; i < 16; i ++) {
        if (a & (1 << i)) {
            result += b << i;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50653898_50654010_1_10
50653898_50654063_18_34
Title: Why does the KeyListener only work when did`t pressed the button? 
----------------------------------------

public Graphic () {
    KeyboardFocusManager.getCurrentKeyboardFocusManager ().addKeyEventDispatcher (e -> {
        if (e.getKeyCode () == KeyEvent.VK_ESCAPE) {
            dispose ();
            return true;
        }
        return false;
    });
}
----------------------------------------

public Graphic () {
    getRootPane ().getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW).put (KeyStroke.getKeyStroke (KeyEvent.VK_ESCAPE, 0), "Cancel");
    getRootPane ().getActionMap ().put ("Cancel", new AbstractAction () {
        public void actionPerformed (ActionEvent e) {
            dispose ();
        }}

    );
    button = new JButton ();
    button.addActionListener (this);
    button.setIcon (new ImageIcon ("Image.jpg"));
    this.getContentPane ().add (button);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50662932_50663005_1_12
50662932_50667435_1_10
Title: counting negative numbers in array 
----------------------------------------

public static int count_neg (int x [] []) {
    int count = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < x [i].length; j ++) {
            if (x [i] [j] < 0) {
                count ++;
            }
        }
    }
    return (count);
}
----------------------------------------

public static int count_neg (int x [] []) {
    int count = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < x [i].length; j ++) {
            if (x [i] [j] < 0) count ++;

        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50666406_50666975_4_16
50666406_50667420_10_57
Title: My code is giving a wrong answer in codechef 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line = scanner.nextLine ();
    int trys = Integer.parseInt (line.trim ());
    for (int i = 0;
    i < trys; i ++) {
        double probability = processTry (scanner);
        System.out.println (probability);
    }
    scanner.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int T = Integer.parseInt (in.nextLine ());
    int [] N = new int [T];
    int [] A = new int [T];
    int [] B = new int [T];
    double [] Probability = new double [T];
    for (int t = 0;
    t < T; t ++) {
        String [] input = in.nextLine ().split (" ");
        N [t] = Integer.parseInt (input [0]);
        A [t] = Integer.parseInt (input [1]);
        B [t] = Integer.parseInt (input [2]);
        int total, pa = 0, pb = 0;
        String [] faces = in.nextLine ().split (" ");
        total = faces.length;
        for (String f : faces) {
            if (Integer.parseInt (f) == A [t]) {
                pa ++;
            }
            if (Integer.parseInt (f) == B [t]) {
                pb ++;
            }
        }
        double pn = (double) (total * total);
        Probability [t] = (pa * pb) / pn;
    }
    for (double d : Probability) {
        System.out.println (d);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50669646_50674542_10_19
50669646_50674542_23_35
Title: java runtime exec a python script with raw_input 
----------------------------------------

public void run () {
    try {
        BufferedWriter writer = new BufferedWriter (new OutputStreamWriter (p.getOutputStream ()));
        String input = "2\n";
        writer.write (input);
        writer.flush ();
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        Reader reader = new InputStreamReader (p.getInputStream ());
        int data = - 1;
        while ((data = reader.read ()) != - 1) {
            char c = (char) data;
            System.out.print (c);
        }
        reader.close ();
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5067760_27168682_5_22
5067760_43601931_6_23
Title: Perfect numbers 1 to n 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    for (int j = 1;
    j < n; j ++) {
        int counter = 0;
        for (int i = 1;
        i < j; i ++) {
            if (j % i == 0) {
                counter = counter + i;
            }
        }
        if (counter == j) System.out.println (j);

    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the number upto which you want to print the perfect number");
    Scanner scan = new Scanner (System.in);
    int n = scan.nextInt ();
    for (int i = 1;
    i <= n; i ++) {
        int sum = 0;
        for (int j = 1;
        j <= i; j ++) {
            if (i % j == 0) sum = sum + j;

        }
        if (sum == (2 * i)) System.out.println (i);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50679610_50679784_1_10
50679610_50679813_3_12
Title: how to write a true default method to avoid code duplication 
----------------------------------------

default StatusEntry getServiceStatus () throws Exception {
    StatusEntry result = new StatusEntry ();
    ServiceStatus status;
    try {
        status = getStatus ().getStatus ();
    } catch (Exception e) {
    }
    result.Status (status);
    return result;
}
----------------------------------------

final StatusEntry getServiceStatus (Supplier < StatucBType > statusProvider) throws Exception {
    StatusEntry result = new StatusEntry ();
    ServiceStatus status;
    try {
        status = statusProvider.get ().getStatus ();
    } catch (Exception e) {
    }
    result.Status (status);
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50690070_50690381_10_49
50690070_50690394_9_45
Title: How do I write a general user input statement to be used multiple times with different values? 
----------------------------------------

public static void main (String [] args) {
    char direction, answer = 0;
    do {
        System.out.print ("Go n,e,s or w?: ");
        direction = input.nextLine ().charAt (0);
        switch (direction) {
            case 'n' :
                {
                    text ("You go North");
                    System.out.println ("Do you want to continue? (y/n)");
                    answer = input.nextLine ().charAt (0);
                } break;
            case 'e' :
                {
                    text ("You go East");
                    System.out.println ("Do you want to continue? (y/n)");
                    answer = input.nextLine ().charAt (0);
                } break;
            case 's' :
                {
                    text ("You go South");
                    System.out.println ("Do you want to continue? (y/n)");
                    answer = input.nextLine ().charAt (0);
                } break;
            case 'w' :
                {
                    text ("You go West");
                    System.out.println ("Do you want to continue? (y/n)");
                    answer = input.nextLine ().charAt (0);
                } break;
            default :
                text ("You fall down a hole!");
                System.exit (0);
        }
    } while (answer == 'y');
    text ("Program continues");
}
----------------------------------------

public static void main (String [] args) {
    char direction;
    boolean done = false;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter q to quit");
    do {
        System.out.print ("Go: (n/e/s/w)? ");
        direction = input.nextLine ().charAt (0);
        switch (direction) {
            case 'n' :
                text ("You go North");
                break;
            case 'e' :
                text ("You go East");
                break;
            case 's' :
                text ("You go South");
                break;
            case 'w' :
                text ("You go West");
                break;
            case 'q' :
                text ("You have quit");
                done = true;
                break;
            default :
                text ("You fall down a hole!");
                System.exit (0);
        }
        if (! done) text ("Program continues");

    } while (! done);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50690240_50692626_20_98
50690240_50695360_1_66
Title: Extracting text from dynamically created textfields inside various rows of gridpane 
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    List < TextField > textFieldContainer = new ArrayList ();
    primaryStage.setTitle ("GridPane Experiment");
    GridPane gridPane = new GridPane ();
    for (int i = 0;
    i < 5; i ++) {
        VBox mainVBox = new VBox ();
        VBox vboxgrid1 = new VBox ();
        VBox vboxgrid2 = new VBox ();
        HBox hboxgrid = new HBox ();
        hboxgrid.setPadding (new Insets (5, 5, 5, 5));
        RadioButton rbYes = new RadioButton ("Yes");
        RadioButton rbNo = new RadioButton ("No");
        Label howmanyLabel = new Label ("   How many?   ");
        TextField howManytxtB = new TextField ();
        hboxgrid.getChildren ().add (rbYes);
        hboxgrid.getChildren ().add (rbNo);
        hboxgrid.getChildren ().add (howmanyLabel);
        hboxgrid.getChildren ().add (howManytxtB);
        vboxgrid1.getChildren ().add (hboxgrid);
        final Integer tempRow = i;
        howManytxtB.setOnAction (new EventHandler < ActionEvent > () {
            @Override
            public void handle (ActionEvent event) {
                vboxgrid2.getChildren ().clear ();
                Integer howManyNum = Integer.valueOf (howManytxtB.getText ());
                textFieldContainer.removeIf (p -> p.getUserData ().toString ().startsWith ("TextField_" + tempRow));
                for (int row = 0;
                row < howManyNum; row ++) {
                    HBox innerRowbox = new HBox ();
                    TextField name = new TextField ();
                    final Integer innerRow = row;
                    name.setUserData ("TextField_" + tempRow + "_" + innerRow);
                    System.out.println (name.getUserData ().toString ());
                    textFieldContainer.add (name);
                    ComboBox cb = new ComboBox ();
                    name.setPromptText ("Enter name of the new Entity");
                    name.setMinWidth (200);
                    innerRowbox.getChildren ().add (name);
                    innerRowbox.getChildren ().add (cb);
                    vboxgrid2.getChildren ().add (innerRowbox);
                }
            }}

        );
        mainVBox.getChildren ().add (vboxgrid1);
        mainVBox.getChildren ().add (vboxgrid2);
        gridPane.add (mainVBox, 1, i);
    }
    for (int i = 0;
    i < 5; i ++) {
        gridPane.add (new Label ("row" + i), 0, i);
    }
    Button saveButton = new Button ("save content");
    saveButton.setOnAction (e -> {
        System.out.println ("Saving these TextField's Text:");
        for (TextField textField : textFieldContainer) {
            System.out.println (textField.getUserData () + ": " + textField.getText ());
        }
    });
    gridPane.add (saveButton, 1, 5);
    gridPane.setHgap (10);
    gridPane.setVgap (10);
    Scene scene = new Scene (gridPane, 500, 500);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) throws Exception {
    primaryStage.setTitle ("GridPane Experiment");
    GridPane gridPane = new GridPane ();
    final int rowCount = 5;
    TextField [] [] textFields = new TextField [rowCount] [0];
    final Insets hboxPadding = new Insets (5);
    final Insets labelMargin = new Insets (0, 15, 0, 15);
    for (int i = 0;
    i < rowCount; i ++) {
        VBox vboxgrid2 = new VBox ();
        RadioButton rbYes = new RadioButton ("Yes");
        RadioButton rbNo = new RadioButton ("No");
        Label howmanyLabel = new Label ("How many?");
        HBox.setMargin (howmanyLabel, labelMargin);
        TextField howManytxtB = new TextField ();
        HBox hboxgrid = new HBox (rbYes, rbNo, howmanyLabel, howManytxtB);
        hboxgrid.setPadding (hboxPadding);
        final int rowIndex = i;
        howManytxtB.setOnAction (event -> {
            vboxgrid2.getChildren ().clear ();
            int howManyNum = Math.max (0, Integer.parseInt (howManytxtB.getText ()));
            TextField [] fields = new TextField [howManyNum];
            for (int row = 0;
            row < howManyNum; row ++) {
                TextField name = new TextField ();
                ComboBox cb = new ComboBox ();
                name.setPromptText ("Enter name of the new Entity");
                name.setMinWidth (200);
                HBox innerRowbox = new HBox (name, cb);
                vboxgrid2.getChildren ().add (innerRowbox);
                fields [row] = name;
            }
            textFields [rowIndex] = fields;
        });
        VBox mainVBox = new VBox (hboxgrid, vboxgrid2);
        gridPane.addRow (i, new Label ("row" + i), mainVBox);
    }
    Button saveButton = new Button ("save content");
    saveButton.setOnAction (e -> {
        TextField [] secondRowFields = textFields [1];
        if (secondRowFields.length == 0) {
            System.out.println ("no TextFields in row1");
        } else {
            for (TextField textField : secondRowFields) {
                System.out.println (textField.getText ());
            }
        }
    });
    gridPane.add (saveButton, 1, rowCount);
    gridPane.setHgap (10);
    gridPane.setVgap (10);
    Scene scene = new Scene (gridPane, 500, 500);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5070830_38460558_5_32
5070830_5070922_5_25
Title: Populating a ListView using an ArrayList? 
----------------------------------------

public void onCreate (Bundle saveInstanceState) {
    super.onCreate (saveInstanceState);
    setContentView (R.layout.list);
    ListView moviesList = (ListView) findViewById (R.id.listview);
    movies = new ArrayList < String > ();
    getMovies ();
    ArrayAdapter < String > arrayAdapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, movies);
    moviesList.setAdapter (arrayAdapter);
    moviesList.setOnItemClickListener (new OnItemClickListener () {
        public void onItemClick (AdapterView < ? > arg0, View v, int position, long arg3) {
            String selectedmovie = movies.get (position);
            Toast.makeText (getApplicationContext (), "Movie Selected : " + selectedmovie, Toast.LENGTH_LONG).show ();
        }}

    );
}
----------------------------------------

public void onCreate (Bundle saveInstanceState) {
    setContentView (R.layout.your_layout);
    lv = (ListView) findViewById (R.id.your_list_view_id);
    List < String > your_array_list = new ArrayList < String > ();
    your_array_list.add ("foo");
    your_array_list.add ("bar");
    ArrayAdapter < String > arrayAdapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, your_array_list);
    lv.setAdapter (arrayAdapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50712467_50712512_1_11
50712467_50713122_27_37
Title: Need to generate roll no for each student from the user? 
----------------------------------------

static void readStudent (int i) {
    int rollno = 1000 + i;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter your name:");
    String name = sc.next ();
    System.out.println ("Enter your age:");
    int age = sc.nextInt ();
    Studb stud = new Studb (name, age, rollno);
    System.out.println (stud);
}
----------------------------------------

static Studb readStudent (int i) {
    int rollno = 1000 + i ++;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter your name:");
    String name = sc.next ();
    System.out.println ("Enter your age:");
    int age = sc.nextInt ();
    return new Studb (name, age, rollno);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50722806_50734082_34_52
50722806_50734082_54_71
Title: StackOverflowError while recursive going throug BufferedImage 
----------------------------------------

private void fill (int x, int y) {
    if ((x < 0) || (y < 0) || (x >= image.getWidth ()) || (y >= image.getHeight ())) {
        return;
    }
    if (image.getRGB (x, y) != COLOR_TO_REPLACE) {
        return;
    }
    int xMax = ((x + SIZE) > image.getWidth ()) ? image.getWidth () : x + SIZE;
    int yMax = ((y + SIZE) > image.getHeight ()) ? image.getHeight () : y + SIZE;
    while (fill (x, xMax, y, yMax)) {
        x = xMax;
        y = yMax;
        xMax = ((x + SIZE) > image.getWidth ()) ? image.getWidth () : x + SIZE;
        yMax = ((y + SIZE) > image.getHeight ()) ? image.getHeight () : y + SIZE;
    }
}
----------------------------------------

private boolean fill (int x, int xMax, int y, int yMax) {
    if ((x >= xMax) || (y >= yMax)) {
        return false;
    }
    if (image.getRGB (x, y) != COLOR_TO_REPLACE) {
        return false;
    }
    image.setRGB (x, y, NEW_COLOR);
    if (fill (x + 1, y, xMax, yMax) || fill (x, y + 1, xMax, yMax)) {
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50726136_50726417_47_79
50726136_50726711_70_103
Title: Convert this activity to a fragment 
----------------------------------------

public void doOnSuccess (String s) {
    try {
        JSONObject obj = new JSONObject (s);
        Iterator i = obj.keys ();
        String key = "";
        while (i.hasNext ()) {
            key = i.next ().toString ();
            if (! key.equals (UserDetails.username)) {
                al.add (key);
            }
            totalUsers ++;
        }
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    if (totalUsers <= 1) {
        noUsersText.setVisibility (View.VISIBLE);
        usersList.setVisibility (View.GONE);
    } else {
        noUsersText.setVisibility (View.GONE);
        usersList.setVisibility (View.VISIBLE);
        usersList.setAdapter (new ArrayAdapter < String > (getActivity (), android.R.layout.simple_list_item_1, al));
    }
    pd.dismiss ();
}
----------------------------------------

public void doOnSuccess (String s) {
    try {
        JSONObject obj = new JSONObject (s);
        al = new ArrayList < > ();
        Iterator i = obj.keys ();
        String key = "";
        while (i.hasNext ()) {
            key = i.next ().toString ();
            if (! key.equals (UserDetails.username)) {
                al.add (key);
            }
            totalUsers ++;
        }
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    if (totalUsers <= 1) {
        noUsersText.setVisibility (View.VISIBLE);
        usersList.setVisibility (View.GONE);
    } else {
        noUsersText.setVisibility (View.GONE);
        usersList.setVisibility (View.VISIBLE);
        usersList.setAdapter (new ArrayAdapter < > (getActivity (), android.R.layout.simple_list_item_1, al));
    }
    pd.dismiss ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50727663_50727972_9_21
50727663_50728477_19_39
Title: Object Recursion and flatten the objects in a List 
----------------------------------------

public static void main (String [] args) {
    Foo a = new Foo ("a");
    Foo b = new Foo ("b");
    Foo c = new Foo ("c");
    Foo d = new Foo ("d");
    Foo e = new Foo ("e");
    a.fooList.add (b);
    b.fooList.add (c);
    c.fooList.add (e);
    a.fooList.add (d);
    List < Foo > list = a.getAllChildren ();
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    SomeObject o1 = new SomeObject ("1");
    SomeObject o2 = new SomeObject ("2");
    SomeObject o3 = new SomeObject ("3");
    SomeObject o4 = new SomeObject ("4");
    o1.addObject (o2);
    o2.addObject (o3);
    o3.addObject (o4);
    flatten (o1);
    for (SomeObject obj : flatList) {
        System.out.println (obj.getObjectName ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50740286_50740755_1_19
50740286_50741134_1_20
Title: Search two dimensional array that returned true to a given method using O(n) time complexity there's a catch 
----------------------------------------

public static boolean findValTest (int [] [] array, int val) {
    int chosenRow = 0;
    while (chosenRow < array.length) {
        if (array [chosenRow] [0] < val) {
            chosenRow ++;
        } else {
            break;
        }
    }
    for (int row = min (chosenRow, array [0].length - 1);
    row >= max (chosenRow - 1, 0); row --) {
        for (int col = 0;
        col < array [0].length; col ++) {
            if (array [row] [col] == val) {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean findValTest (int [] [] m, int val) {
    for (int row = 0;
    row < m.length; row ++) {
        if (m [row] [0] <= val && row != m.length - 1) continue;

        int r = row;
        while (r >= row - 1 && r >= 0) {
            for (int col = 0;
            col < m [r].length; col ++) if (m [r] [col] == val) return true;

            r --;
        }
        return false;
    }
    return false;
}
----------------------------------------
