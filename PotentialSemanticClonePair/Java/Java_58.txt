$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_354_371
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843438_26843783_4_29
26843438_26843828_1_29
Title: How do I print out the first instance of duplicates in an array of randomly generated numbers? 
----------------------------------------

public static void main (String [] args) {
    String results = "";
    int numbers [] = new int [10];
    int j = 0;
    int i;
    for (i = 0; i < numbers.length; i ++) {
        numbers [i] = (int) ((Math.random () * 31) + 20);
        results += numbers [i] + "\n";
    }
    boolean duplicateFound = false;
    for (i = 0; i < numbers.length - 1 && ! duplicateFound; i ++) {
        for (j = i + 1; j < numbers.length && ! duplicateFound; j ++) {
            if (numbers [i] == numbers [j]) duplicateFound = true;

        }
    }
    if (duplicateFound) results += "First pair of duplicates were found at positions: " + (i) + " and " + (j);
    else results += "No duplicates were generated.";

    JOptionPane.showMessageDialog (null, results);
}
----------------------------------------

public static void main (String [] args) {
    String results = "";
    int numbers [] = new int [10];
    for (int i = 0;
    i < numbers.length; i ++) {
        numbers [i] = (int) ((Math.random () * 31) + 20);
        results += (i + 1) + " --- " + numbers [i] + "\n";
    }
    boolean duplicateFound = false;
    int i = 0;
    int j = 0;
    for (; i < numbers.length - 1 && ! duplicateFound; i ++) {
        for (j = i + 1; j < numbers.length && ! duplicateFound; j ++) {
            if (numbers [i] == numbers [j]) {
                duplicateFound = true;
            }
        }
    }
    if (duplicateFound) {
        results += "First pair of duplicates were found at positions: " + i + " and " + j;
    } else {
        results += "No duplicates were generated.";
    }
    JOptionPane.showMessageDialog (null, results);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2684630_2711553_1_13
2684630_31602253_1_11
Title: How can I make a method return an argument that was passed to it? 
----------------------------------------

public void testMyFunction () throws Exception {
    Application mock = mock (Application.class);
    when (mock.myFunction (anyString ())).thenAnswer (new Answer < String > () {
        @Override
        public String answer (InvocationOnMock invocation) throws Throwable {
            Object [] args = invocation.getArguments ();
            return (String) args [0];
        }}

    );
    assertEquals ("someString", mock.myFunction ("someString"));
    assertEquals ("anotherString", mock.myFunction ("anotherString"));
}
----------------------------------------

public void testMyFunction () throws Exception {
    Application mock = mock (Application.class);
    when (mock.myFunction (anyString ())).thenAnswer (invocation -> {
        Object [] args = invocation.getArguments ();
        return args [0];
    });
    assertEquals ("someString", mock.myFunction ("someString"));
    assertEquals ("anotherString", mock.myFunction ("anotherString"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26851973_26852087_1_41
26851973_26852161_14_24
Title: How to get rid of these booleans but return a boolean 
----------------------------------------

public boolean testAdd () {
    Double firstPositiveNumber = 22.0;
    Double secondPositiveNumber = 33.0;
    calc.x = firstPositiveNumber;
    if (calc.x (secondPositiveNumber) == (firstPositiveNumber + secondPositiveNumber)) {
        System.out.println ("[ OK ] Calculator can add positive numbers");
    } else {
        System.out.println ("[FAIL] Calculator adds incorrectly");
        firstPositiveNumber = null;
    }
    Double firstNegativeNumber = - 5.0;
    Double secondNegativeNumber = - 6.0;
    calc.x = firstNegativeNumber;
    if (calc.x (secondNegativeNumber) == (firstNegativeNumber + secondNegativeNumber)) {
        System.out.println ("[ OK ] Calculator can add a negative number");
    } else {
        System.out.println ("[FAIL] Calculator adds with negative numbers incorrectly");
        firstNegativeNumber = null;
    }
    if ((firstPositiveNumber != null) && (firstNegativeNumber != null)) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------

private boolean testAdd (Double firstNumber, Double secondNumber, String type) {
    calc.x = firstNumber;
    if (calc.x (secondNumber) == (firstNumber + secondNumber)) {
        System.out.println ("[ OK ] Calculator can add " + type + " numbers");
        return true;
    } else {
        System.out.println ("[FAIL] Calculator adds " + type + " incorrectly");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26857587_26857968_1_20
26857587_26859314_2_18
Title: comparing values of two arrays if exist or not 
----------------------------------------

public static void main (String a []) {
    List < String > sl = new ArrayList < String > ();
    sl.add ("apple");
    sl.add ("java");
    sl.add ("c++");
    sl.add ("unix");
    sl.add ("orange");
    sl.add ("airtel");
    List < String > tl = new ArrayList < String > ();
    tl.add ("job");
    tl.add ("oracle");
    tl.add ("jungle");
    tl.add ("cricket");
    boolean isCommon = Collections.disjoint (sl, tl);
    System.out.println ("Does not found any common elements? " + isCommon);
    tl.add ("java");
    isCommon = Collections.disjoint (sl, tl);
    System.out.println ("Does not found any common elements? " + isCommon);
}
----------------------------------------

public static void main (String args []) throws UnsupportedEncodingException {
    List < Integer > list1 = Arrays.asList (1, 2, 4);
    List < Integer > list2 = Arrays.asList (5, 2, 8);
    List < Integer > data1 = new ArrayList < > (list1);
    data1.removeAll (list2);
    List < Integer > data2 = new ArrayList < > (list2);
    data2.removeAll (list1);
    data1.addAll (data2);
    System.out.println ("exclusive or is " + data1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859011_26859067_1_14
26859011_26859304_1_17
Title: How to display the elements in a Set that has integer values in Java 
----------------------------------------

private void removeElementsFromSecond (Integer [] arr1, Integer [] arr2) {
    List list1 = Arrays.asList (arr1);
    Set < Integer > set1 = new LinkedHashSet < Integer > (list1);
    List list2 = Arrays.asList (arr2);
    Set < Integer > set2 = new LinkedHashSet < Integer > (list2);
    set2.removeAll (set1);
    Iterator itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------

private void removeElementsFromSecond (int [] arr1, int [] arr2) {
    Set < Integer > set1 = new LinkedHashSet < Integer > ();
    for (int i : arr1) {
        set1.add (i);
    }
    Set < Integer > set2 = new LinkedHashSet < Integer > ();
    for (int i : arr2) {
        set2.add (i);
    }
    set2.removeAll (set1);
    Iterator < Integer > itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859011_26859067_1_14
26859011_26859550_1_11
Title: How to display the elements in a Set that has integer values in Java 
----------------------------------------

private void removeElementsFromSecond (Integer [] arr1, Integer [] arr2) {
    List list1 = Arrays.asList (arr1);
    Set < Integer > set1 = new LinkedHashSet < Integer > (list1);
    List list2 = Arrays.asList (arr2);
    Set < Integer > set2 = new LinkedHashSet < Integer > (list2);
    set2.removeAll (set1);
    Iterator itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------

private static void removeElementsFromSecond (Integer [] arr1, Integer [] arr2) {
    List list1 = Arrays.asList (arr1);
    Set < Integer > set1 = new LinkedHashSet < Integer > (list1);
    List list2 = Arrays.asList (arr2);
    Set < Integer > set2 = new LinkedHashSet < Integer > (list2);
    set2.removeAll (set1);
    Iterator itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859011_26859304_1_17
26859011_26859550_1_11
Title: How to display the elements in a Set that has integer values in Java 
----------------------------------------

private void removeElementsFromSecond (int [] arr1, int [] arr2) {
    Set < Integer > set1 = new LinkedHashSet < Integer > ();
    for (int i : arr1) {
        set1.add (i);
    }
    Set < Integer > set2 = new LinkedHashSet < Integer > ();
    for (int i : arr2) {
        set2.add (i);
    }
    set2.removeAll (set1);
    Iterator < Integer > itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------

private static void removeElementsFromSecond (Integer [] arr1, Integer [] arr2) {
    List list1 = Arrays.asList (arr1);
    Set < Integer > set1 = new LinkedHashSet < Integer > (list1);
    List list2 = Arrays.asList (arr2);
    Set < Integer > set2 = new LinkedHashSet < Integer > (list2);
    set2.removeAll (set1);
    Iterator itr = set2.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2685946_2686059_43_50
2685946_2686943_1_18
Title: The bigger value in a matrix row 
----------------------------------------

private int [] bigger (int rowIndex, int count, int [] [] matrix) {
    int [] row = copy (matrix [rowIndex]);
    Arrays.sort (row);
    int [] result = new int [count];
    for (int i = 0;
    i < count; i ++) result [i] = row [i + row.length - count];

    return result;
}
----------------------------------------

private int [] bigger (int rowIndex, int count, int [] [] matrix) {
    int [] row = matrix [rowIndex];
    int [] original = matrix [rowIndex];
    int [] result = new int [count];
    Arrays.sort (row);
    for (int i = 0;
    i < count; i ++) {
        for (int j = 0;
        j < original.length; j ++) {
            if (row [row.length - 1 - i] == original [j]) {
                result [i] = j;
                original [j] = Integer.MIN_VALUE;
            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859714_26859740_1_14
26859714_26859995_1_11
Title: "java programming Exception in thread ""main"" what is this error?" 
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    int p = list.indexOf (item);
    if (p < 0) return false;

    for (int i = 0;
    i < list.size ();) {
        if (list.get (i) < item) {
            list.remove (i);
        } else {
            i ++;
        }
    }
    return true;
}
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    if (list.contains (item)) {
        for (int i = 0;
        i < list.size (); i ++) if (list.get (i) == item) list.remove (i);

        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859714_26859740_1_14
26859714_26863013_6_19
Title: "java programming Exception in thread ""main"" what is this error?" 
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    int p = list.indexOf (item);
    if (p < 0) return false;

    for (int i = 0;
    i < list.size ();) {
        if (list.get (i) < item) {
            list.remove (i);
        } else {
            i ++;
        }
    }
    return true;
}
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    int p = list.indexOf (item);
    if (! list.contains (item)) return false;
    else for (int i = 0;
    i < list.size (); i ++) {
        int n = list.get (i);
        if (n > list.get (i + 1)) list.remove (p);

    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26859714_26859995_1_11
26859714_26863013_6_19
Title: "java programming Exception in thread ""main"" what is this error?" 
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    if (list.contains (item)) {
        for (int i = 0;
        i < list.size (); i ++) if (list.get (i) == item) list.remove (i);

        return true;
    }
    return false;
}
----------------------------------------

public static boolean deleteValues (ArrayList < Integer > list, int item) {
    int p = list.indexOf (item);
    if (! list.contains (item)) return false;
    else for (int i = 0;
    i < list.size (); i ++) {
        int n = list.get (i);
        if (n > list.get (i + 1)) list.remove (p);

    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26862120_26862228_2_10
26862120_26862261_2_9
Title: Staircase of Numbers using Nested Loops 
----------------------------------------

public static void main (String [] args) {
    int n = 5;
    for (int i = 1;
    i <= n; i ++) {
        for (int j = n - i;
        j > 0; j --) {
            System.out.print (" ");
        }
        System.out.println (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 5; i ++) {
        for (int j = 5;
        j > i; j --) {
            System.out.print (" ");
        }
        System.out.println (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26866464_26866506_1_12
26866464_26869251_1_14
Title: How to remove an account from an arraylist with the account number specified as a parameter 
----------------------------------------

public boolean removeAccount (String accountNumber) {
    Iterator < Account > i = accounts.iterator ();
    while (i.hasNext ()) {
        Account s = i.next ();
        if (s.getAccountNumber ().equals (accountNumber)) {
            i.remove ();
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean removeAccount (String accountNumber) {
    int index = 0;
    Account toRemove;
    for (Account account : accounts) {
        if (account.getNumber.equals (accountNumber)) {
            toRemove = account;
        }
    }
    accounts.remove (toRemove)
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26868255_26869365_1_16
26868255_26870332_128_143
Title: JavaFX spring physics 
----------------------------------------

public void update () {
    double dx = p1.getCenterX () - p2.getCenterX ();
    double dy = p1.getCenterY () - p2.getCenterY ();
    double dist = Math.hypot (dx, dy);
    double theta = Math.atan2 (dy, dx);
    double force = (length - dist) * strength;
    Point2D p1v = new Point2D (force * Math.cos (theta) / p1.mass / 10000, force * Math.sin (theta) / p1.mass / 10000);
    Point2D p2v = new Point2D (- force * Math.cos (theta) / p2.mass / 10000, - force * Math.sin (theta) / p2.mass / 10000);
    p1.vector = p1.vector.add (p1v);
    p2.vector = p2.vector.add (p2v);
}
----------------------------------------

public void update () {
    double stop = 1.0;
    double dx = p1.getCenterX () - p2.getCenterX ();
    double dy = p1.getCenterY () - p2.getCenterY ();
    double dist = Math.hypot (dx, dy);
    double theta = Math.atan2 (dy, dx);
    double force = (length - dist) * strength;
    if (force > 0) {
        force *= 4;
        stop = 0.9;
    }
    Point2D p1v = new Point2D (force * Math.cos (theta) * speedo / p1.mass, force * Math.sin (theta) * speedo / p1.mass);
    Point2D p2v = new Point2D (- force * Math.cos (theta) * speedo / p2.mass, - force * Math.sin (theta) * speedo / p2.mass);
    p1.vector = p1.vector.add (p1v).multiply (stop);
    p2.vector = p2.vector.add (p2v).multiply (stop);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26868255_26870332_233_245
26868255_26870332_72_95
Title: JavaFX spring physics 
----------------------------------------

public void handle (MouseEvent t) {
    double offsetX = t.getSceneX () - orgSceneX;
    double offsetY = t.getSceneY () - orgSceneY;
    double newTranslateX = orgTranslateX + offsetX;
    double newTranslateY = orgTranslateY + offsetY;
    Particle p = ((Particle) (t.getSource ()));
    p.x = newTranslateX;
    p.y = newTranslateY;
}
----------------------------------------

public void handle (long now) {
    for (Particle p : particles) {
        if (! p.selected) {
            p.move ();
        }
    }
    for (Spring s : springs) {
        s.update ();
    }
    for (Particle p : particles) {
        p.updateLocation ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26891371_28074496_193_239
26891371_28074496_34_55
Title: Creating draggable and resizable Component in Java 
----------------------------------------

private void setInputEventListener (final int position) {
    addInputEventListener (new PBasicInputEventHandler () {
        @Override
        public void mouseEntered (PInputEvent event) {
            canvas.setCursor (resizeCursor);
            event.setHandled (true);
        }@Override
        public void mouseExited (PInputEvent event) {
            canvas.setCursor (Cursor.getDefaultCursor ());
            event.setHandled (true);
        }@Override
        public void mouseDragged (PInputEvent event) {
            PDimension delta = event.getDeltaRelativeTo (Anchor.this);
            PNode parent = getParent ();
            if (position == SwingConstants.EAST || position == SwingConstants.NORTH_EAST || position == SwingConstants.SOUTH_EAST) {
                parent.setWidth (parent.getWidth () + delta.width);
            } else if (position == SwingConstants.WEST || position == SwingConstants.NORTH_WEST || position == SwingConstants.SOUTH_WEST) {
                parent.setX (parent.getX () + delta.width);
                parent.setWidth (parent.getWidth () - delta.width);
            }

            if (position == SwingConstants.SOUTH || position == SwingConstants.SOUTH_EAST || position == SwingConstants.SOUTH_WEST) {
                parent.setHeight (parent.getHeight () + delta.height);
            } else if (position == SwingConstants.NORTH || position == SwingConstants.NORTH_EAST || position == SwingConstants.NORTH_WEST) {
                parent.setY (parent.getY () + delta.height);
                parent.setHeight (parent.getHeight () - delta.height);
            }

            event.setHandled (true);
        }}

    );
}
----------------------------------------

private void setInputEventListener () {
    addInputEventListener (new PBasicInputEventHandler () {
        @Override
        public void mouseEntered (PInputEvent event) {
            canvas.setCursor (moveCursor);
        }@Override
        public void mouseExited (PInputEvent event) {
            canvas.setCursor (Cursor.getDefaultCursor ());
        }@Override
        public void mouseDragged (PInputEvent event) {
            PDimension delta = event.getDeltaRelativeTo (PBox.this);
            translate (delta.width, delta.height);
            event.setHandled (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2689379_17548042_1_14
2689379_2689414_1_16
Title: how to get a list of dates between two dates in java 
----------------------------------------

private static List < Date > getDatesBetween (final Date date1, final Date date2) {
    List < Date > dates = new ArrayList < > ();
    Calendar c1 = new GregorianCalendar ();
    c1.setTime (date1);
    Calendar c2 = new GregorianCalendar ();
    c2.setTime (date2);
    int a = c1.get (Calendar.DATE);
    int b = c2.get (Calendar.DATE);
    while ((c1.get (Calendar.YEAR) != c2.get (Calendar.YEAR)) || (c1.get (Calendar.MONTH) != c2.get (Calendar.MONTH)) || (c1.get (Calendar.DATE) != c2.get (Calendar.DATE))) {
        c1.add (Calendar.DATE, 1);
        dates.add (new Date (c1.getTimeInMillis ()));
    }
    return dates;
}
----------------------------------------

public List < Date > getDatesBetween (final Date date1, final Date date2) {
    List < Date > dates = new ArrayList < Date > ();
    Calendar calendar = new GregorianCalendar () {

        {
            set (Calendar.YEAR, date1.getYear ());
            set (Calendar.MONTH, date1.getMonth ());
            set (Calendar.DATE, date1.getDate ());
        }

    }

    ;
    while (calendar.get (Calendar.YEAR) != date2.getYear () && calendar.get (Calendar.MONTH) != date2.getMonth () && calendar.get (Calendar.DATE) != date2.getDate ()) {
        calendar.add (Calendar.DATE, 1);
        dates.add (new Date (calendar.get (Calendar.YEAR), calendar.get (Calendar.MONTH), calendar.get (Calendar.DATE)));
    }
    return dates;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26894869_26895028_124_167
26894869_26895028_71_86
Title: my application stops when I start it 
----------------------------------------

public void onClick (View view) {
    if (! mGameOver) {
        if (mBoardButtons [location].isEnabled ()) {
            setMove (mGame.HUMAN_PLAYER, location);
            int winner = mGame.checkForWinner ();
            if (winner == 0) {
                mInfoTextView.setText (R.string.turn_computer);
                int move = mGame.getComputerMove ();
                setMove (mGame.ANDROID_PLAYER, move);
                winner = mGame.checkForWinner ();
            }
            if (winner == 0) mInfoTextView.setText (R.string.turn_human);
            else if (winner == 1) {
                mInfoTextView.setText (R.string.result_tie);
                mTieCounter ++;
                mTieCount.setText (Integer.toString (mTieCounter));
                mGameOver = true;
            } else if (winner == 2) {
                mInfoTextView.setText (R.string.result_human_wins);
                mHumanCounter ++;
                mHumanCount.setText (Integer.toString (mHumanCounter));
                mGameOver = true;
            } else if (winner == 3) {
                mInfoTextView.setText (R.string.result_android_wins);
                mAndroidCounter ++;
                mAndroidCount.setText (Integer.toString (mAndroidCounter));
                mGameOver = true;
            }

        }
    }
}
----------------------------------------

public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.ten :
            startNewGame ();
            break;
        case R.id.eleven :
            MainActivity.this.finish ();
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26895534_26896038_1_21
26895534_26896057_13_34
Title: JavaFX Split Menu Button Arrow Trigger Event 
----------------------------------------

@Override
public void start (Stage primaryStage) {
    SplitMenuButton m = new SplitMenuButton ();
    m.showingProperty ().addListener ((ov, b, b1) -> {
        if (b1) {
            System.out.println ("popup visible");
            MenuItem menuItem = new MenuItem ("New Option");
            if (m.getItems ().stream ().noneMatch (i -> i.getText ().equals (menuItem.getText ()))) {
                menuItem.setOnAction (e -> System.out.println ("New Option added"));
                m.getItems ().add (menuItem);
            }
        }
    });
    m.setText ("Click the arrow ->");
    m.getItems ().add (new MenuItem ("First option"));
    StackPane root = new StackPane (m);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    IntegerProperty count = new SimpleIntegerProperty ();
    SplitMenuButton splitMenuButton = new SplitMenuButton ();
    splitMenuButton.setText ("Action");
    splitMenuButton.showingProperty ().addListener ((obs, wasShowing, isNowShowing) -> {
        if (isNowShowing) {
            int c = count.get () + 1;
            count.set (c);
            splitMenuButton.getItems ().clear ();
            for (int choice = 1;
            choice <= 3; choice ++) {
                MenuItem mi = new MenuItem ("Choice " + choice + " (" + c + ")");
                splitMenuButton.getItems ().add (mi);
            }
        }
    });
    BorderPane root = new BorderPane (null, splitMenuButton, null, null, null);
    primaryStage.setScene (new Scene (root, 350, 150));
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26902156_26919498_54_67
26902156_26919498_98_106
Title: (Java) Searching Computer For a Specific File (a faster way) 
----------------------------------------

private final void end () {
    try {
        fileQueue.put (POISONPILL);
    } catch (final InterruptedException e) {
    }
    for (int i = 0;
    i < num; i ++) {
        try {
            dirQueue.put (POISONPILL);
        } catch (final InterruptedException e) {
        }
    }
}
----------------------------------------

private final void end () {
    for (int i = 0;
    i < num; i ++) {
        try {
            dirQueue.put (POISONPILL);
        } catch (final InterruptedException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26904955_31455559_18_26
26904955_31455559_28_38
Title: Passing listeners via Bundle in AlertDialogFragment - is it possible? 
----------------------------------------

public static ConfirmOrCancelDialogFragment newInstance (String title, String body, ConfirmOrCancelDialogListener listener) {
    ConfirmOrCancelDialogFragment fragment = new ConfirmOrCancelDialogFragment ();
    Bundle args = new Bundle ();
    args.putString ("title", title);
    args.putString ("body", body);
    args.putParcelable ("listener", listener);
    fragment.setArguments (args);
    return fragment;
}
----------------------------------------

public static ConfirmOrCancelDialogFragment newInstance (String title, String body, String confirmButton, String cancelButton, ConfirmOrCancelDialogListener listener) {
    ConfirmOrCancelDialogFragment fragment = new ConfirmOrCancelDialogFragment ();
    Bundle args = new Bundle ();
    args.putString ("title", title);
    args.putString ("body", body);
    args.putString ("confirmButton", confirmButton);
    args.putString ("cancelButton", cancelButton);
    args.putParcelable ("listener", listener);
    fragment.setArguments (args);
    return fragment;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26905208_26935998_130_152
26905208_26949994_196_204
Title: JSlider issue audio player 
----------------------------------------

private void updateSlider () {
    long currentMicros = audioClip.getMicrosecondPosition ();
    double progress = (double) currentMicros / audioClip.getMicrosecondLength ();
    final int sliderValue = (int) (progress * slider.getMaximum ());
    System.out.println ("update " + progress);
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            slider.setValue (sliderValue);
        }}

    );
}
----------------------------------------

void updateSlider (double elapsed, double total) {
    final double amt = elapsed / total;
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            slider.setValue ((int) Math.round (slider.getMaximum () * amt));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26905208_26935998_98_110
26905208_26949994_100_109
Title: JSlider issue audio player 
----------------------------------------

void start () {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            doRun ();
        }}

    );
    t.setDaemon (true);
    t.start ();
}
----------------------------------------

void start () {
    try {
        player = new PlaybackLoop (file);
        new Thread (player).start ();
        play.setText ("Stop");
    } catch (Exception e) {
        player = null;
        showError ("the file couldn't be played", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26905208_26949994_157_194
26905208_26949994_24_63
Title: JSlider issue audio player 
----------------------------------------

public void run () {
    line.start ();
    byte [] buf = new byte [bufferSize];
    try {
        try {
            int b;
            long elapsed = 0;
            long total = in.getFrameLength ();
            for (;;) {
                synchronized (this) {
                    if (stopped) {
                        break;
                    }
                }
                b = in.read (buf, 0, buf.length);
                if (b < 0) {
                    break;
                }
                elapsed += b / fmt.getFrameSize ();
                updateSlider (elapsed, total);
                line.write (buf, 0, b);
            }
        } finally {
            line.close ();
            in.close ();
        }
    } catch (IOException e) {
        e.printStackTrace (System.err);
        showError ("there was a problem during playback", e);
    }
    endOnEDT ();
}
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("Playback Slider");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel content = new JPanel (new BorderLayout ()) {
        @Override
        public Dimension getPreferredSize () {
            Dimension pref = super.getPreferredSize ();
            pref.width = 480;
            return pref;
        }}

    ;
    slider = new JSlider (JSlider.HORIZONTAL, 0, 1000, 0);
    content.add (slider, BorderLayout.CENTER);
    JToolBar bar = new JToolBar (JToolBar.HORIZONTAL);
    bar.setFloatable (false);
    content.add (bar, BorderLayout.SOUTH);
    open = new JButton ("Open");
    play = new JButton ("Play");
    open.addActionListener (this);
    play.addActionListener (this);
    label = new JLabel ("");
    bar.add (open);
    bar.add (new JLabel (" "));
    bar.add (play);
    bar.add (new JLabel (" "));
    bar.add (label);
    frame.setContentPane (content);
    frame.pack ();
    frame.setResizable (false);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26908126_26908229_1_33
26908126_26908300_30_58
Title: CheckBox in ListView populated by Adapter 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        LayoutInflater mInflater = (LayoutInflater) mContext.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
        convertView = mInflater.inflate (R.layout.category_filter_item, null);
    }
    DroidSans = Typeface.createFromAsset (mContext.getAssets (), "fonts/DroidSans.ttf");
    ImageView filter_img = (ImageView) convertView.findViewById (R.id.category_picture);
    TextView filter_category = (TextView) convertView.findViewById (R.id.filter_category);
    CheckBox checkBox = (CheckBox) convertView.findViewById (R.id.checkbox);
    checkBox.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (checkBox.isChecked ()) Toast.makeText (view.getContext (), "TEST", Toast.LENGTH_SHORT).show ();

        }}

    );
    filter_category.setTypeface (DroidSans);
    filter_category.setText (mFilters.get (position));
    filter_img.setBackgroundResource (mPictures.get (position));
    return convertView;
}
----------------------------------------

public View getView (final int position, View convertView, ViewGroup parent) {
    ViewHolder holder;
    if (convertView == null) {
        holder = new ViewHolder ();
        convertView = LayoutInflater.from (mContext).inflate (R.layout.category_filter_item, null);
        holder.filter_img = (ImageView) convertView.findViewById (R.id.category_picture);
        holder.filter_category = (TextView) convertView.findViewById (R.id.filter_category);
        holder.checkBox = (CheckBox) convertView.findViewById (R.id.checkbox);
        holder.filter_category.setTypeface (Typeface.createFromAsset (mContext.getAssets (), "fonts/DroidSans.ttf"));
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    holder.filter_category.setText (mFilters.get (position));
    holder.filter_img.setBackgroundResource (mPictures.get (position));
    holder.checkBox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            if (isChecked) {
                Toast.makeText (view.getContext (), "Item at " + position + " is Checked", Toast.LENGTH_SHORT).show ();
            }
        }}

    );
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26913572_26913726_1_16
26913572_26913927_1_25
Title: How do I add user input to an Array in java? 
----------------------------------------

public static void main (String args []) {
    Scanner user_input = new Scanner (System.in);
    int i;
    int n;
    String a;
    System.out.println ("Enter the Class:");
    a = user_input.next ();
    System.out.println ("Enter the number of Students:");
    n = user_input.nextInt ();
    String [] strings = new String [n];
    for (i = 0; i < n;) {
        strings [i] = a + ++ i;
        System.out.println (strings [i - 1]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner user_input = new Scanner (System.in);
    int i;
    int n;
    String a;
    System.out.println ("Enter the Class:");
    a = user_input.next ();
    System.out.println ("Enter the number of Students:");
    n = user_input.nextInt ();
    String [] arr = new String [n];
    for (i = 1; i <= n; i ++) {
        String g = a + i;
        System.out.println (g);
        arr [i - 1] = g;
    }
    for (String s : arr) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26914623_26914656_1_12
26914623_40393797_5_14
Title: error with basic java code 
----------------------------------------

public static void main (String [] args) throws Exception {
    DataOutputStream out = null;
    DataInputStream in = null;
    try {
        out = new DataOutputStream (new BufferedOutputStream (new FileOutputStream ("dec.dat")));
        in = new DataInputStream (new BufferedInputStream (new FileInputStream ("enc.dat")));
        String enc = in.readUTF ();
        System.out.println (enc);
    } catch (EOFException e) {
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    try {
        DataOutputStream out = new DataOutputStream (new BufferedOutputStream (new FileOutputStream ("dec.dat")));
        DataInputStream in = new DataInputStream (new BufferedInputStream (new FileInputStream ("enc.dat")));
        String enc = in.readUTF ();
        System.out.println (enc);
    } catch (EOFException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26917597_26917643_1_11
26917597_26917687_1_13
Title: Error: Missing return statement in Java 
----------------------------------------

public boolean ifInArray (String name) {
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------

public boolean ifInArray (String name) {
    Boolean result = null;
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            result = true;
        } else {
            result = false;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26917597_26917643_1_11
26917597_26917701_1_11
Title: Error: Missing return statement in Java 
----------------------------------------

public boolean ifInArray (String name) {
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------

public boolean ifInArray (String name) {
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26917597_26917687_1_13
26917597_26917701_1_11
Title: Error: Missing return statement in Java 
----------------------------------------

public boolean ifInArray (String name) {
    Boolean result = null;
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            result = true;
        } else {
            result = false;
        }
    }
    return result;
}
----------------------------------------

public boolean ifInArray (String name) {
    for (Dog breed : breeds) {
        if (breed.equals (name)) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26924654_26924751_1_14
26924654_26924775_1_16
Title: Change listView row backgroundcolor based on item parsed from Json 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    View view = super.getView (position, convertView, parent);
    TextView textView = (TextView) view.findViewById (R.id.textView);
    if (textView.getText ().toString ().equalsIgnoreCase ("elephant")) {
    } else if (textView.getText ().toString ().equalsIgnoreCase ("lion")) {
    }

    return view;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    if (pet_nane.equalsIgnoreCase ("dog")) {
        convertView.setBackgroundColor (android.R.color.black);
    } else if (pet_nane.equalsIgnoreCase ("cat")) {
        convertView.setBackgroundColor (android.R.color.white);
    } else {
        convertView.setBackgroundColor (android.R.color.transparent);
    }

    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26924957_26925008_1_12
26924957_26925018_9_17
Title: String concatenation and + operator 
----------------------------------------

public String concat (String s) {
    int i = s.length ();
    if (i == 0) {
        return this;
    } else {
        char ac [] = new char [count + i];
        getChars (0, count, ac, 0);
        s.getChars (0, i, ac, count);
        return new String (0, count + i, ac);
    }
}
----------------------------------------

public String concat (String string) {
    if (string.count > 0 && count > 0) {
        char [] buffer = new char [count + string.count];
        System.arraycopy (value, offset, buffer, 0, count);
        System.arraycopy (string.value, string.offset, buffer, count, string.count);
        return new String (0, buffer.length, buffer);
    }
    return count == 0 ? string : this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26925575_26925978_17_26
26925575_26925978_6_14
Title: Determining equivalent arrays in Java 
----------------------------------------

private static Map < Object, ? extends Number > asSet (Object [] arr1) {
    Map < Object, Integer > ret = new HashMap < > ();
    for (Object o : arr1) {
        if (o instanceof Object []) o = asSet ((Object []) o);

        Integer count = ret.get (o);
        ret.put (o, count == null ? 1 : count + 1);
    }
    return ret;
}
----------------------------------------

private static Set < Object > asSet (Object [] arr1) {
    Set < Object > ret = new HashSet < > ();
    for (Object o : arr1) {
        if (o instanceof Object []) o = asSet ((Object []) o);

        ret.add (o);
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26928099_28143205_10_33
26928099_28143205_19_30
Title: What's the RxJava equivalent of the Observable.expand() in RxJs? 
----------------------------------------

public Observable < T > call (Observable < T > source) {
    return source.concatMap (new Func1 < T, Observable < T > > () {
        @Override
        public Observable < T > call (T initialValue) {
            return Observable.< Void > just (null).repeat ().scan (initialValue, new Func2 < T, Void, T > () {
                @Override
                public T call (final T currentValue, final Void unusedSignal) {
                    return expandFunc.call (currentValue);
                }}

            );
        }}

    );
}
----------------------------------------

public Observable < T > call (T initialValue) {
    return Observable.< Void > just (null).repeat ().scan (initialValue, new Func2 < T, Void, T > () {
        @Override
        public T call (final T currentValue, final Void unusedSignal) {
            return expandFunc.call (currentValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26928953_26929284_1_33
26928953_26929844_1_19
Title: java regex match string with asterisks 
----------------------------------------

public static void main (String [] args) throws Exception {
    org.springframework.util.AntPathMatcher pathMatcher = new org.springframework.util.AntPathMatcher ();
    String path = "text1/value1/value2";
    ArrayList < String > entries = new ArrayList < String > ();
    entries.add ("text1/*");
    entries.add ("text2/*/*");
    entries.add ("text2/*/*/*");
    entries.add ("text1/*/*");
    entries.add ("text1/value1/*");
    entries.add ("*/*");
    String bestMatch = null;
    Comparator < String > comp = pathMatcher.getPatternComparator (path);
    for (String pattern : entries) {
        if (pathMatcher.match (pattern, path)) {
            if (bestMatch != null) {
                if (comp.compare (bestMatch, pattern) > 0) {
                    bestMatch = pattern;
                }
            } else {
                bestMatch = pattern;
            }
        }
    }
    System.out.println (bestMatch);
}
----------------------------------------

public static void main (String [] args) {
    final ArrayList < String > entries = new ArrayList < String > ();
    entries.add ("text1/*");
    entries.add ("text2/*/*");
    entries.add ("text2/*/*/*");
    entries.add ("text1/*/*");
    entries.add ("text1/value1/*");
    entries.add ("*/*");
    final Pattern pattern = Pattern.compile ("^([^/*]+)/([^/*]+)/[*]$", 2);
    for (String entry : entries) {
        Matcher matcher = pattern.matcher (entry);
        while (matcher.find ()) {
            System.out.println ("found correct entry: " + entry);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26939622_26939947_105_147
26939622_26939947_164_179
Title: Why is my ButtonClickListerner not working? 
----------------------------------------

public void onClick (View v) {
    if (! mGameOver) {
        if (mBoardButtons [location].isEnabled ()) {
            setMove (mGame.HUMAN_PLAYER, location);
            int winner = mGame.checkForWinner ();
            if (winner == 0) {
                mInfoTextView.setText (R.string.turn_computer);
                int move = mGame.getComputerMove ();
                setMove (mGame.ANDROID_PLAYER, move);
                winner = mGame.checkForWinner ();
            }
            if (winner == 0) mInfoTextView.setText (R.string.turn_human);
            else if (winner == 1) {
                mInfoTextView.setText (R.string.result_tie);
                mTieCounter ++;
                mTieCount.setText (Integer.toString (mTieCounter));
                mGameOver = true;
            } else if (winner == 2) {
                mInfoTextView.setText (R.string.result_human_wins);
                mHumanCounter ++;
                mHumanCount.setText (Integer.toString (mHumanCounter));
                mGameOver = true;
            } else if (winner == 3) {
                mInfoTextView.setText (R.string.result_android_wins);
                mAndroidCounter ++;
                mAndroidCount.setText (Integer.toString (mAndroidCounter));
                mGameOver = true;
            }

        }
    }
}
----------------------------------------

public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.ten :
            startNewGame ();
            return;
        case R.id.eleven :
            MainActivity.this.finish ();
            return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26953567_26953613_6_24
26953567_26953614_1_24
Title: Find largest and smallest numbers number using Arrays 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Enter the number of integers you would like to enter:");
    int numberEnter = keyboard.nextInt ();
    int numbers [] = new int [numberEnter];
    for (int i = 0;
    i < numberEnter; i ++) {
        System.out.println ("Enter integer:");
        numbers [i] = keyboard.nextInt ();
    }
    int maxValue = numbers [0];
    int minValue = numbers [0];
    for (int index = 1;
    index < numbers.length; index ++) {
        if (numbers [index] > maxValue) {
            maxValue = numbers [index];
        }
    }
    System.out.println ("Print: " + maxValue);
    System.out.println ("The difference between the largest and the smallest is: ");
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Number of integers to enter:");
    int numberEnter = keyboard.nextInt ();
    int numbers [] = new int [numberEnter];
    int pos = 0;
    do {
        System.out.printf ("Please enter integer #%d/%d:%n", pos, numberEnter);
        numbers [pos ++] = keyboard.nextInt ();
    } while (pos < numberEnter && keyboard.hasNextInt ());
    int min = numbers [0];
    int max = numbers [0];
    for (pos = 1; pos < numbers.length; pos ++) {
        if (numbers [pos] < min) {
            min = numbers [pos];
        }
        if (numbers [pos] > max) {
            max = numbers [pos];
        }
    }
    System.out.printf ("%s Min: %d Max: %d%n", Arrays.toString (numbers), min, max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26954119_26954274_12_20
26954119_26955396_40_52
Title: StackOverFlowError in java program 
----------------------------------------

public static boolean isPrime (long num) {
    long i;
    for (i = 2; i < num; i ++) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (BigInteger num) {
    for (int idx = PRIMESCACHE.size () - 1;
    idx >= 0; -- idx) {
        if (num.mod (PRIMESCACHE.get (idx)).compareTo (BigInteger.ZERO) == 0) {
            return false;
        }
    }
    if (! PRIMESCACHE.contains (num)) {
        PRIMESCACHE.add (num);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26954205_26954403_2_12
26954205_26954431_4_16
Title: check if character is a punctuation 
----------------------------------------

public static String checkStart (String word) {
    char [] punctuation = {'.', ',', ';', ':', '?', '!', '"', '\'', ')', '('};
    int i;
    for (i = 0; i < punctuation.length; i ++) {
        if (word.charAt (0) == punctuation [i]) {
            word = word.substring (1);
        }
    }
    return word;
}
----------------------------------------

private static String checkStart (String word) {
    char [] punctuation = {'.', ',', ';', ':', '?', '!', '"', '\'', ')', '('};
    int i;
    for (i = 0; i < punctuation.length; i ++) {
        for (int j = 0;
        j < word.length (); j ++) {
            if (word.charAt (j) == punctuation [i]) {
                word = word.substring (j);
            }
        }
    }
    return word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26954717_26958297_1_21
26954717_26972427_6_59
Title: How to change or override the tooltip in JavaFX ColorPicker 
----------------------------------------

@Override
public void start (Stage primaryStage) {
    ColorPicker picker = new ColorPicker ();
    StackPane root = new StackPane (picker);
    Scene scene = new Scene (root, 500, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
    picker.showingProperty ().addListener ((obs, b, b1) -> {
        if (b1) {
            PopupWindow popupWindow = getPopupWindow ();
            Node popup = popupWindow.getScene ().getRoot ().getChildrenUnmodifiable ().get (0);
            popup.lookupAll (".color-rect").stream ().forEach (rect -> {
                Color c = (Color) ((Rectangle) rect).getFill ();
                Tooltip.install (rect.getParent (), new Tooltip ("Custom tip for " + c.toString ()));
            });
        }
    });
}
----------------------------------------

public void start (Stage primaryStage) {
    AnchorPane panCircles = new AnchorPane ();
    Scene scene = new Scene (panCircles, 400, 400);
    final Random random = new Random ();
    IntStream.range (0, 5).boxed ().forEach (i -> {
        final Circle circle = new Circle (20 + random.nextInt (80), Color.rgb (random.nextInt (255), random.nextInt (255), random.nextInt (255)));
        circle.setTranslateX (100 + random.nextInt (200));
        circle.setTranslateY (100 + random.nextInt (200));
        panCircles.getChildren ().add (circle);
    });
    panCircles.setPrefSize (400, 400);
    ColorPicker colorPicker = new ColorPicker ();
    panCircles.getChildren ().add (colorPicker);
    primaryStage.setScene (scene);
    primaryStage.show ();
    colorPicker.showingProperty ().addListener ((obs, b, b1) -> {
        if (b1) {
            getPopupWindow ();
        }
    });
    panCircles.getChildren ().stream ().filter (c -> c instanceof Circle).map (c -> (Circle) c).forEach (circle -> {
        circle.setOnMouseClicked (e -> {
            if (e.getButton ().equals (MouseButton.SECONDARY)) {
                findWindowExecutor.execute (new WindowTask ());
                final ColorPicker picker = new ColorPicker ();
                picker.setStyle ("-fx-border-radius: 10 10 10 10;" + "-fx-background-radius: 10 10 10 10;");
                picker.setValue ((Color) (circle.getFill ()));
                picker.valueProperty ().addListener ((obs, c0, c1) -> circle.setFill (c1));
                final ContextMenu contextMenu = new ContextMenu ();
                MenuItem editLabel = new MenuItem ();
                contextMenu.getItems ().add (editLabel);
                editLabel.setGraphic (picker);
                contextMenu.show (panCircles, e.getScreenX (), e.getScreenY ());
            }
        });
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26955954_26956956_54_260
26955954_26956956_60_257
Title: How Properly run a background service? 
----------------------------------------

public void run () {
    mHandler.post (new Runnable () {
        @Override
        public void run () {
            DBAdapter.init (getApplicationContext ());
            SharedPreferences prefs = getSharedPreferences ("notification_oldtime", MODE_PRIVATE);
            SharedPreferences.Editor editor = getSharedPreferences ("notification_oldtime", MODE_PRIVATE).edit ();
            int sample_order_new_count = 0, trail_order_new_count = 0, new_order_new_count = 0, old_sample_order_count = 0, old_trail_order_count = 0, old_new_order_count = 0;
            String search_read_URL = DBAdapter.getUrlName () + "/web/dataset/search_read";
            JSONArray sample_jsonarray, trail_jsonarray, new_jsonarray;
            JSONObject jsonObj_sample, jsonObj_trail, jsonObj_newOrder;
            StringEntity sample_entity, new_order_entity, trail_entity;
            String responseBody_sample, responseBody_Trail, responseBody_NewOrder;
            ResponseHandler < String > responseHandler = new BasicResponseHandler ();
            try {
                DBAdapter.init (getApplicationContext ());
                HttpPost sample_get = new HttpPost (search_read_URL);
                HttpPost new_order_get = new HttpPost (search_read_URL);
                HttpPost trail_get = new HttpPost (search_read_URL);
                Log.d ("service", "start");
                sample_entity = new StringEntity (" {\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"sale.sample.order\",\"fields\":[\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"sale.sample.order\",\"menu_id\":378,\"action\":446,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":780343122}");
                new_order_entity = new StringEntity ("{\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"new.order.log\",\"fields\":[\"name\",\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"new.order.log\",\"menu_id\":355,\"action\":418,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":674827326}");
                trail_entity = new StringEntity ("{\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"leather.trial.order\",\"fields\":[\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"leather.trial.order\",\"menu_id\":375,\"action\":442,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":455581058}");
                sample_get.setHeader ("Content-Type", "application/json");
                sample_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
                sample_get.setEntity (sample_entity);
                new_order_get.setHeader ("Content-Type", "application/json");
                new_order_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
                new_order_get.setEntity (new_order_entity);
                trail_get.setHeader ("Content-Type", "application/json");
                trail_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
                trail_get.setEntity (trail_entity);
                responseBody_sample = client.execute (sample_get, responseHandler);
                jsonObj_sample = new JSONObject (responseBody_sample);
                JSONObject json = jsonObj_sample.getJSONObject ("result");
                sample_jsonarray = json.getJSONArray ("records");
                responseBody_Trail = client.execute (trail_get, responseHandler);
                jsonObj_trail = new JSONObject (responseBody_Trail);
                JSONObject json1 = jsonObj_trail.getJSONObject ("result");
                trail_jsonarray = json1.getJSONArray ("records");
                responseBody_NewOrder = client.execute (new_order_get, responseHandler);
                jsonObj_newOrder = new JSONObject (responseBody_NewOrder);
                JSONObject json2 = jsonObj_newOrder.getJSONObject ("result");
                new_jsonarray = json2.getJSONArray ("records");
                long server_Time = 0;
                SimpleDateFormat format = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss", Locale.US);
                String new_order_name = "", trail_order_name = "", sample_order_name = "";
                for (int m = 0;
                m < trail_jsonarray.length (); m ++) {
                    JSONObject c = trail_jsonarray.getJSONObject (m);
                    JSONArray cus_json_array = c.getJSONArray ("partner_id");
                    JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
                    Date date = format.parse (String.valueOf (c.getString ("__last_update")));
                    server_Time = date.getTime ();
                    DBAdapter.init (getApplicationContext ());
                    long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
                    Log.d ("trail ct" + current_time, "st" + server_Time);
                    if (server_Time > current_time) {
                        trail_order_new_count ++;
                        Log.d ("trail_order cus name", cus_json_array.getString (1));
                        trail_order_name = trail_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\n" + "Marketing Person=" + market_person_json_array.getString (1);
                    } else {
                        m = trail_jsonarray.length ();
                    }
                }
                for (int m = 0;
                m < sample_jsonarray.length (); m ++) {
                    JSONObject c = sample_jsonarray.getJSONObject (m);
                    JSONArray cus_json_array = c.getJSONArray ("partner_id");
                    JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
                    Date date = format.parse (String.valueOf (c.getString ("__last_update")));
                    server_Time = date.getTime ();
                    DBAdapter.init (getApplicationContext ());
                    long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
                    Log.d ("sample ct" + current_time, "st" + server_Time);
                    if (server_Time > current_time) {
                        sample_order_new_count ++;
                        Log.d ("sample_order cus name", cus_json_array.getString (1));
                        sample_order_name = sample_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\nMarketing Person=" + market_person_json_array.getString (1);
                    } else {
                        m = trail_jsonarray.length ();
                    }
                }
                for (int m = 0;
                m < new_jsonarray.length (); m ++) {
                    JSONObject c = new_jsonarray.getJSONObject (m);
                    JSONArray cus_json_array = c.getJSONArray ("partner_id");
                    JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
                    Date date = format.parse (String.valueOf (c.getString ("__last_update")));
                    server_Time = date.getTime ();
                    DBAdapter.init (getApplicationContext ());
                    long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
                    Log.d ("newOrder ct" + current_time, "st" + server_Time);
                    if (server_Time > current_time) {
                        new_order_new_count ++;
                        Log.d ("new_order cus name", cus_json_array.getString (1));
                        new_order_name = new_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\nMarketing Person=" + market_person_json_array.getString (1);
                    } else {
                        m = trail_jsonarray.length ();
                    }
                }
                int newOrder_ID = 100, sampleOrder_ID = 200, trailOrder_ID = 300;
                final NotificationManager mgr = (NotificationManager) getApplicationContext ().getSystemService (Context.NOTIFICATION_SERVICE);
                PendingIntent i2 = PendingIntent.getActivity (getApplicationContext (), 1, new Intent (getApplicationContext (), MainActivity.class), 0);
                Uri alarmSound = RingtoneManager.getDefaultUri (RingtoneManager.TYPE_NOTIFICATION);
                if (new_order_new_count > prefs.getInt ("old_neworder_time", 0)) {
                    NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
                    mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (new_order_name));
                    mBuilder.setContentText (new_order_name);
                    mBuilder.setContentTitle (new_order_new_count + " New Orders");
                    mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
                    mBuilder.setContentIntent (i2);
                    Log.d (String.valueOf (old_new_order_count), String.valueOf (new_order_new_count));
                    if (old_new_order_count != new_order_new_count) {
                        mBuilder.setSound (alarmSound);
                    }
                    mgr.notify (newOrder_ID, mBuilder.build ());
                    old_new_order_count = new_order_new_count;
                    editor.putInt ("old_neworder_time", new_order_new_count);
                    editor.commit ();
                }
                if (sample_order_new_count > prefs.getInt ("old_sample_time", 0)) {
                    NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
                    mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (sample_order_name));
                    mBuilder.setContentText (sample_order_name);
                    mBuilder.setContentTitle (sample_order_new_count + " Sample Orders");
                    mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
                    mBuilder.setContentIntent (i2);
                    if (old_sample_order_count != sample_order_new_count) {
                        mBuilder.setSound (alarmSound);
                    }
                    mgr.notify (sampleOrder_ID, mBuilder.build ());
                    old_sample_order_count = sample_order_new_count;
                    editor.putInt ("old_sample_time", sample_order_new_count);
                    editor.commit ();
                }
                if (trail_order_new_count > prefs.getInt ("old_trail_time", 0)) {
                    NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
                    mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (trail_order_name));
                    mBuilder.setContentText (trail_order_name);
                    mBuilder.setContentTitle (trail_order_new_count + " Trail Orders");
                    mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
                    mBuilder.setContentIntent (i2);
                    if (old_trail_order_count != trail_order_new_count) {
                        mBuilder.setSound (alarmSound);
                    }
                    mgr.notify (trailOrder_ID, mBuilder.build ());
                    old_trail_order_count = trail_order_new_count;
                    editor.putInt ("old_trail_time", trail_order_new_count);
                    editor.commit ();
                }
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    );
}
----------------------------------------

public void run () {
    DBAdapter.init (getApplicationContext ());
    SharedPreferences prefs = getSharedPreferences ("notification_oldtime", MODE_PRIVATE);
    SharedPreferences.Editor editor = getSharedPreferences ("notification_oldtime", MODE_PRIVATE).edit ();
    int sample_order_new_count = 0, trail_order_new_count = 0, new_order_new_count = 0, old_sample_order_count = 0, old_trail_order_count = 0, old_new_order_count = 0;
    String search_read_URL = DBAdapter.getUrlName () + "/web/dataset/search_read";
    JSONArray sample_jsonarray, trail_jsonarray, new_jsonarray;
    JSONObject jsonObj_sample, jsonObj_trail, jsonObj_newOrder;
    StringEntity sample_entity, new_order_entity, trail_entity;
    String responseBody_sample, responseBody_Trail, responseBody_NewOrder;
    ResponseHandler < String > responseHandler = new BasicResponseHandler ();
    try {
        DBAdapter.init (getApplicationContext ());
        HttpPost sample_get = new HttpPost (search_read_URL);
        HttpPost new_order_get = new HttpPost (search_read_URL);
        HttpPost trail_get = new HttpPost (search_read_URL);
        Log.d ("service", "start");
        sample_entity = new StringEntity (" {\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"sale.sample.order\",\"fields\":[\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"sale.sample.order\",\"menu_id\":378,\"action\":446,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":780343122}");
        new_order_entity = new StringEntity ("{\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"new.order.log\",\"fields\":[\"name\",\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"new.order.log\",\"menu_id\":355,\"action\":418,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":674827326}");
        trail_entity = new StringEntity ("{\"jsonrpc\":\"2.0\",\"method\":\"call\",\"params\":{\"model\":\"leather.trial.order\",\"fields\":[\"partner_id\",\"distributor_id\",\"marketing_person_id\",\"__last_update\"],\"domain\":[],\"context\":{\"lang\":\"en_US\",\"tz\":false,\"uid\":" + Integer.valueOf (DBAdapter.getMarketPersonUid ()) + ",\"params\":{\"page\":0,\"limit\":500,\"view_type\":\"list\",\"model\":\"leather.trial.order\",\"menu_id\":375,\"action\":442,\"_push_me\":false},\"bin_size\":true},\"offset\":0,\"limit\":500,\"sort\":\"\"},\"id\":455581058}");
        sample_get.setHeader ("Content-Type", "application/json");
        sample_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
        sample_get.setEntity (sample_entity);
        new_order_get.setHeader ("Content-Type", "application/json");
        new_order_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
        new_order_get.setEntity (new_order_entity);
        trail_get.setHeader ("Content-Type", "application/json");
        trail_get.setHeader ("Cookie:", "session_id=" + DBAdapter.getSessionId ());
        trail_get.setEntity (trail_entity);
        responseBody_sample = client.execute (sample_get, responseHandler);
        jsonObj_sample = new JSONObject (responseBody_sample);
        JSONObject json = jsonObj_sample.getJSONObject ("result");
        sample_jsonarray = json.getJSONArray ("records");
        responseBody_Trail = client.execute (trail_get, responseHandler);
        jsonObj_trail = new JSONObject (responseBody_Trail);
        JSONObject json1 = jsonObj_trail.getJSONObject ("result");
        trail_jsonarray = json1.getJSONArray ("records");
        responseBody_NewOrder = client.execute (new_order_get, responseHandler);
        jsonObj_newOrder = new JSONObject (responseBody_NewOrder);
        JSONObject json2 = jsonObj_newOrder.getJSONObject ("result");
        new_jsonarray = json2.getJSONArray ("records");
        long server_Time = 0;
        SimpleDateFormat format = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss", Locale.US);
        String new_order_name = "", trail_order_name = "", sample_order_name = "";
        for (int m = 0;
        m < trail_jsonarray.length (); m ++) {
            JSONObject c = trail_jsonarray.getJSONObject (m);
            JSONArray cus_json_array = c.getJSONArray ("partner_id");
            JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
            Date date = format.parse (String.valueOf (c.getString ("__last_update")));
            server_Time = date.getTime ();
            DBAdapter.init (getApplicationContext ());
            long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
            Log.d ("trail ct" + current_time, "st" + server_Time);
            if (server_Time > current_time) {
                trail_order_new_count ++;
                Log.d ("trail_order cus name", cus_json_array.getString (1));
                trail_order_name = trail_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\n" + "Marketing Person=" + market_person_json_array.getString (1);
            } else {
                m = trail_jsonarray.length ();
            }
        }
        for (int m = 0;
        m < sample_jsonarray.length (); m ++) {
            JSONObject c = sample_jsonarray.getJSONObject (m);
            JSONArray cus_json_array = c.getJSONArray ("partner_id");
            JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
            Date date = format.parse (String.valueOf (c.getString ("__last_update")));
            server_Time = date.getTime ();
            DBAdapter.init (getApplicationContext ());
            long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
            Log.d ("sample ct" + current_time, "st" + server_Time);
            if (server_Time > current_time) {
                sample_order_new_count ++;
                Log.d ("sample_order cus name", cus_json_array.getString (1));
                sample_order_name = sample_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\nMarketing Person=" + market_person_json_array.getString (1);
            } else {
                m = trail_jsonarray.length ();
            }
        }
        for (int m = 0;
        m < new_jsonarray.length (); m ++) {
            JSONObject c = new_jsonarray.getJSONObject (m);
            JSONArray cus_json_array = c.getJSONArray ("partner_id");
            JSONArray market_person_json_array = c.getJSONArray ("marketing_person_id");
            Date date = format.parse (String.valueOf (c.getString ("__last_update")));
            server_Time = date.getTime ();
            DBAdapter.init (getApplicationContext ());
            long current_time = Long.parseLong (DBAdapter.getCurrentTime ());
            Log.d ("newOrder ct" + current_time, "st" + server_Time);
            if (server_Time > current_time) {
                new_order_new_count ++;
                Log.d ("new_order cus name", cus_json_array.getString (1));
                new_order_name = new_order_name + " " + "Customer=" + cus_json_array.getString (1) + "\nMarketing Person=" + market_person_json_array.getString (1);
            } else {
                m = trail_jsonarray.length ();
            }
        }
        int newOrder_ID = 100, sampleOrder_ID = 200, trailOrder_ID = 300;
        final NotificationManager mgr = (NotificationManager) getApplicationContext ().getSystemService (Context.NOTIFICATION_SERVICE);
        PendingIntent i2 = PendingIntent.getActivity (getApplicationContext (), 1, new Intent (getApplicationContext (), MainActivity.class), 0);
        Uri alarmSound = RingtoneManager.getDefaultUri (RingtoneManager.TYPE_NOTIFICATION);
        if (new_order_new_count > prefs.getInt ("old_neworder_time", 0)) {
            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
            mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (new_order_name));
            mBuilder.setContentText (new_order_name);
            mBuilder.setContentTitle (new_order_new_count + " New Orders");
            mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
            mBuilder.setContentIntent (i2);
            Log.d (String.valueOf (old_new_order_count), String.valueOf (new_order_new_count));
            if (old_new_order_count != new_order_new_count) {
                mBuilder.setSound (alarmSound);
            }
            mgr.notify (newOrder_ID, mBuilder.build ());
            old_new_order_count = new_order_new_count;
            editor.putInt ("old_neworder_time", new_order_new_count);
            editor.commit ();
        }
        if (sample_order_new_count > prefs.getInt ("old_sample_time", 0)) {
            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
            mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (sample_order_name));
            mBuilder.setContentText (sample_order_name);
            mBuilder.setContentTitle (sample_order_new_count + " Sample Orders");
            mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
            mBuilder.setContentIntent (i2);
            if (old_sample_order_count != sample_order_new_count) {
                mBuilder.setSound (alarmSound);
            }
            mgr.notify (sampleOrder_ID, mBuilder.build ());
            old_sample_order_count = sample_order_new_count;
            editor.putInt ("old_sample_time", sample_order_new_count);
            editor.commit ();
        }
        if (trail_order_new_count > prefs.getInt ("old_trail_time", 0)) {
            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder (getApplicationContext ());
            mBuilder.setStyle (new NotificationCompat.BigTextStyle ().bigText (trail_order_name));
            mBuilder.setContentText (trail_order_name);
            mBuilder.setContentTitle (trail_order_new_count + " Trail Orders");
            mBuilder.setSmallIcon (R.drawable.bkg_new_logo);
            mBuilder.setContentIntent (i2);
            if (old_trail_order_count != trail_order_new_count) {
                mBuilder.setSound (alarmSound);
            }
            mgr.notify (trailOrder_ID, mBuilder.build ());
            old_trail_order_count = trail_order_new_count;
            editor.putInt ("old_trail_time", trail_order_new_count);
            editor.commit ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26957539_26957588_3_25
26957539_52568749_1_25
Title: How to count number of occurance of character in each string in java? 
----------------------------------------

public static void main (String [] args) {
    String s = "abdsd3$asda$asasdd$sadas";
    char [] arr = s.toCharArray ();
    java.util.Arrays.sort (arr);
    int cnt = 0;
    final char UNDEF = (char) - 1;
    char c = UNDEF, prev = UNDEF;
    for (int i = 0;
    i < arr.length; ++ i) {
        c = arr [i];
        if (c != prev) {
            if (prev != UNDEF) {
                System.out.println ("The character '" + prev + "' occurs " + cnt + " times");
            }
            prev = c;
            cnt = 1;
        } else {
            cnt ++;
        }
    }
    if (c != UNDEF) {
        System.out.println ("The character '" + c + "' occurs " + cnt + " times");
    }
}
----------------------------------------

public static void main (String [] args) {
    LinkedHashMap < Character, Integer > h = new LinkedHashMap < > ();
    String s = "abdsd$asda$asasdd$sadas";
    for (char ch : s.toCharArray ()) {
        if ((h.containsKey (ch))) {
            h.put (ch, h.get (ch) + 1);
        } else {
            h.put (ch, 1);
        }
    }
    for (char key : h.keySet ()) {
        System.out.println (key + "-" + h.get (key));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26968205_26968373_1_12
26968205_26969250_9_33
Title: Calculating between dates and an Integer 
----------------------------------------

public static void main (String args []) {
    Calendar x = new GregorianCalendar (2014, 10, 10);
    Date date = x.getTime ();
    Calendar cal = new GregorianCalendar ();
    cal.setTime (date);
    cal.add (Calendar.DAY_OF_MONTH, 25);
    Date newDate = cal.getTime ();
    System.out.println (newDate);
}
----------------------------------------

public static void main (String [] args) {
    String dt = "12-05-2014";
    int dt1 = 25;
    java.util.Calendar cal1 = new java.util.GregorianCalendar ();
    StringBuffer sBuffer = new StringBuffer (dt);
    String year = sBuffer.substring (6, 10);
    String mon = sBuffer.substring (0, 2);
    String dd = sBuffer.substring (3, 5);
    int calyear = Integer.parseInt (year);
    int calmon = Integer.parseInt (mon);
    int caldd = Integer.parseInt (dd);
    caldd = caldd + dt1;
    cal1.set (calyear, calmon, caldd);
    Date d1 = cal1.getTime ();
    SimpleDateFormat t;
    t = new SimpleDateFormat ("yyyy-MM-dd");
    String vb = t.format (d1);
    System.out.println ("Date" + vb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26990428_26990761_14_32
26990428_26991285_1_15
Title: select attribute of object according what the user input? 
----------------------------------------

public static void main (String [] args) throws Exception {
    A a = new A ();
    Class c = A.class;
    Scanner in = new Scanner (System.in);
    String x = in.next ();
    Field f = c.getField (x);
    String y = (String) f.get (a);
    System.out.println (y);
    x = in.next ();
    f = c.getField (x);
    y = (String) f.get (a);
    System.out.println (y);
}
----------------------------------------

public static void main (String [] args) {
    A a = new A ();
    Scanner in = new Scanner (System.in);
    String x = in.next ();
    if (x.equals ("a")) {
        String y = a.a;
        System.out.println (y);
    } else if (x.equals ("b")) {
        String y = a.b;
        System.out.println (y);
    } else System.out.println ("Input a or b please !!!");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26995166_26995510_7_16
26995166_27037443_3_22
Title: How to get Cartesian product from Lists 
----------------------------------------

public static < T > List < List < T > > calculate (List < List < T > > input) {
    List < List < T > > res = new ArrayList < > ();
    if (input.isEmpty ()) {
        res.add (new ArrayList < > ());
        return res;
    } else {
        process (input, res);
    }
    return res;
}
----------------------------------------

public static < T > List < List < T > > calculate (List < List < T > > input) {
    List < List < T > > result = new ArrayList < List < T > > ();
    if (input.isEmpty ()) {
        result.add (new ArrayList < T > ());
        return result;
    } else {
        List < T > head = input.get (0);
        List < List < T > > tail = calculate (input.subList (1, input.size ()));
        for (T h : head) {
            for (List < T > t : tail) {
                List < T > resultElement = new ArrayList < T > ();
                resultElement.add (h);
                resultElement.addAll (t);
                result.add (resultElement);
            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26998977_26999038_5_15
26998977_26999448_1_16
Title: the method to calculate prime number 
----------------------------------------

public static boolean isPrime (int n) {
    if (n < 2) return false;

    if (n % 2 == 0) return (n == 2);

    for (int i = 3;
    i * i <= n; i += 2) if (n % i == 0) return false;

    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number == 0 || number == 1) return false;
    else {
        int stop = (int) Math.sqrt (number);
        for (int divisor = 2;
        divisor <= stop; divisor ++) {
            if (number % divisor == 0) return false;

        }
        return true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26998977_26999038_5_15
26998977_26999822_13_23
Title: the method to calculate prime number 
----------------------------------------

public static boolean isPrime (int n) {
    if (n < 2) return false;

    if (n % 2 == 0) return (n == 2);

    for (int i = 3;
    i * i <= n; i += 2) if (n % i == 0) return false;

    return true;
}
----------------------------------------

public static boolean isPrime (long n) {
    if (n <= 3) return n > 1;

    if (n % 2 == 0 || n % 3 == 0) return false;

    for (int i = 5;
    i * i <= n; i += 6) {
        if (n % i == 0 || n % (i + 2) == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26998977_26999448_1_16
26998977_26999822_13_23
Title: the method to calculate prime number 
----------------------------------------

public static boolean isPrime (int number) {
    if (number == 0 || number == 1) return false;
    else {
        int stop = (int) Math.sqrt (number);
        for (int divisor = 2;
        divisor <= stop; divisor ++) {
            if (number % divisor == 0) return false;

        }
        return true;
    }
}
----------------------------------------

public static boolean isPrime (long n) {
    if (n <= 3) return n > 1;

    if (n % 2 == 0 || n % 3 == 0) return false;

    for (int i = 5;
    i * i <= n; i += 6) {
        if (n % i == 0 || n % (i + 2) == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27000113_27000336_1_26
27000113_27000504_2_33
Title: Java 'for' loop with range 
----------------------------------------

public static void main (String [] args) {
    int currentMark, currentBucket;
    final int BUCKET_WIDTH = 30;
    Map < Integer, Integer > markRanges = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < 101; i ++) {
        Scanner input = new Scanner (System.in);
        System.out.print ("Enter Marks: ");
        currentMark = input.nextInt ();
        currentBucket = currentMark % BUCKET_WIDTH;
        if (markRanges.containsKey (currentBucket)) {
            markRanges.put (currentBucket, markRanges.get (currentBucket) + 1);
        } else {
            markRanges.put (currentBucket, 1);
        }
        for (Integer j : markRanges.keySet) {
            System.out.println (String.format ("There are %d students with scores between %d and %d", markRanges.get (j), j, j.intValue () + BUCKET_WIDTH - 1));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] ranges = {0, 29, 39, 69, 100};
    int [] inRange = new int [ranges.length - 1];
    int mark;
    do {
        System.out.println ("Enter Mark:");
        mark = sc.nextInt ();
        for (int j = 1;
        j < ranges.length; j ++) if (ranges [j - 1] <= mark && mark <= ranges [j]) {
            inRange [j - 1] ++;
            break;
        }

    } while (mark <= 100);
    System.out.println (Arrays.toString (inRange));
    String s = "The number of students that have scored between %d and %d is : ";
    int k = 0;
    for (int i = 0;
    i < ranges.length - 1; i ++) {
        System.out.print (String.format (s, ranges [i] + k, ranges [i + 1]));
        for (int r = 0;
        r < inRange [i]; r ++) System.out.print ("*");

        System.out.println ();
        k = 1;
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27005481_27020772_20_31
27005481_27020772_44_53
Title: Is this Double-Checked Locking that is not Broken? 
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 1000; i ++) {
            queue.add (i);
            Thread.sleep (1);
        }
        queue.add (End);
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    boolean ended = false;
    while (! ended) {
        Integer i = queue.poll ();
        if (i != null) {
            ended = i == End;
            System.out.println (i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27007421_27007576_3_15
27007421_27007666_3_25
Title: How do I display a string from an array from user input? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > mylist = new ArrayList < > ();
    mylist.add ("Maisam Bokhari");
    mylist.add ("Fawwad Ahmed");
    mylist.add ("Ali Asim");
    mylist.add ("Maheen Hanif");
    mylist.add ("Rimsha Imtiaz");
    mylist.add ("Mugheer Mughal");
    mylist.add ("Maaz Hussain");
    mylist.add ("Asad Shahzada");
    mylist.add ("Junaid Khan");
    System.out.println ("Name of the student: " + mylist);
}
----------------------------------------

public static void main (String [] args) {
    String [] county = {"Carter", "Cocke", "Washington", "Greene", "Hawkins", "Johnson", "Sullivan", "Unicoi"};
    String word = "Cocke";
    boolean found = false;
    for (int i = 0;
    i <= 7; ++ i) {
        if (word == county [i]) {
            found = true;
            break;
        }
    }
    if (found == true) {
        System.out.println (word + " is in the array.");
    } else {
        System.out.println (word + " is not in the array.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27015701_27016857_11_31
27015701_27032007_2_14
Title: How to get the output stream from a thread 
----------------------------------------

public static void main (String [] args) {
    ExecutorService executor = Executors.newFixedThreadPool (5);
    List < Future < InputStream > > list = new ArrayList < Future < InputStream > > ();
    for (int i = 0;
    i < 25; i ++) {
        Callable < InputStream > worker = new MyCallable ();
        Future < InputStream > submit = executor.submit (worker);
        list.add (submit);
    }
    InputStream inputStreamObject = null;
    for (Future < InputStream > future : list) {
        try {
            inputStreamObject = future.get ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (ExecutionException e) {
            e.printStackTrace ();
        }
    }
    executor.shutdown ();
}
----------------------------------------

public static void main (String...args) {
    CallableTask call = new CallableTask ();
    RunnableTask run = new RunnableTask ();
    try {
        FutureTask < String > callTask = new FutureTask < String > (call);
        Thread runTask = new Thread (run);
        callTask.run ();
        runTask.start ();
        System.out.println (callTask.get ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27019788_27020050_1_10
27019788_27020562_1_23
Title: Get all days from tomorrow and two months forward and loop through them 
----------------------------------------

public static void main (String [] args) {
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    Date now = new Date ();
    long dayInMillis = 1000 * 60 * 60 * 24;
    long nowInMillis = System.currentTimeMillis ();
    for (long tmp = dayInMillis;
    tmp <= dayInMillis * 60; tmp += dayInMillis) {
        now.setTime (nowInMillis + tmp);
        System.out.println (" date: " + sdf.format (now));
    }
}
----------------------------------------

public static void main (String [] args) {
    final Calendar c = Calendar.getInstance ();
    c.set (Calendar.HOUR_OF_DAY, 0);
    c.set (Calendar.MINUTE, 0);
    c.set (Calendar.SECOND, 0);
    c.set (Calendar.MILLISECOND, 0);
    final int days = 61;
    final List < Date > datesList = new ArrayList < Date > ();
    for (int i = 0;
    i < days; i ++) {
        c.add (Calendar.DATE, 1);
        datesList.add (new Date (c.getTimeInMillis ()));
    }
    for (Date date : datesList) {
        System.out.println (date);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27024415_27026022_10_20
27024415_27026022_25_35
Title: Multithreading so that numbers are constantly being subtracted or added from a set int 
----------------------------------------

public void run () {
    while (true) {
        add ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        remove ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27024415_27026022_10_20
27024415_27026022_40_50
Title: Multithreading so that numbers are constantly being subtracted or added from a set int 
----------------------------------------

public void run () {
    while (true) {
        add ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        check ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27024415_27026022_25_35
27024415_27026022_40_50
Title: Multithreading so that numbers are constantly being subtracted or added from a set int 
----------------------------------------

public void run () {
    while (true) {
        remove ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        check ();
        try {
            Thread.sleep (20);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27028033_27028297_26_37
27028033_27029360_7_14
Title: How to make a method that searches a parallel array? 
----------------------------------------

public static void searchPopulation (String userInput) {
    int length = country.length;
    for (int i = 0;
    i < length; i ++) {
        if (userInput.equals (country [i])) {
            System.out.println (userInput + "'s " + " population is: " + population [i]);
        }
    }
}
----------------------------------------

public static String searchPopulation (String c) {
    for (int i = 0;
    i < country.length; i ++) {
        if (country [i].equals (c)) {
            return population [i];
        }
    }
    return "Not found";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27028033_27028297_8_24
27028033_27029360_16_26
Title: How to make a method that searches a parallel array? 
----------------------------------------

public static void main (String args []) {
    boolean userChoice = true;
    String userInput = "";
    Scanner kb = new Scanner (System.in);
    while (userChoice == true) {
        System.out.println ("Please enter a country: ");
        userInput = kb.nextLine ();
        searchPopulation (userInput);
    }
    kb.close ();
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < country.length; i ++) {
        System.out.print (country [i] + "'s population: " + " ");
        System.out.print (population [i]);
        System.out.println ();
    }
    System.out.println (searchPopulation ((new Scanner (System.in)).nextLine ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27028033_27028297_8_24
27028033_27034544_2_32
Title: How to make a method that searches a parallel array? 
----------------------------------------

public static void main (String args []) {
    boolean userChoice = true;
    String userInput = "";
    Scanner kb = new Scanner (System.in);
    while (userChoice == true) {
        System.out.println ("Please enter a country: ");
        userInput = kb.nextLine ();
        searchPopulation (userInput);
    }
    kb.close ();
}
----------------------------------------

public static void main (String [] args) {
    String [] countries = {"United States", "Brazil", "China", "Italy", "United Kingdom", "Spain", "Japan", "Germany", "France", "Turkey", "South Africa", "Argentina"};
    int [] populations = {319111000, 203462000, 1367960000, 60783711, 64105654, 46507760, 127090000, 80767000, 66050000, 76667864, 54002000, 42669500};
    Scanner input = new Scanner (System.in);
    try {
        PopulationLookup lookup = new PopulationLookup (countries, populations);
        lookup.printAll ();
        while (true) {
            System.out.println ("Would you like to look up a country?");
            String response = input.nextLine ();
            if (response.equalsIgnoreCase ("no")) {
                System.out.println ("Good bye");
                break;
            }
            System.out.println ("What country would you like to look up?");
            String country = input.nextLine ();
            int population = lookup.populationForCountry (country);
            System.out.format ("The population of %s is %d%n", country, population);
        }
    } finally {
        input.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27028033_27029360_16_26
27028033_27034544_2_32
Title: How to make a method that searches a parallel array? 
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < country.length; i ++) {
        System.out.print (country [i] + "'s population: " + " ");
        System.out.print (population [i]);
        System.out.println ();
    }
    System.out.println (searchPopulation ((new Scanner (System.in)).nextLine ()));
}
----------------------------------------

public static void main (String [] args) {
    String [] countries = {"United States", "Brazil", "China", "Italy", "United Kingdom", "Spain", "Japan", "Germany", "France", "Turkey", "South Africa", "Argentina"};
    int [] populations = {319111000, 203462000, 1367960000, 60783711, 64105654, 46507760, 127090000, 80767000, 66050000, 76667864, 54002000, 42669500};
    Scanner input = new Scanner (System.in);
    try {
        PopulationLookup lookup = new PopulationLookup (countries, populations);
        lookup.printAll ();
        while (true) {
            System.out.println ("Would you like to look up a country?");
            String response = input.nextLine ();
            if (response.equalsIgnoreCase ("no")) {
                System.out.println ("Good bye");
                break;
            }
            System.out.println ("What country would you like to look up?");
            String country = input.nextLine ();
            int population = lookup.populationForCountry (country);
            System.out.format ("The population of %s is %d%n", country, population);
        }
    } finally {
        input.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27031986_27032129_1_16
27031986_27032130_1_13
Title: Make sure a password matches a user name using java 
----------------------------------------

private static void verifyUser (String userName, String password) {
    for (int i = 0;
    i < EMPLOYEE.length; i ++) {
        if (EMPLOYEE [i].equals (userName)) {
            if (! EMPLOYEE_PSWD [i].equals (password)) {
                JOptionPane.showMessageDialog (null, "Invalid password or username", "Error", INFO);
                System.exit (0);
            }
        }
    }
}
----------------------------------------

private static void verifyUser (String userName, String password) {
    Map < String, String > login = new HashMap < String, String > ();
    for (int i = 0;
    i < EMPLOYEE.length; i ++) {
        login.put (EMPLOYEE [i], EMPLOYEE_PSWD [i]);
    }
    if (login != null && login.size () > 0 && password.equals (login.get (userName))) {
        System.out.println ("Valid username and password");
    } else {
        System.out.println ("Invalid password or username");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27033691_27033735_76_84
27033691_27033735_86_95
Title: java printerjob landscape white space 
----------------------------------------

public double getScaleFactorToFit (BufferedImage img, Dimension size) {
    double dScale = 1;
    if (img != null) {
        int imageWidth = img.getWidth ();
        int imageHeight = img.getHeight ();
        dScale = getScaleFactorToFit (new Dimension (imageWidth, imageHeight), size);
    }
    return dScale;
}
----------------------------------------

public double getScaleFactorToFit (Dimension original, Dimension toFit) {
    double dScale = 1d;
    if (original != null && toFit != null) {
        double dScaleWidth = getScaleFactor (original.width, toFit.width);
        double dScaleHeight = getScaleFactor (original.height, toFit.height);
        dScale = Math.min (dScaleHeight, dScaleWidth);
    }
    return dScale;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27036653_27037001_1_23
27036653_27037061_1_25
Title: While inserting data into Java array with while loop it doesnt stop 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Insert size of array: ");
    int n = scan.nextInt ();
    int index = 0;
    int value = - 1;
    int [] a1 = new int [n];
    while (true) {
        System.out.println ("Input number: ");
        value = scan.nextInt ();
        if (index != n && value != 0) {
            a1 [index] = value;
            index ++;
        } else break;

    }
    System.out.println ("Content of array a1 of size:" + n + " elements:");
    for (int i = 0;
    i < a1.length; i ++) {
        System.out.println ("a1[" + i + "] = " + a1 [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [100];
    int i = 0;
    while (true) {
        if (i < a1.length) {
            System.out.println ("Insert number: (0-end)");
            a1 [i] = scan.nextInt ();
            if (a1 [i] == 0) break;
            else i ++;

        } else break;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27036653_27037001_1_23
27036653_27039718_1_44
Title: While inserting data into Java array with while loop it doesnt stop 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Insert size of array: ");
    int n = scan.nextInt ();
    int index = 0;
    int value = - 1;
    int [] a1 = new int [n];
    while (true) {
        System.out.println ("Input number: ");
        value = scan.nextInt ();
        if (index != n && value != 0) {
            a1 [index] = value;
            index ++;
        } else break;

    }
    System.out.println ("Content of array a1 of size:" + n + " elements:");
    for (int i = 0;
    i < a1.length; i ++) {
        System.out.println ("a1[" + i + "] = " + a1 [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [10];
    int i = 0;
    boolean run = true;
    int inputnum;
    while (run) {
        System.out.println ("Ange tal: (0-avsluta)");
        inputnum = scan.nextInt ();
        if (i < a1.length) {
            if (inputnum == 0) {
                run = false;
                break;
            } else {
                a1 [i] = inputnum;
                i ++;
            }
        } else {
            System.out.println ("Array is full");
            run = false;
            break;
        }
    }
    System.out.println ("You are out of program");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27036653_27037061_1_25
27036653_27039718_1_44
Title: While inserting data into Java array with while loop it doesnt stop 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [100];
    int i = 0;
    while (true) {
        if (i < a1.length) {
            System.out.println ("Insert number: (0-end)");
            a1 [i] = scan.nextInt ();
            if (a1 [i] == 0) break;
            else i ++;

        } else break;

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [10];
    int i = 0;
    boolean run = true;
    int inputnum;
    while (run) {
        System.out.println ("Ange tal: (0-avsluta)");
        inputnum = scan.nextInt ();
        if (i < a1.length) {
            if (inputnum == 0) {
                run = false;
                break;
            } else {
                a1 [i] = inputnum;
                i ++;
            }
        } else {
            System.out.println ("Array is full");
            run = false;
            break;
        }
    }
    System.out.println ("You are out of program");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27038502_27038728_4_37
27038502_27038743_1_28
Title: array while loop output Java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [100];
    int i = 0;
    int tal;
    while (true) {
        System.out.println ("Insert number (0-end):");
        tal = scan.nextInt ();
        if (tal == 0 || i >= 100) {
            break;
        } else {
            a1 [i] = tal;
            i ++;
        }
    }
    System.out.println ("The inserted numbers are are: ");
    for (int j = 0;
    j < i; j ++) {
        System.out.println (a1 [j] + "\t");
    }
    System.out.println ("amount is: " + i);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] a1 = new int [100];
    int i = 0;
    int tal = 0;
    int tmp;
    do {
        System.out.println ("Insert number (0-end):");
        tmp = scan.nextInt ();
        a1 [i] = tmp;
        tal += a1 [i ++];
    } while (tmp != 0 && i < a1.length);
    System.out.println ("The inserted numbers are : ");
    for (int j = 0;
    j < i - 1; j ++) {
        if (j == i - 2) {
            System.out.print (a1 [j] + ".");
        } else {
            System.out.print (a1 [j] + ", ");
        }
    }
    System.out.println ("The sum is : " + tal);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_113_131
27041384_27041529_155_170
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, Map < String, String > map, int requestID) {
    this.map = map;
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Activity con, String json, String url, int requestID) {
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    this.jsonString = json;
    if (IdealUtils.isNetworkAvailable (activity)) {
        new AsyncHttpRequest ().execute (url);
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_113_131
27041384_27041529_48_70
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, Map < String, String > map, int requestID) {
    this.map = map;
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Context mContext, Map < String, String > map, AsyncTaskCompleteListener listener) {
    if (IdealUtils.isNetworkAvailable (mContext)) {
        this.map = map;
        this.activity = mContext;
        this.listener = listener;
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        try {
            if (activity != null) Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_133_153
27041384_27041529_155_170
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, Map < String, String > map, int requestID, String jsonString) {
    this.map = map;
    this.jsonString = jsonString;
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Activity con, String json, String url, int requestID) {
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    this.jsonString = json;
    if (IdealUtils.isNetworkAvailable (activity)) {
        new AsyncHttpRequest ().execute (url);
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_133_153
27041384_27041529_48_70
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, Map < String, String > map, int requestID, String jsonString) {
    this.map = map;
    this.jsonString = jsonString;
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Context mContext, Map < String, String > map, AsyncTaskCompleteListener listener) {
    if (IdealUtils.isNetworkAvailable (mContext)) {
        this.map = map;
        this.activity = mContext;
        this.listener = listener;
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        try {
            if (activity != null) Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_155_170
27041384_27041529_48_70
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, String json, String url, int requestID) {
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    this.jsonString = json;
    if (IdealUtils.isNetworkAvailable (activity)) {
        new AsyncHttpRequest ().execute (url);
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Context mContext, Map < String, String > map, AsyncTaskCompleteListener listener) {
    if (IdealUtils.isNetworkAvailable (mContext)) {
        this.map = map;
        this.activity = mContext;
        this.listener = listener;
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        try {
            if (activity != null) Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_155_170
27041384_27041529_72_91
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, String json, String url, int requestID) {
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    this.jsonString = json;
    if (IdealUtils.isNetworkAvailable (activity)) {
        new AsyncHttpRequest ().execute (url);
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Activity con, Map < String, String > map, AsyncTaskCompleteListener listener) {
    this.map = map;
    this.activity = con;
    this.listener = listener;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_155_170
27041384_27041529_93_111
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Activity con, String json, String url, int requestID) {
    this.activity = con;
    this.requestCode = requestID;
    listener = (AsyncTaskCompleteListener) activity;
    this.jsonString = json;
    if (IdealUtils.isNetworkAvailable (activity)) {
        new AsyncHttpRequest ().execute (url);
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, requestID);
    }
}
----------------------------------------

public Controller (Activity con, Map < String, String > map) {
    this.map = map;
    this.activity = con;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_48_70
27041384_27041529_72_91
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Context mContext, Map < String, String > map, AsyncTaskCompleteListener listener) {
    if (IdealUtils.isNetworkAvailable (mContext)) {
        this.map = map;
        this.activity = mContext;
        this.listener = listener;
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        try {
            if (activity != null) Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------

public Controller (Activity con, Map < String, String > map, AsyncTaskCompleteListener listener) {
    this.map = map;
    this.activity = con;
    this.listener = listener;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27041384_27041529_48_70
27041384_27041529_93_111
Title: Android spring mobile rest template post request resulted in 400 (bad request) invoking error handler 
----------------------------------------

public Controller (Context mContext, Map < String, String > map, AsyncTaskCompleteListener listener) {
    if (IdealUtils.isNetworkAvailable (mContext)) {
        this.map = map;
        this.activity = mContext;
        this.listener = listener;
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        try {
            if (activity != null) Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------

public Controller (Activity con, Map < String, String > map) {
    this.map = map;
    this.activity = con;
    listener = (AsyncTaskCompleteListener) activity;
    if (IdealUtils.isNetworkAvailable (activity)) {
        AsyncHttpRequest request = new AsyncHttpRequest ();
        request.executeOnExecutor (AsyncHttpRequest.THREAD_POOL_EXECUTOR, map.get ("url"));
    } else {
        Toast.makeText (activity, "Network Error – the application cannot connect to the internet. Please check your network connection.", Toast.LENGTH_SHORT).show ();
        listener.onTaskCompleted (null, 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2704857_2704944_5_14
2704857_41534710_3_19
Title: How to check if a given Regex is valid? 
----------------------------------------

public static void main (String [] arguments) {
    String userInputPattern = arguments [0];
    try {
        Pattern.compile (userInputPattern);
    } catch (PatternSyntaxException exception) {
        System.err.println (exception.getDescription ());
        System.exit (1);
    }
    System.out.println ("Syntax is ok.");
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int testCases = Integer.parseInt (in.nextLine ());
    while (testCases > 0) {
        String pattern = in.nextLine ();
        try {
            Pattern.compile (pattern);
        } catch (Exception e) {
            System.out.println ("Invalid");
        }
        System.out.println ("Valid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2704857_2704944_5_14
2704857_42525502_2_15
Title: How to check if a given Regex is valid? 
----------------------------------------

public static void main (String [] arguments) {
    String userInputPattern = arguments [0];
    try {
        Pattern.compile (userInputPattern);
    } catch (PatternSyntaxException exception) {
        System.err.println (exception.getDescription ());
        System.exit (1);
    }
    System.out.println ("Syntax is ok.");
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int testCases = Integer.parseInt (in.nextLine ());
    while (testCases > 0) {
        String pattern = in.nextLine ();
        try {
            Pattern.compile (pattern);
            System.out.println ("Valid");
        } catch (PatternSyntaxException exception) {
            System.out.println ("Invalid");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2704857_41534710_3_19
2704857_42525502_2_15
Title: How to check if a given Regex is valid? 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int testCases = Integer.parseInt (in.nextLine ());
    while (testCases > 0) {
        String pattern = in.nextLine ();
        try {
            Pattern.compile (pattern);
        } catch (Exception e) {
            System.out.println ("Invalid");
        }
        System.out.println ("Valid");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int testCases = Integer.parseInt (in.nextLine ());
    while (testCases > 0) {
        String pattern = in.nextLine ();
        try {
            Pattern.compile (pattern);
            System.out.println ("Valid");
        } catch (PatternSyntaxException exception) {
            System.out.println ("Invalid");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27054182_27057680_105_114
27054182_27057680_41_91
Title: How to get threads to run one at a time? 
----------------------------------------

public void run () {
    int random = new Random ().nextInt (3) + 1;
    while (true) try {
        Thread.sleep (random * 1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }

}
----------------------------------------

public void run () {
    System.out.println (this.getName () + " begins");
    LiftController.liftLock.lock ();
    System.out.println (this.getName () + " gets liftLock");
    Lock lockToWait = LiftController.q.poll ();
    if (lockToWait != null) {
        System.out.println (this.getName () + " tring to get lockToWait of " + lockToWait);
        lockToWait.lock ();
        System.out.println (this.getName () + " get lockToWait of " + lockToWait);
        Condition conditionToWait = lockToWait.newCondition ();
        if (conditionToWait != null) {
            while (! LiftController.isLiftisAvailable ()) {
                try {
                    System.out.println (this.getName () + " awaiting  = " + conditionToWait);
                    conditionToWait.await ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    }
    try {
        System.out.println (this.getName () + " holds the lift===========");
        LiftController.q.add (new ReentrantLock ());
        Lock lockToNofity = LiftController.q.peek ();
        lockToNofity.lock ();
        Condition conditionToNotify = LiftController.q.peek ().newCondition ();
        System.out.println (this.getName () + " next notify = " + conditionToNotify);
        System.out.println (this.getName () + " release the lift");
        LiftController.ocupyLift ();
        LiftController.releaseLift ();
        LiftController.liftLock.unlock ();
        System.out.println (this.getName () + " liftLock.unlock");
        if (conditionToNotify != null) {
            System.out.println (this.getName () + " signaling  " + conditionToNotify);
            conditionToNotify.signal ();
            lockToNofity.unlock ();
        }
    } finally {
        if (lockToWait != null) lockToWait.unlock ();

        System.out.println (this.getName () + " finish");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27055072_27056846_4_22
27055072_32648213_7_45
Title: Spring: How to do AND in Profiles? 
----------------------------------------

public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () != null) {
        final MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
        if (attrs != null) {
            for (final Object value : attrs.get ("value")) {
                final String activeProfiles = context.getEnvironment ().getProperty ("spring.profiles.active");
                for (final String profile : (String []) value) {
                    if (! activeProfiles.contains (profile)) {
                        return false;
                    }
                }
            }
            return true;
        }
    }
    return true;
}
----------------------------------------

public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () == null) {
        return true;
    }
    MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
    if (attrs == null) {
        return true;
    }
    String [] activeProfiles = context.getEnvironment ().getActiveProfiles ();
    String [] definedProfiles = (String []) attrs.getFirst (VALUE);
    Set < String > allowedProfiles = new HashSet < > (1);
    Set < String > restrictedProfiles = new HashSet < > (1);
    for (String nextDefinedProfile : definedProfiles) {
        if (! nextDefinedProfile.isEmpty () && nextDefinedProfile.charAt (0) == '!') {
            restrictedProfiles.add (nextDefinedProfile.substring (1, nextDefinedProfile.length ()));
            continue;
        }
        allowedProfiles.add (nextDefinedProfile);
    }
    int activeAllowedCount = 0;
    for (String nextActiveProfile : activeProfiles) {
        if (DEFAULT_PROFILE.equals (nextActiveProfile) && allowedProfiles.isEmpty ()) {
            continue;
        }
        if (restrictedProfiles.contains (nextActiveProfile)) {
            return false;
        }
        if (allowedProfiles.isEmpty ()) {
            continue;
        }
        if (allowedProfiles.contains (nextActiveProfile)) {
            activeAllowedCount ++;
        }
    }
    return activeAllowedCount == allowedProfiles.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27055072_27056846_4_22
27055072_36319834_1_34
Title: Spring: How to do AND in Profiles? 
----------------------------------------

public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () != null) {
        final MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
        if (attrs != null) {
            for (final Object value : attrs.get ("value")) {
                final String activeProfiles = context.getEnvironment ().getProperty ("spring.profiles.active");
                for (final String profile : (String []) value) {
                    if (! activeProfiles.contains (profile)) {
                        return false;
                    }
                }
            }
            return true;
        }
    }
    return true;
}
----------------------------------------

@Override
public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () == null) {
        return true;
    }
    MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
    if (attrs == null) {
        return true;
    }
    Set < String > activeProfilesSet = Arrays.stream (context.getEnvironment ().getActiveProfiles ()).collect (Collectors.toSet ());
    String [] definedProfiles = (String []) attrs.getFirst (VALUE);
    Set < String > allowedProfiles = new HashSet < > (1);
    Set < String > restrictedProfiles = new HashSet < > (1);
    if (activeProfilesSet.size () == 0) {
        activeProfilesSet.add (DEFAULT_PROFILE);
    }
    for (String nextDefinedProfile : definedProfiles) {
        if (! nextDefinedProfile.isEmpty () && nextDefinedProfile.charAt (0) == '!') {
            restrictedProfiles.add (nextDefinedProfile.substring (1, nextDefinedProfile.length ()));
            continue;
        }
        allowedProfiles.add (nextDefinedProfile);
    }
    boolean allowed = true;
    for (String allowedProfile : allowedProfiles) {
        allowed = allowed && activeProfilesSet.contains (allowedProfile);
    }
    boolean restricted = true;
    for (String restrictedProfile : restrictedProfiles) {
        restricted = restricted && ! activeProfilesSet.contains (restrictedProfile);
    }
    return allowed && restricted;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27055072_32648213_7_45
27055072_36319834_1_34
Title: Spring: How to do AND in Profiles? 
----------------------------------------

public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () == null) {
        return true;
    }
    MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
    if (attrs == null) {
        return true;
    }
    String [] activeProfiles = context.getEnvironment ().getActiveProfiles ();
    String [] definedProfiles = (String []) attrs.getFirst (VALUE);
    Set < String > allowedProfiles = new HashSet < > (1);
    Set < String > restrictedProfiles = new HashSet < > (1);
    for (String nextDefinedProfile : definedProfiles) {
        if (! nextDefinedProfile.isEmpty () && nextDefinedProfile.charAt (0) == '!') {
            restrictedProfiles.add (nextDefinedProfile.substring (1, nextDefinedProfile.length ()));
            continue;
        }
        allowedProfiles.add (nextDefinedProfile);
    }
    int activeAllowedCount = 0;
    for (String nextActiveProfile : activeProfiles) {
        if (DEFAULT_PROFILE.equals (nextActiveProfile) && allowedProfiles.isEmpty ()) {
            continue;
        }
        if (restrictedProfiles.contains (nextActiveProfile)) {
            return false;
        }
        if (allowedProfiles.isEmpty ()) {
            continue;
        }
        if (allowedProfiles.contains (nextActiveProfile)) {
            activeAllowedCount ++;
        }
    }
    return activeAllowedCount == allowedProfiles.size ();
}
----------------------------------------

@Override
public boolean matches (final ConditionContext context, final AnnotatedTypeMetadata metadata) {
    if (context.getEnvironment () == null) {
        return true;
    }
    MultiValueMap < String, Object > attrs = metadata.getAllAnnotationAttributes (Profile.class.getName ());
    if (attrs == null) {
        return true;
    }
    Set < String > activeProfilesSet = Arrays.stream (context.getEnvironment ().getActiveProfiles ()).collect (Collectors.toSet ());
    String [] definedProfiles = (String []) attrs.getFirst (VALUE);
    Set < String > allowedProfiles = new HashSet < > (1);
    Set < String > restrictedProfiles = new HashSet < > (1);
    if (activeProfilesSet.size () == 0) {
        activeProfilesSet.add (DEFAULT_PROFILE);
    }
    for (String nextDefinedProfile : definedProfiles) {
        if (! nextDefinedProfile.isEmpty () && nextDefinedProfile.charAt (0) == '!') {
            restrictedProfiles.add (nextDefinedProfile.substring (1, nextDefinedProfile.length ()));
            continue;
        }
        allowedProfiles.add (nextDefinedProfile);
    }
    boolean allowed = true;
    for (String allowedProfile : allowedProfiles) {
        allowed = allowed && activeProfilesSet.contains (allowedProfile);
    }
    boolean restricted = true;
    for (String restrictedProfile : restrictedProfiles) {
        restricted = restricted && ! activeProfilesSet.contains (restrictedProfile);
    }
    return allowed && restricted;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27058092_27058592_1_28
27058092_27058881_1_45
Title: ArrayIndexOutOfBoundsException coming in this array using java? 
----------------------------------------

public static void main (String [] args) {
    String [] inputValues = {"122", "2", "22", "11", "234", "333", "000", "5555", "8", "9", "99"};
    System.out.println ("Duplicate values are:");
    for (int i = 0;
    i < inputValues.length; i ++) {
        String strNumber = inputValues [i];
        if (strNumber.length () > 1) {
            Character firstchar = strNumber.charAt (0);
            String strchker = strNumber.replaceAll (firstchar.toString (), "0");
            if (Integer.parseInt (strchker) == 0) {
                System.out.println (strNumber);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] inputValues = {122, 2, 22, 11, 234, 333, 000, 5555, 8, 9, 99, 1000};
    System.out.println ("Duplicate values are:");
    for (int i = 0;
    i < inputValues.length; i ++) {
        String strNumber = new Integer (inputValues [i]).toString ();
        if (strNumber.length () > 1) {
            Character firstchar = strNumber.charAt (0);
            String strchker = strNumber.replaceAll (firstchar.toString (), "");
            if (strchker.length () == 0) {
                System.out.println (strNumber);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27061291_27061443_1_13
27061291_27061490_1_11
Title: Java returning entered text 
----------------------------------------

public String text () {
    InputStreamReader iReader = new InputStreamReader (System.in);
    BufferedReader bReader = new BufferedReader (iReader);
    String line = "";
    String outputString = "";
    while ((line = bReader.readLine ()) != null) {
        outputString += line;
    }
    return outputString;
}
----------------------------------------

public String text () {
    String input;
    String output = "";
    Scanner sc = new Scanner (System.in);
    input = sc.next ();
    while (! input.equals ("END")) {
        output = output + input;
        input = sc.next ();
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27061291_27061443_1_13
27061291_27061514_1_12
Title: Java returning entered text 
----------------------------------------

public String text () {
    InputStreamReader iReader = new InputStreamReader (System.in);
    BufferedReader bReader = new BufferedReader (iReader);
    String line = "";
    String outputString = "";
    while ((line = bReader.readLine ()) != null) {
        outputString += line;
    }
    return outputString;
}
----------------------------------------

public String text () {
    System.out.println ("Talk to me:");
    Scanner sc = new Scanner (System.in);
    StringBuilder text = new StringBuilder ();
    while (! text.toString ().endsWith ("END")) {
        text.append (sc.next ());
    }
    return text.toString ().substring (0, text.toString ().length () - 3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27061291_27061490_1_11
27061291_27061514_1_12
Title: Java returning entered text 
----------------------------------------

public String text () {
    String input;
    String output = "";
    Scanner sc = new Scanner (System.in);
    input = sc.next ();
    while (! input.equals ("END")) {
        output = output + input;
        input = sc.next ();
    }
    return output;
}
----------------------------------------

public String text () {
    System.out.println ("Talk to me:");
    Scanner sc = new Scanner (System.in);
    StringBuilder text = new StringBuilder ();
    while (! text.toString ().endsWith ("END")) {
        text.append (sc.next ());
    }
    return text.toString ().substring (0, text.toString ().length () - 3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27063820_27063967_1_18
27063820_27064016_1_17
Title: Comparing two arrays. Wrong return value (1) 
----------------------------------------

public static int equal (int [] a, int [] b) {
    int count = 0;
    for (int i = 0;
    i < a.length - 1; i ++) {
        for (int j = 0;
        i < b.length - 1; j ++) {
            if (a [j] < b [j]) {
                break;
            } else if (a [j] == b [j]) {
                count ++;
            }

        }
    }
    System.out.println (count);
    return count;
}
----------------------------------------

public static int equal (int [] a, int [] b) {
    int j, result = 0;
    int lastFound = 0;
    for (int i = 0;
    i < a.length - 1; i ++) {
        for (j = lastFound; j < b.length; j ++) {
            if (a [i] == b [j]) {
                result ++;
                lastFound = j;
                break;
            } else {
                if (a [i] < b [j]) break;

            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27064238_27066080_5_42
27064238_27067053_5_41
Title: How to determine if a number is a prime in a faster fashion using additional threads? 
----------------------------------------

public static void main (String [] args) throws InterruptedException, ExecutionException {
    long startTime = System.currentTimeMillis ();
    long numberToCheck = 5333334345L;
    int numberOfThreads = 10;
    System.out.println ("Checking if the number " + numberToCheck + " ...");
    ExecutorService executor = Executors.newFixedThreadPool (numberOfThreads);
    List < PrimeChecker > primeCheckers = new ArrayList < PrimeChecker > ();
    long partOfNumber = (long) Math.ceil ((double) numberToCheck / numberOfThreads);
    long start = 2;
    long end = 0;
    for (int i = 0;
    i < numberOfThreads; i ++) {
        end = end + partOfNumber;
        primeCheckers.add (new PrimeChecker (numberToCheck, start, end));
        start = end + 1;
    }
    List < Future < Boolean > > futures = executor.invokeAll (primeCheckers);
    for (Future < Boolean > future : futures) {
        prime = future.get ();
        if (prime == false) {
            break;
        }
    }
    System.out.println ("The number " + numberToCheck + " is " + (prime ? "a prime" : "NOT !!!!!!!!!!!!!!!!!!!! a prime") + " number");
    long endTime = System.currentTimeMillis ();
    long elapsetime = endTime - startTime;
    System.out.println (elapsetime + " milliseconds");
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    long start, end, elapsetime;
    int divisor = 1;
    start = System.currentTimeMillis ();
    if (x % 2 == 0) {
        prime = false;
        divisor = 2;
    } else {
        for (int y = 3;
        y < x / 2; y += 2) {
            if (x % y == 0) {
                prime = false;
                divisor = y;
                break;
            }
        }
    }
    end = System.currentTimeMillis ();
    System.out.println ("Prime: " + prime);
    if (! prime) {
        System.out.println ("divisible by: " + divisor);
    }
    elapsetime = end - start;
    System.out.println (elapsetime + " mill sec " + (elapsetime / 1000 + " seconds."));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27077671_27077714_1_11
27077671_27077725_1_13
Title: Creating a java Clock. increasing time 
----------------------------------------

public void timeTick () {
    seconds ++;
    while (seconds >= 60) {
        minutes ++;
        seconds -= 60;
    }
    while (minutes >= 60) {
        hours ++;
        minutes -= 60;
    }
}
----------------------------------------

public void timeTick () {
    seconds ++;
    if (seconds == 60) {
        seconds = 0;
        minutes ++;
        if (minutes == 60) {
            minutes = 0;
            hours ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27077671_27077714_1_11
27077671_27077774_14_25
Title: Creating a java Clock. increasing time 
----------------------------------------

public void timeTick () {
    seconds ++;
    while (seconds >= 60) {
        minutes ++;
        seconds -= 60;
    }
    while (minutes >= 60) {
        hours ++;
        minutes -= 60;
    }
}
----------------------------------------

public void timeTick () {
    seconds = seconds + 1;
    if (seconds == 60) {
        minutes ++;
        seconds = 0;
        if (minutes == 60) {
            hours ++;
            minutes = 0;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27077671_27077714_1_11
27077671_27077777_2_14
Title: Creating a java Clock. increasing time 
----------------------------------------

public void timeTick () {
    seconds ++;
    while (seconds >= 60) {
        minutes ++;
        seconds -= 60;
    }
    while (minutes >= 60) {
        hours ++;
        minutes -= 60;
    }
}
----------------------------------------

public void timeTick () {
    seconds = seconds + 1;
    if (seconds == 60) {
        minutes ++;
        seconds = 0;
        if (minutes == 60) {
            hours ++;
            minutes = 0;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27089627_27092888_20_53
27089627_27092952_1_78
Title: JavaFX Switch scene with slide effect 
----------------------------------------

public void start (Stage primaryStage) {
    Rectangle rectangle1 = new Rectangle (300, 250);
    rectangle1.setFill (Color.RED);
    Button nextView = new Button ("Next");
    nextView.setPadding (new Insets (10));
    BorderPane view1 = new BorderPane (rectangle1, null, null, nextView, null);
    BorderPane.setAlignment (nextView, Pos.CENTER);
    Group view2 = new Group ();
    Rectangle rectangle2 = new Rectangle (300, 250);
    rectangle2.setFill (Color.BLUE);
    view2.getChildren ().add (rectangle2);
    StackPane root = new StackPane (view1);
    nextView.setOnAction (event -> {
        root.getChildren ().add (view2);
        double width = root.getWidth ();
        KeyFrame start = new KeyFrame (Duration.ZERO, new KeyValue (view2.translateXProperty (), width), new KeyValue (view1.translateXProperty (), 0));
        KeyFrame end = new KeyFrame (Duration.seconds (1), new KeyValue (view2.translateXProperty (), 0), new KeyValue (view1.translateXProperty (), - width));
        Timeline slide = new Timeline (start, end);
        slide.setOnFinished (e -> root.getChildren ().remove (view1));
        slide.play ();
    });
    Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) {
    Group root1 = new Group ();
    Group root2 = new Group ();
    Scene scene1 = new Scene (root1, 300, 250);
    Scene scene2 = new Scene (root2, 300, 250);
    Rectangle rectangle2 = new Rectangle (300, 250);
    rectangle2.setFill (Color.BLUE);
    root2.getChildren ().add (rectangle2);
    Rectangle rectangle1 = new Rectangle (300, 250);
    rectangle1.setFill (Color.RED);
    root1.getChildren ().add (rectangle1);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene1);
    primaryStage.show ();
    rectangle1.setOnMouseClicked (e -> {
        WritableImage wi = new WritableImage (300, 250);
        Image img1 = root1.snapshot (new SnapshotParameters (), wi);
        ImageView imgView1 = new ImageView (img1);
        wi = new WritableImage (300, 250);
        Image img2 = root2.snapshot (new SnapshotParameters (), wi);
        ImageView imgView2 = new ImageView (img2);
        imgView1.setTranslateX (0);
        imgView2.setTranslateX (300);
        StackPane pane = new StackPane (imgView1, imgView2);
        pane.setPrefSize (300, 250);
        root1.getChildren ().setAll (pane);
        Timeline timeline = new Timeline ();
        KeyValue kv = new KeyValue (imgView2.translateXProperty (), 0, Interpolator.EASE_BOTH);
        KeyFrame kf = new KeyFrame (Duration.seconds (1), kv);
        timeline.getKeyFrames ().add (kf);
        timeline.setOnFinished (t -> {
            root1.getChildren ().setAll (rectangle1);
            primaryStage.setScene (scene2);
        });
        timeline.play ();
    });
    rectangle2.setOnMouseClicked (e -> {
        WritableImage wi = new WritableImage (300, 250);
        Image img1 = root1.snapshot (new SnapshotParameters (), wi);
        ImageView imgView1 = new ImageView (img1);
        wi = new WritableImage (300, 250);
        Image img2 = root2.snapshot (new SnapshotParameters (), wi);
        ImageView imgView2 = new ImageView (img2);
        imgView2.setTranslateX (0);
        imgView1.setTranslateX (300);
        StackPane pane = new StackPane (imgView2, imgView1);
        pane.setPrefSize (300, 250);
        root2.getChildren ().setAll (pane);
        Timeline timeline = new Timeline ();
        KeyValue kv = new KeyValue (imgView1.translateXProperty (), 0, Interpolator.EASE_BOTH);
        KeyFrame kf = new KeyFrame (Duration.seconds (1), kv);
        timeline.getKeyFrames ().add (kf);
        timeline.setOnFinished (t -> {
            root2.getChildren ().setAll (rectangle2);
            primaryStage.setScene (scene1);
        });
        timeline.play ();
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27090344_27090401_4_17
27090344_27090403_7_20
Title: Java - Internalisation issue 
----------------------------------------

static public void main (String [] args) {
    String language, country;
    if (args.length != 2) {
        language = new String ("en");
        country = new String ("US");
    } else {
        language = new String (args [0]);
        country = new String (args [1]);
    }
    Locale currentLocale = new Locale (language, country);
    messages = ResourceBundle.getBundle ("MessagesBundle", currentLocale);
    System.out.println (messages.getString ("greetings"));
    System.out.println (messages.getString ("inquiry"));
    System.out.println (messages.getString ("farewell"));
}
----------------------------------------

static public void main (String [] args) {
    String language, country;
    if (args.length != 2) {
        language = new String ("en");
        country = new String ("US");
    } else {
        language = new String (args [0]);
        country = new String (args [1]);
    }
    Locale currentLocale = new Locale (language, country);
    messages = ResourceBundle.getBundle ("MessagesBundle", currentLocale);
    System.out.println (messages.getString ("greetings"));
    System.out.println (messages.getString ("inquiry"));
    System.out.println (messages.getString ("farewell"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27090524_27090878_6_22
27090524_27091250_14_37
Title: Program for mixstring 
----------------------------------------

private static String mixString (String s1, String s2) {
    StringWriter result = new StringWriter ();
    int minLength = Math.min (s1.length (), s2.length ());
    for (int i = 0;
    i < minLength; i ++) {
        result.append (s1.charAt (i));
        result.append (s2.charAt (i));
    }
    String stringWithMaxLength = s1.length () > s2.length () ? s1 : s2;
    result.append (stringWithMaxLength.substring (minLength));
    return result.toString ();
}
----------------------------------------

private static void mixString (String s1, String s2) {
    int a, b;
    a = s1.length ();
    b = s2.length ();
    char [] c = new char [a + b];
    int d = 0;
    for (int i = 0, j = 0;
    i + j <= (a + b + 1); i ++, j ++) {
        try {
            if (i < a) {
                c [d] = s1.charAt (i);
                d ++;
            }
            c [d] = s2.charAt (j);
            d ++;
        } catch (StringIndexOutOfBoundsException e) {
            e.printStackTrace ();
        }
    }
    System.out.println (c);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27090792_27091733_6_35
27090792_37372777_4_48
Title: Switch case in java with condition on selection of cases 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    int n = 0, selection;
    ArrayList < Integer > selectionsSoFar = new ArrayList < Integer > ();
    while (n < 5) {
        System.out.println ("Enter Option:\n");
        selection = keyboard.nextInt ();
        if (selectionsSoFar.contains (selection) || selection <= 0 || selection > 2) {
            System.out.println ("Error");
        } else {
            switch (selection) {
                case 1 :
                    System.out.println ("1");
                    selectionsSoFar.add (selection);
                    n ++;
                    break;
                case 2 :
                    System.out.println ("2");
                    selectionsSoFar.add (selection);
                    n ++;
                    break;
            }
        }
    }
    keyboard = null;
}
----------------------------------------

public static void main (String [] args) {
    String I = "Icecream Rs. 10.";
    String S = "Sandwitch Rs.5";
    String C = "Cake Rs.15";
    String Ch = "Chocolate Rs.5";
    String L = "Lemon water Rs.12";
    int limit = 6;
    System.out.println ("Select your choice from below options of 1 - 5 \n" + "1 :" + I + "\n2 :" + S + "\n3 :" + C + "\n4 :" + Ch + "\n5 :" + L);
    for (int i = 1;
    i <= limit; i ++) {
        Scanner input = new Scanner (System.in);
        int choice = input.nextInt ();
        switch (choice) {
            case 1 :
                System.out.println ("You have chosen a item " + I);
                break;
            case 2 :
                System.out.println ("You have chosen a item " + S);
                break;
            case 3 :
                System.out.println ("You have chosen a item " + C);
                break;
            case 4 :
                System.out.println ("You have chosen a item " + Ch);
                break;
            case 5 :
                System.out.println ("You have chosen a item " + L);
                break;
            default :
                System.out.println ("Select only from the available choice of 1 - 5");
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27091763_27091813_1_12
27091763_27091823_1_11
Title: Java switching char elements in a 2d array 
----------------------------------------

public static void moveTo (char [] [] tissue, int i, int j) {
    for (int k = 0;
    k < tissue.length; k ++) {
        for (int l = 0;
        l < tissue.length; l ++) {
            if (tissue [k] [l] == ' ') {
                char temp = tissue [i] [j];
                tissue [i] [j] = tissue [k] [l];
                tissue [k] [l] = temp;
                return;
            }
        }
    }
}
----------------------------------------

public static void moveTo (char [] [] tissue, int i, int j) {
    for (int k = 0;
    k < tissue.length; k ++) {
        for (int l = 0;
        l < tissue [k].length; l ++) {
            if (tissue [k] [l] == ' ') {
                tissue [k] [l] = tissue [i] [j];
                tissue [i] [j] = ' ';
                return;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27091763_27091823_1_11
27091763_27092155_1_13
Title: Java switching char elements in a 2d array 
----------------------------------------

public static void moveTo (char [] [] tissue, int i, int j) {
    for (int k = 0;
    k < tissue.length; k ++) {
        for (int l = 0;
        l < tissue [k].length; l ++) {
            if (tissue [k] [l] == ' ') {
                tissue [k] [l] = tissue [i] [j];
                tissue [i] [j] = ' ';
                return;
            }
        }
    }
}
----------------------------------------

public static void moveTo (char [] [] tissue, int i, int j) {
    char temp = tissue [i] [j];
    for (int k = 0;
    k < tissue.length; k ++) {
        for (int l = 0;
        l < tissue [k].length; l ++) {
            if (tissue [k] [l] == ' ') {
                tissue [i] [j] = tissue [k] [l];
                tissue [k] [l] = temp;
                return;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27094151_27094170_1_12
27094151_27094196_1_12
Title: Why do I keep getting Java.Lang.NullPointerException 
----------------------------------------

private void render () {
    BufferStrategy bs = this.getBufferStrategy ();
    if (bs == null) {
        this.createBufferStrategy (3);
        bs = this.getBufferStrategy ();
    }
    Graphics g = bs.getDrawGraphics ();
    g.dispose ();
    bs.show ();
}
----------------------------------------

private void render () {
    BufferStrategy bs = this.getBufferStrategy ();
    if (bs == null) {
        this.createBufferStrategy (3);
        return;
    }
    Graphics g = bs.getDrawGraphics ();
    g.dispose ();
    bs.show ();
}
----------------------------------------
