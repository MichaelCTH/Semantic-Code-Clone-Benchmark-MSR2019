$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52627137_52627255_2_16
52627137_52627484_1_20
Title: Why is there multiple output when I call from an arraylist? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Menu > alist = new ArrayList < Menu > ();
    Menu menu = new Menu ();
    menu.name = "Bryan";
    menu.age = 18;
    menu.favFood = "Chicken Rice";
    alist.add (menu);
    for (int i = 0;
    i <= alist.size (); i ++) {
        Menu menu = alist.get (i);
        System.out.println ("My Name: " + menu.name);
        System.out.println ("Age: " + menu.age);
        System.out.println ("Favourite food: " + menu.favFood);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > alist = new ArrayList < String > ();
    Person person = new Person ();
    person.setName ("Bryan");
    person.setAge (18);
    person.setFavFood ("Chicken Rice");
    alist.add (person);
    for (int i = 0;
    i <= alist.size (); i ++) {
        Person p = alist.get (i);
        System.out.println ("My Name: " + p.getName ());
        System.out.println ("Age: " + p.getAge ());
        System.out.println ("Favourite food: " + p.getFavFood ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52627137_52627255_2_16
52627137_52627984_5_21
Title: Why is there multiple output when I call from an arraylist? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Menu > alist = new ArrayList < Menu > ();
    Menu menu = new Menu ();
    menu.name = "Bryan";
    menu.age = 18;
    menu.favFood = "Chicken Rice";
    alist.add (menu);
    for (int i = 0;
    i <= alist.size (); i ++) {
        Menu menu = alist.get (i);
        System.out.println ("My Name: " + menu.name);
        System.out.println ("Age: " + menu.age);
        System.out.println ("Favourite food: " + menu.favFood);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > alist_name = new ArrayList < String > ();
    ArrayList < String > alist_value = new ArrayList < String > ();
    alist_name.add ("My Name: ");
    alist_name.add ("Age: ");
    alist_name.add ("Favourite food: ");
    alist_value.add ("Bryan");
    alist_value.add ("18");
    alist_value.add ("Chicken Rice");
    for (int i = 0;
    i < alist_name.size (); i ++) {
        System.out.println (alist_name.get (i) + alist_value.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52627137_52627484_1_20
52627137_52627984_5_21
Title: Why is there multiple output when I call from an arraylist? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > alist = new ArrayList < String > ();
    Person person = new Person ();
    person.setName ("Bryan");
    person.setAge (18);
    person.setFavFood ("Chicken Rice");
    alist.add (person);
    for (int i = 0;
    i <= alist.size (); i ++) {
        Person p = alist.get (i);
        System.out.println ("My Name: " + p.getName ());
        System.out.println ("Age: " + p.getAge ());
        System.out.println ("Favourite food: " + p.getFavFood ());
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > alist_name = new ArrayList < String > ();
    ArrayList < String > alist_value = new ArrayList < String > ();
    alist_name.add ("My Name: ");
    alist_name.add ("Age: ");
    alist_name.add ("Favourite food: ");
    alist_value.add ("Bryan");
    alist_value.add ("18");
    alist_value.add ("Chicken Rice");
    for (int i = 0;
    i < alist_name.size (); i ++) {
        System.out.println (alist_name.get (i) + alist_value.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52638065_52638111_2_16
52638065_52638421_1_10
Title: Java Array plus 1 
----------------------------------------

public static void main (String [] args) {
    int [] intList = {5, 20, 32, 7, 9};
    int sum = 0;
    for (int i = intList.length - 1;
    i >= 0; i --) {
        intList [i] = intList [i] + 1;
        System.out.println ("intList [" + i + "]: " + intList [i]);
    }
    for (int counter = 0;
    counter < intList.length; counter ++) sum = sum + intList [counter];

    System.out.println ("Sum = " + sum);
}
----------------------------------------

public static void main (String [] args) {
    int [] intList = {5, 20, 32, 7, 9};
    int sum = 0;
    for (int i = 0;
    i < intList.length; i ++) {
        intList [i] ++;
        System.out.println ("intList [" + i + "]: " + intList [i]);
        sum += intList [i];
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52638770_52638968_3_19
52638770_52639031_4_20
Title: Maximum Integer Value java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int testCases = Integer.valueOf (sc.nextLine ());
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        char [] cNumbers = numbers.toCharArray ();
        long maxUntilNow = cNumbers [0] - '0';
        for (int j = 1;
        j < cNumbers.length; j ++) {
            int numberOfThisPlace = cNumbers [j] - '0';
            maxUntilNow = Math.max (maxUntilNow + numberOfThisPlace, maxUntilNow * numberOfThisPlace);
        }
        System.out.println (maxUntilNow);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int testCases = Integer.parseInt (sc.nextLine ());
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        int max = 0;
        for (int j = 0;
        j + 1 < numbers.length (); j ++) {
            int next = Integer.parseInt (numbers.substring (j, j + 1));
            if (max + next > max * next) max = max + next;
            else max = max * next;

        }
        System.out.println (max);
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52638770_52638968_3_19
52638770_52639077_1_27
Title: Maximum Integer Value java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int testCases = Integer.valueOf (sc.nextLine ());
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        char [] cNumbers = numbers.toCharArray ();
        long maxUntilNow = cNumbers [0] - '0';
        for (int j = 1;
        j < cNumbers.length; j ++) {
            int numberOfThisPlace = cNumbers [j] - '0';
            maxUntilNow = Math.max (maxUntilNow + numberOfThisPlace, maxUntilNow * numberOfThisPlace);
        }
        System.out.println (maxUntilNow);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String inputAsString = sc.nextLine ();
    int testCases = Integer.parseInt (inputAsString);
    int maxNumber = 0;
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        if (! numbers.matches ("\\d+")) {
            System.out.println ("Only numeric values are expected.");
            continue;
        }
        char [] cNumbers = numbers.toCharArray ();
        int sum = 0;
        int mult = 1;
        for (int j = 0;
        j < cNumbers.length; j ++) {
            int nextNumber = Character.getNumericValue (cNumbers [j]);
            sum = sum + nextNumber;
            mult = mult * nextNumber;
            maxNumber = mult > sum ? mult : sum;
            sum = maxNumber;
            mult = maxNumber;
        }
        System.out.println (maxNumber);
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52638770_52639031_4_20
52638770_52639077_1_27
Title: Maximum Integer Value java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int testCases = Integer.parseInt (sc.nextLine ());
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        int max = 0;
        for (int j = 0;
        j + 1 < numbers.length (); j ++) {
            int next = Integer.parseInt (numbers.substring (j, j + 1));
            if (max + next > max * next) max = max + next;
            else max = max * next;

        }
        System.out.println (max);
    }
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String inputAsString = sc.nextLine ();
    int testCases = Integer.parseInt (inputAsString);
    int maxNumber = 0;
    for (int i = 0;
    i < testCases; i ++) {
        String numbers = sc.nextLine ();
        if (! numbers.matches ("\\d+")) {
            System.out.println ("Only numeric values are expected.");
            continue;
        }
        char [] cNumbers = numbers.toCharArray ();
        int sum = 0;
        int mult = 1;
        for (int j = 0;
        j < cNumbers.length; j ++) {
            int nextNumber = Character.getNumericValue (cNumbers [j]);
            sum = sum + nextNumber;
            mult = mult * nextNumber;
            maxNumber = mult > sum ? mult : sum;
            sum = maxNumber;
            mult = maxNumber;
        }
        System.out.println (maxNumber);
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52653010_52653322_5_36
52653010_52653490_1_18
Title: How do I validate values in the correct range in loops? 
----------------------------------------

public static void main (String [] args) {
    String personPlay;
    int computerInt;
    String response;
    int Monkey = 1;
    int Robot = 2;
    int Pirate = 3;
    int Ninja = 4;
    int Zombie = 5;
    int player1 = 0;
    int player2 = 0;
    Scanner scan = new Scanner (System.in);
    Random generator = new Random ();
    System.out.print ("Hey, let's play Moropinzee!\n" + "Please enter a move.\n");
    while (! (player1 > 0) || ! (player1 < 6)) {
        System.out.println ("Player 1: Enter a number 1-5 for Monkey, Robot, Pirate, Ninja, or Zombie:");
        player1 = scan.nextInt ();
    }
    while (! (player2 > 0) || ! (player2 < 6)) {
        System.out.println ("Player 2: Enter a number 1-5 for Monkey, Robot, Pirate, Ninja, or Zombie:");
        player2 = scan.nextInt ();
    }
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int [] playerChoice = new int [5];
    try (Scanner scan = new Scanner (System.in)) {
        for (int i = 0;
        i < playerChoice.length; i ++) {
            System.out.println ("Player " + (i + 1));
            int intInput;
            try {
                intInput = scan.nextInt ();
            } catch (InputMismatchException ime) {
                intInput = 0;
            }
            if (intInput < 1 || intInput > 5) {
                System.out.println ("Invalid input.");
                i --;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52655184_52655779_1_19
52655184_52660507_1_21
Title: How to delete node in firebase android 
----------------------------------------

private void deleteTask (final String userName) {
    final DatabaseReference reference = FirebaseDatabase.getInstance ().getReference ("All_USER");
    reference.addListenerForSingleValueEvent (new ValueEventListener () {
        @Override
        public void onDataChange (DataSnapshot dataSnapshot) {
            for (DataSnapshot ds : dataSnapshot.getChildren ()) {
                ds.getRef ().orderByChild ("userName").equalTo (userName).removeValue ();
            }
        }@Override
        public void onCancelled (@NonNull
        DatabaseError databaseError) {
        }}

    );
}
----------------------------------------

private void deleteTask (final String userName) {
    final DatabaseReference reference = FirebaseDatabase.getInstance ().getReference ("All_USER");
    reference.addListenerForSingleValueEvent (new ValueEventListener () {
        @Override
        public void onDataChange (DataSnapshot dataSnapshot) {
            for (DataSnapshot ds : dataSnapshot.getChildren ()) {
                if (ds.child ("NewUser").child ("userName").getValue (String.class).equals (userName)) {
                    ds.child ("NewUser").child ("userName").getRef ().removeValue ();
                }
            }
        }@Override
        public void onCancelled (@NonNull
        DatabaseError databaseError) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52658538_52658592_1_21
52658538_52658602_1_21
Title: Getting an error when try to execute java function 
----------------------------------------

static void plusMinus (int [] arr) {
    int count1 = 0;
    int count2 = 0;
    int count3 = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] > 0) {
            count1 ++;
        } else if (arr [i] < 0) {
            count2 ++;
        } else {
            count3 ++;
        }

    }
    System.out.println (count1 / arr.length);
    System.out.println (count2 / arr.length);
    System.out.println (count3 / arr.length);
}
----------------------------------------

static void plusMinus (int [] arr) {
    int count1 = 0;
    int count2 = 0;
    int count3 = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] > 0) {
            count1 ++;
        } else if (arr [i] < 0) {
            count2 ++;
        } else {
            count3 ++;
        }

    }
    System.out.println (count1 / arr.length);
    System.out.println (count2 / arr.length);
    System.out.println (count3 / arr.length);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52659739_52659783_13_40
52659739_52659912_8_44
Title: Buttons only work when used after one another 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main2);
    B3 = findViewById (R.id.button3);
    B3.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToDanceScheduleMenu ();
        }}

    );
    B4 = findViewById (R.id.button10);
    B4.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToWhatsOn ();
        }}

    );
    B5 = findViewById (R.id.button11);
    B5.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToMainResultsMenu ();
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main2);
    B3 = findViewById (R.id.button3);
    B4 = findViewById (R.id.button10);
    B5 = findViewById (R.id.button11);
    B3.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToDanceScheduleMenu ();
        }}

    );
    B4.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToWhatsOn ();
        }}

    );
    B5.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToMainResultsMenu ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52659739_52659912_8_44
52659739_52659945_1_34
Title: Buttons only work when used after one another 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main2);
    B3 = findViewById (R.id.button3);
    B4 = findViewById (R.id.button10);
    B5 = findViewById (R.id.button11);
    B3.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToDanceScheduleMenu ();
        }}

    );
    B4.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToWhatsOn ();
        }}

    );
    B5.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToMainResultsMenu ();
        }}

    );
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main2);
    B3 = findViewById (R.id.button3);
    B4 = findViewById (R.id.button10);
    B5 = findViewById (R.id.button11);
    B3.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToDanceScheduleMenu ();
        }}

    );
    B4.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToWhatsOn ();
        }}

    );
    B5.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            moveToMainResultsMenu ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5266532_50521490_11_33
5266532_5266548_23_33
Title: Can I get all methods of a class? 
----------------------------------------

public static void main (String [] args) {
    try {
        Class c = Class.forName ("tPoint" + ".Sample");
        Object obj = c.newInstance ();
        Document doc = DocumentBuilderFactory.newInstance ().newDocumentBuilder ().parse (new File ("src/datasource.xml"));
        Method [] m = c.getDeclaredMethods ();
        for (Method e : m) {
            String mName = e.getName ();
            if (mName.startsWith ("set")) {
                System.out.println (mName);
                e.invoke (obj, new String (doc.getElementsByTagName (mName).item (0).getTextContent ()));
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        Class c = DumpMethods.class;
        Method [] m = c.getDeclaredMethods ();
        for (int i = 0;
        i < m.length; i ++) System.out.println (m [i].toString ());

    } catch (Throwable e) {
        System.err.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52673225_52673507_103_119
52673225_52673507_82_98
Title: How to connect SQLiteOpenHelper class with MainActivity? 
----------------------------------------

public Student findStudent (int studentID) {
    Student result = null;
    String whereclause = COLUMN_ID + "=?";
    String [] whereargs = new String [] {String.valueOf (studentID)};
    SQLiteDatabase db = this.getWritableDatabase ();
    Cursor csr = db.query (TABLE_NAME, null, whereclause, whereargs, null, null, null);
    if (csr.moveToFirst ()) {
        result = new Student (csr.getInt (csr.getColumnIndex (COLUMN_ID)), csr.getString (csr.getColumnIndex (COLUMN_NAME)));
    }
    csr.close ();
    db.close ();
    return result;
}
----------------------------------------

public Student findStudent (int ID, String studentName) {
    String query = "Select * FROM " + TABLE_NAME + " WHERE " + COLUMN_NAME + " = " + "'" + studentName + "'";
    SQLiteDatabase db = this.getWritableDatabase ();
    Cursor cursor = db.rawQuery (query, null);
    Student student = new Student (ID, studentName);
    if (cursor.moveToFirst ()) {
        cursor.moveToFirst ();
        student.setStudentID (Integer.parseInt (cursor.getString (0)));
        student.setStudentName (cursor.getString (1));
        cursor.close ();
    } else {
        student = null;
    }
    db.close ();
    return student;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52673738_52674330_15_24
52673738_52674330_44_53
Title: "Creating all multisets of subsets of NON DISTINCT values in Java" 
----------------------------------------

public int compareTo (Partition other) {
    for (int i = 0, ii = Math.min (this.size (), other.size ());
    i < ii; i ++) {
        int c = this.get (i).compareTo (other.get (i));
        if (c != 0) {
            return c;
        }
    }
    return Integer.compare (this.size (), other.size ());
}
----------------------------------------

public int compareTo (Partitioning other) {
    for (int i = 0, ii = Math.min (this.size (), other.size ());
    i < ii; i ++) {
        int c = this.get (i).compareTo (other.get (i));
        if (c != 0) {
            return c;
        }
    }
    return Integer.compare (this.size (), other.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52674159_52674337_5_91
52674159_52675107_2_69
Title: How i should store array from a multidimensional array with user input 
----------------------------------------

public static void main (String [] args) {
    String theState [] [] = {{"Alabama", "Northern Flicker", "Camelia"}, {"Alaska", "Willow PTarmigan", "ForgetMeNot"}, {"Arizona", "Cactus Wren", "Saguaro Cactus Blossom"}, {"Arkansas", "Mockingbird", "Apple Blossom"}, {"California", "California Quail", "California Blossom"}, {"Colorado", "Lark Bunting", "Rocking Mountain Columbine"}, {"Connecticut", "American Robin", "Mountain Laurel"}, {"Delaware", "Blue Hen Chicken", "Peach Blossom"}, {"Flordia", "Mockingbird", "Orange Blossom"}, {"Georgia", "Brown Thrasher", "Cherokee Rose"}, {"Hawaii", "Nene", "Hibiscus"}, {"Idaho", "Peregrine Falcon", "Mock Orange"}, {"Illinois", " Northern Cardinal", "Purple Violet"}, {"Indiana", "Northern Cardinal", "Peony"}, {"Iowa", "Eastern Goldrinch", "Wild Prairie Rose"}, {"Kansas", "Western Meadowlark", "Sunflower"}, {"Kentucky", "Northen Cardinal", "Golden Rod"}, {"Louisiana", "Brown Pelican", "Magnolia"}, {"Maine", "Black-capped Chickadee", "White Pine Tassel and Cone"}, {"Maryland", "Baltimore Oriole", "Black-Eyes Susan"}, {"Massachusetts", "Black-Capped Chickadee", "Mayflower"}, {"Michigan", "Robin Redbreast", "Apple Blossom"}, {"Minnesota", "Common Loon", "Pink and White ladyslipper"}, {"Mississippi", "Wood Duck", "Magnolia"}, {"Missouri", "Eastern Bluebird", "Hawthorn"}, {"Montana", "Western Meadowlark", "Bitterroot"}, {"Nebraska", "Western Medowlark", "Goldenrod"}, {"Nevada", "Mountain Bluebird", "Sagebush"}, {"New Hampshire", "Purple Finch", "Purple Lilac"}, {"New Jersey", "Eastern Goldfinch", "Violet"}, {"New Mexico", "Roadrunner", "Yucca"}, {"New York", "Bluebird", "Rose"}, {"North Carolina", "Cardinal", "Flowering Dogwood"}, {"North Dakota", "Western Meadowlark", "Wild Prairie Rose"}, {"Ohio", "Cardinal", "Scarlet Carnation"}, {"Oklahoma", "Scissor-tailed Flycatcher", "Mistletoe"}, {"Oregon", "Western Medowlark", "Orange Grape"}, {"Pennsylvania", "Ruffed Grouse", "Mountain Laurel"}, {"Rhode Island", "Rhode Island Red", "Violet"}, {"South Carolina", "Great Carolina Wren", "Yellow Jessamine"}, {"South Dakota", "Ring-necked Pheasant", "Pasque Flower"}, {"Tennessee", "Mocking Bird", "Iris"}, {"Texas", "Mocking Bird", "Texas Bluebonnet"}, {"Utah", "Common American Gull", "Sego Lily"}, {"Vermont", "Hermit Thrush", "Red Clover"}, {"Virginia", "Cardinal", "Flowering Dogwood"}, {"Washington", "Willow Goldfinch", "Coast Rhodoendron"}, {"West Virginia", "Cardinal", "Rhododendron"}, {"Wisconsin", "Robin", "Violet"}, {"Wyoming", "Western Medowlark", "Indian Paintbrush"},};
    Scanner input1 = new Scanner (System.in);
    ArrayList < String > userInputStates = new ArrayList < > ();
    while (true) {
        System.out.println ("Enter a State or None to exit: ");
        String states = input1.nextLine ();
        if (states.trim ().equalsIgnoreCase ("None")) {
            System.out.println ("**** Thank you *****\r\n" + "A summary report for each State, Bird, and Flower is: ");
            printUserList (userInputStates);
            break;
        } else {
            int position = getBirdFlower (theState, states);
            if (position != - 1) {
                System.out.println ("Bird: " + theState [position] [1]);
                System.out.println ("Flower: " + theState [position] [2]);
                userInputStates.add ("- State: " + theState [position] [0] + " Bird: " + theState [position] [1] + " Flower: " + theState [position] [2]);
            } else System.out.println ("Invalid state entered");

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String theStates [] [] = {{"Alabama", "Northern Flicker", "Camelia"}, {"Alaska", "Willow PTarmigan", "ForgetMeNot"}, {"Arizona", "Cactus Wren", "Saguaro Cactus Blossom"}, {"Arkansas", "Mockingbird", "Apple Blossom"}, {"California", "California Quail", "California Blossom"}, {"Colorado", "Lark Bunting", "Rocking Mountain Columbine"}, {"Connecticut", "American Robin", "Mountain Laurel"}, {"Delaware", "Blue Hen Chicken", "Peach Blossom"}, {"Flordia", "Mockingbird", "Orange Blossom"}, {"Georgia", "Brown Thrasher", "Cherokee Rose"}, {"Hawaii", "Nene", "Hibiscus"}, {"Idaho", "Peregrine Falcon", "Mock Orange"}, {"Illinois", " Northern Cardinal", "Purple Violet"}, {"Indiana", "Northern Cardinal", "Peony"}, {"Iowa", "Eastern Goldrinch", "Wild Prairie Rose"}, {"Kansas", "Western Meadowlark", "Sunflower"}, {"Kentucky", "Northen Cardinal", "Golden Rod"}, {"Louisiana", "Brown Pelican", "Magnolia"}, {"Maine", "Black-capped Chickadee", "White Pine Tassel and Cone"}, {"Maryland", "Baltimore Oriole", "Black-Eyes Susan"}, {"Massachusetts", "Black-Capped Chickadee", "Mayflower"}, {"Michigan", "Robin Redbreast", "Apple Blossom"}, {"Minnesota", "Common Loon", "Pink and White ladyslipper"}, {"Mississippi", "Wood Duck", "Magnolia"}, {"Missouri", "Eastern Bluebird", "Hawthorn"}, {"Montana", "Western Meadowlark", "Bitterroot"}, {"Nebraska", "Western Medowlark", "Goldenrod"}, {"Nevada", "Mountain Bluebird", "Sagebush"}, {"New Hampshire", "Purple Finch", "Purple Lilac"}, {"New Jersey", "Eastern Goldfinch", "Violet"}, {"New Mexico", "Roadrunner", "Yucca"}, {"New York", "Bluebird", "Rose"}, {"North Carolina", "Cardinal", "Flowering Dogwood"}, {"North Dakota", "Western Meadowlark", "Wild Prairie Rose"}, {"Ohio", "Cardinal", "Scarlet Carnation"}, {"Oklahoma", "Scissor-tailed Flycatcher", "Mistletoe"}, {"Oregon", "Western Medowlark", "Orange Grape"}, {"Pennsylvania", "Ruffed Grouse", "Mountain Laurel"}, {"Rhode Island", "Rhode Island Red", "Violet"}, {"South Carolina", "Great Carolina Wren", "Yellow Jessamine"}, {"South Dakota", "Ring-necked Pheasant", "Pasque Flower"}, {"Tennessee", "Mocking Bird", "Iris"}, {"Texas", "Mocking Bird", "Texas Bluebonnet"}, {"Utah", "Common American Gull", "Sego Lily"}, {"Vermont", "Hermit Thrush", "Red Clover"}, {"Virginia", "Cardinal", "Flowering Dogwood"}, {"Washington", "Willow Goldfinch", "Coast Rhodoendron"}, {"West Virginia", "Cardinal", "Rhododendron"}, {"Wisconsin", "Robin", "Violet"}, {"Wyoming", "Western Medowlark", "Indian Paintbrush"},};
    Scanner scanner = new Scanner (System.in);
    ArrayList < String > visitedStates = new ArrayList < > ();
    while (true) {
        System.out.println ("Enter a State or None to exit: ");
        String state = scanner.nextLine ().trim ();
        if ("None".equalsIgnoreCase (state)) {
            System.out.println ("**** Thank you *****\r\n" + "A summary report for each State, Bird, and Flower is: ");
            for (String vistedState : visitedStates) {
                int stateIndex = getStateIndex (theStates, vistedState);
                System.out.println (Arrays.toString (theStates [stateIndex]));
            }
            break;
        } else {
            int position = getStateIndex (theStates, state);
            if (position != - 1) {
                System.out.println ("Bird: " + theStates [position] [1]);
                System.out.println ("Flower: " + theStates [position] [2]);
                visitedStates.add (state);
            } else {
                System.out.println ("Invalid state entered");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52675456_52675579_1_12
52675456_52675580_19_32
Title: SimpleSymbols String in java 
----------------------------------------

public static boolean SimpleSymbols (String s) {
    String s1 = s.trim ();
    if (Character.isLetter (s1.charAt (0)) || Character.isLetter (s1.charAt (s1.length () - 1))) return false;

    for (int i = 1;
    i < s.length () - 1; i ++) if (Character.isLetter (s1.charAt (i)) && (s1.charAt (i - 1) != '+' || s1.charAt (i + 1) != '+')) return false;

    return true;
}
----------------------------------------

public static boolean SimpleSymbols (String s) {
    String s1 = s.trim ();
    if (Character.isLetter (s.charAt (0)) || Character.isLetter (s.charAt (s.length () - 1))) return false;

    for (int i = 1;
    i < s.length (); i ++) {
        if (Character.isLetter (s.charAt (i)) && (s.charAt (i - 1) != '+' || s.charAt (i + 1) != '+')) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52675864_52675921_1_27
52675864_52675977_1_13
Title: Anagrams - how can I pass the below two test cases 
----------------------------------------

static boolean isAnagram (String a, String b) {
    if (a.length () != b.length ()) return false;

    a = a.toLowerCase ();
    b = b.toLowerCase ();
    HashMap < Integer, Integer > m1 = new HashMap < > ();
    HashMap < Integer, Integer > m2 = new HashMap < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        int an = (int) (a.charAt (i));
        int bn = (int) (b.charAt (i));
        if (m1.containsKey (an)) {
            m1.put (an, m1.get (an) + 1);
        } else {
            m1.put (an, 1);
        }
        if (m2.containsKey (bn)) {
            m2.put (bn, m2.get (bn) + 1);
        } else {
            m2.put (bn, 1);
        }
    }
    return m1.equals (m2);
}
----------------------------------------

static boolean isAnagram (String a, String b) {
    if (a.length () != b.length ()) return false;

    a = a.toLowerCase ();
    b = b.toLowerCase ();
    char [] charA = a.toCharArray ();
    Arrays.sort (charA);
    char [] charB = b.toCharArray ();
    Arrays.sort (charB);
    return Arrays.equals (charA, charB);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5269463_5399427_14_41
5269463_5399427_49_64
Title: Java: get xpath of element in org.w3c.dom document 
----------------------------------------

public void buildXPath (Node node, StringBuilder sb) {
    if (null == node) return;

    if (this.findShortCut (node, sb)) return;

    ParentNode parent = node.getParent ();
    boolean doParents = true;
    if (parent instanceof Element) if (this.findShortCut ((Element) parent, sb)) doParents = false;

    if (doParents) this.buildXPath (parent, sb);

    if (node instanceof Element) {
        String name = ((Element) node).getLocalName ();
        sb.append ("/" + name);
    } else if (node instanceof Attribute) {
        sb.append ("/@" + ((Attribute) node).getLocalName ());
    } else if (node instanceof Text) {
        sb.append ("/text()");
    } else if (node instanceof Comment) {
        sb.append ("/comment()");
    } else if (node instanceof ProcessingInstruction) {
        sb.append ("/processing-instruction()");
    }

}
----------------------------------------

public void buildXPath (ParentNode node, StringBuilder sb) {
    if (null == node) return;

    ParentNode parent = node.getParent ();
    if (null == parent) return;
    else if (parent instanceof Document) {
    } else {
        if (! this.findShortCut ((Element) parent, sb)) this.buildXPath (parent, sb);

    }

    sb.append ("/");
    sb.append (((Element) node).getLocalName ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52701881_52702000_9_16
52701881_52702100_12_19
Title: Printing a two dimensional array on different lines 
----------------------------------------

public static void print (int [] [] grid) {
    for (int i = 0;
    i < grid.length; i ++) {
        for (int j = 0;
        j < grid [i].length; j ++) {
            System.out.print (grid [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void print (int [] [] grid) {
    for (int i = 0;
    i < grid.length; i ++) {
        for (int j = 0;
        j < grid [i].length; j ++) {
            System.out.print (grid [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52728367_52728959_5_26
52728367_52729071_6_61
Title: Java: Game of Craps: Exiting a loop then re-entering 
----------------------------------------

public static void main (String args []) {
    while (true) {
        if (score == 11 || score == 7) {
            System.out.println ("You Win!");
            break;
        }
        if (score == 2 || score == 3 || score == 12) {
            System.out.println ("You Lose.");
            break;
        } else {
            point = 1;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int dieNumber1 = 0, dieNumber2 = 0, point = 0, score = 0;
    Scanner scanner = new Scanner (System.in);
    while (point < 2) {
        dieNumber1 = (int) (Math.random () * 6 + 1);
        dieNumber2 = (int) (Math.random () * 6 + 1);
        score = dieNumber1 + dieNumber2;
        System.out.println ("Roll the die");
        System.out.println ("You rolled a " + score);
        if (score == 11 || score == 7) {
            System.out.println ("You Win!");
            break;
        }
        if (score == 2 || score == 3 || score == 12) {
            System.out.println ("You Lose.");
            break;
        }
        if (score == 4 || score == 5 || score == 6 || score == 8 || score == 9 || score == 10) {
            point = point + 1;
            System.out.println ("You got a point. Total number of points: " + point);
            if (point == 2) {
                System.out.println ("You Win!");
            } else {
                System.out.println ("Press Enter to roll again.");
                scanner.nextLine ();
                scanner.reset ();
            }
        }
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52731849_52731931_1_11
52731849_52732727_7_14
Title: "Attempting to make altcase. Char is derefferenced how do I fix this?" 
----------------------------------------

public static String altCase (String text) {
    char [] arr = text.toCharArray ();
    for (int i = 0;
    i < arr.length; i ++) {
        if (i % 2 == 0) {
            arr [i] = Character.toUpperCase (arr [i]);
        } else {
            arr [i] = Character.toLowerCase (arr [i]);
        }
    }
    return new String (arr);
}
----------------------------------------

public static String altCase (String text) {
    char [] array = text.toCharArray ();
    text = "";
    for (int i = 0;
    i < array.length; i ++) {
        text += (i % 2 != 0) ? array [i] : Tester.utilityToUpper (array [i]);
    }
    return text;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52742374_52742463_1_10
52742374_52742591_1_13
Title: return the sum of the multiples of num between 1 and 100 
----------------------------------------

public int sumMultiples (int num) {
    if (num <= 0) return 0;

    int sum = 0;
    for (int val = num;
    val <= 100; val += num) sum += val;

    return sum;
}
----------------------------------------

public int sumMultiples (int num) {
    if (num < 0) return 0;

    int result = 0;
    int loop = num;
    while (loop <= 100) {
        result += loop;
        loop += num;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52744283_52744593_1_24
52744283_52751781_5_30
Title: Print out all possible combinations of an ArrayList<ArrayList<String>> recursively 
----------------------------------------

public static void main (String [] args) {
    ArrayList < ArrayList < String > > combList = new ArrayList < ArrayList < String > > ();
    ArrayList < String > fruitList = new ArrayList < String > ();
    ArrayList < String > colorList = new ArrayList < String > ();
    ArrayList < String > numberList = new ArrayList < String > ();
    fruitList.add ("Apple");
    fruitList.add ("Orange");
    fruitList.add ("Grape");
    combList.add (fruitList);
    colorList.add ("Red");
    colorList.add ("Green");
    colorList.add ("Blue");
    combList.add (colorList);
    numberList.add ("One");
    numberList.add ("Two");
    numberList.add ("Three");
    combList.add (numberList);
    combinations (combList, 0, 0, "");
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < ArrayList < String > > combList = new ArrayList < ArrayList < String > > ();
    ArrayList < String > fruitList = new ArrayList < String > ();
    ArrayList < String > colorList = new ArrayList < String > ();
    ArrayList < String > numberList = new ArrayList < String > ();
    fruitList.add ("Apple");
    fruitList.add ("Orange");
    fruitList.add ("Grape");
    combList.add (fruitList);
    colorList.add ("Red");
    colorList.add ("Green");
    colorList.add ("Blue");
    combList.add (colorList);
    numberList.add ("One");
    numberList.add ("Two");
    numberList.add ("Three");
    combList.add (numberList);
    ArrayList < ArrayList < String > > combs = combinations (combList);
    for (ArrayList < String > al : combs) {
        System.out.println (String.join (" ", al));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52744283_52744593_26_53
52744283_52746902_12_32
Title: Print out all possible combinations of an ArrayList<ArrayList<String>> recursively 
----------------------------------------

public static void combinations (ArrayList < ArrayList < String > > combList, int listIndex, int itemIndex, String result) {
    ArrayList < String > curList;
    StringBuilder sb;
    if (listIndex < combList.size ()) {
        curList = combList.get (listIndex);
        if (itemIndex < curList.size ()) {
            sb = new StringBuilder ();
            sb.append (result + curList.get (itemIndex) + " ");
            combinations (combList, listIndex + 1, 0, sb.toString ());
            combinations (combList, listIndex, itemIndex + 1, result);
        } else {
            combinations (combList, listIndex + 1, 0, result);
        }
    }
    System.out.println (result);
    return;
}
----------------------------------------

public static void combinations (List < List < String > > combList, int listIndex, int itemIndex, String result) {
    if (listIndex < combList.size ()) {
        if (itemIndex < combList.get (listIndex).size ()) {
            List < String > curList = combList.get (listIndex);
            StringBuilder sb = new StringBuilder ();
            sb.append (result).append (curList.get (itemIndex)).append (" ");
            combinations (combList, listIndex + 1, 0, sb.toString ());
            combinations (combList, listIndex, itemIndex + 1, result);
        } else if (combList.get (listIndex).isEmpty ()) {
            combinations (combList, listIndex + 1, 0, result);
        }

        return;
    }
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52744283_52744593_26_53
52744283_52751781_32_50
Title: Print out all possible combinations of an ArrayList<ArrayList<String>> recursively 
----------------------------------------

public static void combinations (ArrayList < ArrayList < String > > combList, int listIndex, int itemIndex, String result) {
    ArrayList < String > curList;
    StringBuilder sb;
    if (listIndex < combList.size ()) {
        curList = combList.get (listIndex);
        if (itemIndex < curList.size ()) {
            sb = new StringBuilder ();
            sb.append (result + curList.get (itemIndex) + " ");
            combinations (combList, listIndex + 1, 0, sb.toString ());
            combinations (combList, listIndex, itemIndex + 1, result);
        } else {
            combinations (combList, listIndex + 1, 0, result);
        }
    }
    System.out.println (result);
    return;
}
----------------------------------------

public static ArrayList < ArrayList < String > > combinations (ArrayList < ArrayList < String > > combList) {
    if (combList.size () == 0) {
        ArrayList < ArrayList < String > > ret = new ArrayList < ArrayList < String > > ();
        ret.add (new ArrayList < String > ());
        return ret;
    } else {
        ArrayList < String > levelList = combList.remove (0);
        ArrayList < ArrayList < String > > subAnswer = combinations (combList);
        ArrayList < ArrayList < String > > newList = new ArrayList < ArrayList < String > > ();
        for (ArrayList < String > solList : subAnswer) {
            for (String s : levelList) {
                ArrayList < String > newComb = new ArrayList < String > (solList);
                newComb.add (s);
                newList.add (newComb);
            }
        }
        return newList;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52744283_52746902_12_32
52744283_52751781_32_50
Title: Print out all possible combinations of an ArrayList<ArrayList<String>> recursively 
----------------------------------------

public static void combinations (List < List < String > > combList, int listIndex, int itemIndex, String result) {
    if (listIndex < combList.size ()) {
        if (itemIndex < combList.get (listIndex).size ()) {
            List < String > curList = combList.get (listIndex);
            StringBuilder sb = new StringBuilder ();
            sb.append (result).append (curList.get (itemIndex)).append (" ");
            combinations (combList, listIndex + 1, 0, sb.toString ());
            combinations (combList, listIndex, itemIndex + 1, result);
        } else if (combList.get (listIndex).isEmpty ()) {
            combinations (combList, listIndex + 1, 0, result);
        }

        return;
    }
    System.out.println (result);
}
----------------------------------------

public static ArrayList < ArrayList < String > > combinations (ArrayList < ArrayList < String > > combList) {
    if (combList.size () == 0) {
        ArrayList < ArrayList < String > > ret = new ArrayList < ArrayList < String > > ();
        ret.add (new ArrayList < String > ());
        return ret;
    } else {
        ArrayList < String > levelList = combList.remove (0);
        ArrayList < ArrayList < String > > subAnswer = combinations (combList);
        ArrayList < ArrayList < String > > newList = new ArrayList < ArrayList < String > > ();
        for (ArrayList < String > solList : subAnswer) {
            for (String s : levelList) {
                ArrayList < String > newComb = new ArrayList < String > (solList);
                newComb.add (s);
                newList.add (newComb);
            }
        }
        return newList;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752597_52760841_3_23
52752597_52995042_23_44
Title: Trying to write unit test cannot work it out? 
----------------------------------------

public static void main (String [] args) {
    InventoryTag redSweater = new InventoryTag ();
    int sweaterShipment;
    int sweaterInventoryBefore;
    sweaterInventoryBefore = redSweater.getQuantityRemaining ();
    sweaterInventoryBefore = 10;
    sweaterShipment = 50;
    System.out.println ("Beginning tests.");
    redSweater.addInventory (sweaterInventoryBefore);
    redSweater.addInventory (sweaterShipment);
    if (sweaterInventoryBefore + sweaterShipment != redSweater.getQuantityRemaining ()) {
        System.out.println (" UNIT TEST FAILED: addInventory()");
    }
    System.out.println ("Tests complete.");
}
----------------------------------------

public static void main (String [] args) {
    InventoryTag redSweater = new InventoryTag ();
    int sweaterShipment;
    int sweaterInventoryBefore;
    sweaterInventoryBefore = redSweater.getQuantityRemaining ();
    sweaterShipment = 25;
    System.out.println ("Beginning tests.");
    redSweater.addInventory (sweaterShipment);
    if (sweaterInventoryBefore + sweaterShipment != redSweater.getQuantityRemaining ()) {
        System.out.println ("   UNIT TEST FAILED: addInventory()");
    }
    System.out.println ("Tests complete.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753100_1_30
52752906_52753130_1_22
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < String > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name.add (keyboard.next ());
        if (name.get (i).equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
            i = i + 1;
        }
    }
    System.out.println (name);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    List < String > nameList = new ArrayList < String > ();
    List < Double > scoreList = new ArrayList < Double > ();
    while (true) {
        System.out.printf ("Enter first name of student or done to finish: ");
        String fname = keyboard.next ();
        if (fname.equals ("done")) {
            break;
        }
        System.out.printf ("Enter last name of student: ");
        String lname = keyboard.next ();
        nameList.add (fname + " " + lname);
        System.out.println ("Enter score: ");
        scoreList.add (keyboard.nextDouble ());
    }
    keyboard.close ();
    System.out.println ("Names: " + nameList);
    System.out.println ("scores: " + scoreList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753100_1_30
52752906_52753144_1_31
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < String > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name.add (keyboard.next ());
        if (name.get (i).equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
            i = i + 1;
        }
    }
    System.out.println (name);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        String input = keyboard.next ();
        if (input.equals ("done")) {
            loopNaming = false;
        } else {
            name.add (input);
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
        }
        i = i + 1;
    }
    System.out.println (name);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753100_1_30
52752906_52753278_4_33
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < String > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name.add (keyboard.next ());
        if (name.get (i).equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
            i = i + 1;
        }
    }
    System.out.println (name);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score [] = new double [10];
    boolean loopNaming = true;
    int i = 0;
    String namae;
    String [] name = new String [10];
    int count = 0;
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name [i] = keyboard.next ();
        if (name [i].equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score [i] = keyboard.nextDouble ();
            count ++;
        }
        i = i + 1;
    }
    for (int j = 0;
    j < count; j ++) {
        System.out.println (name [j] + " " + score [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753130_1_22
52752906_52753144_1_31
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    List < String > nameList = new ArrayList < String > ();
    List < Double > scoreList = new ArrayList < Double > ();
    while (true) {
        System.out.printf ("Enter first name of student or done to finish: ");
        String fname = keyboard.next ();
        if (fname.equals ("done")) {
            break;
        }
        System.out.printf ("Enter last name of student: ");
        String lname = keyboard.next ();
        nameList.add (fname + " " + lname);
        System.out.println ("Enter score: ");
        scoreList.add (keyboard.nextDouble ());
    }
    keyboard.close ();
    System.out.println ("Names: " + nameList);
    System.out.println ("scores: " + scoreList);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        String input = keyboard.next ();
        if (input.equals ("done")) {
            loopNaming = false;
        } else {
            name.add (input);
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
        }
        i = i + 1;
    }
    System.out.println (name);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753130_1_22
52752906_52753278_4_33
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    List < String > nameList = new ArrayList < String > ();
    List < Double > scoreList = new ArrayList < Double > ();
    while (true) {
        System.out.printf ("Enter first name of student or done to finish: ");
        String fname = keyboard.next ();
        if (fname.equals ("done")) {
            break;
        }
        System.out.printf ("Enter last name of student: ");
        String lname = keyboard.next ();
        nameList.add (fname + " " + lname);
        System.out.println ("Enter score: ");
        scoreList.add (keyboard.nextDouble ());
    }
    keyboard.close ();
    System.out.println ("Names: " + nameList);
    System.out.println ("scores: " + scoreList);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score [] = new double [10];
    boolean loopNaming = true;
    int i = 0;
    String namae;
    String [] name = new String [10];
    int count = 0;
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name [i] = keyboard.next ();
        if (name [i].equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score [i] = keyboard.nextDouble ();
            count ++;
        }
        i = i + 1;
    }
    for (int j = 0;
    j < count; j ++) {
        System.out.println (name [j] + " " + score [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52752906_52753144_1_31
52752906_52753278_4_33
Title: How do i use user input for a string array that is in a while loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score;
    boolean loopNaming = true;
    int i = 0;
    ArrayList < String > name = new ArrayList < > ();
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        String input = keyboard.next ();
        if (input.equals ("done")) {
            loopNaming = false;
        } else {
            name.add (input);
            System.out.println ("Enter score: ");
            score = keyboard.nextDouble ();
        }
        i = i + 1;
    }
    System.out.println (name);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double score [] = new double [10];
    boolean loopNaming = true;
    int i = 0;
    String namae;
    String [] name = new String [10];
    int count = 0;
    while (loopNaming == true) {
        System.out.printf ("Enter name of student or done to finish: ");
        name [i] = keyboard.next ();
        if (name [i].equals ("done")) {
            loopNaming = false;
        } else {
            System.out.println ("Enter score: ");
            score [i] = keyboard.nextDouble ();
            count ++;
        }
        i = i + 1;
    }
    for (int j = 0;
    j < count; j ++) {
        System.out.println (name [j] + " " + score [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52767805_52768179_2_18
52767805_52768790_1_15
Title: Java Return method with math operators and an array 
----------------------------------------

public static int [] findDividers (int x) {
    int [] array = new int [x / 2];
    for (int i = 1;
    i <= array.length; i ++) {
        if (x % i == 0) {
            array [i - 1] = i;
            System.out.println (i);
        }
    }
    return array;
}
----------------------------------------

public static int [] findDividers (int x) {
    int roof = x / 2;
    int [] values = new int [roof];
    int test = 1;
    int count = 0;
    while (test <= roof) {
        if (x % test == 0) {
            values [count] = test;
            count ++;
        }
        test ++;
    }
    return Arrays.copyOf (values, count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52768800_52768853_111_121
52768800_52768853_65_76
Title: Timer does not start when implementing memory game with JToggleButton 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ("..");
    cdTimer.stop ();
    button.setText ("~");
    button2.setText ("~");
    button.setEnabled (true);
    button2.setEnabled (true);
    button.setSelected (false);
    button2.setSelected (false);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JToggleButton btn = (JToggleButton) e.getSource ();
    firstClick (btn);
    if (last == null) {
        last = btn;
        return;
    }
    matching (btn, last);
    last = null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52771305_52771398_1_23
52771305_52771430_1_18
Title: Sum of n prime numbers in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int li, suma = 0;
    int cont = 0;
    System.out.println ("Ingrese la longuitud de los numeros primos a sumar");
    li = sc.nextInt ();
    int i = 2;
    while (li > cont) {
        boolean isPrime = true;
        for (int divisor = 2;
        divisor <= Math.sqrt (i); divisor ++) {
            if (i % divisor == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            suma += i;
            cont ++;
        }
        i ++;
    }
    System.out.print (suma + " ");
}
----------------------------------------

public static void main (String args []) {
    int count = 3;
    int sum = 0;
    int n = 2;
    for (int i = 0;
    i < count; i ++) {
        if (n == 2) {
            sum += n;
            n ++;
        } else {
            while (! isPrime (n)) {
                n = n + 2;
            }
            sum += n;
            n = n + 2;
        }
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52772722_52772788_137_152
52772722_52772788_154_176
Title: NullPointerException in recursively dividing triangle 
----------------------------------------

public boolean divide () {
    if (isDivided ()) {
        return false;
    } else {
        Triangle t1 = new Triangle (vertices [0], vertices [0].createMiddle (vertices [1]), vertices [0].createMiddle (vertices [2]));
        Triangle t2 = new Triangle (vertices [0].createMiddle (vertices [1]), vertices [1], vertices [1].createMiddle (vertices [2]));
        Triangle t3 = new Triangle (vertices [0].createMiddle (vertices [2]), vertices [1].createMiddle (vertices [2]), vertices [2]);
        subTriangles [0] = t1;
        subTriangles [1] = t2;
        subTriangles [2] = t3;
        return true;
    }
}
----------------------------------------

public boolean divide (int depth) {
    if (depth <= 0) {
        return false;
    } else {
        while (depth > 0) {
            if (! isDivided ()) {
                divide ();
            } else {
                depth -= 1;
                for (int i = 0;
                i < 3; i ++) {
                    Triangle t = getSubTriangle (i);
                    System.out.println (t.toString ());
                    if (t != null) {
                        t.divide (depth);
                    }
                }
                depth -= 1;
            }
        }
        return true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52776428_52777363_1_22
52776428_52778412_1_11
Title: Replacing elements in array by the larger of its neighbour 
----------------------------------------

public static void replaceWithNeighbours (int [] array, int [] out) throws Exception {
    if (array.length != out.length) {
        throw new Exception ("Lengths don't match");
    }
    out [0] = array [0];
    out [out.length - 1] = array [array.length - 1];
    for (int i = 1;
    i < array.length - 1; i ++) {
        int larger = array [i - 1];
        if (larger < array [i + 1]) {
            larger = array [i + 1];
        }
        out [i] = larger;
    }
}
----------------------------------------

public int [] replaceWithNeighbours (int [] arr) {
    int [] ret = new int [arr.length];
    for (int i = 0;
    i < arr.length; ++ i) {
        if (i == 0 || i == arr.length - 1) {
            ret [i] = arr [i];
        } else {
            ret [i] = Math.max (arr [i - 1], arr [i + 1]);
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52783682_52783868_1_22
52783682_52784483_1_38
Title: How to print the values of array after deleting the duplicate values using Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter the number of elements you want to enter in an array");
    int n = input.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter element in the array");
    for (int i = 0;
    i < n; i ++) {
        a [i] = input.nextInt ();
    }
    System.out.println ("The Array: " + Arrays.toString (a));
    Set < int > numsSet = new HashSet < int > (Arrays.asList (a));
    int [] newArray = numsSet.toArray ();
    Arrays.sort (newArray);
    System.out.println ("Sorted array: " + Arrays.toString (newArray));
    System.out.println ("size of the array after deleting the duplicates " + newArray.length);
    System.out.println (Arrays.toString (newArray));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter the number of elements you want to enter in an array");
    int n = input.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter element in the array");
    for (int i = 0;
    i < n; i ++) {
        a [i] = input.nextInt ();
    }
    System.out.println ("The Array: " + Arrays.toString (a));
    Arrays.sort (a);
    System.out.println ("Sorted array: " + Arrays.toString (a));
    int last = a [0];
    int differentValues = 1;
    for (int i = 1;
    i < a.length; i ++) {
        if (a [i] == last && i < a.length - 1) {
            System.arraycopy (a, i + 1, a, i, a.length - i - 1);
        } else {
            differentValues ++;
            last = a [i];
        }
    }
    int [] a2 = new int [differentValues];
    System.arraycopy (a, 0, a2, 0, differentValues);
    System.out.println ("Sorted Array without duplicates: " + Arrays.toString (a2));
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52793804_52806260_5_17
52793804_53032473_1_84
Title: How to create two-dimensional arrays using file input 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    int [] [] [] allMatrix = getAllMatrix (args [0]);
    for (int [] [] currentMatrix : allMatrix) {
        for (int i = 0;
        i < currentMatrix.length; i ++) {
            for (int j = 0;
            j < currentMatrix [i].length; j ++) {
                System.out.print (currentMatrix [i] [j] + " ");
            }
            System.out.println ();
        }
        System.out.println ("\n\n");
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner scanner = new Scanner (new File ("/Users/Krish/IdeaProjects/Lessons/src/Lesson34/MatrixData"));
    String [] text = new String [100];
    int index = - 1;
    while (scanner.hasNext ()) {
        text [++ index] = scanner.nextLine ();
    }
    scanner.close ();
    int matrixCount = 0;
    int rowCount = 0, colCount = 0;
    int aRows = 0, aCols = 0;
    int bRows, bCols;
    for (int i = 0;
    i <= index; i ++) {
        switch (text [i]) {
            case "matrix" :
                if (++ matrixCount == 2) {
                    aRows = rowCount;
                    aCols = colCount;
                }
                rowCount = 0;
                colCount = 0;
                break;
            case "row" :
                rowCount ++;
                colCount = 0;
                break;
            default :
                colCount ++;
                break;
        }
    }
    bRows = rowCount;
    bCols = colCount;
    int [] [] a = new int [aRows] [aCols];
    int [] [] b = new int [bRows] [bCols];
    matrixCount = 0;
    int rowIndex = - 1, colIndex = - 1;
    for (int i = 0;
    i <= index; i ++) {
        switch (text [i]) {
            case "matrix" :
                matrixCount ++;
                rowIndex = - 1;
                colIndex = - 1;
                break;
            case "row" :
                rowIndex ++;
                colIndex = - 1;
                break;
            default :
                colIndex ++;
                if (matrixCount == 1) {
                    a [rowIndex] [colIndex] = Integer.parseInt (text [i]);
                } else {
                    b [rowIndex] [colIndex] = Integer.parseInt (text [i]);
                }
                break;
        }
    }
    int [] [] product = MatrixMult.mult (a, b);
    for (int i = 0;
    i < product.length; i ++) {
        for (int j = 0;
        j < product [i].length; j ++) {
            System.out.print (product [i] [j] + "\t");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52795469_52795503_2_11
52795469_52795522_1_12
Title: Why does my code on printing Triangular Numbers not work? 
----------------------------------------

public static void main (String [] args) {
    int n = 1;
    int t = 1;
    while (n <= 10) {
        System.out.println (t);
        n ++;
        t += n;
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    int t = 0;
    while (n <= 10) {
        n ++;
        t = (n * (n + 1)) / 2;
        System.out.println (t);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52811724_52811880_16_47
52811724_52812094_1_23
Title: Add up each element in two uneven arrays in Java 
----------------------------------------

public static int [] concateArrays (int [] samling, int [] samling2) {
    int len = 0;
    if (samling.length > samling2.length) len = samling.length;
    else len = samling2.length;

    int [] total = new int [len];
    for (int i = 0;
    i < len; i ++) {
        if (i >= samling2.length) {
            total [i] = samling [i];
        } else if (i >= samling.length) {
            total [i] = samling2 [i];
        } else {
            total [i] = samling2 [i] + samling [i];
        }

    }
    return total;
}
----------------------------------------

public static int [] concateArrays (int [] samling, int [] samling2) {
    int maxLen = Math.max (samling.length, samling2.length);
    int [] shorter = maxLen == samling.length ? samling2 : samling;
    int [] longer = maxLen == samling.length ? samling : samling2;
    int [] total = new int [maxLen];
    for (int i = 0;
    i < shorter.length; i ++) {
        total [i] = shorter [i] + longer [i];
    }
    for (int i = shorter.length;
    i < longer.length; i ++) {
        total [i] = longer [i];
    }
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52843830_52843943_1_12
52843830_52843945_1_10
Title: "How to do a ""cross-over"" with two integer arrays" 
----------------------------------------

void crossOver (int [] geneA, int [] geneB, int pos) {
    int copyA [];
    int copyB [];
    copyA = Arrays.copyOf (geneA, geneA.length);
    copyB = Arrays.copyOf (geneB, geneB.length);
    for (int i = pos;
    i < geneA.length; i ++) {
        geneA [i] = copyB [i];
        geneB [i] = copyA [i];
    }
    System.out.println (Arrays.toString (geneA));
    System.out.println (Arrays.toString (geneB));
}
----------------------------------------

private void crossOver (int [] geneA, int [] geneB, int pos) {
    int [] copyA = Arrays.copyOf (geneA, geneA.length);
    int [] copyB = Arrays.copyOf (geneB, geneB.length);
    for (int i = pos;
    i < geneA.length; i ++) {
        geneA [i] = copyB [i];
        geneB [i] = copyA [i];
    }
    System.out.println (Arrays.toString (geneA));
    System.out.println (Arrays.toString (geneB));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52861114_52861135_1_16
52861114_52861226_1_11
Title: "How can I assign Boolean Value true or false to the string ""Open"" and ""Close""" 
----------------------------------------

public static void main (String [] args) {
    boolean [] lockers = new boolean [100];
    for (int i = 0;
    i < lockers.length; i ++) {
        for (int j = i;
        j < lockers.length; j += i) {
            if (lockers [j] == false) {
                lockers [j] = true;
            } else {
                lockers [j] = false;
            }
        }
    }
    for (int i = 0;
    i < lockers.length; i ++) {
        System.out.println (lockers [i] + " " + i);
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean [] lockers = new boolean [100];
    for (int i = 0;
    i < lockers.length; i ++) {
        for (int j = i;
        j < lockers.length; j += i) {
            lockers [j] = ! lockers [j];
        }
    }
    for (int i = 1;
    i < lockers.length; i ++) {
        System.out.println (lockers [i] + " " + i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862128_8_21
52862031_52862208_5_23
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    for (int i = 0;
    i < 100000; i ++) {
        int [] d1 = Dice ();
        int [] d2 = Dice ();
        if (d1 [0] > d2 [0] && d1 [1] > d2 [1]) {
            break;
        } else {
            trials ++;
        }
    }
    System.out.println (trials);
}
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    int count = 0;
    while (count < 2) {
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            ++ count;
        } else {
            count = 0;
        }
        ++ trials;
    }
    println ("It took " + trials + " trials for d1 to be larger than d2 " + count + " times in a row.")
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862128_8_21
52862031_52862254_5_34
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    for (int i = 0;
    i < 100000; i ++) {
        int [] d1 = Dice ();
        int [] d2 = Dice ();
        if (d1 [0] > d2 [0] && d1 [1] > d2 [1]) {
            break;
        } else {
            trials ++;
        }
    }
    System.out.println (trials);
}
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    Boolean lastTimeD1WasGreater = false;
    for (int i = 0;
    i < 100000; i ++) {
        trials ++;
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            if (lastTimeD1WasGreater) {
                System.out.println ("it took " + trials + " trials.");
                break;
            } else {
                lastTimeD1WasGreater = true;
            }
        } else {
            lastTimeD1WasGreater = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862128_8_21
52862031_52862860_5_25
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    for (int i = 0;
    i < 100000; i ++) {
        int [] d1 = Dice ();
        int [] d2 = Dice ();
        if (d1 [0] > d2 [0] && d1 [1] > d2 [1]) {
            break;
        } else {
            trials ++;
        }
    }
    System.out.println (trials);
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int trials = 0;
    int twoTimes = 0;
    do {
        int d1 = rand.nextInt (25) + 1;
        int d2 = rand.nextInt (25) + 1;
        trials ++;
        if (d1 > d2) {
            twoTimes ++;
            System.out.printf ("%s time greater\nd1 was " + d1 + "\nd2 was " + d2 + "\n-------\n", twoTimes);
        }
    } while (twoTimes != 2);
    System.out.printf ("\nIt took %s times", trials);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862208_5_23
52862031_52862254_5_34
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    int count = 0;
    while (count < 2) {
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            ++ count;
        } else {
            count = 0;
        }
        ++ trials;
    }
    println ("It took " + trials + " trials for d1 to be larger than d2 " + count + " times in a row.")
}
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    Boolean lastTimeD1WasGreater = false;
    for (int i = 0;
    i < 100000; i ++) {
        trials ++;
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            if (lastTimeD1WasGreater) {
                System.out.println ("it took " + trials + " trials.");
                break;
            } else {
                lastTimeD1WasGreater = true;
            }
        } else {
            lastTimeD1WasGreater = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862208_5_23
52862031_52862860_5_25
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    int count = 0;
    while (count < 2) {
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            ++ count;
        } else {
            count = 0;
        }
        ++ trials;
    }
    println ("It took " + trials + " trials for d1 to be larger than d2 " + count + " times in a row.")
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int trials = 0;
    int twoTimes = 0;
    do {
        int d1 = rand.nextInt (25) + 1;
        int d2 = rand.nextInt (25) + 1;
        trials ++;
        if (d1 > d2) {
            twoTimes ++;
            System.out.printf ("%s time greater\nd1 was " + d1 + "\nd2 was " + d2 + "\n-------\n", twoTimes);
        }
    } while (twoTimes != 2);
    System.out.printf ("\nIt took %s times", trials);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52862031_52862254_5_34
52862031_52862860_5_25
Title: Rolling two dices until dice1 is larger than dice2 two times in java 
----------------------------------------

public static void main (String [] args) {
    int trials = 0;
    Boolean lastTimeD1WasGreater = false;
    for (int i = 0;
    i < 100000; i ++) {
        trials ++;
        int d1 = Dice ();
        int d2 = Dice ();
        if (d1 > d2) {
            if (lastTimeD1WasGreater) {
                System.out.println ("it took " + trials + " trials.");
                break;
            } else {
                lastTimeD1WasGreater = true;
            }
        } else {
            lastTimeD1WasGreater = false;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int trials = 0;
    int twoTimes = 0;
    do {
        int d1 = rand.nextInt (25) + 1;
        int d2 = rand.nextInt (25) + 1;
        trials ++;
        if (d1 > d2) {
            twoTimes ++;
            System.out.printf ("%s time greater\nd1 was " + d1 + "\nd2 was " + d2 + "\n-------\n", twoTimes);
        }
    } while (twoTimes != 2);
    System.out.printf ("\nIt took %s times", trials);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52863023_52863152_1_12
52863023_52863237_22_29
Title: Java null objects form array 
----------------------------------------

public Sunflower get (int x, int y) {
    boolean found = false;
    Sunflower sun = null;
    for (int i = 0;
    i < array.length && found == false; i ++) {
        if (array [i] != null && array [i].getX () == x && array [i].getY () == y) {
            sun = array [i];
            found = true;
        }
    }
    return sun;
}
----------------------------------------

Sunflower get (int x, int y) {
    for (Sunflower s : array) {
        if (s == null) continue;

        if (s.getX () == x && s.getY () == y) return s;

    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52863900_52863954_1_10
52863900_52868069_4_18
Title: How do you convert the users input into asterisks with a do while loop? 
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter number between one and ten: ");
    int count = in.nextInt ();
    int counter = 0;
    do {
        System.out.print ("*");
        counter ++;
    } while (counter < count);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter number between one and ten: ");
    int count = in.nextInt ();
    int counter = 0;
    if (count < 1 || count > 10) {
        System.out.println ("Try again");
    } else {
        do {
            System.out.print ("*");
            counter ++;
        } while (counter < count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52866424_52866532_3_15
52866424_52866545_3_19
Title: Creating Java conversion table from Fahrenheit to Celsius 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Conversion Table");
    final int TOTAL = 100;
    System.out.println ("Fahrenheit" + "\t Celsius");
    for (int c = 0;
    c <= TOTAL; c += 5) {
        System.out.println ((c * 9 / 5) + 32 + "\t \t" + c);
        {
            System.out.println ();
        }}
}
----------------------------------------

public static void main (String [] args) {
    int Celsius = 0;
    int Fahrenheit = 0;
    String Space = "  ";
    System.out.println ("C        F");
    while (Celsius < 105) {
        Fahrenheit = (int) (1.8 * Celsius) + 32;
        System.out.println (Celsius + Space + "  |   " + Fahrenheit);
        Celsius += 5;
        if (Celsius == 10) Space = " ";

        if (Celsius == 100) Space = "";

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52874_50833568_2_10
52874_52966_5_14
Title: How do you keep the machine awake? 
----------------------------------------

public static void main (String [] args) throws AWTException {
    Robot rob = new Robot ();
    PointerInfo ptr = null;
    while (true) {
        rob.delay (4000);
        ptr = MouseInfo.getPointerInfo ();
        rob.mouseMove ((int) ptr.getLocation ().getX () + 1, (int) ptr.getLocation ().getY () + 1);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Robot hal = new Robot ();
    Random random = new Random ();
    while (true) {
        hal.delay (1000 * 60);
        int x = random.nextInt () % 640;
        int y = random.nextInt () % 480;
        hal.mouseMove (x, y);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287506_20638584_8_41
5287506_27550487_12_60
Title: Broken Necklace USACO Problem 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader f = new BufferedReader (new FileReader ("beads.in"));
    PrintWriter out = new PrintWriter (new BufferedWriter (new FileWriter ("beads.out")));
    f.readLine ();
    String s1 = f.readLine ();
    List < String > counts = new LinkedList < String > ();
    char [] colors = (s1.concat (s1)).toCharArray ();
    char previousColor = ' ';
    int count = 0;
    for (char color : colors) {
        if (previousColor != color && count > 0) {
            counts.add (count + "-" + previousColor);
            count = 0;
        }
        count ++;
        previousColor = color;
    }
    if (counts.isEmpty ()) {
        out.println (count / 2);
        out.close ();
        System.exit (0);
    }
    TreeSet < Integer > result = new TreeSet < Integer > ();
    for (int i = 1;
    i < counts.size (); i ++) {
        if (counts.get (i).split ("-") [1].charAt (0) == 'w') continue;

        int left = getLeft (counts, i);
        int right = getRight (counts, i);
        result.add ((left + right));
    }
    out.println (result.last ());
    out.close ();
    System.exit (0);
}
----------------------------------------

public static void main (String args []) {
    try {
        BufferedReader f = new BufferedReader (new FileReader ("beads.in"));
        PrintWriter out = new PrintWriter (new BufferedWriter (new FileWriter ("str.txt")));
        int len = Integer.parseInt (f.readLine ());
        String s = f.readLine ();
        int c1 = 0, c2 = 0;
        int breakpoint = 0;
        int max = 0;
        for (int i = 1;
        i <= len; i ++) {
            char before = s.charAt ((i - 1) % len);
            char after = s.charAt (i % len);
            if (before != after) {
                c1 = 0;
                c2 = 0;
                int index = i - 1;
                while (s.charAt (index) == before || s.charAt (index) == 'w') {
                    char sc = s.charAt (index);
                    c1 ++;
                    if (index == 0) index = len - 1;
                    else index --;

                }
                index = i;
                while (s.charAt (index % len) == after || s.charAt (index % len) == 'w') {
                    c2 ++;
                    if (index == len - 1) index = 0;
                    else index ++;

                }
                if (max < (c1 + c2)) {
                    breakpoint = i;
                    max = c1 + c2;
                }
            }
        }
        out.println (max);
        out.close ();
        System.exit (0);
    } catch (Exception e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_16315074_4_21
5287538_17215393_4_38
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int num = 0;
    int sum = 0;
    System.out.println ("Please enter a number to show its digits");
    num = scan.nextInt ();
    System.out.println ("Here are the digits and the sum of the digits");
    while (num > 0) {
        System.out.println ("==>" + num % 10);
        sum += num % 10;
        num = num / 10;
    }
    System.out.println ("Sum is " + sum);
}
----------------------------------------

public static void main (String [] args) {
    int input = 0;
    System.out.println ("The super insano calculator");
    System.out.println ("enter the corrosponding number:");
    Scanner reader3 = new Scanner (System.in);
    System.out.println ("1. Add | 2. Subtract | 3. Divide | 4. Multiply");
    input = reader3.nextInt ();
    int a = 0, b = 0;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Enter the first number");
    a = reader.nextInt ();
    Scanner reader1 = new Scanner (System.in);
    System.out.println ("Enter the scend number");
    b = reader1.nextInt ();
    switch (input) {
        case 1 :
            System.out.println (a + " + " + b + " = " + add (a, b));
            break;
        case 2 :
            System.out.println (a + " - " + b + " = " + subtract (a, b));
            break;
        case 3 :
            System.out.println (a + " / " + b + " = " + divide (a, b));
            break;
        case 4 :
            System.out.println (a + " * " + b + " = " + multiply (a, b));
            break;
        default :
            System.out.println ("your input is invalid!");
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_16315074_4_21
5287538_18664284_5_24
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int num = 0;
    int sum = 0;
    System.out.println ("Please enter a number to show its digits");
    num = scan.nextInt ();
    System.out.println ("Here are the digits and the sum of the digits");
    while (num > 0) {
        System.out.println ("==>" + num % 10);
        sum += num % 10;
        num = num / 10;
    }
    System.out.println ("Sum is " + sum);
}
----------------------------------------

public static void main (String args []) {
    int a;
    float b;
    String s;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string");
    s = in.nextLine ();
    System.out.println ("You entered string " + s);
    System.out.println ("Enter an integer");
    a = in.nextInt ();
    System.out.println ("You entered integer " + a);
    System.out.println ("Enter a float");
    b = in.nextFloat ();
    System.out.println ("You entered float " + b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_16315074_4_21
5287538_27831435_4_20
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int num = 0;
    int sum = 0;
    System.out.println ("Please enter a number to show its digits");
    num = scan.nextInt ();
    System.out.println ("Here are the digits and the sum of the digits");
    while (num > 0) {
        System.out.println ("==>" + num % 10);
        sum += num % 10;
        num = num / 10;
    }
    System.out.println ("Sum is " + sum);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Name : ");
    String name = input.next ();
    System.out.print ("Last Name : ");
    String lname = input.next ();
    System.out.print ("Age : ");
    byte age = input.nextByte ();
    System.out.println (" ");
    System.out.println (" ");
    System.out.println ("Firt Name: " + name);
    System.out.println ("Last Name: " + lname);
    System.out.println ("      Age: " + age);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_16315074_4_21
5287538_46084423_7_31
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int num = 0;
    int sum = 0;
    System.out.println ("Please enter a number to show its digits");
    num = scan.nextInt ();
    System.out.println ("Here are the digits and the sum of the digits");
    while (num > 0) {
        System.out.println ("==>" + num % 10);
        sum += num % 10;
        num = num / 10;
    }
    System.out.println ("Sum is " + sum);
}
----------------------------------------

public static void main (String args []) {
    Scanner reader = new Scanner (System.in);
    System.out.println ("Please enter integers. Type 0 to exit.");
    boolean done = false;
    while (! done) {
        System.out.print ("Enter an integer: ");
        try {
            int n = reader.nextInt ();
            if (n == 0) {
                done = true;
            } else {
                System.out.println ("\tThe number entered was: " + n);
            }
        } catch (InputMismatchException e) {
            System.out.println ("\tInvalid input type (must be an integer)");
            reader.nextLine ();
        }
    }
    System.out.println ("Exiting...");
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_17215393_4_38
5287538_18664284_5_24
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    int input = 0;
    System.out.println ("The super insano calculator");
    System.out.println ("enter the corrosponding number:");
    Scanner reader3 = new Scanner (System.in);
    System.out.println ("1. Add | 2. Subtract | 3. Divide | 4. Multiply");
    input = reader3.nextInt ();
    int a = 0, b = 0;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Enter the first number");
    a = reader.nextInt ();
    Scanner reader1 = new Scanner (System.in);
    System.out.println ("Enter the scend number");
    b = reader1.nextInt ();
    switch (input) {
        case 1 :
            System.out.println (a + " + " + b + " = " + add (a, b));
            break;
        case 2 :
            System.out.println (a + " - " + b + " = " + subtract (a, b));
            break;
        case 3 :
            System.out.println (a + " / " + b + " = " + divide (a, b));
            break;
        case 4 :
            System.out.println (a + " * " + b + " = " + multiply (a, b));
            break;
        default :
            System.out.println ("your input is invalid!");
            break;
    }
}
----------------------------------------

public static void main (String args []) {
    int a;
    float b;
    String s;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string");
    s = in.nextLine ();
    System.out.println ("You entered string " + s);
    System.out.println ("Enter an integer");
    a = in.nextInt ();
    System.out.println ("You entered integer " + a);
    System.out.println ("Enter a float");
    b = in.nextFloat ();
    System.out.println ("You entered float " + b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_17215393_4_38
5287538_27831435_4_20
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    int input = 0;
    System.out.println ("The super insano calculator");
    System.out.println ("enter the corrosponding number:");
    Scanner reader3 = new Scanner (System.in);
    System.out.println ("1. Add | 2. Subtract | 3. Divide | 4. Multiply");
    input = reader3.nextInt ();
    int a = 0, b = 0;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Enter the first number");
    a = reader.nextInt ();
    Scanner reader1 = new Scanner (System.in);
    System.out.println ("Enter the scend number");
    b = reader1.nextInt ();
    switch (input) {
        case 1 :
            System.out.println (a + " + " + b + " = " + add (a, b));
            break;
        case 2 :
            System.out.println (a + " - " + b + " = " + subtract (a, b));
            break;
        case 3 :
            System.out.println (a + " / " + b + " = " + divide (a, b));
            break;
        case 4 :
            System.out.println (a + " * " + b + " = " + multiply (a, b));
            break;
        default :
            System.out.println ("your input is invalid!");
            break;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Name : ");
    String name = input.next ();
    System.out.print ("Last Name : ");
    String lname = input.next ();
    System.out.print ("Age : ");
    byte age = input.nextByte ();
    System.out.println (" ");
    System.out.println (" ");
    System.out.println ("Firt Name: " + name);
    System.out.println ("Last Name: " + lname);
    System.out.println ("      Age: " + age);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_17215393_4_38
5287538_46084423_7_31
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    int input = 0;
    System.out.println ("The super insano calculator");
    System.out.println ("enter the corrosponding number:");
    Scanner reader3 = new Scanner (System.in);
    System.out.println ("1. Add | 2. Subtract | 3. Divide | 4. Multiply");
    input = reader3.nextInt ();
    int a = 0, b = 0;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Enter the first number");
    a = reader.nextInt ();
    Scanner reader1 = new Scanner (System.in);
    System.out.println ("Enter the scend number");
    b = reader1.nextInt ();
    switch (input) {
        case 1 :
            System.out.println (a + " + " + b + " = " + add (a, b));
            break;
        case 2 :
            System.out.println (a + " - " + b + " = " + subtract (a, b));
            break;
        case 3 :
            System.out.println (a + " / " + b + " = " + divide (a, b));
            break;
        case 4 :
            System.out.println (a + " * " + b + " = " + multiply (a, b));
            break;
        default :
            System.out.println ("your input is invalid!");
            break;
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner reader = new Scanner (System.in);
    System.out.println ("Please enter integers. Type 0 to exit.");
    boolean done = false;
    while (! done) {
        System.out.print ("Enter an integer: ");
        try {
            int n = reader.nextInt ();
            if (n == 0) {
                done = true;
            } else {
                System.out.println ("\tThe number entered was: " + n);
            }
        } catch (InputMismatchException e) {
            System.out.println ("\tInvalid input type (must be an integer)");
            reader.nextLine ();
        }
    }
    System.out.println ("Exiting...");
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_18664284_5_24
5287538_27831435_4_20
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String args []) {
    int a;
    float b;
    String s;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string");
    s = in.nextLine ();
    System.out.println ("You entered string " + s);
    System.out.println ("Enter an integer");
    a = in.nextInt ();
    System.out.println ("You entered integer " + a);
    System.out.println ("Enter a float");
    b = in.nextFloat ();
    System.out.println ("You entered float " + b);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Name : ");
    String name = input.next ();
    System.out.print ("Last Name : ");
    String lname = input.next ();
    System.out.print ("Age : ");
    byte age = input.nextByte ();
    System.out.println (" ");
    System.out.println (" ");
    System.out.println ("Firt Name: " + name);
    System.out.println ("Last Name: " + lname);
    System.out.println ("      Age: " + age);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_18664284_5_24
5287538_46084423_7_31
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String args []) {
    int a;
    float b;
    String s;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string");
    s = in.nextLine ();
    System.out.println ("You entered string " + s);
    System.out.println ("Enter an integer");
    a = in.nextInt ();
    System.out.println ("You entered integer " + a);
    System.out.println ("Enter a float");
    b = in.nextFloat ();
    System.out.println ("You entered float " + b);
}
----------------------------------------

public static void main (String args []) {
    Scanner reader = new Scanner (System.in);
    System.out.println ("Please enter integers. Type 0 to exit.");
    boolean done = false;
    while (! done) {
        System.out.print ("Enter an integer: ");
        try {
            int n = reader.nextInt ();
            if (n == 0) {
                done = true;
            } else {
                System.out.println ("\tThe number entered was: " + n);
            }
        } catch (InputMismatchException e) {
            System.out.println ("\tInvalid input type (must be an integer)");
            reader.nextLine ();
        }
    }
    System.out.println ("Exiting...");
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5287538_27831435_4_20
5287538_46084423_7_31
Title: How can I get the user input in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Name : ");
    String name = input.next ();
    System.out.print ("Last Name : ");
    String lname = input.next ();
    System.out.print ("Age : ");
    byte age = input.nextByte ();
    System.out.println (" ");
    System.out.println (" ");
    System.out.println ("Firt Name: " + name);
    System.out.println ("Last Name: " + lname);
    System.out.println ("      Age: " + age);
}
----------------------------------------

public static void main (String args []) {
    Scanner reader = new Scanner (System.in);
    System.out.println ("Please enter integers. Type 0 to exit.");
    boolean done = false;
    while (! done) {
        System.out.print ("Enter an integer: ");
        try {
            int n = reader.nextInt ();
            if (n == 0) {
                done = true;
            } else {
                System.out.println ("\tThe number entered was: " + n);
            }
        } catch (InputMismatchException e) {
            System.out.println ("\tInvalid input type (must be an integer)");
            reader.nextLine ();
        }
    }
    System.out.println ("Exiting...");
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52877752_52878140_2_20
52877752_52884027_2_38
Title: prime numbers between 1 and 100 in java 
----------------------------------------

public static void main (String [] args) {
    boolean isPrime = true;
    for (int number = 1;
    number <= 100; number ++) {
        isPrime = true;
        if (number == 1) isPrime = false;

        for (int divisor = 2;
        divisor < number && isPrime; divisor ++) {
            if (number % divisor == 0) {
                isPrime = false;
            }
        }
        if (isPrime) System.out.println (number + ", ");

    }
}
----------------------------------------

public static void main (String [] args) {
    final int NUMBER_OF_PRIMES = 26;
    final int NUMBER_OF_PRIMES_PER_LINE = 5;
    int count = 0;
    int number = 1;
    System.out.println ("The prime numbers between 1 and 100 are \n");
    while (count < NUMBER_OF_PRIMES) {
        boolean isPrime = true;
        for (int divisor = 2;
        divisor <= number / 2; divisor ++) {
            if (number % divisor == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            count ++;
            if (count % NUMBER_OF_PRIMES_PER_LINE == 0) {
                System.out.println (number);
            } else System.out.print (number + " ");

        }
        number ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52881144_52881405_1_19
52881144_52881445_1_23
Title: Squaring application in java 
----------------------------------------

public static int getValidInt (int greaterThan, Scanner scan) {
    int number = greaterThan;
    do {
        while (! scan.hasNextInt ()) {
            String garbage = scan.next ();
            System.out.println (garbage + " is not valid input.");
        }
        number = scan.nextInt ();
        if (number < greaterThan) {
            System.out.println ("input is: " + number + " minimum is: " + greaterThan);
        }
    } while (number < greaterThan);
    return number;
}
----------------------------------------

public static int getValidInt (int greaterThan, Scanner scan) {
    int input = 0;
    boolean valid = false;
    while (! valid) {
        System.out.println ("Enter an integer greater than " + greaterThan + ":");
        if (! scan.hasNextInt ()) {
            String garbage = scan.next ();
            System.out.println (garbage + " is not valid input.");
        } else {
            input = scan.nextInt ();
            if (input <= greaterThan) {
                System.out.println (input + " is not greater than " + greaterThan);
            } else {
                valid = true;
            }
        }
    }
    return input;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52881791_52882035_2_20
52881791_52882234_6_20
Title: How to find characters in two String that cause them become unequal? 
----------------------------------------

public static void removeUnequalChars (String str, String str2) {
    String uncommonChars = "";
    int maxlength = str.length ();
    if (maxlength < str2.length ()) maxlength = str2.length ();

    for (int i = 0;
    i < maxlength; i ++) {
        if (i >= str.length ()) {
            uncommonChars += str2.charAt (i);
            continue;
        } else if (i >= str2.length ()) {
            uncommonChars += str.charAt (i);
            continue;
        }

        if (str.charAt (i) != str2.charAt (i)) {
            uncommonChars += str2.charAt (i);
        }
    }
    System.out.println (uncommonChars);
}
----------------------------------------

public static void removeUnequalChars (String str1Input, String str2Input) {
    StringBuilder sb1 = new StringBuilder (str1Input);
    StringBuilder sb2 = new StringBuilder (str2Input);
    for (int i = 0;
    i < sb1.length (); i ++) {
        for (int j = 0;
        j < sb2.length (); j ++) {
            if (sb1.charAt (i) == sb2.charAt (j)) {
                sb1.deleteCharAt (i --);
                sb2.deleteCharAt (j --);
                break;
            }
        }
    }
    System.out.println (sb1.append (sb2));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52886933_52887104_1_11
52886933_52887184_2_14
Title: how to jump from one for loop to another for loop using label in java? 
----------------------------------------

public static void main (String [] args) {
    runing : for (int i = 1;
    i < 10; i ++) {
        System.out.print (i);
        for (int j = 1;
        j < 10; i ++) {
            if (j == 5) {
                continue runing;
            }
        }
    }
}
----------------------------------------

public static void main (String...rDX) {
    runing : for (;;) {
        for (int i = 1;
        i < 10; i ++) System.out.print (i);

        for (int i = 1;
        i < 10; i ++) {
            if (i == 5) {
                continue runing;
            }
        }
        break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52897448_52899480_24_60
52897448_52903544_26_86
Title: How to add a column to CSV which consists of data in Java 
----------------------------------------

public static void main (String [] args) throws IOException {
    String csvFile = "C:\\MyData\\Input.csv";
    String temporaryCsvFile = "C:\\MyData\\Output_temp.csv";
    String line = "";
    String cvsSplitBy = ",";
    String newColumn = "";
    List < String > aobj = new ArrayList < String > ();
    BufferedWriter writer = new BufferedWriter (new FileWriter (temporaryCsvFile));
    try (BufferedReader br = new BufferedReader (new FileReader (csvFile))) {
        while ((line = br.readLine ()) != null) {
            String newFileLine = line + cvsSplitBy + getRandomNumber ();
            writer.write (newFileLine);
            writer.newLine ();
        }
    }
    writer.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File sourceCsvFile = null;
    File finalCsvFile = null;
    sourceCsvFile = new File ("C:\\MyData\\Input.csv");
    finalCsvFile = new File ("C:\\MyData\\Input_1.csv");
    String line = "";
    String cvsSplitBy = ",";
    BufferedWriter writer = new BufferedWriter (new FileWriter (finalCsvFile));
    try (BufferedReader br = new BufferedReader (new FileReader (sourceCsvFile))) {
        line = br.readLine ();
        String newFileLine = line + cvsSplitBy + "HashValue";
        writer.write (newFileLine);
        writer.newLine ();
        while ((line = br.readLine ()) != null) {
            newFileLine = line + cvsSplitBy + getRandomNumber ();
            writer.write (newFileLine);
            writer.newLine ();
        }
    }
    writer.close ();
    if (finalCsvFile.exists () && finalCsvFile.length () > 0) {
        System.out.println ("New File with HashValue column created...");
        if (sourceCsvFile.delete ()) {
            System.out.println ("Old File deleted successfully...");
        } else {
            System.out.println ("Failed to delete the Old file...");
        }
    } else if (! finalCsvFile.exists ()) {
        System.out.println ("New File with HashValue column not created...");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52902041_52902102_1_24
52902041_52902157_1_28
Title: Stop reading standard input in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String input;
    System.out.print ("Enter some stuff: ");
    input = in.next ();
    try {
        int v = Integer.parseInt (input);
        System.out.print ("You have entered an integer: " + input);
    } catch (NumberFormatException nfe1) {
        try {
            double v = Double.parseDouble (input);
            System.out.print ("You have entered a double: " + input);
        } catch (NumberFormatException nfe2) {
            System.out.print ("You have entered a string: " + input);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String input;
    System.out.print ("Enter some stuff: ");
    if (in.hasNextInt ()) {
        System.out.println ("You have entered an integer: " + in.nextInt ());
    } else if (in.hasNextDouble ()) {
        System.out.println ("You have entered a double: " + in.nextDouble ());
    } else if (in.hasNextLine ()) {
        System.out.println ("You have entered a string: " + in.nextLine ());
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52902082_52902112_17_26
52902082_52902114_5_15
Title: Using for loop increments in a method 
----------------------------------------

public String method1 () {
    String rv = "";
    for (int i = 0;
    i <= 4; i ++) {
        Random r = new Random ();
        int number = r.nextInt ((100) - 0) * 100;
        System.out.println ("your number is " + number);
    }
    return rv;
}
----------------------------------------

public static String method1 () {
    String rv = "";
    for (int i = 0;
    i <= 4; i ++) {
        Random r = new Random ();
        int number = r.nextInt ((100) - 0) * 100;
        System.out.println ("your number is " + number);
    }
    return rv;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52902082_52902112_17_26
52902082_52902169_5_15
Title: Using for loop increments in a method 
----------------------------------------

public String method1 () {
    String rv = "";
    for (int i = 0;
    i <= 4; i ++) {
        Random r = new Random ();
        int number = r.nextInt ((100) - 0) * 100;
        System.out.println ("your number is " + number);
    }
    return rv;
}
----------------------------------------

public static String method1 () {
    String rv = "";
    Random r = new Random ();
    for (int i = 0;
    i <= 4; i ++) {
        int number = r.nextInt (100) * 100;
        System.out.println ("your number is " + number);
        rv = rv + number + ", ";
    }
    return rv;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52902082_52902114_5_15
52902082_52902169_5_15
Title: Using for loop increments in a method 
----------------------------------------

public static String method1 () {
    String rv = "";
    for (int i = 0;
    i <= 4; i ++) {
        Random r = new Random ();
        int number = r.nextInt ((100) - 0) * 100;
        System.out.println ("your number is " + number);
    }
    return rv;
}
----------------------------------------

public static String method1 () {
    String rv = "";
    Random r = new Random ();
    for (int i = 0;
    i <= 4; i ++) {
        int number = r.nextInt (100) * 100;
        System.out.println ("your number is " + number);
        rv = rv + number + ", ";
    }
    return rv;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52907991_52908068_1_14
52907991_52908358_11_19
Title: How to rework two simple java methods [SOLVED] 
----------------------------------------

public int getLeastRain () {
    double leastRain = rainfallStats [0];
    int index = 0;
    for (int i = 1;
    i < rainfallStats.length; i ++) {
        if (rainfallStats [i] < leastRain) {
            leastRain = rainfallStats [i];
            index = i;
        }
    }
    return index;
}
----------------------------------------

public double getLeastRain () {
    double leastRain = rainfallStats [0];
    for (int i = 0;
    i < rainfallStats.length; i ++) {
        if (rainfallStats [i] < leastRain) {
            leastRain = rainfallStats [i];
        }
    }
    return leastRain;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52908176_52908397_3_9
52908176_52915188_9_17
Title: Sum of 2 numbers being prime 
----------------------------------------

private static boolean isPrime (int n) {
    if (n % 2 == 0) return false;

    for (int i = 3;
    i * i <= n; i += 2) {
        if (n % i == 0) return false;

    }
    return true;
}
----------------------------------------

private static boolean isPrime (int number) {
    if (number % 2 == 0) {
        return false;
    }
    for (int i = 3;
    i * i <= number; i += 2) {
        if (number % i == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52908217_52908306_1_15
52908217_52913728_1_17
Title: How to sort this array into ascending order? 
----------------------------------------

public static void main (String [] args) {
    SecureRandom random = new SecureRandom ();
    double sum = 0;
    int amount = 100;
    int upperBound = 100;
    int [] array = new int [amount];
    for (int i = 0;
    i < amount; i ++) {
        array [i] = random.nextInt (upperBound) + 1;
        sum += array [i];
    }
    Arrays.sort (array);
    System.out.println (Arrays.toString (array));
    System.out.println ("Your average is: " + (sum / amount));
    System.out.println ("Your sum is: " + sum);
}
----------------------------------------

public static void main (String [] args) {
    final int amount = 100;
    Random random = new SecureRandom ();
    Queue < Integer > queue = new PriorityQueue < > (amount, Comparator.naturalOrder ());
    int sum = 0;
    for (int i = 0;
    i < amount; i ++) {
        int val = random.nextInt (100) + 1;
        sum += val;
        queue.add (val);
    }
    System.out.println (Arrays.toString (queue.toArray ()));
    System.out.println ("Your average is: " + (double) sum / amount);
    System.out.println ("Your sum is: " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52909669_52909722_1_12
52909669_52909809_1_17
Title: How to make null knowing link 
----------------------------------------

public void deleteEvent (Date date) {
    Event [] list = new Event [events.length - 1];
    int j = 0;
    for (int i = 0;
    i < events.length; i ++) {
        if (events [i] != null) {
            if (events [i].getDate ().equals (date)) continue;

            list [j] = events [i];
            j ++;
        }
    }
    events = list;
}
----------------------------------------

public void deleteEvent (Date date) {
    Event foundEvent = findEvent (date);
    if (foundEvent == null) {
        return;
    }
    Event [] list = new Event [events.length - 1];
    int j = 0;
    for (int i = 0;
    i < events.length; i ++) {
        if (! events [i].getDate ().equals (foundEvent.getDate ())) {
            list [j] = events [I];
            j ++;
        }
    }
    events = list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52909693_52909834_1_15
52909693_52909862_1_16
Title: How to remove an object from an array of objects in java 
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    int size = 0;
    for (int i = 0;
    i < exams.length; i ++) {
        if (exams [i].getGrade () != 1) size ++;

    }
    Exam [] tmp = new Exam [size];
    size = 0;
    for (int i = 0;
    i < exams.length; i ++) {
        if (exams [i].getGrade () != 1) tmp [size ++] = exams [i];

    }
    return tmp;
}
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    int size = 0;
    for (int i = 0;
    i < exams.length; i ++) if (exam [i].getGrades != 1) size ++;

    Exam [] filteredExams = new Exam [size];
    size = - 1;
    for (int i = 0;
    i < exams.length; i ++) if (exam [i].getGrades != 1) filteredExams [++ size] = exam [i];

    return filteredExams;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52909693_52909834_1_15
52909693_52910431_1_13
Title: How to remove an object from an array of objects in java 
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    int size = 0;
    for (int i = 0;
    i < exams.length; i ++) {
        if (exams [i].getGrade () != 1) size ++;

    }
    Exam [] tmp = new Exam [size];
    size = 0;
    for (int i = 0;
    i < exams.length; i ++) {
        if (exams [i].getGrade () != 1) tmp [size ++] = exams [i];

    }
    return tmp;
}
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    Exam [] passedExams = new Exam [exams.length];
    int size = 0;
    for (Exam exam : exams) {
        if (exam.getGrade () != 1) {
            passedExams [size ++] = exam;
        }
    }
    return size == exams.length ? exams : Arrays.copyOf (passedExams, size);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52909693_52909862_1_16
52909693_52910431_1_13
Title: How to remove an object from an array of objects in java 
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    int size = 0;
    for (int i = 0;
    i < exams.length; i ++) if (exam [i].getGrades != 1) size ++;

    Exam [] filteredExams = new Exam [size];
    size = - 1;
    for (int i = 0;
    i < exams.length; i ++) if (exam [i].getGrades != 1) filteredExams [++ size] = exam [i];

    return filteredExams;
}
----------------------------------------

private Exam [] filterPassedExams (Exam [] exams) {
    Exam [] passedExams = new Exam [exams.length];
    int size = 0;
    for (Exam exam : exams) {
        if (exam.getGrade () != 1) {
            passedExams [size ++] = exam;
        }
    }
    return size == exams.length ? exams : Arrays.copyOf (passedExams, size);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52912138_52912276_7_25
52912138_52912282_1_14
Title: Scanning integer and string from file in Java 
----------------------------------------

public static void main (String [] args) {
    BufferedReader reader;
    try {
        reader = new BufferedReader (new FileReader ("C://Test/myfile.txt"));
        String line = reader.readLine ();
        while (line != null) {
            if (line != null && line.contains (",")) {
                String [] data = line.split (",");
                System.out.println ("Fruit:: " + data [0] + " Count:: " + Integer.parseInt (data [1]));
            }
            line = reader.readLine ();
        }
        reader.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "Bananas,4\n" + "Apples,5\n" + "Strawberry,8\n";
    try (Scanner sc = new Scanner (str).useDelimiter (",|\n")) {
        while (sc.hasNext ()) {
            String fruit = sc.next ();
            int price = sc.nextInt ();
            System.out.printf ("%s,%d\n", fruit, price);
        }
    } catch (Exception e) {
        e.printStackTrace (System.out);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_47143905_1_13
5291503_47628721_1_25
Title: How to create method for age calculation method in android 
----------------------------------------

Integer getAge (Integer year, Integer month, Integer day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (month == (today.get (Calendar.MONTH) + 1) && day > today.get (Calendar.DAY_OF_MONTH)) {
        age --;
    }
    return age;
}
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    today.set (today.get (Calendar.YEAR), today.get (Calendar.MONTH) + 1, today.get (Calendar.DATE));
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_47143905_1_13
5291503_5291542_1_19
Title: How to create method for age calculation method in android 
----------------------------------------

Integer getAge (Integer year, Integer month, Integer day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (month == (today.get (Calendar.MONTH) + 1) && day > today.get (Calendar.DAY_OF_MONTH)) {
        age --;
    }
    return age;
}
----------------------------------------

public int getAge (int _year, int _month, int _day) {
    GregorianCalendar cal = new GregorianCalendar ();
    int y, m, d, a;
    y = cal.get (Calendar.YEAR);
    m = cal.get (Calendar.MONTH);
    d = cal.get (Calendar.DAY_OF_MONTH);
    cal.set (_year, _month, _day);
    a = y - cal.get (Calendar.YEAR);
    if ((m < cal.get (Calendar.MONTH)) || ((m == cal.get (Calendar.MONTH)) && (d < cal.get (Calendar.DAY_OF_MONTH)))) {
        -- a;
    }
    if (a < 0) throw new IllegalArgumentException ("Age < 0");

    return a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_47143905_1_13
5291503_5307965_8_24
Title: How to create method for age calculation method in android 
----------------------------------------

Integer getAge (Integer year, Integer month, Integer day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (month == (today.get (Calendar.MONTH) + 1) && day > today.get (Calendar.DAY_OF_MONTH)) {
        age --;
    }
    return age;
}
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_47628721_1_25
5291503_5291542_1_19
Title: How to create method for age calculation method in android 
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    today.set (today.get (Calendar.YEAR), today.get (Calendar.MONTH) + 1, today.get (Calendar.DATE));
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------

public int getAge (int _year, int _month, int _day) {
    GregorianCalendar cal = new GregorianCalendar ();
    int y, m, d, a;
    y = cal.get (Calendar.YEAR);
    m = cal.get (Calendar.MONTH);
    d = cal.get (Calendar.DAY_OF_MONTH);
    cal.set (_year, _month, _day);
    a = y - cal.get (Calendar.YEAR);
    if ((m < cal.get (Calendar.MONTH)) || ((m == cal.get (Calendar.MONTH)) && (d < cal.get (Calendar.DAY_OF_MONTH)))) {
        -- a;
    }
    if (a < 0) throw new IllegalArgumentException ("Age < 0");

    return a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_47628721_1_25
5291503_5307965_8_24
Title: How to create method for age calculation method in android 
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    today.set (today.get (Calendar.YEAR), today.get (Calendar.MONTH) + 1, today.get (Calendar.DATE));
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5291503_5291542_1_19
5291503_5307965_8_24
Title: How to create method for age calculation method in android 
----------------------------------------

public int getAge (int _year, int _month, int _day) {
    GregorianCalendar cal = new GregorianCalendar ();
    int y, m, d, a;
    y = cal.get (Calendar.YEAR);
    m = cal.get (Calendar.MONTH);
    d = cal.get (Calendar.DAY_OF_MONTH);
    cal.set (_year, _month, _day);
    a = y - cal.get (Calendar.YEAR);
    if ((m < cal.get (Calendar.MONTH)) || ((m == cal.get (Calendar.MONTH)) && (d < cal.get (Calendar.DAY_OF_MONTH)))) {
        -- a;
    }
    if (a < 0) throw new IllegalArgumentException ("Age < 0");

    return a;
}
----------------------------------------

private String getAge (int year, int month, int day) {
    Calendar dob = Calendar.getInstance ();
    Calendar today = Calendar.getInstance ();
    dob.set (year, month, day);
    int age = today.get (Calendar.YEAR) - dob.get (Calendar.YEAR);
    if (today.get (Calendar.DAY_OF_YEAR) < dob.get (Calendar.DAY_OF_YEAR)) {
        age --;
    }
    Integer ageInt = new Integer (age);
    String ageS = ageInt.toString ();
    return ageS;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52917781_52917833_7_15
52917781_52917918_10_17
Title: Sum of the first and last array elements in Java 
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [10];
    Random rand = new Random ();
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = rand.nextInt (50);
        System.out.println (array [i]);
    }
    System.out.println (sum (array));
}
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [10];
    Random rand = new Random ();
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = rand.nextInt (50);
    }
    System.out.println (sum (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52919114_52924081_1_17
52919114_52939265_1_30
Title: Swapping adjacent elements of a linked list algorithm 
----------------------------------------

public Node s (Node head) {
    if (head == null || head.next == null) {
        return head;
    }
    Node temp = head;
    while (temp != null && temp.next != null) {
        int k = temp.data;
        temp.data = temp.next.data;
        temp.next.data = k;
        temp = temp.next.next;
    }
    return head;
}
----------------------------------------

public Node s (Node head) {
    if (head == null || head == null) {
        return head;
    }
    Node firstNode = head;
    Node parentNode = null;
    while (firstNode != null && firstNode.next != null) {
        Node secondNode = firstNode.next;
        Node secondNodeSuccessor = secondNode.next;
        secondNode.next = firstNode;
        firstNode.next = secondNodeSuccessor;
        if (parentNode != null) {
            parentNode.next = secondNode;
        }
        parentNode = firstNode;
        firstNode = firstNode.next;
    }
    return head.next;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52920542_52920704_41_51
52920542_52920704_53_61
Title: Space between inputs doesn't give exception on array index? 
----------------------------------------

public static int average (int [] array, int n) {
    int sum = 0;
    for (int i = 0;
    i < n; i ++) {
        int holdNumber = array [i];
        sum += holdNumber;
    }
    int average = sum / n;
    return average;
}
----------------------------------------

public static double average (double [] array, int n) {
    double sum = 0;
    for (int i = 0;
    i < n; i ++) {
        double holdNumber = array [i];
        sum += holdNumber;
    }
    double average = sum / n;
    return average;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52922556_52922673_1_11
52922556_52922772_20_38
Title: How to return the largest integer in an Array that has 10 random integers in it? 
----------------------------------------

public static void main (String [] args) {
    int [] count = new int [10];
    Random r = new Random (7);
    int x = 0;
    for (int i = 0;
    i < count.length; i ++) {
        x = r.nextInt ();
        count [i] = x;
    }
    System.out.println ("Max Number :" + maxNumber (count));
}
----------------------------------------

public static void main (String [] args) {
    int numberofslots = 10;
    int [] myIntArray = new int [numberofslots];
    Random r = new Random (7);
    for (int i = 0;
    i < myIntArray.length; i ++) {
        int x = r.nextInt ();
        myIntArray [i] = x;
    }
    int result = findMax (myIntArray);
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52922556_52922673_1_11
52922556_52923689_1_13
Title: How to return the largest integer in an Array that has 10 random integers in it? 
----------------------------------------

public static void main (String [] args) {
    int [] count = new int [10];
    Random r = new Random (7);
    int x = 0;
    for (int i = 0;
    i < count.length; i ++) {
        x = r.nextInt ();
        count [i] = x;
    }
    System.out.println ("Max Number :" + maxNumber (count));
}
----------------------------------------

public static void main (String [] args) {
    Integer [] randomArray = new Integer [10];
    randomArray [0] = (int) (Math.random () * 100);
    int largestNum = randomArray [0];
    for (int i = 1;
    i < 10; i ++) {
        randomArray [i] = (int) (Math.random () * 100);
        if (randomArray [i] > largestNum) {
            largestNum = randomArray [i];
        }
    }
    System.out.println (Arrays.asList (randomArray));
    System.out.println ("Largest Number :: " + largestNum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52922556_52922772_20_38
52922556_52923689_1_13
Title: How to return the largest integer in an Array that has 10 random integers in it? 
----------------------------------------

public static void main (String [] args) {
    int numberofslots = 10;
    int [] myIntArray = new int [numberofslots];
    Random r = new Random (7);
    for (int i = 0;
    i < myIntArray.length; i ++) {
        int x = r.nextInt ();
        myIntArray [i] = x;
    }
    int result = findMax (myIntArray);
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    Integer [] randomArray = new Integer [10];
    randomArray [0] = (int) (Math.random () * 100);
    int largestNum = randomArray [0];
    for (int i = 1;
    i < 10; i ++) {
        randomArray [i] = (int) (Math.random () * 100);
        if (randomArray [i] > largestNum) {
            largestNum = randomArray [i];
        }
    }
    System.out.println (Arrays.asList (randomArray));
    System.out.println ("Largest Number :: " + largestNum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52932509_52932627_1_14
52932509_52934475_5_29
Title: What's wrong in my code to find character frequency? 
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    int j = 0, i = 0, counter = 0;
    for (i = 1; i < c.length; i ++) {
        if (c [i] != c [j]) {
            continue;
        } else {
            counter ++;
        }
    }
    System.out.println ("The letter " + c [j] + " appears " + counter + " times");
}
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    ArrayList < Character > arrayList;
    arrayList = new ArrayList < Character > ();
    int j = 0, i = 0, counter = 0;
    for (i = 0; i < c.length; i ++) {
        if (! arrayList.contains (c [i])) {
            arrayList.add (c [i]);
            for (j = i; j < c.length; j ++) {
                if (c [i] == c [j]) {
                    counter ++;
                }
            }
            System.out.println ("The letter " + c [i] + " appears " + counter + " times");
            counter = 0;
        } else {
            continue;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52932509_52932627_1_14
52932509_52934533_3_17
Title: What's wrong in my code to find character frequency? 
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    int j = 0, i = 0, counter = 0;
    for (i = 1; i < c.length; i ++) {
        if (c [i] != c [j]) {
            continue;
        } else {
            counter ++;
        }
    }
    System.out.println ("The letter " + c [j] + " appears " + counter + " times");
}
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    int j = 0, i = 0, counter = 0;
    for (i = 0; i < c.length; i ++) {
        for (j = i; j < c.length; j ++) {
            if (c [i] == c [j]) {
                counter ++;
            }
        }
        System.out.println ("The letter " + c [i] + " appears " + counter + " times");
        counter = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52932509_52934475_5_29
52932509_52934533_3_17
Title: What's wrong in my code to find character frequency? 
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    ArrayList < Character > arrayList;
    arrayList = new ArrayList < Character > ();
    int j = 0, i = 0, counter = 0;
    for (i = 0; i < c.length; i ++) {
        if (! arrayList.contains (c [i])) {
            arrayList.add (c [i]);
            for (j = i; j < c.length; j ++) {
                if (c [i] == c [j]) {
                    counter ++;
                }
            }
            System.out.println ("The letter " + c [i] + " appears " + counter + " times");
            counter = 0;
        } else {
            continue;
        }
    }
}
----------------------------------------

public static void solution (String s) {
    char [] c = s.toCharArray ();
    int j = 0, i = 0, counter = 0;
    for (i = 0; i < c.length; i ++) {
        for (j = i; j < c.length; j ++) {
            if (c [i] == c [j]) {
                counter ++;
            }
        }
        System.out.println ("The letter " + c [i] + " appears " + counter + " times");
        counter = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52937086_52937239_4_19
52937086_52937240_2_14
Title: "Given a string return a string where for every char is the original there are two chars?" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a string ");
    String str = input.nextLine ();
    String new_str = "";
    String result = "";
    for (int i = str.length () - 1;
    i >= 0; i --) {
        result += str.substring (i, i + 1) + str.substring (i, i + 1);
        String result2 = null;
        result2 = result;
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a string ");
    StringBuilder str = new StringBuilder (input.nextLine ());
    StringBuilder result = new StringBuilder ();
    for (int i = str.length () - 1;
    i >= 0; i --) {
        result.append (str.charAt (i));
        result.append (str.charAt (i));
    }
    System.out.println (result.toString ());
}
----------------------------------------
