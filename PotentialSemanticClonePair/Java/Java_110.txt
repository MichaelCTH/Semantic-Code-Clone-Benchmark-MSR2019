$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_39565149_1_30
4528016_41174036_1_18
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    Stack stack = new Stack ();
    int count = 1;
    int value = 0;
    int temp = 0;
    if (nums.length < 1) {
        return value;
    }
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j >= i; j --) {
            if (nums [i] == nums [j]) {
                count = (j - i) + 1;
                stack.push (count);
                count = 1;
                break;
            }
        }
    }
    if (stack.peek () != null) {
        while (stack.size () != 0) {
            temp = (Integer) stack.pop ();
            if (value <= temp) {
                value = temp;
            } else {
                value = value;
            }
        }
    }
    return value;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int totalspan = 0;
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j > i - 1; j --) {
            if (nums [i] == nums [j]) {
                span = j - i + 1;
                if (span > totalspan) totalspan = span;

                break;
            }
        }
    }
    return totalspan;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_39565149_1_30
4528016_42051932_1_10
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    Stack stack = new Stack ();
    int count = 1;
    int value = 0;
    int temp = 0;
    if (nums.length < 1) {
        return value;
    }
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j >= i; j --) {
            if (nums [i] == nums [j]) {
                count = (j - i) + 1;
                stack.push (count);
                count = 1;
                break;
            }
        }
    }
    if (stack.peek () != null) {
        while (stack.size () != 0) {
            temp = (Integer) stack.pop ();
            if (value <= temp) {
                value = temp;
            } else {
                value = value;
            }
        }
    }
    return value;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    Map < Integer, Integer > first = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (! first.containsKey (nums [i])) first.put (nums [i], i);

        span = Math.max (span, (i - first.get (nums [i])) + 1);
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_39565149_1_30
4528016_47889950_1_17
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    Stack stack = new Stack ();
    int count = 1;
    int value = 0;
    int temp = 0;
    if (nums.length < 1) {
        return value;
    }
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j >= i; j --) {
            if (nums [i] == nums [j]) {
                count = (j - i) + 1;
                stack.push (count);
                count = 1;
                break;
            }
        }
    }
    if (stack.peek () != null) {
        while (stack.size () != 0) {
            temp = (Integer) stack.pop ();
            if (value <= temp) {
                value = temp;
            } else {
                value = value;
            }
        }
    }
    return value;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int result = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int item = nums [i];
        int span = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (nums [j] == item) {
                span = i - j + 1;
                break;
            }
        }
        if (span > result) {
            result = span;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_39565149_1_30
4528016_48847206_1_13
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    Stack stack = new Stack ();
    int count = 1;
    int value = 0;
    int temp = 0;
    if (nums.length < 1) {
        return value;
    }
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j >= i; j --) {
            if (nums [i] == nums [j]) {
                count = (j - i) + 1;
                stack.push (count);
                count = 1;
                break;
            }
        }
    }
    if (stack.peek () != null) {
        while (stack.size () != 0) {
            temp = (Integer) stack.pop ();
            if (value <= temp) {
                value = temp;
            } else {
                value = value;
            }
        }
    }
    return value;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i;
        j < nums.length; j ++) {
            if (nums [i] == nums [j]) {
                if (span < (j - i + 1)) {
                    span = j - i + 1;
                }
            }
        }
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_41174036_1_18
4528016_42051932_1_10
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int totalspan = 0;
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j > i - 1; j --) {
            if (nums [i] == nums [j]) {
                span = j - i + 1;
                if (span > totalspan) totalspan = span;

                break;
            }
        }
    }
    return totalspan;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    Map < Integer, Integer > first = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (! first.containsKey (nums [i])) first.put (nums [i], i);

        span = Math.max (span, (i - first.get (nums [i])) + 1);
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_41174036_1_18
4528016_47889950_1_17
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int totalspan = 0;
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j > i - 1; j --) {
            if (nums [i] == nums [j]) {
                span = j - i + 1;
                if (span > totalspan) totalspan = span;

                break;
            }
        }
    }
    return totalspan;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int result = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int item = nums [i];
        int span = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (nums [j] == item) {
                span = i - j + 1;
                break;
            }
        }
        if (span > result) {
            result = span;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_41174036_1_18
4528016_48847206_1_13
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int totalspan = 0;
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = nums.length - 1;
        j > i - 1; j --) {
            if (nums [i] == nums [j]) {
                span = j - i + 1;
                if (span > totalspan) totalspan = span;

                break;
            }
        }
    }
    return totalspan;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i;
        j < nums.length; j ++) {
            if (nums [i] == nums [j]) {
                if (span < (j - i + 1)) {
                    span = j - i + 1;
                }
            }
        }
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_42051932_1_10
4528016_47889950_1_17
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    Map < Integer, Integer > first = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (! first.containsKey (nums [i])) first.put (nums [i], i);

        span = Math.max (span, (i - first.get (nums [i])) + 1);
    }
    return span;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int result = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int item = nums [i];
        int span = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (nums [j] == item) {
                span = i - j + 1;
                break;
            }
        }
        if (span > result) {
            result = span;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_42051932_1_10
4528016_48847206_1_13
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    Map < Integer, Integer > first = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (! first.containsKey (nums [i])) first.put (nums [i], i);

        span = Math.max (span, (i - first.get (nums [i])) + 1);
    }
    return span;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i;
        j < nums.length; j ++) {
            if (nums [i] == nums [j]) {
                if (span < (j - i + 1)) {
                    span = j - i + 1;
                }
            }
        }
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4528016_47889950_1_17
4528016_48847206_1_13
Title: Find the largest span between the same number in an array 
----------------------------------------

public int maxSpan (int [] nums) {
    int result = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int item = nums [i];
        int span = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (nums [j] == item) {
                span = i - j + 1;
                break;
            }
        }
        if (span > result) {
            result = span;
        }
    }
    return result;
}
----------------------------------------

public int maxSpan (int [] nums) {
    int span = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i;
        j < nums.length; j ++) {
            if (nums [i] == nums [j]) {
                if (span < (j - i + 1)) {
                    span = j - i + 1;
                }
            }
        }
    }
    return span;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45288482_45402369_148_165
45288482_45402369_182_218
Title: Client and Server in same app to send and then receive Bytes 
----------------------------------------

public void run () {
    try {
        InetAddress serverAddr = InetAddress.getByName (SERVER_IP);
        socket = new Socket (serverAddr, SERVERPORT);
        if (socket.isConnected ()) {
            Log.d (TAG, "in ClientThread - socket connected");
            connectedSocket = true;
        } else {
            Log.d (TAG, "in ClientThread - socket not connected");
            connectedSocket = false;
        }
    } catch (UnknownHostException e1) {
        e1.printStackTrace ();
    } catch (IOException e1) {
        e1.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        if (socketLocal.isConnected ()) {
            Log.d (TAG, "In receiveData, Socket connected");
            in = new DataInputStream (socketLocal.getInputStream ());
        }
    } catch (Exception e) {
        Log.d (TAG, "in receiveData - run exception - " + e.toString ());
    }
    while (! exit) {
        try {
            if (socketLocal.isConnected ()) {
                if (in.available () > 0) {
                    bytes = in.read (buffer);
                    Log.d (TAG, "Bytes Read = " + Integer.toString (bytes));
                    System.arraycopy (buffer, 0, fullBuffer, bytesCount, bytes);
                    bytesCount = bytesCount + bytes;
                    if (bytesCount >= 7) {
                        h.obtainMessage (NOW_DATA_RECEIVED, bytesCount, - 1, fullBuffer).sendToTarget ();
                        Log.d (TAG, "In handler, 7 bytes Message sent");
                        bytesCount = 0;
                    } else if (bytesCount == 1) {
                        h.obtainMessage (ONE_BYTE_RECEIVED, bytesCount, - 1, fullBuffer).sendToTarget ();
                        Log.d (TAG, "In handler, 1 byte message sent");
                        bytesCount = 0;
                    }

                }
            } else {
                break;
            }
        } catch (Exception e) {
            Log.d (TAG, "Read Error - " + e.toString ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45295357_45295407_13_25
45295357_45295473_13_25
Title: New Activity not responding 
----------------------------------------

public void clickSend () {
    b = (Button) findViewById (R.id.send);
    b.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Intent intent = new Intent (createMessage.this, receiveMessage.class);
            EditText editText = (EditText) findViewById (R.id.typeMessage);
            String message = editText.getText ().toString ();
            intent.putExtra (EXTRA_MESSAGE, message);
            startActivity (intent);
        }}

    );
}
----------------------------------------

public void clickSend () {
    b = (Button) findViewById (R.id.send);
    editText = (EditText) findViewById (R.id.typeMessage);
    b.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            String message = editText.getText ().toString ();
            Intent intent = new Intent (createMessage.this, receiveMessage.class);
            intent.putExtra (EXTRA_MESSAGE, message);
            startActivity (intent);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45295357_45295411_7_22
45295357_45295471_6_22
Title: New Activity not responding 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_create_message);
    b = (Button) findViewById (R.id.send);
    b.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Intent intent = new Intent (createMessage.this, receiveMessage.class);
            EditText editText = (EditText) findViewById (R.id.typeMessage);
            String message = editText.getText ().toString ();
            intent.putExtra (EXTRA_MESSAGE, message);
            startActivity (intent);
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_create_message);
    editText = (EditText) findViewById (R.id.typeMessage);
    b = (Button) findViewById (R.id.send);
    b.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Intent intent = new Intent (createMessage.this, receiveMessage.class);
            String message = editText.getText ().toString ();
            intent.putExtra (EXTRA_MESSAGE, message);
            startActivity (intent);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4530449_11572927_1_7
4530449_15175245_1_16
Title: Finding a String in another String Using Recursion Mechanism in Core Java 
----------------------------------------

public boolean strCopies (String str, String sub, int n) {
    if (n == 0) return true;

    if (str.length () == 0) return false;

    if (str.length () < sub.length ()) return false;

    if (str.startsWith (sub)) return strCount (str.substring (1), sub, n, 1);

    return strCopies (str.substring (1), sub, n);
}
----------------------------------------

public boolean strCopies (String str, String sub, int n) {
    if (str == null || str.equals ("") || str.length () < sub.length ()) if (n == 0) return true;
    else return false;

    int index = str.indexOf (sub);
    if (index != - 1) return false || strCopies (str.substring (index + 1), sub, -- n);
    else return false || strCopies ("", sub, n);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45313762_45806280_111_147
45313762_45806280_278_299
Title: Can a custom class loader be created for Java to conditionally load a class from JAR or from CLASS_PATH? 
----------------------------------------

public final boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof SimpleModule)) {
        return false;
    }
    SimpleModule other = (SimpleModule) obj;
    if (name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (! name.equals (other.name)) {
        return false;
    }

    if (resourceNameMatcher == null) {
        if (other.resourceNameMatcher != null) {
            return false;
        }
    } else if (! resourceNameMatcher.equals (other.resourceNameMatcher)) {
        return false;
    }

    if (version == null) {
        if (other.version != null) {
            return false;
        }
    } else if (! version.equals (other.version)) {
        return false;
    }

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof ApplicationKey)) {
        return false;
    }
    ApplicationKey other = (ApplicationKey) obj;
    Application thisApp = getApplication (), othersApp = other.getApplication ();
    if (thisApp == null) {
        if (othersApp != null) {
            return false;
        }
    } else if (! thisApp.equals (othersApp)) {
        return false;
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45313762_45806280_111_147
45313762_45806280_355_375
Title: Can a custom class loader be created for Java to conditionally load a class from JAR or from CLASS_PATH? 
----------------------------------------

public final boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof SimpleModule)) {
        return false;
    }
    SimpleModule other = (SimpleModule) obj;
    if (name == null) {
        if (other.name != null) {
            return false;
        }
    } else if (! name.equals (other.name)) {
        return false;
    }

    if (resourceNameMatcher == null) {
        if (other.resourceNameMatcher != null) {
            return false;
        }
    } else if (! resourceNameMatcher.equals (other.resourceNameMatcher)) {
        return false;
    }

    if (version == null) {
        if (other.version != null) {
            return false;
        }
    } else if (! version.equals (other.version)) {
        return false;
    }

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof Value)) {
        return false;
    }
    Value other = (Value) obj;
    if (searchPath == null) {
        if (other.searchPath != null) {
            return false;
        }
    } else if (! searchPath.equals (other.searchPath)) {
        return false;
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45313762_45806280_222_254
45313762_45806280_278_299
Title: Can a custom class loader be created for Java to conditionally load a class from JAR or from CLASS_PATH? 
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof LibraryKey)) {
        return false;
    }
    LibraryKey other = (LibraryKey) obj;
    Library thisLib = getLibrary (), othersLib = other.getLibrary ();
    if (thisLib == null) {
        if (othersLib != null) {
            return false;
        }
    } else if (! thisLib.equals (othersLib)) {
        return false;
    }

    if (mode != other.mode) {
        return false;
    }
    if (app == null) {
        if (other.app != null) {
            return false;
        }
    } else if (! app.equals (other.app)) {
        return false;
    }

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof ApplicationKey)) {
        return false;
    }
    ApplicationKey other = (ApplicationKey) obj;
    Application thisApp = getApplication (), othersApp = other.getApplication ();
    if (thisApp == null) {
        if (othersApp != null) {
            return false;
        }
    } else if (! thisApp.equals (othersApp)) {
        return false;
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45313762_45806280_222_254
45313762_45806280_355_375
Title: Can a custom class loader be created for Java to conditionally load a class from JAR or from CLASS_PATH? 
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof LibraryKey)) {
        return false;
    }
    LibraryKey other = (LibraryKey) obj;
    Library thisLib = getLibrary (), othersLib = other.getLibrary ();
    if (thisLib == null) {
        if (othersLib != null) {
            return false;
        }
    } else if (! thisLib.equals (othersLib)) {
        return false;
    }

    if (mode != other.mode) {
        return false;
    }
    if (app == null) {
        if (other.app != null) {
            return false;
        }
    } else if (! app.equals (other.app)) {
        return false;
    }

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null) {
        return false;
    }
    if (! (obj instanceof Value)) {
        return false;
    }
    Value other = (Value) obj;
    if (searchPath == null) {
        if (other.searchPath != null) {
            return false;
        }
    } else if (! searchPath.equals (other.searchPath)) {
        return false;
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45315279_45315762_16_26
45315279_45315762_1_14
Title: Function to retrieve the top-most annotation from the call stack 
----------------------------------------

static < T extends Annotation > T seekAnnotation (Class < T > annotationClass, StackTraceElement ste) {
    T annotation = null;
    try {
        Class < ? > claz = Class.forName (ste.getClassName ());
        Method method = claz.getDeclaredMethod (ste.getMethodName ());
        annotation = method.getAnnotation (annotationClass);
    } catch (Exception e) {
    }
    return annotation;
}
----------------------------------------

static < T extends Annotation > T seekAnnotation (Class < T > annotationClass) {
    T annotation = null;
    try {
        for (StackTraceElement ste : Thread.currentThread ().getStackTrace ()) {
            T found = seekAnnotation (annotationClass, ste);
            if (found != null) {
                annotation = found;
            }
        }
    } catch (Exception e) {
    }
    return annotation;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45319624_45320230_11_25
45319624_45321121_3_14
Title: Addition in Java 8 using BinaryOperator 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double mealCost = scan.nextDouble ();
    int tipPercent = scan.nextInt ();
    int taxPercent = scan.nextInt ();
    scan.close ();
    Map < Double, Double > map = new HashMap < > ();
    map.put (mealCost, (double) taxPercent + (double) tipPercent);
    BinaryOperator < Double > opPercent = (t1, t2) -> (t1 * t2) / 100;
    BinaryOperator < Double > opSum = (t1, t2) -> (t1 + t2);
    calculation (opPercent, map);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double mealCost = scan.nextDouble ();
    int tipPercent = scan.nextInt ();
    int taxPercent = scan.nextInt ();
    scan.close ();
    TriFunction < Double, Integer, Integer, Double > calcCost = (cost, tipPct, taxPcnt) -> (cost + (cost * tipPct / 100) + (cost * taxPcnt / 100));
    Double totalBill = calculation (calcCost, mealCost, tipPercent, taxPercent);
    System.out.println (totalBill);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45319862_45319963_1_12
45319862_45320517_5_14
Title: Update Specific item in recyclerview 
----------------------------------------

public ViewHolder (View view) {
    button = (Button) view.findViewById (R.id.yourButtonId);
    button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            img.setImageResource (R.drawable.ic_ok);
        }}

    );
}
----------------------------------------

public ViewHolder (View view) {
    button = (Button) view.findViewById (R.id.ButtonId);
    img = (ImageView) view.findViewById (R.id.ImageViewId);
    button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            img.setImageResource (R.drawable.ic_ok);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45319862_45319973_1_10
45319862_45321553_19_54
Title: Update Specific item in recyclerview 
----------------------------------------

@Override
public void onBindViewHolder (ViewHolder versionViewHolder, int i) {
    versionViewHolder.button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            img.setImageResource (R.drawable.ic_ok);
        }}

    );
}
----------------------------------------

public void onBindViewHolder (final TransactionViewHolder holder, int position) {
    final Order model = (Order) orders.get (position);
    holder.date.setText (model.getOrder_date ());
    holder.deliveryCode.setText (model.getDelivery_code ());
    holder.totalCost.setText ("Tsh " + model.getTotalCost ());
    if (model.getStatus () == - 1) {
        holder.status.setText ("Please wait, Your order has been PLACED");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.ONE);
        holder.totalCost.setText ("Not Available");
        holder.deliveryCode.setText (" - ");
        holder.viewDetailsButton.setText (model.getOrder_summary ());
    } else if (model.getStatus () == 0) {
        holder.status.setText ("Your order is PENDING");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.ONE);
    } else if (model.getStatus () == 1) {
        holder.status.setText ("Your order is on Transit");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.TWO);
    } else if (model.getStatus () == 2) {
        holder.status.setText ("Your order was Delivered");
        holder.stateProgress.setAllStatesCompleted (true);
    } else {
        holder.status.setText ("This order was canceled");
    }

    if (model.getStatus () != - 1) {
        holder.viewDetailsButton.setOnClickListener (new View.OnClickListener () {
            @Override
            public void onClick (View v) {
                Intent intent = new Intent (context, OrderDetailsActivity.class);
                intent.putExtra ("order_id", model.getId ());
                context.startActivity (intent);
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45319862_45319973_1_10
45319862_45324590_23_34
Title: Update Specific item in recyclerview 
----------------------------------------

@Override
public void onBindViewHolder (ViewHolder versionViewHolder, int i) {
    versionViewHolder.button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            img.setImageResource (R.drawable.ic_ok);
        }}

    );
}
----------------------------------------

public void onBindViewHolder (final VersionViewHolder versionViewHolder, final int i) {
    final VersionViewHolder v = versionViewHolder;
    viewHolder.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            if (onDashBoardClickListener != null) onDashBoardClickListener.onClick (viewHolder.getAdapterPosition (), value);

        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45319862_45321553_19_54
45319862_45324590_23_34
Title: Update Specific item in recyclerview 
----------------------------------------

public void onBindViewHolder (final TransactionViewHolder holder, int position) {
    final Order model = (Order) orders.get (position);
    holder.date.setText (model.getOrder_date ());
    holder.deliveryCode.setText (model.getDelivery_code ());
    holder.totalCost.setText ("Tsh " + model.getTotalCost ());
    if (model.getStatus () == - 1) {
        holder.status.setText ("Please wait, Your order has been PLACED");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.ONE);
        holder.totalCost.setText ("Not Available");
        holder.deliveryCode.setText (" - ");
        holder.viewDetailsButton.setText (model.getOrder_summary ());
    } else if (model.getStatus () == 0) {
        holder.status.setText ("Your order is PENDING");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.ONE);
    } else if (model.getStatus () == 1) {
        holder.status.setText ("Your order is on Transit");
        holder.stateProgress.setCurrentStateNumber (StateProgressBar.StateNumber.TWO);
    } else if (model.getStatus () == 2) {
        holder.status.setText ("Your order was Delivered");
        holder.stateProgress.setAllStatesCompleted (true);
    } else {
        holder.status.setText ("This order was canceled");
    }

    if (model.getStatus () != - 1) {
        holder.viewDetailsButton.setOnClickListener (new View.OnClickListener () {
            @Override
            public void onClick (View v) {
                Intent intent = new Intent (context, OrderDetailsActivity.class);
                intent.putExtra ("order_id", model.getId ());
                context.startActivity (intent);
            }}

        );
    }
}
----------------------------------------

public void onBindViewHolder (final VersionViewHolder versionViewHolder, final int i) {
    final VersionViewHolder v = versionViewHolder;
    viewHolder.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            if (onDashBoardClickListener != null) onDashBoardClickListener.onClick (viewHolder.getAdapterPosition (), value);

        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45334888_45335708_23_31
45334888_45344581_1_20
Title: Using JUnit to test a method that reverses a singly linked list 
----------------------------------------

@Test
public void testReverseList () {
    LinkedList myList = new LinkedList ();
    myList.insert (1, 1);
    myList.insert (2, 2);
    myList.insert (3, 3);
    String reverseListOrder = "321";
    assertEquals ("Check reverseList, reversing a list with 3 elements.", reverseListOrder, myList.reverseList ().toString ());
}
----------------------------------------

@Test
public void testReverseList () {
    LinkedList someList = new LinkedList ();
    myList.insert (1, 1);
    myList.insert (2, 2);
    myList.insert (3, 3);
    LinkedList expectedList = new LinkedList ();
    expectedList.insert (3, 1);
    expectedList.insert (2, 2);
    expectedList.insert (1, 3);
    for (int i = 0;
    i < expectedList.size (); i ++) assertEquals ("Checking item with index " + i, myList.get (i), expectedList.get (i));

    assertEquals (myList.size (), expectedList.size ());
    assertEquals ("Check reverseList", myList, expectedList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4534082_4534554_6_31
4534082_4534864_8_30
Title: Storing Inputs in Two Related Arrays 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the number of neighbours");
    Scanner kb = new Scanner (System.in);
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    try {
        int size = Integer.parseInt (reader.readLine ());
        String [] [] regions = new String [5] [size];
        for (int i = 0;
        i < 5; i ++) {
            System.out.println ("Please enter the region #" + (i + 1) + ": ");
            String input = reader.readLine ();
            regions [i] [0] = input;
            for (int j = 1;
            j <= size; j ++) {
                System.out.println ("Please enter the neighbour #" + (j) + ": ");
                String n = reader.readLine ();
                regions [i] [j] = n;
            }
        }
    } catch (IOException ioe) {
        System.out.println ("An error have occured");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the number of neighbours; " + "enter 'q' to quit.");
    Scanner kb = new Scanner (System.in);
    String [] [] regions = new String [REGION_COUNT] [];
    for (int r = 0;
    r < regions.length; r ++) {
        System.out.print ("How many heighbors for region #" + (r + 1) + ": ");
        if (kb.hasNextInt ()) {
            int size = kb.nextInt ();
            regions [r] = new String [size];
            kb.nextLine ();
            for (int n = 0;
            n < size; n ++) {
                System.out.print ("Please enter the neighbour #" + (n) + ": ");
                regions [r] [n] = kb.nextLine ();
            }
        } else System.exit (0);

    }
    for (String [] neighbors : regions) {
        System.out.println (Arrays.toString (neighbors));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45364547_48507153_11_31
45364547_48761536_2_17
Title: How to create a read-only list in java without using unmodifiablelist method from collections API? 
----------------------------------------

public static void main (String [] args) {
    List < Integer > lsd = new ArrayList < Integer > ();
    lsd.add (1);
    lsd.add (2);
    lsd.add (3);
    lsd.add (4);
    ImList imList = new ImList (lsd);
    imList.getLis ().add (5);
    imList.getLis ().add (6);
    imList.getLis ().add (7);
    imList.getLis ().add (8);
    for (int k : imList.getLis ()) {
        System.out.println (k);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Employee > listOfEmployees = new ArrayList < > ();
    listOfEmployees.add (new Employee (1, "Faizan", 1000));
    listOfEmployees.add (new Employee (2, "Arun", 1000));
    listOfEmployees.add (new Employee (3, "Amit", 1000));
    listOfEmployees.add (new Employee (4, "Noman", 1000));
    listOfEmployees.add (new Employee (5, "John", 1000));
    EmployeeListUtility employeeListUtility = new EmployeeListUtility ();
    EmployeeList employeeList = employeeListUtility.getImmutableEmployeeList (listOfEmployees);
    System.out.println (employeeList.size ());
    employeeList.clear ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45372939_45373120_1_17
45372939_45373221_1_15
Title: Multiplication in Java with recursion 
----------------------------------------

public static void main (String [] args) {
    int [] [] matrix = new int [] [] {{1, 2, 2}, {2, 2, 3}, {0, 1, 2}};
    int result = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        result = result * matrix [i] [i];
    }
    System.out.println ("Result: " + result);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] [] matrix = new int [3] [];
    matrix [0] = new int [] {1, 2, 2};
    matrix [1] = new int [] {2, 2, 3};
    matrix [2] = new int [] {0, 1, 2};
    int resultL2R = 1;
    int resultR2L = 1;
    for (int i = 0;
    i < matrix.length; i ++) {
        resultL2R *= matrix [i] [i];
        resultR2L *= matrix [i] [matrix.length - 1 - i];
    }
    System.out.println ("left-to-right: " + resultL2R);
    System.out.println ("right-to-left: " + resultR2L);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45373712_45374211_7_21
45373712_45374243_1_11
Title: Find a value in a binary tree avoiding stackoverflow exception 
----------------------------------------

public Node find (int v) {
    Node n = this;
    while (n != null) {
        if (v > n.value) n = n.right;
        else if (v < n.value) n = n.left;
        else return n;

    }
    return null;
}
----------------------------------------

public Node find (int v) {
    Node current = this;
    while (current != null) {
        if (current.value == v) {
            return current;
        }
        current = v < current.value ? current.left : current.right;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_10_46
4537626_4537764_24_42
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.setModalityType (Dialog.ModalityType.APPLICATION_MODAL);
    d.add (jLabel);
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (3000);
                System.out.println ("After");
                SwingUtilities.invokeLater (new Runnable () {
                    public void run () {
                        d.setVisible (false);
                        d.dispose ();
                        myFrame.setVisible (false);
                        myFrame.dispose ();
                    }}

                );
            } catch (InterruptedException ex) {
            }
        }}

    ).start ();
    d.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (3000);
        System.out.println ("After");
        SwingUtilities.invokeLater (new Runnable () {
            public void run () {
                d.setVisible (false);
                d.dispose ();
                myFrame.setVisible (false);
                myFrame.dispose ();
            }}

        );
    } catch (InterruptedException ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_10_46
4537626_4537892_20_30
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.setModalityType (Dialog.ModalityType.APPLICATION_MODAL);
    d.add (jLabel);
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (3000);
                System.out.println ("After");
                SwingUtilities.invokeLater (new Runnable () {
                    public void run () {
                        d.setVisible (false);
                        d.dispose ();
                        myFrame.setVisible (false);
                        myFrame.dispose ();
                    }}

                );
            } catch (InterruptedException ex) {
            }
        }}

    ).start ();
    d.setVisible (true);
}
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.add (new JLabel ("Please wait..."));
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    d.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_10_46
4537626_4537949_8_22
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.setModalityType (Dialog.ModalityType.APPLICATION_MODAL);
    d.add (jLabel);
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (3000);
                System.out.println ("After");
                SwingUtilities.invokeLater (new Runnable () {
                    public void run () {
                        d.setVisible (false);
                        d.dispose ();
                        myFrame.setVisible (false);
                        myFrame.dispose ();
                    }}

                );
            } catch (InterruptedException ex) {
            }
        }}

    ).start ();
    d.setVisible (true);
}
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.setModalityType (JDialog.ModalityType.APPLICATION_MODAL);
    d.add (comp);
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    d.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_1_48
4537626_4537892_1_41
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public static void main (String [] args) throws Exception {
    SwingUtilities.invokeAndWait (new Runnable () {
        final JFrame myFrame = new JFrame ("Main frame");
        final JLabel jLabel = new JLabel ("Please wait...");
        final JDialog d = new JDialog (myFrame, "I'm waiting");
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.setModalityType (Dialog.ModalityType.APPLICATION_MODAL);
            d.add (jLabel);
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            new Thread (new Runnable () {
                @Override
                public void run () {
                    try {
                        Thread.sleep (3000);
                        System.out.println ("After");
                        SwingUtilities.invokeLater (new Runnable () {
                            public void run () {
                                d.setVisible (false);
                                d.dispose ();
                                myFrame.setVisible (false);
                                myFrame.dispose ();
                            }}

                        );
                    } catch (InterruptedException ex) {
                    }
                }}

            ).start ();
            d.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final JFrame myFrame = new JFrame ("Main frame");
    final JDialog d = new JDialog (myFrame, "I'm waiting");
    final Thread backgroundJob = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (5000);
            } catch (InterruptedException ex) {
                Logger.getLogger (NewClass.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
    backgroundJob.start ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.add (new JLabel ("Please wait..."));
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            d.setVisible (true);
        }}

    );
    backgroundJob.join ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            d.setVisible (false);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_1_48
4537626_4537949_2_41
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public static void main (String [] args) throws Exception {
    SwingUtilities.invokeAndWait (new Runnable () {
        final JFrame myFrame = new JFrame ("Main frame");
        final JLabel jLabel = new JLabel ("Please wait...");
        final JDialog d = new JDialog (myFrame, "I'm waiting");
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.setModalityType (Dialog.ModalityType.APPLICATION_MODAL);
            d.add (jLabel);
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            new Thread (new Runnable () {
                @Override
                public void run () {
                    try {
                        Thread.sleep (3000);
                        System.out.println ("After");
                        SwingUtilities.invokeLater (new Runnable () {
                            public void run () {
                                d.setVisible (false);
                                d.dispose ();
                                myFrame.setVisible (false);
                                myFrame.dispose ();
                            }}

                        );
                    } catch (InterruptedException ex) {
                    }
                }}

            ).start ();
            d.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final JLabel comp = new JLabel ("the job has started");
    final JFrame myFrame = new JFrame ("Main frame");
    final JDialog d = new JDialog (myFrame, "I'm waiting");
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.setModalityType (JDialog.ModalityType.APPLICATION_MODAL);
            d.add (comp);
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            d.setVisible (true);
        }}

    );
    try {
        Thread.sleep (3000);
        SwingUtilities.invokeAndWait (new Runnable () {
            @Override
            public void run () {
                comp.setText ("the job has finished");
                d.setVisible (false);
                d.dispose ();
                myFrame.setVisible (false);
                myFrame.dispose ();
            }}

        );
    } catch (InterruptedException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_24_42
4537626_4537892_20_30
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public void run () {
    try {
        Thread.sleep (3000);
        System.out.println ("After");
        SwingUtilities.invokeLater (new Runnable () {
            public void run () {
                d.setVisible (false);
                d.dispose ();
                myFrame.setVisible (false);
                myFrame.dispose ();
            }}

        );
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.add (new JLabel ("Please wait..."));
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    d.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537764_24_42
4537626_4537949_8_22
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public void run () {
    try {
        Thread.sleep (3000);
        System.out.println ("After");
        SwingUtilities.invokeLater (new Runnable () {
            public void run () {
                d.setVisible (false);
                d.dispose ();
                myFrame.setVisible (false);
                myFrame.dispose ();
            }}

        );
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    myFrame.setSize (750, 500);
    myFrame.setLocationRelativeTo (null);
    myFrame.setVisible (true);
    d.setModalityType (JDialog.ModalityType.APPLICATION_MODAL);
    d.add (comp);
    d.setSize (300, 200);
    d.setLocationRelativeTo (null);
    d.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4537626_4537892_1_41
4537626_4537949_2_41
Title: "Swing: How do I run a job from AWT thread but after a window was layed out?" 
----------------------------------------

public static void main (String [] args) throws Exception {
    final JFrame myFrame = new JFrame ("Main frame");
    final JDialog d = new JDialog (myFrame, "I'm waiting");
    final Thread backgroundJob = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (5000);
            } catch (InterruptedException ex) {
                Logger.getLogger (NewClass.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
    backgroundJob.start ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.add (new JLabel ("Please wait..."));
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            d.setVisible (true);
        }}

    );
    backgroundJob.join ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            d.setVisible (false);
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final JLabel comp = new JLabel ("the job has started");
    final JFrame myFrame = new JFrame ("Main frame");
    final JDialog d = new JDialog (myFrame, "I'm waiting");
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            myFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            myFrame.setSize (750, 500);
            myFrame.setLocationRelativeTo (null);
            myFrame.setVisible (true);
            d.setModalityType (JDialog.ModalityType.APPLICATION_MODAL);
            d.add (comp);
            d.setSize (300, 200);
            d.setLocationRelativeTo (null);
            d.setVisible (true);
        }}

    );
    try {
        Thread.sleep (3000);
        SwingUtilities.invokeAndWait (new Runnable () {
            @Override
            public void run () {
                comp.setText ("the job has finished");
                d.setVisible (false);
                d.dispose ();
                myFrame.setVisible (false);
                myFrame.dispose ();
            }}

        );
    } catch (InterruptedException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45392850_45393311_112_125
45392850_45393311_136_150
Title: Send Mouse position over Bluetooth-java 
----------------------------------------

public boolean sendDataIfReady (String data) {
    boolean result = false;
    try {
        if (remoteReady) {
            remoteReady = false;
            dout.writeUTF (data);
            dout.flush ();
            result = true;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return result;
}
----------------------------------------

public boolean sendDataIfReady (byte [] data) {
    boolean result = false;
    try {
        if (remoteReady) {
            remoteReady = false;
            dout.write (data, 0, data.length);
            dout.flush ();
            result = true;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45397657_45399335_6_20
45397657_45400634_55_70
Title: Comparator : Equals method functionlity 
----------------------------------------

public static void main (String [] args) {
    Apple redApple = new Apple ();
    redApple.setCost (10);
    redApple.setWeight (2);
    Apple greenApple = new Apple ();
    greenApple.setCost (12);
    greenApple.setWeight (3);
    Set < Apple > apples = new TreeSet < > ();
    apples.add (redApple);
    apples.add (greenApple);
    System.out.println (apples);
}
----------------------------------------

public static void main (String [] args) {
    Set < Person > set = new TreeSet < Person > ();
    Person p1 = new Person (1, "Sam", "M-1-SAM-50", 50000.00);
    Person p2 = new Person (2, "Diaz", "M-1-SAM-35", 35000.00);
    Person p3 = new Person (3, "Remy", "M-1-SAM-100", 100000.00);
    Person p4 = new Person (4, "Cesar", "M-1-SAM-80", 80000.00);
    Person p5 = new Person (5, "Rino", "M-1-SAM-5", 5000.00);
    set.add (p1);
    set.add (p2);
    set.add (p3);
    set.add (p4);
    set.add (p5);
    printPersons (set);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45397928_45398034_1_12
45397928_45398046_1_20
Title: How can I iterate throughout on list of nested java objects? 
----------------------------------------

public SearchItemType getElementByOpenedRowID (SearchItemType gridResult, String selectedRowId) {
    SearchItemType element = null;
    if (gridResult == null) return null;
    else if (gridResult.getId ().equals (selectedRowId)) return gridResult;
    else {
        for (SearchItemType child : gridResult.getChildItem ()) {
            element = getElementByOpenedRowID (child, selectedRowId);
            if (element != null) break;

        }
    }

    return element;
}
----------------------------------------

public SearchItemType getElementByOpenedRowID (SearchItemType gridResult, String selectedRowId) {
    if (gridResult == null) {
        return null;
    }
    if (gridResult.getId ().equals (selectedRowId)) {
        return gridResult;
    }
    for (SearchItemType child : gridResult.getChildItem ()) {
        SearchItemType result = getElementByOpenedRowID (child, selectedRowId);
        if (result != null) {
            return result;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45428527_45428755_20_51
45428527_45428755_4_12
Title: Passing data from Fragment to new Activity 
----------------------------------------

protected void onCreate (@Nullable
Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_camera);
    Intent intent = getIntent ();
    if (intent.getExtras () != null) {
        description = intent.getExtras ().getString ("description");
        category = intent.getExtras ().getString ("category");
        notes = intent.getExtras ().getString ("notes");
    }
    if (null == savedInstanceState) {
        CameraFragment cameraFragment = new CameraFragment ();
        Bundle bundle = new Bundle ();
        bundle.putString ("description", description);
        bundle.putString ("category", category);
        bundle.putString ("notes", notes);
        cameraFragment.setArguments (bundle);
        Log.v (TAG, "Here is the bundle: " + bundle.toString ());
        getFragmentManager ().beginTransaction ().replace (R.id.container, cameraFragment).commit ();
    }
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Intent cameraIntent = new Intent (MainActivity.this, CameraActivity.class);
    cameraIntent.putExtra ("description", "description");
    cameraIntent.putExtra ("category", "category");
    cameraIntent.putExtra ("notes", "notes");
    startActivity (cameraIntent);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45438671_45438780_1_23
45438671_45439292_1_15
Title: Java sorting a list of integers excluding a specific value 
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = new ArrayList < > ();
    list.add (7);
    list.add (0);
    list.add (2);
    list.add (9);
    list.add (0);
    list.add (1);
    list.add (0);
    list.add (4);
    Set < Integer > indexesOf = new HashSet < > ();
    int indexOf = - 1;
    int shift = 0;
    while ((indexOf = list.indexOf (Integer.valueOf (0))) != - 1) {
        indexesOf.add (indexOf + shift ++);
        list.remove (indexOf);
    }
    Collections.sort (list);
    indexesOf.stream ().forEach (index -> list.add (index, Integer.valueOf (0)));
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = Arrays.asList (7, 0, 2);
    for (int i = 0;
    i < list.size () - 1; i ++) {
        int a = list.get (i);
        for (int j = i + 1;
        a != 0 && j < list.size (); j ++) {
            int b = list.get (j);
            if (b != 0 && b < a) {
                list.set (i, b);
                list.set (j, a);
                a = b;
            }
        }
    }
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45468056_45468552_28_43
45468056_45468552_6_20
Title: "Prevent Starting the launcher activity again if it is already started just resume it" 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_cam_calculator);
    back_frm_came = (Button) findViewById (R.id.back_frm_came);
    back_frm_came.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            finish ();
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_voice_calculator);
    back_frm_voice = (Button) findViewById (R.id.back_frm_voice);
    back_frm_voice.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            finish ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45476046_45479281_26_39
45476046_45479281_43_55
Title: How to read data from database using multiple thread in java 
----------------------------------------

public void run () {
    Statement s;
    try {
        s = impClass.c.createStatement ();
        ResultSet rs = s.executeQuery ("select * from user");
        while (rs.next ()) System.out.println (rs.getInt (1) + "  " + rs.getString (2) + "  " + rs.getString (3));

    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    Statement s;
    try {
        s = impClass.c.createStatement ();
        ResultSet rs = s.executeQuery ("select * from userprofile");
        while (rs.next ()) System.out.println (rs.getInt (1) + "  " + rs.getString (2) + "  " + rs.getString (3));

    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45482434_45485148_11_22
45482434_45485148_6_24
Title: Socket does not sending anything unless run on debug mode 
----------------------------------------

public void run () {
    recieve_packet ();
    if (isLearned) {
        Savebtn.setVisibility (View.VISIBLE);
    }
    try {
        client.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    request_packet ();
    Handler handler = new Handler ();
    handler.postDelayed (new Runnable () {
        @Override
        public void run () {
            recieve_packet ();
            if (isLearned) {
                Savebtn.setVisibility (View.VISIBLE);
            }
            try {
                client.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }}

    , 500);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45483472_45486841_10_68
45483472_45601760_38_108
Title: Binding to a ObservableValue<ObservableList> instead of an ObservableList with EasyBind 
----------------------------------------

public void start (Stage stage) throws Exception {
    ModelItem item = new ModelItem ();
    ModelItemDetail mid1 = new ModelItemDetail ();
    mid1.setA ("a1");
    mid1.setB ("b1");
    ModelItemDetail mid2 = new ModelItemDetail ();
    mid2.setA ("a2");
    mid2.setB ("b2");
    ModelItemDetail mid3 = new ModelItemDetail ();
    mid3.setA ("a3");
    mid3.setB ("b3");
    ObservableList < ModelItemDetail > details = item.getDetails ();
    details.add (mid1);
    details.add (mid2);
    details.add (mid3);
    CheckBox showB = new CheckBox ("Show b");
    Label label = new Label ();
    label.textProperty ().bind (Bindings.createStringBinding (() -> {
        return details.stream ().map (mid -> Boolean.TRUE.equals (showB.isSelected ()) ? new String (mid.getA () + " <" + mid.getB () + "><![CDATA[") : mid.getA ()).collect (Collectors.joining (", "));
    }, details, showB.selectedProperty ()));
    Button add = new Button ("Add item detail");
    add.setOnAction (e -> {
        Random r = new Random ();
        int i = r.nextInt (100) + 3;
        ModelItemDetail mid = new ModelItemDetail ();
        mid.setA ("a" + i);
        mid.setB ("b" + i);
        details.add (mid);
    });
    Button changeA = new Button ("Change some A");
    changeA.setOnAction (e -> {
        Random r = new Random ();
        ModelItemDetail detail = details.get (r.nextInt (details.size ()));
        detail.setA ("a" + r.nextInt (100) + 3);
    });
    BorderPane pane = new BorderPane ();
    ListView < ModelItem > list = new ListView < > ();
    list.getItems ().add (item);
    pane.setCenter (list);
    pane.setRight (new VBox (add, changeA));
    pane.setTop (showB);
    pane.setBottom (label);
    stage.setScene (new Scene (pane));
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    try {
        MasterDetailModel mdModel = new MasterDetailModel ();
        ObservableList < ModelItem > itemsList = FXCollections.observableArrayList ();
        for (int i = 0;
        i < 5; i ++) {
            itemsList.add (newModelItem (i));
        }
        MonadicBinding < ModelItem > selectedItemBinding = EasyBind.monadic (mdModel.selectedItemProperty ()).orElse (new ModelItem ());
        ListView < ModelItem > listView = new ListView < ModelItem > ();
        listView.setItems (itemsList);
        listView.setPrefHeight (150);
        mdModel.selectedItemProperty ().bind (listView.getSelectionModel ().selectedItemProperty ());
        checkShowMore = new CheckBox ();
        checkShowMore.setText ("Show more details");
        VBox detailVBox = new VBox ();
        Label apiLabel = new Label ();
        Label labelPlayground = new Label ();
        detailVBox.getChildren ().addAll (checkShowMore, new TitledPane ("API Binding", apiLabel), new TitledPane ("EasyBind", labelPlayground));
        Scene scene = new Scene (new VBox (listView, detailVBox), 400, 400);
        primaryStage.setScene (scene);
        primaryStage.setTitle ("JavaFX/EasyBind MVCE");
        apiLabel.textProperty ().bind (Bindings.createStringBinding (() -> selectedItemBinding.getValue ().getDetails ().stream ().map (i -> derivedBinding (i.aProperty (), i.bProperty ())).map (v -> v.getValue ()).collect (Collectors.joining (", ")), mdModel.selectedItemProperty (), checkShowMore.selectedProperty ()));
        labelPlayground.textProperty ().bind (selectedItemBinding.flatMap (ModelItem :: detailsProperty).map (l -> derivedBinding (l)).flatMap (l -> EasyBind.combine (l, stream -> stream.collect (Collectors.joining (", ")))));
        primaryStage.show ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45483775_45484101_2_15
45483775_45484125_1_14
Title: How to divide URL without Using Collections in Java 
----------------------------------------

public static void main (String [] args) {
    String url = "https://localhost:8080/prodpat/admin/page1";
    String [] urlSplitData = url.split ("[^A-Za-z0-9]");
    System.out.println (java.util.Arrays.toString (urlSplitData));
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < urlSplitData.length; i ++) {
        if (urlSplitData [i].trim ().length () != 0) {
            sb.append (urlSplitData [i] + "_");
        }
    }
    System.out.println (java.util.Arrays.toString (sb.toString ().split ("_")));
}
----------------------------------------

public static void main (String [] args) {
    try {
        URL url = new URL ("https://localhost:8080/prodpat/admin/page1");
        String https = url.getProtocol ();
        String localhost = url.getHost ();
        int port = url.getPort ();
        String [] path = url.getPath ().split ("/");
        String prodapt = path [1];
        String admin = path [2];
        String page1 = path [3];
    } catch (MalformedURLException ex) {
        Logger.getLogger (Test3.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45495758_45502058_4_59
45495758_45595183_25_99
Title: Detect Hyperlink hover in WebView and print the link 
----------------------------------------

public void start (final Stage stage) {
    Scene scene = new Scene (new Group ());
    final WebView browser = new WebView ();
    final WebEngine webEngine = browser.getEngine ();
    ScrollPane scrollPane = new ScrollPane ();
    scrollPane.setContent (browser);
    TextField textField = new TextField ();
    textField.setVisible (false);
    textField.setEditable (false);
    webEngine.getLoadWorker ().stateProperty ().addListener ((observable, oldValue, newValue) -> {
        if (newValue == Worker.State.SUCCEEDED) {
            EventListener mouseOverEventListener = new EventListener () {
                @Override
                public void handleEvent (Event ev) {
                    String href = ((Element) ev.getTarget ()).getAttribute ("href");
                    textField.setText (href);
                    textField.setVisible (true);
                    textField.setPrefWidth (textField.getText ().length () * 6);
                    System.out.println (href);
                }}

            ;
            EventListener mouseOutEventListener = new EventListener () {
                @Override
                public void handleEvent (Event ev) {
                    textField.setVisible (false);
                }}

            ;
            Document document = webEngine.getDocument ();
            NodeList nodeList = document.getElementsByTagName ("a");
            for (int i = 0;
            i < nodeList.getLength (); i ++) {
                ((EventTarget) nodeList.item (i)).addEventListener ("mouseover", mouseOverEventListener, false);
                ((EventTarget) nodeList.item (i)).addEventListener ("mouseout", mouseOutEventListener, false);
            }
        }
    });
    String content = "http://java2s.com";
    webEngine.load (content);
    AnchorPane anchorPane = new AnchorPane ();
    anchorPane.getChildren ().add (scrollPane);
    anchorPane.getChildren ().add (textField);
    AnchorPane.setBottomAnchor (textField, 0.0);
    AnchorPane.setLeftAnchor (textField, 0.0);
    scene.setRoot (anchorPane);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (final Stage stage) {
    final WebView browser = new WebView ();
    Label textField = new Label ();
    final WebEngine webEngine = browser.getEngine ();
    textField.setVisible (false);
    webEngine.getLoadWorker ().stateProperty ().addListener ((observable, oldValue, newValue) -> {
        if (newValue == Worker.State.SUCCEEDED) {
            mouseOverEventListener = new EventListener () {
                @Override
                public void handleEvent (Event ev) {
                    String href = getNextHref ((Element) ev.getTarget ());
                    if (href != null && ! href.isEmpty ()) {
                        if (href.startsWith ("/")) {
                            href = ((Element) ev.getTarget ()).getBaseURI () + href;
                        }
                        textField.setText (href + "   ");
                        textField.setPrefHeight (22);
                        textField.setMaxWidth (650);
                        textField.setStyle ("-fx-border-color: #C6C6C7; -fx-background-color: #F2F2F2;");
                        textField.setVisible (true);
                    }
                } private String getNextHref (Element target) {
                    while (target.getAttribute ("href") == null) {
                        if (target.toString ().contains ("HTMLHtmlElement")) {
                            return "";
                        }
                        target = (Element) target.getParentNode ();
                        if (target == null) {
                            return "";
                        }
                    }
                    return target.getAttribute ("href");
                }}

            ;
            mouseOutEventListener = new EventListener () {
                @Override
                public void handleEvent (Event ev) {
                    textField.setVisible (false);
                }}

            ;
            Document document = webEngine.getDocument ();
            addListener (document.getElementsByTagName ("*"));
        }
    });
    String content = "http://java2s.com";
    webEngine.load (content);
    TextField tf = new TextField ();
    tf.textProperty ().bind (webEngine.locationProperty ());
    BorderPane pane = new BorderPane ();
    AnchorPane ap = new AnchorPane (browser, textField);
    AnchorPane.setBottomAnchor (browser, 0.0);
    AnchorPane.setLeftAnchor (browser, 0.0);
    AnchorPane.setTopAnchor (browser, 0.0);
    AnchorPane.setRightAnchor (browser, 0.0);
    AnchorPane.setBottomAnchor (textField, 0.0);
    AnchorPane.setLeftAnchor (textField, 0.0);
    pane.setCenter (ap);
    pane.setTop (tf);
    Scene scene = new Scene (pane);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45500738_45500920_1_28
45500738_45502762_37_58
Title: Compare one Array List object with the next one 
----------------------------------------

public static void dosomething (File file) {
    try {
        BufferedReader in = new BufferedReader (new FileReader (file));
        String str;
        while ((str = in.readLine ()) != null) {
            str = str.trim ();
            String subString = str.substring (str.indexOf (";") + 1, str.length ());
            boolean match = false;
            for (String elem : globalList) {
                if (elem.contains (subString)) {
                    match = true;
                    break;
                }
            }
            if (! match) globalList.add (str);

        }
        in.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------

public static void dosomething (File file) {
    try {
        BufferedReader in = new BufferedReader (new FileReader (file));
        MyString str;
        String line;
        while ((line = in.readLine ()) != null) {
            str = new MyString ();
            str.setLine (line);
            globalSet.add (str);
        }
        in.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45500738_45500920_1_28
45500738_45567601_58_78
Title: Compare one Array List object with the next one 
----------------------------------------

public static void dosomething (File file) {
    try {
        BufferedReader in = new BufferedReader (new FileReader (file));
        String str;
        while ((str = in.readLine ()) != null) {
            str = str.trim ();
            String subString = str.substring (str.indexOf (";") + 1, str.length ());
            boolean match = false;
            for (String elem : globalList) {
                if (elem.contains (subString)) {
                    match = true;
                    break;
                }
            }
            if (! match) globalList.add (str);

        }
        in.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------

public static void dosomething (File file) {
    try {
        globalSet = new HashSet < MyString > ();
        BufferedReader in = new BufferedReader (new FileReader (file));
        MyString str = new MyString ();
        String line;
        while ((line = in.readLine ()) != null) {
            str.setLine (line);
            globalSet.add (str);
        }
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45509669_45519156_14_24
45509669_45522035_1_22
Title: How to send nested json objects inside a request body 
----------------------------------------

@Override
public byte [] getBody () {
    JSONObject jsonObject = new JSONObject ();
    try {
        jsonObject.put ("amount", amount);
        jsonObject.put ("card", come ());
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return jsonObject.toString ().getBytes ();
}
----------------------------------------

@Override
public byte [] getBody () {
    try {
        final JSONObject card = new JSONObject ().put ("number", String.valueOf (number)).put ("expiry_month", String.valueOf (month)).put ("expiry_year", String.valueOf (year)).put ("cvv", String.valueOf (cvv)).put ("pin", String.valueOf (pin));
        return new JSONObject ().put ("amount", String.valueOf (amount)).put ("card", card).toString ().getBytes ();
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45514705_45514863_1_21
45514705_45515038_1_12
Title: Searching for String in Array of Strings [] 
----------------------------------------

private static void searchArray (String [] nameList, String target) {
    boolean wasNameFound = false;
    int occ = 0;
    for (int i = 0;
    i < nameList.length; i ++) {
        if (nameList [i].toLowerCase ().equals (target.toLowerCase ())) {
            System.out.println (target + " Found at index: " + i);
            wasNameFound = true;
            occ += 1;
        } else if (! wasNameFound && (i == nameList.length)) {
            System.out.println ("Sorry, name not found");
        }

    }
    if (wasNameFound) {
        System.out.println (target + " Was found " + occ + " times");
    }
}
----------------------------------------

private static void searchArray (String [] nameList, String target) {
    boolean isFound = false;
    for (int i = 0;
    i < nameList.length; i ++) {
        if (nameList [i].equals (target)) {
            System.out.println ("Name found at location: " + i);
            isFound = true;
        }
    }
    if (isFound) System.out.println ("Sorry, name not found!");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45521551_45521800_1_18
45521551_45521889_2_25
Title: Java sum algorithm not returning anything 
----------------------------------------

public static int [] twoSum (int [] numbers, int target) {
    if (Objects.isNull (numbers)) {
        throw new IllegalArgumentException ("numbers is not allowed to be null");
    }
    for (int a = 0;
    a < numbers.length; a ++) {
        int first = numbers [a];
        for (int b = 0;
        b < numbers.length; b ++) {
            int second = numbers [b];
            if (first + second == target && a != b) {
                return new int [] {first, second};
            }
        }
    }
    throw new IllegalArgumentException ("there has to be a matching pair");
}
----------------------------------------

public int [] twoSum (int [] nums, int target) {
    int [] answer = null;
    for (int i = 0;
    i < nums.length; i ++) {
        int value = nums [i];
        for (int j = i + 1;
        j < nums.length; j ++) {
            int x = nums [j];
            if ((value + x) == target) {
                answer = new int [2];
                answer [0] = i;
                answer [1] = j;
            }
        }
    }
    System.out.println ("leet method executed");
    if (answer == null) {
        return nums;
    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45525181_45525640_15_43
45525181_45532123_13_47
Title: How to refer to actual clicked button in event handler in java fx? 
----------------------------------------

public void start (Stage primaryStage) {
    Button [] [] buttonContainer = new Button [3] [3];
    VBox vbox = new VBox ();
    for (int i = 0;
    i < 3; i ++) {
        for (int t = 0;
        t < 3; t ++) {
            Button button = new Button ();
            button.setText ("button" + i + " : " + t);
            button.setOnAction ((event) -> {
                button.setText ("Hello World!");
            });
            buttonContainer [i] [t] = button;
            vbox.getChildren ().add (buttonContainer [i] [t]);
        }
    }
    StackPane root = new StackPane ();
    root.getChildren ().add (vbox);
    Scene scene = new Scene (root, 500, 500);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    primaryStage.setTitle ("Hello World");
    GridPane root = new GridPane ();
    primaryStage.setScene (new Scene (root, 1000, 600));
    MyButton [] [] buttonArray = new MyButton [10] [10];
    HBox [] hboxArray = new HBox [10];
    for (int i = 0;
    i < 10; i ++) {
        hboxArray [i] = new HBox ();
        for (int j = 0;
        j < 10; j ++) {
            MyButton button = new MyButton (i, j);
            button.setMinSize (100, 50);
            buttonArray [i] [j] = button;
            button.setOnAction (new EventHandler < ActionEvent > () {
                @Override
                public void handle (ActionEvent e) {
                    button.setText ("button" + button.getH () + "," + button.getV ());
                    button.setDisable (true);
                }}

            );
            hboxArray [i].getChildren ().add (buttonArray [i] [j]);
        }
    }
    for (int i = 0;
    i < 10; i ++) {
        root.add (hboxArray [i], 1, i);
    }
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45543945_45544096_1_22
45543945_45544791_1_20
Title: Removing recurring vowels in a string 
----------------------------------------

public static void main (String [] args) {
    String a = "History can also refer to the academic discipline ";
    int count = 0;
    for (int i = 0;
    i < a.length () - 1; i ++) {
        if (a.charAt (i) == 'a' || a.charAt (i) == 'e' || a.charAt (i) == 'i' || a.charAt (i) == 'u' || a.charAt (i) == 'u') {
            System.out.println ("The sentence have vowels:" + a.charAt (i));
            count ++;
        }
        if (a.charAt (i + 1) == 'a' || a.charAt (i + 1) == 'e' || a.charAt (i + 1) == 'i' || a.charAt (i + 1) == 'u' || a.charAt (i + 1) == 'u') {
            i ++;
        } else {
            count = 0;
        }
    }
    System.out.println ("number of vowels:" + count);
}
----------------------------------------

public static void main (String [] args) {
    String a = "History can also refer to the academic discipline ";
    int count = 0;
    boolean lastWasVowel = false;
    for (int i = 0;
    i < a.length (); i ++) {
        if (a.charAt (i) == 'a' || a.charAt (i) == 'e' || a.charAt (i) == 'i' || a.charAt (i) == 'o' || a.charAt (i) == 'u') {
            if (! lastWasVowel) {
                count ++;
            }
            lastWasVowel = true;
        } else {
            lastWasVowel = false;
        }
    }
    System.out.println ("number of vowels:" + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45547829_45548887_13_32
45547829_45550354_5_15
Title: "Creating a ""default constructor"" for inner sub-interfaces" 
----------------------------------------

public Void apply (Void ignored) {
    try {
        runnable.tryRun ();
    } catch (Exception x) {
        if (x instanceof RuntimeException) throw (RuntimeException) x;

        throw new RuntimeException (x);
    }
    return null;
}
----------------------------------------

default R apply (T t) {
    try {
        return action (t);
    } catch (Exception e) {
        for (int trial = 1;
        trial < trials (); trial ++) {
            retrying (e);
            try {
                return action (t);
            } catch (Exception next) {
                e = next;
            }
        }
        skipping (e);
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45614393_45614488_1_10
45614393_45614608_1_14
Title: I can't figure out why my program isn't printing when I run it 
----------------------------------------

public boolean addStudent (Student stud) {
    if (stud != null) return true;

    if (numStudents < MAX_STUDENTS) {
        theArray [numStudents] = stud;
        numStudents ++;
        return true;
    } else return false;

}
----------------------------------------

public boolean addStudent (Student stud) {
    if (stud == null) return false;

    if (numStudents < MAX_STUDENTS) {
        theArray [numStudents] = stud;
        numStudents ++;
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45615105_45615195_124_134
45615105_45615195_98_106
Title: multiplication of two columns data in jTable 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    for (int i = 0;
    i < model.getRowCount (); i ++) {
        Double d = Double.parseDouble ((String) model.getValueAt (i, 1));
        Double d2 = Double.parseDouble ((String) model.getValueAt (i, 2));
        Double d3 = d * d2;
        model.setValueAt (d3, i, 3);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    DefaultTableModel model = (DefaultTableModel) table.getModel ();
    table.setModel (model);
    int hu = (Integer) spinner.getValue ();
    for (int i = 0;
    i < hu; i ++) {
        model.addRow (new Object [] {"M" + (i + 1), "0", "0", ""});
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45623286_45625261_25_43
45623286_45625261_49_62
Title: FizzBuzz multi thread consumer producer 
----------------------------------------

public void run () {
    while (true) {
        Integer counterValue = counter.incrementAndGet ();
        final int MAX = 10;
        if (counterValue <= MAX) {
            final int sleep = ThreadLocalRandom.current ().nextInt (200);
            try {
                Thread.sleep (sleep);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            queue.add (counterValue);
        } else {
            isStop = true;
            break;
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        Integer counterValue = queue.poll ();
        if (counterValue == null) {
            if (isStop) {
                break;
            }
            continue;
        }
        fizzBuzz (counterValue);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45637117_45637239_18_40
45637117_45637526_7_26
Title: How to order month name starting from current month 
----------------------------------------

public static void main (String [] args) {
    String [] monthsAsArray = {"August", "September", "October", "November", "December", "January", "February", "March", "April", "May", "June", "July"};
    List < String > months = Arrays.asList (monthsAsArray);
    final Comparator < String > dateCompare = new Comparator < String > () {
        public int compare (String o1, String o2) {
            Date month1 = null, month2 = null;
            try {
                SimpleDateFormat s = new SimpleDateFormat ("MMM");
                month1 = s.parse (o1);
                month2 = s.parse (o2);
            } catch (Exception e) {
                e.printStackTrace ();
            }
            return month1.compareTo (month2);
        }}

    ;
    Collections.sort (months, dateCompare);
    System.out.print (months);
}
----------------------------------------

public static void main (String [] args) {
    String months [] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
    Date date = new Date ();
    Calendar cal = Calendar.getInstance ();
    cal.setTime (date);
    int month = cal.get (Calendar.MONTH);
    System.out.println (month + "Date: " + date);
    System.out.println ("Original Array : " + Arrays.toString (months));
    Collections.rotate (Arrays.asList (months), month - 2);
    System.out.println ("Modified Array : " + Arrays.toString (months));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4564755_4574038_8_19
4564755_5555151_111_129
Title: Java - setting Fonts/Color in setBorder 
----------------------------------------

public static void main (String [] args) throws IOException {
    Font myFont = new Font ("SansSerif", Font.PLAIN, 10);
    Color myColor = Color.RED;
    TitledBorder titledBorder = BorderFactory.createTitledBorder (null, " Text 1    Text 2", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, myFont, myColor);
    JFrame frame = new JFrame ();
    final JLabel label = new JLabel ("Hello gruel world");
    label.setBorder (titledBorder);
    frame.getContentPane ().add (label);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JPanel p = new JPanel ();
    p.setPreferredSize (new Dimension (200, 200));
    String title = "<html><color=red> Text 1</font><font color=blue>      Text 2</font>";
    p.setBorder (new MultiColorTitleBorder (title, new LineBorder (Color.CYAN, 6)));
    p.setBackground (Color.YELLOW);
    p.add (new JTextField (5));
    JPanel contentPane = new JPanel ();
    contentPane.add (p);
    JFrame f = new JFrame ();
    f.setContentPane (contentPane);
    f.setSize (800, 600);
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45658747_45658903_11_24
45658747_45658903_25_37
Title: Does a bufferedreader wrapped around a file reader gets its file pointer from the filereader? 
----------------------------------------

public void LoadFromFile () throws IOException {
    String record;
    try {
        FileReader reader = new FileReader ("Friends.txt");
        BufferedReader bin = new BufferedReader (reader);
        while ((record = bin.readLine ()) != null) {
            System.out.println ("1: read " + record);
            break;
        }
        LoadFromFile (reader);
    } catch (FileNotFoundException foo) {
        System.out.println ("file not found from " + new File (".").getAbsolutePath ());
    }
}
----------------------------------------

public void LoadFromFile (FileReader areader) {
    String record;
    try {
        BufferedReader bin = new BufferedReader (areader);
        while ((record = bin.readLine ()) != null) {
            System.out.println ("2: read " + record);
        }
        bin.close ();
        bin = null;
    } catch (IOException ex) {
        throw new IllegalStateException (ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45667742_45667838_4_17
45667742_45700709_1_18
Title: find if there is an active internet connection java android 
----------------------------------------

public static boolean hasNetworkAccess (Context context) {
    ConnectivityManager cm = (ConnectivityManager) context.getSystemService (Context.CONNECTIVITY_SERVICE);
    try {
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo ();
        return activeNetwork != null && activeNetwork.isConnectedOrConnecting ();
    } catch (Exception e) {
        e.printStackTrace ();
        return false;
    }
}
----------------------------------------

public boolean hasNetworkAccess () {
    if (hasActiveInternetConnection ()) {
        try {
            HttpURLConnection urlc = (HttpURLConnection) (new URL ("http://www.screens.company").openConnection ());
            urlc.setRequestProperty ("User-Agent", "Test");
            urlc.setRequestProperty ("Connection", "close");
            urlc.setConnectTimeout (1500);
            urlc.connect ();
            System.out.println ("NETWORK CHECK");
            return (urlc.getResponseCode () == 200);
        } catch (IOException e) {
            Log.e ("NETWORK", "Error checking internet connection.");
        }
    } else {
        Log.d ("NETWORK", "No network available!");
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45705613_45705966_6_38
45705613_45706358_14_26
Title: Find common alphabets in two strings using for loop 
----------------------------------------

public static void main (String [] args) {
    try (Scanner input = new Scanner (System.in)) {
        System.out.println ("Enter String one ");
        String stringOne = input.nextLine ();
        System.out.println ("Enter String two ");
        String StringTwo = input.nextLine ();
        StringBuffer sb = new StringBuffer ();
        int [] alphabetArray1 = new int [52];
        for (int i = 0, len = stringOne.length ();
        i < len; i ++) alphabetArray1 [stringOne.charAt (i) > 94 ? stringOne.charAt (i) - 71 : stringOne.charAt (i) - 65] = 1;

        int [] alphabetArray2 = new int [52];
        for (int i = 0, len = StringTwo.length ();
        i < len; i ++) alphabetArray2 [StringTwo.charAt (i) > 94 ? StringTwo.charAt (i) - 71 : StringTwo.charAt (i) - 65] = 1;

        for (int i = 0;
        i < 52; i ++) if (alphabetArray1 [i] == 1 && alphabetArray2 [i] == 1) sb.append ((char) (i < 26 ? i + 65 : i + 71));

        System.out.println ("Common characters are " + sb.toString ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String first = "flour";
    String second = "four";
    String combined = first.concat (second);
    Character [] result = findCommonLetters (combined, first, second);
    for (char c : result) {
        System.out.print (c);
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45707465_45707557_7_16
45707465_45707574_7_17
Title: Is there any way to create fixed stack size of Java Util stack 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        int ch = sc.nextInt ();
        stackMethod (ch);
    }
}
----------------------------------------

public static void main (String [] args) {
    Stack st = new Stack ();
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        int ch = sc.nextInt ();
        stackMethod (st, ch);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45712301_45712601_1_26
45712301_45714071_1_37
Title: Based on condition txt file divided into two files in java 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner scanner = new Scanner (new FileReader ("Input.txt"));
    boolean isFound = false;
    List < String > main_list = new ArrayList < > ();
    List < String > sub_list = new ArrayList < > ();
    while (scanner.hasNextLine ()) {
        String line = scanner.nextLine ();
        if (line.contains ("A")) {
            isFound = true;
        } else if (line.contains ("1")) {
            isFound = false;
            for (String aSub_list : sub_list) {
                main_list.add (aSub_list);
            }
            sub_list.clear ();
        }

        if (isFound && ! line.contains ("A")) {
            sub_list.add (line);
        }
    }
    for (String aMain_list : main_list) {
        System.out.println (aMain_list);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    FileInputStream fis = new FileInputStream ("in.txt");
    BufferedReader reader = new BufferedReader (new InputStreamReader (fis));
    FileOutputStream fosA = new FileOutputStream ("out_A.txt");
    FileOutputStream fos1 = new FileOutputStream ("out_1.txt");
    FileOutputStream fos = null;
    System.out.println ("Reading File line by line using BufferedReader");
    String line = reader.readLine ();
    while (line != null) {
        System.out.println (line);
        if (line.equals ("A")) {
            fos = fosA;
            line = reader.readLine ();
            continue;
        }
        if (line.equals ("1")) {
            fos = fos1;
            line = reader.readLine ();
            continue;
        }
        fos.write (line.getBytes ());
        fos.write ('\n');
        fos.flush ();
        line = reader.readLine ();
    }
    fos.close ();
    fosA.close ();
    fos1.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45712891_45713027_1_13
45712891_45713066_1_11
Title: Android - set activity result on activity closed 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case android.R.id.home :
            onBackPressed ();
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    int id = item.getItemId ();
    if (id == android.R.id.home) {
        Intent resultIntent = new Intent ();
        resultIntent.putExtra ("isEdited", isEdited);
        setResult (RESULT_OK, resultIntent);
        finish ();
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45727516_45727680_5_15
45727516_45727685_5_16
Title: anonymous inner class not affect outer class member 
----------------------------------------

public void method () {
    System.out.println (foo);
    new Object () {
        public void bar () {
            foo = "barr";
            System.out.println (foo);
        }}

    .bar ();
    System.out.println (foo);
}
----------------------------------------

public void method () {
    System.out.println (foo);
    new Object () {
        public void bar () {
            foo = "bar";
            System.out.println (foo);
        }}

    .bar ();
    System.out.println (foo);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45736184_45736870_3_22
45736184_45736965_9_34
Title: Merging all .txt files in a folder using Java.IO 
----------------------------------------

public static void main (String [] args) throws IOException {
    Path output = Paths.get ("true1.txt");
    Path directory = Paths.get ("E:\\A");
    Stream < Path > filesToProcess = Files.list (directory);
    filesToProcess.forEach (path -> {
        Stream < String > lines = Files.lines (path);
        lines.forEach (line -> {
            String lineToWrite = line + System.lineSeparator ();
            Files.write (output, lineToWrite.getBytes (StandardCharsets.UTF_8));
        });
    });
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File f = new File ("./src/main/resources");
    File merged = new File ("./src/main/resources/merged.txt");
    if (! merged.exists ()) {
        merged.createNewFile ();
    }
    PrintWriter pw = new PrintWriter (merged);
    String [] s = f.list ();
    System.out.println ("list of files-> " + Arrays.asList (s));
    for (String s1 : s) {
        File f1 = new File (f, s1);
        BufferedReader br = new BufferedReader (new FileReader (f1));
        String line = "";
        while ((line = br.readLine ()) != null) {
            System.out.println (line);
            pw.println (line);
        }
    }
    pw.flush ();
    pw.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45736184_45736870_3_22
45736184_45737255_1_28
Title: Merging all .txt files in a folder using Java.IO 
----------------------------------------

public static void main (String [] args) throws IOException {
    Path output = Paths.get ("true1.txt");
    Path directory = Paths.get ("E:\\A");
    Stream < Path > filesToProcess = Files.list (directory);
    filesToProcess.forEach (path -> {
        Stream < String > lines = Files.lines (path);
        lines.forEach (line -> {
            String lineToWrite = line + System.lineSeparator ();
            Files.write (output, lineToWrite.getBytes (StandardCharsets.UTF_8));
        });
    });
}
----------------------------------------

public static void main (String [] args) {
    try (PrintWriter pw = new PrintWriter ("true1.txt")) {
        File f = new File ("E:\\A");
        String [] s = f.list ();
        if (s == null) {
            throw new IOException ("Directory doesn't exist: " + f);
        }
        for (String s1 : s) {
            File f1 = new File (f, s1);
            if (! f1.isFile ()) {
                continue;
            }
            try (Reader reader = new FileReader (f1); BufferedReader br = new BufferedReader (reader)) {
                String line = br.readLine ();
                while (line != null) {
                    pw.println (line);
                    line = br.readLine ();
                }
            }
        }
    } catch (Throwable e) {
        Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45736184_45736965_9_34
45736184_45737255_1_28
Title: Merging all .txt files in a folder using Java.IO 
----------------------------------------

public static void main (String [] args) throws IOException {
    File f = new File ("./src/main/resources");
    File merged = new File ("./src/main/resources/merged.txt");
    if (! merged.exists ()) {
        merged.createNewFile ();
    }
    PrintWriter pw = new PrintWriter (merged);
    String [] s = f.list ();
    System.out.println ("list of files-> " + Arrays.asList (s));
    for (String s1 : s) {
        File f1 = new File (f, s1);
        BufferedReader br = new BufferedReader (new FileReader (f1));
        String line = "";
        while ((line = br.readLine ()) != null) {
            System.out.println (line);
            pw.println (line);
        }
    }
    pw.flush ();
    pw.close ();
}
----------------------------------------

public static void main (String [] args) {
    try (PrintWriter pw = new PrintWriter ("true1.txt")) {
        File f = new File ("E:\\A");
        String [] s = f.list ();
        if (s == null) {
            throw new IOException ("Directory doesn't exist: " + f);
        }
        for (String s1 : s) {
            File f1 = new File (f, s1);
            if (! f1.isFile ()) {
                continue;
            }
            try (Reader reader = new FileReader (f1); BufferedReader br = new BufferedReader (reader)) {
                String line = br.readLine ();
                while (line != null) {
                    pw.println (line);
                    line = br.readLine ();
                }
            }
        }
    } catch (Throwable e) {
        Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4574713_14611845_12_37
4574713_4574887_7_20
Title: generate random number with restrictions 
----------------------------------------

public static void main (String [] args) {
    Random num = new Random ();
    int num0, num1, num2, num3, num4, num5, num6, num7;
    num0 = num.nextInt (7) + 1;
    num1 = num.nextInt (8);
    num2 = num.nextInt (8);
    num3 = num.nextInt (643) + 101;
    num4 = num.nextInt (10);
    num5 = num.nextInt (10);
    num6 = num.nextInt (10);
    num7 = num.nextInt (10);
    String randnum = "A random phone number: ";
    System.out.print (randnum);
    System.out.print (num0);
    System.out.print (num1);
    System.out.print (num2);
    System.out.print ("-" + num3 + "-");
    System.out.print (num4);
    System.out.print (num5);
    System.out.print (num6);
    System.out.println (num7);
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int num1 = (rand.nextInt (7) + 1) * 100 + (rand.nextInt (8) * 10) + rand.nextInt (8);
    int num2 = rand.nextInt (743);
    int num3 = rand.nextInt (10000);
    DecimalFormat df3 = new DecimalFormat ("000");
    DecimalFormat df4 = new DecimalFormat ("0000");
    String phoneNumber = df3.format (num1) + "-" + df3.format (num2) + "-" + df4.format (num3);
    System.out.println (phoneNumber);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45761225_45761304_3_22
45761225_45761428_2_19
Title: How do I make Double.parseDouble(args[0]); work? 
----------------------------------------

public static void main (String [] args) {
    if (args.length > 0) {
        int n;
        int df;
        int i;
        n = Integer.parseInt (args [0]);
        df = 1;
        i = n;
        while (i > 0) {
            df = df * i;
            i = i - 2;
        }
        System.out.println (df);
    }
}
----------------------------------------

public static void main (String [] args) {
    int n;
    int df;
    int i;
    for (String arg : args) {
        n = Integer.parseInt (arg);
        df = 1;
        i = n;
        while (i > 0) {
            df = df * i;
            i = i - 2;
        }
        System.out.println (df);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45767355_45768296_9_118
45767355_45768326_8_19
Title: How to get level of each object in json where objects can have any number of children of same object type 
----------------------------------------

public static void main (String [] args) throws Exception {
    String JSON_STRING = "{\n" + "  \"name\": \"Lao Lao\",\n" + "  \"title\": \"general manager\",\n" + "  \"children\": [\n" + "    {\n" + "      \"name\": \"Bao Miao\",\n" + "      \"title\": \"department manager\",\n" + "      \"children\": [\n" + "        {\n" + "          \"name\": \"Li Jing\",\n" + "          \"title\": \"senior engineer\"\n" + "        },\n" + "        {\n" + "          \"name\": \"Li Xin\",\n" + "          \"title\": \"senior engineer\",\n" + "          \"children\": [\n" + "            {\n" + "              \"name\": \"To To\",\n" + "              \"title\": \"engineer\"\n" + "            },\n" + "            {\n" + "              \"name\": \"Fei Fei\",\n" + "              \"title\": \"engineer\"\n" + "            },\n" + "            {\n" + "              \"name\": \"Xuan Xuan\",\n" + "              \"title\": \"engineer\"\n" + "            }\n" + "          ]\n" + "        }\n" + "      ]\n" + "    },\n" + "    {\n" + "      \"name\": \"Su Miao\",\n" + "      \"title\": \"department manager\",\n" + "      \"children\": [\n" + "        {\n" + "          \"name\": \"Pang Pang\",\n" + "          \"title\": \"senior engineer\"\n" + "        },\n" + "        {\n" + "          \"name\": \"Hei Hei\",\n" + "          \"title\": \"senior engineer\",\n" + "          \"children\": [\n" + "            {\n" + "              \"name\": \"Xiang Xiang\",\n" + "              \"title\": \"UE engineer\"\n" + "            },\n" + "            {\n" + "              \"name\": \"Dan Dan\",\n" + "              \"title\": \"engineer\"\n" + "            },\n" + "            {\n" + "              \"name\": \"Zai Zai\",\n" + "              \"title\": \"engineer\"\n" + "            }\n" + "          ]\n" + "        }\n" + "      ]\n" + "    }\n" + "  ]\n" + "}] \n";
    JSONObject obj = new JSONObject (JSON_STRING);
    Deque < JSONObject > deque = new ArrayDeque < > ();
    Map < String, String > res = new HashMap < > ();
    int level = 1;
    res.put ("NULL", obj.getString ("name") + "-" + level);
    deque.add (obj);
    Map < String, Integer > levelmap = new HashMap < > ();
    levelmap.put (obj.getString ("name"), 1);
    while (! deque.isEmpty ()) {
        JSONObject u = deque.poll ();
        try {
            JSONArray children = u.getJSONArray ("children");
            for (int i = 0;
            i < children.length (); i ++) {
                deque.add (children.getJSONObject (i));
                levelmap.put (children.getJSONObject (i).getString ("name"), levelmap.get (u.getString ("name")) + 1);
                res.put (children.getJSONObject (i).getString ("name"), u.getString ("name") + "-" + levelmap.get (children.getJSONObject (i).getString ("name")));
            }
        } catch (JSONException jex) {
            System.out.println ("end of the tree");
        }
    }
    String str = new String ("[]");
    JSONArray jsonArray = new JSONArray (str);
    System.out.println (res);
    for (String key : res.keySet ()) {
        String st = new String ("{}");
        JSONObject jsonObject = new JSONObject (st);
        String [] tok = res.get (key).split ("-");
        String child = tok [0];
        String mylevel = tok [1];
        jsonObject.put ("name", key);
        jsonObject.put ("level", mylevel);
        jsonObject.put ("parent", child);
        jsonArray.put (jsonObject);
    }
    System.out.println (jsonArray.toString (2));
}
----------------------------------------

public static void main (String a []) {
    Gson g = new Gson ();
    try {
        Employee e = g.fromJson (new JsonReader (new FileReader ("file.json")), Employee.class);
        parseEmployees (e);
        printEmployee (e);
    } catch (Exception e1) {
        e1.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45767435_45839124_14_23
45767435_45873016_12_21
Title: spring data mongo find method has no return 
----------------------------------------

public Bar (String time, double open, double high, double low, double close, long volume, int count, double wap) {
    this.m_time = time;
    this.m_open = open;
    this.m_high = high;
    this.m_low = low;
    this.m_close = close;
    this.m_volume = volume;
    this.m_count = count;
    this.m_wap = wap;
}
----------------------------------------

public Bar (String m_time, double m_open, double m_high, double m_low, double m_close, long m_volume, int m_count, double m_wap) {
    this.m_time = m_time;
    this.m_open = m_open;
    this.m_high = m_high;
    this.m_low = m_low;
    this.m_close = m_close;
    this.m_volume = m_volume;
    this.m_count = m_count;
    this.m_wap = m_wap;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45775697_45775976_1_13
45775697_45778751_1_16
Title: Update the attributes of a java object from a thread? 
----------------------------------------

public void changeVal () throws InterruptedException {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            val = 1;
        }}

    );
    t.start ();
    t.join ();
}
----------------------------------------

public void changeVal () throws InterruptedException {
    if (lock.tryLock ()) {
        try {
            new Thread (new Runnable () {
                @Override
                public void run () {
                    val = val + 1;
                }}

            ).start ();
        } finally {
            lock.unlock ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45785136_45837608_64_82
45785136_45837608_90_106
Title: Displaying data in main Activity from two other Activities 
----------------------------------------

public void onClick (View v) {
    Log.i (CLASS_TAG, "onClick started...");
    Intent editIntent;
    Activity sourceActivity;
    Class destinationClass;
    sourceActivity = TestExplicitIntents.this;
    destinationClass = EditMessage.class;
    editIntent = new Intent (sourceActivity, destinationClass);
    editIntent.putExtra ("CURRENT_MESSAGE", TestExplicitIntents.this.message);
    startActivityForResult (editIntent, NEW_MESSAGE_REQUEST);
}
----------------------------------------

public void onClick (View v) {
    Log.i (CLASS_TAG, "onClick started...");
    Intent editSendIntent;
    Activity startActivity;
    Class endClass;
    startActivity = TestExplicitIntents.this;
    endClass = EditSendTo.class;
    editSendIntent = new Intent (startActivity, endClass);
    editSendIntent.putExtra ("CURRENT_PHONE", TestExplicitIntents.this.phone);
    startActivityForResult (editSendIntent, NEW_PHONE_REQUEST);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45814032_45814403_1_24
45814032_45814601_1_15
Title: how auto hide button after open activity? 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.action_other1 :
            button1.setOnClickListener (new OnClickListener () {
                @Override
                public void onClick (View v) {
                    button.setVisibility (View.VISIBLE);
                }}

            );
            break;
        default :
            break;
    }
    return false;
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.action_hide :
            if (button1IsVisible.getVisibility () == View.VISIBLE) {
                bt_call.setVisibility (View.INVISIBLE);
            } else bt_call.setVisibility (View.VISIBLE);

            break;
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4581877_31099148_1_24
4581877_5240291_1_26
Title: Validating IPv4 string in Java 
----------------------------------------

public static boolean validIP (String ip) {
    if (ip == null || ip.length () < 7 || ip.length () > 15) return false;

    try {
        int x = 0;
        int y = ip.indexOf ('.');
        if (y == - 1 || ip.charAt (x) == '-' || Integer.parseInt (ip.substring (x, y)) > 255) return false;

        x = ip.indexOf ('.', ++ y);
        if (x == - 1 || ip.charAt (y) == '-' || Integer.parseInt (ip.substring (y, x)) > 255) return false;

        y = ip.indexOf ('.', ++ x);
        return ! (y == - 1 || ip.charAt (x) == '-' || Integer.parseInt (ip.substring (x, y)) > 255 || ip.charAt (++ y) == '-' || Integer.parseInt (ip.substring (y, ip.length ())) > 255 || ip.charAt (ip.length () - 1) == '.');
    } catch (NumberFormatException e) {
        return false;
    }
}
----------------------------------------

public static boolean validIP (String ip) {
    try {
        if (ip == null || ip.isEmpty ()) {
            return false;
        }
        String [] parts = ip.split ("\\.");
        if (parts.length != 4) {
            return false;
        }
        for (String s : parts) {
            int i = Integer.parseInt (s);
            if ((i < 0) || (i > 255)) {
                return false;
            }
        }
        if (ip.endsWith (".")) {
            return false;
        }
        return true;
    } catch (NumberFormatException nfe) {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4584541_43528423_1_18
4584541_48550127_1_28
Title: Check if a class is subclass of another class in Java 
----------------------------------------

protected boolean isSubclassOf (Class < ? > clazz, Class < ? > superClass) {
    if (superClass.equals (Object.class)) {
        return true;
    }
    if (clazz.equals (superClass)) {
        return true;
    } else {
        clazz = clazz.getSuperclass ();
        if (clazz.equals (Object.class)) {
            return false;
        }
        return isSubclassOf (clazz, superClass);
    }
}
----------------------------------------

static public boolean isSubclassOf (final Class < ? > clazz, final Class < ? > possibleSuperClass) {
    if (clazz == null || possibleSuperClass == null) {
        return false;
    } else if (clazz.equals (possibleSuperClass)) {
        return true;
    } else {
        final boolean isSubclass = isSubclassOf (clazz.getSuperclass (), possibleSuperClass);
        if (! isSubclass && clazz.getInterfaces () != null) {
            for (final Class < ? > inter : clazz.getInterfaces ()) {
                if (isSubclassOf (inter, possibleSuperClass)) {
                    return true;
                }
            }
        }
        return isSubclass;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45852851_45853172_1_19
45852851_45854075_1_18
Title: Sleep causing frame with invisible content 
----------------------------------------

@Override
public void actionPerformed (ActionEvent e) {
    JMenuItem source = (JMenuItem) e.getSource ();
    if (source == itmOpen) {
        final JDialog message = new Message ();
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    TimeUnit.SECONDS.sleep (3);
                } catch (InterruptedException ex) {
                }
                WindowEvent windowClosing = new WindowEvent (message, WindowEvent.WINDOW_CLOSING);
                message.dispatchEvent (windowClosing);
            }}

        ).start ();
    }
}
----------------------------------------

@Override
public void actionPerformed (ActionEvent e) {
    JMenuItem source = (JMenuItem) e.getSource ();
    if (source == itmOpen) {
        JDialog message = new Message ();
        Timer timer = new Timer (1000 * 3, new ActionListener () {
            public void actionPerformed (ActionEvent e) {
                WindowEvent windowClosing = new WindowEvent (message, WindowEvent.WINDOW_CLOSING);
                message.dispatchEvent (windowClosing);
            }}

        );
        timer.setRepeats (false);
        timer.start ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45867082_45869358_1_17
45867082_45880166_1_14
Title: Difficulty with retrieving value firebase 
----------------------------------------

public void sendFriendRequest (final String userID) {
    mDatabase.child ("Users").addListenerForSingleValueEvent (new ValueEventListener () {
        @Override
        public void onDataChange (DataSnapshot dataSnapshotTwo) {
            for (DataSnapshot miniSnapshot : dataSnapshotTwo.getChildren ()) {
                User user = (User) miniSnapshot.getValue ();
                System.out.println (user.username);
            }
        }@Override
        public void onCancelled (DatabaseError firebaseError) {
            Log.e ("MainActivity", "onCancelled", firebaseError.toException ());
        }}

    );
}
----------------------------------------

public void sendFriendRequest (final String userID) {
    mDatabase.child ("Users").child (uniqueUserID).child ("username").addListenerForSingleValueEvent (new ValueEventListener () {
        @Override
        public void onDataChange (DataSnapshot dataSnapshotTwo) {
            String currentUserName = dataSnapshotTwo.getValue (String.class);
            Log.d ("TAG", currentUserName);
        }@Override
        public void onCancelled (DatabaseError firebaseError) {
            Log.e ("MainActivity", "onCancelled", firebaseError.toException ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45867114_45898801_36_49
45867114_45898801_80_91
Title: "android oauth 1.0a scribe = exception" 
----------------------------------------

protected String doInBackground (Void...params) {
    String PROTECTED_RESOURCE_URL = "http://artmurka.com/uapi/shop/request?page=categories";
    try {
        requestToken = service.getRequestToken ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (ExecutionException e) {
        e.printStackTrace ();
    }
    String url = service.getAuthorizationUrl (requestToken);
    return url;
}
----------------------------------------

protected OAuth1AccessToken doInBackground (Void...params) {
    try {
        accessToken = service.getAccessToken (requestToken, verifier);
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (ExecutionException e) {
        e.printStackTrace ();
    }
    return accessToken;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45876079_45876175_1_15
45876079_45876278_1_10
Title: How to verify if a 2D array/grid is n^2*n^2 
----------------------------------------

public boolean isValid () {
    if (theGrid.length == 0) {
        return true;
    }
    if (theGrid.length != theGrid [0].length) {
        return false;
    }
    final int n = theGrid.length;
    final double sqrt = Math.sqrt (n);
    return ((int) sqrt) == sqrt;
}
----------------------------------------

static boolean isValid (int [] [] array) {
    if (array.length == 0) return false;

    double sqrt = Math.sqrt (array.length);
    int x = (int) sqrt;
    if (Math.pow (sqrt, 2) != Math.pow (x, 2)) return false;

    return Arrays.stream (array).filter (ints -> ints.length != array.length).count () == 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4588852_4589159_73_127
4588852_4589159_7_69
Title: java socket programming problem 
----------------------------------------

public void run () {
    Socket skt = null;
    BufferedReader br = null;
    BufferedWriter bw = null;
    try {
        System.out.println ("Client: about to create socket");
        skt = new Socket (InetAddress.getLocalHost (), 6666);
        System.out.println ("Client: socket created");
    } catch (IOException e) {
        System.out.println ("Client: socket creation failure");
    }
    try {
        System.out.println ("Client: creating streams");
        br = new BufferedReader (new InputStreamReader (skt.getInputStream ()));
        bw = new BufferedWriter (new OutputStreamWriter (skt.getOutputStream ()));
        System.out.println ("Client: stream done");
    } catch (IOException e) {
        System.out.println ("Client: stream failed");
    }
    System.out.println ("Client: requesting");
    try {
        bw.write ("Hi! I am Client!\n");
        bw.flush ();
    } catch (IOException e) {
        System.out.println ("Client: requesting failed");
    }
    System.out.println ("Client: requesting finished");
    System.out.println ("Client: reading the respond");
    try {
        String line = null;
        line = br.readLine ();
        System.out.println ("Client: server said-> " + line);
    } catch (IOException e) {
        System.out.println ("Client: reading failed");
    }
    System.out.println ("Client: reading fished");
    System.out.println ("Client: is finishing");
    try {
        br.close ();
        bw.close ();
        skt.close ();
    } catch (IOException e) {
        System.out.println ("Client: finishing failed");
    }
    System.out.println ("Client: done");
}
----------------------------------------

public void run () {
    ServerSocket sSkt = null;
    Socket skt = null;
    BufferedReader br = null;
    BufferedWriter bw = null;
    try {
        System.out.println ("Server: is about to create socket");
        sSkt = new ServerSocket (6666);
        System.out.println ("Server: socket created");
    } catch (IOException e) {
        System.out.println ("Server: socket creation failure");
    }
    try {
        System.out.println ("Server: is listening");
        skt = sSkt.accept ();
        System.out.println ("Server: Connection Established");
    } catch (IOException e) {
        System.out.println ("Server: listening failed");
    }
    try {
        System.out.println ("Server: creating streams");
        br = new BufferedReader (new InputStreamReader (skt.getInputStream ()));
        bw = new BufferedWriter (new OutputStreamWriter (skt.getOutputStream ()));
        System.out.println ("Server: stream done");
    } catch (IOException e) {
        System.out.println ("Server: stream failed");
    }
    System.out.println ("Server: reading the request");
    try {
        String line = null;
        line = br.readLine ();
        System.out.println ("Server: client said-> " + line);
    } catch (IOException e) {
        System.out.println ("Server: reading failed");
    }
    System.out.println ("Server: reading fished");
    System.out.println ("Server: responding");
    try {
        bw.write ("Hi! I am server!\n");
        bw.flush ();
    } catch (IOException e) {
        System.out.println ("Server: responding failed");
    }
    System.out.println ("Server: responding finished");
    System.out.println ("Server: is finishing");
    try {
        br.close ();
        bw.close ();
        skt.close ();
        sSkt.close ();
    } catch (IOException e) {
        System.out.println ("Server: finishing failed");
    }
    System.out.println ("Server: done");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45890997_45891145_5_13
45890997_45891257_7_44
Title: How to create a folder to further create .csv files in? 
----------------------------------------

public static void main (String [] args) {
    Path pathToFile = Paths.get ("dirname/filename.csv");
    try {
        Files.createDirectories (pathToFile.getParent ());
        Files.createFile (pathToFile);
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    String headerLabels [] = {"COURSE ID", "TEAM ID", "STUDENT FIRST NAME", "STUDENT LAST NAME", "STUDENT ID", "ASSIGNMENT ID", "DATE SUBMITTED", "TIME SUBMITTED", "SUBMITTED BY"};
    String headerValues [] [] = {{"CMPS280-02", "Invokers01", "James", "Brown", "w0479045", "H01", "8/25/2017", "1:14PM", "James Brown"}, {"CMPS280-01", "Winners03", "Jacob", "Harley", "w0389342", "H03", "8/23/2017", "7:24PM", "Jacob Harley"}, {"SE101-02", "CodeIt00", "Keith", "Dillinger", "w0782345", "S04", "8/25/2017", "1:23AM", "Keith Dillinger"}};
    String path1 = "SUBMIT";
    String path2 = "SUBMIT/" + headerValues [0] [0] + "_" + headerValues [0] [5] + "_" + headerValues [0] [1] + "_" + headerValues [0] [4] + ".csv";
    try {
        File file1 = new File (path1);
        if (! file1.isDirectory ()) {
            file1.mkdir ();
        }
        File file = new File (path2);
        FileWriter writer = new FileWriter (file);
        writer.close ();
    } catch (IOException e) {
        System.out.println ("IOException: " + e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45921034_45921215_1_20
45921034_45921280_2_11
Title: Same exception type with different error message 
----------------------------------------

public static void main (String [] args) throws Exception {
    String path = "path";
    String path2 = "path2";
    try {
        readFile (path);
    } catch (IOException e) {
        throw new Exception ("read file exception", e);
    }
    try {
        convert (path2);
    } catch (IOException e) {
        throw new Exception ("convert exception", e);
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        String path = "";
        readFile (path);
        String file = "";
        convert (file);
    } catch (MyException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45940023_45940195_9_29
45940023_45940252_4_27
Title: Password text Field 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText passwordField = (EditText) findViewById (R.id.editText);
    Button submitButton = (Button) findViewById (R.id.button);
    String passwordA = "root";
    submitButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            String password = passwordField.getText ().toString ();
            startActivity (new Intent (MainActivity.this, NewActivity.class));
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final String passwordA = "root";
    EditText editText = (EditText) findViewById (R.id.editText);
    Button button = (Button) findViewById (R.id.button);
    TextView textView2 = (TextView) findViewById (R.id.textView2);
    button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            textView2.setText (editText.getText ().toString ().trim ());
            if (editText.getText ().toString ().trim ().equals (passwordA)) {
                Intent i = new Intent (MainActivity.this, SecondActivity.class);
                startActivity (i);
            } else {
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45965265_46009341_50_66
45965265_46009341_77_93
Title: Spring Data REST prevent InvalidFormatException 
----------------------------------------

private void addErrors (Map < String, Object > errorAttributes, BindingResult bindingResult, Locale locale) {
    List < ErrorDTO > errors = new ArrayList < > ();
    for (ObjectError error : bindingResult.getAllErrors ()) {
        ErrorDTO e = new ErrorDTO ();
        e.setCode (error.getCode ());
        e.setMessage (localizedMessage (error, locale));
        if (error instanceof FieldError) {
            FieldError fieldError = (FieldError) error;
            e.setField (fieldError.getField ());
            e.setRejectedValue (fieldError.getRejectedValue ());
        }
        errors.add (e);
    }
    errorAttributes.put ("errors", errors);
}
----------------------------------------

private void addErrors (Map < String, Object > errorAttributes, InvalidFormatException ex, Locale locale) {
    List < ErrorDTO > errors = new ArrayList < > ();
    ErrorDTO e = new ErrorDTO ();
    e.setCode ("InvalidFormatException");
    String message = localizedMessage ("InvalidFormatException", new Object [] {ex.getTargetType ().getName (), ex.getValue ()}, locale);
    e.setMessage (message);
    e.setField (getInvalidFormatExceptionFieldName (ex));
    e.setRejectedValue (ex.getValue ());
    errors.add (e);
    errorAttributes.put ("errors", errors);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45977567_45982737_127_155
45977567_45982737_224_231
Title: Send a string message continously with delay via Bluetooth 
----------------------------------------

public void run () {
    super.run ();
    byte [] mmBuffer = new byte [1024];
    int mmBytes;
    while (true) {
        try {
            mmBytes = mmInStream.read (mmBuffer);
            Message readMsg = h.obtainMessage (handlerState, mmBytes, - 1, mmBuffer);
            readMsg.sendToTarget ();
        } catch (IOException e) {
            e.printStackTrace ();
            Toast.makeText (getBaseContext (), "Input stream was disconnected", Toast.LENGTH_LONG).show ();
            break;
        }
    }
}
----------------------------------------

public void run () {
    HandlerDelay.postDelayed (new Runnable () {
        @Override
        public void run () {
            mConncetedThread.write ();
        }}

    , 500);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
45979568_45980348_2_17
45979568_45980741_1_19
Title: Java fill an array with non duplicate records 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] arr = new int [3];
    int counter = 0;
    while (true) {
        System.out.println ("Enter a number less than 11.");
        int i = sc.nextInt ();
        if (i < 11 && notFound (i, arr)) {
            arr [counter] = i;
            counter ++;
        }
        if (counter == arr.length) break;

    }
    System.out.println (Arrays.toString (arr));
}
----------------------------------------

public static void main (String...args) {
    Integer [] arr = new Integer [5];
    Scanner sc = new Scanner (System.in);
    for (int j = 0;
    j < arr.length;) {
        System.out.println ("Enter a number less than 11.");
        Integer i = sc.nextInt ();
        if (i < 11 && ! Arrays.stream (arr).anyMatch (a -> a == i)) {
            arr [j] = i;
            j ++;
        }
    }
    System.out.println ("type 1 for ascending and 2 for descending order");
    int choice = sc.nextInt ();
    if (choice == 1) Arrays.sort (arr);
    else if (choice == 2) Arrays.sort (arr, Collections.reverseOrder ());

    System.out.println (Arrays.toString (arr));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46009224_46009265_1_27
46009224_46009892_1_14
Title: Is it possible to insert records to MySQL with different parameter (keys & values) each time using the same insert function in Java? 
----------------------------------------

public void insert (String fname, String lname, Date created, boolean isAdmin, int points) {
    String myDriver = "org.gjt.mm.mysql.Driver";
    String myUrl = "jdbc:mysql://localhost/test";
    Class.forName (myDriver);
    Connection conn = DriverManager.getConnection (myUrl, "root", "");
    Calendar calendar = Calendar.getInstance ();
    java.sql.Date startDate = new java.sql.Date (calendar.getTime ().getTime ());
    String query = " insert into users (first_name, last_name, date_created, is_admin, num_points)" + " values (?, ?, ?, ?, ?)";
    PreparedStatement preparedStmt = conn.prepareStatement (query);
    preparedStmt.setString (1, fname);
    preparedStmt.setString (2, lname);
    preparedStmt.setDate (3, created);
    preparedStmt.setBoolean (4, isAdmin);
    preparedStmt.setInt (5, points);
    preparedStmt.execute ();
    conn.close ();
}
----------------------------------------

private String insert (String tableName, List < String > columns, List < String > values) {
    StringBuilder stringBuilder = new StringBuilder ("INSERT INTO " + tableName + " (");
    for (String column : columns) {
        stringBuilder.append (column + ",");
    }
    stringBuilder.deleteCharAt (stringBuilder.lastIndexOf (","));
    stringBuilder.append (") VALUES (");
    for (String value : values) {
        stringBuilder.append (value + ",");
    }
    stringBuilder.deleteCharAt (stringBuilder.lastIndexOf (","));
    stringBuilder.append (")");
    return stringBuilder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46013361_46016639_136_156
46013361_46016639_85_102
Title: How to get JSON Array from android to PHP 
----------------------------------------

public void onErrorResponse (VolleyError error) {
    if (error instanceof NetworkError) {
        callback.NetworkError (error.toString ());
        Toast.makeText (mCtx, "No internet connection", Toast.LENGTH_LONG).show ();
    } else if (error instanceof TimeoutError) {
        callback.NetworkError (error.toString ());
        Toast.makeText (mCtx, "No server connection", Toast.LENGTH_LONG).show ();
    } else if (error.networkResponse != null && error.networkResponse.statusCode == 500) {
        callback.NetworkError (error.networkResponse.headers.get ("message"));
        String mess = error.networkResponse.headers.get ("message");
        if (mess != null && ! mess.isEmpty ()) {
            Toast.makeText (mCtx, error.networkResponse.headers.get ("message"), Toast.LENGTH_LONG).show ();
        }
    } else {
        callback.NetworkError ("NetworkError: " + error.toString ());
    }

}
----------------------------------------

public void onErrorResponse (VolleyError error) {
    if (error instanceof NetworkError) {
        callback.NetworkError (error.toString ());
        Toast.makeText (mCtx, "No internet connection", Toast.LENGTH_LONG).show ();
    } else if (error.networkResponse != null && error.networkResponse.statusCode == 500 || error.networkResponse != null && error.networkResponse.statusCode == 301) {
        callback.NetworkError (error.networkResponse.headers.get ("message"));
        String mess = error.networkResponse.headers.get ("message");
        if (mess != null && ! mess.isEmpty ()) {
            Toast.makeText (mCtx, error.networkResponse.headers.get ("message"), Toast.LENGTH_LONG).show ();
        }
    } else {
        callback.NetworkError ("Network Error: " + error.toString ());
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4602210_20182904_40_73
4602210_4602658_4_28
Title: XMLEncoder in java for serialization 
----------------------------------------

public static void main (String [] args) {
    PersonBean person1 = new PersonBean ();
    person1.setName ("Joe");
    person1.setAge (30);
    PersonBean person2 = new PersonBean ();
    person2.setName ("Jane");
    person2.setAge (25);
    ArrayList arrayList1 = new ArrayList ();
    arrayList1.add (person1);
    arrayList1.add (person2);
    try {
        System.out.println ("List 'arrayList1' = '" + arrayList1 + "'");
        FileOutputStream outputStream = new FileOutputStream ("PersonBean.xml");
        XMLEncoder encoder = new XMLEncoder (outputStream);
        encoder.writeObject (arrayList1);
        encoder.close ();
        Thread.sleep (10000);
    } catch (Exception ex) {
    }
    try {
        FileInputStream inputStream = new FileInputStream ("PersonBean.xml");
        XMLDecoder decoder = new XMLDecoder (inputStream);
        ArrayList < PersonBean > arrayList2 = (ArrayList < PersonBean >) decoder.readObject ();
        decoder.close ();
        System.out.println ("List 'arrayList2' = '" + arrayList2 + "'");
    } catch (Exception ex) {
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        final List < TestBean > list = new ArrayList < TestBean > ();
        list.add (new TestBean ("Henry", 42));
        list.add (new TestBean ("Tom", 11));
        System.out.println ("Writing list to file " + FILENAME + ": " + list);
        final XMLEncoder encoder = new XMLEncoder (new BufferedOutputStream (new FileOutputStream (FILENAME)));
        encoder.writeObject (list);
        encoder.close ();
        final XMLDecoder decoder = new XMLDecoder (new FileInputStream (FILENAME));
        final List < TestBean > listFromFile = (List < TestBean >) decoder.readObject ();
        decoder.close ();
        System.out.println ("Reading list: " + listFromFile);
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46022118_46022256_1_17
46022118_46022595_1_10
Title: Shift array to the left 
----------------------------------------

public static void shift (int [] arr, int offs) {
    offs %= arr.length;
    offs = offs < 0 ? arr.length + offs : offs;
    if (offs > 0) {
        for (int i = 0, j = arr.length - 1;
        i < j; i ++, j --) swap (arr, i, j);

        for (int i = 0, j = offs - 1;
        i < j; i ++, j --) swap (arr, i, j);

        for (int i = offs, j = arr.length - 1;
        i < j; i ++, j --) swap (arr, i, j);

    }
}
----------------------------------------

public List < Integer > shift (int [] d) {
    List < Integer > intList = new ArrayList < Integer > ();
    for (int index = 0;
    index < d.length; index ++) {
        intList.add (d [index]);
    }
    Collections.rotate (intList, - 1);
    return intList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46026477_46026571_1_21
46026477_46028143_15_38
Title: Printing methods from main method not working - Java 
----------------------------------------

public static void main (String [] args) {
    int [] randomNumbers = new int [20];
    randomNumbers = generateRandom (20);
    System.out.print ("Array: ");
    printArray (randomNumbers);
    System.out.print ("Reversed: ");
    printArray (reverse (randomNumbers));
    System.out.print ("Sorted: ");
    printArray (sortArray (randomNumbers));
    System.out.print ("Adjacent Duplicates?: ");
    System.out.println (adjacentDuplicates (randomNumbers));
    System.out.print ("Duplicates at all?: ");
    System.out.println (adjacentDuplicates (sortArray (randomNumbers)));
}
----------------------------------------

public static void main (String [] args) {
    System.out.print ("The Random array is: ");
    int [] randomNumbers = new int [20];
    randomNumbers = generateRandom (20);
    printArray (randomNumbers);
    System.out.println ();
    System.out.println ("The Sorted array is: ");
    sortArray (randomNumbers);
    printArray (randomNumbers);
    System.out.println ();
    System.out.println ("The Reverse array is: ");
    printArray (reverse (randomNumbers));
    System.out.println ();
    System.out.println ("It is" + "this array has adjacent duplicates");
    if (adjacentDuplicates (randomNumbers)) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46035979_46038122_1_16
46035979_46041425_21_33
Title: How to retrieve element from ArrayList containing long array 
----------------------------------------

public static void main (String [] args) throws Exception {
    ArrayList < long [] > dp = new ArrayList < > ();
    for (int i = 0;
    i < 3; i ++) {
        dp.add (new long [] {1L, 2L, 3L});
    }
    dp.add (new long [5]);
    for (long [] ls : dp) {
        for (long l : ls) {
            System.out.println ("long:" + l);
        }
        System.out.println ("next element in the list");
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < MyObject > dp = new ArrayList ();
    int m = 3;
    int n = 5;
    for (int i = 0;
    i < m; i ++) {
        dp.add (new MyObject (n));
    }
    for (MyObject ls : dp) {
        System.out.println (ls);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46051825_46052128_25_37
46051825_46053800_24_41
Title: unable to perform insert and delete in this java program arrayoutofbound errors 
----------------------------------------

public static int [] delete (int x, int Arr []) {
    int [] temp = Arr;
    for (int i = 0;
    i < Arr.length; i ++) {
        if (Arr [i] == x) {
            for (int j = i;
            j < Arr.length - 1; j ++) {
                Arr [j] = Arr [j + 1];
            }
            temp = Arrays.copyOfRange (Arr, 0, Arr.length - 1);
            break;
        }
    }
    return temp;
}
----------------------------------------

public int [] delete (int x, int Brr []) {
    int temp [] = new int [Brr.length - 1];
    for (int y = 0;
    y < Brr.length; y ++) {
        if (Brr [y] == x) {
            for (int n = y;
            n < Brr.length - 1; n ++) {
                Brr [n] = Brr [n + 1];
                System.out.println ("Deleted.");
            }
            for (int k = 0;
            k < temp.length; k ++) {
                temp [k] = Brr [k];
            }
        }
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
46051825_46052128_39_47
46051825_46053800_42_50
Title: unable to perform insert and delete in this java program arrayoutofbound errors 
----------------------------------------

public static void insert (int x, int Arr []) {
    int temp [] = new int [Arr.length + 1];
    for (int y = 0;
    y < Arr.length; y ++) {
        temp [y] = Arr [y];
    }
    temp [Arr.length] = x;
    Arr = temp;
}
----------------------------------------

public int [] insert (int x, int Brr []) {
    int temp [] = new int [Brr.length + 1];
    for (int y = 0;
    y < Brr.length; y ++) {
        temp [y] = Brr [y];
    }
    temp [Brr.length] = x;
    return temp;
}
----------------------------------------
