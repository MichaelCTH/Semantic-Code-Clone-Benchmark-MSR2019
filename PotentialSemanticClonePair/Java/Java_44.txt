$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22902111_22902132_1_12
22902111_22902195_1_11
Title: How can I find the maximum value within a string? 
----------------------------------------

public static int max (String s) {
    s = s.replaceAll ("\\D", "");
    int x = s.length ();
    int y = Character.getNumericValue (s.charAt (0));
    for (int i = 1;
    i < x; i ++) {
        if (Character.getNumericValue (s.charAt (i)) > y) {
            y = Character.getNumericValue (s.charAt (i));
        }
    }
    return y;
}
----------------------------------------

public static int max (String s) {
    int max = - 1;
    char current;
    for (int i = 0;
    i < s.length; i ++) {
        current = s.charAt (i);
        if (current > '0' && current < '9') if (current > max) max = current;

    }
    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22902111_22902174_1_17
22902111_22902195_1_11
Title: How can I find the maximum value within a string? 
----------------------------------------

public static int max (String s) {
    int x = s.length ();
    int y = 0;
    Character temp = null;
    for (int i = 0;
    i < x; i ++) {
        char ch = s.charAt (i);
        if (ch >= '0' && ch <= '9' && (temp == null || temp < ch)) {
            temp = s.chartAt (i);
        }
    }
    return Integer.valueOf (temp);
}
----------------------------------------

public static int max (String s) {
    int max = - 1;
    char current;
    for (int i = 0;
    i < s.length; i ++) {
        current = s.charAt (i);
        if (current > '0' && current < '9') if (current > max) max = current;

    }
    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22902568_22904265_25_43
22902568_22914129_15_39
Title: Validating text fields completeness with logical conditions 
----------------------------------------

public void start (Stage primaryStage) {
    FormattedTextField btn = new FormattedTextField ("^[1-9]+$");
    btn.setText ("Only Enter Numbers");
    FormattedTextField btn1 = new FormattedTextField ("^[a-z]+$");
    btn1.setText ("Only Enter Characters");
    VBox vBox = new VBox (20);
    vBox.getChildren ().addAll (btn, btn1);
    StackPane root = new StackPane ();
    root.getChildren ().add (vBox);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    TextField tf1 = new TextField ();
    TextField tf2 = new TextField ();
    TextField tf3 = new TextField ();
    TextField tf4 = new TextField ();
    TextField tf5 = new TextField ();
    TextField tf6 = new TextField ();
    Button button = new Button ("Submit");
    button.disableProperty ().bind (emptyTextFieldBinding (tf1).or (emptyTextFieldBinding (tf2)).or (emptyTextFieldBinding (tf3)).or (emptyTextFieldBinding (tf4)).or (emptyTextFieldBinding (tf5)).or (emptyTextFieldBinding (tf6)));
    VBox root = new VBox (5, tf1, tf2, tf3, tf4, tf5, tf6, button);
    root.setAlignment (Pos.CENTER);
    root.setPadding (new Insets (10));
    Scene scene = new Scene (root, 150, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22924455_22933315_25_49
22924455_22933315_7_21
Title: "My collision is buggy sometimes it violently vibrates or goes out of bounds" 
----------------------------------------

public void update (float deltaTime) {
    if (inBounds) {
        x += speedX * deltaTime;
        y += speedY * deltaTime;
        if (x + WIDTH >= 800) {
            speedX *= - 1;
            x = 800 - WIDTH - 1;
        }
        if (x <= 0) {
            speedX *= - 1;
            x = 1;
        }
        if (y >= 1280) {
            speedY *= - 1;
            y = 1279;
        }
        if (y <= 0) {
            speedY *= - 1;
            y = 1;
        }
    }
}
----------------------------------------

public void update (float deltaTime) {
    x += (direction == LEFT ? - 1 : + 1) * speed * deltaTime;
    if (x < 0) {
        x = 0;
        stop ();
    } else if (x > 800) {
        x = 800;
        stop ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22929746_22930274_15_22
22929746_22930274_24_37
Title: Mirroring function with apache commons 
----------------------------------------

public static MultivariateFunction invert (final MultivariateFunction function) {
    return new MultivariateFunction () {
        @Override
        public double value (double [] point) {
            return - function.value (point);
        }}

    ;
}
----------------------------------------

public static MultivariateMatrixFunction invert (final MultivariateMatrixFunction function) {
    return new MultivariateMatrixFunction () {
        @Override
        public double [] [] value (double [] point) {
            final double [] [] value = function.value (point);
            for (int i = 0;
            i < value.length; i ++) {
                for (int j = 0;
                j < value [i].length; j ++) {
                    value [i] [j] = - value [i] [j];
                }
            }
            return value;
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22929746_22930274_15_22
22929746_22930274_6_13
Title: Mirroring function with apache commons 
----------------------------------------

public static MultivariateFunction invert (final MultivariateFunction function) {
    return new MultivariateFunction () {
        @Override
        public double value (double [] point) {
            return - function.value (point);
        }}

    ;
}
----------------------------------------

public static BivariateFunction invert (final BivariateFunction function) {
    return new BivariateFunction () {
        @Override
        public double value (double x, double y) {
            return - function.value (x, y);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22929746_22930274_24_37
22929746_22930274_6_13
Title: Mirroring function with apache commons 
----------------------------------------

public static MultivariateMatrixFunction invert (final MultivariateMatrixFunction function) {
    return new MultivariateMatrixFunction () {
        @Override
        public double [] [] value (double [] point) {
            final double [] [] value = function.value (point);
            for (int i = 0;
            i < value.length; i ++) {
                for (int j = 0;
                j < value [i].length; j ++) {
                    value [i] [j] = - value [i] [j];
                }
            }
            return value;
        }}

    ;
}
----------------------------------------

public static BivariateFunction invert (final BivariateFunction function) {
    return new BivariateFunction () {
        @Override
        public double value (double x, double y) {
            return - function.value (x, y);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22931447_22931530_1_10
22931447_22931533_3_13
Title: create a instance of local inner class 
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22931447_22931530_1_10
22931447_22931543_3_11
Title: create a instance of local inner class 
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22931447_22931533_3_13
22931447_22931543_3_11
Title: create a instance of local inner class 
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------

void outerMethod () {
    class Inner {
        void innerMethod () {
            System.out.println ("inner class method...");
        }}

    Inner i = new Inner ();
    i.innerMethod ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22935729_22935823_1_13
22935729_22936056_1_21
Title: Java access ArrayList without for loop 
----------------------------------------

public String getVisible () {
    String rtn = null;
    for (Character b : brokenphrases) {
        if (characters.contains (b)) {
            rtn = rtn + b;
        } else {
            rtn = rtn + "*";
        }
    }
    return rtn;
}
----------------------------------------

public String getVisible () {
    String rtn = null;
    for (Character b : brokenphrases) {
        if (characters.contains (b)) {
            rtn = rtn + b;
        }
        if (b.toString ().equals (" ")) {
            rtn = rtn + " ";
        } else {
            rtn = rtn + "*";
        }
    }
    return rtn;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22939467_22939530_9_41
22939467_22940087_10_36
Title: How can i eliminate the if conditions in this scenario 
----------------------------------------

public static void main (String [] args) {
    double firstbuyer1 = 1.34;
    double firstbuyer2 = 2.34;
    double firstbuyer3 = 3.45;
    double firstbuyer4 = 2.45;
    double firstbuyer5 = 1.50;
    double open = 3.40;
    int positivevalue = 0;
    int lessthan2 = 0;
    if (firstbuyer1 == open || firstbuyer1 - open < 0.50) {
        positivevalue = positivevalue + 5;
    }
    if (firstbuyer1 - open < 2) {
        lessthan2 = lessthan2 + 4;
    }
}
----------------------------------------

public static void main (String [] args) {
    double firstbuyer1 = 1.34;
    double firstbuyer2 = 2.34;
    double firstbuyer3 = 3.45;
    double firstbuyer4 = 2.45;
    double firstbuyer5 = 1.50;
    double [] buyers = {firstbuyer1, firstbuyer2, firstbuyer3, firstbuyer4, firstbuyer5};
    double open = 3.40;
    int positivevalue = 0;
    int lessthan2 = 0;
    int lessthan3 = 0;
    int lessthan4 = 0;
    int lessthan5 = 0;
    for (double buyer : buyers) {
        positivevalue += buyerPositive (buyer, open);
        lessthan2 += buyerNegative (buyer, open, 2);
        lessthan3 += buyerNegative (buyer, open, 3);
        lessthan4 += buyerNegative (buyer, open, 4);
        lessthan5 += buyerNegative (buyer, open, 5);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22943468_23813845_9_35
22943468_47671992_1_18
Title: Print qr code in Java 
----------------------------------------

public void print (String printer, String pdfRoute) {
    log.info ("Printing document: " + pdfRoute);
    try {
        PDDocument document = null;
        document = PDDocument.load (pdfRoute);
        PrinterJob printJob = PrinterJob.getPrinterJob ();
        PrintService [] printService = PrinterJob.lookupPrintServices ();
        boolean printerFound = false;
        for (int i = 0;
        ! printerFound && i < printService.length; i ++) {
            if (printService [i].getName ().indexOf (printer) != - 1) {
                printJob.setPrintService (printService [i]);
                printerFound = true;
                break;
            }
        }
        if (printerFound) document.silentPrint (printJob);
        else log.info ("The printer: " + printer + "was NOT found");

    } catch (Exception e) {
        e.printStackTrace ();
        log.error ("Error when printing pdf", e);
    }
}
----------------------------------------

private void print () throws DocumentException, IOException {
    com.itextpdf.text.Document pdfDocument = new com.itextpdf.text.Document (PageSize.A4);
    java.io.File pdfFile = new java.io.File ("d:/qrCode.pdf");
    com.itextpdf.text.pdf.PdfWriter.getInstance (pdfDocument, new java.io.FileOutputStream (pdfFile));
    pdfDocument.open ();
    com.itextpdf.text.pdf.PdfPTable qrCodeTable = new com.itextpdf.text.pdf.PdfPTable (new float [] {1.0f});
    java.util.Map < com.itextpdf.text.pdf.qrcode.EncodeHintType, Object > hints = new java.util.HashMap < com.itextpdf.text.pdf.qrcode.EncodeHintType, Object > ();
    hints.put (com.itextpdf.text.pdf.qrcode.EncodeHintType.CHARACTER_SET, "ISO-8859-1");
    com.itextpdf.text.pdf.BarcodeQRCode qrCode = new com.itextpdf.text.pdf.BarcodeQRCode ("TEST CODE", 200, 200, hints);
    com.itextpdf.text.Image qrCodeImage = qrCode.getImage ();
    qrCodeTable.addCell (qrCodeImage);
    pdfDocument.add (qrCodeTable);
    pdfDocument.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22951825_38647870_1_17
22951825_45155262_1_11
Title: "method that accepts two integers and prints the sequence of numbers between them" 
----------------------------------------

public static void printRange (int x, int y) {
    if (y > x) {
        for (int j = x;
        j <= y; j ++) {
            int i = 1 * j + (x - 1);
            System.out.print (j + " ");
        }
    } else if (x > y) {
        for (int j = x;
        j >= y; j --) {
            int i = - 1 * y + (x - y + 1) * 2 + 1;
            System.out.print (j + " ");
        }
    } else {
        System.out.print (x);
    }

}
----------------------------------------

public void printRange (int int1, int int2) {
    if (int1 <= int2) {
        for (int i = int1;
        i <= int2; i ++) {
            System.out.print (i + " ");
        }
    } else {
        for (int i = int1;
        i >= int2; i --) {
            System.out.print (i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22960290_22960574_11_18
22960290_22960693_43_62
Title: JFrame - Output method results into a JLabel 
----------------------------------------

public static void main (final String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            showGUI (args);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    HelloWorldDisplay displayPanel = new HelloWorldDisplay ();
    jLab = new JLabel ();
    JButton okButton = new JButton ("New Word Combo");
    okButton.setFont (new Font ("Malina Light", Font.TRUETYPE_FONT, 14));
    okButton.addActionListener (new OkButtonActionListener ());
    JPanel content = new JPanel ();
    content.setLayout (new BorderLayout ());
    content.add (displayPanel, BorderLayout.CENTER);
    content.add (okButton, BorderLayout.SOUTH);
    content.add (jLab, BorderLayout.NORTH);
    JFrame window = new JFrame ("GUI Test");
    window.setContentPane (content);
    window.setSize (250, 150);
    window.setLocation (100, 100);
    window.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22960290_22960574_48_67
22960290_22960693_22_41
Title: JFrame - Output method results into a JLabel 
----------------------------------------

public static String wordGen () {
    String [] wordListOne = {"24/7", "Terrific", "Time-tested", "Returned", "Tried", "Intepreted", "Ebay", "Large", "Small", "Medium"};
    String [] wordListTwo = {"Oriented", "Shared", "Aligned", "Targeted", "Leveraged", "Charged", "Networked", "Centric", "Distributed", "Postioned"};
    String [] wordListThree = {"Bush-beater", "Pikestaff", "Placket-racket", "Hammer-handle", "Quim-wedge", "Creamstick", "Tug-mutton", "Kennel-raker", "Testicles", "Penis", "Vagina", "Breasts", "TallyWhacker", "Johnson", "Meat", "ClamFist", "Binlid"};
    int oneLength = wordListOne.length;
    int twoLength = wordListTwo.length;
    int threeLength = wordListThree.length;
    int rand1 = (int) (Math.random () * oneLength);
    int rand2 = (int) (Math.random () * twoLength);
    int rand3 = (int) (Math.random () * threeLength);
    String phrase = wordListOne [rand1] + " " + wordListTwo [rand2] + " " + wordListThree [rand3];
    return phrase;
}
----------------------------------------

public static String wordGen () {
    String [] wordListOne = {"24/7", "Terrific", "Time-tested", "Returned", "Tried", "Intepreted", "Ebay", "Large", "Small", "Medium"};
    String [] wordListTwo = {"Oriented", "Shared", "Aligned", "Targeted", "Leveraged", "Charged", "Networked", "Centric", "Distributed", "Postioned"};
    String [] wordListThree = {"Bush-beater", "Pikestaff", "Placket-racket", "Hammer-handle", "Quim-wedge", "Creamstick", "Tug-mutton", "Kennel-raker", "Testicles", "Penis", "Vagina", "Breasts", "TallyWhacker", "Johnson", "Meat", "ClamFist", "Binlid"};
    int oneLength = wordListOne.length;
    int twoLength = wordListTwo.length;
    int threeLength = wordListThree.length;
    int rand1 = (int) (Math.random () * oneLength);
    int rand2 = (int) (Math.random () * twoLength);
    int rand3 = (int) (Math.random () * threeLength);
    String phrase = wordListOne [rand1] + " " + wordListTwo [rand2] + " " + wordListThree [rand3];
    return phrase;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22975041_22975136_1_19
22975041_22975156_1_10
Title: Exception Handling for an Array 
----------------------------------------

public void print () throws EntryNotFoundException {
    for (int i = 0;
    i < DIRECTORY_SIZE; i ++) {
        if (directory [i] != null) {
            System.out.println (directory [i].toString ());
        } else {
            System.out.println ("Entry Missing");
        }
    }
}
----------------------------------------

public void print () {
    for (int i = 0;
    i < DIRECTORY_SIZE; i ++) {
        if (directory [i] != null) {
            System.out.println (directory [i].toString ());
        } else {
            System.out.println ("Missing Entry: #" + i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976412_23140414_25_37
22976412_23994167_34_52
Title: How to make sure two threads printing even odd numbers maintain even first then odd order for this implementation? 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10; i ++) {
        try {
            oddJobPermits.acquire ();
            System.out.println (i * 2 + 1);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } finally {
            evenJobPermits.release ();
        }
    }
}
----------------------------------------

public void run () {
    s.acquireUninterruptibly ();
    while (count.intValue () <= 10) {
        try {
            s.acquireUninterruptibly ();
            System.out.println (getName () + " " + count.getAndIncrement ());
        } finally {
            t.release ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976412_23140414_25_37
22976412_23994167_71_90
Title: How to make sure two threads printing even odd numbers maintain even first then odd order for this implementation? 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10; i ++) {
        try {
            oddJobPermits.acquire ();
            System.out.println (i * 2 + 1);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } finally {
            evenJobPermits.release ();
        }
    }
}
----------------------------------------

public void run () {
    t.acquireUninterruptibly ();
    s.release ();
    while (count.intValue () <= 10) {
        try {
            t.acquireUninterruptibly ();
            System.out.println (getName () + " " + count.getAndIncrement ());
        } finally {
            s.release ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976412_23140414_9_21
22976412_23994167_34_52
Title: How to make sure two threads printing even odd numbers maintain even first then odd order for this implementation? 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10; i ++) {
        try {
            evenJobPermits.acquire ();
            System.out.println (i * 2);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } finally {
            oddJobPermits.release ();
        }
    }
}
----------------------------------------

public void run () {
    s.acquireUninterruptibly ();
    while (count.intValue () <= 10) {
        try {
            s.acquireUninterruptibly ();
            System.out.println (getName () + " " + count.getAndIncrement ());
        } finally {
            t.release ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976412_23140414_9_21
22976412_23994167_71_90
Title: How to make sure two threads printing even odd numbers maintain even first then odd order for this implementation? 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10; i ++) {
        try {
            evenJobPermits.acquire ();
            System.out.println (i * 2);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } finally {
            oddJobPermits.release ();
        }
    }
}
----------------------------------------

public void run () {
    t.acquireUninterruptibly ();
    s.release ();
    while (count.intValue () <= 10) {
        try {
            t.acquireUninterruptibly ();
            System.out.println (getName () + " " + count.getAndIncrement ());
        } finally {
            s.release ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976998_22977056_5_44
22976998_22977067_5_42
Title: How to loop a if else 
----------------------------------------

public static void main (String args []) {
    Scanner gus = new Scanner (System.in);
    double hot, cold;
    int incrd;
    hot = 10;
    cold = 9;
    System.out.println ("press 1 for hotter");
    System.out.println ("press 2 for colder");
    System.out.println ("press 3 for more preasure");
    System.out.println ("press 4 for less pressure");
    System.out.println ("press 5 to finish.");
    while (true) {
        incrd = gus.nextInt ();
        if (incrd == 1) {
            hot += 2.5;
            cold -= 2.5;
        } else if (incrd == 2) {
            hot -= 2.5;
            cold += 2.5;
        } else if (incrd == 3) {
            hot += 2.5;
            cold += 2.5;
        } else if (incrd == 4) {
            hot -= 2.5;
            cold -= 2.5;
        } else if (incrd == 5) {
            break;
        } else {
            System.out.println ("invalid Number please enter either 1 or 2");
        }

    }
    System.out.println (hot);
    System.out.println (cold);
}
----------------------------------------

public static void main (String args []) {
    Scanner gus = new Scanner (System.in);
    double incrd, hot, cold;
    hot = 10;
    cold = 9;
    while (true) {
        System.out.println ("press 1 for hotter");
        System.out.println ("press 2 for colder");
        System.out.println ("press 3 for more preasure");
        System.out.println ("press 4 for less pressure");
        incrd = gus.nextDouble ();
        if (incrd == 1) {
            hot += 2.5;
            cold = cold - 2.5;
        } else if (incrd == 2) {
            hot = hot - 2.5;
            cold += 2.5;
        } else if (incrd == 3) {
            hot += 2.5;
            cold += 2.5;
        } else if (incrd == 4) {
            hot = hot - 2.5;
            cold = cold - 2.5;
        } else {
            System.out.println ("invalid Number please enter either 1 or 2");
        }

        System.out.println (hot);
        System.out.println (cold);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22976998_22977119_5_54
22976998_22977123_3_48
Title: How to loop a if else 
----------------------------------------

public static void main (String args []) {
    Scanner gus = new Scanner (System.in);
    double incrd, hot, cold;
    hot = 10;
    cold = 9;
    int StopValue;
    StopValue = - 1;
    System.out.println ("press 1 for hotter");
    System.out.println ("press 2 for colder");
    System.out.println ("press 3 for more preasure");
    System.out.println ("press 4 for less pressure");
    while (true) {
        incrd = gus.nextDouble ();
        if (incrd == StopValue) {
            break;
        } else {
            if (incrd == 1) {
                hot += 2.5;
                cold = cold - 2.5;
            } else if (incrd == 2) {
                hot = hot - 2.5;
                cold += 2.5;
            } else if (incrd == 3) {
                hot += 2.5;
                cold += 2.5;
            } else if (incrd == 4) {
                hot = hot - 2.5;
                cold = cold - 2.5;
            } else if (incrd == 5) {
                break;
            } else {
                System.out.println ("invalid Number please enter either 1 or 2");
            }

        }
        System.out.println (hot);
        System.out.println (cold);
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner gus = new Scanner (System.in);
    int incrd;
    double hot, cold;
    hot = 10;
    cold = 9;
    System.out.println ("press 1 for hotter");
    System.out.println ("press 2 for colder");
    System.out.println ("press 3 for more preasure");
    System.out.println ("press 4 for less pressure");
    System.out.println ("press 'x' to Exit the program");
    while (gus.hasNextInt ()) {
        incrd = gus.nextInt ();
        if (incrd == 1) {
            hot += 2.5;
            cold = cold - 2.5;
        } else if (incrd == 2) {
            hot = hot - 2.5;
            cold += 2.5;
        } else if (incrd == 3) {
            hot += 2.5;
            cold += 2.5;
        } else if (incrd == 4) {
            hot -= 2.5;
            cold -= 2.5;
        } else {
            System.out.println ("invalid Number please enter either 1 or 2");
        }

        System.out.println (hot);
        System.out.println (cold);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22979862_22979952_182_196
22979862_22979952_24_36
Title: Trying to fire a bullet and detect a rectangle for collision 
----------------------------------------

public void run () {
    try {
        while (true) {
            shoot ();
            move ();
            repaint ();
            Thread.sleep (40);
        }
    } catch (Exception e) {
        System.out.println ("error!");
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new JavaGame2 ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22981210_22981827_1_12
22981210_22982123_11_43
Title: counting unique words in a string without using an array 
----------------------------------------

private int countWords (final String text) {
    Scanner scanner = new Scanner (text);
    Set < String > uniqueWords = new HashSet < String > ();
    while (scanner.hasNext ()) {
        uniqueWords.add (scanner.next ());
    }
    scanner.close ();
    return uniqueWords.size ();
}
----------------------------------------

private static void countWords (String inputPhrase) {
    boolean increment = false;
    int wordStart = - 1;
    int phraseWordCount = 0;
    int uniqueWordCount = 0;
    for (int i = 0;
    i < inputPhrase.length (); i ++) {
        if (validChar (inputPhrase.charAt (i))) {
            increment = true;
            if (wordStart == - 1) {
                wordStart = i;
            }
        } else if (increment) {
            phraseWordCount ++;
            final String lastWord = inputPhrase.substring (wordStart, i);
            boolean unique = findUpTo (lastWord, inputPhrase, wordStart);
            if (unique) {
                uniqueWordCount ++;
            }
            increment = false;
            wordStart = - 1;
        }

    }
    if (increment) {
        phraseWordCount ++;
        final String lastWord = inputPhrase.substring (wordStart, inputPhrase.length ());
        boolean unique = findUpTo (lastWord, inputPhrase, wordStart);
        if (unique) {
            uniqueWordCount ++;
        }
    }
    System.out.println ("Words: " + phraseWordCount);
    System.out.println ("Unique: " + uniqueWordCount);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22982160_22983359_1_19
22982160_23002147_1_18
Title: Modify message for a single player 
----------------------------------------

@EventHandler
public void onChat (AsyncPlayerChatEvent e) {
    for (Player on : Bukkit.getServer ().getOnlinePlayers ()) {
        if (on.equals (e.getPlayer ())) continue;

        if (e.getMessage ().contains (on.getName ())) {
            on.sendMessage (e.getMessage ().replaceAll (on.getName (), ChatColor.GREEN + "@" + ChatColor.UNDERLINE + on.getName ()));
            on.playNote (on.getLocation (), Instrument.PIANO, Note.natural (1, Tone.A));
        } else {
            on.sendMessage (e.getMessage ());
        }
    }
    e.setCancelled (true);
}
----------------------------------------

@EventHandler
public void onChat (AsyncPlayerChatEvent e) {
    String message = e.getMessage ();
    e.setCancelled (true);
    for (Player on : Bukkit.getOnlinePlayers ()) {
        if (message.contains (on.getName ())) {
            String newMessage = message.replaceAll (on.getName (), ChatColor.BLUE + ChatColor.UNDERLINE + on.getName () + ChatColor.WHITE);
            on.sendMessage (newMessage);
            on.playNote (on.getLocation (), Instrument.PIANO, Note.natural (1, Tone.A));
        } else {
            on.sendMessage (message);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22982362_22982533_11_24
22982362_22982588_3_22
Title: "Best way to read a text file line by line taking each line and putting it into the code" 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new FileReader ("_filename"));
    String line;
    while ((line = br.readLine ()) != null) {
        if (checkUrl (line)) {
            System.out.println ("URL " + line + " was OK");
        } else {
            System.out.println ("URL " + line + " was not VALID");
        }
    }
    br.close ();
}
----------------------------------------

public static void main (String [] args) {
    try {
        URL url = new URL ("http://www.google.com");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
        int responceCode = connection.getResponseCode ();
        if (responceCode == HttpURLConnection.HTTP_OK) {
            System.out.println ("Valid");
        } else {
            System.out.println ("Invalid");
        }
    } catch (MalformedURLException ex) {
        System.out.println ("Invalid");
    } catch (IOException ex) {
        System.out.println ("Invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22988303_22988304_1_23
22988303_22988305_1_30
Title: Is this the most efficient way to write this method? 
----------------------------------------

public boolean isBefore (TimeType secondTime) {
    if (_hour < secondTime._hour) {
        return true;
    } else if (_hour == secondTime._hour) {
        if (_minute < secondTime._minute) {
            return true;
        } else {
            if (_minute == secondTime._minute && _second < secondTime._second) {
                return true;
            }
        }
    }

    return false;
}
----------------------------------------

public boolean isBefore (TimeType secondTime) {
    if (_hour < secondTime._hour) {
        return true;
    }
    if (_hour > secondTime._hour) {
        return false;
    }
    if (_minute < secondTime._minute) {
        return true;
    }
    if (_minute > secondTime._minute) {
        return false;
    }
    if (_second < secondTime._second) {
        return true;
    }
    if (_second > secondTime._second) {
        return false;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22988920_22988979_1_11
22988920_22988983_1_11
Title: returning the position of an array 
----------------------------------------

private int find (String name) {
    int i = 0;
    for (DirectoryEntry x : theDirectory) {
        if (x.getName ().equals (name)) {
            return i;
        }
        i ++;
    }
    return - 1;
}
----------------------------------------

private String find (String name) {
    int k = 0;
    for (DirectoryEntry x : theDirectory) {
        if (x.getName ().equals (name)) {
            k ++;
            return x.getName ();
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22988920_22988983_1_11
22988920_22989008_1_10
Title: returning the position of an array 
----------------------------------------

private String find (String name) {
    int k = 0;
    for (DirectoryEntry x : theDirectory) {
        if (x.getName ().equals (name)) {
            k ++;
            return x.getName ();
        }
    }
    return null;
}
----------------------------------------

private int find (String name) {
    for (int i = 0;
    i < theDirectory.length (); i ++) {
        DirectoryEntry x = theDirectory [i];
        if (x.getName ().equals (name)) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22997158_22997235_1_24
22997158_22997351_1_12
Title: Using PrintWriter to print an array 
----------------------------------------

public void save () {
    PrintWriter pw = null;
    try {
        pw = new PrintWriter (new FileWriter ("directory.txt", true));
        for (DirectoryEntry x : theDirectory) {
            pw.write (x.getName ());
            pw.write (x.getNumber ());
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        pw.close ();
    }
}
----------------------------------------

public void save () {
    try (PrintWriter pw = new PrintWriter (new FileWriter ("directory.txt", true))) {
        for (DirectoryEntry x : theDirectory) {
            pw.write (x.getName ());
            pw.write (x.getNumber ());
        }
    } catch (IOException ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23003830_23003911_5_14
23003830_23004149_6_22
Title: while there is input from user 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList arrayList = new ArrayList < Integer > ();
    int input;
    for (int i = 0;
    i < 5; i ++) {
        input = scan.nextInt ();
        arrayList.add (input);
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner scan = new Scanner (System.in);
    ArrayList < Integer > arr = new ArrayList < Integer > ();
    System.out.print ("enter 5 numbers");
    int counter = 1;
    while (scan.hasNextInt ()) {
        int i = scan.nextInt ();
        arr.add (i);
        counter ++;
        if (counter == 5) {
            scan.close ();
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23006241_23486543_1_20
23006241_27923637_1_10
Title: Converting POJO to JsonNode using a JsonView 
----------------------------------------

public Result toResult () {
    Content ret = null;
    try {
        final String jsonpayload = new ObjectMapper ().writerWithView (JsonViews.Public.class).writeValueAsString (payload);
        ret = new Content () {
            @Override
            public String body () {
                return jsonpayload;
            }@Override
            public String contentType () {
                return "application/json";
            }}

        ;
    } catch (JsonProcessingException exc) {
        Logger.error ("toResult: ", exc);
    }
    if (ret == null) return Results.badRequest ();

    return Results.ok (ret);
}
----------------------------------------

public Response toResult () throws JsonProcessingException {
    final ObjectWriter writer = new ObjectMapper ().writerWithView (JSONViews.Public.class);
    return Response.ok (new StreamingOutput () {
        @Override
        public void write (OutputStream outputStream) throws IOException, WebApplicationException {
            writer.writeValue (outputStream, payload);
        }}

    ).build ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23008264_23008684_1_10
23008264_23008698_1_10
Title: Why in this loop messages that are in if statement are caller only after loop ends? 
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 10) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            System.out.println (msg + ": " + count ++);
            Thread.sleep (1000);
        }
    }
}
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            System.out.println (msg + ": " + count ++);
            eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23008264_23008684_1_10
23008264_23008731_1_10
Title: Why in this loop messages that are in if statement are caller only after loop ends? 
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 10) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            System.out.println (msg + ": " + count ++);
            Thread.sleep (1000);
        }
    }
}
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
            System.out.println (msg + ": " + count ++);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23008264_23008698_1_10
23008264_23008731_1_10
Title: Why in this loop messages that are in if statement are caller only after loop ends? 
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            System.out.println (msg + ": " + count ++);
            eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
        }
    }
}
----------------------------------------

static void printWithDelay (int sec, String msg) {
    int count = 0;
    long eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
    while (count < 10) {
        if (System.nanoTime () > eventTime) {
            eventTime = System.nanoTime () + ((long) Math.pow (10, 9) * sec);
            System.out.println (msg + ": " + count ++);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23017206_23017348_2_16
23017206_46866514_2_20
Title: Divisible by 5 or 6 
----------------------------------------

public static void main (String [] args) {
    int j = 1;
    for (int number = 100;
    number < 1001; number ++) {
        if (number % 6 == 0 || number % 5 == 0) {
            System.out.print (number + ", ");
            j ++;
        }
        if (j % 10 == 0) {
            System.out.println ();
            j ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int j = 0;
    int number = 100;
    while (number < 1001) {
        if (number % 6 == 0 || number % 5 == 0) {
            System.out.print (number + ", ");
            j ++;
        }
        if (j % 10 == 0 && (number % 6 == 0 || number % 5 == 0)) {
            System.out.println ();
            number ++;
        } else {
            number ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23026711_23026853_1_20
23026711_23026865_1_14
Title: Sorting object on based on 4 attributes of a Class in java 
----------------------------------------

public int compareTo (Book book) {
    if (book == null) {
        throw new NullPointerException ("Book passed is null!");
    }
    if (! this.getAuthor ().equals (book.getAuthor ())) {
        return this.getAuthor ().compareTo (book.getAuthor ());
    }
    if (! this.getTitle ().equals (book.getTitle ())) {
        return this.getTitle ().compareTo (book.getTitle ());
    }
    if (this.getPrice () != book.getPrice ()) {
        return (int) (this.getPrice () - book.getPrice ());
    }
    return publisher.compareTo (book.getPublisher ());
}
----------------------------------------

public int compareTo (Book book) {
    int retval = author.compareTo (book.author);
    if (retval != 0) return retval;

    retval = title.compareTo (book.title);
    if (retval != 0) return retval;

    if (price != book.price) return price > book.price ? 1 : - 1;

    return publisher.compareTo (book.publisher);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23028089_23028165_1_11
23028089_23028167_3_15
Title: Key Value parsing java 
----------------------------------------

public static void main (String [] args) {
    String str = "NameThoufiqAge21LocationTN";
    Matcher matcher = Pattern.compile ("Name(\\w+)Age(\\d+)Location(\\w+)").matcher (str);
    if (matcher.matches ()) {
        System.out.println ("Name=" + matcher.group (1));
        System.out.println ("Age=" + matcher.group (2));
        System.out.println ("Location=" + matcher.group (3));
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String line = "NameThoufiqAge21LocationTN";
    boolean newKey = true;
    for (char a : line.toCharArray ()) {
        if (a < 97 && ! newKey) {
            newKey = true;
            System.out.print (" " + a);
        } else {
            System.out.print (a);
            newKey = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23042829_23154343_58_75
23042829_23154343_92_105
Title: Getting java heap space error while running a mapreduce code for large dataset 
----------------------------------------

public void reduce (Text key, Iterator < Text > values, OutputCollector < Text, IntWritable > output, Reporter reporter) throws IOException {
    String rKey = key.toString ();
    if (rKey.startsWith (".")) {
        while (values.hasNext ()) {
            total_count.put (rKey.substring (1), Integer.valueOf (values.next ().toString ()));
            attributes.add (rKey.substring (1).split (",") [0]);
            return;
        }
    }
    while (values.hasNext ()) {
        Text value = values.next ();
        output.collect (value, new Text (Integer.toString (total_count.get (rKey))));
        output.collect (value, new Text ("." + attributes.size ()));
    }
}
----------------------------------------

public void reduce (Text key, Iterator < Text > values, OutputCollector < Text, DoubleWritable > output, Reporter reporter) throws IOException {
    long sum = 0;
    int nbAttributes = 0;
    while (values.hasNext ()) {
        String value = values.next ();
        if (value.startsWith (".")) {
            nbAttributes = Integer.parseInt (value.substring (1));
        } else {
            sum += Integer.parseInt (value);
        }
    }
    output.collect (key, new DoubleWritable (sum / nbAttributes));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23047817_23047972_1_23
23047817_23048039_1_21
Title: Implement equals method 
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Books other = (Books) obj;
    if (author == null) {
        if (other.author != null) return false;

    } else if (! author.equals (other.author)) return false;

    if (edition != other.edition) return false;

    if (title == null) {
        if (other.title != null) return false;

    } else if (! title.equals (other.title)) return false;

    return true;
}
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (obj == null) {
        return false;
    }
    if (getClass () != obj.getClass ()) {
        return false;
    }
    final Beta other = (Beta) obj;
    if ((this.getSample () == null) && (other.getSample () == null)) {
        return true;
    }
    if ((this.getSample ().getId ().equals (other.getSample ().getId ())) && (this.getSample ().getName ().equals (other.getSample ().getName ()))) {
        return true;
    }
    return super.equals ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23053297_23053340_16_28
23053297_23053417_12_30
Title: Why wont this program display the text? 
----------------------------------------

public Talk () {
    JPanel panel = new JPanel ();
    add (panel);
    panel.setLayout (new FlowLayout (FlowLayout.LEFT, 10, 20));
    panel.add (new JLabel ("First Name"));
    JTextField first = new JTextField (8);
    panel.add (first);
    panel.add (new JLabel ("Last Name"));
    JTextField last = new JTextField (8);
    panel.add (last);
    panel.add (b);
    b.addActionListener (this);
}
----------------------------------------

public Talk () {
    JPanel panel = new JPanel ();
    add (panel);
    panel.setLayout (new FlowLayout (FlowLayout.LEFT, 10, 20));
    panel.add (new JLabel ("First Name"));
    first = new JTextField (8);
    panel.add (first);
    panel.add (new JLabel ("Last Name"));
    second = new JTextField (8);
    panel.add (second);
    panel.add (b);
    b.addActionListener (this);
    panel.add (res);
    result = new JTextField (8);
    panel.add (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23053904_23054000_1_35
23053904_23054044_1_23
Title: Entering string instead of integer (Java) 
----------------------------------------

public static void main (String [] args) {
    int numArabic;
    boolean validEntry = false;
    while (validEntry = false) {
        try {
            System.out.println ("Enter an integer number between 1 and 3999!");
            Scanner scan = new Scanner (System.in);
            numArabic = scan.nextInt ();
            validEntry = true;
        } catch (InputMismatchException e) {
            System.out.println ("Entered value is not an integer!");
            validEntry = false;
        }
    }
    if ((numArabic < 1) || (numArabic > 3999)) {
        System.out.println ();
        System.out.print ("Wrong number. ");
        System.out.print ("Enter an integer number between 1 and 3999!");
        System.out.println ();
    } else {
        String numRoman1 = toRomanOne (numArabic % 10);
        String numRoman2 = toRomanTwo (((numArabic / 10) % 10));
        String numRoman3 = toRomanThree (((numArabic / 100) % 10));
        String numRoman4 = toRomanFour (numArabic / 1000);
        System.out.print ("The number " + numArabic + " is equal to: ");
        System.out.print (numRoman4 + numRoman3 + numRoman2 + numRoman1 + ".");
    }
}
----------------------------------------

public static void main (String [] args) {
    int numArabic = 0;
    boolean validEntry;
    try {
        System.out.println ("Enter an integer number between 1 and 3999!");
        Scanner scan = new Scanner (System.in);
        numArabic = scan.nextInt ();
        validEntry = true;
    } catch (InputMismatchException e) {
        System.out.println ("Entered value is not an integer!");
    }
    if ((numArabic < 1) || (numArabic > 3999)) {
    } else {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23055126_23055220_8_19
23055126_23055295_1_20
Title: MalformedURLException: Protocol not found using Jsoup 
----------------------------------------

protected Bitmap doInBackground (String...urls) {
    String urldisplay = urls [0];
    Bitmap mIcon11 = null;
    try {
        InputStream in = new java.net.URL (urldisplay).openStream ();
        mIcon11 = BitmapFactory.decodeStream (in);
    } catch (Exception e) {
        Log.e ("Error", e.getMessage ());
        e.printStackTrace ();
    }
    return mIcon11;
}
----------------------------------------

@Override
protected Void doInBackground (Void...params) {
    try {
        Document document = Jsoup.connect (url).get ();
        Elements img = document.select ("div[class=logo_top] img[src]");
        String imgSrc = img.attr ("src");
        if (! imgSrc.startsWith (url)) {
            imgSrc = url + imgSrc;
        }
        InputStream input = new URL (imgSrc).openStream ();
        bitmap = BitmapFactory.decodeStream (input);
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23056090_23207119_305_383
23056090_23207119_384_466
Title: Applying variable transparency to an image in java 
----------------------------------------

public int [] loadRGBRange (int length, int [] rgbs) throws Exception {
    if (rgbs == null) {
        throw new Exception ("RGB[]'s cannot be null");
    }
    if (length == 0) {
        throw new Exception ("Length cannot be 0");
    }
    if (rgbs.length == 0) {
        throw new Exception ("RGB[]'s length cannot be 0");
    }
    int [] rgbRange = new int [length];
    if (rgbs.length == 1) {
        for (int i = 0;
        i < rgbRange.length; i ++) {
            rgbRange [i] = rgbs [0];
        }
        return rgbRange;
    }
    int [] positions = new int [rgbs.length];
    double pos = 0;
    double block = (double) length / (rgbs.length - 1);
    for (int i = 0;
    i < positions.length; i ++) {
        positions [i] = (int) pos;
        pos += block;
    }
    int [] as = new int [rgbs.length];
    int [] rs = new int [rgbs.length];
    int [] gs = new int [rgbs.length];
    int [] bs = new int [rgbs.length];
    for (int i = 0;
    i < rgbs.length; i ++) {
        as [i] = (rgbs [i]>> 24) & 0xff;
        rs [i] = (rgbs [i]>> 16) & 0xff;
        gs [i] = (rgbs [i]>> 8) & 0xff;
        bs [i] = (rgbs [i]) & 0xff;
    }
    int [] adifs = new int [rgbs.length - 1];
    int [] rdifs = new int [rgbs.length - 1];
    int [] gdifs = new int [rgbs.length - 1];
    int [] bdifs = new int [rgbs.length - 1];
    for (int i = 0;
    i < rgbs.length - 1; i ++) {
        adifs [i] = as [i] - as [i + 1];
        rdifs [i] = rs [i] - rs [i + 1];
        gdifs [i] = gs [i] - gs [i + 1];
        bdifs [i] = bs [i] - bs [i + 1];
    }
    double [] ab = new double [rgbs.length - 1];
    double [] rb = new double [rgbs.length - 1];
    double [] gb = new double [rgbs.length - 1];
    double [] bb = new double [rgbs.length - 1];
    for (int i = 0;
    i < rgbs.length - 1; i ++) {
        int l = positions [i + 1] - positions [i];
        ab [i] = (double) adifs [i] / l;
        rb [i] = (double) rdifs [i] / l;
        gb [i] = (double) gdifs [i] / l;
        bb [i] = (double) bdifs [i] / l;
    }
    double a = as [0];
    double r = rs [0];
    double g = gs [0];
    double b = bs [0];
    int color = 0;
    for (int i = 0;
    i < rgbRange.length; i ++) {
        rgbRange [i] = ((int) a << 24) | ((int) r << 16) | ((int) g << 8) | ((int) b);
        if (i + 1 > positions [0] && i + 1 < positions [positions.length - 1]) {
            if (i == positions [color + 1]) {
                color ++;
                a = as [color];
                r = rs [color];
                g = gs [color];
                b = bs [color];
            } else {
                a -= ab [color];
                r -= rb [color];
                g -= gb [color];
                b -= bb [color];
            }
        }
    }
    return rgbRange;
}
----------------------------------------

public int [] loadRGBRange (int length, int [] rgbs, int [] positions) throws Exception {
    if (positions == null) {
        return loadRGBRange (length, rgbs);
    }
    if (rgbs == null) {
        throw new Exception ("RGB[]'s cannot be null");
    }
    if (length == 0) {
        throw new Exception ("Length cannot be 0");
    }
    if (rgbs.length == 0 || positions.length == 0) {
        return null;
    }
    if (positions.length != rgbs.length) {
        throw new Exception ("The length of Positions[] must equals the length of RGB[]'s");
    }
    for (int i = 0;
    i < positions.length; i ++) {
        if (positions [i] > length) {
            throw new Exception ("Any positions cannot be greater than the length");
        }
    }
    int [] rgbRange = new int [length];
    if (rgbs.length == 1) {
        for (int i = 0;
        i < rgbRange.length; i ++) {
            rgbRange [i] = rgbs [0];
        }
        return rgbRange;
    }
    int [] as = new int [rgbs.length];
    int [] rs = new int [rgbs.length];
    int [] gs = new int [rgbs.length];
    int [] bs = new int [rgbs.length];
    for (int i = 0;
    i < rgbs.length; i ++) {
        as [i] = (rgbs [i]>> 24) & 0xff;
        rs [i] = (rgbs [i]>> 16) & 0xff;
        gs [i] = (rgbs [i]>> 8) & 0xff;
        bs [i] = (rgbs [i]) & 0xff;
    }
    int [] adifs = new int [rgbs.length - 1];
    int [] rdifs = new int [rgbs.length - 1];
    int [] gdifs = new int [rgbs.length - 1];
    int [] bdifs = new int [rgbs.length - 1];
    for (int i = 0;
    i < rgbs.length - 1; i ++) {
        adifs [i] = as [i] - as [i + 1];
        rdifs [i] = rs [i] - rs [i + 1];
        gdifs [i] = gs [i] - gs [i + 1];
        bdifs [i] = bs [i] - bs [i + 1];
    }
    double [] ab = new double [rgbs.length - 1];
    double [] rb = new double [rgbs.length - 1];
    double [] gb = new double [rgbs.length - 1];
    double [] bb = new double [rgbs.length - 1];
    for (int i = 0;
    i < rgbs.length - 1; i ++) {
        int l = positions [i + 1] - positions [i];
        ab [i] = (double) adifs [i] / l;
        rb [i] = (double) rdifs [i] / l;
        gb [i] = (double) gdifs [i] / l;
        bb [i] = (double) bdifs [i] / l;
    }
    double a = as [0];
    double r = rs [0];
    double g = gs [0];
    double b = bs [0];
    int color = 0;
    for (int i = 0;
    i < rgbRange.length; i ++) {
        rgbRange [i] = ((int) a << 24) | ((int) r << 16) | ((int) g << 8) | ((int) b);
        if (i + 1 > positions [0] && i + 1 < positions [positions.length - 1]) {
            if (i == positions [color + 1]) {
                color ++;
                a = as [color];
                r = rs [color];
                g = gs [color];
                b = bs [color];
            } else {
                a -= ab [color];
                r -= rb [color];
                g -= gb [color];
                b -= bb [color];
            }
        }
    }
    return rgbRange;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23056090_23207119_39_53
23056090_23207119_54_69
Title: Applying variable transparency to an image in java 
----------------------------------------

public GradientImage (int width, int height, Color [] colors, int alignment) {
    image = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
    pixels = ((DataBufferInt) image.getRaster ().getDataBuffer ()).getData ();
    this.alignment = alignment;
    this.width = width;
    this.height = height;
    this.colors = colors;
    rgbs = new int [colors.length];
    for (int i = 0;
    i < rgbs.length; i ++) {
        rgbs [i] = colors [i].getRGB ();
    }
    try {
        renderImage ();
    } catch (Exception error) {
        error.printStackTrace ();
    }
}
----------------------------------------

public GradientImage (int width, int height, Color [] colors, int [] positions, int alignment) {
    image = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
    pixels = ((DataBufferInt) image.getRaster ().getDataBuffer ()).getData ();
    this.alignment = alignment;
    this.width = width;
    this.height = height;
    this.colors = colors;
    this.positions = positions;
    rgbs = new int [colors.length];
    for (int i = 0;
    i < rgbs.length; i ++) {
        rgbs [i] = colors [i].getRGB ();
    }
    try {
        renderImage ();
    } catch (Exception error) {
        error.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23062657_23063364_5_52
23062657_23083168_8_39
Title: Bean Validation doesn't work? 
----------------------------------------

public void init (VaadinRequest request) {
    VerticalLayout layout = new VerticalLayout ();
    Person bean = new Person ();
    final BeanValidationForm < Person > form = new BeanValidationForm < Person > (Person.class);
    form.setFormFieldFactory (new DefaultFieldFactory () {
        @Override
        public Field createField (Item item, Object propertyId, Component uiContext) {
            Field field = super.createField (item, propertyId, uiContext);
            if (field instanceof TextField) {
                ((TextField) field).setNullRepresentation ("");
            }
            return field;
        }}

    );
    form.setItemDataSource (new BeanItem < Person > (bean));
    form.setImmediate (true);
    form.setWriteThrough (false);
    layout.addComponent (form);
    Button validate = new Button ("Validate");
    validate.addListener (new Button.ClickListener () {
        public void buttonClick (ClickEvent event) {
            try {
                form.validate ();
                Notification.show ("Validation successful");
            } catch (Validator.InvalidValueException e) {
                Notification.show ("Validation failed: " + e.getMessage (), Notification.TYPE_WARNING_MESSAGE);
            }
        }}

    );
    layout.addComponent (validate);
    setContent (layout);
}
----------------------------------------

public void init (VaadinRequest request) {
    VerticalLayout layout = new VerticalLayout ();
    final BeanFieldGroup < Person > binder = new BeanFieldGroup < Person > (Person.class);
    binder.setItemDataSource (new BeanItem < Person > (new Person ()));
    form = new FormLayout ();
    firstName = binder.buildAndBind ("Firstname", "firstName");
    email = binder.buildAndBind ("Email", "email");
    form.addComponent (firstName);
    form.addComponent (email);
    layout.addComponent (form);
    form.addComponent (new Button ("OK", new Button.ClickListener () {
        @Override
        public void buttonClick (ClickEvent event) {
            try {
                binder.commit ();
                Notification.show ("Thanks!");
            } catch (FieldGroup.CommitException e) {
                Notification.show ("You fail!");
            }
        }}

    ));
    setContent (layout);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23063867_23064067_1_21
23063867_23064101_1_19
Title: Failing to print out contents of a file 
----------------------------------------

public static void main (String a []) {
    String fileName = "goog.csv";
    File f = new File (fileName);
    String data = "";
    if (f.exists ()) {
        try {
            BufferedReader br = new BufferedReader (new FileReader (f));
            while ((data = br.readLine ()) != null) {
                if (! (data.length () == 0)) System.out.println (data);

            }
            br.close ();
        } catch (FileNotFoundException e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("The file does not exists !!!");
    }
}
----------------------------------------

public static void main (String [] args) {
    String fileName = "FilePath";
    File file = new File (fileName);
    try {
        Scanner inputStream = new Scanner (file);
        while (inputStream.hasNext ()) {
            String data = inputStream.next ();
            System.out.println (data + "***");
        }
        inputStream.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23074727_23075944_212_238
23074727_23075944_75_137
Title: Download Zip file in Android returns Corrupt file 
----------------------------------------

protected Boolean doInBackground (String...params) {
    String filePath = zipFile;
    String destinationPath = params [0];
    File archive = new File (filePath);
    try {
        ZipFile zipfile = new ZipFile (archive);
        for (@SuppressWarnings ("rawtypes")
        Enumeration e = zipfile.entries ();
        e.hasMoreElements ();) {
            ZipEntry entry = (ZipEntry) e.nextElement ();
            unzipEntry (zipfile, entry, destinationPath);
        }
        UnzipUtil d = new UnzipUtil (zipFile, params [0]);
        d.unzip ();
    } catch (Exception e) {
        e.printStackTrace ();
        return false;
    }
    return true;
}
----------------------------------------

protected String doInBackground (String...aurl) {
    int count;
    HttpURLConnection http = null;
    try {
        URL url = new URL (aurl [0]);
        if (url.getProtocol ().toLowerCase ().equals ("https")) {
            trustAllHosts ();
            HttpsURLConnection https = (HttpsURLConnection) url.openConnection ();
            https.setHostnameVerifier (DO_NOT_VERIFY);
            http = https;
        } else {
            http = (HttpURLConnection) url.openConnection ();
        }
        http.connect ();
        if (http.getResponseCode () == 200) {
            int lenghtOfFile = http.getContentLength ();
            InputStream input = new BufferedInputStream (url.openStream ());
            OutputStream output = new FileOutputStream (zipFile);
            byte data [] = new byte [1024];
            long total = 0;
            while ((count = input.read (data)) != - 1) {
                total += count;
                publishProgress ("" + (int) ((total * 100) / lenghtOfFile));
                output.write (data, 0, count);
            }
            output.close ();
            input.close ();
            result = "true";
        } else if (http.getResponseCode () == 401) {
            result = "false";
            string = "Download Limit exceed.";
        } else {
            result = "false";
            string = http.getResponseMessage ();
        }

    } catch (Exception e) {
        e.printStackTrace ();
        result = "false";
        try {
            if (http.getResponseCode () == 401) {
                string = "Download Failed";
            } else {
                string = e.toString ();
            }
        } catch (IOException e1) {
            e1.printStackTrace ();
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23077692_23077830_2_15
23077692_23077933_1_12
Title: I want to know how I extract word in sentence using regular expression 
----------------------------------------

public static void main (String ar []) throws java.io.IOException {
    String regex = "(\\.\\.[a-zA-Z0-9])([^\\.]*\\.[^\\.]+{2,}.*)([a-z]{2,}\\.\\.)";
    String useStr = "..aa.aaa..bb..";
    Pattern pattern = Pattern.compile (regex);
    Matcher match = pattern.matcher (useStr);
    while (match.find ()) {
        String a = match.group (1) + match.group (2);
        System.out.println (a);
    }
}
----------------------------------------

public static void main (String ar []) {
    String firstTwoDots = "([.]{2})(.*?)([.]{2}).*";
    String dotsAndAs = "([.a]*).*";
    String useStr = "..aa.aaa..bb..";
    Matcher matcher = Pattern.compile (firstTwoDots).matcher (useStr);
    if (matcher.matches ()) System.out.println (matcher.group (1) + matcher.group (2) + matcher.group (3));

    matcher = Pattern.compile (dotsAndAs).matcher (useStr);
    if (matcher.matches ()) System.out.println (matcher.group (1));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23077864_23077930_3_24
23077864_23078524_6_22
Title: Java look at elements in queue 
----------------------------------------

public static void main (String [] args) throws Exception {
    Queue < String > list = new PriorityQueue < > ();
    {
        list.add ("Hello ");
        list.add ("Mrs. ");
        list.add ("DoubtFire! ");
    } System.out.println (list);
    String element;
    while ((element = list.peek ()) != null) {
        if (element.equals ("Mrs. ")) {
            System.out.println ("\"Mrs\" found!");
        }
        System.out.println (element);
        list.remove (element);
    }
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    PriorityQueue < Node > queue = new PriorityQueue < Node > (10, new SampleNodeComparator ());
    for (int i = 0;
    i < 100; ++ i) {
        queue.add (new Node (r.nextInt (1000)));
    }
    while (queue.size () != 0) {
        System.out.println (queue.remove ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23079030_23079172_1_45
23079030_23097093_1_26
Title: Can Java SWT GridLayout lay out widgets from right to left? 
----------------------------------------

public static void main (String [] args) {
    final Display display = new Display ();
    Shell shell = new Shell (display);
    shell.setLayout (new GridLayout (2, true));
    shell.setText ("StackOverflow");
    Composite ltr = new Composite (shell, SWT.LEFT_TO_RIGHT);
    ltr.setLayout (new GridLayout (3, true));
    ltr.setLayoutData (new GridData (SWT.FILL, SWT.FILL, true, true));
    Composite rtl = new Composite (shell, SWT.LEFT_TO_RIGHT);
    rtl.setLayout (new GridLayout (3, true));
    rtl.setLayoutData (new GridData (SWT.FILL, SWT.FILL, true, true));
    int nrOfItems = 10;
    int nrOfColumns = ((GridLayout) rtl.getLayout ()).numColumns;
    int fillerItems = nrOfColumns - nrOfItems % nrOfColumns;
    for (int i = 0;
    i < nrOfItems; i ++) {
        new Button (ltr, SWT.PUSH).setText ("Button " + i);
        new Button (rtl, SWT.PUSH).setText ("Button " + i);
    }
    for (int i = 0;
    i < fillerItems; i ++) new Label (rtl, SWT.NONE);

    Control [] children = rtl.getChildren ();
    for (int i = 0;
    i < children.length; i ++) {
        children [i].moveAbove (null);
    }
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
    display.dispose ();
}
----------------------------------------

public static void main (String [] args) {
    final Display display = new Display ();
    Shell shell = new Shell (display);
    shell.setLayout (new GridLayout (1, false));
    shell.setText ("GridLayout Example");
    for (int i = 0;
    i < 10; i ++) {
        Button btn = new Button (shell, SWT.PUSH);
        btn.setText ("Button " + i);
        btn.moveAbove (null);
    }
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
    display.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2308481_2309223_1_52
2308481_2309526_32_47
Title: How can tokenize this string in java? 
----------------------------------------

private static List < String > tokenize (String expression) {
    char c;
    List < String > tokens = new ArrayList < String > ();
    String previousToken = null;
    int i = 0;
    while (i < expression.length ()) {
        c = expression.charAt (i);
        StringBuilder currentToken = new StringBuilder ();
        if (c == ' ' || c == '\t') {
            i ++;
        } else if (c == '-' && (previousToken == null || isOperator (previousToken)) && ((i + 1) < expression.length () && Character.isDigit (expression.charAt ((i + 1))))) {
            currentToken.append (expression.charAt (i));
            i ++;
            while (i < expression.length () && Character.isDigit (expression.charAt (i))) {
                currentToken.append (expression.charAt (i));
                i ++;
            }
        } else if (Character.isDigit (c)) {
            while (i < expression.length () && Character.isDigit (expression.charAt (i))) {
                currentToken.append (expression.charAt (i));
                i ++;
            }
        } else if (c == '+' || c == '*' || c == '/' || c == '^' || c == '-') {
            currentToken.append (c);
            i ++;
        } else {
            i ++;
        }

        if (currentToken.length () > 0) {
            tokens.add (currentToken.toString ());
            previousToken = currentToken.toString ();
        }
    }
    return tokens;
}
----------------------------------------

public List < String > tokenize () {
    List < String > res = new ArrayList < String > ();
    if (input.isEmpty ()) return res;

    while (true) {
        res.add (literal ());
        if (input.isEmpty ()) return res;

        String s = consume ("+", "-", "/", "*", "^");
        if (s == null) throw new RuntimeException ("Syntax error " + input);

        res.add (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2309558_21235095_117_143
2309558_23008581_43_77
Title: Time comparison 
----------------------------------------

public int compareTime (Time compare) {
    if (this.getHours () < compare.getHours ()) {
        return - 1;
    }
    if (this.getHours () > compare.getHours ()) {
        return 1;
    }
    if (this.getMinutes () < compare.getMinutes ()) {
        return - 1;
    }
    if (this.getMinutes () > compare.getMinutes ()) {
        return 1;
    }
    if (this.getSeconds () < compare.getSeconds ()) {
        return - 1;
    }
    if (this.getSeconds () > compare.getSeconds ()) {
        return 1;
    }
    return 0;
}
----------------------------------------

protected static boolean compareTime (Date a, Date b, String operator) {
    if (a == null) {
        return false;
    }
    try {
        SimpleDateFormat parser = new SimpleDateFormat ("HH:mm:ss.SSS");
        a = parser.parse (parser.format (a));
        b = parser.parse (parser.format (b));
    } catch (ParseException ex) {
        System.err.println (ex);
    }
    switch (operator) {
        case "==" :
            return b.compareTo (a) == 0;
        case "<" :
            return b.compareTo (a) < 0;
        case "><![CDATA[" :
            return b.compareTo (a) > 0;
        case "<=" :
            return b.compareTo (a) <= 0;
        case "><![CDATA[=" :
            return b.compareTo (a) >= 0;
        default :
            throw new IllegalArgumentException ("Operator " + operator + " wird für Feldart Time nicht unterstützt!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2309558_21235095_23_34
2309558_21235095_44_54
Title: Time comparison 
----------------------------------------

public Time (String time) throws TimeException {
    if (! validTime (time)) {
        throw new TimeException ();
    }
    String [] params = time.split (":");
    this.time = time;
    this.hours = Integer.parseInt (params [0]);
    this.minutes = Integer.parseInt (params [1]);
    this.seconds = Integer.parseInt (params [2]);
}
----------------------------------------

public Time (int hours, int minutes, int seconds) throws TimeException {
    if (! validTime (hours, minutes, seconds)) {
        throw new TimeException ();
    }
    this.time = timeToString (hours, minutes, seconds);
    this.hours = hours;
    this.minutes = minutes;
    this.seconds = seconds;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23096486_23096549_4_25
23096486_23096666_6_27
Title: I need to find specific variables that the user has inputted however I don't comprehend how 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int amount = 0;
    int total = 0;
    Map < Integer, Integer > counts = new TreeMap < Integer, Integer > ();
    System.out.println ("How many numbers do you plan to enter?");
    amount = scan.nextInt ();
    for (int x = 0;
    x < amount; x ++) {
        System.out.println ("Enter a number");
        int input = scan.nextInt ();
        if (counts.containsKey (input)) counts.put (input, counts.get (input) + 1);
        else counts.put (input, 1);

    }
    for (Integer key : counts.keySet ()) System.out.printf ("%d\t%.2f%%\n", key, counts.get (key) * 100.0 / amount);

}
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    ArrayList < Integer > values = new ArrayList < > ();
    System.out.println ("Please enter some numbers, n to terminate: ");
    while (kb.hasNextInt ()) values.add (kb.nextInt ());

    System.out.println ("\nYou entered the following values:");
    double runningSum = 0;
    for (int elem : values) {
        runningSum += elem;
        System.out.print (elem + " ");
    }
    System.out.println ("\nThe average of the values entered is: " + runningSum / values.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23098535_23100541_1_25
23098535_23100541_27_52
Title: Permutations of int arrays that sum to 16 
----------------------------------------

public ArrayList < ArrayList < int > > findPermutations (int size) {
    if (size < 1) return new ArrayList < ArrayList < int > > ();

    ArrayList < ArrayList < int > > permutations = new ArrayList < ArrayList < int > > ();
    ArrayList < ArrayList < int > > l1 = findPermutations (new ArrayList < int > (), size, 1);
    l1.addAll (findPermutations (new ArrayList < int > (), size, 2));
    l1.addAll (findPermutations (new ArrayList < int > (), size, 3));
    l1.addAll (findPermutations (new ArrayList < int > (), size, 4));
    l1.addAll (findPermutations (new ArrayList < int > (), size, 5));
    l1.addAll (findPermutations (new ArrayList < int > (), size, 6));
    for (ArrayList < int > a : l1) {
        if (computeSum (a) >= 16) {
            permutations.add (a);
        }
    }
    return permutations;
}
----------------------------------------

public ArrayList < ArrayList < int > > findPermutations (ArrayList < int > record, int size, int value) {
    record.add (value);
    if (record.size () >= size) {
        ArrayList < ArrayList < int > > bc = new ArrayList < ArrayList < int > > ();
        bc.add (record);
        return bc;
    }
    ArrayList < ArrayList < int > > permutations = findPermutations (record.clone (), size, 1);
    permutations.addAll (findPermutations (record.clone (), size, 2));
    permutations.addAll (findPermutations (record.clone (), size, 3));
    permutations.addAll (findPermutations (record.clone (), size, 4));
    permutations.addAll (findPermutations (record.clone (), size, 5));
    permutations.addAll (findPermutations (record.clone (), size, 6));
    if (record.size () >= 4) {
        permutations.add (record);
    }
    return permutations;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23101351_23101527_128_143
23101351_23101527_99_119
Title: Script is getting hanged and not giving any output 
----------------------------------------

public void run () {
    try {
        int l;
        String line;
        for (l = 0; (line = stderr.readLine ()) != null;) {
            if (line.length () > 0) l ++;

            buff.append (line).append ("\n");
            System.out.print (line);
        }
        stderr.close ();
    } catch (IOException ie) {
        buff.append ("IO exception on stdout: " + ie).append ("\n");
    }
}
----------------------------------------

public void run () {
    try {
        int l;
        String line;
        for (l = 0; (line = stdout.readLine ()) != null;) {
            if (line.length () > 0) l ++;

            buff.append (line).append ("\n");
            if (! line.trim ().equals ("")) {
                System.out.println (line);
            }
        }
        stdout.close ();
    } catch (IOException ie) {
        buff.append ("IO exception on stdout: " + ie).append ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23101351_23101527_24_42
23101351_23101527_44_95
Title: Script is getting hanged and not giving any output 
----------------------------------------

public void start (String [] command) throws IOException {
    buff = new StringBuilder ();
    System.out.println (Arrays.asList (command));
    ProcessBuilder launcher = new ProcessBuilder ();
    launcher.redirectErrorStream (true);
    launcher.command (command);
    launcher.start ();
    buff.append ("Done").append ("\n");
    System.out.println ("Done.");
}
----------------------------------------

public void start () throws IOException, InterruptedException {
    buff = new StringBuilder ();
    if (input == null) {
        buff.append ("Command == null");
        return;
    }
    Runtime r = Runtime.getRuntime ();
    System.out.println (Arrays.asList (input));
    Process p = r.exec (input);
    InputStream is = p.getInputStream ();
    stdout = new BufferedReader (new InputStreamReader (is));
    is = p.getErrorStream ();
    stderr = new BufferedReader (new InputStreamReader (is));
    if (isWaitFor == true) {
        StdoutThread cltOut = RunProcessCMD.getInstance ().new StdoutThread ();
        Thread tOut = new Thread (cltOut);
        tOut.start ();
        StderrThread cltErr = RunProcessCMD.getInstance ().new StderrThread ();
        Thread tErr = new Thread (cltErr);
        tErr.start ();
        p.waitFor ();
    }
    buff.append ("Done").append ("\n");
    System.out.println ("Done.");
    if (isWaitFor == false) {
        buff.append ("WaitFor defined to be false, respectivally no output from CMD").append ("\n");
        System.out.println ("WaitFor defined to be false, respectively no output from CMD");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23102510_23105130_11_21
23102510_23105130_1_9
Title: Java EE Application - Copy folder from war to file system with 
----------------------------------------

private static void copyFromWarToFolder (VirtualFile virtualFileOrFolder, File targetFolder) throws Exception {
    if (virtualFileOrFolder.isDirectory ()) {
        File innerTargetFolder = new File (targetFolder, virtualFileOrFolder.getName ());
        innerTargetFolder.mkdir ();
        for (VirtualFile innerFileOrFolder : virtualFileOrFolder.getChildren ()) {
            copyFromWarToFolder (innerFileOrFolder, innerTargetFolder);
        }
    } else {
        org.apache.commons.io.FileUtils.copyURLToFile (virtualFileOrFolder.asFileURL (), new File (targetFolder, virtualFileOrFolder.getName ()));
    }
}
----------------------------------------

public static void copyFromWarToFolder (String folderInWar, File targetFolder) {
    try {
        URL resource = FileUtils.class.getClassLoader ().getResource (folderInWar);
        VirtualFile virtualFileOrFolder = VFS.getChild (resource.toURI ());
        copyFromWarToFolder (virtualFileOrFolder, targetFolder);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23106077_23107159_1_15
23106077_23310006_30_46
Title: Recursive method to add odd numbers 
----------------------------------------

public int addodd (int n) {
    if (n <= 0) {
        return 0;
    }
    if (n % 2 != 0) {
        return (n + addodd (n - 1));
    } else {
        return addodd (n - 1);
    }
}
----------------------------------------

public static int addodd (int m) {
    if (m <= 0) {
        return 0;
    }
    if (m % 2 != 0) {
        return (m + addodd (m - 1));
    } else {
        return addodd (m - 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23116870_23117856_1_51
23116870_23118193_1_53
Title: "Snake Game issues snake does not move" 
----------------------------------------

public void Move () {
    Point head = snake.peekFirst ();
    Point newPoint = head;
    snake.remove (snake.peekLast ());
    Point addPoint = (Point) newPoint.clone ();
    switch (direction) {
        case Direction.North :
            newPoint = new Point (head.x, head.y - 1);
            break;
        case Direction.South :
            newPoint = new Point (head.x, head.y + 1);
            break;
        case Direction.West :
            newPoint = new Point (head.x - 1, head.y);
            break;
        case Direction.East :
            newPoint = new Point (head.x + 1, head.y);
            break;
    }
    if (newPoint.equals (fruit)) {
        score += 10;
        fruit = null;
        snake.push (addPoint);
    } else if (newPoint.x < 0 || newPoint.x > (gridWidth - 1)) {
        GenerateDefaultSnake ();
        return;
    } else if (newPoint.y < 0 || newPoint.y > (gridHeight - 1)) {
        GenerateDefaultSnake ();
        return;
    } else if (snake.contains (newPoint)) {
        GenerateDefaultSnake ();
        return;
    }

    PlaceFruit ();
    snake.push (newPoint);
}
----------------------------------------

public void Move () {
    Point head = snake.peekFirst ();
    Point newPoint = head;
    snake.remove (snake.peekLast ());
    Point addPoint = (Point) newPoint.clone ();
    switch (direction) {
        case Direction.North :
            newPoint = new Point (head.x, head.y - 1);
            break;
        case Direction.South :
            newPoint = new Point (head.x, head.y + 1);
            break;
        case Direction.West :
            newPoint = new Point (head.x - 1, head.y);
            break;
        case Direction.East :
            newPoint = new Point (head.x + 1, head.y);
            break;
    }
    if (newPoint.equals (fruit)) {
        score += 10;
        snake.push (addPoint);
        PlaceFruit ();
    } else if (newPoint.x < 0 || newPoint.x > (gridWidth - 1)) {
        GenerateDefaultSnake ();
        PlaceFruit ();
        return;
    } else if (newPoint.y < 0 || newPoint.y > (gridHeight - 1)) {
        GenerateDefaultSnake ();
        PlaceFruit ();
        return;
    } else if (snake.contains (newPoint)) {
        GenerateDefaultSnake ();
        PlaceFruit ();
        return;
    }

    snake.push (newPoint);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23128524_23128645_2_10
23128524_23128841_1_15
Title: java convert letter to number then put all values into array 
----------------------------------------

public static void main (String [] args) {
    String input = "8479777982827987326669717378";
    int n = 3;
    int [] output = new int [(input.length () + n - 1) / n];
    for (int i = 0;
    i < output.length; i ++) {
        output [i] = Integer.parseInt (input.substring (i * n, Math.min ((i + 1) * n, input.length ())));
    }
}
----------------------------------------

public static void main (String [] args) {
    String words = "TOMORROW BEGIN";
    StringBuilder builder = new StringBuilder ();
    for (int idx = 0;
    idx < words.length (); idx ++) {
        builder.append ((int) words.charAt (idx));
    }
    int [] ints = new int [(builder.length () + 2) / 3];
    for (int idx = 0;
    idx < ints.length; idx ++) {
        int from = idx * 3;
        int to = Math.min (from + 3, builder.length ());
        ints [idx] = Integer.parseInt (builder.substring (from, to));
    }
    System.out.println (builder);
    System.out.println (Arrays.toString (ints));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23128524_23128645_2_10
23128524_23128933_1_28
Title: java convert letter to number then put all values into array 
----------------------------------------

public static void main (String [] args) {
    String input = "8479777982827987326669717378";
    int n = 3;
    int [] output = new int [(input.length () + n - 1) / n];
    for (int i = 0;
    i < output.length; i ++) {
        output [i] = Integer.parseInt (input.substring (i * n, Math.min ((i + 1) * n, input.length ())));
    }
}
----------------------------------------

public static void main (String [] args) {
    String words = "TOMORROW BEGIN";
    int sa;
    int n = 3;
    char c;
    int [] array;
    String kt = "";
    for (int i = 0;
    i < words.length (); i ++) {
        c = words.charAt (i);
        sa = (int) c;
        kt += sa;
    }
    System.out.println (kt);
    int nbPartitions = kt.length () / n + kt.length () % n;
    array = new int [nbPartitions];
    for (int i = 0;
    i < nbPartitions; i ++) {
        int begin = i * n;
        int end = (i + 1) * n;
        if (end > kt.length ()) {
            array [i] = Integer.parseInt (kt.substring (begin, kt.length ()));
            break;
        }
        array [i] = Integer.parseInt (kt.substring (begin, end));
    }
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23128524_23128841_1_15
23128524_23128933_1_28
Title: java convert letter to number then put all values into array 
----------------------------------------

public static void main (String [] args) {
    String words = "TOMORROW BEGIN";
    StringBuilder builder = new StringBuilder ();
    for (int idx = 0;
    idx < words.length (); idx ++) {
        builder.append ((int) words.charAt (idx));
    }
    int [] ints = new int [(builder.length () + 2) / 3];
    for (int idx = 0;
    idx < ints.length; idx ++) {
        int from = idx * 3;
        int to = Math.min (from + 3, builder.length ());
        ints [idx] = Integer.parseInt (builder.substring (from, to));
    }
    System.out.println (builder);
    System.out.println (Arrays.toString (ints));
}
----------------------------------------

public static void main (String [] args) {
    String words = "TOMORROW BEGIN";
    int sa;
    int n = 3;
    char c;
    int [] array;
    String kt = "";
    for (int i = 0;
    i < words.length (); i ++) {
        c = words.charAt (i);
        sa = (int) c;
        kt += sa;
    }
    System.out.println (kt);
    int nbPartitions = kt.length () / n + kt.length () % n;
    array = new int [nbPartitions];
    for (int i = 0;
    i < nbPartitions; i ++) {
        int begin = i * n;
        int end = (i + 1) * n;
        if (end > kt.length ()) {
            array [i] = Integer.parseInt (kt.substring (begin, kt.length ()));
            break;
        }
        array [i] = Integer.parseInt (kt.substring (begin, end));
    }
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23129293_23129428_1_24
23129293_23129538_1_20
Title: How to put AlertDialog in static method 
----------------------------------------

public static List < String > fromSDCard (Context mContext) {
    List < String > listChurchWall = new ArrayList < String > ();
    String string = "/mnt/sdcard/Church/Wallpaper/";
    f = new File (string + name + "/");
    if (f.exists ()) {
        files = f.listFiles ();
    } else {
        AlertDialog.Builder builder = new AlertDialog.Builder (mContext);
        int imageResource = android.R.drawable.stat_sys_warning;
        Drawable image = mContext.getResources ().getDrawable (imageResource);
        builder.setTitle ("title").setMessage ("your Message").setIcon (image).setCancelable (false).setNeutralButton ("Ok", new DialogInterface.OnClickListener () {
            public void onClick (DialogInterface dialog, int id) {
            }}

        );
        AlertDialog alert = builder.create ();
        alert.setCancelable (false);
        alert.show ();
    }
    return listChurchWall;
}
----------------------------------------

public static List < String > fromSDCard (Activity a, String title, String message) {
    List < String > listChurchWall = new ArrayList < String > ();
    String string = "/mnt/sdcard/Church/Wallpaper/";
    f = new File (string + name + "/");
    if (f.exists ()) {
        files = f.listFiles ();
    } else {
        AlertDialog.Builder dialog = new AlertDialog.Builder (a);
        dialog.setTitle (title);
        dialog.setMessage (message);
        dialog.setNeutralButton ("OK", null);
        dialog.create ().show ();
    }
    return listChurchWall;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23133952_23134368_6_22
23133952_23134524_12_26
Title: How to sort data sets Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    System.out.println (System.getProperty ("user.dir"));
    String filePath = "C:/Users/Aaron/Documents/java/car_file.txt";
    BufferedReader reader = new BufferedReader (new FileReader (filePath));
    Map < String, String > map = new TreeMap < String, String > ();
    String line = "";
    while ((line = reader.readLine ()) != null) {
        map.put (getField (line), line);
    }
    reader.close ();
    FileWriter writer = new FileWriter (filePath);
    for (String val : map.values ()) {
        writer.write (val);
        writer.write ('\n');
    }
    writer.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    FileReader file = new FileReader ("C:/Users/Aaron/Documents/java/car_file.txt");
    BufferedReader reader = new BufferedReader (file);
    String line;
    String [] fields;
    ArrayList < Vehicle > vehicleList = new ArrayList < Vehicle > ();
    while ((line = reader.readLine ()) != null) {
        fields = line.split (",");
        vehicleList.add (new Vehicle (fields [0], fields [1], fields [2], Integer.parseInt (fields [3])));
    }
    Collections.sort (vehicleList);
    for (Vehicle v : vehicleList) {
        System.out.println (v);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23134812_23134957_1_15
23134812_23134994_1_13
Title: How to split String array and store the string in another array 
----------------------------------------

public static void main (String...a) {
    String s [] = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    String [] sdf = new String [100];
    int sop = 0;
    for (int kk = 0;
    kk < s.length; kk ++) {
        if (! s [kk].equals ("-")) {
            sdf [sop] = s [kk];
            sop ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] s = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    StringBuilder builder = new StringBuilder ();
    ArrayList < String > k = new ArrayList < String > ();
    for (String str : s) {
        if (str.equals ("-")) {
            k.add (builder.toString ());
            builder.setLength (0);
        } else builder.append (str);

    }
    k.add (builder.toString ());
    System.out.println (Arrays.toString (k.toArray (new String [k.size ()])));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23134812_23134957_1_15
23134812_23135081_1_20
Title: How to split String array and store the string in another array 
----------------------------------------

public static void main (String...a) {
    String s [] = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    String [] sdf = new String [100];
    int sop = 0;
    for (int kk = 0;
    kk < s.length; kk ++) {
        if (! s [kk].equals ("-")) {
            sdf [sop] = s [kk];
            sop ++;
        }
    }
}
----------------------------------------

public static void main (String [] a) {
    String s [] = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    int sop = 0;
    String [] sdf = new String [100];
    String temp = "";
    for (int kk = 0;
    kk < s.length; kk ++) {
        if (s [kk].equals ("-")) {
            sdf [sop] = temp;
            temp = "";
            sop ++;
        } else {
            temp += s [kk];
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23134812_23134994_1_13
23134812_23135081_1_20
Title: How to split String array and store the string in another array 
----------------------------------------

public static void main (String [] args) {
    String [] s = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    StringBuilder builder = new StringBuilder ();
    ArrayList < String > k = new ArrayList < String > ();
    for (String str : s) {
        if (str.equals ("-")) {
            k.add (builder.toString ());
            builder.setLength (0);
        } else builder.append (str);

    }
    k.add (builder.toString ());
    System.out.println (Arrays.toString (k.toArray (new String [k.size ()])));
}
----------------------------------------

public static void main (String [] a) {
    String s [] = {"a", "b", "c", "-", "g", "t", "-", "q", "-", "a", "s", "d", "-", "a", "b", "y"};
    int sop = 0;
    String [] sdf = new String [100];
    String temp = "";
    for (int kk = 0;
    kk < s.length; kk ++) {
        if (s [kk].equals ("-")) {
            sdf [sop] = temp;
            temp = "";
            sop ++;
        } else {
            temp += s [kk];
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23136817_24917258_1_20
23136817_35821164_1_10
Title: Codingbat- Recursion1- count7 
----------------------------------------

public int count7 (int n) {
    int c = 0;
    if (7 > n) {
        return 0;
    } else {
        if (7 == n % 10) {
            c = 1;
        } else {
            c = 0;
        }
    }
    return c + count7 (n / 10);
}
----------------------------------------

public static int count7 (int n) {
    if (n == 7) return 1;
    else if (n > 9) {
        int a = count7 (n % 10);
        int b = count7 (n / 10);
        return a + b;
    } else return 0;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23141307_23614930_138_235
23141307_23614930_246_284
Title: GUI Calculator calculations 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == num [0]) {
        display = tf.getText ();
        tf.setText (display + "1");
    } else if (e.getSource () == num [1]) {
        display = tf.getText ();
        tf.setText (display + "2");
    } else if (e.getSource () == num [2]) {
        display = tf.getText ();
        tf.setText (display + "3");
    } else if (e.getSource () == num [3]) {
        display = tf.getText ();
        tf.setText (display + "4");
    } else if (e.getSource () == num [4]) {
        display = tf.getText ();
        tf.setText (display + "5");
    } else if (e.getSource () == num [5]) {
        display = tf.getText ();
        tf.setText (display + "6");
    } else if (e.getSource () == num [6]) {
        display = tf.getText ();
        tf.setText (display + "7");
    } else if (e.getSource () == num [7]) {
        display = tf.getText ();
        tf.setText (display + "8");
    } else if (e.getSource () == num [8]) {
        display = tf.getText ();
        tf.setText (display + "9");
    } else if (e.getSource () == btNum0) {
        display = tf.getText ();
        tf.setText (display + "0");
    } else if (e.getSource () == btDot) {
        String dot = ".";
        display = tf.getText ();
        tf.setText (display + ".");
    } else if (e.getSource () == btAdd) {
        TEMP = Double.parseDouble (tf.getText ());
        tf.setText ("");
        addBool = true;
    } else if (e.getSource () == btSubtract) {
        TEMP = Double.parseDouble (tf.getText ());
        tf.setText ("");
        subBool = true;
    } else if (e.getSource () == btMultiply) {
        TEMP = Double.parseDouble (tf.getText ());
        tf.setText ("");
        mulBool = true;
    } else if (e.getSource () == btDivide) {
        TEMP = Double.parseDouble (tf.getText ());
        tf.setText ("");
        divBool = true;
    } else if (e.getSource () == btExponent) {
        TEMP = Double.parseDouble (tf.getText ());
        tf.setText ("");
        expBool = true;
    } else if (e.getSource () == btClear) {
        tf.setText (null);
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    SolveTEMP = Double.parseDouble (tf.getText ());
    if (addBool == true) {
        SolveTEMP = SolveTEMP + TEMP;
    } else if (subBool == true) {
        SolveTEMP = TEMP - SolveTEMP;
    } else if (mulBool == true) {
        SolveTEMP = SolveTEMP * TEMP;
    } else if (divBool == true) {
        SolveTEMP = TEMP / SolveTEMP;
    } else if (expBool == true) {
        double a = TEMP, b = SolveTEMP;
        SolveTEMP = 1;
        for (int i = 0;
        i < b; i ++) {
            SolveTEMP = SolveTEMP * TEMP;
        }
    }

    tf.setText (Double.toString (SolveTEMP));
    addBool = false;
    subBool = false;
    mulBool = false;
    divBool = false;
    expBool = false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23150232_23150295_1_17
23150232_23150346_10_25
Title: Not able to insert values for SQLIte in android 
----------------------------------------

public void insertData (String name, String password) {
    db = helper.getWritableDatabase ();
    Log.d ("LOG-MSG", "insertDataMethod Entry");
    try {
        cv = new ContentValues ();
        cv.put (SqliteHelper.NAME, name);
        Log.d ("LOG-MSG", "Name inserted");
        cv.put (SqliteHelper.PASSWORD, password);
        Log.d ("LOG-MSG", "password inserted");
    } catch (Exception e) {
        Log.d ("LOG-MSG-EXCEPTION", e.toString ());
    }
    db.insert (SqliteHelper.TABLE_NAME, null, cv);
}
----------------------------------------

public void insertData (String name, String password) {
    db = helper.getWritableDatabase ();
    cv = new ContentValues ();
    Log.d ("LOG-MSG", "insertDataMethod Entry");
    try {
        cv.put (SqliteHelper.NAME, name);
        Log.d ("LOG-MSG", "Name inserted");
        cv.put (SqliteHelper.PASSWORD, password);
        Log.d ("LOG-MSG", "password inserted");
    } catch (Exception e) {
        Log.d ("LOG-MSG-EXCEPTION", e.toString ());
    }
    db.insert (SqliteHelper.TABLE_NAME, null, cv);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23159454_23159571_1_27
23159454_23159590_6_23
Title: Remove Deplicate Strings from array in java 
----------------------------------------

public static void main (String [] args) {
    String art [] = {"beatles", "floyd", "beatles", "dream", "theater", "beatles"};
    int plays [] = {100, 200, 50, 30, 200, 70};
    Map < String, Integer > artistCount = new HashMap < String, Integer > ();
    for (int i = 0;
    i < art.length; i ++) {
        if (! artistCount.containsKey (art [i])) {
            artistCount.put (art [i], 0);
        }
        artistCount.put (art [i], artistCount.get (art [i]) + plays [i]);
    }
    String artFinal [] = new String [artistCount.size ()];
    int playsFinal [] = new int [artistCount.size ()];
    int i = 0;
    for (Map.Entry < String, Integer > en : artistCount.entrySet ()) {
        artFinal [i] = en.getKey ();
        playsFinal [i] = en.getValue ();
        i ++;
    }
    for (int j = 0;
    j < artFinal.length; j ++) {
        System.out.println (artFinal [j] + ": " + playsFinal [j]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] artists = {"beatles", "floyd", "beatles", "dream theater", "beatles"};
    Map < String, Integer > artistToCount = new LinkedHashMap < > ();
    for (String artist : artists) {
        if (! artistToCount.containsKey (artist)) {
            artistToCount.put (artist, 1);
        } else {
            artistToCount.put (artist, artistToCount.get (artist) + 1);
        }
    }
    for (String artist : artistToCount.keySet ()) {
        System.out.printf ("%s => %d\n", artist, artistToCount.get (artist));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23159624_23207412_1_26
23159624_23207412_29_52
Title: Finding elements in array with binary search 
----------------------------------------

public static int binarySearch (int number, int [] array) {
    boolean isHere = false;
    Integer index = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == number) {
            isHere = true;
            i = array.length;
        }
    }
    if (! isHere) {
        index = - 1;
    } else {
        int arrayStart = 0;
        int arrayEnd = array.length;
        index = binarySearch (number, arrayStart, arrayEnd, array);
    }
    return index;
}
----------------------------------------

private static int binarySearch (int number, int start, int end, int [] array) {
    int middle = (start + end) / 2;
    if (array [middle] == number) {
        return middle;
    } else {
        if (number < array [middle]) {
            return binarySearch (number, start, middle, array);
        } else {
            return binarySearch (number, middle, end, array);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23160584_23160631_1_11
23160584_23160638_1_10
Title: java get all values of an array in a method 
----------------------------------------

public static String split_in_string (int [] an) {
    int ans;
    String ansl = "";
    for (int i = 0;
    i < an.length; i ++) {
        ans = an [i];
        ansl = Integer.toString (ans);
        Sysytem.out.println (ansl + " ");
    }
    return ansl;
}
----------------------------------------

public static String split_in_string (int [] an) {
    int ans;
    String ansl = "";
    for (int i = 0;
    i < an.length; i ++) {
        ans = an [i];
        ansl += Integer.toString (ans);
    }
    return ansl;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23162153_23162393_6_27
23162153_23163115_19_29
Title: Recursion using BufferedReader 
----------------------------------------

public static void main (String [] args) throws IOException {
    String [] grid = new String [15];
    BufferedReader in = new BufferedReader (new FileReader ("location.txt"));
    String str = null;
    ArrayList < String > lines = new ArrayList < String > ();
    int i = 0;
    while ((str = in.readLine ()) != null) {
        grid [i] = str;
        i ++;
    }
    for (int x = 0;
    x < grid.length; x ++) {
        String row = grid [x];
        for (int y = 0;
        y < row.length (); y ++) {
            if (row.charAt (y) == '-') {
                System.out.println ("Cancer found at " + x + "," + y);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    readFile ();
    displayFile ();
    System.out.println ("\n========================================");
    if (searchInfectedCells (lines) == 0) {
        System.out.println ("None of the Cells are damaged");
    }
    System.out.println ("========================================");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23166739_23166841_1_15
23166739_23166851_1_13
Title: Unable to write a method in Java to find a list of unique IP address from a text file? 
----------------------------------------

public int countDistinctClientIPAddresses () {
    try {
        readLogFile ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    Set < String > uniqueIPs = new HashSet < String > ();
    for (int k = 0;
    k < count; k ++) {
        uniqueIPs.add (entryLog [k].getCsIpAddress ());
    }
    return uniqueIPs.size ();
}
----------------------------------------

public int countDistinctClientIPAddresses () {
    try {
        readLogFile ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    Set < String > entries = new HashSet < String > ();
    for (LogEntry e : entryLog) {
        entries.add (e.getCsIpAddress ());
    }
    return entries.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23169837_23171294_14_36
23169837_23171294_21_32
Title: I cant make my java code wait for a routine to finish to start another (equal routine) 
----------------------------------------

public void run () {
    tx1.setText ("");
    tx2.setText ("");
    count = 5;
    Timer timer = new Timer ();
    timer.scheduleAtFixedRate (new TimerTask () {
        int counter = 0;
        public void run () {
            tx1.setText ("");
            tx1.setText (Integer.toString (count));
            System.out.println ("!");
            count --;
            counter ++;
            if (counter == 6) {
                tx2.setText ("FIRE");
                latch.countDown ();
                this.cancel ();
            }
        }}

    , 1000, 1000);
}
----------------------------------------

public void run () {
    tx1.setText ("");
    tx1.setText (Integer.toString (count));
    System.out.println ("!");
    count --;
    counter ++;
    if (counter == 6) {
        tx2.setText ("FIRE");
        latch.countDown ();
        this.cancel ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23176350_23176546_17_32
23176350_23176708_14_40
Title: Buttons and TextView in Android 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    mTextView = (TextView) findViewById (R.id.txtVw1);
    aBut = (Button) findViewById (R.id.btn1);
    aBut.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            mTextView.setText ("Some Text");
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    final Button aBut = (Button) findViewById (R.id.btn1);
    Button bBut = (Button) findViewById (R.id.btn2);
    final TextView aText = (TextView) findViewById (R.id.txtVw1);
    final TextView bText = (TextView) findViewById (R.id.txtVw2);
    aBut.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            aText.setText ("You Clicked Button 1");
        }}

    );
    bBut.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            bText.setText ("You Clicked Button 2");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23186461_23186746_21_30
23186461_23186798_9_24
Title: Java: sorting/searching an array 
----------------------------------------

public static LinkedList < Integer > getScores (int size) {
    LinkedList < Integer > result = new LinkedList < Integer > ();
    for (int index = 0;
    index < size; index ++) {
        System.out.println ("Enter golf score number " + (index + 1) + ":");
        Scanner keyboard = new Scanner (System.in);
        result.add (keyboard.nextInt ());
    }
    return result;
}
----------------------------------------

public static int [] getScores (int scores [], int size) {
    int index;
    for (index = 0; index < size; index ++) {
        System.out.println ("Enter golf score number " + index + 1 + ":");
        Scanner keyboard = new Scanner (System.in);
        scores [index] = keyboard.nextInt ();
    }
    return scores;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23186461_23186746_31_41
23186461_23186798_33_46
Title: Java: sorting/searching an array 
----------------------------------------

public static void insertionSort (LinkedList < Integer > array) {
    java.util.Collections.sort (array, new Comparator < Integer > () {
        @Override
        public int compare (Integer o1, Integer o2) {
            return o1 - o2;
        }}

    );
}
----------------------------------------

public static void insertionSort (int array []) {
    int n = array.length;
    for (int j = 1;
    j < n; j ++) {
        int key = array [j];
        int i = j - 1;
        while ((i > - 1) && (array [i] > key)) {
            array [i + 1] = array [i];
            i --;
        }
        array [i + 1] = key;
    }
    printNumbers (array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23186461_23186746_31_41
23186461_23191434_41_64
Title: Java: sorting/searching an array 
----------------------------------------

public static void insertionSort (LinkedList < Integer > array) {
    java.util.Collections.sort (array, new Comparator < Integer > () {
        @Override
        public int compare (Integer o1, Integer o2) {
            return o1 - o2;
        }}

    );
}
----------------------------------------

public static void insertionSort (int array [], int size) {
    int index;
    int scan;
    int unsortedValue;
    for (index = 1; index < size; index ++) {
        unsortedValue = array [index];
        scan = index;
        array [scan] = unsortedValue;
        while (scan > 0 && array [scan - 1] < array [scan]) {
            swap (array [scan - 1], array [scan]);
            scan = scan - 1;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23186461_23186798_33_46
23186461_23191434_41_64
Title: Java: sorting/searching an array 
----------------------------------------

public static void insertionSort (int array []) {
    int n = array.length;
    for (int j = 1;
    j < n; j ++) {
        int key = array [j];
        int i = j - 1;
        while ((i > - 1) && (array [i] > key)) {
            array [i + 1] = array [i];
            i --;
        }
        array [i + 1] = key;
    }
    printNumbers (array);
}
----------------------------------------

public static void insertionSort (int array [], int size) {
    int index;
    int scan;
    int unsortedValue;
    for (index = 1; index < size; index ++) {
        unsortedValue = array [index];
        scan = index;
        array [scan] = unsortedValue;
        while (scan > 0 && array [scan - 1] < array [scan]) {
            swap (array [scan - 1], array [scan]);
            scan = scan - 1;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23187065_23187588_5_22
23187065_23187919_1_68
Title: How to relate the Arrays in Java? 
----------------------------------------

public static void main (String [] args) {
    String signal [] = new String [] {"x", "y", "y", "C", "C", "z", "C", "C", "x", "C"};
    int time [] = new int [] {2, 5, 1, 4, 7, 8, 2, 6, 4, 3};
    int index = 0;
    while (index < time.length) {
        int sum = time [index];
        String sig = signal [index];
        while ((index < (signal.length - 1) && signal [index + 1].equals ("C"))) {
            sum = sum + time [index + 1];
            index ++;
        }
        System.out.println (sig + " " + sum);
        index ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    String signal [] = {"x", "y", "y", "C", "C", "z", "C", "C", "x", "C"};
    int time [] = {2, 5, 1, 4, 7, 8, 2, 6, 4, 3};
    int i = 0;
    while (i < signal.length) {
        switch (signal [i]) {
            case "x" :
                {
                    System.out.print ("x = ");
                    int sum = time [i];
                    if (signal [i + 1] == "C") {
                        i ++;
                        while (i < signal.length && signal [i] == "C") {
                            sum += time [i];
                            i ++;
                        }
                    } else i ++;

                    System.out.print (sum + " ");
                    break;
                } case "y" :
                {
                    System.out.print ("y = ");
                    int sum = time [i];
                    if (signal [i + 1] == "C") {
                        i ++;
                        while (i < signal.length && signal [i] == "C") {
                            sum += time [i];
                            i ++;
                        }
                    } else i ++;

                    System.out.print (sum + " ");
                    break;
                } case "z" :
                {
                    System.out.print ("z = ");
                    int sum = time [i];
                    if (signal [i + 1] == "C") {
                        i ++;
                        while (i < signal.length && signal [i] == "C") {
                            sum += time [i];
                            i ++;
                        }
                    } else i ++;

                    System.out.print (sum + " ");
                    break;
                }}
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23188575_23188756_1_14
23188575_23188769_1_24
Title: Troubles outputting array counter 
----------------------------------------

public static int calculatePrizesWon (int [] winnersCount, int roundWinner) {
    int prizesWon = 0;
    if (winnersCount [roundWinner] == 0) {
        JOptionPane.showMessageDialog (null, "Prize won: $106 consolidation prize!");
    } else if (winnersCount [roundWinner] == 1) {
        JOptionPane.showMessageDialog (null, "Prize won: $15,125!");
    } else if (winnersCount [roundWinner] == 2) {
        JOptionPane.showMessageDialog (null, "Prize won: $30,110!");
    } else if (winnersCount [roundWinner] == 3) {
        JOptionPane.showMessageDialog (null, "Prize won: $15,120,000!");
    }

    return prizesWon;
}
----------------------------------------

public static int calculatePrizesWon (int [] winnersCount, int roundWinner) {
    int prizesWon = 0;
    for (int i = 0;
    i < winnersCount.length; i ++) {
        if (winnersCount [i] == 0) {
            JOptionPane.ShowMessageDialog (null, "Player " + i + " - Prize won: $106 consolidation prize!");
        } else if (winnersCount [i] == 1) {
            JOptionPane.ShowMessageDialog (null, "Player " + i + " - Prize won: $15,125!");
        } else if (winnersCount [i] == 2) {
            JOptionPane.ShowMessageDialog (null, "Player " + i + " - Prize won: $30,110!");
        } else if (winnersCount [i] == 3) {
            JOptionPane.ShowMessageDialog (null, "Player " + i + " - Prize won: $15,120,000!");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
231917_232031_1_19
231917_232382_1_19
Title: "Finding numerical substrings mathematically without string comparison" 
----------------------------------------

private static boolean findMatch (int a, int b) {
    if (b > a) return false;

    if (a == b) return true;

    int needleLength = getLength (b);
    int exponent = exponents [needleLength];
    int subNum;
    while (a > b) {
        subNum = a % exponent;
        if (subNum == b) return true;

        a /= 10;
    }
    return false;
}
----------------------------------------

private static boolean findMatch (int a, final int b) {
    if (b > a) return false;

    if (a == b) return true;

    int needleLength = 0;
    while (b > exponents [len]) {
        needleLength ++;
    }
    needleLength ++;
    final int exponent = exponents [needleLength];
    int subNum;
    while (a >= 1 && a <= b) {
        subNum = a % exponent;
        if (subNum == b) return true;

        a /= 10;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23201663_24550458_8_18
23201663_31730390_1_17
Title: OkHttp in android for making network requests 
----------------------------------------

protected String doInBackground (String...params) {
    try {
        client = new OkHttpClient ();
        s = post ("https://raw.github.com/square/okhttp/master/README.md", "");
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------

@Override
protected String doInBackground (String...ulr) {
    Response response = null;
    OkHttpClient client = new OkHttpClient ();
    Request request = new Request.Builder ().url (ulr [0]).build ();
    try {
        response = client.newCall (request).execute ();
        return response.body ().string ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23205020_23213601_29_50
23205020_23249000_47_83
Title: Java - Sort Strings like Windows Explorer 
----------------------------------------

public int compare (File o1, File o2) {
    SplitteFileName data1 = getSplittedFileName (o1);
    SplitteFileName data2 = getSplittedFileName (o2);
    int result = data1.name.compareToIgnoreCase (data2.name);
    if (result == 0) {
        result = data1.number.compareTo (data2.number);
    }
    if (result == 0) {
        result = - Integer.compare (data1.numberText.length (), data2.numberText.length ());
    }
    if (result == 0) {
        result = data1.ext.compareTo (data2.ext);
    }
    return result;
}
----------------------------------------

public int compare (String str1, String str2) {
    Iterator < String > i1 = splitStringPreserveDelimiter (str1).iterator ();
    Iterator < String > i2 = splitStringPreserveDelimiter (str2).iterator ();
    while (true) {
        if (! i1.hasNext () && ! i2.hasNext ()) {
            return 0;
        }
        if (! i1.hasNext () && i2.hasNext ()) {
            return - 1;
        }
        if (i1.hasNext () && ! i2.hasNext ()) {
            return 1;
        }
        String data1 = i1.next ();
        String data2 = i2.next ();
        int result;
        try {
            result = Long.compare (Long.valueOf (data1), Long.valueOf (data2));
            if (result == 0) {
                result = - Integer.compare (data1.length (), data2.length ());
            }
        } catch (NumberFormatException ex) {
            result = data1.compareToIgnoreCase (data2);
        }
        if (result != 0) {
            return result;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23212238_23212476_31_103
23212238_49253201_21_47
Title: ANDROID: Converting inputted numbers to words 
----------------------------------------

public static String convert (long number) {
    if (number == 0) {
        return "zero";
    }
    String snumber = Long.toString (number);
    String mask = "000000000000";
    DecimalFormat df = new DecimalFormat (mask);
    snumber = df.format (number);
    int billions = Integer.parseInt (snumber.substring (0, 3));
    int millions = Integer.parseInt (snumber.substring (3, 6));
    int hundredThousands = Integer.parseInt (snumber.substring (6, 9));
    int thousands = Integer.parseInt (snumber.substring (9, 12));
    String tradBillions;
    switch (billions) {
        case 0 :
            tradBillions = "";
            break;
        case 1 :
            tradBillions = convertLessThanOneThousand (billions) + " billion ";
            break;
        default :
            tradBillions = convertLessThanOneThousand (billions) + " billion ";
    }
    String result = tradBillions;
    String tradMillions;
    switch (millions) {
        case 0 :
            tradMillions = "";
            break;
        case 1 :
            tradMillions = convertLessThanOneThousand (millions) + " million ";
            break;
        default :
            tradMillions = convertLessThanOneThousand (millions) + " million ";
    }
    result = result + tradMillions;
    String tradHundredThousands;
    switch (hundredThousands) {
        case 0 :
            tradHundredThousands = "";
            break;
        case 1 :
            tradHundredThousands = "one thousand ";
            break;
        default :
            tradHundredThousands = convertLessThanOneThousand (hundredThousands) + " thousand ";
    }
    result = result + tradHundredThousands;
    String tradThousand;
    tradThousand = convertLessThanOneThousand (thousands);
    result = result + tradThousand;
    return result.replaceAll ("^\\s+", "").replaceAll ("\\b\\s{2,}\\b", " ");
}
----------------------------------------

public static String convert (final int n) {
    if (n < 0) {
        return "Minus " + convert (- n);
    }
    if (n < 20) {
        return units [n];
    }
    if (n < 100) {
        return tens [n / 10] + ((n % 10 != 0) ? " " : "") + units [n % 10];
    }
    if (n < 1000) {
        return units [n / 100] + " Hundred" + ((n % 100 != 0) ? " " : "") + convert (n % 100);
    }
    if (n < 100000) {
        return convert (n / 1000) + " Thousand" + ((n % 10000 != 0) ? " " : "") + convert (n % 1000);
    }
    if (n < 10000000) {
        return convert (n / 100000) + " Lakh" + ((n % 100000 != 0) ? " " : "") + convert (n % 100000);
    }
    return convert (n / 10000000) + " Crore" + ((n % 10000000 != 0) ? " " : "") + convert (n % 10000000);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23215415_23232618_107_116
23215415_23232618_215_229
Title: create an transparent rectangle over blurred background in jframe 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (background != null) {
        Graphics2D g2d = (Graphics2D) g.create ();
        int x = (getWidth () - background.getWidth ()) / 2;
        int y = (getHeight () - background.getHeight ()) / 2;
        g2d.drawImage (background, x, y, this);
        g2d.dispose ();
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    GraphicsUtilities.applyQualityRenderingHints (g2d);
    int width = getWidth () - 1;
    int height = getHeight () - 1;
    int buffer = FRAME / 2;
    RoundRectangle2D base = new RoundRectangle2D.Double (buffer, buffer, width - FRAME, height - FRAME, RADIUS, RADIUS);
    g2d.setColor (new Color (0, 0, 0, 128));
    g2d.fill (base);
    g2d.setColor (Color.WHITE);
    g2d.setStroke (new BasicStroke (FRAME, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
    g2d.draw (base);
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23219494_23219546_1_17
23219494_23219691_1_17
Title: Missing return statement error in method 
----------------------------------------

public static String doStuff (int num) {
    for (int i = 1;
    i < 5; i ++) {
        if (i == num) {
            String str = String.valueOf (i);
            return str;
        } else if (i > 4) {
            return "too large";
        } else if (i < 1) {
            return "too small";
        }

    }
    return null;
}
----------------------------------------

public static String doStuff (int num) {
    for (int i = 1;
    i < 5; i ++) {
        if (i == num) {
            String str = String.valueOf (i);
            return str;
        } else if (i > 4) {
            return "too large";
        } else if (i < 1) {
            return "too small";
        }

    }
    return "default";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23219801_23220113_2_17
23219801_31785129_8_30
Title: How do i set up a DelayQueue's Delay 
----------------------------------------

public static void main (String...args) {
    DelayQueue dq = new DelayQueue ();
    DeleyedTest ob1 = new DeleyedTest (10);
    DeleyedTest ob2 = new DeleyedTest (5);
    DeleyedTest ob3 = new DeleyedTest (15);
    dq.offer (ob1);
    dq.offer (ob2);
    dq.offer (ob3);
    Iterator itr = dq.iterator ();
    while (itr.hasNext ()) {
        DeleyedTest dt = (DeleyedTest) itr.next ();
        System.out.println (dt.deleyTime);
    }
}
----------------------------------------

public static void main (String [] args) {
    BlockingQueue < DelayedElement > blockingQueue = new DelayQueue < DelayedElement > ();
    try {
        blockingQueue.put (new DelayedElement (4000, "Message with delay 4s"));
        blockingQueue.put (new DelayedElement (2000, "Message with delay 2s"));
        blockingQueue.put (new DelayedElement (9000, "Message with delay 9s"));
    } catch (InterruptedException ie) {
    }
    while (! blockingQueue.isEmpty ()) {
        try {
            System.out.println ("><![CDATA[>" + blockingQueue.take ());
        } catch (InterruptedException ie) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23228647_23228726_1_15
23228647_23228747_2_15
Title: Scrambling strings multiple times in eclipse 
----------------------------------------

public static String mixer (String text) {
    Random r = new Random ();
    int r1 = r.nextInt (text.length ());
    int r2 = r.nextInt (text.length ());
    String a = text.substring (0, r1);
    char b = text.charAt (r1);
    String c = text.substring (r1 + 1, r2);
    char d = text.charAt (r2);
    String e = text.substring (r2 + 1, text.length ());
    text = a + b + c + d + e;
    return text;
}
----------------------------------------

public static String mixer (String in, Random rnd) {
    StringBuilder sb = new StringBuilder ();
    if (in != null) {
        List < Character > chars = new ArrayList < Character > ();
        for (char ch : in.toCharArray ()) {
            chars.add (ch);
        }
        Collections.shuffle (chars, rnd);
        for (char ch : chars) {
            sb.append (ch);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23231209_23233088_13_36
23231209_23251518_15_42
Title: "JavaFX: Reacting to Single Double and Triple Click" 
----------------------------------------

public void start (Stage primaryStage) {
    Duration maxTimeBetweenSequentialClicks = Duration.millis (500);
    PauseTransition clickTimer = new PauseTransition (maxTimeBetweenSequentialClicks);
    final IntegerProperty sequentialClickCount = new SimpleIntegerProperty (0);
    clickTimer.setOnFinished (event -> {
        int count = sequentialClickCount.get ();
        if (count == 1) System.out.println ("Single click");

        if (count == 2) System.out.println ("Double click");

        if (count == 3) System.out.println ("Triple click");

        if (count > 3) System.out.println ("Multiple click: " + count);

        sequentialClickCount.set (0);
    });
    Pane root = new Pane ();
    root.setOnMouseClicked (event -> {
        sequentialClickCount.set (sequentialClickCount.get () + 1);
        clickTimer.playFromStart ();
    });
    primaryStage.setScene (new Scene (root, 250, 150));
    primaryStage.show ();
}
----------------------------------------

public void start (Stage stage) throws Exception {
    Circle c = new Circle ();
    c.setRadius (100);
    c.setCenterX (100);
    c.setCenterY (100);
    c.setFill (Color.AQUA);
    c.setStroke (Color.BLACK);
    c.setStrokeWidth (3);
    c.setOnMousePressed ((e) -> {
        switch (e.getClickCount ()) {
            case 1 :
                System.out.println ("One click");
                break;
            case 2 :
                System.out.println ("Two clicks");
                break;
            case 3 :
                System.out.println ("Three clicks");
                break;
        }
    });
    stage.setScene (new Scene (new Group (c)));
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23233875_23233924_1_12
23233875_23233930_10_18
Title: "Java beginner help cannot resolve a variable" 
----------------------------------------

public static int getnum () {
    Scanner console = new Scanner (System.in);
    int num;
    do {
        System.out.println ("Enter a number that has only five digits ");
        num = console.nextInt ();
    } while (num < 10000 || num > 99999);
    return num;
}
----------------------------------------

public static int getnum () {
    Scanner console = new Scanner (System.in);
    int num;
    do {
        System.out.println ("Enter a number that has only five digits ");
        num = console.nextInt ();
    } while (num < 10000 || num > 99999);
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23239239_41292801_66_80
23239239_41292801_93_105
Title: Separate touch from mouse event 
----------------------------------------

public void handle (TouchEvent event) {
    System.out.println ("Touch released");
    Button button = (Button) event.getSource ();
    double x = event.getTouchPoint ().getX ();
    double y = event.getTouchPoint ().getY ();
    if (button.contains (x, y)) {
        System.out.println ("Setting skip.");
        skip = true;
    }
}
----------------------------------------

public void handle (ActionEvent event) {
    if (skip) {
        skip = false;
        System.out.println ("Action skipped.");
        return;
    }
    System.out.println ("Action happens!");
    app.showTime ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23251861_23253362_12_49
23251861_23255317_7_32
Title: Regex to separate the lines of the file 
----------------------------------------

public static void main (String [] args) {
    try {
        Scanner scanner = new Scanner (new File ("test.txt"));
        while (scanner.hasNext ()) {
            String string = scanner.useDelimiter ("\n").next ();
            if (string.contains ("Lesson no")) {
                System.out.print (string);
            } else {
                if (! string.equals (" ") && ! string.equals ("\n") && ! string.equals ("") && ! string.equals ("\r")) {
                    if (string.contains (":")) {
                        StringTokenizer st = new StringTokenizer (string, ":");
                        String key = "";
                        String value = "";
                        while (st.hasMoreElements ()) {
                            key = st.nextElement ().toString ();
                            value = st.nextElement ().toString ();
                            System.out.print (" " + key + " : " + value);
                        }
                    } else {
                        System.out.println (string);
                    }
                }
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String text = null;
    try {
        text = new Scanner (new File (path)).useDelimiter ("\\z").next ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    Pattern pat = Pattern.compile (pattern, Pattern.DOTALL);
    Matcher m = pat.matcher (text);
    StringBuilder sb = new StringBuilder ("[");
    while (m.find ()) {
        sb.append ("{");
        for (int i = 1;
        i <= m.groupCount (); i ++) {
            sb.append ("\"").append (m.group (i));
            if (i % 2 == 0) sb.append ("\",");
            else sb.append ("\":");

        }
        sb.deleteCharAt (sb.length () - 1).append ("},");
    }
    sb.deleteCharAt (sb.length () - 1).append ("]");
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23256578_23316723_89_118
23256578_23318682_89_113
Title: Trying to get my java menu via methods to count properly 
----------------------------------------

int reportmenu () {
    String mnumber3;
    int number3;
    String output = "ACME AIRLINES" + " \n " + " 1. All Flight Info" + " \n " + " 2. All Reservation Info (Don't Work Yet)" + " \n " + " 3. Value of Reservations of a specific type (Don't Work Yet)" + " \n " + " 4. All Reservations of a specific flight (Don't Work Yet)" + " \n" + " 5. All Flights from a specific city (Don't Work Yet)" + " \n" + " 6. Specific Reservation Information (Don't Work Yet)" + " \n" + " 7. Summary of all flights (Don't Work Yet)" + " \n" + " 8. All Flights to a specific city (Don't Work Yet)" + " \n" + " 9. Exit Report Menu" + " \n" + " Please make your selection  >";
    mnumber3 = JOptionPane.showInputDialog (null, output, " ", JOptionPane.QUESTION_MESSAGE);
    if (mnumber3 == null || mnumber3.length () == 0) {
        number3 = 9;
    } else {
        try {
            number3 = Integer.parseInt (mnumber3);
        } catch (Exception e) {
            number3 = 9;
        }
    }
    return number3;
}
----------------------------------------

int reportmenu () {
    String mnumber3;
    int number3;
    String output = "ACME AIRLINES" + " \n " + " 1. All Flight Info" + " \n " + " 2. All Reservation Info " + " \n " + " 3. Value of Reservations of a specific type " + " \n " + " 4. All Reservations of a specific flight " + " \n" + " 5. All Flights from a specific city " + " \n" + " 6. Specific Reservation Information " + " \n" + " 7. Summary of all flights " + " \n" + " 8. All Flights to a specific city " + " \n" + " 9. Exit Report Menu" + " \n" + " Please make your selection  >";
    mnumber3 = JOptionPane.showInputDialog (null, output, " ", JOptionPane.QUESTION_MESSAGE);
    try {
        number3 = Integer.parseInt (mnumber3);
    } catch (Exception e) {
        number3 = 9;
    }
    return number3;
}
----------------------------------------
