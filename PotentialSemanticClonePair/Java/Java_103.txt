$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42749079_42749133_9_20
42749079_42749229_6_17
Title: Java - toggle between two strings 
----------------------------------------

public static void main (String [] args) {
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
    System.out.println (toggleString ());
}
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > () {

        {
            this.add ("good");
            this.add ("bad");
        }

    }

    ;
    Collections.shuffle (list);
    System.out.println (list.get (0));
    Collections.shuffle (list);
    System.out.println (list.get (0));
    Collections.shuffle (list);
    System.out.println (list.get (0));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42750256_42751917_21_90
42750256_42752134_8_71
Title: Java Layout Frustration 
----------------------------------------

public StackPanel () {
    setLayout (new BorderLayout ());
    aTitle = new JLabel ("Operations");
    bTitle = new JLabel ("Data Structure Contents");
    west = new JPanel ();
    west.setLayout (new BorderLayout ());
    west.setPreferredSize (new Dimension (200, 200));
    west.setBorder (BorderFactory.createLineBorder (Color.black));
    west.setBackground (new Color (234, 237, 242));
    add (west, BorderLayout.WEST);
    west.add (aTitle, BorderLayout.NORTH);
    westSub1 = new JPanel (new GridLayout (4, 2));
    push = new JButton ("PUSH");
    westSub1.add (push);
    pushText = new JTextArea ("pushtxt");
    westSub1.add (pushText);
    pop = new JButton ("POP");
    westSub1.add (pop);
    popText = new JTextArea ("poptxt");
    westSub1.add (popText);
    peek = new JButton ("PEEK");
    westSub1.add (peek);
    peekText = new JTextArea ("g");
    westSub1.add (peekText);
    test = new JButton ("TEST");
    westSub1.add (test);
    resultText = new JTextArea ("");
    westSub1.add (resultText);
    west.add (westSub1, BorderLayout.CENTER);
    east = new JPanel ();
    east.setPreferredSize (new Dimension (400, 100));
    east.setBorder (BorderFactory.createLineBorder (Color.black));
    east.setBackground (new Color (255, 255, 255));
    east.add (bTitle);
    add (east, BorderLayout.CENTER);
    south = new JPanel ();
    south.setLayout (new BorderLayout ());
    south.setPreferredSize (new Dimension (100, 150));
    south.setBorder (BorderFactory.createLineBorder (Color.black));
    south.setBackground (new Color (240, 240, 240));
    add (south, BorderLayout.SOUTH);
    cTitle = new JLabel ("Information");
    south.add (cTitle, BorderLayout.NORTH);
    infoText = new JTextArea ("This is where commands will be displayed.");
    south.add (infoText, BorderLayout.CENTER);
}
----------------------------------------

public StackPanel () {
    double size [] [] = {{0.3, 0.7}, {TableLayout.FILL, 70}};
    setLayout (new TableLayout (size));
    double sizeWest [] [] = {{0.5, 0.5}, {20, 20, 20, 20, 20, 20}};
    setLayout (new TableLayout (size));
    west = new JPanel (new TableLayout (sizeWest));
    east = new JPanel ();
    south = new JPanel ();
    aTitle = new JLabel ("Operations");
    bTitle = new JLabel ("Data Structure Contents");
    cTitle = new JLabel ("Information");
    infoText = new JTextArea ("This is where commands will be displayed.");
    pushText = new JTextArea ("pushtxt");
    popText = new JTextArea ("poptxt");
    peekText = new JTextArea ("g");
    resultText = new JTextArea ("");
    west.add (aTitle, "0,0,1,0");
    west.add (pushText, "0,1");
    west.add (popText, "0,2");
    west.add (peekText, "0,3");
    west.add (resultText, "0,4");
    east.add (bTitle);
    south.add (cTitle);
    south.add (infoText);
    push = new JButton ("PUSH");
    pop = new JButton ("POP");
    peek = new JButton ("PEEK");
    test = new JButton ("TEST");
    west.add (push, "1,1");
    west.add (pop, "1,2");
    west.add (peek, "1,3");
    west.add (test, "1,4");
    add (west, "0,0");
    add (east, "1,0");
    add (south, "0,1, 1,1");
    west.setPreferredSize (new Dimension (200, 200));
    east.setPreferredSize (new Dimension (400, 100));
    south.setPreferredSize (new Dimension (100, 150));
    west.setBorder (BorderFactory.createLineBorder (Color.black));
    east.setBorder (BorderFactory.createLineBorder (Color.black));
    south.setBorder (BorderFactory.createLineBorder (Color.black));
    west.setBackground (new Color (234, 237, 242));
    east.setBackground (new Color (255, 255, 255));
    south.setBackground (new Color (240, 240, 240));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42752118_42752178_1_12
42752118_42752294_1_15
Title: Adding Each Column in 2D Arrays 
----------------------------------------

public void AverageStudent (int [] [] book) {
    for (int i = 0;
    i < book.length; i ++) {
        double average1 = 0;
        double sum1 = 0;
        for (int k = 0;
        k < book [i].length; k ++) {
            sum1 += book [i] [k];
        }
        average1 = sum1 / book [i].length;
        System.out.println ("The average of student " + (i + 1) + " is " + average1);
        sum1 = 0;
    }
}
----------------------------------------

public void AverageStudent (int [] [] book) {
    double average1, sum1;
    for (int i = 0;
    i < book [0].length; i ++) {
        sum1 = 0;
        average1 = 0;
        for (int k = 0;
        k < book.length; k ++) {
            sum1 += book [k] [i];
        }
        average1 = sum1 / book.length;
        System.out.println ("The average of student " + (i + 1) + " is " + average1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42756624_42756914_1_28
42756624_42757132_1_47
Title: Find the Largest Common Number 
----------------------------------------

public static Integer getLargestCommonNumber (int [] [] a) {
    if (a == null || a.length == 0) {
        return 0;
    }
    int [] Row1 = a [0];
    int [] Row2 = a [1];
    int [] Row3 = a [2];
    Arrays.sort (a);
    int i = 0, j = 0, k = 0;
    Integer max = null;
    while (i < Row1.length && j < Row2.length && k < Row3.length) {
        if (Row1 [i] > Row2 [j] && Row2 [j] > Row3 [k]) {
            System.out.print (Row1 [i] + " ");
            max = Row1 [i];
        } else if (Row2 [i] > Row1 [j] && Row2 [j] > Row3 [k]) {
            System.out.print (Row2 [i] + " ");
            max = Row2 [i];
        } else if (Row3 [i] > Row1 [j] && Row3 [j] > Row2 [k]) {
            max = Row3 [i];
        }

    }
    return max;
}
----------------------------------------

public static Integer getLargestCommonNumber (int [] [] a) {
    if (a == null || a.length == 0) {
        return 0;
    }
    List < List < Integer > > matrix = new ArrayList < > ();
    for (int i = 0;
    i < a.length; i ++) {
        int [] aRow = a [i];
        List < Integer > row = new ArrayList < > ();
        for (int j = 0;
        j < aRow.length; j ++) {
            row.add (aRow [j]);
        }
        matrix.add (row);
    }
    for (List < Integer > row : matrix) {
        Collections.sort (row, new Comparator < Integer > () {
            @Override
            public int compare (Integer o1, Integer o2) {
                return - 1 * o1.compareTo (o2);
            }}

        );
    }
    List < Integer > row0 = matrix.get (0);
    for (Integer row0Value : row0) {
        int count0 = 0;
        int count1 = 0;
        for (int i = 1;
        i < matrix.size (); i ++) {
            count0 += i;
            if (matrix.get (i).contains (row0Value)) {
                count1 += i;
            }
        }
        if (count0 == count1) {
            return row0Value;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42759685_42759930_1_16
42759685_42760109_6_18
Title: Java program that reads int from keyboard (with exceptions) - is there a more efficient way? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int n;
    boolean b = false;
    while (! b) {
        try {
            n = Integer.parseInt (input.nextLine ());
            if (n == 0) {
                b = true;
            }
        } catch (NumberFormatException e) {
            System.out.println ("not int, read again");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int n;
    boolean isInt = false;
    while (! isInt) {
        try {
            n = Integer.parseInt (input.nextLine ());
            isInt = true;
        } catch (Exception e) {
            System.out.println ("not int, read again");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42764919_42765388_50_58
42764919_42765388_75_83
Title: JavaFX update a ComboBox item list to disable some items based on a changeable input 
----------------------------------------

protected void updateItem (Integer hours, boolean empty) {
    super.updateItem (hours, empty);
    if (empty) {
        setText (null);
    } else {
        setText (hours.toString ());
        updateDisableState ();
    }
}
----------------------------------------

protected void updateItem (Integer hours, boolean empty) {
    super.updateItem (hours, empty);
    if (empty) {
        setText (null);
    } else {
        setText (hours.toString ());
        updateDisableState ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42793112_42793464_1_23
42793112_42793531_1_13
Title: return loops in java? 
----------------------------------------

public String pickc () {
    boolean check = true;
    String cchoice = "blank";
    while (check == true) {
        Scanner input = new Scanner (System.in);
        System.out.println ("Please choose a color.");
        System.out.println ("You can have red, blue, yellow, green, purple, or orange");
        cchoice = input.nextLine ();
        if (cchoice == "red" || cchoice == "blue" || cchoice == "yellow" || cchoice == "green" || cchoice == "purple" || cchoice == "orange") {
            check = false;
            break;
        } else {
            System.out.println ("Enter a valid color");
            cchoice = "";
            pickc ();
        }
    }
    return cchoice;
}
----------------------------------------

public String pickc () {
    String cchoice = "blank";
    Scanner input = new Scanner (System.in);
    while (cchoice.equals ("blank")) {
        System.out.println ("Please choose a color.");
        System.out.println ("You can have red, blue, yellow, green, purple, or orange");
        cchoice = input.nextLine ();
        if (! cchoice.equals ("red") && ! cchoice.equals ("blue") && ! cchoice.equals ("yellow") && ! cchoice.equals ("green") && ! cchoice.equals ("purple") && ! cchoice.equals ("orange")) {
            cchoice = "blank";
        }
    }
    return cchoice;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42797300_42797409_1_11
42797300_42797424_1_13
Title: Return statements when inverting a binary tree 
----------------------------------------

public void invertTree (TreeNode root) {
    if (root == null) {
        return;
    }
    TreeNode temp = root.left;
    root.left = root.right;
    root.right = temp;
    invertTree (root.left);
    invertTree (root.right);
}
----------------------------------------

public TreeNode invertTree (TreeNode root) {
    if (root == null) {
        return root;
    }
    TreeNode temp = root.left;
    root.left = root.right;
    root.right = temp;
    invertTree (root.left);
    invertTree (root.right);
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42798276_42799076_1_11
42798276_42799535_1_14
Title: Java - Multi threading sound clips to play at same time 
----------------------------------------

public void run () {
    try {
        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (this.getClass ().getResource ("NameOfFile.wav"));
        Clip clip = AudioSystem.getClip ();
        clip.open (audioInputStream);
        clip.start ();
        clip.loop (Clip.LOOP_CONTINUOUSLY);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        File file = new File (filename);
        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (file);
        DataLine.Info info = new DataLine.Info (Clip.class, audioInputStream.getFormat ());
        Clip clip = (Clip) AudioSystem.getLine (info);
        clip.open (audioInputStream);
        clip.start ();
        clip.loop (Clip.LOOP_CONTINUOUSLY);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
    finished = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42799413_42799506_21_37
42799413_42800099_1_13
Title: android sms permission marshmallow 
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode, String [] permissions, int [] grantResults) {
    switch (requestCode) {
        case SEND_SMS :
            if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                sendSms (phoneNumber);
            } else {
                Toast.makeText (RegistrationActivity.this, "SEND_SMS Denied", Toast.LENGTH_SHORT).show ();
            }
            break;
        default :
            super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    }
}
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    super.onRequestPermissionsResult (requestCode, permissions, grantResults);
    switch (requestCode) {
        case REQUEST :
            {
                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                    SendSMSMessage ();
                } else {
                    Toast.makeText (mContext, "The app was not allowed to send sms.", Toast.LENGTH_LONG).show ();
                }
            }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42799734_42800160_83_94
42799734_42800160_99_112
Title: Barcode scanning using DocumentFilter in Java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    field1.setText (null);
    field2.setText (null);
    field1.requestFocusInWindow ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            Thread t = new Thread (new Simulator ());
            t.start ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    field1.setText (null);
    field2.setText (null);
    String text = "1234567abcdefg";
    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    clipboard.setContents (new StringSelection (text), null);
    field1.requestFocusInWindow ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            field1.paste ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42803270_42803352_46_86
42803270_42804553_29_42
Title: Android Project : Check bad CheckBox in listView 
----------------------------------------

public View getView (int position, View view, ViewGroup viewGroup) {
    LayoutInflater mInflater = (LayoutInflater) mContext.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (view == null) {
        view = mInflater.inflate (R.layout.order_list, null);
        holder = new ViewHolder ();
        holder.mtextStatus = (TextView) view.findViewById (R.id.txt_t_status);
        holder.mtextOrderNO = (TextView) view.findViewById (R.id.txt_title_orderno);
        holder.mtextCustomerName = (TextView) view.findViewById (R.id.txt_t_customer);
        holder.mtextTotalAmount = (TextView) view.findViewById (R.id.txt_t_amount);
        holder.mStatus = (TextView) view.findViewById (R.id.txt_status);
        holder.mOrderNO = (TextView) view.findViewById (R.id.txt_orderno);
        holder.mCustomerName = (TextView) view.findViewById (R.id.txt_customer);
        holder.mTotalAmount = (TextView) view.findViewById (R.id.txt_amount);
        holder.relback = (RelativeLayout) view.findViewById (R.id.rel_back);
        view.setTag (holder);
    } else {
        holder = (ViewHolder) view.getTag ();
    }
    try {
        holder.mStatus.setText (arrayListgeneratOrder.get (position).getOrderStatus ());
        holder.mTotalAmount.setText (arrayListgeneratOrder.get (position).getAmount ());
        holder.mCustomerName.setText (arrayListgeneratOrder.get (position).getCustomerName ());
        holder.mOrderNO.setText (arrayListgeneratOrder.get (position).getOrderNo ());
        if (position % 2 == 0) {
            holder.relback.setBackgroundColor (Color.parseColor ("#f4fff5"));
        } else {
            holder.relback.setBackgroundColor (Color.parseColor ("#ffffff"));
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return view;
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    View view = convertView;
    if (view == null) {
        view = lInflater.inflate (R.layout.atndnc_items, parent, false);
    }
    Student s = getStudent (position);
    ((TextView) view.findViewById (R.id.txtRollno)).setText (s.rollno);
    ((TextView) view.findViewById (R.id.txtName)).setText (s.fname + " " + s.mname + " " + s.lname);
    final CheckBox cbAtnd = (CheckBox) view.findViewById (R.id.chckTick);
    cbAtnd.setOnCheckedChangeListener (myCheckChangList);
    cbAtnd.setTag (position);
    cbAtnd.setChecked (s.chck);
    return view;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42807847_42807918_1_14
42807847_42808107_1_38
Title: "connect facebook twitter and google in a single activity android onActivityResult Error" 
----------------------------------------

@Override
protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    FBcallbackManager.onActivityResult (requestCode, requestCode, data);
    signInButtonTwitter.onActivityResult (requestCode, resultCode, data);
    if (requestCode == request_code) {
        GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent (data);
        handleResult (result);
    }
}
----------------------------------------

@Override
protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == RC_SIGN_IN) {
        GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent (data);
        if (result.isSuccess ()) {
            GoogleSignInAccount acct = result.getSignInAccount ();
            String mFullName = acct.getDisplayName ();
            String mEmail = acct.getEmail ();
            String googlePlusToken = acct.getIdToken ().trim ();
            googlePlusDetails = mFullName + ", " + mEmail + ", id: " + acct.getId () + ", photoUrl: " + acct.getPhotoUrl ();
            Log.d (TAG, mFullName + "," + mEmail + "," + acct.toString ());
            Log.d (TAG, googlePlusDetails);
        } else {
            Log.e (TAG, "Result: " + result.getStatus ());
            Log.e (TAG, "Result: " + result.getStatus ().getStatusMessage ());
            Log.e (TAG, "Google plus sign-in failed");
            showToast ("Google plus sign-in failed");
        }
    } else if (requestCode == TwitterAuthConfig.DEFAULT_AUTH_REQUEST_CODE) {
        loginButton.onActivityResult (requestCode, resultCode, data);
    } else {
        callbackManager.onActivityResult (requestCode, resultCode, data);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42812630_42814813_1_11
42812630_42822897_4_32
Title: Using arrays to store primes 
----------------------------------------

public static void main (String args []) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter number of primes ");
    int x = scan.nextInt ();
    List < Integer > primes = getPrimes (x);
    Integer [] primeArray = primes.toArray (new Integer [primes.size ()]);
    for (int i : primes.toArray (primeArray)) {
        System.out.print (i + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int i = 0, hold = 2, d = 2;
    boolean flag = true;
    System.out.println ("Enter the number of primes.");
    int [] prime = new int [scan.nextInt ()];
    for (; flag;) {
        for (int a = 2;
        d > a; a ++) {
            if (d == (a) || d % a == 0) {
                break;
            }
            if ((d - 1) == a) {
                hold = d;
            }
        }
        d ++;
        if (hold == 2 || hold != prime [i - 1]) {
            prime [i] = hold;
            i ++;
        }
        if (i == prime.length) flag = false;

    }
    for (int x = 0;
    x < prime.length; x ++) System.out.print (prime [x] + " ");

    System.out.println ("");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42819855_42820186_5_32
42819855_42820290_13_55
Title: "How to print text file left to right and then upside down?" 
----------------------------------------

public static void main (String [] args) throws IOException {
    File marge = new File ("marge.txt");
    Scanner fileScan = new Scanner (marge);
    String original;
    while (fileScan.hasNext ()) {
        original = fileScan.nextLine ();
        System.out.println (original);
    }
    fileScan = new Scanner (marge);
    String lefttoright;
    while (fileScan.hasNext ()) {
        lefttoright = fileScan.nextLine ();
        StringBuffer sb = new StringBuffer (lefttoright);
        System.out.println (sb.reverse ());
    }
    fileScan = new Scanner (marge);
    String upsidedown;
    Stack < String > list = new Stack < String > ();
    while (fileScan.hasNext ()) {
        upsidedown = fileScan.nextLine ();
        list.push (upsidedown);
    }
    for (int i = 0;
    i <= list.size (); i ++) {
        System.out.println (list.pop ());
    }
    fileScan.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("C:\\Users\\xxx\\Documents\\test.txt");
    List < String > listString = new ArrayList < > ();
    BufferedReader br = new BufferedReader (new FileReader (file));
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("");
    br = new BufferedReader (new FileReader (file));
    while ((line = br.readLine ()) != null) {
        String result = new StringBuilder (line).reverse ().toString ();
        System.out.println (result);
    }
    System.out.println ("");
    br = new BufferedReader (new FileReader (file));
    while ((line = br.readLine ()) != null) {
        listString.add (line);
    }
    Collections.reverse (listString);
    for (String element : listString) {
        String result = new StringBuilder (element).reverse ().toString ();
        System.out.println (result);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42819855_42820186_5_32
42819855_42820352_5_21
Title: "How to print text file left to right and then upside down?" 
----------------------------------------

public static void main (String [] args) throws IOException {
    File marge = new File ("marge.txt");
    Scanner fileScan = new Scanner (marge);
    String original;
    while (fileScan.hasNext ()) {
        original = fileScan.nextLine ();
        System.out.println (original);
    }
    fileScan = new Scanner (marge);
    String lefttoright;
    while (fileScan.hasNext ()) {
        lefttoright = fileScan.nextLine ();
        StringBuffer sb = new StringBuffer (lefttoright);
        System.out.println (sb.reverse ());
    }
    fileScan = new Scanner (marge);
    String upsidedown;
    Stack < String > list = new Stack < String > ();
    while (fileScan.hasNext ()) {
        upsidedown = fileScan.nextLine ();
        list.push (upsidedown);
    }
    for (int i = 0;
    i <= list.size (); i ++) {
        System.out.println (list.pop ());
    }
    fileScan.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File marge = new File ("marge.txt");
    Scanner fileScan = new Scanner (marge);
    String original;
    while (fileScan.hasNext ()) {
        original = fileScan.nextLine ();
        System.out.println (original);
    }
    System.out.println (original);
    System.out.println ();
    System.out.print (flip (original));
    System.out.println ();
    System.out.print (updsideDown (original));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42819855_42820290_13_55
42819855_42820352_5_21
Title: "How to print text file left to right and then upside down?" 
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("C:\\Users\\xxx\\Documents\\test.txt");
    List < String > listString = new ArrayList < > ();
    BufferedReader br = new BufferedReader (new FileReader (file));
    String line;
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    System.out.println ("");
    br = new BufferedReader (new FileReader (file));
    while ((line = br.readLine ()) != null) {
        String result = new StringBuilder (line).reverse ().toString ();
        System.out.println (result);
    }
    System.out.println ("");
    br = new BufferedReader (new FileReader (file));
    while ((line = br.readLine ()) != null) {
        listString.add (line);
    }
    Collections.reverse (listString);
    for (String element : listString) {
        String result = new StringBuilder (element).reverse ().toString ();
        System.out.println (result);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File marge = new File ("marge.txt");
    Scanner fileScan = new Scanner (marge);
    String original;
    while (fileScan.hasNext ()) {
        original = fileScan.nextLine ();
        System.out.println (original);
    }
    System.out.println (original);
    System.out.println ();
    System.out.print (flip (original));
    System.out.println ();
    System.out.print (updsideDown (original));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42823449_42823490_3_20
42823449_42823535_1_13
Title: using print format to evenly space an integer-display of one or more digits 
----------------------------------------

public static void main (String [] args) {
    final int UPPERLIMIT = 20;
    int i = 2;
    do {
        if (i % 2 == 0) {
            if (i < 10) {
                System.out.format ("%2d", i);
            } else {
                System.out.format ("%3d", i);
            }
        }
        i ++;
    } while (i <= UPPERLIMIT);
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    final int UPPERLIMIT = 20;
    int i = 2;
    do {
        if ((i % 2) == 0) System.out.format ("%d ", i);

        i ++;
    } while (i <= UPPERLIMIT);
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42873719_42873914_12_20
42873719_42873914_25_35
Title: Java volatile keyword behaviour changes due to remove local variable 
----------------------------------------

public void run () {
    int local_value = MY_INT;
    while (local_value < 5) {
        if (local_value != MY_INT) {
            System.out.println (String.format ("Got Change for MY_INT : %S", MY_INT));
            local_value = MY_INT;
        }
    }
}
----------------------------------------

public void run () {
    int local_value = MY_INT;
    while (MY_INT < 5) {
        System.out.println (String.format ("Incrementing MY_INT to %S", local_value + 1));
        MY_INT = ++ local_value;
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42874743_42881562_102_115
42874743_42881562_29_42
Title: Is it possible that after typing a value in jTextfield it will automatically press without using jButton? 
----------------------------------------

public void run () {
    try {
        Robot bot = new Robot ();
        type (KeyEvent.VK_1, bot);
        type (KeyEvent.VK_2, bot);
        type (KeyEvent.VK_3, bot);
        type (KeyEvent.VK_4, bot);
        type (KeyEvent.VK_5, bot);
        type (KeyEvent.VK_6, bot);
        type (KeyEvent.VK_7, bot);
    } catch (AWTException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42874743_42881562_149_162
42874743_42881562_199_207
Title: Is it possible that after typing a value in jTextfield it will automatically press without using jButton? 
----------------------------------------

protected void doCheck (DocumentEvent e) {
    Document doc = e.getDocument ();
    if (doc.getLength () >= barCodeLength) {
        try {
            String text = doc.getText (0, doc.getLength ());
            ActionEvent evt = new ActionEvent (this, ActionEvent.ACTION_PERFORMED, text);
            actionListener.actionPerformed (evt);
        } catch (BadLocationException exp) {
            exp.printStackTrace ();
            ActionEvent evt = new ActionEvent (this, ActionEvent.ACTION_PERFORMED, null);
            actionListener.actionPerformed (evt);
        }
    }
}
----------------------------------------

protected void doCheck (DocumentEvent e) {
    try {
        Document doc = e.getDocument ();
        text = doc.getText (0, doc.getLength ());
    } catch (BadLocationException ex) {
        ex.printStackTrace ();
    }
    timer.restart ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42890213_42890292_1_10
42890213_42890342_1_12
Title: Surrounded Character Method Java 
----------------------------------------

public static boolean surroundedCharacter (char [] letters) {
    for (int i = 1;
    i < letters.length - 1; i ++) {
        var beforeLetter = letters [i - 1];
        var afterLetter = letters [i + 1];
        if (beforeLetter == afterLetter && beforeLetter != letters [i]) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean surroundedCharacter (char [] letters) {
    boolean result = false;
    for (int i = 1;
    i < letters.length - 1; i ++) {
        if ((letters [i - 1] == letters [i + 1]) && (letters [i - 1] != letters [i])) {
            result = true;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42899094_42899701_1_29
42899094_42899925_10_27
Title: How to open multiple tab in the same browser? 
----------------------------------------

public static void main (String [] args) {
    System.setProperty ("webdriver.chrome.driver", "c:\\SRP\\chromedriver.exe");
    WebDriver driver = new ChromeDriver ();
    driver.get ("https://www.google.com");
    String newTab = null;
    String baseTab = driver.getWindowHandle ();
    driver.findElement (By.cssSelector ("body")).sendKeys (Keys.CONTROL + "t");
    Set < String > allTabs = driver.getWindowHandles ();
    allTabs.remove (baseTab);
    Iterator < String > itr = allTabs.iterator ();
    while (itr.hasNext ()) {
        newTab = (String) itr.next ();
    }
    driver.switchTo ().window (newTab);
    driver.get ("http://www.gmail.com");
}
----------------------------------------

public static void main (String [] args) throws AWTException {
    System.setProperty ("webdriver.gecko.driver", "C:\\Users\\User-024\\Downloads\\geckodriver.exe");
    WebDriver driver = new FirefoxDriver ();
    driver.get ("https://www.google.com");
    String parent = driver.getWindowHandle ();
    Robot r = new Robot ();
    r.keyPress (KeyEvent.VK_CONTROL);
    r.keyPress (KeyEvent.VK_T);
    Set < String > browsers = driver.getWindowHandles ();
    for (String i : browsers) {
        if (! i.equals (parent)) {
            driver.switchTo ().window (i);
            driver.get ("http://www.gmail.com");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42899551_42899836_7_19
42899551_42899884_1_14
Title: How do I take multiple floats from Scanner and store them separately in Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader keyboard = new BufferedReader (new InputStreamReader (System.in));
    float total = 0;
    String line = keyboard.readLine ();
    String [] data = line.split ("\\s");
    for (int i = 0;
    i < data.length; i ++) {
        total += Float.parseFloat (data [i]);
    }
    float average = total / data.length;
    System.out.println (average);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    double avg = 0.0;
    for (int i = 1;
    ; i ++) {
        if (! keyboard.hasNextDouble ()) break;

        double next = keyboard.nextDouble ();
        avg = (avg * (i - 1) + next) / i;
    }
    System.out.println (avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42901116_42901384_5_22
42901116_42901769_8_17
Title: Insert random elements of array into another array with specific index in java 
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    int numberOfRandomValues = rand.nextInt (7) + 4;
    String [] newArrayOfName = new String [numberOfRandomValues];
    for (int i = 0;
    i < numberOfRandomValues; i ++) {
        int randomPosition = rand.nextInt (arrayOfName.length);
        newArrayOfName [i] = arrayOfName [randomPosition];
        System.out.println (" - Just added " + newArrayOfName [i] + " on position " + i);
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    List < String > listOfNames = new ArrayList < > (Arrays.asList (arrayOfName));
    Collections.shuffle (listOfNames);
    Random ran = new Random ();
    List < String > listOfRandomNames = new ArrayList < > (listOfNames.subList (0, 4 + ran.nextInt (6)));
    String [] arrayOfRandomNames = new String [listOfRandomNames.size ()];
    arrayOfRandomNames = listOfRandomNames.toArray (arrayOfRandomNames);
    System.out.println (Arrays.toString (arrayOfRandomNames));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42901116_42901384_5_22
42901116_42901858_8_35
Title: Insert random elements of array into another array with specific index in java 
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    int numberOfRandomValues = rand.nextInt (7) + 4;
    String [] newArrayOfName = new String [numberOfRandomValues];
    for (int i = 0;
    i < numberOfRandomValues; i ++) {
        int randomPosition = rand.nextInt (arrayOfName.length);
        newArrayOfName [i] = arrayOfName [randomPosition];
        System.out.println (" - Just added " + newArrayOfName [i] + " on position " + i);
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    Random random = new Random ();
    int minElementToTake = 4;
    int maxElementsToTake = 10;
    int nbElementToTake = random.nextInt (maxElementsToTake - minElementToTake + 1) + minElementToTake;
    String [] newArray = new String [nbElementToTake];
    Set < Integer > indexesUsed = new HashSet < > ();
    Random randomOrder = new Random ();
    for (int i = 0;
    i < nbElementToTake; i ++) {
        int maxInclusive = arrayOfName.length;
        int indexToUse = randomOrder.nextInt (maxInclusive);
        while (indexesUsed.contains (indexToUse)) {
            indexToUse = randomOrder.nextInt (maxInclusive);
        }
        indexesUsed.add (indexToUse);
        newArray [i] = arrayOfName [indexToUse];
    }
    System.out.println (Arrays.toString (newArray));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42901116_42901769_8_17
42901116_42901858_8_35
Title: Insert random elements of array into another array with specific index in java 
----------------------------------------

public static void main (String [] args) {
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    List < String > listOfNames = new ArrayList < > (Arrays.asList (arrayOfName));
    Collections.shuffle (listOfNames);
    Random ran = new Random ();
    List < String > listOfRandomNames = new ArrayList < > (listOfNames.subList (0, 4 + ran.nextInt (6)));
    String [] arrayOfRandomNames = new String [listOfRandomNames.size ()];
    arrayOfRandomNames = listOfRandomNames.toArray (arrayOfRandomNames);
    System.out.println (Arrays.toString (arrayOfRandomNames));
}
----------------------------------------

public static void main (String [] args) {
    String [] arrayOfName = {"Elephant", "Deer", "Fish", "Crocodile", "Cat", "Dog", "Bird", "Butterfly", "Chicken", "Ant", "Snake", "Lion", "Horse", "Wolf", "Panda", "Swan", "Lobster"};
    Random random = new Random ();
    int minElementToTake = 4;
    int maxElementsToTake = 10;
    int nbElementToTake = random.nextInt (maxElementsToTake - minElementToTake + 1) + minElementToTake;
    String [] newArray = new String [nbElementToTake];
    Set < Integer > indexesUsed = new HashSet < > ();
    Random randomOrder = new Random ();
    for (int i = 0;
    i < nbElementToTake; i ++) {
        int maxInclusive = arrayOfName.length;
        int indexToUse = randomOrder.nextInt (maxInclusive);
        while (indexesUsed.contains (indexToUse)) {
            indexToUse = randomOrder.nextInt (maxInclusive);
        }
        indexesUsed.add (indexToUse);
        newArray [i] = arrayOfName [indexToUse];
    }
    System.out.println (Arrays.toString (newArray));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4290117_4290167_2_11
4290117_4290277_43_51
Title: Create a counter for actionlistener events 
----------------------------------------

public static void main (String [] args) {
    final JButton startButton = new JButton ("Start");
    startButton.addActionListener (new ActionListener () {
        int counter;
        public void actionPerformed (ActionEvent e) {
            startButton.doSomething ();
            counter ++;
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new ClickCount ().display ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42904440_42905092_1_29
42904440_42909054_17_29
Title: reversed polish giving wrong answer 
----------------------------------------

public String evaluateInfixExpression (String expression) {
    Deque < String > operators = new LinkedList < > ();
    String [] args = expression.split (SPACE);
    Deque < String > values = new LinkedList < > ();
    for (String arg : args) {
        if (isANumber (arg)) {
            values.push (arg);
            continue;
        }
        if (operators.isEmpty ()) {
            operators.push (arg);
        } else if (precedence (arg) <= precedence (operators.peek ())) {
            float result = eval (Float.parseFloat (values.pop ()), Float.parseFloat (values.pop ()), operators.pop ());
            values.push (String.valueOf (result));
            operators.push (arg);
        } else if (precedence (arg) > precedence (operators.peek ())) {
            operators.push (arg);
        }

    }
    while (! operators.isEmpty ()) {
        String v1 = values.removeLast ();
        String v2 = values.removeLast ();
        float result = eval (Float.parseFloat (v2), Float.parseFloat (v1), operators.removeLast ());
        values.addLast (String.valueOf (result));
    }
    return expression;
}
----------------------------------------

public static Float evaluateInfixExpression (String expression) {
    Stack < String > stack = ShuntingYard.postfix (expression);
    Stack < Float > result = new Stack < > ();
    while (! stack.isEmpty ()) {
        String nextElement = stack.pop ();
        if (isANumber (nextElement)) {
            result.push (new Float (nextElement));
        } else {
            result.push (eval (result.pop (), result.pop (), Operator.fromString (nextElement)));
        }
    }
    return result.pop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42904440_42905092_1_29
42904440_42914835_2_20
Title: reversed polish giving wrong answer 
----------------------------------------

public String evaluateInfixExpression (String expression) {
    Deque < String > operators = new LinkedList < > ();
    String [] args = expression.split (SPACE);
    Deque < String > values = new LinkedList < > ();
    for (String arg : args) {
        if (isANumber (arg)) {
            values.push (arg);
            continue;
        }
        if (operators.isEmpty ()) {
            operators.push (arg);
        } else if (precedence (arg) <= precedence (operators.peek ())) {
            float result = eval (Float.parseFloat (values.pop ()), Float.parseFloat (values.pop ()), operators.pop ());
            values.push (String.valueOf (result));
            operators.push (arg);
        } else if (precedence (arg) > precedence (operators.peek ())) {
            operators.push (arg);
        }

    }
    while (! operators.isEmpty ()) {
        String v1 = values.removeLast ();
        String v2 = values.removeLast ();
        float result = eval (Float.parseFloat (v2), Float.parseFloat (v1), operators.removeLast ());
        values.addLast (String.valueOf (result));
    }
    return expression;
}
----------------------------------------

public static Float evaluateInfixExpression (String inflixExpression) {
    Stack < Float > operands = new Stack < > ();
    Stack < Operator > operators = new Stack < > ();
    for (String token : inflixExpression.split ("\\s")) {
        if (isOperator (token)) {
            while (! operators.isEmpty () && operators.peek ().hasHigherPrecedenceThan (token)) operands.add (eval (operands.pop (), operands.pop (), operators.pop ()));

            operators.push (fromString (token));
        } else {
            operands.add (new Float (token));
        }
    }
    while (! operators.isEmpty ()) operands.add (eval (operands.pop (), operands.pop (), operators.pop ()));

    return operands.pop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42904440_42909054_17_29
42904440_42914835_2_20
Title: reversed polish giving wrong answer 
----------------------------------------

public static Float evaluateInfixExpression (String expression) {
    Stack < String > stack = ShuntingYard.postfix (expression);
    Stack < Float > result = new Stack < > ();
    while (! stack.isEmpty ()) {
        String nextElement = stack.pop ();
        if (isANumber (nextElement)) {
            result.push (new Float (nextElement));
        } else {
            result.push (eval (result.pop (), result.pop (), Operator.fromString (nextElement)));
        }
    }
    return result.pop ();
}
----------------------------------------

public static Float evaluateInfixExpression (String inflixExpression) {
    Stack < Float > operands = new Stack < > ();
    Stack < Operator > operators = new Stack < > ();
    for (String token : inflixExpression.split ("\\s")) {
        if (isOperator (token)) {
            while (! operators.isEmpty () && operators.peek ().hasHigherPrecedenceThan (token)) operands.add (eval (operands.pop (), operands.pop (), operators.pop ()));

            operators.push (fromString (token));
        } else {
            operands.add (new Float (token));
        }
    }
    while (! operators.isEmpty ()) operands.add (eval (operands.pop (), operands.pop (), operators.pop ()));

    return operands.pop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42906567_42906748_1_23
42906567_42906906_1_15
Title: Assigning value to array in for loop 
----------------------------------------

public static void main (String [] args) {
    double [] list = new double [100];
    for (int i = 0;
    i < list.length; i ++) {
        list [i] = i + 1;
    }
    double sum = 0;
    for (double d : list) {
        sum += d;
    }
    double average = sum / list.length;
    for (double d : list) {
        if (d > average) {
            System.out.println (d + " is larger than the average");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] list = new double [100];
    Random rand = new Random ();
    double sum = 0;
    for (int i = 0;
    i < 100; i ++) {
        list [i] = rand.nextInt (100);
        sum += list [i];
    }
    double average = sum / list.length;
    for (int i = 0;
    i < 100; i ++) {
        if (list [i] > average) {
            System.out.println (list [i] + " is larger than the average");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42906567_42906748_1_23
42906567_42907328_3_31
Title: Assigning value to array in for loop 
----------------------------------------

public static void main (String [] args) {
    double [] list = new double [100];
    for (int i = 0;
    i < list.length; i ++) {
        list [i] = i + 1;
    }
    double sum = 0;
    for (double d : list) {
        sum += d;
    }
    double average = sum / list.length;
    for (double d : list) {
        if (d > average) {
            System.out.println (d + " is larger than the average");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] list = new int [100];
    int x = 1;
    while (x <= 100) {
        for (int i = 0;
        i < 100; i ++) {
            list [i] = x;
            x ++;
        }
    }
    double sum = 0;
    int j = 0;
    double average = 0;
    while (j < list.length) {
        sum += list [j];
        j ++;
    }
    average = sum / list.length;
    System.out.println ("Sum:" + sum);
    System.out.println ("Avg:" + average);
    for (int i = 0;
    i < 100; i ++) {
        if (list [i] > average) {
            System.out.println (list [i] + "is larger than the average");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42906567_42906906_1_15
42906567_42907328_3_31
Title: Assigning value to array in for loop 
----------------------------------------

public static void main (String [] args) {
    double [] list = new double [100];
    Random rand = new Random ();
    double sum = 0;
    for (int i = 0;
    i < 100; i ++) {
        list [i] = rand.nextInt (100);
        sum += list [i];
    }
    double average = sum / list.length;
    for (int i = 0;
    i < 100; i ++) {
        if (list [i] > average) {
            System.out.println (list [i] + " is larger than the average");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] list = new int [100];
    int x = 1;
    while (x <= 100) {
        for (int i = 0;
        i < 100; i ++) {
            list [i] = x;
            x ++;
        }
    }
    double sum = 0;
    int j = 0;
    double average = 0;
    while (j < list.length) {
        sum += list [j];
        j ++;
    }
    average = sum / list.length;
    System.out.println ("Sum:" + sum);
    System.out.println ("Avg:" + average);
    for (int i = 0;
    i < 100; i ++) {
        if (list [i] > average) {
            System.out.println (list [i] + "is larger than the average");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42911986_42912823_17_33
42911986_42912896_15_28
Title: Program Prime Factorization in Java 
----------------------------------------

public void primeFactor () {
    if (input > 1) {
        for (int i = input;
        i >= 1; i --) {
            if (isPrime (i)) {
                if (divide (i)) {
                    System.out.println ("Adding a new int...");
                    factors.add (i);
                    input = input / i;
                    primeFactor ();
                }
            }
        }
    }
}
----------------------------------------

public void primeFactor () {
    input = sc.nextInt ();
    for (num = 1; num <= input; num ++) {
        if (isPrime (num)) {
            if (divide (num)) {
                System.out.println ("Adding a new int...");
                factors.add (num);
            }
        }
    }
    for (int element : factors) {
        System.out.println (element);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42911986_42912823_35_43
42911986_42912896_30_39
Title: Program Prime Factorization in Java 
----------------------------------------

public boolean isPrime (int number) {
    int count = 0;
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            count ++;
        }
    }
    return (count == 0);
}
----------------------------------------

public boolean isPrime (int number) {
    int count = 0;
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            count ++;
        }
    }
    return (count == 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42911986_42912823_35_43
42911986_48483692_10_32
Title: Program Prime Factorization in Java 
----------------------------------------

public boolean isPrime (int number) {
    int count = 0;
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            count ++;
        }
    }
    return (count == 0);
}
----------------------------------------

public boolean isPrime (int test) {
    int k;
    if (test < 2) return false;
    else if (test == 2) return true;
    else if ((test > 2) && (test % 2 == 0)) return false;
    else {
        for (k = 3; k < (test / 2); k += 2) {
            if (test % k == 0) return false;

        }
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42911986_42912896_30_39
42911986_48483692_10_32
Title: Program Prime Factorization in Java 
----------------------------------------

public boolean isPrime (int number) {
    int count = 0;
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            count ++;
        }
    }
    return (count == 0);
}
----------------------------------------

public boolean isPrime (int test) {
    int k;
    if (test < 2) return false;
    else if (test == 2) return true;
    else if ((test > 2) && (test % 2 == 0)) return false;
    else {
        for (k = 3; k < (test / 2); k += 2) {
            if (test % k == 0) return false;

        }
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42919492_42919986_1_10
42919492_42919989_1_11
Title: "Using a for loop display the number of entries and the sum in Java" 
----------------------------------------

public static void main (String [] args) {
    try (Scanner scanner = new Scanner (System.in)) {
        int sum = 0;
        for (int count = 1;
        count <= 4; count ++) {
            System.out.print (String.format ("Please enter %d. integer: ", count));
            sum = sum + readNumber (scanner);
        }
        System.out.println ("The sum of numbers entered is: " + sum);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int sum = 0;
    for (int i = 0;
    i < 4; i ++) {
        System.out.println ("ENter Number" + (i + 1));
        sum += sc.nextInt ();
    }
    System.out.println ("the Sum is " + sum);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4292139_27287373_45_57
4292139_5935197_24_39
Title: "Simplify replacement of date object with ""today"" and ""yesterday"" strings in Java static method" 
----------------------------------------

public static String getDateString_shortAndSmart (Date date) {
    String s;
    DateTime nowDT = new DateTime ();
    DateTime dateDT = new DateTime (date);
    int days = Days.daysBetween (dateDT, nowDT).getDays ();
    if (isToday (new DateTime (date))) s = "Today," + getHourMinuteString (date);
    else if (days < 7) s = getDayString (date);
    else s = getDateString (date);

    return s;
}
----------------------------------------

public static String getDateString_shortAndSmart (Date date) {
    String s;
    DateTime nowDT = new DateTime ();
    DateTime dateDT = new DateTime (date);
    int days = Days.daysBetween (dateDT, nowDT).getDays ();
    if (isToday (new DateTime (date))) s = getHourMinuteString (date);
    else if (days < 7) s = getDayString (date);
    else s = getDateString (date);

    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42930814_42931036_1_22
42930814_48042978_6_33
Title: Count longest streak of heads 
----------------------------------------

public static void run () {
    Random r = new Random ();
    double heads = 0;
    double tails = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        if (r.nextBoolean ()) {
            System.out.println ("Heads");
            heads ++;
            currentRun ++;
            if (maxRun < currentRun) {
                maxRun = currentRun;
                runStart = currentRun - i;
            }
        } else {
            System.out.println ("Tails");
            tails ++;
            currentRun = 0;
        }
    }
    System.out.println (FLIPS);
    System.out.println (maxRun);
}
----------------------------------------

public void run () {
    int consecutiveHeads = 0;
    int maxRun = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        if (Randomizer.nextBoolean ()) {
            System.out.println ("Heads");
            consecutiveHeads ++;
            if (maxRun < consecutiveHeads) {
                maxRun = consecutiveHeads;
            }
        } else {
            System.out.println ("Tails");
            consecutiveHeads = 0;
        }
    }
    System.out.println ("Longest streak of heads: " + maxRun);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42935345_42935409_140_147
42935345_42935409_52_63
Title: GUI doesn't respond to mouse click and drag while running from another class 
----------------------------------------

public static void main (String [] args) {
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            SnipIt s = new SnipIt ();
            s.snip (null);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            try {
                TestingPanel window = new TestingPanel ();
                window.frame.setVisible (true);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42935345_42935409_224_236
42935345_42935409_277_289
Title: GUI doesn't respond to mouse click and drag while running from another class 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    Rectangle bounds = new Rectangle (0, 0, getWidth (), getHeight ());
    Area area = new Area (bounds);
    area.subtract (new Area (selectionPane.getBounds ()));
    g2d.setColor (new Color (102, 102, 102, 80));
    g2d.fill (area);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    float strokeWidth = 1.0f;
    float dash1 [] = {10.0f};
    BasicStroke dashed = new BasicStroke (strokeWidth, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER, 10.0f, dash1, 0.0f);
    g2d.setColor (Color.BLACK);
    g2d.setStroke (dashed);
    g2d.drawRect (0, 0, getWidth () - 1, getHeight () - 1);
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42942888_42943457_20_103
42942888_42966654_42_53
Title: Swing animation optimization 
----------------------------------------

public AnimationComponent (int x, int y, int width, int height) {
    setOpaque (true);
    this.x = x;
    this.y = y;
    this.height = height;
    this.width = width;
    JRendererFactory.getDefaultRenderer (this, new JRendererTarget < GraphicsConfiguration, Graphics2D > () {
        @Override
        public void renderSetup (GraphicsConfiguration gc) {
        }@Override
        public void renderUpdate () {
        }@Override
        public void render (Graphics2D g, int w, int h) {
            Color c = g.getColor ();
            g.setColor (g.getBackground ());
            g.fillRect (0, 0, w, h);
            g.setColor (c);
            g.fillOval (AnimationComponent.this.x, AnimationComponent.this.y, AnimationComponent.this.width, AnimationComponent.this.height);
        }@Override
        public void renderShutdown () {
        }}

    , false);
    this.xAnimator = new Animator.Builder (new SwingTimerTimingSource ()).addTargets (new TimingTargetAdapter () {
        @Override
        public void timingEvent (Animator source, double fraction) {
            AnimationComponent.this.x = (int) ((getWidth () - AnimationComponent.this.width) * fraction);
        }}

    ).setRepeatCount (Animator.INFINITE).setRepeatBehavior (Animator.RepeatBehavior.REVERSE).setInterpolator (LinearInterpolator.getInstance ()).build ();
    this.yAnimator = new Animator.Builder (new SwingTimerTimingSource ()).addTargets (new TimingTargetAdapter () {
        @Override
        public void timingEvent (Animator source, double fraction) {
            AnimationComponent.this.y = (int) ((getHeight () - AnimationComponent.this.height) * fraction);
        }}

    ).setRepeatCount (Animator.INFINITE).setRepeatBehavior (Animator.RepeatBehavior.REVERSE).setInterpolator (LinearInterpolator.getInstance ()).build ();
    addComponentListener (new ComponentAdapter () {
        private int oldWidth = 0;
        private int oldHeight = 0;
        @Override
        public void componentResized (ComponentEvent event) {
            Component c = event.getComponent ();
            int w = c.getWidth ();
            int h = c.getHeight ();
            if (w != this.oldWidth) {
                AnimationComponent.this.xAnimator.stop ();
                AnimationComponent.this.xAnimator = new Animator.Builder ().copy (AnimationComponent.this.xAnimator).setDuration (w * 5, TimeUnit.MILLISECONDS).build ();
                AnimationComponent.this.xAnimator.start ();
            }
            if (h != this.oldHeight) {
                AnimationComponent.this.yAnimator.stop ();
                AnimationComponent.this.yAnimator = new Animator.Builder ().copy (AnimationComponent.this.yAnimator).setDuration (h * 5, TimeUnit.MILLISECONDS).build ();
                AnimationComponent.this.yAnimator.start ();
            }
            this.oldWidth = w;
            this.oldHeight = h;
        }}

    );
}
----------------------------------------

public AnimationComponent (int x, int y, int width, int height) {
    this.x = x;
    this.y = y;
    this.height = height;
    this.width = width;
    animTimer = new Timer (5, this);
    xVel = 1;
    yVel = 1;
    animTimer.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42974963_42975149_50_60
42974963_42975149_64_72
Title: How to make text appear and disappear using GUI? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (x == 0) {
        label.setText ("Load file");
        x = 1;
    } else if (x == 1) {
        label.setText ("");
        x = 0;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent ev) {
    if (y == 0) {
        label2.setText ("Edit file");
        y = 1;
    } else if (y == 1) {
        label2.setText ("");
        y = 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42974963_42975149_50_60
42974963_42975149_77_85
Title: How to make text appear and disappear using GUI? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (x == 0) {
        label.setText ("Load file");
        x = 1;
    } else if (x == 1) {
        label.setText ("");
        x = 0;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent eve) {
    if (z == 0) {
        label3.setText ("Delete file");
        z = 1;
    } else if (z == 1) {
        label3.setText ("");
        z = 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42974963_42975149_64_72
42974963_42975149_77_85
Title: How to make text appear and disappear using GUI? 
----------------------------------------

public void actionPerformed (ActionEvent ev) {
    if (y == 0) {
        label2.setText ("Edit file");
        y = 1;
    } else if (y == 1) {
        label2.setText ("");
        y = 0;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent eve) {
    if (z == 0) {
        label3.setText ("Delete file");
        z = 1;
    } else if (z == 1) {
        label3.setText ("");
        z = 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4298716_9697955_210_226
4298716_9697955_94_104
Title: Simple GUI Java calculator 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    SolveTEMP = Double.parseDouble (jtfResult.getText ());
    if (addBool == true) SolveTEMP = SolveTEMP + TEMP;
    else if (subBool == true) SolveTEMP = SolveTEMP - TEMP;
    else if (mulBool == true) SolveTEMP = SolveTEMP * TEMP;
    else if (divBool == true) SolveTEMP = SolveTEMP / TEMP;

    jtfResult.setText (Double.toString (SolveTEMP));
    addBool = false;
    subBool = false;
    mulBool = false;
    divBool = false;
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    jtfResult.setText ("");
    addBool = false;
    subBool = false;
    mulBool = false;
    divBool = false;
    TEMP = 0;
    SolveTEMP = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42990087_42992004_26_58
42990087_42992004_3_24
Title: Can I set a Button already in my xml to be the positive or negative Button in a Dialog? 
----------------------------------------

public void showDialog (Context activity, String msg, String positiveButtonText, String negativeButtonText, final CustomDialogListener customDialogListener) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert_two_button);
    TextView text = (TextView) dialog.findViewById (R.id.text_alert_two_dialog);
    text.setText (msg);
    Button positiveDialogButton = (Button) dialog.findViewById (R.id.btn_alert_two_dialog_YES);
    Button negativeDialogButton = (Button) dialog.findViewById (R.id.btn_alert_two_dialog_NO);
    positiveDialogButton.setText (positiveButtonText);
    negativeDialogButton.setText (negativeButtonText);
    positiveDialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onPositiveButtonClick ();
        }}

    );
    negativeDialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onNegativeButtonClick ();
        }}

    );
    dialog.show ();
}
----------------------------------------

public void showDialog (Context activity, String msg, String buttonText, final CustomDialogListener customDialogListener) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert);
    TextView text = (TextView) dialog.findViewById (R.id.text_alertdialog);
    text.setText (msg);
    Button dialogButton = (Button) dialog.findViewById (R.id.btn_alert_dialog);
    dialogButton.setText (buttonText);
    dialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onPositiveButtonClick ();
        }}

    );
    dialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42990087_42992004_26_58
42990087_42992004_61_81
Title: Can I set a Button already in my xml to be the positive or negative Button in a Dialog? 
----------------------------------------

public void showDialog (Context activity, String msg, String positiveButtonText, String negativeButtonText, final CustomDialogListener customDialogListener) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert_two_button);
    TextView text = (TextView) dialog.findViewById (R.id.text_alert_two_dialog);
    text.setText (msg);
    Button positiveDialogButton = (Button) dialog.findViewById (R.id.btn_alert_two_dialog_YES);
    Button negativeDialogButton = (Button) dialog.findViewById (R.id.btn_alert_two_dialog_NO);
    positiveDialogButton.setText (positiveButtonText);
    negativeDialogButton.setText (negativeButtonText);
    positiveDialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onPositiveButtonClick ();
        }}

    );
    negativeDialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onNegativeButtonClick ();
        }}

    );
    dialog.show ();
}
----------------------------------------

public void showDialog (Context activity, String msg, String buttonText) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert);
    TextView text = (TextView) dialog.findViewById (R.id.text_alertdialog);
    text.setText (msg);
    Button dialogButton = (Button) dialog.findViewById (R.id.btn_alert_dialog);
    dialogButton.setText (buttonText);
    dialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
        }}

    );
    dialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42990087_42992004_3_24
42990087_42992004_61_81
Title: Can I set a Button already in my xml to be the positive or negative Button in a Dialog? 
----------------------------------------

public void showDialog (Context activity, String msg, String buttonText, final CustomDialogListener customDialogListener) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert);
    TextView text = (TextView) dialog.findViewById (R.id.text_alertdialog);
    text.setText (msg);
    Button dialogButton = (Button) dialog.findViewById (R.id.btn_alert_dialog);
    dialogButton.setText (buttonText);
    dialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
            customDialogListener.onPositiveButtonClick ();
        }}

    );
    dialog.show ();
}
----------------------------------------

public void showDialog (Context activity, String msg, String buttonText) {
    final Dialog dialog = new Dialog (activity);
    dialog.requestWindowFeature (Window.FEATURE_NO_TITLE);
    dialog.setCancelable (false);
    dialog.setContentView (R.layout.custom_alert);
    TextView text = (TextView) dialog.findViewById (R.id.text_alertdialog);
    text.setText (msg);
    Button dialogButton = (Button) dialog.findViewById (R.id.btn_alert_dialog);
    dialogButton.setText (buttonText);
    dialogButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            dialog.dismiss ();
        }}

    );
    dialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42998733_42998836_1_25
42998733_43002597_1_11
Title: Coin Flip Sequence 
----------------------------------------

public static void main (String [] args) {
    final int N = 3;
    int totalFlips = 0;
    for (int i = 0;
    i < N; i ++) {
        String sequenceSoFar = "";
        sequenceSoFar += coinFlip ();
        sequenceSoFar += coinFlip ();
        sequenceSoFar += coinFlip ();
        int count = 3;
        totalFlips += 3;
        if (! sequenceSoFar.equals ("121")) {
            while (! (sequenceSoFar.substring (sequenceSoFar.length () - 3).equals ("121"))) {
                sequenceSoFar += coinFlip ();
                count ++;
                totalFlips ++;
            }
        }
        System.out.println (sequenceSoFar);
        System.out.println (count);
    }
    double average = totalFlips / (double) N;
}
----------------------------------------

public static void main (String [] args) {
    final int N = 3;
    int totalFlips = 0;
    for (int i = 0;
    i < N; i ++) {
        int count = nbRollsInNewSequence ();
        totalFlips += count;
    }
    double average = totalFlips / (double) N;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42999704_42999777_1_15
42999704_42999888_1_26
Title: How to only allow user to use certain values and have to make them use a $ in their input for my program 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    final String payment = input.next ();
    if (payment.startsWith ("$") && payment.matches (".*\\.\\d\\d")) {
        double paymentConverted = Double.parseDouble (payment.substring (1));
    } else {
        System.out.println ("Invalid text !");
    }
}
----------------------------------------

public static void main (String [] args) {
    Set < String > validInputs = new HashSet < > ();
    validInputs.addAll (Arrays.asList ("$100.00", "$50.00", "$20.00", "$10.00", "$5.00", "$2.00", "$1.00", "$0.50", "$0.20", "$0.10", "$0.05"));
    Scanner sc = new Scanner (System.in);
    boolean isValid = false;
    String input;
    do {
        System.out.printf ("input: ");
        input = sc.next ();
        if (validInputs.contains (input)) {
            isValid = true;
            break;
        }
        System.err.printf ("Your input was invalid! input:%s%n", input);
    } while (! isValid);
    sc.close ();
    System.out.printf ("Your input was correct! input:%s%n", input);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43012834_43012933_1_12
43012834_43013293_1_9
Title: copying char to char array reverse 
----------------------------------------

public static void main (String args []) {
    String name = "daac";
    char com [] = name.toCharArray ();
    char [] con = new char [4];
    for (int i = 0, j = 3;
    i < com.length; i ++, j --) {
        con [j] = com [i];
        System.out.println (i + " " + j + "value of i " + com [i] + " " + con [j]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "something eatable";
    char com [] = name.toCharArray ();
    char [] reversed = reverseArray (com);
    for (char c : reversed) System.out.print (c + " ");

    System.out.println (isPalindrome (new char [] {'b', 'a'}));
    System.out.println (isPalindrome (new char [] {'a', 'b', 'a'}));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43024840_43025002_3_33
43024840_43025009_7_33
Title: Call class to add two numbers in Java 
----------------------------------------

public static void main (String [] args) {
    int choice;
    Scanner in = new Scanner (System.in);
    Calculator calculator = new Calculator ();
    while (true) {
        System.out.println ("Please choose one of the following options: \n[1] - Set numbers \n[2] - Add Numbers \n[3] - Multiply numbers \n[4] - Exit\nYour choice is: ");
        choice = in.nextInt ();
        switch (choice) {
            case 1 :
                System.out.print ("\nInput the first number: ");
                int x = in.nextInt ();
                System.out.print ("\nInput the second number: ");
                int y = in.nextInt ();
                calculator.setNumbers (x, y);
                break;
            case 2 :
                int sum = calculator.addNumbers ();
                System.out.println ("Sum: " + sum);
                break;
            case 3 :
                int multiply = calculator.multiplyNumbers ();
                System.out.println ("Multiply: " + multiply);
                break;
            default :
                System.exit (0);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    java.util.Scanner sc = new Scanner (System.in);
    int choice;
    System.out.println ("Press 1 to add numbers");
    Syste.out.print ("Press 2 to multiply numbers");
    choice = sc.nextInt ();
    setNumbers ();
    switch (choice) {
        case 1 :
            system.out.print (addNumbers ());
            break;
        case 2 :
            System.out.print (multiplyNumbers ());
            break;
        default :
            S.op.ln ("Invalid choice");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43035730_43036017_1_13
43035730_43036508_3_23
Title: How to use multiple static mains? 
----------------------------------------

public static void main (String arg []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter an integer");
    int n = input.nextInt ();
    int sum = sumDigits (n);
    System.out.println ("The sum is " + sum);
    System.out.println ("The reverse is " + n);
    int returnValue = reverse (5);
    boolean rValue = isPalindrome (5);
}
----------------------------------------

public static void main (String [] args) {
    Util.method1 ("static");
    String s = Util.method2 ("static2");
    System.out.println (s);
    Util util = new Util ();
    util.method3 ();
    System.out.println (isPalindrome (12321));
    System.out.println (Util.isPalindrome (123321));
    System.out.println (Util.isPalindrome (123456));
    System.out.println (util.isPalindrome (82218615));
    System.out.println (util.isPalindrome (0));
    System.out.println (util.isPalindrome (- 12321));
    System.out.println (Util.isPalindrome (- 123321));
    System.out.println (isPalindrome (- 123456));
    System.out.println (util.isPalindrome (- 82218615));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43036616_43036737_1_26
43036616_43037386_8_37
Title: Missing Return Statement in Nested Switch Statements 
----------------------------------------

private int nextPlay (char computerMove, char playerMove) {
    switch (playerMove) {
        case 'R' :
            switch (computerMove) {
                case 'R' :
                    return 0;
                case 'P' :
                    return 1;
                case 'S' :
                    return - 1;
                default :
                    throw new IllegalArgumentException ("Invalid computer move: " + computerMove);
            }
        case 'P' :
            switch (computerMove) {
                case 'R' :
                    return - 1;
                case 'P' :
                    return 0;
                case 'S' :
                    return 1;
                default :
                    throw new IllegalArgumentException ("Invalid computer move: " + computerMove);
            }
        case 'S' :
            switch (computerMove) {
                case 'R' :
                    return 1;
                case 'P' :
                    return - 1;
                case 'S' :
                    return 0;
                default :
                    throw new IllegalArgumentException ("Invalid computer move: " + computerMove);
            }
        default :
            throw new IllegalArgumentException ("Invalid player move: " + playerMove);
    }
}
----------------------------------------

private static int nextPlay (char computerMove, char playerMove) {
    if (playerMove == 'R') {
        if (computerMove == 'R') return 0;
        else if (computerMove == 'P') return 1;
        else return - 1;

    } else if (playerMove == 'P') {
        if (computerMove == 'R') return - 1;
        else if (computerMove == 'P') return 0;
        else return 1;

    } else {
        if (computerMove == 'R') return 1;
        else if (computerMove == 'P') return - 1;
        else return 0;

    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43044756_4_12
43043810_43046075_3_11
Title: Java Number Palindrom 
----------------------------------------

public static void main (final String [] args) {
    final int MIN = 10;
    final int MAX = 99;
    for (int i = MIN;
    i <= MAX; i ++) {
        for (int j = MIN;
        j <= MAX; j ++) {
            new PrintPalindrom (i, j);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int start = 10;
    int end = 99;
    for (int i = start;
    i < end; i ++) {
        for (int j = i;
        j <= end; j ++) {
            printPali (i, j);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43044756_4_12
43043810_43047429_16_25
Title: Java Number Palindrom 
----------------------------------------

public static void main (final String [] args) {
    final int MIN = 10;
    final int MAX = 99;
    for (int i = MIN;
    i <= MAX; i ++) {
        for (int j = MIN;
        j <= MAX; j ++) {
            new PrintPalindrom (i, j);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 10, b = 99;
    for (int i = a;
    i <= b; i ++) {
        for (int j = i;
        j <= b; j ++) {
            if (isPalindrome (i * j)) {
                System.out.println ("Mult Palindrome: " + i * j);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43044756_4_12
43043810_46380261_5_26
Title: Java Number Palindrom 
----------------------------------------

public static void main (final String [] args) {
    final int MIN = 10;
    final int MAX = 99;
    for (int i = MIN;
    i <= MAX; i ++) {
        for (int j = MIN;
        j <= MAX; j ++) {
            new PrintPalindrom (i, j);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int number = in.nextInt ();
    int reverseNumber = 0;
    int copyNumber = number;
    boolean isPalindrom = true;
    while (copyNumber > 0) {
        reverseNumber = 10 * reverseNumber + copyNumber % 10;
        copyNumber = copyNumber / 10;
        if (reverseNumber == number) {
            isPalindrom = true;
        } else {
            isPalindrom = false;
        }
    }
    if (isPalindrom) {
        System.out.println (number + " is palindrom");
    } else {
        System.out.println (number + " is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43046075_3_11
43043810_43047429_16_25
Title: Java Number Palindrom 
----------------------------------------

public static void main (String [] args) {
    int start = 10;
    int end = 99;
    for (int i = start;
    i < end; i ++) {
        for (int j = i;
        j <= end; j ++) {
            printPali (i, j);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 10, b = 99;
    for (int i = a;
    i <= b; i ++) {
        for (int j = i;
        j <= b; j ++) {
            if (isPalindrome (i * j)) {
                System.out.println ("Mult Palindrome: " + i * j);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43046075_3_11
43043810_46380261_5_26
Title: Java Number Palindrom 
----------------------------------------

public static void main (String [] args) {
    int start = 10;
    int end = 99;
    for (int i = start;
    i < end; i ++) {
        for (int j = i;
        j <= end; j ++) {
            printPali (i, j);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int number = in.nextInt ();
    int reverseNumber = 0;
    int copyNumber = number;
    boolean isPalindrom = true;
    while (copyNumber > 0) {
        reverseNumber = 10 * reverseNumber + copyNumber % 10;
        copyNumber = copyNumber / 10;
        if (reverseNumber == number) {
            isPalindrom = true;
        } else {
            isPalindrom = false;
        }
    }
    if (isPalindrom) {
        System.out.println (number + " is palindrom");
    } else {
        System.out.println (number + " is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43043810_43047429_16_25
43043810_46380261_5_26
Title: Java Number Palindrom 
----------------------------------------

public static void main (String [] args) {
    int a = 10, b = 99;
    for (int i = a;
    i <= b; i ++) {
        for (int j = i;
        j <= b; j ++) {
            if (isPalindrome (i * j)) {
                System.out.println ("Mult Palindrome: " + i * j);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int number = in.nextInt ();
    int reverseNumber = 0;
    int copyNumber = number;
    boolean isPalindrom = true;
    while (copyNumber > 0) {
        reverseNumber = 10 * reverseNumber + copyNumber % 10;
        copyNumber = copyNumber / 10;
        if (reverseNumber == number) {
            isPalindrom = true;
        } else {
            isPalindrom = false;
        }
    }
    if (isPalindrom) {
        System.out.println (number + " is palindrom");
    } else {
        System.out.println (number + " is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43044590_43045849_44_55
43044590_43054958_18_40
Title: Add JButtons only to certain rows and columns in a JTable 
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    Component tableCellRendererComponent = super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    if ("".equals (value)) {
        return tableCellRendererComponent;
    } else {
        jButton.setAction (createSameActionForEditorAndRenderer (table, value));
        return jButton;
    }
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean selected, boolean hasFocus, int row, int column) {
    ButtonColumn buttonColumn = getButtonColumn (column, row);
    if (buttonColumn != null) {
        JButton renderButton = buttonColumn.getRenderButton ();
        if (hasFocus) {
            renderButton.setForeground (table.getForeground ());
            renderButton.setBackground (UIManager.getColor ("Button.background"));
        } else if (selected) {
            renderButton.setForeground (table.getSelectionForeground ());
            renderButton.setBackground (table.getSelectionBackground ());
        } else {
            renderButton.setForeground (table.getForeground ());
            renderButton.setBackground (UIManager.getColor ("Button.background"));
        }

        renderButton.setText ((value == null) ? "" : value.toString ());
        return renderButton;
    } else {
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43049730_43049938_5_19
43049730_43062873_4_17
Title: JLabel doesn't appear before sleep 
----------------------------------------

public static void main (String [] args) throws Exception {
    SwingUtilities.invokeLater (() -> {
        JFrame frame = new JFrame ("Hello Swing");
        final JLabel label = new JLabel ("A Label", SwingConstants.CENTER);
        frame.add (label);
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.setSize (300, 100);
        frame.setVisible (true);
        Timer timer = new Timer (1000, e -> {
            label.setText ("Try this instead");
        });
        timer.setRepeats (false);
        timer.start ();
    });
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JFrame frame = new JFrame ("Hello Swing");
    final JLabel label = new JLabel ("A Label");
    frame.add (label);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (300, 100);
    frame.setVisible (true);
    TimeUnit.SECONDS.sleep (1);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            label.setText ("Hey! This is Different!");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43061815_43062008_11_24
43061815_43062354_1_14
Title: How do pass multiple data types to HashMap 
----------------------------------------

protected String doInBackground (Void...v) {
    HashMap < String, NewChore1 > params1 = new HashMap < > ();
    String res = "";
    if (newChore1Obj != null) {
        params1.put (Config.KEY_CHORE_TASK_TITLE, newChore1Obj.title1);
        params1.put (Config.KEY_CHORE_DESCRIPTION, newChore1Obj.description1);
        params1.put (Config.KEY_CHORE_PERSON, newChore1Obj.person1);
        params1.put (Config.KEY_CHORE_MONDAY, newChore1Obj.monday1);
        RequestHandler rh = new RequestHandler ();
        res = rh.sendPostRequest (Config.URL_ADD, params1);
    }
    return res;
}
----------------------------------------

@Override
protected String doInBackground (NewChore1...chore) {
    HashMap < String, String > params1 = new HashMap < > ();
    params1.put (Config.KEY_CHORE_TASK_TITLE, chore [0].title1);
    params1.put (Config.KEY_CHORE_DESCRIPTION, chore [0].description1);
    params1.put (Config.KEY_CHORE_PERSON, chore [0].person1);
    params1.put (Config.KEY_CHORE_MONDAY, chore [0].monday1);
    RequestHandler rh = new RequestHandler ();
    String res = rh.sendPostRequest (Config.URL_ADD, params1);
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43074454_43074787_3_22
43074454_43074892_1_18
Title: Replace only the first specific occurrence 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter something");
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            while (line.charAt (i) != ')') {
                if (line.charAt (i) == ' ') {
                    line = line.replaceFirst (" ", "-space-");
                    break;
                }
                i ++;
            }
        }
        break;
    }
    System.out.println (line);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            while (line.charAt (i) != ')') {
                i ++;
                if (line.charAt (i) == ' ') {
                    line = line.substring (0, i) + "-space-" + line.substring (i + 1, line.length ());
                }
            }
        }
    }
    System.out.println (line);
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43074454_43074787_3_22
43074454_43075027_1_21
Title: Replace only the first specific occurrence 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter something");
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            while (line.charAt (i) != ')') {
                if (line.charAt (i) == ' ') {
                    line = line.replaceFirst (" ", "-space-");
                    break;
                }
                i ++;
            }
        }
        break;
    }
    System.out.println (line);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    int begin;
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            i ++;
            begin = i;
            while (line.charAt (i) == ' ') {
                i ++;
            }
            if (line.charAt (i) == ')') {
                line = line.substring (0, begin) + "-space-" + line.substring (i, line.length ());
            }
        }
    }
    System.out.println (line);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43074454_43074892_1_18
43074454_43075027_1_21
Title: Replace only the first specific occurrence 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            while (line.charAt (i) != ')') {
                i ++;
                if (line.charAt (i) == ' ') {
                    line = line.substring (0, i) + "-space-" + line.substring (i + 1, line.length ());
                }
            }
        }
    }
    System.out.println (line);
    scanner.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String line;
    line = scanner.nextLine ();
    int begin;
    for (int i = 0;
    i < line.length (); i ++) {
        if (line.charAt (i) == '(') {
            i ++;
            begin = i;
            while (line.charAt (i) == ' ') {
                i ++;
            }
            if (line.charAt (i) == ')') {
                line = line.substring (0, begin) + "-space-" + line.substring (i, line.length ());
            }
        }
    }
    System.out.println (line);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43079220_43080304_1_10
43079220_43080358_22_32
Title: TreeSet ignoring values 
----------------------------------------

public StringSorter () {
    order = new TreeSet < > ((o1, o2) -> {
        if (greaterThan.getOrDefault (o1, Collections.emptySet ()).contains (o2)) return 1;
        else if (greaterThan.getOrDefault (o2, Collections.emptySet ()).contains (o1)) return - 1;
        else if (o1.equals (o2)) return 0;
        else return - 1;

    });
}
----------------------------------------

public StringSorter () {
    order = new TreeSet < > ((o1, o2) -> {
        if (isGreater (o1, o2, new HashSet < > ())) {
            return 1;
        } else if (isGreater (o2, o1, new HashSet < > ())) {
            return - 1;
        } else {
            return 0;
        }

    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43080837_43081006_1_10
43080837_43081831_1_19
Title: How to compute a power of a power using recursion? 
----------------------------------------

public static int exponentWithHeight (int base, int power, int height) {
    if (power < 0 || height < 0) {
        throw new IllegalArgumentException ("Invalid Input; Check power and/or height value.");
    }
    if (power == 0 || height == 0) {
        return 1;
    } else {
        return (int) Math.pow (base, Math.pow (power, height));
    }
}
----------------------------------------

public static long exponentWithHeight (long base, long power, long height) {
    long calculatedPower;
    if (power < 0 || height < 0) {
        throw new IllegalArgumentException ("Invalid Input; Check power and/or height value.");
    }
    if (power == 0) {
        return 1;
    }
    if (height > 0) {
        calculatedPower = base;
        for (int i = (int) power;
        i > 1; i --) {
            calculatedPower *= base;
        }
        return exponentWithHeight (calculatedPower, power, -- height);
    }
    return base;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43082244_43082348_3_26
43082244_43082621_1_47
Title: How to output multiple numbers at once in a for loop using Java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int x;
    double avg;
    double num = 0;
    System.out.print ("Enter the number of items: ");
    x = scan.nextInt ();
    int [] numbers = new int [x];
    double sum = 0;
    sum = sum + num;
    System.out.print ("Enter the numbers: ");
    for (int index = 0;
    index < numbers.length; index ++) {
        num = scan.nextDouble ();
        sum = sum + num;
    }
    System.out.println ("The sum is " + sum);
    avg = sum / x;
    System.out.println ("The average is " + avg);
}
----------------------------------------

public static void main (String args []) {
    StringBuilder sb = new StringBuilder ("");
    Scanner scan = new Scanner (System.in);
    int x;
    int y = 0;
    double sum = 0;
    double avg;
    System.out.print ("Enter the number of items: ");
    x = scan.nextInt ();
    scan.nextLine ();
    double [] numbers = new double [x];
    System.out.print ("Enter the numbers followed by space:");
    String numberEntered = scan.nextLine ();
    for (int i = 0;
    i < numberEntered.length (); ++ i) {
        sb = new StringBuilder ("");
        while (i < numberEntered.length () && numberEntered.charAt (i) != ' ') {
            sb.append (numberEntered.charAt (i));
            ++ i;
        }
        numbers [y] = Double.parseDouble (sb.toString ());
        ++ y;
    }
    for (double myNumbers : numbers) {
        sum += myNumbers;
    }
    avg = sum / x;
    System.out.println ("The average is " + avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43083416_43097976_19_36
43083416_43097976_25_34
Title: java interactive brokers api historical data and tick 
----------------------------------------

private void run () {
    m_client.eConnect ("localhost", 7497, 123);
    final EReader reader = new EReader (m_client, m_signal);
    reader.start ();
    new Thread () {
        @Override
        public void run () {
            while (m_client.isConnected ()) {
                m_signal.waitForSignal ();
                try {
                    reader.processMsgs ();
                } catch (Exception e) {
                    System.out.println ("Exception: " + e.getMessage ());
                }
            }
        }}

    .start ();
}
----------------------------------------

public void run () {
    while (m_client.isConnected ()) {
        m_signal.waitForSignal ();
        try {
            reader.processMsgs ();
        } catch (Exception e) {
            System.out.println ("Exception: " + e.getMessage ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43105547_43105831_2_30
43105547_43105879_1_19
Title: how to read from file and add to object data? 
----------------------------------------

public static void main (String [] args) throws IOException {
    FileReader readFile = new FileReader ("C:\\Users\\owner\\IdeaProjects\\knapsack\\src\\input");
    BufferedReader br = new BufferedReader (readFile);
    Scanner input = new Scanner (br);
    Scanner keyboard = new Scanner (System.in);
    Items [] items = new Items [23];
    for (int i = 0;
    i < items.length; i ++) {
        items [i] = new Items ();
    }
    int j = 0;
    while (input.hasNext ()) {
        items [j].setValue (input.nextInt ());
        items [j].setWeight (input.nextInt ());
        items [j].setId (j);
        j ++;
    }
    input.close ();
    input.reset ();
    System.out.println ("What is the max capacity for the knapsack? ");
    Integer maxCapacity = keyboard.nextInt ();
    System.out.println (maxCapacity);
    int [] maxWeight = new int [maxCapacity];
    printArray (items);
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    FileReader readFile = new FileReader ("C:\\Users\\owner\\IdeaProjects\\knapsack\\src\\input");
    BufferedReader br = new BufferedReader (readFile);
    Scanner input = new Scanner (br);
    List < Item > items = new LinkedList < > ();
    int i = 0;
    while (input.hasNext ()) {
        Item item = new Item ();
        item.setValue (input.nextInt ());
        item.setWeight (input.nextInt ());
        item.setId (i);
        items.add (item);
        i ++;
    }
    input.close ();
    input.reset ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43117691_43117899_1_31
43117691_43117918_1_13
Title: "Java program on ""friendly numbers """ 
----------------------------------------

public static boolean isFriendly (int number) {
    int counter = 1;
    int tmpNumber = number;
    while (tmpNumber / 10 >= 1) {
        counter ++;
        tmpNumber = tmpNumber / 10;
    }
    boolean check = true;
    for (int i = 1;
    i <= counter; i ++) {
        if ((int) (number / Math.pow (10, (counter - i))) % i == 0 && check) {
            check = true;
        } else {
            check = false;
        }
    }
    return check;
}
----------------------------------------

public static boolean isFriendly (int number) {
    String numberAsString = String.valueOf (number);
    for (int i = 0;
    i < numberAsString.length (); i ++) {
        int currentDigit = Character.getNumericValue (numberAsString.charAt (numberAsString.length () - i - 1));
        System.out.println (currentDigit);
        if (currentDigit % (i + 1) != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43117691_43117899_1_31
43117691_43118013_1_16
Title: "Java program on ""friendly numbers """ 
----------------------------------------

public static boolean isFriendly (int number) {
    int counter = 1;
    int tmpNumber = number;
    while (tmpNumber / 10 >= 1) {
        counter ++;
        tmpNumber = tmpNumber / 10;
    }
    boolean check = true;
    for (int i = 1;
    i <= counter; i ++) {
        if ((int) (number / Math.pow (10, (counter - i))) % i == 0 && check) {
            check = true;
        } else {
            check = false;
        }
    }
    return check;
}
----------------------------------------

public static boolean isFriendly (int number) {
    String num = Integer.toString (number);
    for (int i = 0, dividedBy = 1;
    i < num.length (); i ++, dividedBy ++) {
        String numToCheck = "";
        for (int j = 0;
        j <= i; j ++) {
            numToCheck += num.charAt (j);
        }
        if (Integer.valueOf (numToCheck) % dividedBy != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43117691_43117918_1_13
43117691_43118013_1_16
Title: "Java program on ""friendly numbers """ 
----------------------------------------

public static boolean isFriendly (int number) {
    String numberAsString = String.valueOf (number);
    for (int i = 0;
    i < numberAsString.length (); i ++) {
        int currentDigit = Character.getNumericValue (numberAsString.charAt (numberAsString.length () - i - 1));
        System.out.println (currentDigit);
        if (currentDigit % (i + 1) != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isFriendly (int number) {
    String num = Integer.toString (number);
    for (int i = 0, dividedBy = 1;
    i < num.length (); i ++, dividedBy ++) {
        String numToCheck = "";
        for (int j = 0;
        j <= i; j ++) {
            numToCheck += num.charAt (j);
        }
        if (Integer.valueOf (numToCheck) % dividedBy != 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43124709_43125159_1_16
43124709_43125300_8_22
Title: Substring between 2 indexes using recursion 
----------------------------------------

public static String rec (String s, int n, int m) {
    if (n == 0 && m == 0) {
        return s;
    } else {
        if (n > 0) {
            s = s.substring (1);
            n --;
        }
        if (m > 0) {
            s = s.substring (0, s.length () - 1);
            m --;
        }
        return rec (s, n, m);
    }
}
----------------------------------------

public static String rec (String s, int n, int m) {
    if (n == 0 && s.length () - m < 1) {
        return s;
    } else {
        if (s.length () - m > 1) {
            s = s.substring (0, s.length () - 1);
        } else if (n > 0) {
            s = s.substring (1);
            n --;
        }

        return rec (s, n, m);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43124709_43125236_1_15
43124709_43125300_8_22
Title: Substring between 2 indexes using recursion 
----------------------------------------

public static String rec (String s, int n, int m) {
    if (n == 0 && m == s.length () - 1) {
        return s;
    } else {
        if (n > 0) {
            s = s.substring (1);
            n --;
            m --;
        }
        if (m < s.length () - 1) {
            s = s.substring (0, s.length () - 1);
        }
        return rec (s, n, m);
    }
}
----------------------------------------

public static String rec (String s, int n, int m) {
    if (n == 0 && s.length () - m < 1) {
        return s;
    } else {
        if (s.length () - m > 1) {
            s = s.substring (0, s.length () - 1);
        } else if (n > 0) {
            s = s.substring (1);
            n --;
        }

        return rec (s, n, m);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43132489_43132597_5_23
43132489_43132642_1_13
Title: Add values inside the Java while loop and stop it using a sentinel 
----------------------------------------

public static void main (String args []) {
    java.util.Scanner myInput = new java.util.Scanner (System.in);
    int total = 0;
    int count = 0;
    int values = 0;
    while (values >= 0) {
        total += values;
        count ++;
        System.out.println ("Please input your value, type - 1 to stop entering values.");
        values = myInput.nextInt ();
    }
    System.out.println ("The sum of all your values is " + total);
}
----------------------------------------

public static void main (String [] args) {
    Scanner myInput = new Scanner (System.in);
    System.out.println ("Please input your value, type - 1 to stop entering values.");
    int values = 0;
    int total = 0;
    while (values >= 0) {
        total += values;
        values = myInput.nextInt ();
    }
    System.out.println ("The sum of all your values is " + total);
    myInput.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4314725_4315218_15_40
4314725_4315218_20_33
Title: JAVA making time to decrease to zero by swing timer 
----------------------------------------

public void actionPerformed (ActionEvent click) {
    final long current = System.currentTimeMillis ();
    try {
        final long limit = Integer.parseInt (text.getText ().trim ()) * 1000;
        timer = new Timer (1000, new ActionListener () {
            public void actionPerformed (ActionEvent event) {
                long time = System.currentTimeMillis ();
                long passed = time - current;
                long remaining = limit - passed;
                if (remaining <= 0) {
                    text.setText ("2");
                    timer.stop ();
                } else {
                    long seconds = remaining / 1000;
                    long minutes = seconds / 60;
                    long hours = minutes / 60;
                    text.setText (String.format ("%02d:%02d:%02d", hours, minutes, seconds % 60));
                }
            }}

        );
        timer.start ();
    } catch (NumberFormatException nfe) {
        nfe.printStackTrace ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    long time = System.currentTimeMillis ();
    long passed = time - current;
    long remaining = limit - passed;
    if (remaining <= 0) {
        text.setText ("2");
        timer.stop ();
    } else {
        long seconds = remaining / 1000;
        long minutes = seconds / 60;
        long hours = minutes / 60;
        text.setText (String.format ("%02d:%02d:%02d", hours, minutes, seconds % 60));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43148800_43148903_5_28
43148800_43149005_8_21
Title: Java User Input array is only capturing 3 integers instead of five 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    final int NUM_VALS = 5;
    int [] userNum = new int [NUM_VALS];
    int j = 0;
    int i = 0;
    for (; i < NUM_VALS; i ++) {
        System.out.println ("Enter integer values: ");
        userNum [i] = scnr.nextInt ();
    }
    for (j = 0; j < NUM_VALS; j ++) {
        System.out.print ("You entered: ");
        System.out.println (userNum [j]);
    }
    System.out.print ("\nNumbers in reverse: ");
    for (j = NUM_VALS - 1; j >= 0; j --) {
        System.out.print (userNum [j] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    final List < Integer > numbers = new ArrayList < > ();
    System.out.println ("Enter any number of integers. (whitespace delimited. enter a non-integer to quit.): ");
    while (scnr.hasNextBigInteger ()) {
        final int n = scnr.nextInt ();
        System.out.println ("Parsed: " + n);
        numbers.add (n);
    }
    System.out.println ("Done reading user input.");
    System.out.println ("Your input: " + numbers);
    Collections.reverse (numbers);
    System.out.println ("Your input reversed: " + numbers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43148800_43148903_5_28
43148800_43149018_1_24
Title: Java User Input array is only capturing 3 integers instead of five 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    final int NUM_VALS = 5;
    int [] userNum = new int [NUM_VALS];
    int j = 0;
    int i = 0;
    for (; i < NUM_VALS; i ++) {
        System.out.println ("Enter integer values: ");
        userNum [i] = scnr.nextInt ();
    }
    for (j = 0; j < NUM_VALS; j ++) {
        System.out.print ("You entered: ");
        System.out.println (userNum [j]);
    }
    System.out.print ("\nNumbers in reverse: ");
    for (j = NUM_VALS - 1; j >= 0; j --) {
        System.out.print (userNum [j] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    List < Integer > input = new ArrayList < Integer > ();
    for (int i = 0;
    i < 5; i ++) {
        input.add (scanner.nextInt ());
    }
    for (Integer val : input) {
        System.out.println (val);
    }
    Collections.reverse (input);
    for (Integer val : input) {
        System.out.println (val);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43148800_43149005_8_21
43148800_43149018_1_24
Title: Java User Input array is only capturing 3 integers instead of five 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    final List < Integer > numbers = new ArrayList < > ();
    System.out.println ("Enter any number of integers. (whitespace delimited. enter a non-integer to quit.): ");
    while (scnr.hasNextBigInteger ()) {
        final int n = scnr.nextInt ();
        System.out.println ("Parsed: " + n);
        numbers.add (n);
    }
    System.out.println ("Done reading user input.");
    System.out.println ("Your input: " + numbers);
    Collections.reverse (numbers);
    System.out.println ("Your input reversed: " + numbers);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    List < Integer > input = new ArrayList < Integer > ();
    for (int i = 0;
    i < 5; i ++) {
        input.add (scanner.nextInt ());
    }
    for (Integer val : input) {
        System.out.println (val);
    }
    Collections.reverse (input);
    for (Integer val : input) {
        System.out.println (val);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43151416_43151626_11_29
43151416_43151995_10_38
Title: Java Class with multiple methods that can be executed in a thread 
----------------------------------------

public static void main (String [] args) {
    SOCLass clazz = new SOCLass ();
    Runnable task1 = () -> {
        clazz.method1 ();
    };
    Thread t1 = new Thread (task1);
    t1.start ();
    Runnable task2 = () -> {
        clazz.method2 ();
    };
    Thread t2 = new Thread (task1);
    t2.start ();
    try {
        t1.join ();
        t2.join ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    final ScheduledExecutorService exec = Executors.newSingleThreadScheduledExecutor ();
    final CountDownLatch done = new CountDownLatch (1);
    final Diner diner = new Diner ();
    exec.schedule (new Runnable () {
        public void run () {
            diner.findSeat ();
        }}

    , 2, TimeUnit.SECONDS);
    exec.schedule (new Runnable () {
        public void run () {
            diner.placeOrder ();
        }}

    , 4, TimeUnit.SECONDS);
    exec.schedule (new Runnable () {
        public void run () {
            done.countDown ();
        }}

    , 6, TimeUnit.SECONDS);
    done.await ();
    exec.shutdown ();
    System.out.println ("done");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43151957_43152051_1_13
43151957_43152063_1_14
Title: How to output a reverse expanded sum 
----------------------------------------

public static int printSum (int n) {
    int sum = 0;
    for (int x = 0;
    x < n; x ++) {
        sum += n - x;
        if (x != n - 1) {
            System.out.print ((n - x) + "+");
        } else {
            System.out.print ((n - x) + "=" + sum);
        }
    }
    return sum;
}
----------------------------------------

public static int printSum (int n, boolean reverse) {
    int sum = 0;
    for (int i = n;
    i > 0; i --) {
        sum += i;
        if (i > 1) {
            System.out.print (i + "+");
        } else {
            System.out.print (i);
        }
    }
    System.out.print (n + "=" + sum);
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43162254_43162453_2_32
43162254_43162621_4_50
Title: My nested for loop number pattern doesn't out put the correct pattern 
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < 6; i ++) {
        for (int j = 0;
        j < (5 - i) * 2; j ++) {
            System.out.print (" ");
        }
        for (int j = i + 1;
        j >= 1; j --) {
            System.out.print (j + " ");
        }
        System.out.println ();
    }
    System.out.println ();
    for (int i = 0;
    i < 6; i ++) {
        for (int j = 0;
        j < i * 2; j ++) {
            System.out.print (" ");
        }
        for (int j = 1;
        j <= 6 - i; j ++) {
            System.out.print (j + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] [] arr = new int [6] [6];
    for (int i = 0;
    i < 6; i ++) arr [i] [5] = 1;

    for (int i = 1;
    i < 6; i ++) for (int j = 4;
    j >= 5 - i; j --) {
        arr [i] [j] = arr [i - 1] [j + 1] + 1;
    }

    for (int i = 0;
    i < 6; i ++) {
        for (int j = 0;
        j < 6; j ++) {
            if (arr [i] [j] > 0) System.out.print (arr [i] [j] + " ");
            else System.out.print ("  ");

        }
        System.out.println ("");
    }
    System.out.println ("");
    int z = 0;
    for (int i = 5;
    i >= 0; i --) {
        for (int k = 0;
        k < z; k ++) System.out.print ("  ");

        for (int j = 5;
        j >= 0; j --) {
            if (arr [i] [j] > 0) System.out.print (arr [i] [j] + " ");

        }
        System.out.println ("");
        z ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43164578_43189257_26_47
43164578_43220280_12_33
Title: n-ary Cartesian product inRxJava 
----------------------------------------

public T [] next () {
    T [] res = (T []) Array.newInstance (componentClass, componentsList.size ());
    for (int i = 0;
    i < componentsList.size (); i ++) {
        res [i] = componentsList.get (i).get (indices [i]);
    }
    indices [0] ++;
    for (int i = 0;
    i < componentsList.size () - 1; i ++) {
        if (indices [i] == componentsList.get (i).size ()) {
            indices [i] = 0;
            indices [i + 1] ++;
        }
    }
    hasNext = indices [componentsList.size () - 1] < componentsList.get (componentsList.size () - 1).size ();
    return res;
}
----------------------------------------

protected int [] next (int [] state, Observer < ? super int [] > observer) {
    int [] next = new int [list.size ()];
    for (int i = 0;
    i < next.length; i ++) {
        next [i] = list.get (i) [state [i]];
    }
    observer.onNext (next);
    state [state.length - 1] ++;
    for (int i = state.length - 1;
    i >= 0; i --) {
        int delta = list.get (i).length - state [i];
        if (delta > 0) {
            break;
        } else if (delta == 0) {
            state [i] = 0;
            if (i == 0) {
                observer.onCompleted ();
                break;
            }
            state [i - 1] ++;
        }

    }
    return state;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43166602_43166633_1_18
43166602_43166671_1_11
Title: Using toCharArray to check if String has any non-digits 
----------------------------------------

public void setMobile (String mobile) {
    boolean hasDigit = false;
    char [] mob = mobile.toCharArray ();
    for (int index = 0;
    Character.isDigit (mob) == true; index ++) {
        if (mobile.matches (".*\\d+.*") == true) {
            hasDigit = true;
        }
    }
    if (hasDigit == false) {
        this.mobile = mobile;
    }
}
----------------------------------------

public void setMobile (String mobile) {
    boolean flag = true;
    for (int index = 0;
    i < mobile.length (); index ++) {
        if (mobile.charAt (index) < '0' || mobile.charAt (index) > '9') flag = false;

    }
    if (flag == true) this.mobile = mobile;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177101_2_14
43176198_43177331_5_16
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public static void main (String [] args) throws ExecutionException, InterruptedException {
    ExecutorService service = Executors.newFixedThreadPool (3);
    int x = 0;
    while (x < 100) {
        service.submit (getTask ("A ")).get ();
        service.submit (getTask ("B ")).get ();
        service.submit (getTask ("C ")).get ();
        x ++;
    }
    service.shutdown ();
}
----------------------------------------

public static void main (String [] args) {
    Pattern p = new Pattern ();
    A1 a = new A1 (p);
    B1 b = new B1 (p);
    C1 c = new C1 (p);
    a.start ();
    b.start ();
    c.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_27_48
43176198_51239028_11_28
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p1) {
            while (true) {
                while (p1.status != 1) {
                    try {
                        p1.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("A ");
                p1.status = 2;
                p1.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 1 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 1) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("A ");
                Thread.sleep (400);
                writeAbcExample.status = 2;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_27_48
43176198_51239028_41_58
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p1) {
            while (true) {
                while (p1.status != 1) {
                    try {
                        p1.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("A ");
                p1.status = 2;
                p1.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 1 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 2) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("B ");
                Thread.sleep (400);
                writeAbcExample.status = 3;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_27_48
43176198_51239028_71_88
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p1) {
            while (true) {
                while (p1.status != 1) {
                    try {
                        p1.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("A ");
                p1.status = 2;
                p1.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 1 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 3) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("C ");
                Thread.sleep (400);
                writeAbcExample.status = 1;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_27_48
43176198_51240847_23_45
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p1) {
            while (true) {
                while (p1.status != 1) {
                    try {
                        p1.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("A ");
                p1.status = 2;
                p1.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 1 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (ai) {
            int val = ai.intValue ();
            if (val >= 10) {
                ai.notifyAll ();
                break;
            } else {
                if (val % 3 == b) {
                    System.out.println (" Thread " + b + " printing value " + c);
                    ai.getAndIncrement ();
                    ai.notifyAll ();
                } else {
                    try {
                        ai.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_61_82
43176198_51239028_11_28
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p2) {
            while (true) {
                while (p2.status != 2) {
                    try {
                        p2.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("B ");
                p2.status = 3;
                p2.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 2 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 1) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("A ");
                Thread.sleep (400);
                writeAbcExample.status = 2;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_61_82
43176198_51239028_41_58
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p2) {
            while (true) {
                while (p2.status != 2) {
                    try {
                        p2.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("B ");
                p2.status = 3;
                p2.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 2 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 2) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("B ");
                Thread.sleep (400);
                writeAbcExample.status = 3;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_61_82
43176198_51239028_71_88
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p2) {
            while (true) {
                while (p2.status != 2) {
                    try {
                        p2.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("B ");
                p2.status = 3;
                p2.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 2 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 3) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("C ");
                Thread.sleep (400);
                writeAbcExample.status = 1;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_61_82
43176198_51240847_23_45
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p2) {
            while (true) {
                while (p2.status != 2) {
                    try {
                        p2.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("B ");
                p2.status = 3;
                p2.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 2 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (ai) {
            int val = ai.intValue ();
            if (val >= 10) {
                ai.notifyAll ();
                break;
            } else {
                if (val % 3 == b) {
                    System.out.println (" Thread " + b + " printing value " + c);
                    ai.getAndIncrement ();
                    ai.notifyAll ();
                } else {
                    try {
                        ai.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43176198_43177331_94_116
43176198_51239028_11_28
Title: multithreading in java to print abc using 3 threads 
----------------------------------------

public void run () {
    try {
        synchronized (p3) {
            while (true) {
                while (p3.status != 3) {
                    try {
                        p3.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.print ("C ");
                Thread.sleep (1000);
                p3.status = 1;
                p3.notifyAll ();
            }
        }
    } catch (Exception e) {
        System.out.println ("Exception 3 :" + e.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (writeAbcExample) {
            while (true) {
                while (writeAbcExample.status != 1) {
                    try {
                        writeAbcExample.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
                System.out.println ("A ");
                Thread.sleep (400);
                writeAbcExample.status = 2;
                writeAbcExample.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
