$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25357115_25357259_239_250
25357115_25357259_92_113
Title: "Syntax error on tokens AnnotationName expected instead - error on query" 
----------------------------------------

public void done (List < ParseUser > user, ParseException e) {
    if (e == null) {
        Intent intent = new Intent (getActivity ().getApplicationContext (), MessagingActivity.class);
        intent.putExtra ("RECIPIENT_ID", user.get (0).getObjectId ());
        startActivity (intent);
    } else {
        Toast.makeText (getActivity ().getApplicationContext (), "Error finding that user", Toast.LENGTH_SHORT).show ();
    }
}
----------------------------------------

public void done (List < ParseObject > object, ParseException e) {
    ParseFile image = object.getParseFile ("ProfilePicture");
    ParseImageView imageView = (ParseImageView) getView ().findViewById (R.id.profilePictureResult);
    imageView.setPlaceholder (getResources ().getDrawable (R.drawable.profile_pict));
    imageView.setParseFile (image);
    imageView.loadInBackground (new GetDataCallback () {
        @Override
        public void done (byte [] data, ParseException e) {
            Log.i ("ParseImageView", "Fetched! Data length: " + data.length + ", or exception: " + e.getMessage ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25366009_25366119_1_18
25366009_26737369_1_18
Title: How Collection copy function works in java 
----------------------------------------

public static < T > void copy (List < ? super T > dest, List < ? extends T > src) {
    int srcSize = src.size ();
    if (srcSize > dest.size ()) throw new IndexOutOfBoundsException ("Source does not fit in dest");

    if (srcSize < COPY_THRESHOLD || (src instanceof RandomAccess && dest instanceof RandomAccess)) {
        for (int i = 0;
        i < srcSize; i ++) dest.set (i, src.get (i));

    } else {
        ListIterator < ? super T > di = dest.listIterator ();
        ListIterator < ? extends T > si = src.listIterator ();
        for (int i = 0;
        i < srcSize; i ++) {
            di.next ();
            di.set (si.next ());
        }
    }
}
----------------------------------------

public static < T > void copy (List < ? super T > dest, List < ? extends T > src) {
    int srcSize = src.size ();
    if (srcSize > dest.size ()) throw new IndexOutOfBoundsException ("Source does not fit in dest");

    if (srcSize < COPY_THRESHOLD || (src instanceof RandomAccess && dest instanceof RandomAccess)) {
        for (int i = 0;
        i < srcSize; i ++) dest.set (i, src.get (i));

    } else {
        ListIterator < ? super T > di = dest.listIterator ();
        ListIterator < ? extends T > si = src.listIterator ();
        for (int i = 0;
        i < srcSize; i ++) {
            di.next ();
            di.set (si.next ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25376459_25376525_1_13
25376459_25376529_10_20
Title: How to apply Java generics to simplify this code 
----------------------------------------

private < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    T value = null;
    if (needed (source)) {
        if (defaultValue instanceof Boolean) {
            value = convertToBoolean (source.getValue (), defaultValue);
        } else if (defaultValue instanceof Integer) {
            value = convertToInteger (source.getValue (), defaultValue);
        } else {
        }

    }
    return value;
}
----------------------------------------

private < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    T value = null;
    if (needed (source)) {
        if (defaultValue instanceof Boolean) {
            value = convertToBoolean (source.getValue, defaultValue);
        } else if (defaultValue instanceof Integer) {
            value = convertToInteger (source.getValue, defaultValue);
        }

    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25376459_25376525_1_13
25376459_25376915_1_18
Title: How to apply Java generics to simplify this code 
----------------------------------------

private < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    T value = null;
    if (needed (source)) {
        if (defaultValue instanceof Boolean) {
            value = convertToBoolean (source.getValue (), defaultValue);
        } else if (defaultValue instanceof Integer) {
            value = convertToInteger (source.getValue (), defaultValue);
        } else {
        }

    }
    return value;
}
----------------------------------------

public < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    if (needed (source)) {
        Object o = source.getValue ();
        if (o == null) {
            return defaultValue;
        }
        Class < ? > targetClass = defaultValue.getClass ();
        if (targetClass.isInstance (o)) {
            @SuppressWarnings ("unchecked")
            T value = (T) o;
            return value;
        } else {
            throw new IllegalArgumentException ("Types do not match");
        }
    } else {
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25376459_25376529_10_20
25376459_25376915_1_18
Title: How to apply Java generics to simplify this code 
----------------------------------------

private < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    T value = null;
    if (needed (source)) {
        if (defaultValue instanceof Boolean) {
            value = convertToBoolean (source.getValue, defaultValue);
        } else if (defaultValue instanceof Integer) {
            value = convertToInteger (source.getValue, defaultValue);
        }

    }
    return value;
}
----------------------------------------

public < T > T addIfMatters (Map < String, Object > target, Source source, T defaultValue) {
    if (needed (source)) {
        Object o = source.getValue ();
        if (o == null) {
            return defaultValue;
        }
        Class < ? > targetClass = defaultValue.getClass ();
        if (targetClass.isInstance (o)) {
            @SuppressWarnings ("unchecked")
            T value = (T) o;
            return value;
        } else {
            throw new IllegalArgumentException ("Types do not match");
        }
    } else {
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25378498_25378547_34_60
25378498_25378547_75_95
Title: Process much data multithreaded with fix number of threads and allowing exceptions 
----------------------------------------

public void run () {
    try (BufferedReader br = new BufferedReader (new FileReader ("lines.txt"))) {
        String line;
        while (null != (line = br.readLine ())) {
            System.out.println (line);
            buf.put (line);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    synchronized (lock) {
        while (! buf.isEmpty ()) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
            }
        }
    }
    stopConsumers ();
}
----------------------------------------

public void run () {
    System.out.println ("Starting");
    while (keepRunning.get ()) {
        try {
            process (buf.take ());
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (Exception e) {
            stopConsumers ();
        }
        synchronized (lock) {
            lock.notify ();
        }
    }
    System.out.println ("Stopping");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2538787_10899018_6_21
2538787_37491445_6_17
Title: How to display an output of float data with 2 decimal places in Java? 
----------------------------------------

public static void main (String [] args) {
    String preset0 = "0.09,0.20,0.09,0.07";
    String [] thisto = preset0.split (",");
    float a = (Float.valueOf (thisto [0])).floatValue ();
    System.out.println ("[Original]: " + a);
    a = (float) (a + 0.01);
    System.out.printf ("[Local]: %.2f \n", a);
    DecimalFormat df = new DecimalFormat ();
    df.setMinimumFractionDigits (2);
    df.setMaximumFractionDigits (2);
    System.out.println ("[Remote]: " + df.format (a));
}
----------------------------------------

public static void main (String args []) {
    float a, b;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter Values For Calculation");
    a = sc.nextFloat ();
    b = sc.nextFloat ();
    float c = a / b;
    System.out.printf ("%.2f", c);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25396250_25396316_10_32
25396250_25396343_13_35
Title: Infinite loop in recursion 
----------------------------------------

public static void recursion (int a, int b) {
    if (startindex == stopindex) return;

    for (int i = a;
    i > 0; i --) {
        System.out.print ("O");
    }
    for (int j = 0;
    j < b; j ++) {
        System.out.print ("X");
    }
    System.out.println ();
    -- a;
    ++ b;
    ++ startindex;
    recursion (a, b);
}
----------------------------------------

public static void recursion (int a, int b, int startIndex) {
    if (startIndex > stopindex) return;

    for (int i = a;
    i > 0; i --) {
        System.out.print ("O");
    }
    for (int j = 0;
    j < b; j ++) {
        System.out.print ("X");
    }
    System.out.println ();
    -- a;
    ++ b;
    ++ startIndex;
    recursion (a, b, startIndex);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25396250_25396327_1_18
25396250_25396343_13_35
Title: Infinite loop in recursion 
----------------------------------------

public static void recursion (int a, int b) {
    if (a == b) return;

    for (int i = a - b;
    i > 0; i --) {
        System.out.print ("O");
    }
    for (int j = 0;
    j < b; j ++) {
        System.out.print ("X");
    }
    System.out.println ();
    ++ b;
    recursion (a, b);
}
----------------------------------------

public static void recursion (int a, int b, int startIndex) {
    if (startIndex > stopindex) return;

    for (int i = a;
    i > 0; i --) {
        System.out.print ("O");
    }
    for (int j = 0;
    j < b; j ++) {
        System.out.print ("X");
    }
    System.out.println ();
    -- a;
    ++ b;
    ++ startIndex;
    recursion (a, b, startIndex);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2539654_14463417_8_24
2539654_2540073_5_22
Title: "java concurrency: many writers one reader" 
----------------------------------------

public void notify (final String key) {
    r.lock ();
    AtomicLong count = stats.get (key);
    if (count == null) {
        r.unlock ();
        w.lock ();
        count = stats.get (key);
        if (count == null) {
            count = new AtomicLong ();
            stats.put (key, count);
        }
        r.lock ();
        w.unlock ();
    }
    count.incrementAndGet ();
    r.unlock ();
}
----------------------------------------

public void notify (final String key) {
    Runnable r = new Runnable () {
        public void run () {
            Long value = stats.get (key);
            if (value == null) {
                value = 1L;
            } else {
                value ++;
            }
            stats.put (key, value);
            if (timeToDoCollectAndSave ()) {
                collectAndSave ();
            }
        }}

    ;
    executor.execute (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25398301_25399188_6_31
25398301_25406746_1_26
Title: Manually authenticate use spring security 
----------------------------------------

public void manualAuthentication (String login, String password, HttpServletRequest httpServletRequest) throws IOException, ServletException {
    AddableHttpRequest addableHttpRequest = new AddableHttpRequest (httpServletRequest);
    addableHttpRequest.addParameter ("j_username", login);
    addableHttpRequest.addParameter ("j_password", password);
    MockHttpServletResponse mockServletResponse = new MockHttpServletResponse ();
    Authentication authentication = this.attemptAuthentication (addableHttpRequest, mockServletResponse);
    this.reflectSessionStrategy ().onAuthentication (authentication, addableHttpRequest, mockServletResponse);
    this.successfulAuthentication (addableHttpRequest, mockServletResponse, authentication);
}
----------------------------------------

public void manualAuthentication (loginDTO loginDTO, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
    AddableHttpRequest addableHttpRequest = new AddableHttpRequest (request);
    addableHttpRequest.addParameter ("j_username", loginDTO.getJ_username ());
    addableHttpRequest.addParameter ("j_password", loginDTO.getJ_password ());
    UsernamePasswordAuthenticationToken token = (UsernamePasswordAuthenticationToken) twoFactorAuthenticationFilter.attemptAuthentication (addableHttpRequest, response);
    if (token.isAuthenticated ()) {
        twoFactorAuthenticationFilter.successfulAuthentication (addableHttpRequest, response, null, token);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_36898851_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_41417312_1_24
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_41915384_1_26
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_45420892_1_13
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_47405575_1_16
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_21512907_1_24
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cdog = 0;
    int ccat = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ccat ++;
        } else if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            cdog ++;
        }

    }
    if (cdog == ccat) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_36898851_1_17
2540725_41417312_1_24
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_36898851_1_17
2540725_41915384_1_26
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_36898851_1_17
2540725_45420892_1_13
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_36898851_1_17
2540725_47405575_1_16
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_36898851_1_17
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    boolean x = false;
    int cCount = 0;
    int dCount = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.charAt (i) == 'c' && str.charAt (i + 1) == 'a' && str.charAt (i + 2) == 't') {
            ++ cCount;
        }
        if (str.charAt (i) == 'd' && str.charAt (i + 1) == 'o' && str.charAt (i + 2) == 'g') {
            ++ dCount;
        }
    }
    if (cCount == dCount) {
        return true;
    }
    return x;
}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41417312_1_24
2540725_41915384_1_26
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41417312_1_24
2540725_45420892_1_13
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41417312_1_24
2540725_47405575_1_16
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41417312_1_24
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int countcat = 0;
    int countdog = 0;
    if (str.length () >= 3) {
        for (int i = 0;
        i < str.length () - 2; i ++) {
            if (str.substring (i, i + 3).equals ("cat")) countcat = countcat + 1;

        }
        for (int j = 0;
        j < str.length () - 2; j ++) {
            if (str.substring (j, j + 3).equals ("dog")) countdog = countdog + 1;

        }
    }
    if (countdog == countcat) return true;

    return false;
}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41915384_1_26
2540725_45420892_1_13
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41915384_1_26
2540725_47405575_1_16
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_41915384_1_26
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cat, dog;
    cat = 0;
    dog = 0;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("cat")) {
            cat ++;
        }
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if ((i + 3) > str.length ()) {
            break;
        }
        if (str.substring (i, i + 3).equals ("dog")) {
            dog ++;
        }
    }
    if (cat == dog) {
        return true;
    } else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_45420892_1_13
2540725_47405575_1_16
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_45420892_1_13
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int cat = 0;
    int dog = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        String temp = str.substring (i, i + 3);
        if (temp.compareTo ("cat") == 0) cat ++;

        if (temp.compareTo ("dog") == 0) dog ++;

    }
    return cat == dog ? true : false;
}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2540725_47405575_1_16
2540725_51626126_1_17
Title: catDog string problem at Codingbat.com 
----------------------------------------

public boolean catDog (String str) {
    int count = 0;
    int flag = 0;
    for (int i = 0;
    i < str.length () - 2; i ++) {
        if (str.length () >= 3 && str.substring (i, i + 3).equals ("cat")) count ++;

        if (str.length () >= 3 && str.substring (i, i + 3).equals ("dog")) flag ++;

    }
    if (count == flag) return true;
    else return false;

}
----------------------------------------

public boolean catDog (String str) {
    int end = str.length ();
    int cDog = 0;
    int cCat = 0;
    for (int i = 0;
    i < end - 2; i ++) {
        if (str.substring (i, i + 3).equals ("cat")) {
            cCat ++;
        } else if (str.substring (i, i + 3).equals ("dog")) {
            cDog ++;
        }

    }
    return cCat == cDog ? true : false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25415177_25415386_37_49
25415177_25461417_46_57
Title: JProgressBar.stringPainted(true); is not working 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (isStringToBePainted) {
        Dimension size = this.getSize ();
        if (this.getPercentComplete () < 0.9) TestGame.y = (int) (size.height - size.height * this.getPercentComplete ());

        String text = getString ();
        g.setColor (Color.BLACK);
        g.drawString (text, 0, TestGame.y);
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (isStringToBePainted) {
        Dimension size = CustomProgressBar.this.getSize ();
        if (CustomProgressBar.this.getPercentComplete () < 0.9) {
            R.y = (int) (size.height - size.height * CustomProgressBar.this.getPercentComplete ());
        }
        String text = getString ();
        g.setColor (Color.BLACK);
        g.drawString (text, 0, R.y);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25421856_25422289_1_12
25421856_25422299_1_18
Title: nested for loops making square 
----------------------------------------

public static void main (String [] args) {
    int a = 4;
    for (int i = 1;
    i <= a; i ++) {
        for (int k = 0;
        k < a; k ++) {
            System.out.print (i + k);
            System.out.print (" ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int a = 3;
    for (int k = 1;
    k <= a; k ++) {
        int c = k + 1;
        int g = k + 2;
        int e = k + 3;
        System.out.println ();
        System.out.print (k + " ");
        System.out.print (c + " ");
        System.out.print (g + " ");
        System.out.print (e + " ");
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25421856_25422299_1_18
25421856_25422499_1_10
Title: nested for loops making square 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int a = 3;
    for (int k = 1;
    k <= a; k ++) {
        int c = k + 1;
        int g = k + 2;
        int e = k + 3;
        System.out.println ();
        System.out.print (k + " ");
        System.out.print (c + " ");
        System.out.print (g + " ");
        System.out.print (e + " ");
    }
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int a = 4;
    for (int i = 1;
    i <= a - 1; i ++) {
        for (int j = 0;
        j < a; j ++) {
            System.out.print (i + j);
            System.out.print (" ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25422939_25425153_18_45
25422939_25544145_19_38
Title: MigLayout unexpected layout with absolute cell coordinates and spanning 
----------------------------------------

private void initUI () {
    JPanel pnl = new JPanel (new MigLayout ("gap 0"));
    pnl.add (createLabel ("One"), "cell 0 0 3 2, w 180, h 100");
    pnl.add (createLabel ("Two"), "cell 3 0 3 2, w 180, h 100, center");
    pnl.add (createLabel ("Three"), "cell 6 0 2 1, align left top, w 120, h 50");
    pnl.add (createLabel ("Four"), "cell 6 1 2 1, align left top, w 120, h 50");
    pnl.add (createLabel ("Five"), "cell 0 2 2 1, align left top, w 120, h 50");
    pnl.add (createLabel ("Six"), "cell 2 2 3 2, w 180, h 100");
    pnl.add (createLabel ("Seven"), "cell 5 2 3 2, center, w 180, h 100");
    add (pnl);
    pack ();
    setTitle ("MigLayout example");
    setLocationRelativeTo (null);
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------

private void initUI () {
    JPanel pnl = new JPanel (new MigLayout ("gap 0 0"));
    pnl.add (createLabel ("One"), "pos 0 0");
    pnl.add (createLabel ("Two"), "pos " + (CELL_WIDTH * 3) + " " + (CELL_HEIGHT * 0));
    pnl.add (createLabel ("Three"), "pos " + (CELL_WIDTH * 6) + " " + (CELL_HEIGHT * 0));
    pnl.add (createLabel ("Four"), "pos " + (CELL_WIDTH * 6) + " " + (CELL_HEIGHT * 1));
    pnl.add (createLabel ("Five"), "pos " + (CELL_WIDTH * 0) + " " + (CELL_HEIGHT * 2));
    pnl.add (createLabel ("Six"), "pos " + (CELL_WIDTH * 2) + " " + (CELL_HEIGHT * 2));
    pnl.add (createLabel ("Seven"), "pos " + (CELL_WIDTH * 5) + " " + (CELL_HEIGHT * 2));
    add (pnl);
    pack ();
    setTitle ("MigLayout example");
    setLocationRelativeTo (null);
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25422939_25425153_56_64
25422939_25544145_49_57
Title: MigLayout unexpected layout with absolute cell coordinates and spanning 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            MigLayoutDemo2 ex = new MigLayoutDemo2 ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            MigLayoutDemo3 ex = new MigLayoutDemo3 ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25423743_25424704_14_22
25423743_25456540_6_18
Title: How to block attributes from being used in java 
----------------------------------------

public static void main (String [] args) {
    for (Counter i = new Counter (), oi = i;
    i.get () < 10; i = oi, i.inc ()) {
        System.out.println ("i = " + i.get ());
        i = null;
        i.inc ();
        for (int j = 0;
        j < 10; j ++) {
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (LockableCounter i = new LockableCounter (0);
    i.getValue () < 42; i.unlock ().increment ()) {
        System.out.println ("A-loop:" + i.getValue ());
        i.lock ();
    }
    for (LockableCounter i = new LockableCounter (0);
    i.getValue () < 42; i.unlock ().increment ()) {
        System.out.println ("B-loop1:" + i.getValue ());
        i.lock ();
        System.out.println ("B-loop2:" + i.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2543400_16746159_3_38
2543400_2543521_11_38
Title: "Sort String ""13584219"" in ascending order 12458913 in Java" 
----------------------------------------

public static void main (String args []) {
    try {
        String str = args [0] + "," + args [1];
        String sArr [] = str.split (",");
        int slen = sArr.length;
        int iArr [] = new int [slen];
        int temp;
        for (int i = 0;
        i < slen; i ++) {
            iArr [i] = Integer.parseInt (sArr [i]);
        }
        for (int i = 0;
        i < slen; i ++) {
            for (int j = i + 1;
            j < slen; j ++) {
                if (iArr [i] >= iArr [j]) {
                    temp = iArr [i];
                    iArr [i] = iArr [j];
                    iArr [j] = temp;
                }
            }
        }
        for (int i = 0;
        i < slen; i ++) {
            System.out.println (" " + iArr [i]);
        }
    } catch (Exception e) {
        System.out.println ("input error " + e);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList arrayList = new ArrayList ();
    arrayList.add ("9");
    arrayList.add ("3");
    arrayList.add ("5");
    arrayList.add ("2");
    arrayList.add ("4");
    Collections.sort (arrayList);
    System.out.println ("ArrayList elements after sorting in ascending order : ");
    for (int i = 0;
    i < arrayList.size (); i ++) System.out.println (arrayList.get (i));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2543400_16746159_3_38
2543400_2585581_2_14
Title: "Sort String ""13584219"" in ascending order 12458913 in Java" 
----------------------------------------

public static void main (String args []) {
    try {
        String str = args [0] + "," + args [1];
        String sArr [] = str.split (",");
        int slen = sArr.length;
        int iArr [] = new int [slen];
        int temp;
        for (int i = 0;
        i < slen; i ++) {
            iArr [i] = Integer.parseInt (sArr [i]);
        }
        for (int i = 0;
        i < slen; i ++) {
            for (int j = i + 1;
            j < slen; j ++) {
                if (iArr [i] >= iArr [j]) {
                    temp = iArr [i];
                    iArr [i] = iArr [j];
                    iArr [j] = temp;
                }
            }
        }
        for (int i = 0;
        i < slen; i ++) {
            System.out.println (" " + iArr [i]);
        }
    } catch (Exception e) {
        System.out.println ("input error " + e);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner ("13,5,8,4,2,1,9").useDelimiter (",");
    List < Integer > list = new ArrayList < Integer > ();
    while (scanner.hasNextInt ()) {
        list.add (scanner.nextInt ());
    }
    Collections.sort (list);
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2543400_2543521_11_38
2543400_2585581_2_14
Title: "Sort String ""13584219"" in ascending order 12458913 in Java" 
----------------------------------------

public static void main (String [] args) {
    ArrayList arrayList = new ArrayList ();
    arrayList.add ("9");
    arrayList.add ("3");
    arrayList.add ("5");
    arrayList.add ("2");
    arrayList.add ("4");
    Collections.sort (arrayList);
    System.out.println ("ArrayList elements after sorting in ascending order : ");
    for (int i = 0;
    i < arrayList.size (); i ++) System.out.println (arrayList.get (i));

}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner ("13,5,8,4,2,1,9").useDelimiter (",");
    List < Integer > list = new ArrayList < Integer > ();
    while (scanner.hasNextInt ()) {
        list.add (scanner.nextInt ());
    }
    Collections.sort (list);
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2543797_10049138_1_11
2543797_23749112_1_11
Title: Spring - Redirect after POST (even with validation errors) 
----------------------------------------

@RequestMapping (value = "/submit", method = RequestMethod.POST)
public final String submit (@ModelAttribute ("register")
@Valid
final Register register, final BindingResult binding, RedirectAttributes attr, HttpSession session) {
    if (binding.hasErrors ()) {
        attr.addFlashAttribute ("org.springframework.validation.BindingResult.register", binding);
        attr.addFlashAttribute ("register", register);
        return "redirect:/register/create";
    }
    return "redirect:/register/success";
}
----------------------------------------

@RequestMapping (value = "/submit", method = RequestMethod.POST)
public final String submit (@ModelAttribute ("register")
@Valid
final Register register, final BindingResult binding, RedirectAttributes attr, HttpSession session) {
    if (binding.hasErrors ()) {
        attr.addFlashAttribute ("org.springframework.validation.BindingResult.register", binding);
        attr.addFlashAttribute ("register", register);
        return "redirect:/register/create";
    }
    return "redirect:/register/success";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2543797_10049138_1_11
2543797_7013432_1_14
Title: Spring - Redirect after POST (even with validation errors) 
----------------------------------------

@RequestMapping (value = "/submit", method = RequestMethod.POST)
public final String submit (@ModelAttribute ("register")
@Valid
final Register register, final BindingResult binding, RedirectAttributes attr, HttpSession session) {
    if (binding.hasErrors ()) {
        attr.addFlashAttribute ("org.springframework.validation.BindingResult.register", binding);
        attr.addFlashAttribute ("register", register);
        return "redirect:/register/create";
    }
    return "redirect:/register/success";
}
----------------------------------------

@RequestMapping (value = "/submit", method = RequestMethod.POST)
public final String submit (@ModelAttribute ("register")
@Valid
final Register register, final BindingResult binding, HttpSession session) {
    if (binding.hasErrors ()) {
        session.setAttribute ("register", register);
        session.setAttribute ("binding", binding);
        return "redirect:/register/create";
    }
    return "redirect:/register/success";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25442580_25444871_66_82
25442580_25445947_37_62
Title: Java sort 4 arrays into 1 array 
----------------------------------------

public static int [] sort (int s []) {
    int temp;
    for (int i = 0;
    i < s.length; i ++) {
        for (int j = i + 1;
        j < s.length - 1; j ++) {
            if (s [i] > s [j]) {
                temp = s [i];
                s [i] = s [j];
                s [j] = temp;
            }
        }
    }
    return s;
}
----------------------------------------

private static int [] sort (List < ArrayTail > all) {
    int totalLength = 0;
    for (ArrayTail tail : all) {
        totalLength += tail.size ();
    }
    int [] result = new int [totalLength];
    int pos = 0;
    while (! all.isEmpty ()) {
        ArrayTail smallest = all.get (0);
        result [pos] = smallest.take ();
        pos ++;
        if (smallest.size () == 0) {
            all.remove (0);
        } else {
            sortFirstElement (all);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25442580_25444871_6_39
25442580_25445947_3_22
Title: Java sort 4 arrays into 1 array 
----------------------------------------

public static void main (String args []) {
    int [] a = {1, 2, 3, 4, 5};
    int [] b = {1, 2, 3, 4, 5, 6};
    int [] c = {1, 3, 7};
    int [] d = {2, 3, 4, 8, 9, 10};
    int [] s = combine (a, b, c, d);
    int [] sort = sort (s);
    System.out.print ("ARRAY AFTER SORT  ");
    System.out.print ("[");
    for (int i = 0;
    i < sort.length; i ++) {
        if (i == sort.length - 1) System.out.print (sort [i]);
        else System.out.print (sort [i] + ",");

    }
    System.out.println ("]\n");
    int [] removedups = removedups (sort);
    System.out.print ("ARRAY REMOVE DUPLICATE  ");
    System.out.print ("[");
    for (int i = 0;
    i < removedups.length; i ++) {
        if (i == removedups.length - 1) System.out.print (removedups [i]);
        else System.out.print (removedups [i] + ",");

    }
    System.out.print ("]");
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {1, 2, 3, 4, 5};
    int [] b = {1, 2, 3, 4, 5, 6};
    int [] c = {1, 3, 7};
    int [] d = {2, 3, 4, 8, 9, 10};
    List < ArrayTail > all = new ArrayList < ArrayTail > ();
    add (all, new ArrayTail (a));
    add (all, new ArrayTail (b));
    add (all, new ArrayTail (c));
    add (all, new ArrayTail (d));
    int [] sorted = sort (all);
    int [] sortedUniq = getUniq (sorted);
    System.out.println ("Sorted: " + Arrays.toString (sorted));
    System.out.println ("Sorted uniq: " + Arrays.toString (sortedUniq));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2544758_16441839_1_14
2544758_2544834_26_50
Title: How to adjust position of scroll in the scrollpane 
----------------------------------------

public void scroll (int vertical) {
    switch (vertical) {
        case SwingConstants.TOP :
            getVerticalScrollBar ().setValue (0);
            break;
        case SwingConstants.CENTER :
            getVerticalScrollBar ().setValue (getVerticalScrollBar ().getMaximum ());
            getVerticalScrollBar ().setValue (getVerticalScrollBar ().getValue () / 2);
            break;
        case SwingConstants.BOTTOM :
            getVerticalScrollBar ().setValue (getVerticalScrollBar ().getMaximum ());
            break;
    }
}
----------------------------------------

public static void scroll (JComponent c, int horizontal, int vertical) {
    Rectangle visible = c.getVisibleRect ();
    Rectangle bounds = c.getBounds ();
    switch (vertical) {
        case TOP :
            visible.y = 0;
            break;
        case VCENTER :
            visible.y = (bounds.height - visible.height) / 2;
            break;
        case BOTTOM :
            visible.y = bounds.height - visible.height + OFFSET;
            break;
    }
    switch (horizontal) {
        case LEFT :
            visible.x = 0;
            break;
        case HCENTER :
            visible.x = (bounds.width - visible.width) / 2;
            break;
        case RIGHT :
            visible.x = bounds.width - visible.width + OFFSET;
            break;
    }
    c.scrollRectToVisible (visible);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25448145_25449373_1_51
25448145_25449565_1_13
Title: Frequency of words in List of Strings of Strings 
----------------------------------------

public static void main (final String [] args) throws InterruptedException {
    final ExecutorService service = Executors.newFixedThreadPool (10);
    final List < String > terms = Arrays.asList ("Coding is great", "Search Engines are great", "Google is a nice search engine");
    final List < Callable < String [] > > callables = new ArrayList < > (terms.size ());
    for (final String term : terms) {
        callables.add (new Callable < String [] > () {
            @Override
            public String [] call () throws Exception {
                System.out.println ("splitting word: " + term);
                return term.split (" ");
            }}

        );
    }
    final ConcurrentMap < String, AtomicInteger > counter = new ConcurrentHashMap < > ();
    final List < Callable < Void > > callables2 = new ArrayList < > (terms.size ());
    for (final Future < String [] > future : service.invokeAll (callables)) {
        callables2.add (new Callable < Void > () {
            @Override
            public Void call () throws Exception {
                System.out.println ("counting word");
                for (String word : future.get ()) {
                    String lc = word.toLowerCase ();
                    AtomicInteger actual = counter.get (lc);
                    if (null == actual) {
                        final AtomicInteger nv = new AtomicInteger ();
                        actual = counter.putIfAbsent (lc, nv);
                        if (null == actual) {
                            actual = nv;
                        }
                    }
                    actual.incrementAndGet ();
                }
                return null;
            }}

        );
    }
    service.invokeAll (callables2);
    service.shutdown ();
    System.out.println (counter);
}
----------------------------------------

public static void main (String [] args) {
    String msg = "Coding is great search Engines are great Google is a nice search engine";
    ArrayList < String > list2 = new ArrayList < > ();
    Map map = new HashMap ();
    list2.addAll ((List) Arrays.asList (msg.split (" ")));
    String n [] = msg.split (" ");
    int f = 0;
    for (int i = 0;
    i < n.length; i ++) {
        f = Collections.frequency (list2, n [i]);
        map.put (n [i], f);
    }
    System.out.println ("values are " + map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25449687_25449799_1_26
25449687_25449885_5_25
Title: How do I make the generated numbers show at once? 
----------------------------------------

public static void main (String [] args) {
    int size = 10;
    int range = 50;
    ArrayList < Integer > list = new ArrayList < Integer > (size);
    Random rand = new Random ();
    for (int i = 1;
    i <= size; i ++) {
        list.add (rand.nextInt (range));
    }
    String buffer = "";
    while (list.size () > 0) {
        int index = 0;
        if (list.size () != 1) buffer += list.remove (index) + ",";
        else if (list.size () == 1) buffer += list.remove (index) + ",";

        index ++;
    }
    JOptionPane.showMessageDialog (null, "Selected: " + buffer);
}
----------------------------------------

public static void main (String [] args) {
    int size = 50;
    ArrayList < Integer > list = new ArrayList < Integer > (size);
    for (int i = 1;
    i <= size; i ++) {
        list.add (i);
    }
    Random rand = new Random ();
    StringBuilder sb = new StringBuilder ();
    while (list.size () > 0) {
        int index = rand.nextInt (list.size ());
        sb.append (list.remove (index) + ",");
        sb.deleteCharAt (sb.length () - 1);
    }
    JOptionPane.showMessageDialog (null, "Selected: " + sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25465654_25465884_1_18
25465654_25466378_2_19
Title: Creating mouse listener for every JLabel newly created 
----------------------------------------

public void mouseClicked () {
    final Data data = NewPerson.createPerson (frame);
    if (data != null) {
        if (data.CBvalue.equals ("mother")) {
            ListenerLabel label = new ListenerLabel (data.names);
            label.setIcon (new ImageIcon (data.fileID));
            int xPosition = this.getX () + 20;
            int yPosition = this.getY () - 20;
            JPanel enclosingPanel = (JPanel) this.getParent ();
            enclosingPanel.add (label, "cell " + cooX + " " + cooY);
            enclosingPanel.revalidate ();
        }
    }
}
----------------------------------------

public void mouseClicked (MouseEvent evt) {
    final Data data = NewPerson.createPerson (frame);
    if (data != null) {
        String Val = data.CBvalue;
        if ("mother".equals (Val)) {
            JLabel lblHomer = createPersonalLabel (data, this);
            cooX = cooX + 20;
            cooY = cooY - 20;
            panel_1.add (lblHomer, "cell " + cooX + " " + cooY);
            panel_1.revalidate ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25468811_25468853_1_12
25468811_25468995_1_14
Title: How to add elemts to arraylist 
----------------------------------------

public ArrayList < TestVO > getArrayList2 () {
    TestVO t = new TestVO ();
    t.setName ("jagadeesh");
    t.setPhnNo ("123456789");
    list.add (t);
    t = new TestVO ();
    t.setName ("Prasana");
    t.setPhnNo ("987456321");
    list.add (t);
    return list;
}
----------------------------------------

public ArrayList < TestVO > getArrayList2 () {
    TestVO test5 = new TestVO ();
    test5.setName ("jagadeesh");
    test5.setPhnNo ("123456789");
    list.add (test5);
    test5 = new TestVO ();
    test5.setName ("Prasana");
    test5.setPhnNo ("987456321");
    list.add (test5);
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25470126_25470257_35_45
25470126_25470257_8_21
Title: Multiple Threading in java 
----------------------------------------

public void run () {
    System.out.println ("Thread " + id + " has started.");
    try {
        Thread.sleep (5000);
    } catch (final InterruptedException e) {
    }
    System.out.println ("Thread " + id + " has stopped.");
    semaphore.release (1);
}
----------------------------------------

private void run () {
    Semaphore semaphore = new Semaphore (5, true);
    for (int i = 0;
    i < 6; i ++) {
        try {
            semaphore.acquire (1);
            new TestThread (i, semaphore).start ();
        } catch (final InterruptedException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25470402_25470447_19_27
25470402_25470447_7_15
Title: java deadlock in multithreading 
----------------------------------------

public void run () {
    while (true) {
        synchronized (str2) {
            synchronized (str1) {
                System.out.println (str2 + str1);
            }
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (str1) {
            synchronized (str2) {
                System.out.println (str1 + str2);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25476826_25477051_17_28
25476826_25477051_3_10
Title: Generic Number Tweening (Help me do one strange trick..) 
----------------------------------------

public static double [] get1DimSteps (double start, double end, int steps) {
    double distance;
    double stepSize;
    double [] result = new double [steps];
    distance = end - start;
    stepSize = distance / steps;
    for (int i = 0;
    i < steps; i ++) {
        result [i] = start + stepSize * i;
    }
    return result;
}
----------------------------------------

public static int [] get1DimSteps (int start, int end, int steps) {
    double [] preciseResult = get1DimSteps ((double) start, (double) end, steps);
    int [] result = new int [steps];
    for (int i = 0;
    i < steps; i ++) {
        result [i] = (int) (preciseResult [i] + 0.5D);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25477794_25477873_3_28
25477794_25477928_47_64
Title: Sorting arraylist to relative it's another arraylist in Java 
----------------------------------------

public static void main (String [] args) {
    String [] arrList1 = {"apple", "strawberry", "banana", "watermelon"};
    Integer [] arrList2 = {60, 90, 77, 160};
    String [] arrList3 = {"strawberry", "watermelon", "apple", "banana"};
    Integer [] arrList4 = {45, 40, 10, 11};
    HashMap < String, Integer > result = new HashMap < > ();
    for (int i = 0;
    i < arrList1.length; i ++) {
        for (int j = 0;
        j < arrList3.length; j ++) {
            if (arrList1 [i].contains (arrList3 [j])) {
                result.put (arrList1 [i], arrList2 [i] + arrList4 [j]);
            }
        }
    }
    LinkedHashMap sorted = sortHashMap (result);
    Set < String > keys = sorted.keySet ();
    for (String k : keys) {
        System.out.println (k + " -- " + sorted.get (k));
    }
    System.out.println ("End");
}
----------------------------------------

public static void main (String [] args) {
    String [] arrList1 = {"apple", "strawberry", "banana", "watermelon"};
    int [] arrList2 = {60, 90, 77, 160};
    String [] arrList3 = {"strawberry", "watermelon", "apple", "banana"};
    int [] arrList4 = {45, 40, 10, 11};
    Map < String, Integer > map = new TreeMap < > ();
    for (int i = 0;
    i < arrList1.length; i ++) {
        map.put (arrList1 [i], arrList2 [i]);
    }
    List < Fruit > al = new ArrayList < > ();
    for (int i = 0;
    i < arrList3.length; i ++) {
        String key = arrList3 [i];
        int val = map.get (key) / arrList4 [i];
        al.add (new Fruit (key, val));
    }
    Collections.sort (al);
    System.out.println (al);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25478509_25478542_1_47
25478509_25485118_5_24
Title: Taking scanner input and outputting min and max 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int number = 0;
    double total = 0;
    int minimum = 0;
    int maximum = 0;
    System.out.println ("Please enter the first integer: ");
    number = scan.nextInt ();
    if (number > 1 && number < 99) {
        minimum = number;
        total += number;
    }
    for (int i = 2;
    i < 11; i ++) {
        if (number < 1 || number > 99) {
            System.out.println ("Please enter a valid number: ");
            number = scan.nextInt ();
            i --;
        } else {
            System.out.println ("Please enter integer " + i + ":");
            number = scan.nextInt ();
            total += number;
            if (number > 1 && number < 99) {
                if (number < minimum) minimum = number;

                if (number > maximum) maximum = number;

            }
        }
    }
    DecimalFormat oneDecimalPlace = new DecimalFormat ("##.#");
    System.out.println ("The minimum is: " + minimum);
    System.out.println ("The maximum is: " + maximum);
    System.out.println ("The average is: " + oneDecimalPlace.format ((total) / 10.0));
}
----------------------------------------

public static void main (String x []) {
    Scanner scn = new Scanner (System.in);
    int Total = 0, Max = 0, Min = Integer.MAX_VALUE;
    for (int i = 0;
    i < 10;) {
        System.out.print ("Enter Number :");
        int NumberOne = Integer.parseInt (scn.nextLine ());
        if (NumberOne > 0 && NumberOne < 100) {
            Total += NumberOne;
            Max = (Max > NumberOne) ? Max : NumberOne;
            Min = (Min < NumberOne) ? Min : NumberOne;
            i ++;
        } else {
            System.out.print ("Number Invalid");
        }
    }
    DecimalFormat oneDecimalPlace = new DecimalFormat ("##.#");
    System.out.println ("The minimum is: " + Min);
    System.out.println ("The maximum is: " + Max);
    System.out.println ("The average is: " + oneDecimalPlace.format ((Total) / 10.0));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2548384_27224218_22_31
2548384_46752498_6_23
Title: Java - Get a list of all Classes loaded in the JVM 
----------------------------------------

public static void main (String args []) throws Exception {
    ClassLoader myCL = Thread.currentThread ().getContextClassLoader ();
    while (myCL != null) {
        System.out.println ("ClassLoader: " + myCL);
        for (Iterator iter = list (myCL);
        iter.hasNext ();) {
            System.out.println ("\t" + iter.next ());
        }
        myCL = myCL.getParent ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Field f;
    try {
        f = ClassLoader.class.getDeclaredField ("classes");
        f.setAccessible (true);
        ClassLoader classLoader = Thread.currentThread ().getContextClassLoader ();
        Vector < Class > classes = (Vector < Class >) f.get (classLoader);
        for (Class cls : classes) {
            java.net.URL location = cls.getResource ('/' + cls.getName ().replace ('.', '/') + ".class");
            System.out.println ("<p>" + location + "<p/>");
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25484616_25486075_1_27
25484616_45762228_1_18
Title: Efficient BigInteger multiplication modulo n in Java 
----------------------------------------

public static BigInteger multiply (BigInteger a, BigInteger b, int mod) {
    if (a.signum () == - 1) {
        return multiply (a.negate (), b, mod).negate ();
    }
    if (b.signum () == - 1) {
        return multiply (a, b.negate (), mod).negate ();
    }
    int n = (Integer.bitCount (mod - 1) + 7) / 8;
    byte [] aa = a.toByteArray ();
    int na = Math.min (n, aa.length);
    byte [] bb = b.toByteArray ();
    int nb = Math.min (n, bb.length);
    byte [] prod = new byte [n];
    for (int ia = 0;
    ia < na; ++ ia) {
        int m = ia + nb >= n ? n - ia - 1 : nb;
        for (int ib = 0;
        ib < m; ++ ib) {
            int p = (0xFF & aa [aa.length - 1 - ia]) * (0xFF & bb [bb.length - 1 - ib]);
            addByte (prod, ia + ib, p & 0xFF);
            if (ia + ib + 1 < n) {
                addByte (prod, ia + ib + 1, (p>> 8) & 0xFF);
            }
        }
    }
    return new BigInteger (prod).mod (BigInteger.valueOf (mod));
}
----------------------------------------

static BigInteger multiply (BigInteger c, BigInteger x) {
    BigInteger sum = BigInteger.ZERO;
    BigInteger addOperand;
    for (int i = 0;
    i < FIELD_ELEMENT_BIT_SIZE; i ++) {
        if (c.testBit (i)) addOperand = x;
        else addOperand = BigInteger.ZERO;

        sum = add (sum, addOperand);
        x = x.shiftRight (1);
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25497854_25498131_4_18
25497854_25512567_6_21
Title: Custom LinkedList in Java with a maintained order of insertion 
----------------------------------------

public void add (String data) {
    Node newNode = new Node (data);
    if (HEAD == null) {
        HEAD = newNode;
        return;
    }
    Node temp = HEAD;
    while (temp.next != null) {
        temp = temp.next;
    }
    temp.next = newNode;
}
----------------------------------------

public void add (String data) {
    Node newNode = new Node (data);
    if (head == null) {
        head = newNode;
        prev = newNode;
        last = newNode;
        return;
    } else if (head == last) {
        prev.next = newNode;
        last = newNode;
        return;
    }

    prev = prev.next;
    prev.next = newNode;
    last = newNode;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25499253_25544305_64_75
25499253_25544305_94_113
Title: Upload image from android sd card to php server 
----------------------------------------

public void onClick (View v) {
    System.out.println ("path value..." + ppath);
    dialog = ProgressDialog.show (MainActivity.this, "", "Uploading file...", true);
    new Thread (new Runnable () {
        public void run () {
            int y = uploadFile (ppath);
        }}

    ).start ();
}
----------------------------------------

public void onClick (DialogInterface dialog, int item) {
    if (options [item].equals ("Take Photo")) {
        Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
        File f = new File (android.os.Environment.getExternalStorageDirectory (), "temp.jpg");
        intent.putExtra (MediaStore.EXTRA_OUTPUT, Uri.fromFile (f));
        startActivityForResult (intent, 1);
    } else if (options [item].equals ("Choose from Gallery")) {
        System.out.println ("before call ...");
        Intent intent = new Intent (Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult (intent, 2);
    } else if (options [item].equals ("Cancel")) {
        dialog.dismiss ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25533478_25533922_81_96
25533478_25534235_58_73
Title: Excluding indexes from a HashMap 
----------------------------------------

private static void populateHash (HashMap < Integer, Integer > hash) {
    hash.put (1, 1);
    hash.put (2, 3);
    hash.put (3, 1);
    hash.put (4, 1);
    hash.put (5, 10);
    hash.put (6, 10);
    hash.put (7, 10);
}
----------------------------------------

private static void populateHash (final HashMap < Integer, Integer > hash) {
    hash.put (1, 1);
    hash.put (2, 3);
    hash.put (3, 1);
    hash.put (4, 1);
    hash.put (5, 10);
    hash.put (6, 10);
    hash.put (7, 10);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25533478_25533922_9_64
25533478_25534235_3_43
Title: Excluding indexes from a HashMap 
----------------------------------------

public static void main (String [] args) {
    int compHand = 10;
    populateHash (Main.h1);
    int iter = - 1;
    int [] indexArray = new int [(Main.h1.size ())];
    Set < Integer > bannedIndex = new HashSet < Integer > ();
    for (int i = 1;
    i <= Main.h1.size (); i ++) {
        if (! isBannedIndex (bannedIndex, i)) {
            if (i == Main.h1.size ()) {
                if (compHand == Main.h1.get (i)) {
                    indexArray [++ iter] = i;
                    banIndex (bannedIndex, i);
                }
            } else {
                if (compHand == Main.h1.get (i)) {
                    indexArray [++ iter] = i;
                    banIndex (bannedIndex, i);
                } else {
                    for (int j = i + 1;
                    j <= Main.h1.size (); j ++) {
                        if (! isBannedIndex (bannedIndex, j)) {
                            if ((compHand == (Main.h1.get (i) + Main.h1.get (j))) || (compHand == Main.h1.get (j))) {
                                if (compHand == (Main.h1.get (i) + Main.h1.get (j))) {
                                    indexArray [++ iter] = i;
                                    indexArray [++ iter] = j;
                                    banIndex (bannedIndex, i);
                                    banIndex (bannedIndex, j);
                                    break;
                                } else {
                                    if (compHand == Main.h1.get (j)) {
                                        indexArray [++ iter] = j;
                                        banIndex (bannedIndex, j);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (iter > - 1) {
        System.out.println ("iter > -1");
        for (int i = 0;
        i < indexArray.length; i ++) {
            System.out.println (indexArray [i]);
        }
    }
}
----------------------------------------

public static void main (final String [] args) {
    HashMap < Integer, Integer > testHashes = new HashMap < Integer, Integer > ();
    int compHand = 10;
    populateHash (testHashes);
    int iter = - 1;
    int [] indexArray = new int [(testHashes.size ())];
    HashMap < Integer, Integer > bannedValues = new HashMap < Integer, Integer > ();
    for (int i = 1;
    i <= testHashes.size (); i ++) {
        if (! isBannedIndex (bannedValues, i)) {
            if (compHand == testHashes.get (i)) {
                indexArray [++ iter] = i;
                banIndex (bannedValues, i);
            } else {
                for (int j = i + 1;
                j <= testHashes.size (); j ++) {
                    if (! isBannedIndex (bannedValues, j)) {
                        if (compHand == testHashes.get (i) + testHashes.get (j)) {
                            indexArray [++ iter] = i;
                            indexArray [++ iter] = j;
                            banIndex (bannedValues, i);
                            banIndex (bannedValues, j);
                            break;
                        } else {
                            if (compHand == testHashes.get (j)) {
                                indexArray [++ iter] = j;
                                banIndex (bannedValues, j);
                            }
                        }
                    }
                }
            }
        }
    }
    if (iter > - 1) {
        System.out.println ("iter > -1");
        for (int i = 0;
        i < indexArray.length; i ++) {
            System.out.println (indexArray [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_1_36
25535289_25537289_38_73
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public static void main (String...args) {
    final AtomicBoolean shouldBeRunning = new AtomicBoolean (true);
    final AtomicBoolean isRunning = new AtomicBoolean (false);
    Runtime.getRuntime ().addShutdownHook (new Thread () {
        public void run () {
            shouldBeRunning.set (false);
            System.out.println ("shutdown hook activated");
            while (isRunning.get ()) {
                try {
                    System.out.println ("waiting on safe shutdown to complete");
                    Thread.sleep (250);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }}

    );
    new Thread (new Runnable () {
        public void run () {
            isRunning.set (true);
            while (shouldBeRunning.get ()) {
                try {
                    System.out.println ("sleeping for 1 seconds!");
                    Thread.sleep (1000);
                } catch (InterruptedException e) {
                    System.out.println ("INTERRUPTED");
                    break;
                }
            }
            System.out.println ("SAFELY SHUTTING DOWN");
            isRunning.set (false);
        }}

    ).start ();
}
----------------------------------------

public static void main (String...args) throws InterruptedException {
    final AtomicBoolean shouldBeRunning = new AtomicBoolean (true);
    final AtomicBoolean isRunning = new AtomicBoolean (false);
    Runtime.getRuntime ().addShutdownHook (new Thread () {
        public void run () {
            shouldBeRunning.set (false);
            System.out.println ("shutdown hook activated");
            while (isRunning.get ()) {
                try {
                    System.out.println ("waiting on safe shutdown to complete");
                    Thread.sleep (250);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }}

    );
    new Thread (new Runnable () {
        public void run () {
            isRunning.set (true);
            while (shouldBeRunning.get ()) {
                try {
                    System.out.println ("sleeping for 1 second!");
                    Thread.sleep (1000);
                } catch (InterruptedException e) {
                    System.out.println ("INTERRUPTED");
                    break;
                }
            }
            System.out.println ("SAFELY SHUTTING DOWN");
            isRunning.set (false);
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_21_34
25535289_25537289_44_55
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 seconds!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_21_34
25535289_25537289_58_71
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 seconds!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 second!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_21_34
25535289_25537289_7_18
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 seconds!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_44_55
25535289_25537289_58_71
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 second!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_44_55
25535289_25537289_7_18
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25535289_25537289_58_71
25535289_25537289_7_18
Title: java thread stopped during OS initiated shutdown (contradicts JAVA docs!) 
----------------------------------------

public void run () {
    isRunning.set (true);
    while (shouldBeRunning.get ()) {
        try {
            System.out.println ("sleeping for 1 second!");
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("INTERRUPTED");
            break;
        }
    }
    System.out.println ("SAFELY SHUTTING DOWN");
    isRunning.set (false);
}
----------------------------------------

public void run () {
    shouldBeRunning.set (false);
    System.out.println ("shutdown hook activated");
    while (isRunning.get ()) {
        try {
            System.out.println ("waiting on safe shutdown to complete");
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25540723_25540774_3_25
25540723_25541775_1_14
Title: "Place holders of space for variable width of fonts in String java" 
----------------------------------------

public static void main (String [] args) {
    System.out.println (String.format ("%s %s:", padLeft ("XXXX", 4), padLeft ("??", 2)));
    System.out.println (String.format ("%s %s:", padRight ("XXXX", 4), padRight ("??", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("XXXX", 4), padRight ("??", 2)));
    System.out.println (String.format ("%s %s:", padRight ("XXXX", 4), padLeft ("??", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("YY", 4), padLeft ("??", 2)));
    System.out.println (String.format ("%s %s:", padRight ("YY", 4), padRight ("??", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("YY", 4), padRight ("??", 2)));
    System.out.println (String.format ("%s %s:", padRight ("YY", 4), padLeft ("??", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("XXXX", 4), padLeft ("?", 2)));
    System.out.println (String.format ("%s %s:", padRight ("XXXX", 4), padRight ("?", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("XXXX", 4), padRight ("?", 2)));
    System.out.println (String.format ("%s %s:", padRight ("XXXX", 4), padLeft ("?", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("YY", 4), padLeft ("?", 2)));
    System.out.println (String.format ("%s %s:", padRight ("YY", 4), padRight ("?", 2)));
    System.out.println (String.format ("%s %s:", padLeft ("YY", 4), padRight ("?", 2)));
    System.out.println (String.format ("%s %s:", padRight ("YY", 4), padLeft ("?", 2)));
}
----------------------------------------

public static void main (String [] args) {
    String english1 = "xxxx";
    String english2 = "yy";
    String chinese1 = "卧底的";
    String chinese2 = "人";
    int n = english1.length () > english2.length () ? english1.length () : english2.length ();
    int m = chinese1.length () > chinese2.length () ? chinese1.length () : chinese2.length ();
    System.out.println (padRight (english1, n) + "end");
    System.out.println (padRight (english2, n) + "end");
    System.out.println (padRight (chinese1, m) + "end");
    System.out.println (padRight (chinese2, m) + "end");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25541100_36005481_3_19
25541100_47633950_3_17
Title: Array Sum & Average in Java 
----------------------------------------

public static void main (String [] args) {
    double total;
    double average;
    int i;
    int [] list;
    list = new int [4];
    list [0] = 1;
    list [1] = 2;
    list [2] = 3;
    list [3] = 4;
    total = 0;
    for (i = 0; i < list.length; i ++) {
        total = total + list [i];
    }
    average = total / list.length;
    System.out.println ("The total average is " + average);
}
----------------------------------------

public static void main (String [] args) {
    int num [] = new int [] {30, 12, 14, 24, 19, 89, 128};
    int total = 0;
    for (int a = 0;
    a < num.length; a ++) {
        total = total + num [a];
    }
    double average = total / num.length;
    System.out.println ("The total is : " + total);
    System.out.println ("Java average of array : " + average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25546934_25551689_14_53
25546934_25551689_20_51
Title: Retrofit/Rxjava and session-based services 
----------------------------------------

public Observable < ? > call (Observable < ? extends Throwable > attempts) {
    return attempts.flatMap (new Func1 < Throwable, Observable < ? > > () {
        public int retryCount = 0;
        @Override
        public Observable < ? > call (final Throwable throwable) {
            retryCount ++;
            if (retryCount <= 1 && throwable instanceof RetrofitError) {
                final RetrofitError retrofitError = (RetrofitError) throwable;
                if (! retrofitError.isNetworkError () && retrofitError.getResponse ().getStatus () == HttpStatus.SC_UNAUTHORIZED) {
                    return sessionSerivce.observeSessionCookie ().doOnNext (new Action1 < String > () {
                        @Override
                        public void call (String sessionCookie) {
                            cookieHeaderProvider.setSesstionCookie (sessionCookie);
                        }}

                    ).doOnError (new Action1 < Throwable > () {
                        @Override
                        public void call (Throwable throwable) {
                            cookieHeaderProvider.setSesstionCookie ("");
                        }}

                    );
                }
            }
            return Observable.error (throwable);
        }}

    );
}
----------------------------------------

public Observable < ? > call (final Throwable throwable) {
    retryCount ++;
    if (retryCount <= 1 && throwable instanceof RetrofitError) {
        final RetrofitError retrofitError = (RetrofitError) throwable;
        if (! retrofitError.isNetworkError () && retrofitError.getResponse ().getStatus () == HttpStatus.SC_UNAUTHORIZED) {
            return sessionSerivce.observeSessionCookie ().doOnNext (new Action1 < String > () {
                @Override
                public void call (String sessionCookie) {
                    cookieHeaderProvider.setSesstionCookie (sessionCookie);
                }}

            ).doOnError (new Action1 < Throwable > () {
                @Override
                public void call (Throwable throwable) {
                    cookieHeaderProvider.setSesstionCookie ("");
                }}

            );
        }
    }
    return Observable.error (throwable);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25553250_25556274_1_16
25553250_25565468_27_56
Title: Why my JTextArea is not displaying properly from the while loop? 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    try (Scanner s = new Scanner (new File (userInput.getText ()))) {
        while (s.hasNextLine ()) {
            String as = s.nextLine ();
            textArea.append (as + "\n");
            textArea.setLineWrap (true);
        }
    } catch (FileNotFoundException e) {
        JOptionPane.showMessageDialog (this, "File not found", "No File Error", JOptionPane.ERROR_MESSAGE);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent f) {
    try {
        s = new Scanner (new File (userInput.getText ()));
        while (s.hasNext ()) {
            String as = s.next ();
            textArea.setText (as);
        }
    } catch (FileNotFoundException e) {
        af = new File (userInput.getText ());
        paths = af.list ();
        System.out.println (Arrays.toString (paths));
        String tempPath = "";
        for (String path : paths) {
            tempPath += path + "\n";
        }
        textArea.setText (tempPath);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25560958_25560977_1_17
25560958_25561010_6_22
Title: Return the amount of numbers below average 
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    int count = 0;
    for (int i = 0;
    i < ba.length; i ++) {
        sum = sum + ba [i];
    }
    average = sum / ba.length;
    for (int i = 0;
    i < ba.length; i ++) {
        if (ba [i] < average) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    int length = ba.length;
    for (int i = 0;
    i < length; i ++) {
        sum += ba [i];
    }
    double average = sum / length;
    int belowAvgCount = 0;
    for (int i = 0;
    i < length; i ++) {
        if (ba [i] < average) {
            belowAvgCount ++;
        }
    }
    return belowAvgCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25560958_25560977_1_17
25560958_25561019_1_15
Title: Return the amount of numbers below average 
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    int count = 0;
    for (int i = 0;
    i < ba.length; i ++) {
        sum = sum + ba [i];
    }
    average = sum / ba.length;
    for (int i = 0;
    i < ba.length; i ++) {
        if (ba [i] < average) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    for (double b : ba) {
        sum += b;
    }
    average = sum / ba.length;
    int count = 0;
    for (double b : ba) {
        if (b < average) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25560958_25561000_1_17
25560958_25561010_6_22
Title: Return the amount of numbers below average 
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    int count = 0;
    for (int i = 0;
    i < ba.length; i ++) {
        sum = sum + ba [i];
    }
    average = sum / ba.length;
    for (int i = 0;
    i < ba.length; i ++) {
        if (ba [i] < average) count ++;

    }
    return count;
}
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    int length = ba.length;
    for (int i = 0;
    i < length; i ++) {
        sum += ba [i];
    }
    double average = sum / length;
    int belowAvgCount = 0;
    for (int i = 0;
    i < length; i ++) {
        if (ba [i] < average) {
            belowAvgCount ++;
        }
    }
    return belowAvgCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25560958_25561000_1_17
25560958_25561019_1_15
Title: Return the amount of numbers below average 
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    int count = 0;
    for (int i = 0;
    i < ba.length; i ++) {
        sum = sum + ba [i];
    }
    average = sum / ba.length;
    for (int i = 0;
    i < ba.length; i ++) {
        if (ba [i] < average) count ++;

    }
    return count;
}
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    for (double b : ba) {
        sum += b;
    }
    average = sum / ba.length;
    int count = 0;
    for (double b : ba) {
        if (b < average) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25560958_25561010_6_22
25560958_25561019_1_15
Title: Return the amount of numbers below average 
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    int length = ba.length;
    for (int i = 0;
    i < length; i ++) {
        sum += ba [i];
    }
    double average = sum / length;
    int belowAvgCount = 0;
    for (int i = 0;
    i < length; i ++) {
        if (ba [i] < average) {
            belowAvgCount ++;
        }
    }
    return belowAvgCount;
}
----------------------------------------

public static int belowaverage (double [] ba) {
    double sum = 0;
    double average = 0;
    for (double b : ba) {
        sum += b;
    }
    average = sum / ba.length;
    int count = 0;
    for (double b : ba) {
        if (b < average) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576540_1_12
25576484_25576574_1_10
Title: Binary Search using Recursion in java 
----------------------------------------

public static int binarySearch (int key, int median) {
    if (median < 0 || median > array.size () - 1) {
        return - 1;
    }
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------

public static boolean binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return true;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576540_1_12
25576484_25576593_1_10
Title: Binary Search using Recursion in java 
----------------------------------------

public static int binarySearch (int key, int median) {
    if (median < 0 || median > array.size () - 1) {
        return - 1;
    }
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------

public static int binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576540_1_12
25576484_41757999_1_14
Title: Binary Search using Recursion in java 
----------------------------------------

public static int binarySearch (int key, int median) {
    if (median < 0 || median > array.size () - 1) {
        return - 1;
    }
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------

public int binarySearch (List < Integer > list, int find) {
    int mid = list.size () / 2;
    int val = list.get (mid);
    if (val == find) {
        return val;
    } else if (list.size () == 1) {
        return - 1;
    }

    return val > find ? binarySearch (list.subList (0, mid), find) : binarySearch (list.subList (mid, list.size ()), find);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576574_1_10
25576484_25576593_1_10
Title: Binary Search using Recursion in java 
----------------------------------------

public static boolean binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return true;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------

public static int binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576574_1_10
25576484_41757999_1_14
Title: Binary Search using Recursion in java 
----------------------------------------

public static boolean binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return true;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

}
----------------------------------------

public int binarySearch (List < Integer > list, int find) {
    int mid = list.size () / 2;
    int val = list.get (mid);
    if (val == find) {
        return val;
    } else if (list.size () == 1) {
        return - 1;
    }

    return val > find ? binarySearch (list.subList (0, mid), find) : binarySearch (list.subList (mid, list.size ()), find);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25576484_25576593_1_10
25576484_41757999_1_14
Title: Binary Search using Recursion in java 
----------------------------------------

public static int binarySearch (int key, int median) {
    if (key == (int) array.get (median)) {
        return key;
    } else if (key < (int) array.get (median)) {
        return binarySearch (key, median - 1);
    } else if (key > (int) array.get (median)) {
        return binarySearch (key, median + 1);
    }

    return - 1;
}
----------------------------------------

public int binarySearch (List < Integer > list, int find) {
    int mid = list.size () / 2;
    int val = list.get (mid);
    if (val == find) {
        return val;
    } else if (list.size () == 1) {
        return - 1;
    }

    return val > find ? binarySearch (list.subList (0, mid), find) : binarySearch (list.subList (mid, list.size ()), find);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25584562_25586927_26_39
25584562_25586927_67_84
Title: How do I Modify JLabels in a Window without ActionListener? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    while (true) {
        try {
            EventQueue.invokeAndWait (new Runnable () {
                @Override
                public void run () {
                    label.setText (Integer.toString (rnd.nextInt ()));
                }}

            );
        } catch (InterruptedException | InvocationTargetException exp) {
            exp.printStackTrace ();
        }
        try {
            Thread.sleep (40);
        } catch (InterruptedException ex) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2559108_2559169_3_20
2559108_2559172_3_18
Title: "Java: I have trycatch and finally in a java code and I want after try or catch block finally does not execute" 
----------------------------------------

public static void main (String arg []) {
    bool exitFinally = false;
    try {
        System.out.println ("execute try");
    } catch (Exception e) {
        System.out.println (e);
    } finally {
        if (exitFinally) return;

        System.out.println ("execute finally");
    }
}
----------------------------------------

public static void main (String arg []) {
    boolean b = true;
    try {
        System.out.println ("execute try");
        if (something ()) b = false;

    } catch (Exception e) {
        System.out.println (e);
    } finally {
        if (b) {
            System.out.println ("execute finally");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2559108_2559169_3_20
2559108_2559173_3_20
Title: "Java: I have trycatch and finally in a java code and I want after try or catch block finally does not execute" 
----------------------------------------

public static void main (String arg []) {
    bool exitFinally = false;
    try {
        System.out.println ("execute try");
    } catch (Exception e) {
        System.out.println (e);
    } finally {
        if (exitFinally) return;

        System.out.println ("execute finally");
    }
}
----------------------------------------

public static void main (String arg []) {
    boolean success = false;
    try {
        System.out.println ("execute try");
        success = true;
    } catch (Exception e) {
        System.out.println (e);
    } finally {
        if (! success) {
            System.out.println ("execute finally");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25592084_47049166_4_52
25592084_52463768_4_28
Title: Converting binary string to a hexadecimal string JAVA 
----------------------------------------

public static void main () {
    Scanner sc = new Scanner (System.in);
    System.out.println ("enter the binary number");
    double s = sc.nextDouble ();
    int c = 0;
    long s1 = 0;
    String z = "";
    while (s > 0) {
        s1 = s1 + (long) (Math.pow (2, c) * (long) (s % 10));
        s = (long) s / 10;
        c ++;
    }
    while (s1 > 0) {
        long j = s1 % 16;
        if (j == 10) {
            z = "A" + z;
        } else if (j == 11) {
            z = "B" + z;
        } else if (j == 12) {
            z = "C" + z;
        } else if (j == 13) {
            z = "D" + z;
        } else if (j == 14) {
            z = "E" + z;
        } else if (j == 15) {
            z = "F" + z;
        } else {
            z = j + z;
        }

        s1 = s1 / 16;
    }
    System.out.println ("The respective Hexadecimal number is : " + z);
}
----------------------------------------

public static void main (String [] args) {
    int index = 0;
    String bin
    String [] hexString = new String [bin.length () / 4];
    for (int i = 0;
    i < bin.length () / 4; i ++) {
        hexString [i] = "";
        for (int j = index;
        j < index + 4; j ++) {
            hexString [i] += bin.charAt (j);
        }
        index += 4;
    }
    for (int i = 0;
    i < bin.length () / 4; i ++) {
        System.out.print (hexString [i] + " ");
    }
    System.out.println ("\n" + bin.length ());
    String [] result = binaryToHex (hexString);
    for (int i = 0;
    i < result.length; i ++) {
        System.out.print ("" + result [i].toUpperCase ());
    }
    System.out.println ("");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25593313_25594420_1_22
25593313_25599308_1_36
Title: using recursive method for trinary search 
----------------------------------------

public static int trinarySearch (int [] array, int x, int low, int high) {
    if (high - low < 3) {
        for (int i = low;
        i < high; i ++) {
            if (array [i] == x) {
                return i;
            }
        }
        return - 1;
    } else {
        int firstThird = low + (high - low) / 3;
        int secondThird = low + 2 * (high - low) / 3;
        if (x < array [firstThird]) {
            return trinarySearch (array, x, low, firstThird);
        } else if (x < array [secondThird]) {
            return trinarySearch (array, x, firstThird, secondThird);
        } else {
            return trinarySearch (array, x, secondThird, high);
        }

    }
}
----------------------------------------

public static int trinarySearch (int [] array, int x, int low, int high) {
    if (high - low < 3) {
        for (int i = low;
        i < high; i ++) {
            if (array [i] == x) {
                return i;
            }
        }
        return - 1;
    } else {
        int firstThird = low + (high - low) / 3;
        int secondThird = low + 2 * (high - low) / 3;
        if (x == array [firstThird]) {
            return firstThird;
        } else if (x < array [firstThird]) {
            return trinarySearch (array, x, low, firstThird - 1);
        }

        if (x == array [secondThird]) {
            return secondThird;
        } else if (x < array [secondThird]) {
            return trinarySearch (array, x, firstThird + 1, secondThird - 1);
        }

        return trinarySearch (array, x, secondThird + 1, high);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25597683_25597765_1_18
25597683_25597774_1_18
Title: Report matching status of all characters in a phrase with all characters in an alphabet 
----------------------------------------

void searchPhrase (String phrase) {
    outer : for (int x = 0;
    x < phrase.length (); x ++) {
        inner : for (int y = 0;
        y < alphabet.length; y ++) {
            if (phrase.charAt (x) == alphabet [y]) {
            } else {
                break outer;
            }
        }
    }
}
----------------------------------------

void searchPhrase (String [] phrase) {
    searchResult = new int [phrase.length];
    int j = 0;
    for (int i = 0;
    i < frase.length; i ++) {
        for (int k = 0;
        k < alphabet.length; k ++) {
            if (! phrase [i].equals (alphabet [k])) {
                System.out.println ("\nLetter " + phrase [i] + " was not found when comparing it to " + alphabet [k]);
                k ++;
            } else {
                System.out.println ("\nLetter " + phrase [i] + " was found when comparing it to " + alphabet [k]);
                searchResult [j] = i;
                k = 0;
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25605594_25606560_25_33
25605594_25606560_37_45
Title: Multiple JSpinners Initialized differently 
----------------------------------------

public JFormattedTextField.AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (1);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    formatter.setMinimum (- 1000.0);
    formatter.setMaximum (1000.00);
    return formatter;
}
----------------------------------------

public JFormattedTextField.AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (1);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    formatter.setMinimum (- 1000.0);
    formatter.setMaximum (1000.00);
    return formatter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25609440_25611026_118_128
25609440_25611026_429_446
Title: JFace TableViewer with ViewerSorter and StyledCellLabelProvider 
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    ((MyViewerSorter) tableViewer.getSorter ()).doSort (columnIndex);
    tableViewer.refresh ();
    for (int i = 0;
    i < tableViewerColumnList.size (); i ++) {
        tableViewerColumnList.get (i).setLabelProvider (new MyStyledCellLabelProvider (i));
    }
    tableViewer.refresh ();
}
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    if (b) {
        tableViewer.setFilters (new ViewerFilter [] {createFilterForViewer ()});
        for (int i = 0;
        i < tableViewerColumnList.size (); i ++) {
            tableViewerColumnList.get (i).setLabelProvider (new MyStyledCellLabelProvider (i));
        }
        tableViewer.refresh ();
        b = false;
    } else {
        tableViewer.setFilters (new ViewerFilter [0]);
        tableViewer.setLabelProvider (new TableLabelProvider ());
        b = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2561947_13470704_55_68
2561947_23221574_48_61
Title: Spring to understand properties in YAML 
----------------------------------------

private static void assignProperties (Properties props, Map < String, Object > map, String path) {
    for (Entry < String, Object > entry : map.entrySet ()) {
        String key = entry.getKey ();
        if (StringUtils.hasLength (path)) key = path + "." + key;

        Object val = entry.getValue ();
        if (val instanceof String) {
            props.put (key, val);
        } else if (val instanceof Map) {
            assignProperties (props, (Map < String, Object >) val, key);
        }

    }
}
----------------------------------------

public void assignProperties (Properties props, Map < String, Object > map, String path) {
    for (Entry < String, Object > entry : map.entrySet ()) {
        String key = entry.getKey ();
        if (! StringUtils.isEmpty (path)) key = path + "." + key;

        Object val = entry.getValue ();
        if (val instanceof String) {
            props.put (key, val);
        } else if (val instanceof Map) {
            assignProperties (props, (Map < String, Object >) val, key);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2561947_13470704_55_68
2561947_4880565_28_41
Title: Spring to understand properties in YAML 
----------------------------------------

private static void assignProperties (Properties props, Map < String, Object > map, String path) {
    for (Entry < String, Object > entry : map.entrySet ()) {
        String key = entry.getKey ();
        if (StringUtils.hasLength (path)) key = path + "." + key;

        Object val = entry.getValue ();
        if (val instanceof String) {
            props.put (key, val);
        } else if (val instanceof Map) {
            assignProperties (props, (Map < String, Object >) val, key);
        }

    }
}
----------------------------------------

public void assignProperties (Properties props, Map < String, Object > map, String path) {
    for (Entry < String, Object > entry : map.entrySet ()) {
        String key = entry.getKey ();
        if (StringUtils.isNotEmpty (path)) key = path + "." + key;

        Object val = entry.getValue ();
        if (val instanceof String) {
            props.put (key, val);
        } else if (val instanceof Map) {
            assignProperties (props, (Map < String, Object >) val, key);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2561947_13470704_70_92
2561947_23221574_89_111
Title: Spring to understand properties in YAML 
----------------------------------------

public static Yaml instanceOfYaml () {
    DumperOptions options = new DumperOptions ();
    options.setDefaultFlowStyle (DumperOptions.FlowStyle.BLOCK);
    options.setDefaultScalarStyle (ScalarStyle.DOUBLE_QUOTED);
    final Yaml yaml = new Yaml (new Loader (), new Dumper (options), new Resolver () {
        @Override
        protected void addImplicitResolvers () {
            addImplicitResolver (Tag.BOOL, BOOL, "yYnNtTfFoO");
            addImplicitResolver (Tag.MERGE, MERGE, "<");
            addImplicitResolver (Tag.NULL, NULL, "~nN\0");
            addImplicitResolver (Tag.NULL, EMPTY, null);
            addImplicitResolver (Tag.TIMESTAMP, TIMESTAMP, "0123456789");
            addImplicitResolver (Tag.VALUE, VALUE, "=");
        }}

    );
    return yaml;
}
----------------------------------------

public static Yaml instanceOfYaml () {
    DumperOptions options = new DumperOptions ();
    options.setDefaultFlowStyle (DumperOptions.FlowStyle.BLOCK);
    options.setDefaultScalarStyle (ScalarStyle.DOUBLE_QUOTED);
    final Yaml yaml = new Yaml (new Loader (), new Dumper (options), new Resolver () {
        @Override
        protected void addImplicitResolvers () {
            addImplicitResolver (Tag.BOOL, BOOL, "yYnNtTfFoO");
            addImplicitResolver (Tag.MERGE, MERGE, "<");
            addImplicitResolver (Tag.NULL, NULL, "~nN\0");
            addImplicitResolver (Tag.NULL, EMPTY, null);
            addImplicitResolver (Tag.TIMESTAMP, TIMESTAMP, "0123456789");
            addImplicitResolver (Tag.VALUE, VALUE, "=");
        }}

    );
    return yaml;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25625669_25626437_2_32
25625669_25626791_9_26
Title: JAVA: How to enter an undefined number of values to a stringarray using a scanner? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > arrayList = new ArrayList < String > ();
    Scanner sc = new Scanner (System.in);
    boolean testContinue = true;
    while (testContinue) {
        System.out.println ("Input a string :");
        String str = sc.next ();
        if (str.equals ("quit")) testContinue = false;
        else {
            arrayList.add (str);
            testContinue = sc.hasNextLine ();
        }
    }
    for (int i = 0;
    i < arrayList.size (); i ++) {
        System.out.println (arrayList.get (i));
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    List < String > names = new ArrayList < String > ();
    System.out.print ("Enter a name: ");
    Scanner in = new Scanner (new BufferedReader (new InputStreamReader (System.in)));
    while (in.hasNext ()) {
        String n = in.next ();
        if (n.isEmpty ()) {
            break;
        }
        names.add (n);
    }
    for (String name : names) {
        System.out.println ("Name: " + name);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25631731_25632358_157_169
25631731_25632358_97_117
Title: Java Mouse Events not registering on OSX 
----------------------------------------

public static DisplayFrame getInstance () {
    if (display == null) {
        display = new DisplayFrame ();
    }
    Dimension size = new Dimension (200, 200);
    display.setPreferredSize (size);
    display.setMinimumSize (size);
    display.setMaximumSize (size);
    return display;
}
----------------------------------------

public static MainFrame getInstance () {
    if (mainFrame == null) {
        mainFrame = new MainFrame ();
        mainFrame.setLayout (new GridBagLayout ());
        JPanel blocker = new JPanel ();
        blocker.setBackground (Color.RED);
        blocker.setPreferredSize (new Dimension (200, 200));
        MouseAdapter ma = new MouseAdapter () {
        }

        ;
        blocker.addMouseListener (ma);
        blocker.addMouseMotionListener (ma);
        mainFrame.add (blocker);
        Dimension size = new Dimension (900, 700);
        mainFrame.setPreferredSize (size);
        mainFrame.setMinimumSize (size);
    }
    return mainFrame;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25636676_25636813_1_15
25636676_25636830_2_16
Title: Sum in ArrayList 
----------------------------------------

public static void main (String [] args) {
    List < Integer > numbers = new ArrayList < Integer > ();
    numbers.add (44);
    numbers.add (55);
    numbers.add (11);
    numbers.add (1);
    int sum = 0;
    for (int i = 0;
    i < numbers.size (); i ++) {
        sum = sum + numbers.get (i);
    }
    System.out.println ("Sum is " + sum);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > numbers = new ArrayList < Integer > ();
    numbers.add (new Integer (44));
    numbers.add (new Integer (55));
    numbers.add (new Integer (11));
    numbers.add (new Integer (1));
    int total = 0;
    for (int i = 0;
    i < numbers.size (); i ++) {
        total += numbers.get (i);
    }
    System.out.println (total);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25637_14297352_1_21
25637_25666_1_17
Title: Shutting down a computer 
----------------------------------------

public static boolean shutdown (int time) throws IOException {
    String shutdownCommand = null, t = time == 0 ? "now" : String.valueOf (time);
    if (SystemUtils.IS_OS_AIX) shutdownCommand = "shutdown -Fh " + t;
    else if (SystemUtils.IS_OS_FREE_BSD || SystemUtils.IS_OS_LINUX || SystemUtils.IS_OS_MAC || SystemUtils.IS_OS_MAC_OSX || SystemUtils.IS_OS_NET_BSD || SystemUtils.IS_OS_OPEN_BSD || SystemUtils.IS_OS_UNIX) shutdownCommand = "shutdown -h " + t;
    else if (SystemUtils.IS_OS_HP_UX) shutdownCommand = "shutdown -hy " + t;
    else if (SystemUtils.IS_OS_IRIX) shutdownCommand = "shutdown -y -g " + t;
    else if (SystemUtils.IS_OS_SOLARIS || SystemUtils.IS_OS_SUN_OS) shutdownCommand = "shutdown -y -i5 -g" + t;
    else if (SystemUtils.IS_OS_WINDOWS_XP || SystemUtils.IS_OS_WINDOWS_VISTA || SystemUtils.IS_OS_WINDOWS_7) shutdownCommand = "shutdown.exe -s -t " + t;
    else return false;

    Runtime.getRuntime ().exec (shutdownCommand);
    return true;
}
----------------------------------------

public static void shutdown () throws RuntimeException, IOException {
    String shutdownCommand;
    String operatingSystem = System.getProperty ("os.name");
    if ("Linux".equals (operatingSystem) || "Mac OS X".equals (operatingSystem)) {
        shutdownCommand = "shutdown -h now";
    } else if ("Windows".equals (operatingSystem)) {
        shutdownCommand = "shutdown.exe -s -t 0";
    } else {
        throw new RuntimeException ("Unsupported operating system.");
    }

    Runtime.getRuntime ().exec (shutdownCommand);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25639486_25639561_20_33
25639486_25639576_21_34
Title: how to see two class result in java 
----------------------------------------

public static void main (String args []) {
    StudentRoom.change ();
    StudentRoom s1 = new StudentRoom (111, "Mohd Javed");
    StudentRoom s2 = new StudentRoom (333, "Bashkar");
    StudentRoom s3 = new StudentRoom (222, "Faham Javed");
    s1.display ();
    s2.display ();
    s3.display ();
    Calculate calculate = new Calculate ();
    int cubeResult = calculate.cube (5);
    System.out.println ("Cubed result" + cubeResult);
}
----------------------------------------

public static void main (String args []) {
    StudentRoom.change ();
    StudentRoom s1 = new StudentRoom (111, "Mohd Javed");
    StudentRoom s2 = new StudentRoom (333, "Bashkar");
    StudentRoom s3 = new StudentRoom (222, "Faham Javed");
    s1.display ();
    s2.display ();
    s3.display ();
    Calculate calculate = new Calculate ();
    int cubeResult = calculate.cube (5);
    System.out.println ("Cubed result" + cubeResult);
}
----------------------------------------
