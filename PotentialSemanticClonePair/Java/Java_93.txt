$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38546894_38547021_1_11
38546894_38547032_1_12
Title: Why can't I print my 2D array? 
----------------------------------------

public void printBoard (int rows, int columns) {
    for (int i = 0;
    i < columns; i ++) {
        System.out.print ("   " + i);
        for (j = 0; j < rows; j ++) {
            System.out.print ("\n" + j);
            System.out.print (" " + board [j] [i] + "|");
            System.out.print (" _ _ _ _ _ _");
        }
    }
}
----------------------------------------

public void printBoard (int size) {
    int col, row;
    for (col = 0; col < size; col ++) {
        System.out.print ("   " + col);
        for (row = 0; row < size; row ++) {
            System.out.print ("\n" + row);
            System.out.print (" " + board [col] [row] + "|");
            System.out.print (" _ _ _ _ _ _");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38551861_38552854_25_48
38551861_38552854_9_23
Title: How to generate a list of arrays (all have the length M) with N possible elements (M > N) in Java? 
----------------------------------------

private static void permute (List < int [] > results, int [] inputs, int column) {
    int inputIndex = 0;
    int input = inputs [inputIndex];
    int incrIndex = 0;
    final int exponent = results.get (0).length - 1 - column;
    final int incrLength = (int) Math.pow (inputs.length, exponent);
    for (int [] result : results) {
        result [column] = input;
        incrIndex = (incrIndex + 1) % incrLength;
        if (incrIndex == 0) {
            inputIndex = (inputIndex + 1) % inputs.length;
            input = inputs [inputIndex];
        }
    }
}
----------------------------------------

private static List < int [] > permute (int [] inputs, int size) {
    List < int [] > results = new ArrayList < int [] > ();
    int count = (int) Math.pow (inputs.length, size);
    for (int row = 0;
    row < count; row ++) {
        results.add (new int [size]);
    }
    for (int column = 0;
    column < size; column ++) {
        permute (results, inputs, column);
    }
    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554154_1_14
38554073_38554256_1_18
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

static void print (int size) {
    if (size == 1) {
        System.out.print ("*");
        System.out.println ();
    }
    if (size > 1) {
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

void print (int _current, int _start) {
    if (_current < - _start) {
        return;
    }
    for (int i = 0;
    i < Math.abs (_current); i ++) {
        System.out.print ("*");
    }
    System.out.println ();
    if (_current > 0) {
        print (_current / 2, _start);
    } else if (_current == 0) {
        print (- 1, _start);
    } else {
        print (_current * 2, _start);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554154_1_14
38554073_38554267_1_15
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

static void print (int size) {
    if (size == 1) {
        System.out.print ("*");
        System.out.println ();
    }
    if (size > 1) {
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

static void print (int size, Stack < String > stack) {
    if (size == 1) {
        System.out.println ("*");
        stack.push ("*");
    } else if (size > 1) {
        StringBuilder sb = new StringBuilder (size);
        for (int i = 0;
        i < size; i ++) {
            sb.append ("*");
        }
        String s = sb.toString ();
        System.out.println (s);
        stack.push (s);
        print (size / 2, stack);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554154_1_14
38554073_38554301_1_19
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

static void print (int size) {
    if (size == 1) {
        System.out.print ("*");
        System.out.println ();
    }
    if (size > 1) {
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

static void print (int size) {
    if (size == 0) {
        System.out.println ();
    } else {
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554256_1_18
38554073_38554267_1_15
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

void print (int _current, int _start) {
    if (_current < - _start) {
        return;
    }
    for (int i = 0;
    i < Math.abs (_current); i ++) {
        System.out.print ("*");
    }
    System.out.println ();
    if (_current > 0) {
        print (_current / 2, _start);
    } else if (_current == 0) {
        print (- 1, _start);
    } else {
        print (_current * 2, _start);
    }

}
----------------------------------------

static void print (int size, Stack < String > stack) {
    if (size == 1) {
        System.out.println ("*");
        stack.push ("*");
    } else if (size > 1) {
        StringBuilder sb = new StringBuilder (size);
        for (int i = 0;
        i < size; i ++) {
            sb.append ("*");
        }
        String s = sb.toString ();
        System.out.println (s);
        stack.push (s);
        print (size / 2, stack);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554256_1_18
38554073_38554301_1_19
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

void print (int _current, int _start) {
    if (_current < - _start) {
        return;
    }
    for (int i = 0;
    i < Math.abs (_current); i ++) {
        System.out.print ("*");
    }
    System.out.println ();
    if (_current > 0) {
        print (_current / 2, _start);
    } else if (_current == 0) {
        print (- 1, _start);
    } else {
        print (_current * 2, _start);
    }

}
----------------------------------------

static void print (int size) {
    if (size == 0) {
        System.out.println ();
    } else {
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38554073_38554267_1_15
38554073_38554301_1_19
Title: how to make reverse the recursion after recursion in Java 
----------------------------------------

static void print (int size, Stack < String > stack) {
    if (size == 1) {
        System.out.println ("*");
        stack.push ("*");
    } else if (size > 1) {
        StringBuilder sb = new StringBuilder (size);
        for (int i = 0;
        i < size; i ++) {
            sb.append ("*");
        }
        String s = sb.toString ();
        System.out.println (s);
        stack.push (s);
        print (size / 2, stack);
    }

}
----------------------------------------

static void print (int size) {
    if (size == 0) {
        System.out.println ();
    } else {
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
        print (size / 2);
        for (int i = 0;
        i < size; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38564265_38564591_3_28
38564265_38564636_4_28
Title: "I have written a java program whose dry-run is showing the proper result but on running the program it shows no output" 
----------------------------------------

public static void main (String args []) {
    Scanner me = new Scanner (System.in);
    System.out.print ("  What's about the lower limit ?   ");
    int l = me.nextInt ();
    System.out.println ();
    System.out.print ("  What's about the upper limit ?   ");
    int h = me.nextInt ();
    System.out.println ();
    int sum;
    for (int i = l;
    i <= h; i ++) {
        sum = 0;
        Integer ii = i * i;
        for (int j = 0;
        j <= Integer.toString (ii).length (); j ++) {
            int a = ii % 10;
            ii = ii / 10;
            sum = sum + a;
        }
        if (sum == i) {
            System.out.println (i + "\t");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner me = new Scanner (System.in);
    System.out.print ("  What's about the lower limit ?   ");
    int l = me.nextInt ();
    System.out.println ();
    System.out.print ("  What's about the upper limit ?   ");
    int h = me.nextInt ();
    System.out.println ();
    for (int i = l;
    i <= h; i ++) {
        int sum = 0;
        int ii = i * i;
        while (ii != 0) {
            int a = ii % 10;
            ii = ii / 10;
            sum += a;
        }
        if (sum == i) {
            System.out.println (i + "\t");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38578937_38601587_48_62
38578937_48709151_49_63
Title: Spring Boot Amazon AWS S3 Bucket File Download - Access Denied 
----------------------------------------

public List < PutObjectResult > upload (MultipartFile [] multipartFiles) {
    List < PutObjectResult > putObjectResults = new ArrayList < > ();
    Arrays.stream (multipartFiles).filter (multipartFile -> ! StringUtils.isEmpty (multipartFile.getOriginalFilename ())).forEach (multipartFile -> {
        try {
            putObjectResults.add (upload (multipartFile.getInputStream (), multipartFile.getOriginalFilename ()));
        } catch (IOException e) {
            e.printStackTrace ();
        }
    });
    return putObjectResults;
}
----------------------------------------

public List < PutObjectResult > upload (MultipartFile [] multipartFiles) {
    List < PutObjectResult > putObjectResults = new ArrayList < > ();
    Arrays.stream (multipartFiles).filter (multipartFile -> ! StringUtils.isEmpty (multipartFile.getOriginalFilename ())).forEach (multipartFile -> {
        try {
            putObjectResults.add (upload (multipartFile.getInputStream (), multipartFile.getOriginalFilename ()));
        } catch (IOException e) {
            e.printStackTrace ();
        }
    });
    return putObjectResults;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38578937_38601587_64_81
38578937_48709151_65_82
Title: Spring Boot Amazon AWS S3 Bucket File Download - Access Denied 
----------------------------------------

public ResponseEntity < byte [] > download (String key) throws IOException {
    GetObjectRequest getObjectRequest = new GetObjectRequest (bucket, key);
    S3Object s3Object = amazonS3Client.getObject (getObjectRequest);
    S3ObjectInputStream objectInputStream = s3Object.getObjectContent ();
    byte [] bytes = IOUtils.toByteArray (objectInputStream);
    String fileName = URLEncoder.encode (key, "UTF-8").replaceAll ("\\+", "%20");
    HttpHeaders httpHeaders = new HttpHeaders ();
    httpHeaders.setContentType (MediaType.APPLICATION_OCTET_STREAM);
    httpHeaders.setContentLength (bytes.length);
    httpHeaders.setContentDispositionFormData ("attachment", fileName);
    return new ResponseEntity < > (bytes, httpHeaders, HttpStatus.OK);
}
----------------------------------------

public ResponseEntity < byte [] > download (String key) throws IOException {
    GetObjectRequest getObjectRequest = new GetObjectRequest (bucket, key);
    S3Object s3Object = amazonS3.getObject (getObjectRequest);
    S3ObjectInputStream objectInputStream = s3Object.getObjectContent ();
    byte [] bytes = IOUtils.toByteArray (objectInputStream);
    String fileName = URLEncoder.encode (key, "UTF-8").replaceAll ("\\+", "%20");
    HttpHeaders httpHeaders = new HttpHeaders ();
    httpHeaders.setContentType (MediaType.APPLICATION_OCTET_STREAM);
    httpHeaders.setContentLength (bytes.length);
    httpHeaders.setContentDispositionFormData ("attachment", fileName);
    return new ResponseEntity < > (bytes, httpHeaders, HttpStatus.OK);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38581212_38581308_14_41
38581212_38583044_57_151
Title: How to add OnItemClickListener on my CustomAdapter 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    View v = convertView;
    if (v == null) {
        LayoutInflater vi;
        vi = LayoutInflater.from (getContext ());
        v = vi.inflate (R.layout.activity_listview, null);
    }
    FeedItem p = getItem (position);
    v.setTag (p);
    v.setOnClickListener (this);
    if (p != null) {
        TextView tt1 = (TextView) v.findViewById (R.id.title_text);
        TextView tt2 = (TextView) v.findViewById (R.id.date_text);
        if (tt1 != null) {
            tt1.setText (p.getTitle ());
        }
        if (tt2 != null) {
            tt2.setText (p.getPubDate ());
        }
    }
    return v;
}
----------------------------------------

public View getView (final int i, View convertView, ViewGroup parent) {
    if (convertView == null) {
        convertView = inflater.inflate (R.layout.adapter_doctor_appointment_list, parent, false);
        holder = new ViewHolder ();
        holder.doctorNameTextView = (TextView) convertView.findViewById (R.id.doctorNameTextView);
        holder.numberTextView = (TextView) convertView.findViewById (R.id.numberTextView);
        holder.datetimeTextView = (TextView) convertView.findViewById (R.id.datetimeTextView);
        holder.enteryTextView = (TextView) convertView.findViewById (R.id.enteryTextView);
        holder.viewDetailTextView = (TextView) convertView.findViewById (R.id.viewDetailTextView);
        holder.videoCallTextView = (TextView) convertView.findViewById (R.id.videoCallTextView);
        holder.phoneCallTextView = (TextView) convertView.findViewById (R.id.phoneCallTextView);
        holder.profile_image = (CircleImageView) convertView.findViewById (R.id.profile_image);
        holder.progress_view = (CircularProgressView) convertView.findViewById (R.id.progress_view);
        holder.onlineStatusImageView = (ImageView) convertView.findViewById (R.id.onlineStatusImageView);
        holder.onlineStatusImageView.setVisibility (View.INVISIBLE);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    if (screen == 1) {
        holder.videoCallTextView.setVisibility (View.GONE);
    }
    try {
        Picasso.with (context).load (doctorAppointmentObjectArrayList.get (i).getPatient_profile_pic ()).into (holder.profile_image, new Callback () {
            @Override
            public void onSuccess () {
                holder.progress_view.setVisibility (View.GONE);
            }@Override
            public void onError () {
                holder.progress_view.setVisibility (View.GONE);
                holder.profile_image.setImageResource (R.mipmap.ic_launcher);
            }}

        );
    } catch (Exception e) {
        holder.profile_image.setImageResource (R.mipmap.ic_launcher);
        holder.progress_view.setVisibility (View.GONE);
        e.printStackTrace ();
    }
    holder.doctorNameTextView.setText (doctorAppointmentObjectArrayList.get (i).getPatient_display_name ());
    holder.numberTextView.setText (doctorAppointmentObjectArrayList.get (i).getPatient_contact_no ());
    if (doctorAppointmentObjectArrayList.get (i).getAppointment_time ().equalsIgnoreCase ("")) {
        holder.numberTextView.setText ("");
    } else {
        SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-mm-dd hh:mm:ss");
        Date testDate = null;
        try {
            testDate = sdf.parse (doctorAppointmentObjectArrayList.get (i).getAppointment_time ());
        } catch (Exception ex) {
            ex.printStackTrace ();
        }
        SimpleDateFormat formatter = new SimpleDateFormat ("dd MMM yyyy hh:mm a");
        String newFormat = formatter.format (testDate);
        holder.numberTextView.setText ("" + newFormat);
    }
    holder.datetimeTextView.setText (doctorAppointmentObjectArrayList.get (i).getAppointment_reason ());
    if (screen == 0) {
        holder.enteryTextView.setText ("Entry Time :" + doctorAppointmentObjectArrayList.get (i).getAppointment_entry_time ());
    } else {
        holder.enteryTextView.setText ("");
    }
    holder.viewDetailTextView.setId (i);
    holder.viewDetailTextView.setOnClickListener (viewDetailSelectedListener);
    holder.videoCallTextView.setId (i);
    holder.videoCallTextView.setOnClickListener (videoCallSelectedListener);
    holder.phoneCallTextView.setId (i);
    holder.phoneCallTextView.setOnClickListener (phoneCallSelectedListener);
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38581945_38582191_1_21
38581945_38600678_1_19
Title: Trying to access a sets of variable from string (JAVA) 
----------------------------------------

public static void play (String s) {
    System.out.print ("Did you win? ( (y)es or (n)o ) ");
    choice = validation.nextLine ();
    if ("1".equals (s)) {
        if ("y".equals (choice)) {
            win1 ++;
        } else if ("n".equals (choice)) {
            loose1 ++;
        }

    }
    if ("2".equals (s)) {
        if ("y".equals (choice)) {
            win2 ++;
        } else if ("n".equals (choice)) {
            loose2 ++;
        }

    }
}
----------------------------------------

public static void play (int niv, int nbGames, int nbPos, int nbNeg) {
    ++ nbGames;
    System.out.print ("Completed? ( (y)yes or (n)o ) ");
    choice = validation.nextLine ();
    if (choice.equals ("y")) {
        ++ nbPos;
    } else if (choice.equals ("n")) ++ nbNeg;

    switch (niv) {
        case 1 :
            nbEasy = nbGames;
            easyPos = nbPos;
            easyNeg = nbNeg;
        case 2 :
            nbInter = nbGames;
            interPos = nbPos;
            interNeg = nbNeg;
        case 3 :
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38583543_39498644_5_34
38583543_43931522_1_12
Title: Cassandra 3.x trigger column values 
----------------------------------------

public Collection < Mutation > augment (Partition partition) {
    String tableName = partition.metadata ().cfName;
    logger.info ("Table: " + tableName);
    JSONObject obj = new JSONObject ();
    obj.put ("message_id", partition.metadata ().getKeyValidator ().getString (partition.partitionKey ().getKey ()));
    try {
        UnfilteredRowIterator it = partition.unfilteredIterator ();
        while (it.hasNext ()) {
            Unfiltered un = it.next ();
            Clustering clt = (Clustering) un.clustering ();
            Iterator < Cell > cells = partition.getRow (clt).cells ().iterator ();
            Iterator < ColumnDefinition > columns = partition.getRow (clt).columns ().iterator ();
            while (columns.hasNext ()) {
                ColumnDefinition columnDef = columns.next ();
                Cell cell = cells.next ();
                String data = new String (cell.value ().array ());
                obj.put (columnDef.toString (), data);
            }
        }
    } catch (Exception e) {
    }
    logger.debug (obj.toString ());
    return Collections.emptyList ();
}
----------------------------------------

@Override
public Collection < Mutation > augment (Partition update) {
    String keyspaceName = update.metadata ().ksName;
    Row dataRow = update.getRow (Clustering.STATIC_CLUSTERING);
    for (Cell cell : dataRow.cells ()) {
        ColumnDefinition cDefinition = cell.column ();
        String colName = cDefinition.name.toString ();
        ByteBuffer value = cell.value ();
    }
    return Collections.EMPTY_LIST;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38585713_38586011_1_22
38585713_38586171_1_20
Title: finding two pairs from integer array out of two elements 
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = Lists.newArrayList (1, 1, 2, 3, 3, 4);
    Map < Integer, Integer > map = Maps.newHashMap ();
    int result = 0;
    for (int i : list) {
        int frequency = (int) MapUtils.getObject (map, i, 0);
        if (frequency < 2) {
            map.put (i, ++ frequency);
        }
    }
    for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            result += entry.getKey () * entry.getValue ();
        }
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = Lists.newArrayList (1, 1, 2, 3, 3);
    Map < Integer, Integer > map = new HashMap < > ();
    int count = 0;
    for (int num : list) if (map.containsKey (num)) map.put (num, map.get (num) + 1);
    else map.put (num, 1);

    for (int num : map.keySet ()) {
        if (map.get (num) > 1) {
            count = count + (num * map.get (num));
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38589250_38589425_30_51
38589250_38589516_27_79
Title: Deadlock of threads java 
----------------------------------------

public void run () {
    synchronized (first) {
        try {
            Thread.sleep (2000);
        } catch (InterruptedException r) {
        }
        synchronized (second) {
            System.out.println (name + " Thread");
            System.out.println ("Next Step in " + name);
        }
    }
}
----------------------------------------

public void run () {
    if (getName ().equals ("First")) {
        synchronized (lock) {
            System.out.println ("First Thread");
            try {
                Thread.sleep (2000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            synchronized (anotherLock) {
                try {
                    Thread.sleep (2000);
                } catch (InterruptedException r) {
                }
                System.out.println ("Next Step in First");
            }
        }
    } else {
        synchronized (anotherLock) {
            System.out.println ("Second Thread");
            try {
                Thread.sleep (2000);
            } catch (InterruptedException e1) {
                e1.printStackTrace ();
            }
            synchronized (lock) {
                try {
                    Thread.sleep (2000);
                } catch (Exception e) {
                }
                System.out.println ("Next Step in Second");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38590128_38590527_7_19
38590128_38829017_43_56
Title: Read range of values in an array with unkown dimension 
----------------------------------------

private Integer readValue (Object testSubject, int [] coordinates, int which) {
    if (testSubject instanceof Object []) {
        Object [] subject = (Object []) testSubject;
        if (coordinates.length > which + 1) {
            return readValue (subject [coordinates [which]], coordinates, which + 1);
        } else {
            return (Integer) subject [coordinates [which]];
        }
    } else {
        return - 1;
    }
}
----------------------------------------

public void readValue (Object obj) {
    startPosition = new int [] {0, 1, 0, 0};
    endPosition = new int [] {1, 1, 1, 2};
    System.out.println ("Start Position:" + Arrays.toString (startPosition) + " End Position:" + Arrays.toString (endPosition));
    int [] currentPosition = new int [] {- 1, - 1, - 1, - 1};
    testRead ((Object []) obj, 0, currentPosition);
    Object [] arrayToReturn = result.toArray (new Object [0]);
    System.out.println ("Result: " + Arrays.toString (arrayToReturn));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38603929_38604201_25_54
38603929_38604265_6_18
Title: Applying WebView on setOnClickListener 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.comment_detail);
    String url = getIntent ().getStringExtra ("url");
    Log.d ("URL ", url);
    webview = (WebView) findViewById (R.id.webview);
    webview.getSettings ().setJavaScriptEnabled (true);
    webview.getSettings ().setBuiltInZoomControls (true);
    webview.getSettings ().setSupportZoom (true);
    webview.loadUrl (url);
    webview.setWebViewClient (new WebViewClient () {
        public void onPageStarted (WebView view, String url) {
        } public void onPageFinished (WebView view, String url) {
            MyApplication.hideTransparentProgressDialog ();
        } public void onReceivedError (WebView view, int errorCode, String description, String failingUrl) {
            Toast.makeText (CommentDetails.this, description, Toast.LENGTH_SHORT).show ();
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    wv1 = (WebView) findViewById (R.id.webView);
    wv1.getSettings ().setLoadsImagesAutomatically (true);
    wv1.getSettings ().setJavaScriptEnabled (true);
    wv1.setScrollBarStyle (View.SCROLLBARS_INSIDE_OVERLAY);
    wv1.loadUrl (your_url);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38607050_38607345_1_26
38607050_38607424_1_29
Title: logical error while deleting node from linked list 
----------------------------------------

public static Node deleteNode (Node head, int value) {
    if (head == null) {
        return null;
    } else {
        if (head.next == null) {
            if (head.value == value) {
                head = null;
            }
        } else {
            Node t1 = head;
            Node t2 = head.next;
            while (t2.next != null) {
                if (t2.value == value) {
                    t1 = t2.next;
                    t2.next = null;
                    return t2;
                }
                t2 = t2.next;
                t1 = t1.next;
            }
            return null;
        }
    }
    return null;
}
----------------------------------------

public static Node deleteNode (Node head, int value) {
    if (head == null) {
        return null;
    }
    while (head.value == value) {
        head = head.next;
        if (head == null) return null;

    }
    Node t1 = head;
    Node t2 = t1.next;
    while (t2 != null) {
        if (t2.value == value) {
            t1.next = t2.next;
            t2 = t2.next;
        } else {
            t1 = t2;
            t2 = t2.next;
        }
    }
    return head;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38609913_38614900_37_56
38609913_38617782_27_54
Title: Jetty Embedded - PUT Verb - Process headers before the body arrives 
----------------------------------------

protected void doPut (HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    timedLog ("doPut() - enter");
    if (req.getHeader ("X-Key") == null) {
        resp.setHeader ("Connection", "close");
        resp.sendError (HttpServletResponse.SC_FORBIDDEN);
        timedLog ("doPut() - rejected");
        return;
    }
    File output = File.createTempFile ("reject-", ".dat");
    try (FileOutputStream out = new FileOutputStream (output)) {
        IO.copy (req.getInputStream (), out);
    }
    resp.setStatus (HttpServletResponse.SC_OK);
    resp.setHeader ("Connection", "close");
    timedLog ("doPut() - exit");
}
----------------------------------------

protected void doPut (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println (System.currentTimeMillis () + ": Hello from HelloServlet PUT");
    if (request.getHeader ("X-Key") == null) {
        response.setHeader ("Connection", "close");
        response.sendError (HttpServletResponse.SC_FORBIDDEN);
        System.out.println (System.currentTimeMillis () + ": Filter --> X-Key failed!");
        return;
    }
    System.out.println (System.currentTimeMillis () + ": Proceded!!");
    InputStream body = request.getInputStream ();
    long bytesReadSoFar = 0;
    byte [] data = new byte [65536];
    while (true) {
        int bytesRead = body.read (data);
        if (bytesRead < 0) break;

        bytesReadSoFar += bytesRead;
    }
    System.out.println (System.currentTimeMillis () + ": Finished! Read " + bytesReadSoFar + " bytes.");
    response.setHeader ("Connection", "close");
    response.setStatus (HttpServletResponse.SC_OK);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3861989_35090309_3_25
3861989_3862134_1_25
Title: Preferred way of loading resources in Java 
----------------------------------------

public static URL getResource (String resource) {
    final List < ClassLoader > classLoaders = new ArrayList < ClassLoader > ();
    classLoaders.add (Thread.currentThread ().getContextClassLoader ());
    classLoaders.add (ResourceLoader.class.getClassLoader ());
    for (ClassLoader classLoader : classLoaders) {
        final URL url = getResourceWith (classLoader, resource);
        if (url != null) {
            return url;
        }
    }
    final URL systemResource = ClassLoader.getSystemResource (resource);
    if (systemResource != null) {
        return systemResource;
    } else {
        try {
            return new File (resource).toURI ().toURL ();
        } catch (MalformedURLException e) {
            return null;
        }
    }
}
----------------------------------------

public URL getResource (String resource) {
    URL url;
    ClassLoader classLoader = Thread.currentThread ().getContextClassLoader ();
    if (classLoader != null) {
        url = classLoader.getResource (resource);
        if (url != null) {
            return url;
        }
    }
    classLoader = Loader.class.getClassLoader ();
    if (classLoader != null) {
        url = classLoader.getResource (resource);
        if (url != null) {
            return url;
        }
    }
    return ClassLoader.getSystemResource (resource);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38627045_38627110_27_36
38627045_38627110_8_20
Title: Threads notifyAll() 
----------------------------------------

public void run () {
    synchronized (this) {
        for (int i = 0;
        i < 100; i ++) {
            total += i;
        }
        isCalculated = true;
        notifyAll ();
    }
}
----------------------------------------

public void run () {
    synchronized (c) {
        try {
            System.out.println ("Waiting for calculation...");
            if (! c.isCalculated) {
                c.wait ();
            }
        } catch (InterruptedException e) {
        }
        System.out.println ("Total is: " + c.total);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38664955_38665220_14_22
38664955_38665441_13_21
Title: write a program to add all the prime numbers from one to hundred 
----------------------------------------

private static boolean isPrimeNumber (int number) {
    int sqrt = (int) Math.floor (Math.sqrt (number));
    for (int i = 2;
    i <= sqrt; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

private static boolean isPrimeNumber (int number) {
    for (int i = 2;
    i <= number / 2; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38664955_38665220_2_12
38664955_38665441_2_11
Title: write a program to add all the prime numbers from one to hundred 
----------------------------------------

public static void main (String args []) {
    int number = 2;
    int sum = 0;
    while (number <= 100) {
        if (isPrimeNumber (number)) {
            sum += number;
        }
        number ++;
    }
    System.out.println (sum);
}
----------------------------------------

public static void main (String args []) {
    long sum = 0;
    for (int number = 2;
    number <= 100; number ++) {
        if (isPrimeNumber (number)) {
            sum += number;
        }
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38664955_38665220_2_12
38664955_51600435_3_42
Title: write a program to add all the prime numbers from one to hundred 
----------------------------------------

public static void main (String args []) {
    int number = 2;
    int sum = 0;
    while (number <= 100) {
        if (isPrimeNumber (number)) {
            sum += number;
        }
        number ++;
    }
    System.out.println (sum);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    boolean flag = false;
    int max = 1000001;
    long [] a = new long [max];
    a [0] = 2;
    int i = 3, j = 0;
    long sum = 2;
    int t = in.nextInt ();
    for (int a0 = 0;
    a0 < t; a0 ++) {
        long sum1 = 0;
        int n = in.nextInt ();
        if (n >= i) {
            while (i <= n) {
                for (int y = 0;
                a [y] <= Math.sqrt (i); y ++) {
                    if (a [y] == 0) {
                        break;
                    } else if (i % a [y] == 0) {
                        flag = true;
                        break;
                    }

                }
                if (! flag) {
                    a [++ j] = i;
                    sum += i;
                }
                flag = false;
                i += 2;
            }
            System.out.println (sum);
        } else {
            for (int y = 0;
            a [y] <= n && a [y] != 0; y ++) {
                sum1 += a [y];
            }
            System.out.println (sum1);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38664955_38665441_2_11
38664955_51600435_3_42
Title: write a program to add all the prime numbers from one to hundred 
----------------------------------------

public static void main (String args []) {
    long sum = 0;
    for (int number = 2;
    number <= 100; number ++) {
        if (isPrimeNumber (number)) {
            sum += number;
        }
    }
    System.out.println (sum);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    boolean flag = false;
    int max = 1000001;
    long [] a = new long [max];
    a [0] = 2;
    int i = 3, j = 0;
    long sum = 2;
    int t = in.nextInt ();
    for (int a0 = 0;
    a0 < t; a0 ++) {
        long sum1 = 0;
        int n = in.nextInt ();
        if (n >= i) {
            while (i <= n) {
                for (int y = 0;
                a [y] <= Math.sqrt (i); y ++) {
                    if (a [y] == 0) {
                        break;
                    } else if (i % a [y] == 0) {
                        flag = true;
                        break;
                    }

                }
                if (! flag) {
                    a [++ j] = i;
                    sum += i;
                }
                flag = false;
                i += 2;
            }
            System.out.println (sum);
        } else {
            for (int y = 0;
            a [y] <= n && a [y] != 0; y ++) {
                sum1 += a [y];
            }
            System.out.println (sum1);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38667216_38667462_3_19
38667216_38667573_2_12
Title: Which java.lang.Class method generates the right input for Class.forName()? 
----------------------------------------

public static void main (String [] args) throws Exception {
    Object o = new Foo ();
    System.out.println ("class is: " + o.getClass ());
    for (String getterMethodName : Arrays.asList ("getName", "getTypeName", "getCanonicalName")) {
        Method m = Class.class.getMethod (getterMethodName);
        String oTypeName = m.invoke (o.getClass ()).toString ();
        System.out.println (getterMethodName + " yields " + oTypeName);
        try {
            Class < ? > oType = Class.forName (oTypeName);
            Object oAgain = oType.newInstance ();
            System.out.println (" ... and it works: " + oAgain);
        } catch (Exception e) {
            System.err.println (" ... and it fails: " + e);
        }
    }
}
----------------------------------------

public static void main (String...args) throws ClassNotFoundException {
    class LocalClass {
    }

    System.out.println (Class.forName (name (StaticNestedClass.class)));
    System.out.println (Class.forName (name (InnerClass.class)));
    System.out.println (Class.forName (name (Integer [].class)));
    System.out.println (Class.forName (name (int [].class)));
    System.out.println (Class.forName (name (List.class)));
    System.out.println (Class.forName (name (LocalClass.class)));
    System.out.println (Class.forName (name (new Object () {
    }

    .getClass ())));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38679369_38679963_12_40
38679369_38679963_19_33
Title: JavaFX multithreading and controller class 
----------------------------------------

public void run () {
    System.out.println ("Running " + threadName);
    try {
        final Timer timer = new Timer ();
        timer.scheduleAtFixedRate (new TimerTask () {
            int s = 60;
            int m = 30;
            public void run () {
                s --;
                if (s < 0 && m > 0) {
                    m --;
                    s = 59;
                }
                if (s < 10) {
                    callback.accept (Integer.toString (m) + ":" + 0 + Integer.toString (s));
                } else {
                    callback.accept (Integer.toString (m) + ":" + Integer.toString (s));
                }
                if (m == 0 && s == 0) timer.cancel ();

            }}

        , 0, 10);
        Thread.sleep (50);
    } catch (InterruptedException e) {
        System.out.println ("Thread " + threadName + " interrupted.");
    }
    System.out.println ("Thread " + threadName + " exiting.");
}
----------------------------------------

public void run () {
    s --;
    if (s < 0 && m > 0) {
        m --;
        s = 59;
    }
    if (s < 10) {
        callback.accept (Integer.toString (m) + ":" + 0 + Integer.toString (s));
    } else {
        callback.accept (Integer.toString (m) + ":" + Integer.toString (s));
    }
    if (m == 0 && s == 0) timer.cancel ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38683612_38683695_7_19
38683612_38683842_2_10
Title: Java regex to remove duplicate substrings from string 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String input = "The big black dog big black dog is a friendly friendly dog who lives nearby nearby.";
    Pattern dupPattern = Pattern.compile ("([ \\w]+)\\1", Pattern.CASE_INSENSITIVE);
    Matcher matcher = dupPattern.matcher (input);
    while (matcher.find ()) {
        input = input.replaceAll ("([ \\w]+)\\1", "$1");
    }
    System.out.println (input);
}
----------------------------------------

public static void main (String args []) {
    String input = "The big big black dog big black dog is a friendly friendly dog who lives nearby nearby.";
    String result = input.replaceAll ("\\b([ \\w]+)\\1", "$1");
    while (! input.equals (result)) {
        input = result;
        result = input.replaceAll ("\\b([ \\w]+)\\1", "$1");
    }
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38683872_38684217_35_46
38683872_38684250_17_25
Title: creating a sub string from a string array-list 
----------------------------------------

public static void search () {
    String wanted;
    System.out.println ("Give a neme: ");
    wanted = scan.nextLine ();
    if (map.get (wanted) != null) {
        System.out.println ("names: " + map.get (wanted));
    } else {
        System.out.println ("Name is not existed");
    }
}
----------------------------------------

private static void search (String name) {
    for (int i = 0;
    i < nameList.size (); i ++) {
        if (name.equalsIgnoreCase (nameList.get (i).substring (0, nameList.get (i).indexOf ("-")))) {
            System.out.println (nameList.get (i).substring (nameList.get (i).indexOf ("-") + 1));
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38728167_38728454_1_10
38728167_38728472_1_10
Title: Find relative path from one URL to another in Java 
----------------------------------------

public static String relative (String url1, String url2) {
    String [] parts = url1.split ("/");
    String similar = "";
    for (String part : parts) {
        if (url2.contains (similar + part + "/")) {
            similar += part + "/";
        }
    }
    return "./" + url2.replace (similar, "");
}
----------------------------------------

public String relative (String url1, String url2) {
    int i;
    for (i = 0; i < url1.length (); i ++) {
        if (url1.charAt (i) != url2.charAt (i)) break;

    }
    if (url1.length () > url2.length ()) return url1.substring (i);

    return url2.substring (i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38738506_38738801_1_28
38738506_38738842_3_34
Title: Divide two String into substrings and pair them 
----------------------------------------

public static void main (String [] args) {
    String key = "1;2;3;4";
    String value = "Value1;Value2;Value whitespace";
    String [] keys = key.split (";");
    String [] values = value.split (";");
    StringBuilder sb = new StringBuilder ("{");
    boolean isKey = true;
    int keyCount = 0;
    int valueCount = 0;
    for (int i = 0;
    i < key.length (); i ++) {
        sb.append ("\"");
        if (isKey) {
            sb.append (keys [keyCount]).append ("\" : ");
            keyCount ++;
        } else {
            sb.append (values [valueCount]).append ("\", ");
            valueCount ++;
        }
        isKey = ! isKey;
    }
    sb.append ("}");
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String key = "1;2;3;4";
    String value = "Value1;Value2;Value whitespace;";
    String [] keyArr = key.split (";");
    String [] valueArr = value.split (";");
    String finalJSON = "{";
    for (int i = 0;
    i < (keyArr.length > valueArr.length ? keyArr.length : valueArr.length); i ++) {
        try {
            finalJSON += "\"" + keyArr [i] + "\"";
        } catch (ArrayIndexOutOfBoundsException e) {
            finalJSON += "\"null\"";
        }
        finalJSON += " : ";
        try {
            finalJSON += "\"" + valueArr [i] + "\"";
        } catch (ArrayIndexOutOfBoundsException e) {
            finalJSON += "\"null\"";
        }
        if (i != (keyArr.length > valueArr.length ? keyArr.length : valueArr.length) - 1) finalJSON += ", ";

    }
    finalJSON += "}";
    System.out.println (finalJSON);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38757903_38758485_1_19
38757903_38758705_19_79
Title: I need to randomly remove half of the words in a string in java 
----------------------------------------

public static void main (String [] args) {
    String str1 = "Look, you want it you devour it and then, then good as it was you realize it wasn’t what you exactly wanted what you wanted exactly was wanting";
    String [] wordArray = str1.split ("\\s+");
    ArrayList < String > wordList = new ArrayList < String > (Arrays.asList (wordArray));
    int wordCount = wordList.size ();
    int halfWordCount = wordCount / 2;
    int tracker = 0;
    Random random = new Random ();
    while (tracker < halfWordCount) {
        int randomIndex = random.nextInt (wordList.size ());
        wordList.remove (randomIndex);
        tracker ++;
    }
    System.out.println (wordList.toString ());
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Removing random words in a Poem Program");
    String str1 = "Sample Poem by Noah Eli Gordon: Look, you want it you devour it and then, then good as it was you realize it wasn’t what you exactly wanted what you wanted exactly was wanting";
    String [] wordArray = str1.split ("\\s+");
    int wordCount = wordArray.length;
    System.out.println (str1 + "");
    int wordCount2 = wordCount / 2;
    Integer [] myIntArray = new Integer [wordCount];
    wordcount w = new wordcount ();
    String [] wordArray2 = new String [wordCount2];
    for (int i = 0;
    i <= wordCount2; i ++) {
        int rand = (int) (Math.random () * (myIntArray.length - 1));
        ArrayList < Integer > list = w.test (myIntArray);
        list.remove (rand);
        myIntArray = list.toArray (myIntArray);
        ArrayList < String > listS = w.testS (wordArray);
        listS.remove (rand);
        wordArray2 = listS.toArray (wordArray);
    }
    List < String > list = new ArrayList < String > ();
    for (String s : wordArray2) {
        if (s != null && s.length () > 0) {
            list.add (s);
        }
    }
    wordArray2 = list.toArray (new String [list.size ()]);
    System.out.println ();
    String [] ret2 = wordArray2;
    for (String str : ret2) System.out.print (str + " ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38764187_38764392_1_13
38764187_38786003_1_28
Title: Connection with alfresco cmis 
----------------------------------------

private static Session getSession (String serverUrl, String username, String password) {
    SessionFactory sessionFactory = SessionFactoryImpl.newInstance ();
    Map < String, String > params = new HashMap < String, String > ();
    params.put (SessionParameter.USER, username);
    params.put (SessionParameter.PASSWORD, password);
    params.put (SessionParameter.ATOMPUB_URL, serverUrl);
    params.put (SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value ());
    List < Repository > repos = sessionFactory.getRepositories (params);
    if (repos.isEmpty ()) {
        throw new RuntimeException ("Server has no repositories!");
    }
    return repos.get (0).createSession ();
}
----------------------------------------

public Session getSession () {
    if (session == null) {
        logger.info ("Not connected, creating new connection");
        SessionFactory factory = SessionFactoryImpl.newInstance ();
        Map < String, String > parameter = new HashMap < String, String > ();
        parameter.put (SessionParameter.USER, "admin");
        parameter.put (SessionParameter.PASSWORD, "admin");
        parameter.put (SessionParameter.ATOMPUB_URL, "http://localhost:8080/alfresco/api/-default-/public/cmis/versions/1.0/atom");
        parameter.put (SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value ());
        List < Repository > repositories = factory.getRepositories (parameter);
        if (repositories != null && repositories.size () > 0) {
            logger.info ("Found (" + repositories.size () + ") Alfresco repositories");
            this.session = repositories.get (0).createSession ();
        } else {
            throw new CmisConnectionException ("Could not connect to the Alfresco Server," + " no repository found!");
        }
    }
    return this.session;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38768239_38769276_10_69
38768239_38788651_12_68
Title: How to delete a pdf if download was incomplete in android? 
----------------------------------------

protected String doInBackground (String...params) {
    int count;
    String stringToReturnToPostExecute = null;
    builder.setSmallIcon (R.mipmap.ic_launcher);
    builder.setContentTitle ("Download Status...");
    builder.setContentText ("Download in Progress...");
    try {
        URL url = new URL (params [0]);
        URLConnection connection = url.openConnection ();
        connection.connect ();
        int lengthOfFile = connection.getContentLength ();
        Log.d ("ANDRO_ASYNC", "LENGTH OF FILE : " + lengthOfFile);
        String fileName = params [0].substring (params [0].lastIndexOf ('/') + 1, params [0].length ());
        Log.d ("FILENAME", fileName);
        resp = fileName;
        if (isSDPresent) {
            InputStream inputStream = new BufferedInputStream (url.openStream ());
            OutputStream outputStream = new FileOutputStream ("sdcard/shatayushi/" + fileName);
            byte data [] = new byte [1024];
            long total = 0;
            while ((count = inputStream.read (data)) != - 1) {
                total += count;
                publishProgress ("" + (int) ((total * 100) / lengthOfFile));
                outputStream.write (data, 0, count);
            }
            outputStream.flush ();
            outputStream.close ();
            inputStream.close ();
        } else {
            InputStream inputStream = new BufferedInputStream (url.openStream ());
            OutputStream outputStream = new FileOutputStream (getFilesDir () + "/shatayushi/" + fileName);
            byte data [] = new byte [1024];
            long total = 0;
            while ((count = inputStream.read (data)) != - 1) {
                total += count;
                publishProgress ("" + (int) ((total * 100) / lengthOfFile));
                outputStream.write (data, 0, count);
            }
            outputStream.flush ();
            outputStream.close ();
            inputStream.close ();
            stringToReturnToPostExecute = params [0];
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return stringToReturnToPostExecute;
}
----------------------------------------

protected String doInBackground (String...params) {
    int count;
    builder.setSmallIcon (R.mipmap.ic_launcher);
    builder.setContentTitle ("Download Status...");
    builder.setContentText ("Download in Progress...");
    try {
        URL url = new URL (params [0]);
        URLConnection connection = url.openConnection ();
        connection.connect ();
        lengthOfFile = connection.getContentLength ();
        Log.d ("ANDRO_ASYNC", "LENGTH OF FILE : " + lengthOfFile);
        String fileName = params [0].substring (params [0].lastIndexOf ('/') + 1, params [0].length ());
        Log.d ("FILENAME", fileName);
        resp = fileName;
        if (isSDPresent) {
            InputStream inputStream = new BufferedInputStream (url.openStream ());
            OutputStream outputStream = new FileOutputStream ("sdcard/shatayushi/" + fileName);
            byte data [] = new byte [1024];
            long total = 0;
            while ((count = inputStream.read (data)) != - 1) {
                total += count;
                publishProgress ("" + (int) ((total * 100) / lengthOfFile));
                outputStream.write (data, 0, count);
            }
            outputStream.flush ();
            outputStream.close ();
            inputStream.close ();
        } else {
            InputStream inputStream = new BufferedInputStream (url.openStream ());
            OutputStream outputStream = new FileOutputStream (getFilesDir () + "/shatayushi/" + fileName);
            byte data [] = new byte [1024];
            long total = 0;
            while ((count = inputStream.read (data)) != - 1) {
                total += count;
                publishProgress ("" + (int) ((total * 100) / lengthOfFile));
                outputStream.write (data, 0, count);
            }
            outputStream.flush ();
            outputStream.close ();
            inputStream.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return params [0];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38768239_38769276_72_124
38768239_38788651_71_167
Title: How to delete a pdf if download was incomplete in android? 
----------------------------------------

protected void onPostExecute (String filename) {
    Log.d ("PARAM", filename);
    if (filename == null) {
    }
    String fname = filename.substring (filename.lastIndexOf ('/') + 1, filename.length ());
    int position = Arrays.asList (pdf_url).indexOf (filename);
    Log.d ("Position", String.valueOf (position));
    String magazine_id = magazine_names [position];
    if (isSDPresent) {
        dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
        builder.setProgress (0, 0, false);
        builder.setContentText ("Download Complete...");
        NM.notify (notify_id, builder.build ());
        TelephonyManager telephonyManager = (TelephonyManager) getSystemService (Context.TELEPHONY_SERVICE);
        String device_imei = telephonyManager.getDeviceId ();
        update_info (device_imei, magazine_id);
        Uri uri = Uri.parse ("/storage/emulated/0/shatayushi/" + fname);
        Intent intent = new Intent (MainActivity.this, MuPDFActivity.class);
        intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.setAction (Intent.ACTION_VIEW);
        intent.setData (uri);
        startActivity (intent);
    } else {
        dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
        builder.setProgress (0, 0, false);
        builder.setContentText ("Download Complete...");
        NM.notify (notify_id, builder.build ());
        Uri uri = Uri.parse (getFilesDir () + "/shatayushi/" + fname);
        Intent intent = new Intent (MainActivity.this, MuPDFActivity.class);
        intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
        intent.setAction (Intent.ACTION_VIEW);
        intent.setData (uri);
        startActivity (intent);
    }
}
----------------------------------------

protected void onPostExecute (String filename) {
    Log.d ("PARAM", filename);
    String fname = filename.substring (filename.lastIndexOf ('/') + 1, filename.length ());
    Log.d ("LENGTH OF FILE : ", String.valueOf (lengthOfFile));
    int position = Arrays.asList (pdf_url).indexOf (filename);
    Log.d ("Position", String.valueOf (position));
    String magazine_id = magazine_names [position];
    if (isSDPresent) {
        File f = new File ("/storage/emulated/0/shatayushi/" + fname);
        if (f.length () < lengthOfFile) {
            if (f.delete ()) {
                progressDialog.setProgress (0);
                dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
                builder.setProgress (0, 0, false);
                builder.setContentText ("Download was interrupted please try again!");
                NM.notify (notify_id, builder.build ());
                Toast.makeText (MainActivity.this, "Download was interrupted please try again!", Toast.LENGTH_SHORT).show ();
                Log.d ("Del", "File deleted");
            } else {
                Toast.makeText (MainActivity.this, "File not deleted", Toast.LENGTH_SHORT).show ();
                Log.d ("NOTDel", "File not deleted");
            }
        } else {
            progressDialog.setProgress (0);
            dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
            builder.setProgress (0, 0, false);
            builder.setContentText ("Download Complete...");
            NM.notify (notify_id, builder.build ());
            TelephonyManager telephonyManager = (TelephonyManager) getSystemService (Context.TELEPHONY_SERVICE);
            String device_imei = telephonyManager.getDeviceId ();
            dbHandler.updateDownloadStatus (magazine_id, "YES");
            Uri uri = Uri.parse ("/storage/emulated/0/shatayushi/" + fname);
            Intent intent = new Intent (MainActivity.this, MuPDFActivity.class);
            intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
            intent.setAction (Intent.ACTION_VIEW);
            intent.setData (uri);
            startActivity (intent);
        }
    } else {
        File f = new File ("/storage/emulated/0/shatayushi/" + fname);
        if (f.length () < lengthOfFile) {
            if (f.delete ()) {
                progressDialog.setProgress (0);
                dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
                builder.setProgress (0, 0, false);
                builder.setContentText ("Download was interrupted please try again!");
                NM.notify (notify_id, builder.build ());
                Toast.makeText (MainActivity.this, "Download was interrupted please try again!", Toast.LENGTH_SHORT).show ();
                Log.d ("Del", "File deleted");
            } else {
                Toast.makeText (MainActivity.this, "File not deleted", Toast.LENGTH_SHORT).show ();
                Log.d ("NOTDel", "File not deleted");
            }
        } else {
            dismissDialog (DIALOG_DOWNLOAD_PROGRESS);
            builder.setProgress (0, 0, false);
            builder.setContentText ("Download Complete...");
            NM.notify (notify_id, builder.build ());
            Uri uri = Uri.parse (getFilesDir () + "/shatayushi/" + fname);
            Intent intent = new Intent (MainActivity.this, MuPDFActivity.class);
            intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
            intent.setAction (Intent.ACTION_VIEW);
            intent.setData (uri);
            startActivity (intent);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38777323_38777440_3_18
38777323_38778600_37_51
Title: From file of path to unique data structure 
----------------------------------------

public void add (Path p) {
    for (ListIterator < Path > it = paths.listIterator (0);
    it.hasNext ();) {
        Path p2 = it.next ();
        if (p2.startsWith (p)) {
            it.set (p);
            return;
        }
        if (p.startsWith (p2)) {
            return;
        }
    }
    paths.add (p);
}
----------------------------------------

public void add (List < String > path, int i) {
    String childName = path.get (i);
    PathNode child = children.get (childName);
    if (child != null) {
        if (path.size () - i <= 1) child.children.clear ();
        else child.add (path, i + 1);

    } else if (! isLeaf () || isRoot ()) {
        PathNode node = this;
        for (; i < path.size (); i ++) {
            String key = path.get (i);
            node.children.put (key, node = new PathNode (key));
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38787336_38787552_1_22
38787336_38788239_1_25
Title: Custom checkbox is not check on setonclicklistener method is not working 
----------------------------------------

public void startQuizClick (View v) {
    count ++;
    HashMap < String, String > h1 = questionlist.get (k);
    question.setText (h1.get ("question_text"));
    val = Integer.parseInt (h1.get ("total_options"));
    LayoutInflater inflater = (LayoutInflater) ACTIVITYNAME.this.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    for (int i = 0;
    i < Integer.parseInt (h1.get ("total_options")); i ++) {
        View view = inflater.inflate (R.layout.row_layout, null);
        CheckBox cb = (CheckBox) view.findViewById (R.id.checkBox);
        HashMap < String, String > h2 = optionlist.get (i);
        cb.setId (i);
        cb.setEnabled (true);
        cb.setTextColor (getResources ().getColor (R.color.textColor));
        cb.setText (h2.get ("option_text" + i));
        cb.setTextSize (14);
        cb.setOnCheckedChangeListener (this);
        cb.setTag (i);
        linearLay1.addView (view);
    }
}
----------------------------------------

public void startQuizClick () {
    HashMap < String, String > h1 = new HashMap < > ();
    for (int i = 0;
    i < 5; i ++) {
        CheckBox cb = new CheckBox (this);
        cb.setLayoutParams (new LinearLayout.LayoutParams (100, 100));
        cb.setId (i);
        cb.setEnabled (true);
        cb.setTextColor (ContextCompat.getColor (Main2Activity.this, R.color.colorAccent));
        cb.setText ("test");
        cb.setTextSize (14);
        cb.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
            @Override
            public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
                Log.e ("item checked", "ischedked" + isChecked);
            }}

        );
        lli.addView (cb);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38788321_38788444_9_24
38788321_38789014_7_31
Title: Use animation on button click? 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    smallBang = SmallBang.attach2Window (this);
    imageButton = (ImageButton) findViewById (R.id.imageButton);
    smallBang.bang (view, new SmallBangListener () {
        @Override
        public void onAnimationStart () {
        }@Override
        public void onAnimationEnd () {
            onSettingsButtonClick (imageButton);
        }}

    );
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    mSmallBang = SmallBang.attach2Window (this);
    ImageButton = (ImageView) findViewById (R.id.imageButton);
    ImageButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            mSmallBang.bang (v);
            mSmallBang.setmListener (new SmallBangListener () {
                @Override
                public void onAnimationStart () {
                }@Override
                public void onAnimationEnd () {
                }}

            );
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38799464_38799681_1_14
38799464_38799748_4_15
Title: Given 2 int values find which is closer to 15 
----------------------------------------

public static void main (String [] args) {
    while (true) {
        Scanner in = new Scanner (System.in);
        int n1 = in.nextInt ();
        int n2 = in.nextInt ();
        if (n1 < 0 || n1 >= 15) {
            n1 = 0;
        }
        if (n2 < 0 || n2 >= 15) {
            n2 = 0;
        }
        System.out.println (Math.max (n1, n2));
    }
}
----------------------------------------

public static void main (String [] args) {
    int firstVal = 0;
    int secondVal = 0;
    Scanner kb = new Scanner (System.in);
    System.out.println ("Give your first value: ");
    firstVal = kb.nextInt ();
    System.out.println ("firstVal is: " + firstVal);
    System.out.println ("Give your second value: ");
    secondVal = kb.nextInt ();
    System.out.println ("secondVal is: " + secondVal);
    System.out.println (checkMe (firstVal, secondVal));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38799464_38799681_1_14
38799464_38809825_2_29
Title: Given 2 int values find which is closer to 15 
----------------------------------------

public static void main (String [] args) {
    while (true) {
        Scanner in = new Scanner (System.in);
        int n1 = in.nextInt ();
        int n2 = in.nextInt ();
        if (n1 < 0 || n1 >= 15) {
            n1 = 0;
        }
        if (n2 < 0 || n2 >= 15) {
            n2 = 0;
        }
        System.out.println (Math.max (n1, n2));
    }
}
----------------------------------------

public static void main (String [] args) {
    while (JPL.test ()) {
        Scanner kb = new Scanner (System.in);
        int num = kb.nextInt ();
        int num2 = kb.nextInt ();
        int value1;
        int value2;
        if (num <= 15 || num2 <= 15) {
            value1 = 15 - num;
            value2 = 15 - num2;
            if (value1 < 0) {
                value1 = 50;
            }
            if (value2 < 0) {
                value2 = 50;
            }
            if (value1 > value2) {
                System.out.println (" " + num2);
            } else if (value1 < value2) {
                System.out.println (" " + num);
            }

        } else {
            System.out.println (0);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38799464_38799748_4_15
38799464_38809825_2_29
Title: Given 2 int values find which is closer to 15 
----------------------------------------

public static void main (String [] args) {
    int firstVal = 0;
    int secondVal = 0;
    Scanner kb = new Scanner (System.in);
    System.out.println ("Give your first value: ");
    firstVal = kb.nextInt ();
    System.out.println ("firstVal is: " + firstVal);
    System.out.println ("Give your second value: ");
    secondVal = kb.nextInt ();
    System.out.println ("secondVal is: " + secondVal);
    System.out.println (checkMe (firstVal, secondVal));
}
----------------------------------------

public static void main (String [] args) {
    while (JPL.test ()) {
        Scanner kb = new Scanner (System.in);
        int num = kb.nextInt ();
        int num2 = kb.nextInt ();
        int value1;
        int value2;
        if (num <= 15 || num2 <= 15) {
            value1 = 15 - num;
            value2 = 15 - num2;
            if (value1 < 0) {
                value1 = 50;
            }
            if (value2 < 0) {
                value2 = 50;
            }
            if (value1 > value2) {
                System.out.println (" " + num2);
            } else if (value1 < value2) {
                System.out.println (" " + num);
            }

        } else {
            System.out.println (0);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38808178_45527783_2_18
38808178_45552542_1_17
Title: Java Wrtie an isSubstring Method 
----------------------------------------

public static boolean isSubstring (String s1, String s2) {
    if (s1.length () != s2.length ()) return false;

    int count = 0;
    int i = 0;
    int j = 0;
    String s3 = s2 + s2;
    while (j < s3.length () && count < s1.length ()) {
        if (s1.charAt (i) == s3.charAt (j)) {
            count ++;
            i ++;
        } else {
            count = 0;
        }
        j ++;
    }
    return count == s1.length () ? true : false;
}
----------------------------------------

public static boolean isSubstring (String s1, String s2) {
    if (s1.length () < s2.length ()) return false;

    if (s1.length () == s2.length ()) return s1.equals (s2);

    for (int i = 0;
    i <= s1.length () - s2.length (); i ++) {
        if (s1.charAt (i) == s2.charAt (0)) {
            int matchLength = 1;
            for (int j = 1;
            j < s2.length (); j ++) {
                if (s1.charAt (i + j) != s2.charAt (j)) {
                    break;
                }
                matchLength ++;
            }
            if (matchLength == s2.length ()) return true;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38810914_38815038_8_22
38810914_38817479_37_48
Title: Find if hours ranges overlap regardless of the date 
----------------------------------------

public static void main (String [] args) {
    try {
        Interval int1 = new Interval (Instant.parse ("2016-08-01T22:00:00"), Instant.parse ("2016-08-02T02:00:00"));
        Interval int2 = new Interval (Instant.parse ("2016-08-02T01:00:00"), Instant.parse ("2016-08-02T08:00:00"));
        System.out.printf ("The two intervals %s.%n", int1.overlaps (int2) ? "overlap" : "do not overlap");
    } catch (Exception e) {
        e.printStackTrace (System.err);
    }
}
----------------------------------------

public static void main (String [] args) {
    test (0, 1, 2, 3, false);
    test (2, 3, 0, 1, false);
    test (0, 3, 1, 2, true);
    test (1, 2, 0, 3, true);
    test (0, 2, 1, 3, true);
    test (12, 18, 15, 21, true);
    test (18, 6, 21, 3, true);
    test (21, 3, 0, 6, true);
    test (21, 0, 3, 6, false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38817775_38817881_5_13
38817775_41308938_5_15
Title: Simple java file reader not working 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader f = new BufferedReader (new FileReader ("test.in.txt"));
    PrintWriter out = new PrintWriter (new BufferedWriter (new FileWriter ("test.out.txt")));
    StringTokenizer st = new StringTokenizer (f.readLine ());
    int i1 = Integer.parseInt (st.nextToken ());
    int i2 = Integer.parseInt (st.nextToken ());
    out.println (i1 + i2);
    out.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader f = new BufferedReader (new FileReader ("test.in.txt"));
    PrintWriter out = new PrintWriter (new BufferedWriter (new FileWriter ("test.out.txt")));
    StringTokenizer st = new StringTokenizer (f.readLine ());
    int i1 = Integer.parseInt (st.nextToken ());
    int i2 = Integer.parseInt (st.nextToken ());
    out.println (i1 + i2);
    f.close ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3883980_3888451_119_144
3883980_3888451_98_112
Title: Login with HTTPS to htaccess protected directory 
----------------------------------------

public static byte [] decode (String s) {
    int i = 0;
    ByteArrayOutputStream bos = new ByteArrayOutputStream ();
    int len = s.length ();
    while (true) {
        while (i < len && s.charAt (i) <= ' ') i ++;

        if (i == len) break;

        int tri = (decode (s.charAt (i)) << 18) + (decode (s.charAt (i + 1)) << 12) + (decode (s.charAt (i + 2)) << 6) + (decode (s.charAt (i + 3)));
        bos.write ((tri>> 16) & 255);
        if (s.charAt (i + 2) == '=') break;

        bos.write ((tri>> 8) & 255);
        if (s.charAt (i + 3) == '=') break;

        bos.write (tri & 255);
        i += 4;
    }
    return bos.toByteArray ();
}
----------------------------------------

static int decode (char c) {
    if (c >= 'A' && c <= 'Z') return c - 65;
    else if (c >= 'a' && c <= 'z') return c - 97 + 26;
    else if (c >= '0' && c <= '9') return c - 48 + 26 + 26;
    else switch (c) {
        case '+' :
            return 62;
        case '/' :
            return 63;
        case '=' :
            return 0;
        default :
            throw new RuntimeException (new StringBuffer ("unexpected code: ").append (c).toString ());
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38841823_38841876_7_26
38841823_38842157_5_18
Title: "How do I determine the the size first STACK in java and delete data in between the STACK" 
----------------------------------------

public static void main (String [] args) {
    LinkedList list = new LinkedList ();
    list.add ("A");
    list.add ("B");
    list.add ("C");
    System.out.println ("LinkedList:" + list);
    System.out.println ("size:" + list.size ());
    list.remove ("B");
    System.out.println ("LinkedList:" + list);
    System.out.println ("size:" + list.size ());
}
----------------------------------------

public static void main (String [] args) {
    Stack < String > stack = new Stack < String > ();
    stack.push ("a");
    printStack (stack);
    stack.push ("b");
    printStack (stack);
    stack.push ("c");
    printStack (stack);
    stack = deleteFrom (stack, "b");
    System.out.println ("After calling deleteFrom(stack, \"b\")");
    printStack (stack);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38846630_38846786_2_15
38846630_38846925_3_12
Title: Print triangle in java using single for loop 
----------------------------------------

public static void main (String [] args) {
    int nextNumber = 1;
    for (int i = 1;
    i <= 10; i ++) {
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (nextNumber < 10 ? ("  " + nextNumber ++) : (" " + nextNumber ++));
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int j = 1;
    for (int i = 1;
    i <= 6; i ++) {
        System.out.print (i + " ");
        if (i == j) {
            System.out.print ('\n');
            j = 2 * j + 1;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38857214_38857746_18_27
38857214_38857746_34_44
Title: Execute set of test methods in with multiple concurrent threads 
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.findOneByID ("1");
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.save (entity.builder ().setID ("1").setName ("John").build ());
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38857214_38857746_18_27
38857214_38857746_51_60
Title: Execute set of test methods in with multiple concurrent threads 
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.findOneByID ("1");
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.delete ("1");
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38857214_38857746_34_44
38857214_38857746_51_60
Title: Execute set of test methods in with multiple concurrent threads 
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.save (entity.builder ().setID ("1").setName ("John").build ());
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------

public void run () {
    try {
        startSignal.await ();
        dbService.delete ("1");
    } catch (Exception e) {
        errors.add (e);
    } finally {
        doneSignal.countDown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38860633_38863147_11_26
38860633_38863147_28_45
Title: Method for printing multi-dimensional array 
----------------------------------------

private static String print (int [] arr) {
    if (arr.length == 0) {
        return "{ }";
    }
    StringBuilder sb = new StringBuilder ();
    sb.append ("{ ").append (arr [0]);
    for (int k = 1;
    k < arr.length; k ++) {
        sb.append (", ").append (arr [k]);
    }
    sb.append (" }");
    return sb.toString ();
}
----------------------------------------

private static String print (int [] [] arrOfArrs) {
    if (arrOfArrs.length == 0) {
        return "{ }";
    }
    StringBuilder sb = new StringBuilder ();
    sb.append ("{\n");
    sb.append ("    ").append (print (arrOfArrs [0]));
    for (int k = 1;
    k < arrOfArrs.length; k ++) {
        sb.append (",\n").append ("    ").append (print (arrOfArrs [k]));
    }
    sb.append ("\n}");
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38872133_38872616_22_43
38872133_38874576_7_34
Title: Regex to extract values from Insert Query 
----------------------------------------

public static void main (String [] args) {
    Test t = new Test ();
    String [] allQueryStrings = new String [] {"INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz);", "INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,bbb,ccc);", "INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb(,)b',ccc);", "INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb),(b',ccc);"};
    for (String queryString : allQueryStrings) {
        System.out.println (queryString);
        for (String values : t.extractValues (queryString)) {
            System.out.println (values);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String stmt = " INSERT INTO `TABLENAME` VALUES(xxx,yyy,zzz),(aaa,'bb),(b',ccc),(aaa,bbb,ccc); ";
    System.out.printf ("%s\n", stmt);
    stmt = stmt.split ("(?i)\\s+values\\s*\\(|\\);") [1];
    System.out.printf ("values list: %s\n", stmt);
    Matcher m = Pattern.compile ("('\\w*)(\\)\\,\\()+(\\w*')").matcher (stmt);
    while (m.find ()) {
        stmt = stmt.substring (0, m.start (2)) + "###" + stmt.substring (m.end (2), stmt.length ());
        System.out.printf ("values list with pattern subst inside char literal: %s\n", stmt);
    }
    String [] multiValues = stmt.split ("\\)\\,\\(");
    for (int i = 0;
    i < multiValues.length; i ++) {
        multiValues [i] = multiValues [i].replaceAll ("###", "),(");
    }
    System.out.println (Arrays.toString (multiValues));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38878671_38880078_6_18
38878671_38880272_6_16
Title: Generating all permutation of a character array 
----------------------------------------

private static void printPermutation (char [] a, int startIndex, int endIndex) {
    if (startIndex == endIndex) System.out.println (new String (a));
    else {
        for (int x = startIndex;
        x < endIndex; x ++) {
            swap (a, startIndex, x);
            printPermutation (a, startIndex + 1, endIndex);
            swap (a, startIndex, x);
        }
    }
}
----------------------------------------

private static void printPermutation (char [] a, int i) {
    if (i == a.length - 1) System.out.println (new String (a));
    else {
        printPermutation (a, i + 1);
        for (int x = i + 1;
        x < a.length; x ++) {
            swap (a, i, x);
            printPermutation (a, i + 1);
            reswap (a, i, x);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38891087_38891209_3_22
38891087_38891224_1_20
Title: How can I add number of attempts to this java code 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int i = 0;
    boolean isPasswordCorrect = false;
    while (i ++ < 3) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            isPasswordCorrect = true;
            break;
        } else {
            System.out.println ("Wrong!");
        }
    }
    if (isPasswordCorrect) {
        System.out.println ("Right!");
        System.out.println ("The secret is: jryy qbar!");
    }
    reader.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int maxAttempts = 3;
    while (maxAttempts > 0) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            System.out.println ("Right!");
            break;
        } else {
            System.out.println ("Wrong!");
            System.out.println ("The secret is: jryy qbar!");
            maxAttempts --;
            if (maxAttempts == 0) {
                System.out.println ("You have reached the max number of attempts!");
            }
        }
    }
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38891087_38891209_3_22
38891087_38891257_1_21
Title: How can I add number of attempts to this java code 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int i = 0;
    boolean isPasswordCorrect = false;
    while (i ++ < 3) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            isPasswordCorrect = true;
            break;
        } else {
            System.out.println ("Wrong!");
        }
    }
    if (isPasswordCorrect) {
        System.out.println ("Right!");
        System.out.println ("The secret is: jryy qbar!");
    }
    reader.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int i = 0;
    while (true) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            System.out.println ("Right!");
            System.out.println ("The secret is: jryy qbar!");
            break;
        } else {
            i ++;
            System.out.println ("Wrong!");
            if (i == 3) {
                System.out.println ("Max attempts reached!! Exiting....");
                break;
            }
        }
    }
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38891087_38891224_1_20
38891087_38891257_1_21
Title: How can I add number of attempts to this java code 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int maxAttempts = 3;
    while (maxAttempts > 0) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            System.out.println ("Right!");
            break;
        } else {
            System.out.println ("Wrong!");
            System.out.println ("The secret is: jryy qbar!");
            maxAttempts --;
            if (maxAttempts == 0) {
                System.out.println ("You have reached the max number of attempts!");
            }
        }
    }
    reader.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int i = 0;
    while (true) {
        System.out.print ("Type password:\t");
        String command = reader.nextLine ();
        if (command.equals ("carrot")) {
            System.out.println ("Right!");
            System.out.println ("The secret is: jryy qbar!");
            break;
        } else {
            i ++;
            System.out.println ("Wrong!");
            if (i == 3) {
                System.out.println ("Max attempts reached!! Exiting....");
                break;
            }
        }
    }
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38891277_38891412_8_40
38891277_38891520_7_41
Title: Calculating the time difference between two time stamp object - java 
----------------------------------------

public static void main (String [] args) {
    String dateStart = "08/11/2016 09:29:58";
    String dateStop = "08/12/2016 10:31:48";
    SimpleDateFormat format = new SimpleDateFormat ("MM/dd/yyyy HH:mm:ss");
    Date d1 = null;
    Date d2 = null;
    try {
        d1 = format.parse (dateStart);
        d2 = format.parse (dateStop);
        long diff = d2.getTime () - d1.getTime ();
        long diffSeconds = diff / 1000 % 60;
        long diffMinutes = diff / (60 * 1000) % 60;
        long diffHours = diff / (60 * 60 * 1000) % 24;
        long diffDays = diff / (24 * 60 * 60 * 1000);
        System.out.print (diffDays + " days, ");
        System.out.print (diffHours + " hours, ");
        System.out.print (diffMinutes + " minutes, ");
        System.out.print (diffSeconds + " seconds.");
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String date = "2010-01-05";
    SimpleDateFormat sdf1 = new SimpleDateFormat ("yyyy-MM-dd");
    java.util.Date date3 = null;
    try {
        date3 = sdf1.parse (date);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    Date StartDate = new Date (date3.getTime ());
    System.out.println ("Date " + StartDate);
    String date2 = "2010-01-06";
    java.util.Date date4 = null;
    try {
        date4 = sdf1.parse (date2);
    } catch (Exception exception) {
        exception.printStackTrace ();
    }
    Date EndDate = new Date (date4.getTime ());
    System.out.println ("Date " + EndDate);
    long dateStart = StartDate.getTime (), dateStop = EndDate.getTime ();
    long diff = dateStop - dateStart;
    long diffInSeconds = TimeUnit.MILLISECONDS.toSeconds (diff);
    long diffInMinutes = TimeUnit.MILLISECONDS.toMinutes (diff);
    long diffInHours = TimeUnit.MILLISECONDS.toHours (diff);
    System.out.println ("\n\ndifference is:\n");
    System.out.println (diffInHours + " hours : " + diffInMinutes + " minutes : " + diffInSeconds + " seconds");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38903314_38903416_19_27
38903314_38903416_29_37
Title: Overloaded static methods not running in other class? 
----------------------------------------

public static boolean isEven (int value) {
    if (value % 2 == 0) {
        System.out.println (value + " is an even number.");
        return true;
    } else {
        System.out.println (value + " is not an even number.");
        return false;
    }
}
----------------------------------------

public static boolean isEven (MyInteger value) {
    if (value.value % 2 == 0) {
        System.out.println (value.value + " is an even number.");
        return true;
    } else {
        System.out.println (value.value + " is not an even number.");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38903314_38903416_19_27
38903314_38903416_9_17
Title: Overloaded static methods not running in other class? 
----------------------------------------

public static boolean isEven (int value) {
    if (value % 2 == 0) {
        System.out.println (value + " is an even number.");
        return true;
    } else {
        System.out.println (value + " is not an even number.");
        return false;
    }
}
----------------------------------------

public boolean isEven () {
    if (this.value % 2 == 0) {
        System.out.println (value + " is an even number.");
        return true;
    } else {
        System.out.println (value + " is not an even number.");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38903314_38903416_29_37
38903314_38903416_9_17
Title: Overloaded static methods not running in other class? 
----------------------------------------

public static boolean isEven (MyInteger value) {
    if (value.value % 2 == 0) {
        System.out.println (value.value + " is an even number.");
        return true;
    } else {
        System.out.println (value.value + " is not an even number.");
        return false;
    }
}
----------------------------------------

public boolean isEven () {
    if (this.value % 2 == 0) {
        System.out.println (value + " is an even number.");
        return true;
    } else {
        System.out.println (value + " is not an even number.");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38914973_38915668_14_31
38914973_38915837_1_16
Title: Java Generic Tree Comparable 
----------------------------------------

public void insert (E insertValue) {
    if (data.compareTo (insertValue) > 0) {
        if (leftNode == null) leftNode = new TreeNode < E > (insertValue);
        else leftNode.insert (insertValue);

    } else if (data.compareTo (insertValue) < 0) {
        if (rightNode == null) rightNode = new TreeNode < E > (insertValue);
        else rightNode.insert (insertValue);

    }

}
----------------------------------------

public static TreeNode < E > insert (TreeNode < E > node, E insertValue) {
    if (node == null) {
        return new TreeNode < E > (insertValue);
    }
    if (data.compareTo (insertValue) > 0) {
        node.leftNode = insert (node.leftNode, insertValue);
    } else if (data.compareTo (insertValue) < 0) {
        node.rightNode = insert (node.rightNode, insertValue);
    }

    return node;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38926016_38928295_19_37
38926016_38928295_24_34
Title: Interval that runs periodically forever 
----------------------------------------

public void call (final Subscriber < ? super Void > child) {
    final Scheduler.Worker worker = scheduler.createWorker ();
    child.add (worker);
    worker.schedulePeriodically (new Action0 () {
        @Override
        public void call () {
            try {
                child.onNext (null);
            } catch (Throwable e) {
                try {
                    worker.unsubscribe ();
                } finally {
                    Exceptions.throwOrReport (e, child);
                }
            }
        }}

    , initialDelay, period, unit);
}
----------------------------------------

public void call () {
    try {
        child.onNext (null);
    } catch (Throwable e) {
        try {
            worker.unsubscribe ();
        } finally {
            Exceptions.throwOrReport (e, child);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38932441_38940322_66_88
38932441_38940322_7_37
Title: Android checkbox checked in one activity and then button appears in another activity 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_pop_up_window);
    DisplayMetrics dm = new DisplayMetrics ();
    getWindowManager ().getDefaultDisplay ().getMetrics (dm);
    int width = dm.widthPixels;
    int height = dm.heightPixels;
    getWindow ().setLayout ((int) (width * .8), (int) (height * .6));
    Boolean yourBool = getIntent ().getBooleanExtra ("yourBoolName", false);
    Button fbbutton1 = (Button) findViewById (R.id.fbbutton1);
    if (yourBool) {
        fbbutton1.setVisibility (View.VISIBLE);
    }
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    initializeBubblesManager ();
    final Button add = (Button) findViewById (R.id.add);
    add.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            addNewBubble ();
            add.setEnabled (false);
        }}

    );
    CheckBox checkBox = (CheckBox) findViewById (R.id.add_fb);
    checkBox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            isCheckedValue = isChecked;
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38933586_38939448_1_25
38933586_38940692_1_47
Title: How to filter a collection of sets by intersection? 
----------------------------------------

Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    Collection < Set < Integer > > mergedSets = new ArrayList < > (collection.size ());
    while (! collection.isEmpty ()) {
        Set < Integer > currentSet = new HashSet < > (removeOneElement (collection));
        boolean mergedAny;
        do {
            mergedAny = false;
            Iterator < Set < Integer > > it = collection.iterator ();
            while (it.hasNext ()) {
                Set < Integer > candidate = it.next ();
                if (intersect (currentSet, candidate)) {
                    it.remove ();
                    currentSet.addAll (candidate);
                    mergedAny = true;
                }
            }
        } while (mergedAny);
        mergedSets.add (currentSet);
    }
    return mergedSets;
}
----------------------------------------

Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    Map < Integer, Set < Integer > > adjacents = new HashMap < > ();
    for (Set < Integer > integerSet : collection) {
        if (! integerSet.isEmpty ()) {
            Iterator < Integer > it = integerSet.iterator ();
            int node1 = it.next ();
            while (it.hasNext ()) {
                int node2 = it.next ();
                if (! adjacents.containsKey (node1)) {
                    adjacents.put (node1, new HashSet < > ());
                }
                if (! adjacents.containsKey (node2)) {
                    adjacents.put (node2, new HashSet < > ());
                }
                adjacents.get (node1).add (node2);
                adjacents.get (node2).add (node1);
            }
        }
    }
    Collection < Set < Integer > > result = new ArrayList < > ();
    Set < Integer > visited = new HashSet < > ();
    for (int start : adjacents.keySet ()) {
        if (! visited.contains (start)) {
            Set < Integer > resultSet = new HashSet < > ();
            Deque < Integer > stack = new ArrayDeque < > ();
            stack.push (start);
            while (! stack.isEmpty ()) {
                int node1 = stack.pop ();
                visited.add (node1);
                resultSet.add (node1);
                for (int node2 : adjacents.get (node1)) {
                    if (! visited.contains (node2)) {
                        stack.push (node2);
                    }
                }
            }
            result.add (resultSet);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38933586_38939448_1_25
38933586_38941069_51_63
Title: How to filter a collection of sets by intersection? 
----------------------------------------

Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    Collection < Set < Integer > > mergedSets = new ArrayList < > (collection.size ());
    while (! collection.isEmpty ()) {
        Set < Integer > currentSet = new HashSet < > (removeOneElement (collection));
        boolean mergedAny;
        do {
            mergedAny = false;
            Iterator < Set < Integer > > it = collection.iterator ();
            while (it.hasNext ()) {
                Set < Integer > candidate = it.next ();
                if (intersect (currentSet, candidate)) {
                    it.remove ();
                    currentSet.addAll (candidate);
                    mergedAny = true;
                }
            }
        } while (mergedAny);
        mergedSets.add (currentSet);
    }
    return mergedSets;
}
----------------------------------------

public static Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    UnionFind groups = new UnionFind ();
    for (Set < Integer > set : collection) {
        if (! set.isEmpty ()) {
            Iterator < Integer > it = set.iterator ();
            int first = groups.find (it.next ());
            while (it.hasNext ()) {
                groups.union (first, it.next ());
            }
        }
    }
    return groups.getGroups ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38933586_38940692_1_47
38933586_38941069_51_63
Title: How to filter a collection of sets by intersection? 
----------------------------------------

Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    Map < Integer, Set < Integer > > adjacents = new HashMap < > ();
    for (Set < Integer > integerSet : collection) {
        if (! integerSet.isEmpty ()) {
            Iterator < Integer > it = integerSet.iterator ();
            int node1 = it.next ();
            while (it.hasNext ()) {
                int node2 = it.next ();
                if (! adjacents.containsKey (node1)) {
                    adjacents.put (node1, new HashSet < > ());
                }
                if (! adjacents.containsKey (node2)) {
                    adjacents.put (node2, new HashSet < > ());
                }
                adjacents.get (node1).add (node2);
                adjacents.get (node2).add (node1);
            }
        }
    }
    Collection < Set < Integer > > result = new ArrayList < > ();
    Set < Integer > visited = new HashSet < > ();
    for (int start : adjacents.keySet ()) {
        if (! visited.contains (start)) {
            Set < Integer > resultSet = new HashSet < > ();
            Deque < Integer > stack = new ArrayDeque < > ();
            stack.push (start);
            while (! stack.isEmpty ()) {
                int node1 = stack.pop ();
                visited.add (node1);
                resultSet.add (node1);
                for (int node2 : adjacents.get (node1)) {
                    if (! visited.contains (node2)) {
                        stack.push (node2);
                    }
                }
            }
            result.add (resultSet);
        }
    }
    return result;
}
----------------------------------------

public static Collection < Set < Integer > > filter (Collection < Set < Integer > > collection) {
    UnionFind groups = new UnionFind ();
    for (Set < Integer > set : collection) {
        if (! set.isEmpty ()) {
            Iterator < Integer > it = set.iterator ();
            int first = groups.find (it.next ());
            while (it.hasNext ()) {
                groups.union (first, it.next ());
            }
        }
    }
    return groups.getGroups ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38941546_38941805_10_39
38941546_38941908_7_57
Title: search program in txt file java code 
----------------------------------------

public static void main (String [] args) {
    String tokens [] = null;
    String code, product, date;
    try {
        FileReader fr = new FileReader ("file.txt");
        BufferedReader br = new BufferedReader (fr);
        String line = br.readLine ();
        while (line != null) {
            tokens = line.split ("#");
            code = tokens [0];
            product = tokens [1];
            date = tokens [2];
            System.out.println ("this product name is " + product + " with " + code + " code and will expired in" + date.substring (12));
            line = br.readLine ();
        }
        br.close ();
        fr.close ();
    } catch (FileNotFoundException e) {
        System.out.println ("File not found exception.");
    } catch (IOException e) {
        System.out.println ("IO Eception occered.");
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String word = "";
    int val = 0;
    while (! word.matches ("quit")) {
        System.out.println ("Enter the word to be searched for");
        Scanner input = new Scanner (System.in);
        word = input.next ();
        Scanner file = new Scanner (new File ("stationMaster.txt"));
        while (file.hasNextLine ()) {
            String line = file.nextLine ();
            String arr [] = line.split ("#");
            try {
                if (arr [0].equalsIgnoreCase (word) || arr [1].equalsIgnoreCase (word)) {
                    System.out.println ();
                    String dateStrings [] = arr [2].split (" ");
                    System.out.print ("this product name is " + arr [1] + " with " + arr [0] + " code and will expire on ");
                    System.out.println (dateStrings [2] + " " + dateStrings [3] + " " + dateStrings [4]);
                    val = 1;
                    break;
                } else {
                    val = 0;
                    continue;
                }
            } catch (IndexOutOfBoundsException indexEx) {
                val = 0;
                continue;
            }
        }
        if (val == 0) {
            System.out.println ("Station does not exist");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38942947_38943024_1_12
38942947_38944205_1_12
Title: hide show button in android conditionally 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.mylayout);
    Button myButton = (Button) findViewById (R.id.button1);
    if (shouldShowButton ()) {
        myButton.setVisibility (View.VISIBLE);
    } else {
        myButton.setVisibility (View.GONE);
    }
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.mylayout);
    Button testButton = (Button) findViewById (R.id.testButtonId);
    if (testButton.getVisibility () == View.VISIBLE) {
        testButton.setVisibility (View.GONE);
    } else {
        testButton.setVisibility (View.VISIBLE);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38945879_38946381_56_77
38945879_38946823_9_29
Title: java swing partial transparency in JPanels shown as black 
----------------------------------------

protected void paintComponent (Graphics g) {
    Graphics2D g2 = (Graphics2D) g;
    Graphics2D imgG2 = img.createGraphics ();
    imgG2.setBackground (new Color (0, 0, 0, 0));
    imgG2.setColor (Color.red);
    imgG2.fillRect (0, 0, 100, 100);
    imgG2.clearRect (0, 0, 50, 50);
    imgG2.dispose ();
    g2.drawImage (img, 0, 0, null);
    g2.dispose ();
    super.paintComponent (g);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    Shape outer = new Rectangle (0, 0, getWidth (), getHeight ());
    Shape inner = new Rectangle (0, 0, 50, 50);
    Area area = new Area (outer);
    area.subtract (new Area (inner));
    g2d.setColor (getBackground ());
    g2d.fill (area);
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38955808_38956783_1_30
38955808_38960668_7_28
Title: Java Scanner break waiting for input 
----------------------------------------

public static void main (String arg []) throws Exception {
    Callable < Integer > k = new Callable < Integer > () {
        @Override
        public Integer call () throws Exception {
            System.out.println ("Enter x :");
            return new Scanner (System.in).nextInt ();
        }}

    ;
    Long start = System.currentTimeMillis ();
    int x = 0;
    ExecutorService l = Executors.newFixedThreadPool (1);
    Future < Integer > g;
    g = l.submit (k);
    while (System.currentTimeMillis () - start < 10000 && ! g.isDone ()) {
    }
    if (g.isDone ()) {
        x = g.get ();
    }
    g.cancel (true);
    if (x == 0) {
        System.out.println ("Shut Down as no value is enter after 10s");
    } else {
        System.out.println ("Shut Down as X is entered " + x);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    try {
        while (true) {
            System.out.println ("Insert int here:");
            Scanner s = new Scanner (System.in);
            FutureTask < Integer > task = new FutureTask < > (() -> {
                return s.nextInt ();
            });
            Thread thread = new Thread (task);
            thread.setDaemon (true);
            thread.start ();
            Integer nextInt = task.get (5, TimeUnit.MINUTES);
            System.out.println ("Next int read: " + nextInt + "\n----------------");
        }
    } catch (TimeoutException interruptedException) {
        System.out.println ("Too slow, i'm going home");
        System.exit (0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38956056_38956195_10_28
38956056_38956433_1_16
Title: Using for loop and charAt to check if each letter appears exactly twice in a word 
----------------------------------------

public static boolean isDoubloon (final String s) {
    final String l = s.toLowerCase ();
    for (int i = 0;
    i < l.length (); i ++) {
        int count = 0;
        for (int j = 0;
        j < l.length (); j ++) {
            if (l.charAt (i) == l.charAt (j)) {
                count ++;
                if (2 < count) {
                    return false;
                }
            }
        }
        if (1 == count) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static void isDoubloon (String s) {
    String l = s.toLowerCase ();
    Map < Character, Integer > counts = new HashMap ();
    for (int i = 0;
    i < l.length () - 1; i ++) {
        int prevValue = counts.getOrDefault (l.charAt (i), 0);
        counts.put (l.charAt (i), prevValue + 1);
    }
    for (Map.Entry < Character, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () != 2) {
            System.err.println ("False, This is not a doubloon");
        }
    }
    System.out.println ("True, This is a doubloon");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38956056_38956195_10_28
38956056_45511760_1_13
Title: Using for loop and charAt to check if each letter appears exactly twice in a word 
----------------------------------------

public static boolean isDoubloon (final String s) {
    final String l = s.toLowerCase ();
    for (int i = 0;
    i < l.length (); i ++) {
        int count = 0;
        for (int j = 0;
        j < l.length (); j ++) {
            if (l.charAt (i) == l.charAt (j)) {
                count ++;
                if (2 < count) {
                    return false;
                }
            }
        }
        if (1 == count) {
            return false;
        }
    }
    return true;
}
----------------------------------------

private boolean isDoubloon (String s) {
    String convertWord = s.toLowerCase ();
    char [] letter = convertWord.toCharArray ();
    int [] count = new int [26];
    for (int letters = 0;
    letters < letter.length; letters ++) {
        char index = letter [letters];
        count [index - 97] ++;
    }
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0 && count [i] != 2) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38956056_38956433_1_16
38956056_45511760_1_13
Title: Using for loop and charAt to check if each letter appears exactly twice in a word 
----------------------------------------

public static void isDoubloon (String s) {
    String l = s.toLowerCase ();
    Map < Character, Integer > counts = new HashMap ();
    for (int i = 0;
    i < l.length () - 1; i ++) {
        int prevValue = counts.getOrDefault (l.charAt (i), 0);
        counts.put (l.charAt (i), prevValue + 1);
    }
    for (Map.Entry < Character, Integer > entry : counts.entrySet ()) {
        if (entry.getValue () != 2) {
            System.err.println ("False, This is not a doubloon");
        }
    }
    System.out.println ("True, This is a doubloon");
}
----------------------------------------

private boolean isDoubloon (String s) {
    String convertWord = s.toLowerCase ();
    char [] letter = convertWord.toCharArray ();
    int [] count = new int [26];
    for (int letters = 0;
    letters < letter.length; letters ++) {
        char index = letter [letters];
        count [index - 97] ++;
    }
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] != 0 && count [i] != 2) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38956758_38956820_1_11
38956758_38957176_1_13
Title: Java 8 Filtering with condition and collecting custom Map 
----------------------------------------

protected List < Map < String, Object > > populate (List < SomeObject > someObjects, String string) {
    return someObjects.stream ().filter (someObject -> string == null || string.equals (someObject.getName ())).map (someObject -> new HashMap < String, Object > () {

        {
            put ("someCustomField1", someObject.Field1 ());
            put ("someCustomField2", someObject.Field2 ());
            put ("someCustomField3", someObject.Field3 ());
        }

    }

    ).collect (Collectors.toList ());
}
----------------------------------------

protected List < Map < String, Object > > populate (List < SomeObject > someObjects, String string) {
    Stream < SomeObject > stream = someObjects.stream ();
    if (string != null) {
        stream = stream.filter (s -> string.equals (s.getName ()));
    }
    return stream.map (someObject -> {
        Map < String, Object > map = new LinkedHashMap < > ();
        map.put ("someCustomField1", someObject.Field1 ());
        map.put ("someCustomField2", someObject.Field2 ());
        map.put ("someCustomField3", someObject.Field3 ());
        return map;
    }).collect (Collectors.toList ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38965824_38967919_10_33
38965824_38968228_10_56
Title: Looping through different arrays lists 
----------------------------------------

public static void main (String [] args) {
    List < String > list1 = new ArrayList < > ();
    List < String > list2 = new ArrayList < > ();
    List < String > list3 = new ArrayList < > ();
    list1.add ("List11");
    list1.add ("List12");
    list1.add ("List14");
    print (list1);
    System.out.println ();
    list2.add ("List21");
    list2.add ("List22");
    print (list2);
    System.out.println ();
    list3.add ("List3");
    print (list3);
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    List < String > list1 = new ArrayList < > ();
    List < String > list2 = new ArrayList < > ();
    List < String > list3 = new ArrayList < > ();
    list1.add ("List11");
    list1.add ("List12");
    list1.add ("List13");
    list2.add ("B1");
    list2.add ("B2");
    list3.add ("C1");
    int a = list1.size ();
    int b = list2.size ();
    int c = list3.size ();
    int max = Math.max (a, b);
    max = Math.max (max, c);
    for (int i = 0;
    i < max; i ++) {
        if (i < list1.size ()) {
            System.out.println (list1.get (i));
        }
        if (i < list2.size ()) {
            System.out.println (list2.get (i));
        }
        if (i < list3.size ()) {
            System.out.println (list3.get (i));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38967106_38967377_6_26
38967106_38967576_19_39
Title: Removing Common Values from Two Array Lists 
----------------------------------------

public static void main (String args []) {
    Integer idArr [] = {1000, 1001};
    String unitArr2 [] = {"1000  Yes 3   33", "1001   No  No  22", "1002   No  Yes 4", "1003    No  No  13"};
    ArrayList < String > list = new ArrayList < String > (Arrays.asList (unitArr2));
    for (int id : idArr) {
        Iterator < String > iterator = list.iterator ();
        while (iterator.hasNext ()) {
            String unit = iterator.next ();
            if (Integer.parseInt (unit.split ("\t") [0]) == id) {
                iterator.remove ();
                break;
            }
        }
    }
    for (String unit : list) {
        System.out.println (unit);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list1 = new ArrayList < > ();
    list1.add (1000);
    list1.add (1001);
    List < String > list2 = new ArrayList < > ();
    list2.add ("1000\tYes\t3\t33");
    list2.add ("1001\tNo\tNo\t22");
    list2.add ("1002\tNo\tYes\t4");
    list2.add ("1003\tNo\tNo\t13");
    List < String > result = list2.stream ().filter (s -> filter (list1, s)).collect (Collectors.toList ());
    for (String s : result) {
        System.out.println ("TRACER " + s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3897668_3897685_13_21
3897668_3898237_1_15
Title: Merge two Hash Maps Android 
----------------------------------------

public void putAll (Map < ? extends Integer, ? extends T > m) {
    for (Map.Entry < ? extends Integer, ? extends T > entry : m.entrySet ()) {
        int i = entry.getKey ();
        while (this.containsKey (i)) {
            i ++;
        }
        this.put (i, entry.getValue ());
    }
}
----------------------------------------

@Override
public void putAll (Map < ? extends String, ? extends Object > m) {
    for (Map.Entry < ? extends String, ? extends Object > entry : m.entrySet ()) {
        String keyWord = "";
        for (String s : this.keySet ()) {
            keyWord = s.substring (0, s.length () - 1);
            break;
        }
        int i = 0;
        while (this.containsKey (i)) {
            i ++;
        }
        this.put (keyWord + i, entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38977238_39039393_1_30
38977238_39103781_1_21
Title: <error-page> is not working for servlet 
----------------------------------------

protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html;charset=UTF-8");
    PrintWriter out = response.getWriter ();
    DAL db = null;
    ResultSet rs = null;
    parameter p1 = new parameter ();
    long myId = 0;
    try {
        db = new DAL ();
        String name = request.getParameter ("fn");
        db.setQuery ("{call usp_StudentInsertData(?,?)}");
        db.setInParam (1, name);
        db.setInParam (2, 1000);
        db.insertUpdate ();
        out.println ("insert");
        response.sendRedirect ("home.jsp");
    } catch (Exception e) {
    } finally {
    }
}
----------------------------------------

protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    PrintWriter out = response.getWriter ();
    try {
        String a = null;
        a.toString ();
    } catch (Exception e) {
        throw new ServletException (e);
    } finally {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
38985806_38986105_14_26
38985806_38986189_1_20
Title: Returning wrong percentage 
----------------------------------------

public double calculate (int size, int count) {
    int [] birthdays = new int [size];
    Random r = new Random ();
    for (int i = 1;
    i <= count; i ++) {
        for (int j = 0;
        j < size; j ++) {
            birthdays [j] = r.nextInt (365) + 1;
        }
        sameDayBirthday (birthdays);
    }
    return (match * (100.0 / (double) count));
}
----------------------------------------

public double calculate (int size, int count) {
    int match = 0;
    Random r = new Random ();
    for (int i = 1;
    i <= count; i ++) {
        Set < Integer > birthdays = new HashSet < Integer > (size);
        for (int j = 0;
        j < size; j ++) {
            Integer birthday = r.nextInt (365) + 1;
            if (birthdays.contains (birthday)) {
                match ++;
                break;
            } else {
                birthdays.add (birthday);
            }
        }
    }
    return (match * (100.0 / count));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39003041_39004060_14_28
39003041_39014151_40_50
Title: Trigger an Action when ImageView is tapped three times in Specific time - Android 
----------------------------------------

public void onClick (View v) {
    switch (v.getId ()) {
        case (R.id.myimg) :
            {
                ++ i;
                if (i % 3 == 0) {
                    Toast.makeText (this, "image is clicked", Toast.LENGTH_LONG).show ();
                }
                break;
            }}
}
----------------------------------------

public void onClick (View view) {
    if (i == 0) {
        ++ i;
        handler.sendEmptyMessageDelayed (100, 3000);
    } else if (i == 2) {
        Toast.makeText (TestA.this, "Three Touch Clicked", Toast.LENGTH_SHORT).show ();
        i = 0;
        handler.removeMessages (100);
    } else ++ i;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39007382_39011633_14_27
39007382_39011633_72_84
Title: Moving Two Rectangles with keyboard in Javafx 
----------------------------------------

public void handle (long now) {
    leftPaddleY += leftPaddleDY;
    rightPaddleY += rightPaddleDY;
    if (leftPaddleY < 0) {
        leftPaddleY = 0;
    }
    if (rightPaddleY < 0) {
        rightPaddleY = 0;
    }
    leftPaddle.setY (leftPaddleY);
    rightPaddle.setY (rightPaddleY);
}
----------------------------------------

public void handle (KeyEvent event) {
    switch (event.getCode ()) {
        case W :
        case S :
            leftPaddleDY = 0;
            break;
        case UP :
        case DOWN :
            rightPaddleDY = 0;
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39007382_39011633_14_27
39007382_39011633_91_108
Title: Moving Two Rectangles with keyboard in Javafx 
----------------------------------------

public void handle (long now) {
    leftPaddleY += leftPaddleDY;
    rightPaddleY += rightPaddleDY;
    if (leftPaddleY < 0) {
        leftPaddleY = 0;
    }
    if (rightPaddleY < 0) {
        rightPaddleY = 0;
    }
    leftPaddle.setY (leftPaddleY);
    rightPaddle.setY (rightPaddleY);
}
----------------------------------------

public void handle (KeyEvent event) {
    switch (event.getCode ()) {
        case W :
            leftPaddleDY = - 6;
            break;
        case S :
            leftPaddleDY = 6;
            break;
        case UP :
            rightPaddleDY = - 6;
            break;
        case DOWN :
            rightPaddleDY = 6;
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39007382_39011633_72_84
39007382_39011633_91_108
Title: Moving Two Rectangles with keyboard in Javafx 
----------------------------------------

public void handle (KeyEvent event) {
    switch (event.getCode ()) {
        case W :
        case S :
            leftPaddleDY = 0;
            break;
        case UP :
        case DOWN :
            rightPaddleDY = 0;
            break;
    }
}
----------------------------------------

public void handle (KeyEvent event) {
    switch (event.getCode ()) {
        case W :
            leftPaddleDY = - 6;
            break;
        case S :
            leftPaddleDY = 6;
            break;
        case UP :
            rightPaddleDY = - 6;
            break;
        case DOWN :
            rightPaddleDY = 6;
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39011281_39011396_2_33
39011281_39011600_1_22
Title: How to separate a list into two lists? 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < > ();
    Map < String, List < String > > tagMap = new HashMap < > ();
    list.add ("A7750 0.0 28.30");
    list.add ("A7750 0.3 28.30");
    list.add ("A7741 0.0 31.40");
    list.add ("A7741 0.1 31.40");
    list.add ("A7752 0.5 31.40");
    list.add ("A7752 0.7 31.40");
    for (String entry : list) {
        String tag = entry.split (" ") [0];
        List < String > tagList = tagMap.get (tag);
        if (tagList == null) {
            tagList = new ArrayList < > ();
            tagMap.put (tag, tagList);
        }
        tagList.add (entry);
    }
    for (Map.Entry < String, List < String > > entry : tagMap.entrySet ()) {
        System.out.println (entry.getKey () + ": " + entry.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < String > ();
    ArrayList < String > list1 = new ArrayList < String > ();
    ArrayList < String > list2 = new ArrayList < String > ();
    list.add ("A7750 0.0 28.30");
    list.add ("A7750 0.3 28.30");
    list.add ("A7741 0.0 31.40");
    list.add ("A7741 0.1 31.40");
    String str [] = list.get (0).split (" ");
    list1.add (list.get (0));
    for (int i = 1;
    i < list.size (); i ++) {
        String str1 [] = list.get (i).split (" ");
        boolean tag = str [0].equals (str1 [0]);
        if (tag) {
            list1.add (list.get (i));
        } else {
            list2.add (list.get (i));
        }
    }
    System.out.println (list1);
    System.out.println (list2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39026344_39026621_1_13
39026344_39027487_21_34
Title: want to put 'play' icon for some of the listview items 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    LayoutInflater inflater = context.getLayoutInflater ();
    View listViewItem = inflater.inflate (R.layout.list_layout, null, true);
    TextView textViewName = (TextView) listViewItem.findViewById (R.id.textViewName);
    ImageView image = (ImageView) listViewItem.findViewById (R.id.imageView);
    Button playButton = (ImageView) listViewItem.findViewById (R.id.playButtonView);
    if (playButtonShouldBeVisible) playButton.setVisibility (View.VISIBLE);

    textViewName.setText (names [position]);
    image.setImageResource (imageid [position]);
    return listViewItem;
}
----------------------------------------

@Override
public View getView (int i, View view, ViewGroup viewGroup) {
    LayoutInflater inflater = mContext.getLayoutInflater ();
    view = inflater.inflate (R.layout.item, null);
    TextView tv = (TextView) view.findViewById (R.id.tv);
    ImageView iv = (ImageView) view.findViewById (R.id.iv);
    tv.setText (names [i]);
    iv.setImageResource (imageid [i]);
    if (set.contains (i)) {
        Button button = (Button) view.findViewById (R.id.playButton);
        button.setVisibility (View.VISIBLE);
    }
    return view;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39037760_39037846_1_30
39037760_39038018_1_27
Title: onBackPress in IF ELSE statement doesn't work properly 
----------------------------------------

@Override
public void onBackPressed () {
    int count = getFragmentManager ().getBackStackEntryCount ();
    DrawerLayout drawer = (DrawerLayout) findViewById (R.id.drawer_layout);
    if (drawer.isDrawerOpen (GravityCompat.START)) {
        drawer.closeDrawer (GravityCompat.START);
    } else {
        if (mWebView.canGoBack ()) {
            mWebView.goBack ();
        } else {
            if (count == 0) {
                getFragmentManager ().popBackStack ();
                HomeFragment homefragment = new HomeFragment ();
                FragmentManager manager = getSupportFragmentManager ();
                manager.beginTransaction ().replace (R.id.relativelayout_for_fragment, homefragment, homefragment.getTag ()).commit ();
            } else {
                super.onBackPressed ();
            }
        }
    }
}
----------------------------------------

@Override
public void onBackPressed () {
    int count = getFragmentManager ().getBackStackEntryCount ();
    DrawerLayout drawer = (DrawerLayout) findViewById (R.id.drawer_layout);
    if (drawer.isDrawerOpen (GravityCompat.START)) {
        drawer.closeDrawer (GravityCompat.START);
    } else if (mWebView.canGoBack ()) {
        mWebView.goBack ();
    } else if (count != 0) {
        getFragmentManager ().popBackStack ();
        HomeFragment homefragment = new HomeFragment ();
        FragmentManager manager = getSupportFragmentManager ();
        manager.beginTransaction ().replace (R.id.relativelayout_for_fragment, homefragment, homefragment.getTag ()).commit ();
    } else {
        super.onBackPressed ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39039075_39039388_10_25
39039075_39039388_34_45
Title: notify() and notifyAll() doesn't work in my java code 
----------------------------------------

public void run () {
    synchronized (sb) {
        for (int i = 0;
        i < 10; i ++) {
            try {
                sb.append (i + " ");
                System.out.println ("Appending ... ");
            } catch (Exception e) {
            }
        }
        sb.notify ();
        done = true;
    }
}
----------------------------------------

public void run () {
    System.out.println ("Rreached");
    synchronized (p.sb) {
        try {
            while (! p.done) {
                p.sb.wait ();
            }
        } catch (Exception e) {
        }
        System.out.println (p.sb);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39043204_39043726_1_11
39043204_39416727_1_8
Title: Save huge amount of Strings in file during program execution in Java 
----------------------------------------

public static void generateTag (final String tagName, final String name, final String value, final BufferedWriter bw) {
    bw.write ("<tag:");
    bw.write (tagName);
    bw.write (" name=\"");
    bw.write (name);
    bw.write ("\"><![CDATA[");
    bw.write (value);
    bw.write ("</tag:");
    bw.write (tagName);
    bw.write ("><![CDATA[");
}
----------------------------------------

public static CharSequence generateTag (final String tagName, final String name, final String value) {
    StringBuilder attribute = new StringBuilder (80);
    try {
        generateTag (tagName, name, value, attribute);
    } catch (IOException ex) {
        throw new AssertionError (ex);
    }
    return attribute;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39043204_39416727_1_8
39043204_39416727_9_22
Title: Save huge amount of Strings in file during program execution in Java 
----------------------------------------

public static CharSequence generateTag (final String tagName, final String name, final String value) {
    StringBuilder attribute = new StringBuilder (80);
    try {
        generateTag (tagName, name, value, attribute);
    } catch (IOException ex) {
        throw new AssertionError (ex);
    }
    return attribute;
}
----------------------------------------

public static void generateTag (final String tagName, final String name, final String value, Appendable attribute) throws IOException {
    attribute.append ("<tag:");
    attribute.append (tagName);
    attribute.append (" name=\"");
    attribute.append (name);
    attribute.append ("\"><![CDATA[");
    attribute.append (value);
    attribute.append ("</tag:");
    attribute.append (tagName);
    attribute.append ("><![CDATA[");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39046447_39046529_1_22
39046447_39046750_1_13
Title: Can i use for each in this program instead of for loop ? If yes them please show me how 
----------------------------------------

public static void main (String args []) {
    int [] array1 = {1, 2, 3, 4, 5};
    int [] array2 = {2, 3, 1, 0, 5};
    for (int num1 : array1) {
        boolean found = false;
        for (int num2 : array2) {
            if (num1 == num2) {
                found = true;
                break;
            }
        }
        if (! found) {
            System.out.println ("Missing number is " + num1);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array1 = {1, 2, 3, 4, 5};
    int [] array2 = {2, 3, 1, 0, 5};
    for (int a : array1) {
        boolean found = false;
        for (int b : array2) {
            if (a == b) found = true;

        }
        if (! found) System.out.println ("The missing number is " + a);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39051514_39071459_121_132
39051514_39071459_137_145
Title: Spinner In Custom ListView Randomly Changed When Scrolling 
----------------------------------------

public void onClick (View v) {
    if (((CheckBox) v).isChecked ()) {
        checkBoxState [position] = true;
        viewHolder.spinner.setEnabled (true);
        viewHolder.spinner.setClickable (true);
    } else {
        checkBoxState [position] = false;
        viewHolder.spinner.setEnabled (false);
        viewHolder.spinner.setClickable (false);
    }
}
----------------------------------------

public void onClick (View v) {
    a.clear ();
    for (int i = 0;
    i < listData.size (); i ++) {
        newsItem = listData.get (i);
        a.add (newsItem.getJumlah ().toString ());
    }
    System.out.println ("Pak : " + a);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39052193_39052316_22_71
39052193_39052740_1_36
Title: avoid nesting foreach loop in java 
----------------------------------------

public void average () {
    int stitchRed = 203;
    int stitchGreen = 164;
    int stitchBlue = 189;
    Color stitchColor = new Color (stitchRed, stitchGreen, stitchBlue);
    for (Color i : dmc) {
        for (Color j : dmc) {
            for (Color k : dmc) {
                int indexI = Arrays.asList (dmc).indexOf (i);
                int indexJ = Arrays.asList (dmc).indexOf (j);
                int indexK = Arrays.asList (dmc).indexOf (k);
                if ((indexI <= indexJ) && (indexJ <= indexK)) {
                    int iRed = i.getRed ();
                    int jRed = j.getRed ();
                    int kRed = k.getRed ();
                    int iGreen = i.getGreen ();
                    int kGreen = k.getGreen ();
                    int jGreen = j.getGreen ();
                    int iBlue = i.getBlue ();
                    int jBlue = j.getBlue ();
                    int kBlue = k.getBlue ();
                    int redAverage = (iRed + jRed + kRed) / 3;
                    int greenAverage = (iGreen + jGreen + kGreen) / 3;
                    int blueAverage = (iBlue + jBlue + kBlue) / 3;
                    Color colorAverage = new Color (redAverage, greenAverage, blueAverage);
                    if (colorAverage.equals (stitchColor)) {
                        System.out.println ("The color match is: " + i + ", " + j + ", " + k);
                    }
                }
            }
        }
    }
    System.out.println ("no more matches");
}
----------------------------------------

public void average () {
    IODialog dialog = new IODialog ();
    int stitchRed = dialog.readInt ("Enter red value: ");
    int stitchGreen = dialog.readInt ("Enter green value: ");
    int stitchBlue = dialog.readInt ("Enter blue value: ");
    Color stitchColor = new Color (stitchRed, stitchGreen, stitchBlue);
    for (int indexI = 0;
    indexI < dmc.length; indexI ++) {
        Color i = dmc [indexI];
        for (int indexJ = indexI;
        indexJ < dmc.length; indexJ ++) {
            Color j = dmc [indexJ];
            for (int indexK = indexJ;
            indexK < dmc.length; indexK ++) {
                Color k = dmc [indexK];
                int iRed = i.getRed ();
                int jRed = j.getRed ();
                int kRed = k.getRed ();
                int iGreen = i.getGreen ();
                int jGreen = j.getGreen ();
                int kGreen = k.getGreen ();
                int iBlue = i.getBlue ();
                int jBlue = j.getBlue ();
                int kBlue = k.getBlue ();
                int redAverage = (iRed + jRed + kRed) / 3;
                int greenAverage = (iGreen + jGreen + kGreen) / 3;
                int blueAverage = (iBlue + jBlue + kBlue) / 3;
                Color colorAverage = new Color (redAverage, greenAverage, blueAverage);
                if (colorAverage.equals (stitchColor)) {
                    System.out.println ("The color match is: " + i + ", " + j + ", " + k);
                }
            }
        }
    }
    System.out.println ("no more matches");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39079831_39079925_1_13
39079831_39079980_1_16
Title: "Java ArraysReversing values of one array to another" 
----------------------------------------

public static void main (String [] args) {
    int [] array1 = {5, 6};
    int [] array2 = new int [array1.length];
    int i;
    int j = array1.length - 1;
    for (i = 0; i < array1.length; i ++) {
        array2 [i] = array1 [j];
        j --;
    }
    for (int num : array2) {
        System.out.println (num);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array1 = {5, 6};
    int [] array2 = new int [2];
    int i;
    int j = 1;
    for (i = 0; i <= 1; i ++) {
        array2 [i] = array1 [j];
        j --;
    }
    for (int num : array2) System.out.println (num);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39098680_39098788_1_16
39098680_39099048_1_15
Title: Stack Overflow Error on recursion java 
----------------------------------------

public int find (int [] route) {
    int max = 1;
    int currentMax = 1;
    for (int i = 0;
    i < route.length - 1; i ++) {
        if (route [i] > route [i + 1]) {
            currentMax ++;
            if (currentMax > max) {
                max = currentMax;
            }
        } else {
            currentMax = 1;
        }
    }
    return max;
}
----------------------------------------

public static int find (long [] route) {
    int maxIdx = 0;
    int maxCount = 1;
    for (int i = 1, c = 0;
    i < route.length; i ++) {
        if (route [i] < route [i - 1]) {
            if (++ c >= maxCount) {
                maxCount = c;
                maxIdx = i - c;
            }
        } else {
            c = 0;
        }
    }
    return route.length == 0 ? - 1 : maxIdx;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39101623_39101785_1_10
39101623_39101800_1_10
Title: Reversing a user input digit using methods 
----------------------------------------

public static int reverseDigit (int num) {
    int reverse = 0;
    while (num != 0) {
        reverse = reverse * 10;
        reverse = reverse + num % 10;
        num = num / 10;
    }
    return reverse;
}
----------------------------------------

public static int reverseDigit (int num) {
    int result = 0;
    while (num != 0) {
        result *= 10;
        int temp = num % 10;
        result += temp;
        num /= 10;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3910507_3910602_1_11
3910507_3912041_1_11
Title: Why does Arrays.toString(values).trim() produce [bracketed text]? 
----------------------------------------

public static String toString (Object [] values) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < values.length; i ++) {
        if (i != 0) sb.append (", ");

        sb.append (values [i].toString ());
    }
    return sb.toString ();
}
----------------------------------------

static String toString (Object...strings) {
    if (strings.length == 0) return "";

    StringBuilder sb = new StringBuilder ();
    int last = strings.length - 1;
    for (int i = 0;
    i < last; i ++) sb.append (strings [i]).append (",");

    sb.append (strings [last]);
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39107418_39107572_1_11
39107418_39107589_3_15
Title: how to print alternate fibonacci number by using java programing? 
----------------------------------------

public static void main (String [] args) {
    int n = 0, p = 1, k, count = 10;
    for (int i = 0;
    i < count; ++ i) {
        k = n + p;
        if (i % 2 == 0) System.out.println (" " + k);

        n = p;
        p = k;
    }
}
----------------------------------------

public static void main (String args []) {
    int n = 0, p = 1, k, count = 10;
    System.out.println (n);
    for (int i = 2;
    i < count; ++ i) {
        if (i % 2 == 0) continue;

        k = n + p;
        System.out.println (" " + k);
        n = p;
        p = k;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39112288_39113029_1_12
39112288_39141568_15_29
Title: Menu Item onClickListener for fragments 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    int id = item.getItemId ();
    if (id == R.id.action_settings) {
    } else if (id == R.id.menu_share) {
    }

    return super.onOptionsItemSelected (item);
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.action_settings :
            Log.d ("", "action Settings Clicked !!");
            break;
        case R.id.menu_share :
            Log.d ("", "action menu_share Clicked !!");
            break;
        default :
            return super.onOptionsItemSelected (item);
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------
