$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37538379_37538736_7_18
37538379_37539080_3_18
Title: How to split different type of string in a List 
----------------------------------------

public static void main (String [] args) {
    String [] ss = {"a-xyz", "b-yzx", "c-aaa", "d-rrr", "a-qqq", "b-hhh"};
    List < String > ll = new ArrayList < > ();
    ll.addAll (Arrays.asList (ss));
    List < String > result = new ArrayList < > ();
    for (String s : ll) {
        result.add (s.split ("-") [1]);
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < > ();
    list.add ("a-xyz");
    list.add ("b-yzx");
    list.add ("c-aaa");
    list.add ("d-rrr");
    list.add ("a-qqq");
    list.add ("b-hhh");
    for (String st : list) {
        int index = list.indexOf (st);
        list.set (index, st.replaceFirst ("\\w-", ""));
    }
    for (String st : list) {
        System.out.println (st);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37541279_37541701_4_21
37541279_37541777_15_26
Title: JavaFX - centered Text in Scene 
----------------------------------------

public void start (Stage primaryStage) {
    try {
        StackPane root = new StackPane ();
        Text text2 = new Text ("I will be aligned TOPLEFT");
        Text text = new Text (" Level 2 \n\n" + "Press ENTER to start a new game");
        text.setTextAlignment (TextAlignment.CENTER);
        root.getChildren ().addAll (text2, text);
        StackPane.setAlignment (text2, Pos.TOP_LEFT);
        StackPane.setAlignment (text, Pos.CENTER);
        Scene scene = new Scene (root, 400, 400);
        primaryStage.setScene (scene);
        primaryStage.show ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    Text waitingForKey = new Text ("Level 2 \n\n" + "Press ENTER to start a new game");
    waitingForKey.setTextAlignment (TextAlignment.CENTER);
    waitingForKey.setFont (new Font (18));
    waitingForKey.setFill (Color.ALICEBLUE);
    StackPane root = new StackPane ();
    root.getChildren ().add (waitingForKey);
    Scene scene = new Scene (root, 320, 240, Color.BLACK);
    primaryStage.setTitle ("Test");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
375420_1231165_1_16
375420_375479_17_28
Title: Java equivalent to PHP's preg_replace_callback 
----------------------------------------

public String replaceMatches (String string, Callback callback) {
    String result = "";
    final Matcher matcher = this.pattern.matcher (string);
    int lastMatch = 0;
    while (matcher.find ()) {
        final MatchResult matchResult = matcher.toMatchResult ();
        final String replacement = callback.foundMatch (matchResult);
        result += string.substring (lastMatch, matchResult.start ()) + replacement;
        lastMatch = matchResult.end ();
    }
    if (lastMatch < string.length ()) result += string.substring (lastMatch);

    return result;
}
----------------------------------------

public String replaceMatches (String string, Callback callback) {
    final Matcher matcher = this.pattern.matcher (string);
    while (matcher.find ()) {
        final MatchResult matchResult = matcher.toMatchResult ();
        final String replacement = callback.foundMatch (matchResult);
        string = string.substring (0, matchResult.start ()) + replacement + string.substring (matchResult.end ());
        matcher.reset (string);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37542302_37607121_105_122
37542302_37607121_128_140
Title: Could not render red5 recorded media stream 
----------------------------------------

public void resultReceived (IPendingServiceCall call) {
    System.out.println ("connectCallback");
    ObjectMap < ?, ? > map = (ObjectMap < ?, ? >) call.getResult ();
    String code = (String) map.get ("code");
    if ("NetConnection.Connect.Rejected".equals (code)) {
        System.out.printf ("Rejected: %s\n", map.get ("description"));
        client.disconnect ();
    } else if ("NetConnection.Connect.Success".equals (code)) {
        client.createStream (new CreateStreamCallback ());
        Object result = call.getResult ();
        System.out.println ("Red5ClientTest.main()");
    } else {
        System.out.printf ("Unhandled response code: %s\n", code);
    }

}
----------------------------------------

public void resultReceived (IPendingServiceCall call) {
    System.out.println ("resultReceived: " + call);
    int streamId = ((Number) call.getResult ()).intValue ();
    System.out.println ("stream id: " + streamId);
    if (sourceStreamName.endsWith (".flv") || sourceStreamName.endsWith (".f4v") || sourceStreamName.endsWith (".mp4")) {
        client.play (streamId, sourceStreamName, 0, - 1);
    } else {
        client.play (streamId, sourceStreamName, - 1, 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37543037_37543354_1_13
37543037_37544053_1_15
Title: Reversing a singly-linked list 
----------------------------------------

public E < T > reverse () {
    E < T > previous = null;
    E < T > current = this;
    E < T > next = this.next;
    while (next != null) {
        current.next = previous;
        previous = current;
        current = next;
        next = current.next;
    }
    current.next = previous;
    return current;
}
----------------------------------------

public E < T > reverse () {
    E < T > n = this;
    E < T > last = null;
    while (n.next != null) {
        E < T > temp = n.next;
        n.next = last;
        last = n;
        n = temp;
    }
    n.next = last;
    return n;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37548350_37613800_2_24
37548350_37631118_2_11
Title: Is it possible to register all classes within a package as Spring beans 
----------------------------------------

public static void main (String [] args) throws Exception {
    String packageName = args [0];
    JCodeModel codeModel = new JCodeModel ();
    JDefinedClass springConfig = codeModel._package (packageName)._class ("SpringConfig");
    springConfig.annotate (Configuration.class);
    for (ClassPath.ClassInfo classInfo : ClassPath.from (PackageBeanGenerator.class.getClassLoader ()).getTopLevelClasses (packageName)) {
        Class < ? > type = classInfo.load ();
        String beanName = CaseFormat.UPPER_CAMEL.to (CaseFormat.LOWER_CAMEL, type.getSimpleName ());
        JMethod beanMethod = springConfig.method (JMod.PUBLIC, type, beanName);
        beanMethod.annotate (Bean.class);
        beanMethod.body ()._return (JExpr._new (codeModel._ref (type)));
    }
    codeModel.build (new File ("/path/to/output/folder"));
}
----------------------------------------

public static void main (String [] args) {
    GenericApplicationContext context = new GenericApplicationContext ();
    ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner (context, false);
    scanner.addIncludeFilter ((metadataReader, metadataReaderFactory) -> true);
    scanner.scan ("net.company.name");
    context.refresh ();
    A a = context.getBean (A.class);
    System.out.println (a.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37548936_37550358_2_29
37548936_37554410_1_30
Title: java nested loop logic for triangle's left side 
----------------------------------------

public static void main (String [] args) {
    int levels = 8;
    int lastLevelWidth = levels * 2 + 1;
    for (int i = 0;
    i < levels; i ++) {
        int blankPositions = (lastLevelWidth - 1) / 2 - i;
        for (int j = 0;
        j < blankPositions; j ++) print (" ");

        int levelWidth = i * 2 + 1;
        int numberPositionsPerSide = (levelWidth - 1) / 2;
        for (int j = 0;
        j < numberPositionsPerSide; j ++) {
            print (Math.pow (2, j));
        }
        print (Math.pow (2, i));
        for (int j = numberPositionsPerSide - 1;
        j >= 0; j --) {
            print (Math.pow (2, j));
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int iteration = 0;
    for (int centerColumn = 1;
    centerColumn <= 128; centerColumn *= 2) {
        for (int j = 8;
        j > iteration; j --) {
            System.out.printf ("%7s", "");
        }
        for (int leftSide = 1;
        leftSide < centerColumn; leftSide *= 2) {
            System.out.printf ("%7d", leftSide);
        }
        for (int rightSide = centerColumn;
        rightSide > 0; rightSide /= 2) {
            System.out.printf ("%7d", rightSide);
        }
        iteration ++;
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37552274_37552513_4_19
37552274_37552578_1_20
Title: change iteration variable within for loop 
----------------------------------------

public static void main (String...orange) {
    String [] prmArray = {"[]", "int", "[]", "[]", "float", "[]", "[]", "[]", "string"};
    Stack < String > stack = new Stack < String > ();
    for (String str : prmArray) {
        if (str.equals ("[]")) stack.push (str);
        else {
            while (! stack.isEmpty ()) str += stack.pop ();

            System.out.print (str + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] prmArray = {"[]", "int", "[]", "[]", "float", "[]", "[]", "[]", "string"};
    String ps = "";
    String br_string = "";
    for (int i = 0;
    i < prmArray.length; i ++) {
        if (prmArray [i].equals ("[]")) {
            br_string += prmArray [i];
        } else {
            br_string = prmArray [i] + br_string + " ";
            ps += br_string;
            br_string = "";
        }
    }
    System.out.println (ps);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37564844_37566933_1_16
37564844_37567183_1_17
Title: Returning even numbers from a stack? 
----------------------------------------

static int countEven (Stack < Integer > stack) {
    Iterator < Integer > iterator = stack.iterator ();
    int count = 0;
    while (iterator.hasNext ()) {
        if (iterator.next () % 2 == 0) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int countEven (Stack < Integer > stack) {
    if (stack == null || stack.isEmpty ()) {
        return 0;
    }
    int count = 0;
    int size = stack.size ();
    for (int i = 0;
    i < size; i ++) {
        int value = stack.get (i);
        if (value % 2 == 0) count ++;

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3757596_3757745_1_15
3757596_3758281_1_34
Title: Input for an ArrayList 
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    String [] scoreSets = input.split ("\\),");
    List < Score > scoreList = new ArrayList < Score > ();
    for (String score : scoreSets) {
        score = score.trim ().substring (1);
        int closeBrace = score.indexOf (')');
        if (closeBrace == score.length () - 1) {
            score = score.substring (0, score.length () - 1);
        }
        String [] tokens = score.split (",");
        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));
    }
}
----------------------------------------

public static void main (String [] args) {
    String input = "(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)";
    Pattern p = Pattern.compile ("\\(([A,R]?),(\\w+?),(\\d+?)\\)");
    Matcher m = p.matcher (input);
    ArrayList < Score > scores = new ArrayList < Score > ();
    ArrayList < Score > topScores = new ArrayList < Score > ();
    while (m.find ()) {
        String action = m.group (1);
        String name = m.group (2);
        double scoreVal = Double.valueOf (m.group (3));
        Score score = new Score (name, scoreVal);
        scores.add (score);
        if ("A".equalsIgnoreCase (action)) {
            topScores.add (score);
        } else {
            for (Score topScore : topScores) {
                if (topScore.equals (score)) {
                    topScores.remove (score);
                }
            }
        }
    }
    for (Score finalScore : topScores) {
        System.out.println (finalScore);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37586005_37587205_1_19
37586005_37587205_22_34
Title: Java Date Comparison 
----------------------------------------

public static boolean isBeforeDay (Date date1, Date date2) {
    Calendar day1 = Calendar.getInstance (TimeZone.getDefault ());
    day1.setTime (date1);
    day1.set (Calendar.HOUR_OF_DAY, 12);
    day1.set (Calendar.MINUTE, 0);
    day1.set (Calendar.SECOND, 0);
    day1.set (Calendar.MILLISECOND, 0);
    Calendar day2 = Calendar.getInstance (TimeZone.getDefault ());
    day2.setTime (date2);
    day2.set (Calendar.HOUR_OF_DAY, 12);
    day2.set (Calendar.MINUTE, 0);
    day2.set (Calendar.SECOND, 0);
    day2.set (Calendar.MILLISECOND, 0);
    return day1.before (day2);
}
----------------------------------------

public static boolean isBeforeDay (Date date1, Date date2) {
    Calendar day1 = Calendar.getInstance (TimeZone.getDefault ());
    day1.setTime (date1);
    int ymd1 = 10000 * day1.get (Calendar.YEAR) + 100 * day1.get (Calendar.MONTH) + day1.get (Calendar.DAY_OF_MONTH);
    Calendar day2 = Calendar.getInstance (TimeZone.getDefault ());
    day2.setTime (date2);
    int ymd2 = 10000 * day2.get (Calendar.YEAR) + 100 * day2.get (Calendar.MONTH) + day2.get (Calendar.DAY_OF_MONTH);
    return ymd1 < ymd2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37588208_38221589_35_44
37588208_38221589_52_63
Title: Retrofit fetch authorization token based on specific error message using RxAndroid 
----------------------------------------

public Observable < String > call (ApiSecretResponse apiSecretResponse) {
    int status = apiSecretResponse.code;
    if (status == 200) {
        String apiSecret = apiSecretResponse.data;
        DAUtilities.saveDataToSp (context.getApplicationContext (), apiSecret, Key.API_SECRET);
        return getAccesstokenObservable (context, apiSecretResponse.data);
    } else return booleanObservable (apiSecretResponse.message.message);

}
----------------------------------------

public void call (AccessTokenResponse accessTokenResponse) {
    int status = accessTokenResponse.getCode ();
    if (status == 200) {
        String accessToken = accessTokenResponse.getData ().getAccess_token ();
        String refreshToken = accessTokenResponse.getData ().getRefresh_token ();
        String issued_at = accessTokenResponse.getData ().getIssued_at ();
        String expiry = accessTokenResponse.getData ().getExpiry ();
        String signCreated = accessToken + "_" + refreshToken + "_" + expiry + "_" + issued_at;
        AccessToken.saveToken (accessTokenResponse.getData (), context);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37605916_37606021_1_15
37605916_37606079_1_16
Title: Intersection of Two Arrays 
----------------------------------------

public Integer [] intersection (int [] nums1, int [] nums2) {
    ArrayList < Integer > list = new ArrayList ();
    int len1 = nums1.length;
    int len2 = nums2.length;
    int k = 0;
    for (int i = 0;
    i < Java.lang.Math.min (len1, len2); i ++) for (int j = 0;
    j < Java.lang.Math.min (len1, len2); j ++) if (nums1 [i] == nums2 [j] && ! list.contains (new Integer (nums1 [i]))) list.add (k ++, nums1 [i]);

    return list.toArray (new Integer [foo.size ()]);
}
----------------------------------------

public Integer [] intersection (int [] nums1, int [] nums2) {
    HashSet < Integer > set1 = new HashSet < > ();
    for (int i : nums1) {
        set1.add (i);
    }
    HashSet < Integer > set2 = new HashSet < > ();
    for (int i : nums2) {
        set2.add (i);
    }
    set1.retainAll (set2);
    return set1.toArray (new Integer [set1.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
376346_4468070_19_27
376346_4468070_3_17
Title: Project Euler (P14): recursion problems 
----------------------------------------

public static int getChainLength (long i, int count) {
    if (i == 1) {
        return count;
    } else if (i % 2 == 0) {
        return getChainLength (i / 2, count + 1);
    } else {
        return getChainLength (3 * i + 1, count + 1);
    }

}
----------------------------------------

public int getChainLength (long i) {
    int count = 1;
    while (i != 1) {
        count ++;
        if (i % 2 == 0) {
            i /= 2;
        } else {
            i = 3 * i + 1;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_14544813_1_23
3763970_20764472_3_26
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) {
    Map < Character, Integer > data = new HashMap < Character, Integer > ();
    String s = "aaaab";
    char [] chars = s.toCharArray ();
    for (char a : chars) {
        if (data.containsKey (a)) {
            int value = data.get (a);
            data.put (a, value + 1);
        } else {
            data.put (a, 1);
        }
    }
    Iterator it = data.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry pairs = (Map.Entry) it.next ();
        System.out.println (pairs.getKey () + " = " + pairs.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println (" Enter a string");
    String str = input.nextLine ();
    System.out.println (" Enter a character");
    String character = input.next ();
    int l = character.length ();
    char c = character.charAt (0);
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == c) {
            count = count + 1;
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_14544813_1_23
3763970_21256042_1_27
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) {
    Map < Character, Integer > data = new HashMap < Character, Integer > ();
    String s = "aaaab";
    char [] chars = s.toCharArray ();
    for (char a : chars) {
        if (data.containsKey (a)) {
            int value = data.get (a);
            data.put (a, value + 1);
        } else {
            data.put (a, 1);
        }
    }
    Iterator it = data.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry pairs = (Map.Entry) it.next ();
        System.out.println (pairs.getKey () + " = " + pairs.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter string:");
    String s1 = br.readLine ();
    StringBuffer sb = new StringBuffer (s1);
    while (sb.length () != 0) {
        char c = sb.charAt (0);
        int cnt = 0;
        for (int i = 0;
        i < sb.length (); i ++) {
            if (c == sb.charAt (i)) {
                cnt ++;
                sb.deleteCharAt (i);
                i --;
            }
        }
        System.out.println (c + "     occurance is:" + cnt);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_14544813_1_23
3763970_3764671_2_10
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) {
    Map < Character, Integer > data = new HashMap < Character, Integer > ();
    String s = "aaaab";
    char [] chars = s.toCharArray ();
    for (char a : chars) {
        if (data.containsKey (a)) {
            int value = data.get (a);
            data.put (a, value + 1);
        } else {
            data.put (a, 1);
        }
    }
    Iterator it = data.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry pairs = (Map.Entry) it.next ();
        System.out.println (pairs.getKey () + " = " + pairs.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Pattern pattern = Pattern.compile ("[^a]*a");
    Matcher matcher = pattern.matcher ("aaabbbaaabbabababaaabbbbba");
    int count = 0;
    while (matcher.find ()) {
        count ++;
    }
    System.out.println (count + " matches");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_20764472_3_26
3763970_21256042_1_27
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println (" Enter a string");
    String str = input.nextLine ();
    System.out.println (" Enter a character");
    String character = input.next ();
    int l = character.length ();
    char c = character.charAt (0);
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == c) {
            count = count + 1;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter string:");
    String s1 = br.readLine ();
    StringBuffer sb = new StringBuffer (s1);
    while (sb.length () != 0) {
        char c = sb.charAt (0);
        int cnt = 0;
        for (int i = 0;
        i < sb.length (); i ++) {
            if (c == sb.charAt (i)) {
                cnt ++;
                sb.deleteCharAt (i);
                i --;
            }
        }
        System.out.println (c + "     occurance is:" + cnt);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_20764472_3_26
3763970_3764671_2_10
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println (" Enter a string");
    String str = input.nextLine ();
    System.out.println (" Enter a character");
    String character = input.next ();
    int l = character.length ();
    char c = character.charAt (0);
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == c) {
            count = count + 1;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    Pattern pattern = Pattern.compile ("[^a]*a");
    Matcher matcher = pattern.matcher ("aaabbbaaabbabababaaabbbbba");
    int count = 0;
    while (matcher.find ()) {
        count ++;
    }
    System.out.println (count + " matches");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3763970_21256042_1_27
3763970_3764671_2_10
Title: Find occurrences of characters in a Java String 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter string:");
    String s1 = br.readLine ();
    StringBuffer sb = new StringBuffer (s1);
    while (sb.length () != 0) {
        char c = sb.charAt (0);
        int cnt = 0;
        for (int i = 0;
        i < sb.length (); i ++) {
            if (c == sb.charAt (i)) {
                cnt ++;
                sb.deleteCharAt (i);
                i --;
            }
        }
        System.out.println (c + "     occurance is:" + cnt);
    }
}
----------------------------------------

public static void main (String [] args) {
    Pattern pattern = Pattern.compile ("[^a]*a");
    Matcher matcher = pattern.matcher ("aaabbbaaabbabababaaabbbbba");
    int count = 0;
    while (matcher.find ()) {
        count ++;
    }
    System.out.println (count + " matches");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37645700_37645786_11_25
37645700_37646001_13_30
Title: Why can't this stream run in parallel? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Paralells > a = new ArrayList ();
    a.add (new Paralells (1));
    a.add (new Paralells (2));
    a.add (new Paralells (3));
    a.add (new Paralells (4));
    a.add (new Paralells (5));
    long x = System.currentTimeMillis ();
    a.parallelStream ().forEach (p -> p.run ());
    System.out.println ("ELAPSED: " + (System.currentTimeMillis () - x));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Thread > a = new ArrayList < > ();
    for (int i = 0;
    i < 5; i ++) a.add (new Thread (new Parallels ()));

    long x = System.currentTimeMillis ();
    for (Thread t : a) t.start ();

    for (Thread t : a) try {
        t.join ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }

    System.out.println ("ELAPSED: " + (System.currentTimeMillis () - x));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37645839_37645911_1_10
37645839_37646249_1_30
Title: Extracting Ints from Strings in Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hi123and27";
    Pattern p = Pattern.compile ("\\d+");
    Matcher m = p.matcher (s);
    int accumulator = 0;
    while (m.find ()) {
        accumulator += Integer.parseInt (m.group ());
    }
    System.out.println ("final result: " + accumulator);
}
----------------------------------------

public static void main (String [] args) {
    String string = "hi123and27";
    int size = string.length ();
    int sum = 0;
    StringBuilder val = new StringBuilder ();
    for (int idx = 0;
    idx < size; idx ++) {
        Character character = string.charAt (idx);
        if (Character.isDigit (character)) {
            val.append (character);
            if ((idx + 1 == size) && val.length () > 0) sum += Integer.parseInt (val.toString ());

        } else {
            if (val.length () > 0) sum += Integer.parseInt (val.toString ());

            val.setLength (0);
        }
    }
    System.out.println ("The sum is : " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37648306_37656962_14_25
37648306_37656962_32_41
Title: Multiple client server android 
----------------------------------------

public void run () {
    while (true) {
        try {
            ServerSocket serverSocket = new ServerSocket (4444);
            ServerThread player = new ServerThread (serverSocket.accept (), gp);
            playerList.add (player);
            player.start ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            Object message = messages.take ();
            System.out.println ("Message Received: " + message);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37649890_37650606_1_35
37649890_37651785_4_32
Title: Stopping user input after certain entry? 
----------------------------------------

public static void main (String [] args) throws Exception {
    {
        System.out.println ("Please input any number, up to 10 entries. " + "Enter -1 to exit: ");
        Scanner read = new Scanner (System.in);
        int [] input_array = new int [10];
        int numOfEntries = 0;
        int entry = 0, status = 0;
        for (int i = 0;
        i < input_array.length; i ++) {
            entry = read.nextInt ();
            if (entry < 100 && entry >= 0) {
                if (entry == 77) {
                    status = 1;
                }
                if (status == 0) {
                    input_array [numOfEntries ++] = entry;
                }
            } else if (entry == - 1) {
                break;
            } else {
                System.out.println ("Please enter a positive number that is less than 100.");
            }

        }
        System.out.println ("Your entries are: ");
        for (int i = 0;
        i < numOfEntries; i ++) {
            System.out.print (input_array [i] + " ");
        }
    }}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please input any number, up to 10 entries. " + "Enter -1 to exit: ");
    int [] input_array = new int [10];
    int input = 0;
    boolean isInput77 = false;
    int numOfEntries = 0;
    Scanner read = new Scanner (System.in);
    for (int i = 0;
    i < 10; i ++) {
        input = read.nextInt ();
        if (input == - 1) {
            break;
        } else if (input == 77) {
            isInput77 = true;
        } else if (! isInput77 && input < 100 && input >= 0) {
            input_array [numOfEntries] = input;
            numOfEntries ++;
        } else if (input >= 100 || input < - 1) {
            System.out.println ("Please enter a positive number that is less than 100.");
        }

    }
    System.out.println ("Your entries are: ");
    for (int i = 0;
    i < numOfEntries; i ++) {
        System.out.print (input_array [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37653989_37654097_4_15
37653989_37654129_4_15
Title: Unable to instantiate activity? 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final Intent i = new Intent (this, profile.class);
    ImageButton ButtonOne = (ImageButton) findViewById (R.id.profile);
    ButtonOne.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            button (i);
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    ImageButton ButtonOne = (ImageButton) findViewById (R.id.profile);
    ButtonOne.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            Intent i = new Intent (this, profile.class);
            startActivity (i);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3766020_14314921_1_21
3766020_29154417_3_21
Title: Binary Search to Compute Square root (Java) 
----------------------------------------

public static double sqrt (int n) {
    double low = 0;
    double high = n;
    double mid = (high - low) / 2;
    while (Math.abs ((mid * mid) - n) > 0.000000000001) {
        if ((mid * mid) > n) {
            high = mid;
            mid = (high - low) / 2;
        } else {
            low = mid;
            mid = mid + ((high - low) / 2);
        }
    }
    return mid;
}
----------------------------------------

public int sqrt (int x) {
    if (x == 0 || x == 1) {
        return x;
    }
    int start = 1, end = x / 2;
    while (start <= end) {
        int mid = start + (end - start) / 2;
        if (mid == x / mid) {
            return mid;
        }
        if (mid < x / mid) {
            start = mid + 1;
        } else {
            end = mid - 1;
        }
    }
    return start - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37672929_37673145_24_35
37672929_37673145_9_19
Title: Why do wait and notify function not working properly on same class lock 
----------------------------------------

public void run () {
    try {
        Thread.sleep (4000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Thread-2");
    synchronized (WaitAndNotify1.this) {
        WaitAndNotify1.this.notify ();
        System.out.println ("Thread-2 after notify");
    }
}
----------------------------------------

public void run () {
    System.out.println ("Thread-1");
    try {
        synchronized (WaitAndNotify1.this) {
            WaitAndNotify1.this.wait ();
            System.out.println ("Thread-1 after wait");
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37673418_37673957_1_18
37673418_37674259_5_15
Title: Printing branches on a Binary Tree 
----------------------------------------

private int evenBranches (IntTreeNode root) {
    if (root == null) {
        return 0;
    }
    int val = 0;
    if (root.left != null) {
        val += evenBranches (root.left);
    }
    if (root.right != null) {
        val += evenBranches (root.right);
    }
    if (root.data % 2 == 0) {
        return val + 1;
    } else {
        return val;
    }
}
----------------------------------------

private int evenBranches (IntTreeNode root, int count) {
    if (root == null || (root.left == null && root.right == null)) {
        return count;
    }
    if (root.data % 2 == 0) {
        count ++;
    }
    count += evenBranches (root.left, count);
    count += evenBranches (root.right, count);
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37683895_37686902_33_43
37683895_37686902_57_66
Title: Wait and notify in Consumer and Producer Threads 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        try {
            int number = i + (10 * threadNo);
            System.out.println ("Produced:" + number + ":by thread:" + threadNo);
            sharedQueue.put (number);
        } catch (Exception err) {
            err.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            int num = sharedQueue.take ();
            System.out.println ("Consumed: " + num + ":by thread:" + threadNo);
        } catch (Exception err) {
            err.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37697848_37698399_12_21
37697848_37698432_8_16
Title: Generics and cast 
----------------------------------------

public T getValue (Object obj) throws Exception {
    Class < ? > c = obj.getClass ();
    Field param = c.getDeclaredField (paramName);
    boolean isAccessible = param.isAccessible ();
    param.setAccessible (true);
    Object value = param.get (obj);
    param.setAccessible (isAccessible);
    return clazz.cast (value);
}
----------------------------------------

public T getValue (Object obj) throws Exception {
    Class < ? > c = obj.getClass ();
    Field param = c.getDeclaredField (paramName);
    boolean isAccessible = param.isAccessible ();
    param.setAccessible (true);
    Object value = param.get (obj);
    param.setAccessible (isAccessible);
    return clazz.cast (value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3769990_3770040_1_18
3769990_3770124_1_18
Title: Enumeration methods 
----------------------------------------

public Enumeration < E > elements () {
    return new Enumeration < E > () {
        int count = 0;
        public boolean hasMoreElements () {
            return count < elementCount;
        } public E nextElement () {
            synchronized (Vector.this) {
                if (count < elementCount) {
                    return elementData (count ++);
                }
            }
            throw new NoSuchElementException ("Vector Enumeration");
        }}

    ;
}
----------------------------------------

public Enumeration < E > elements () {
    return new Enumeration < E > () {
        int count = 0;
        public boolean hasMoreElements () {
            return count < elementCount;
        } public E nextElement () {
            synchronized (Vector.this) {
                if (count < elementCount) {
                    return (E) elementData [count ++];
                }
            }
            throw new NoSuchElementException ("Vector Enumeration");
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37706805_37707171_1_20
37706805_37707265_1_14
Title: How to print a reverse linked list without using recursion in Java? 
----------------------------------------

public void printReversList (Node head) {
    Node current = head;
    Node last = null;
    while (last != head) {
        while (current.next != last) {
            current = current.next;
        }
        last = current;
        system.out.print (last.value);
        current = head;
    }
}
----------------------------------------

public void printReversList (Node head) {
    Stack < Node > stack = new Stack < > ();
    while (head != null) {
        stack.push (head);
        head = head.next;
    }
    while (! stack.isEmpty ()) {
        System.out.println (stack.pop ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37708693_37708934_1_19
37708693_37708977_12_45
Title: How do I call a button to perform an action in my code? 
----------------------------------------

public static void main (String [] args) {
    int _k = 3;
    JFrame frame = new JFrame ("Game");
    frame.setLayout (new GridLayout (7, 6));
    List < JButton > jbl = new ArrayList < > ();
    for (int i = 0;
    i < _k; i ++) {
        jbl.add (new JButton (":)" + i));
        jbl.get (i).addActionListener (new ActionListener () {
            @Override
            public void actionPerformed (ActionEvent e) {
                System.out.println (((JButton) e.getSource ()).getText ());
            }}

        );
        frame.add (jbl.get (i));
    }
    frame.getContentPane ().add (new gameBoard ());
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Game");
    frame.getContentPane ().setLayout (new GridLayout (7, 6));
    for (int i = 0;
    i < 42; i ++) {
        String buttonName = "Button " + i;
        JButton button = new JButton (buttonName);
        button.addActionListener (new ActionListener () {
            @Override
            public void actionPerformed (ActionEvent e) {
                System.out.println (buttonName + " clicked");
            }}

        );
        frame.getContentPane ().add (button);
    }
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3771040_3771088_8_19
3771040_3771090_21_32
Title: Java Collections automatic reallocation when size is reached 
----------------------------------------

public void ensureCapacity (int minCapacity) {
    modCount ++;
    int oldCapacity = elementData.length;
    if (minCapacity > oldCapacity) {
        Object oldData [] = elementData;
        int newCapacity = (oldCapacity * 3) / 2 + 1;
        if (newCapacity < minCapacity) newCapacity = minCapacity;

        elementData = Arrays.copyOf (elementData, newCapacity);
    }
}
----------------------------------------

public void ensureCapacity (int minCapacity) {
    modCount ++;
    int oldCapacity = elementData.length;
    if (minCapacity > oldCapacity) {
        Object oldData [] = elementData;
        int newCapacity = (oldCapacity * 3) / 2 + 1;
        if (newCapacity < minCapacity) newCapacity = minCapacity;

        elementData = Arrays.copyOf (elementData, newCapacity);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3771040_3771090_21_32
3771040_3771112_1_12
Title: Java Collections automatic reallocation when size is reached 
----------------------------------------

public void ensureCapacity (int minCapacity) {
    modCount ++;
    int oldCapacity = elementData.length;
    if (minCapacity > oldCapacity) {
        Object oldData [] = elementData;
        int newCapacity = (oldCapacity * 3) / 2 + 1;
        if (newCapacity < minCapacity) newCapacity = minCapacity;

        elementData = Arrays.copyOf (elementData, newCapacity);
    }
}
----------------------------------------

public void ensureCapacity (int minCapacity) {
    modCount ++;
    int oldCapacity = elementData.length;
    if (minCapacity > oldCapacity) {
        Object oldData [] = elementData;
        int newCapacity = (oldCapacity * 3) / 2 + 1;
        if (newCapacity < minCapacity) newCapacity = minCapacity;

        elementData = Arrays.copyOf (elementData, newCapacity);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37711773_37712094_1_38
37711773_37723073_4_39
Title: How to display even numbers between 2 inputs AND depending if num1 > num2 and vice versa 
----------------------------------------

public static void main (String [] args) {
    int num1, num2;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Please type a number: ");
    num1 = keyboard.nextInt ();
    System.out.print ("Enter another number: ");
    num2 = keyboard.nextInt ();
    int i = 0;
    int l, s;
    boolean upToDown = false;
    if (num1 > num2) {
        l = num1;
        s = num2;
        upToDown = true;
    } else {
        l = num2;
        s = num1;
    }
    if (upToDown) {
        i = l % 2 == 0 ? l : l - 1;
        while (i - s > 0) {
            System.out.println (i - 2);
            i = i - 2;
        }
    } else {
        i = s % 2 == 0 ? s : s + 1;
        while (l - i > 0) {
            System.out.println (i + 2);
            i = i + 2;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int num1, num2;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Please type a number: ");
    num1 = keyboard.nextInt ();
    System.out.print ("Enter another number: ");
    num2 = keyboard.nextInt ();
    int smallNum = 0;
    int largeNum = 0;
    boolean isNum1Large = false;
    if (num1 - num2 > 0) {
        smallNum = num2;
        largeNum = num1;
        isNum1Large = true;
    } else {
        smallNum = num1;
        largeNum = num2;
    }
    if (isNum1Large) {
        for (int i = largeNum - 1;
        i > smallNum; i --) {
            if (i % 2 == 0) {
                System.out.println (i);
            }
        }
    } else {
        for (int i = smallNum + 1;
        i < largeNum; i ++) {
            if (i % 2 == 0) {
                System.out.println (i);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37711928_37712136_1_19
37711928_37712299_1_10
Title: Tyring to display all possible topping combinations 
----------------------------------------

public ArrayList < String > getAllChoices (String [] flavors, String [] toppings) {
    ArrayList < String > retList = new ArrayList < String > ();
    for (int i = 0;
    i < flavors.length; i ++) {
        for (int x = 0;
        x < toppings.length; x ++) {
            String flavorss = flavors [i];
            String toppingss = toppings [x];
            retList.add (flavorss + " with " + toppingss + " on top");
        }
    }
    return retList;
}
----------------------------------------

public ArrayList < String > getAllChoices (String [] flavors, String [] toppings) {
    ArrayList < String > tempList = new ArrayList < > ();
    for (int i = 0;
    i < flavors.length; i ++) {
        for (int x = 0;
        x < toppings.length; x ++) {
            String temp = flavors [i] + " with " + toppings [i] + " on top";
            tempList.add (temp);
        }
    }
    return tempList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37712371_37876265_41_58
37712371_37876265_63_76
Title: How to use JFileChooser to display image in a JFrame or JPanel 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        textArea.setText ("");
        JFileChooser fileChooser = new JFileChooser ();
        fileChooser.setFileFilter (new TxtFileFilter ());
        int n = fileChooser.showOpenDialog (JFileChooserDemo.this);
        if (n == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile ();
            BufferedReader read = new BufferedReader (new FileReader (f));
            String line = read.readLine ();
            while (line != null) {
                textArea.append (line);
                line = read.readLine ();
            }
            read.close ();
        }
    } catch (Exception ex) {
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        JFileChooser fileChooser = new JFileChooser ();
        fileChooser.setFileFilter (new TxtFileFilter ());
        int n = fileChooser.showSaveDialog (JFileChooserDemo.this);
        if (n == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile ();
            BufferedWriter write = new BufferedWriter (new FileWriter (f));
            write.append (textArea.getText ());
            write.flush ();
            write.close ();
        }
    } catch (Exception ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37712371_37876265_41_58
37712371_43868678_157_233
Title: How to use JFileChooser to display image in a JFrame or JPanel 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        textArea.setText ("");
        JFileChooser fileChooser = new JFileChooser ();
        fileChooser.setFileFilter (new TxtFileFilter ());
        int n = fileChooser.showOpenDialog (JFileChooserDemo.this);
        if (n == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile ();
            BufferedReader read = new BufferedReader (new FileReader (f));
            String line = read.readLine ();
            while (line != null) {
                textArea.append (line);
                line = read.readLine ();
            }
            read.close ();
        }
    } catch (Exception ex) {
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String command = e.getActionCommand ();
    System.out.println ("Command...." + command);
    if (command.equalsIgnoreCase ("browse")) {
        JFileChooser file = new JFileChooser ();
        file.setCurrentDirectory (new File (System.getProperty ("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter ("*.Images", "jpg", "gif", "png");
        file.addChoosableFileFilter (filter);
        int result = file.showSaveDialog (null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile ();
            String Path = selectedFile.getAbsolutePath ();
            try {
                setimg (Path);
                bi = ImageIO.read (new File (Path));
            } catch (IOException e1) {
                System.out.println ("file not found");
            }
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println ("No file choosed");
        }

    } else if (command.equalsIgnoreCase ("SetFilter")) {
        System.out.println ("..SetFilter..." + choices.getSelectedIndex () + "::" + choices.getSelectedItem ().toString ());
        setOpIndex (choices.getSelectedIndex ());
        repaint ();
    } else if (command.equalsIgnoreCase ("Formats")) {
        System.out.println ("..Formats..." + formats.getSelectedIndex () + "::" + formats.getSelectedItem ().toString ());
        int opt = JOptionPane.showConfirmDialog (null, "Do you want to save it?", "save image", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, null);
        switch (opt) {
            case JOptionPane.CANCEL_OPTION :
                return;
        }
        String format = (String) formats.getSelectedItem ();
        File saveFile = new File ("savedimage." + format);
        JFileChooser chooser = new JFileChooser ();
        chooser.setSelectedFile (saveFile);
        int rval = chooser.showSaveDialog (formats);
        if (rval == JFileChooser.APPROVE_OPTION) {
            saveFile = chooser.getSelectedFile ();
            try {
                ImageIO.write (biFiltered, format, saveFile);
            } catch (IOException ex) {
            }
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37712371_37876265_63_76
37712371_43868678_157_233
Title: How to use JFileChooser to display image in a JFrame or JPanel 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        JFileChooser fileChooser = new JFileChooser ();
        fileChooser.setFileFilter (new TxtFileFilter ());
        int n = fileChooser.showSaveDialog (JFileChooserDemo.this);
        if (n == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile ();
            BufferedWriter write = new BufferedWriter (new FileWriter (f));
            write.append (textArea.getText ());
            write.flush ();
            write.close ();
        }
    } catch (Exception ex) {
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String command = e.getActionCommand ();
    System.out.println ("Command...." + command);
    if (command.equalsIgnoreCase ("browse")) {
        JFileChooser file = new JFileChooser ();
        file.setCurrentDirectory (new File (System.getProperty ("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter ("*.Images", "jpg", "gif", "png");
        file.addChoosableFileFilter (filter);
        int result = file.showSaveDialog (null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile ();
            String Path = selectedFile.getAbsolutePath ();
            try {
                setimg (Path);
                bi = ImageIO.read (new File (Path));
            } catch (IOException e1) {
                System.out.println ("file not found");
            }
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println ("No file choosed");
        }

    } else if (command.equalsIgnoreCase ("SetFilter")) {
        System.out.println ("..SetFilter..." + choices.getSelectedIndex () + "::" + choices.getSelectedItem ().toString ());
        setOpIndex (choices.getSelectedIndex ());
        repaint ();
    } else if (command.equalsIgnoreCase ("Formats")) {
        System.out.println ("..Formats..." + formats.getSelectedIndex () + "::" + formats.getSelectedItem ().toString ());
        int opt = JOptionPane.showConfirmDialog (null, "Do you want to save it?", "save image", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, null);
        switch (opt) {
            case JOptionPane.CANCEL_OPTION :
                return;
        }
        String format = (String) formats.getSelectedItem ();
        File saveFile = new File ("savedimage." + format);
        JFileChooser chooser = new JFileChooser ();
        chooser.setSelectedFile (saveFile);
        int rval = chooser.showSaveDialog (formats);
        if (rval == JFileChooser.APPROVE_OPTION) {
            saveFile = chooser.getSelectedFile ();
            try {
                ImageIO.write (biFiltered, format, saveFile);
            } catch (IOException ex) {
            }
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37731444_37735044_1_17
37731444_37735744_1_19
Title: Most efficient way to search how many times a number appears in a sorted array 
----------------------------------------

public static void main (String [] args) {
    int [] x = new int [] {1, 2, 3, 4, 4, 7, 7, 7, 7, 7, 8};
    int index = Arrays.binarySearch (x, 7);
    System.out.println (index);
    int count = 0;
    if (index >= 0) {
        int i = index - 1;
        for (; i >= 0 && x [i] == 7; -- i) {
        }
        for (++ index; index < x.length && x [index] == 7; ++ index) {
        }
        count = index - (i + 1);
    }
    System.out.println (count);
}
----------------------------------------

public static void main (final String [] args) {
    final int numberToCount = 7;
    final int [] x = new int [] {1, 2, 3, 4, 4, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8};
    final int indexOfKnownOccurence = Arrays.binarySearch (x, numberToCount);
    if (indexOfKnownOccurence < 0) {
        System.out.println ("No instances of the number found");
        return;
    }
    final int lowerBound = findIndexOfFirstOccurence (x, numberToCount, 0, indexOfKnownOccurence);
    final int upperBound = findIndexOfLastOccurence (x, numberToCount, indexOfKnownOccurence, x.length - 1);
    System.out.println ("Lower bound: " + lowerBound);
    System.out.println ("Upper bound: " + upperBound);
    System.out.println ("Number of occurrences: " + (upperBound - lowerBound + 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37732559_37732647_26_52
37732559_37732697_1_11
Title: Add new values to beginning of existing array 
----------------------------------------

public void add (Object task) {
    if (extraSpace) {
        boolean added = false;
        for (int i = 0;
        i < taskList.length; i ++) {
            if (taskList [i] == null) {
                if (! added) {
                    taskList [i] = task;
                    added = true;
                } else {
                    extraSpace = true;
                    break;
                }
            }
            extraSpace = false;
        }
    } else {
        Object [] newTaskList = new Object [taskList.length + 1];
        for (int i = 0;
        i < taskList.length; i ++) {
            newTaskList [i] = taskList [i];
        }
        newTaskList [newTaskList.length - 1] = task;
        taskList = newTaskList;
    }
}
----------------------------------------

public void add (Task task, Task [] taskList) {
    for (int i = 0;
    i = taskList.length; i ++) {
        if (taskList [i] == null) {
            taskList [i] = task;
            return;
        }
    }
    Task [] newTaskList = new Task [taskList.length + 1];
    newTaskList [taskList.length] = task;
    taskList = newTaskList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37732559_37732647_26_52
37732559_37732752_1_17
Title: Add new values to beginning of existing array 
----------------------------------------

public void add (Object task) {
    if (extraSpace) {
        boolean added = false;
        for (int i = 0;
        i < taskList.length; i ++) {
            if (taskList [i] == null) {
                if (! added) {
                    taskList [i] = task;
                    added = true;
                } else {
                    extraSpace = true;
                    break;
                }
            }
            extraSpace = false;
        }
    } else {
        Object [] newTaskList = new Object [taskList.length + 1];
        for (int i = 0;
        i < taskList.length; i ++) {
            newTaskList [i] = taskList [i];
        }
        newTaskList [newTaskList.length - 1] = task;
        taskList = newTaskList;
    }
}
----------------------------------------

public void add (Task task) {
    boolean added = false;
    for (int i = 0;
    i < taskList.length; i ++) {
        if (taskList [i] == null) {
            taskList [i] = task;
            added = true;
        }
    }
    if (! added) {
        Task [] newTaskList = new Task [taskList.length + 1];
        newTaskList [newTaskList.length - 1] = task;
        taskList = newTaskList;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37732559_37732697_1_11
37732559_37732752_1_17
Title: Add new values to beginning of existing array 
----------------------------------------

public void add (Task task, Task [] taskList) {
    for (int i = 0;
    i = taskList.length; i ++) {
        if (taskList [i] == null) {
            taskList [i] = task;
            return;
        }
    }
    Task [] newTaskList = new Task [taskList.length + 1];
    newTaskList [taskList.length] = task;
    taskList = newTaskList;
}
----------------------------------------

public void add (Task task) {
    boolean added = false;
    for (int i = 0;
    i < taskList.length; i ++) {
        if (taskList [i] == null) {
            taskList [i] = task;
            added = true;
        }
    }
    if (! added) {
        Task [] newTaskList = new Task [taskList.length + 1];
        newTaskList [newTaskList.length - 1] = task;
        taskList = newTaskList;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37733823_37733955_21_31
37733823_37735348_18_26
Title: How to do thread interacting? 
----------------------------------------

public static void main (String [] a) {
    Calculator calculator = new Calculator ();
    new Thread (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
}
----------------------------------------

public static void main (final String [] args) {
    final Calculator c = new Calculator ();
    final ExecutorService executorService = Executors.newSingleThreadExecutor ();
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37733823_37733955_21_31
37733823_37749554_27_43
Title: How to do thread interacting? 
----------------------------------------

public static void main (String [] a) {
    Calculator calculator = new Calculator ();
    new Thread (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
    new Reader (calculator).start ();
}
----------------------------------------

public static void main (String [] a) {
    Calculator calculator = new Calculator ();
    ForkJoinPool pool = ForkJoinPool.commonPool ();
    ForkJoinTask calcTask = pool.submit (calculator);
    ForkJoinTask [] tasks = {calcTask, pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask))};
    for (ForkJoinTask task : tasks) {
        task.join ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37733823_37733955_39_48
37733823_37733955_9_19
Title: How to do thread interacting? 
----------------------------------------

public void run () {
    synchronized (this) {
        finished = false;
        for (int i = 0;
        i < 100; i ++) {
            total = total + i;
        }
        notifyAll ();
        finished = true;
    }
}
----------------------------------------

public void run () {
    synchronized (c) {
        try {
            System.out.println ("Waiting for calculation");
            while (! c.finished) {
                c.wait ();
            }
        } catch (InterruptedException ex) {
        }
        System.out.println ("Total is:" + c.total);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37733823_37735348_18_26
37733823_37749554_27_43
Title: How to do thread interacting? 
----------------------------------------

public static void main (final String [] args) {
    final Calculator c = new Calculator ();
    final ExecutorService executorService = Executors.newSingleThreadExecutor ();
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
    executorService.submit (c);
}
----------------------------------------

public static void main (String [] a) {
    Calculator calculator = new Calculator ();
    ForkJoinPool pool = ForkJoinPool.commonPool ();
    ForkJoinTask calcTask = pool.submit (calculator);
    ForkJoinTask [] tasks = {calcTask, pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask)), pool.submit (new Reader (calcTask))};
    for (ForkJoinTask task : tasks) {
        task.join ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37741750_37741934_5_36
37741750_37743108_4_28
Title: Java Factorial using GUI only returns the first output 
----------------------------------------

public static void main (String [] args) {
    int number1;
    int factorial = 1;
    String message;
    number1 = Integer.parseInt (JOptionPane.showInputDialog ("Enter a positive integer that you would like factored (Type \"1\" to stop) : "));
    for (int i = 1;
    i <= number1; i ++) {
        factorial = factorial * i;
    }
    do {
        message = String.format ("The factorial of %d is: %d", number1, factorial);
        JOptionPane.showMessageDialog (null, message);
        number1 = Integer.parseInt (JOptionPane.showInputDialog ("Enter a positive integer that you would like factored (Type \"1\" to stop) : "));
        factorial = 1;
        for (int i = 1;
        i <= number1; i ++) {
            factorial = factorial * i;
        }
    } while (number1 != 1);
}
----------------------------------------

public static void main (String [] args) {
    int number1 = 0;
    int factorial = 1;
    String message;
    while (number1 != 1) {
        String positiveInteger = JOptionPane.showInputDialog ("Enter a positive integer that you would like factored (Type \"1\" to stop) : ");
        if (positiveInteger.length () > 0) {
            number1 = Integer.parseInt (positiveInteger);
        }
        for (int i = 1;
        i <= number1; i ++) {
            factorial = factorial * i;
        }
        message = String.format ("The factorial of %d is: %d", number1, factorial);
        JOptionPane.showMessageDialog (null, message);
        number1 = 0;
        factorial = 1;
        message = "";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3775694_19467659_1_13
3775694_3775723_1_11
Title: deleting folder from java 
----------------------------------------

public static boolean deleteDir (File dir) {
    if (dir.isDirectory ()) {
        String [] children = dir.list ();
        for (int i = 0;
        i < children.length; i ++) {
            boolean success = deleteDir (new File (dir, children [i]));
            if (! success) {
                return false;
            }
        }
    }
    return dir.delete ();
}
----------------------------------------

public static boolean deleteDir (File dir) {
    if (dir.isDirectory ()) {
        String [] children = dir.list ();
        for (int i = 0;
        i < children.length; i ++) return deleteDir (new File (dir, children [i]));

    }
    return dir.delete ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3775694_3775718_1_16
3775694_3775864_6_21
Title: deleting folder from java 
----------------------------------------

public static boolean deleteDirectory (File directory) {
    if (directory.exists ()) {
        File [] files = directory.listFiles ();
        if (null != files) {
            for (int i = 0;
            i < files.length; i ++) {
                if (files [i].isDirectory ()) {
                    deleteDirectory (files [i]);
                } else {
                    files [i].delete ();
                }
            }
        }
    }
    return (directory.delete ());
}
----------------------------------------

public static boolean deleteDirectory (File dir) {
    if (! dir.exists () || ! dir.isDirectory ()) {
        return false;
    }
    String [] files = dir.list ();
    for (int i = 0, len = files.length;
    i < len; i ++) {
        File f = new File (dir, files [i]);
        if (f.isDirectory ()) {
            deleteDirectory (f);
        } else {
            f.delete ();
        }
    }
    return dir.delete ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37760500_37760835_25_33
37760500_37760835_35_45
Title: How to increment a number for 3 different paths while using recursion? 
----------------------------------------

private static List < List < String > > DFS (GraphPath1 graph, String start, String end) {
    if (start.equals (end)) return Collections.singletonList (Collections.singletonList (start));

    List < List < String > > result = new ArrayList < > ();
    Deque < String > visited = new ArrayDeque < > ();
    visited.add (start);
    DFS (graph, end, visited, result);
    return result;
}
----------------------------------------

private static void DFS (GraphPath1 graph, String end, Deque < String > visited, List < List < String > > result) {
    for (String node : graph.adjacentNodes (visited.getLast ())) if (! visited.contains (node)) {
        visited.addLast (node);
        if (node.equals (end)) result.add (new ArrayList < > (visited));
        else DFS (graph, end, visited, result);

        visited.removeLast ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37761471_37762140_1_21
37761471_37762140_23_42
Title: Recursion - if there is continuity of numbers in java 
----------------------------------------

private static boolean continuityOfnumbers (int [] arr, int n) {
    if (n >= arr.length) return false;

    boolean findN = false;
    int max = Integer.MIN_VALUE;
    for (int x : arr) {
        if (x == n) findN = true;

        if (max < x) max = x;

    }
    if (! findN || n > max) return false;

    boolean [] contArr = new boolean [n];
    return continuityOfnumbers (arr, n, contArr, 0);
}
----------------------------------------

private static boolean continuityOfnumbers (int [] arr, int n, boolean [] contArr, int index) {
    if (index >= arr.length) {
        for (int i = 0;
        i < n; i ++) {
            if (! contArr [i]) return false;

        }
        return true;
    }
    int val = arr [index];
    if (val <= n && ! contArr [val - 1]) {
        contArr [val - 1] = true;
    }
    return continuityOfnumbers (arr, n, contArr, index + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37766590_37766712_1_21
37766590_37767191_1_12
Title: Implementing a toString method to print out a LinkedList 
----------------------------------------

@Override
public String toString () {
    if (head == null && tail == null) {
        String empty = "head--><--tail";
        return empty;
    } else {
        StringBuilder sb = new StringBuilder ();
        sb.append ("Head-->");
        IntegerNode curr = head;
        sb.append (curr.getData ());
        curr = curr.getNext ();
        while (curr != null) {
            sb.append ("<-->");
            sb.append (curr.getData ());
            curr = curr.getNext ();
        }
        sb.append ("<--tail");
        return sb.toString ();
    }
}
----------------------------------------

@Override
public String toString () {
    StringBuilder buf = new StringBuilder ("head-->");
    boolean sep = false;
    for (IntegerNode node = this.head;
    node != null; node = node.getNext ()) {
        if (sep) buf.append ("<-->");

        buf.append (node.getData ());
        sep = true;
    }
    return buf.append ("<--tail").toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37772294_37772354_1_14
37772294_37774760_1_19
Title: GCD\GCF\HCF in Java 
----------------------------------------

public static int ggT (int a, int b) {
    int result = 0;
    if (a == b) {
        result = a;
    } else if (a > b) {
        a -= b;
        result = a % b;
    }

    if (b > a) {
        b -= a;
        result = a % b;
    }
    return result;
}
----------------------------------------

public static int ggT (int a, int b) {
    int result = 0;
    if (a == b) {
        result = a;
    } else if (a > b) {
        a -= b;
    } else if (b > a) {
        b -= a;
    }

    if (a > b) {
        result = b % a;
    } else if (b > a) {
        result = a % b;
    } else if (b == a) {
        result = a;
    }

    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37773233_37773474_13_42
37773233_37773601_1_31
Title: "Read a file and map to a Map<String List<String>>" 
----------------------------------------

public static void main (String [] args) throws IOException {
    Map < String, ArrayList < String > > mappa = new HashMap < String, ArrayList < String > > ();
    File dir = new File (".");
    File fin = new File (dir.getCanonicalPath () + File.separator + "file.txt");
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader br = new BufferedReader (new InputStreamReader (fis));
    String line = null;
    while ((line = br.readLine ()) != null) {
        String [] splitted = line.split (" - ");
        String key = splitted [0];
        String value = splitted [1];
        ArrayList < String > v;
        v = mappa.get (key);
        if (v == null) v = new ArrayList < String > ();

        v.add (value);
        mappa.put (key, v);
    }
    System.out.println (mappa.toString ());
    br.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Map < String, List < String > > graphlist = new TreeMap < > ();
    String path = "/Users/addodennis/Desktop/Projects/HotelReservation/src/Data/Dlist";
    String str;
    try (BufferedReader read = new BufferedReader (new FileReader (path))) {
        while ((str = read.readLine ()) != null) {
            String [] list = str.split (" - ");
            String k = list [0].trim ();
            String v1 = list [1].trim ();
            List < String > ad = graphlist.get (k);
            if (ad == null) {
                ad = new ArrayList < > ();
            }
            ad.add (v1);
            graphlist.put (k, ad);
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37791281_37791559_33_44
37791281_37804935_30_39
Title: Android Custom List View with pictures and sub items search view not working 
----------------------------------------

public void filter (String filter) {
    restList.clear ();
    if (filter != null && filter.trim ().length () > 0) {
        for (caloocanDB element : tempRestList) {
            if (element.getResname ().contains (filter) || element.getType ().contains (filter) || element.getResLoc ().contains (filter)) restList.add (element);

        }
    } else {
        restList.addAll (tempRestList);
    }
    super.notifyDataSetChanged ();
}
----------------------------------------

public void filter (String text) {
    Restau.clear ();
    for (caloocanDB element : tempRestList) {
        if (element.getResname ().toLowerCase ().startsWith (text) || element.getType ().toLowerCase ().startsWith (text) || element.getResLoc ().toLowerCase ().startsWith (text)) {
            Restau.add (element);
        }
    }
    super.notifyDataSetChanged ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3779285_3779440_21_32
3779285_47990580_21_35
Title: Exception thrown in catch and finally clause 
----------------------------------------

static void q () throws Exception {
    try {
        throw (new MyExc1 ());
    } catch (Exception y) {
    } finally {
        System.out.print (3);
        throw (new Exception ());
    }
}
----------------------------------------

static void q () throws Exception {
    try {
        System.out.print ("TryA L2\n");
        q2 ();
        System.out.print ("TryB L2\n");
    } catch (Exception y) {
        System.out.print ("Catch L2\n");
        throw new MyExc2 ();
    } finally {
        System.out.print ("Finally L2\n");
        throw new Exception ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3779285_3779440_3_19
3779285_47990580_6_19
Title: Exception thrown in catch and finally clause 
----------------------------------------

public static void main (String [] argv) throws Exception {
    try {
        System.out.print (1);
        q ();
    } catch (Exception i) {
        throw (new MyExc2 ());
    } finally {
        System.out.print (2);
        throw (new MyExc1 ());
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    try {
        System.out.print ("TryA L1\n");
        q ();
        System.out.print ("TryB L1\n");
    } catch (Exception i) {
        System.out.print ("Catch L1\n");
    } finally {
        System.out.print ("Finally L1\n");
        throw new MyExc1 ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37798686_37798820_1_26
37798686_37798958_2_15
Title: How to find sum of first three digits 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter the number:");
    String input = scanner.nextLine ();
    String firstHalf = input.substring (0, 3);
    String secondHalf = input.substring (3);
    int sum1 = 0;
    int sum2 = 0;
    for (int i = 0;
    i <= 3; i ++) {
        sum1 += Character.getNumericValue (firstHalf.charAt (i));
        sum2 += Character.getNumericValue (secondHalf.charAt (i));
    }
    System.out.println (sum1);
    System.out.println (sum2);
}
----------------------------------------

public static void main (String [] args) {
    int x = 123456;
    String s = Integer.toString (x);
    int half = s.length () / 2;
    String firstHalf = s.substring (0, half);
    String secondHalf = s.substring (half);
    System.out.println (firstHalf);
    System.out.println (secondHalf);
    int sum1 = sumString (firstHalf);
    int sum2 = sumString (secondHalf);
    System.out.println ("Sum 1: " + sum1);
    System.out.println ("Sum 2: " + sum2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37798686_37798820_1_26
37798686_37799444_1_14
Title: How to find sum of first three digits 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter the number:");
    String input = scanner.nextLine ();
    String firstHalf = input.substring (0, 3);
    String secondHalf = input.substring (3);
    int sum1 = 0;
    int sum2 = 0;
    for (int i = 0;
    i <= 3; i ++) {
        sum1 += Character.getNumericValue (firstHalf.charAt (i));
        sum2 += Character.getNumericValue (secondHalf.charAt (i));
    }
    System.out.println (sum1);
    System.out.println (sum2);
}
----------------------------------------

public static void main (String args []) {
    int num = 123456;
    int second = 0;
    int first = 0;
    second = addLastThree (num);
    num /= 1000;
    first = addLastThree (num);
    System.out.println ("first -- > " + first);
    System.out.println ("second -- > " + second);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37798686_37798958_2_15
37798686_37799444_1_14
Title: How to find sum of first three digits 
----------------------------------------

public static void main (String [] args) {
    int x = 123456;
    String s = Integer.toString (x);
    int half = s.length () / 2;
    String firstHalf = s.substring (0, half);
    String secondHalf = s.substring (half);
    System.out.println (firstHalf);
    System.out.println (secondHalf);
    int sum1 = sumString (firstHalf);
    int sum2 = sumString (secondHalf);
    System.out.println ("Sum 1: " + sum1);
    System.out.println ("Sum 2: " + sum2);
}
----------------------------------------

public static void main (String args []) {
    int num = 123456;
    int second = 0;
    int first = 0;
    second = addLastThree (num);
    num /= 1000;
    first = addLastThree (num);
    System.out.println ("first -- > " + first);
    System.out.println ("second -- > " + second);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37807804_37807973_1_15
37807804_37809723_1_11
Title: Java Class type array 
----------------------------------------

public static Item getLeastPriceItem (Item [] item) {
    double min;
    Item minItem = item [0];
    min = item [0].getItemPrice ();
    for (int i = 1;
    i < item.length; i ++) {
        if (item [i].getItemPrice () < min) {
            min = item [i].getItemPrice ();
            minItem = item [i];
        }
    }
    return minItem;
}
----------------------------------------

public static Item getLeastPriceItem (Item [] item) {
    double min = item [0].getItemPrice ();
    int minIndex = 0;
    for (int i = 1;
    i < item.length; i ++) {
        if (item [i].getItemPrice () < min) {
            min = item [i].getItemPrice ();
            minIndex = i;
        }
    }
    return item [minIndex];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37812667_37812819_5_34
37812667_38631209_2_20
Title: Java any digit Armstrong number 
----------------------------------------

public static void main (String args []) {
    int n, sum = 0, temp, remainder, digits = 0;
    Scanner in = new Scanner (System.in);
    System.out.println ("Input a number to check if it is an Armstrong number");
    n = in.nextInt ();
    temp = n;
    while (temp != 0) {
        digits ++;
        temp = temp / 10;
    }
    temp = n;
    while (temp != 0) {
        remainder = temp % 10;
        sum = sum + power (remainder, digits);
        temp = temp / 10;
    }
    if (n == sum) System.out.println (n + " is an Armstrong number.");
    else System.out.println (n + " is not an Armstrong number.");

}
----------------------------------------

public static void main (String [] args) {
    int c = 0, a, temp;
    Scanner scn = new Scanner (System.in);
    System.out.println ("Enter the number to check");
    int n = scn.nextInt ();
    temp = n;
    while (n > 0) {
        a = n % 10;
        n = n / 10;
        c = c + (a * a * a);
    }
    if (temp == c) System.out.println ("armstrong number");
    else System.out.println ("Not armstrong number");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37813591_37815219_13_45
37813591_46420283_1_35
Title: Display splashscreen & then AppIntro(First time launch) than mainactivity not working 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_splash);
    prefManager = getPreferences (Context.MODE_PRIVATE);
    new Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            Intent i;
            if (prefManager.isFirstTimeLaunch ()) {
                i = new Intent (SpashScreen.this, WelcomeActivity.class);
                prefManager.setFirstTimeLaunch (false);
            } else {
                i = new Intent (SpashScreen.this, MainActivity.class);
            }
            startActivity (i);
            finish ();
        }}

    , SPLASH_TIME_OUT);
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_splash_screen);
    try {
        int netStatus = NetworkUtil.getConnectivityStatus (getBaseContext ());
        if (netStatus == 0) {
            Intent intent = new Intent (SplashScreen.this, NoInternetActivity.class);
            startActivity (intent);
            finish ();
        } else {
            new Handler ().postDelayed (new Runnable () {
                @Override
                public void run () {
                    PrefManager prefManager = new PrefManager (getApplicationContext ());
                    if (prefManager.isFirstTimeLaunch ()) {
                        intent = new Intent (SplashScreen.this, WelcomeActivity.class);
                        prefManager.setFirstTimeLaunch (true);
                    } else {
                        intent = new Intent (SplashScreen.this, MainActivity.class);
                    }
                    startActivity (intent);
                    finish ();
                }}

            , SPLASH_TIME_OUT);
        }
    } catch (RuntimeException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37813708_37813891_15_24
37813708_37813954_26_39
Title: Even-indexed and odd-indexed - Java 
----------------------------------------

public static void display (char [] word) {
    for (int i = 0;
    i < word.length; i += 2) {
        System.out.print (word [i]);
    }
    System.out.print (" ");
    for (int i = 1;
    i < word.length; j += 2) {
        System.out.print (word [i]);
    }
    System.out.println ();
}
----------------------------------------

public static void display (int N, char [] array) {
    for (int i = 0;
    i < N; i = i + 2) {
        System.out.print (array [i]);
    }
    System.out.print (" ");
    for (int j = 1;
    j < N; j = j + 2) {
        System.out.print (array [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37813708_37813891_5_14
37813708_37813954_6_24
Title: Even-indexed and odd-indexed - Java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of words: ");
    int numWords = in.nextInt ();
    in.nextLine ();
    for (int i = 0;
    i < numWords; i ++) {
        char [] word = in.nextLine ().toCharArray ();
        display (word);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of words: ");
    int T = in.nextInt ();
    for (int m = 0;
    m < T; m ++) {
        String S = in.nextLine ();
        int N = S.length ();
        char array [] = new char [N];
        for (int n = 0;
        n < N; n ++) {
            array [n] = S.charAt (n);
        }
        display (N, array);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37813708_37813891_5_14
37813708_37815116_1_23
Title: Even-indexed and odd-indexed - Java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of words: ");
    int numWords = in.nextInt ();
    in.nextLine ();
    for (int i = 0;
    i < numWords; i ++) {
        char [] word = in.nextLine ().toCharArray ();
        display (word);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int wordCount = getInt (sc, "Enter the number of words: ");
    int wordIndex = 1;
    sc.nextLine ();
    while (wordCount > 0) {
        System.out.printf ("Type word %s: ", wordIndex);
        String word = sc.nextLine ();
        char [] evenPosChars = new char [word.length () - (word.length () / 2)];
        char [] oddPosChars = new char [word.length () / 2];
        for (int i = 0;
        i < word.length (); i ++) {
            if (i % 2 == 0) {
                evenPosChars [i / 2] = word.charAt (i);
            } else {
                oddPosChars [(i - 1) / 2] = word.charAt (i);
            }
        }
        print (evenPosChars, "Even Characters: ");
        print (oddPosChars, "Odd Characters: ");
        wordCount --;
        wordIndex ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37813708_37813954_6_24
37813708_37815116_1_23
Title: Even-indexed and odd-indexed - Java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of words: ");
    int T = in.nextInt ();
    for (int m = 0;
    m < T; m ++) {
        String S = in.nextLine ();
        int N = S.length ();
        char array [] = new char [N];
        for (int n = 0;
        n < N; n ++) {
            array [n] = S.charAt (n);
        }
        display (N, array);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int wordCount = getInt (sc, "Enter the number of words: ");
    int wordIndex = 1;
    sc.nextLine ();
    while (wordCount > 0) {
        System.out.printf ("Type word %s: ", wordIndex);
        String word = sc.nextLine ();
        char [] evenPosChars = new char [word.length () - (word.length () / 2)];
        char [] oddPosChars = new char [word.length () / 2];
        for (int i = 0;
        i < word.length (); i ++) {
            if (i % 2 == 0) {
                evenPosChars [i / 2] = word.charAt (i);
            } else {
                oddPosChars [(i - 1) / 2] = word.charAt (i);
            }
        }
        print (evenPosChars, "Even Characters: ");
        print (oddPosChars, "Odd Characters: ");
        wordCount --;
        wordIndex ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37824263_37827576_23_65
37824263_37827576_44_60
Title: JavaFX - Block user from changing stages without using MODAL 
----------------------------------------

public void handle (ActionEvent event) {
    VBox vbox = new VBox ();
    vbox.setAlignment (Pos.CENTER);
    List < ToggleButton > toggles = new ArrayList < ToggleButton > ();
    for (int i = 0;
    i < 4; i ++) {
        ToggleButton tb = new ToggleButton ("Card " + i + 1);
        toggles.add (tb);
    }
    vbox.getChildren ().addAll (toggles);
    Scene sc = new Scene (vbox, 300, 300);
    popupStage.setScene (sc);
    popupStage.setOnCloseRequest (new EventHandler < WindowEvent > () {
        @Override
        public void handle (WindowEvent event) {
            Boolean readytoClose = false;
            for (ToggleButton toggle : toggles) {
                if (toggle.isSelected ()) {
                    readytoClose = true;
                    break;
                }
            }
            if (! readytoClose) {
                event.consume ();
                Alert alert = new Alert (AlertType.INFORMATION, "At least one card has be to be selected!");
                alert.showAndWait ();
            }
        }}

    );
    popupStage.show ();
}
----------------------------------------

public void handle (WindowEvent event) {
    Boolean readytoClose = false;
    for (ToggleButton toggle : toggles) {
        if (toggle.isSelected ()) {
            readytoClose = true;
            break;
        }
    }
    if (! readytoClose) {
        event.consume ();
        Alert alert = new Alert (AlertType.INFORMATION, "At least one card has be to be selected!");
        alert.showAndWait ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37829024_37829332_39_57
37829024_37829340_4_24
Title: Android Studio Multiple onCreate methods in MainActivity.java 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next1 = (Button) findViewById (R.id.scannerButton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    Button next2 = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), Vragen.class);
            startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next = (Button) findViewById (R.id.scannerButton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (this, BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    Button next1 = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (this, Vragen.class);
            startActivityForResult (myIntent, 1);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37829024_37829332_39_57
37829024_37829768_1_21
Title: Android Studio Multiple onCreate methods in MainActivity.java 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next1 = (Button) findViewById (R.id.scannerButton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    Button next2 = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), Vragen.class);
            startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------

@Override
public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next = (Button) findViewById (R.id.scannerButton);
    Button vragen = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    vragen.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), Vragen.class);
            startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37829024_37829340_4_24
37829024_37829768_1_21
Title: Android Studio Multiple onCreate methods in MainActivity.java 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next = (Button) findViewById (R.id.scannerButton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (this, BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    Button next1 = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (this, Vragen.class);
            startActivityForResult (myIntent, 1);
        }}

    );
}
----------------------------------------

@Override
public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button next = (Button) findViewById (R.id.scannerButton);
    Button vragen = (Button) findViewById (R.id.bovenbutton);
    next.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), BarcodeScanner.class);
            startActivityForResult (myIntent, 0);
        }}

    );
    vragen.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), Vragen.class);
            startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37830942_37831118_1_16
37830942_37831659_7_20
Title: recursive function not working for CheckLink function 
----------------------------------------

private boolean checkLink (ArrayList < Integer > dataListFirst, int match) {
    if (dataListFirst != null) {
        for (int data : dataListFirst) {
            if (data == match) {
                return true;
            }
        }
        for (int data : dataListFirst) {
            boolean found = checkLink (graphList.get (data), match);
            if (found) return found;

        }
    }
    return false;
}
----------------------------------------

private boolean checkLink (ArrayList < Integer > dataListFirst, int match, List < Integer > nodes) {
    if (dataListFirst != null) {
        for (int data : dataListFirst) {
            if (nodes.contains (data)) {
                return false;
            }
            nodes.add (data);
            if (data == match || checkLink (graphList.get (data), match, nodes)) {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37836817_37837005_3_30
37836817_37837052_9_35
Title: Using .getName to print a File name 
----------------------------------------

public static void main (String [] args) throws Exception {
    int charCount = 0;
    int wordCount = 0;
    int lineCount = 0;
    String count;
    StringTokenizer st;
    BufferedReader buf = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter file: ");
    String fileName = buf.readLine ();
    File file = new File (fileName);
    buf = new BufferedReader (new FileReader (file));
    while ((count = buf.readLine ()) != null) {
        lineCount ++;
        st = new StringTokenizer (count, " ,;:.");
        while (st.hasMoreTokens ()) {
            wordCount ++;
            count = st.nextToken ();
            charCount += count.length ();
        }
    }
    System.out.println ("The file name is: " + file.getName ());
    System.out.println ("Character Count : " + charCount);
    System.out.println ("Word Count : " + wordCount);
    System.out.println ("Line Count : " + lineCount);
    buf.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int charCount = 0;
    int wordCount = 0;
    int lineCount = 0;
    File file;
    String count;
    StringTokenizer st;
    BufferedReader buf = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter file: ");
    file = new File (buf.readLine ());
    System.out.println ("Use " + file.getAbsolutePath ());
    buf = new BufferedReader (new FileReader (file));
    while ((count = buf.readLine ()) != null) {
        lineCount ++;
        st = new StringTokenizer (count, " ,;:.");
        while (st.hasMoreTokens ()) {
            wordCount ++;
            count = st.nextToken ();
            charCount += count.length ();
        }
    }
    System.out.println ("Character Count : " + charCount);
    System.out.println ("Word Count : " + wordCount);
    System.out.println ("Line Count : " + lineCount);
    buf.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37859671_37860317_3_29
37859671_37861634_13_38
Title: Trying to read a txt file and store it into an array list within a multi-value hash-map 
----------------------------------------

public static void main (String [] args) throws IOException {
    HashMap < String, SortedSet < String > > dependencies = new HashMap < String, SortedSet < String > > ();
    try (Scanner in = new Scanner (new File (args [0]))) {
        while ((in.hasNext ())) {
            String [] packs = in.nextLine ().split ("\\s");
            String key = packs [0];
            SortedSet < String > deps = dependencies.get (key);
            if (deps == null) {
                deps = new TreeSet < String > ();
                dependencies.put (key, deps);
            }
            for (int i = 1;
            i < packs.length; i ++) {
                if (! packs [i].equals ("")) {
                    deps.add (packs [i]);
                }
            }
        }
    } catch (IOException ex) {
        System.err.println (ex);
    } finally {
    }
    System.out.println (dependencies);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = null;
    try {
        scanner = new Scanner (new File (args [0]));
        String line = null;
        String [] lineParts = null;
        HashMap < String, List < String > > dependencies = new LinkedHashMap < String, List < String > > ();
        while (scanner.hasNextLine ()) {
            line = scanner.nextLine ();
            lineParts = line.split ("\\s+");
            dependencies.put (lineParts [0], Arrays.asList (Arrays.copyOfRange (lineParts, 1, lineParts.length)));
        }
        System.out.println (dependencies);
    } catch (FileNotFoundException e) {
        System.err.println (e.getMessage ());
    } finally {
        scanner.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37886582_37886707_1_24
37886582_37929688_1_25
Title: Trying to display a certain String in an array after user input 
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    String [] array = new String [10];
    int counter = 0;
    while (counter < array.length) {
        System.out.print ((counter + 1) + ": Please enter message: ");
        array [counter] = s.nextLine ();
        counter ++;
    }
    System.out.print ("Please enter the number of the message you would like displayed: ");
    int response = s.nextInt ();
    response -= 1;
    System.out.println ("Your selected value is " + array [response]);
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    String [] array = new String [10];
    int counter = 0;
    int response;
    while (counter < array.length) {
        System.out.print ((counter + 1) + ": Please enter message: ");
        array [counter] = s.nextLine ();
        counter ++;
    }
    System.out.print ("Please enter the number of the message you would like displayed: ");
    counter = 0;
    response = s.nextInt ();
    System.out.println ("Your selected value is " + array [response - 1]);
    s.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37892398_37893646_46_62
37892398_37893646_8_20
Title: Creating a Basic Java phone book 
----------------------------------------

private static Choice getChoice (Scanner kbd) {
    System.out.println ("\nPlease select from the following");
    System.out.println ("\tn to Enter the number");
    System.out.println ("\ts to Show numbers by keyword ");
    System.out.println ("\tp to Show all numbers ");
    System.out.println ("\tc to Close the Phone book");
    System.out.print ("><![CDATA[ ");
    String input = kbd.nextLine ();
    Choice choice = null;
    if (! input.isEmpty () && choices.contains (input.toLowerCase ()) && ((choice = Choice.getChoice (input.toLowerCase ().charAt (0))) != null)) {
        return choice;
    }
    System.out.println ("ERR: INVALID ENTRY. TRY AGAIN");
    return getChoice (kbd);
}
----------------------------------------

static Choice getChoice (char c) {
    switch (c) {
        case 'n' :
            return Choice.CREATE;
        case 's' :
            return Choice.READ;
        case 'p' :
            return Choice.PRINT;
        case 'c' :
            return Choice.CLOSE;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37896185_37896311_5_33
37896185_37896608_7_18
Title: How to count the number of letter in a string and remove duplicate letter in output 
----------------------------------------

public static void main (String let []) throws IOException {
    InputStreamReader r = new InputStreamReader (System.in);
    BufferedReader b = new BufferedReader (r);
    System.out.println ("Enter The Sentense");
    String s = b.readLine ();
    String store = "";
    String store1 = "";
    TreeSet < String > ts = new TreeSet < String > ();
    for (int i = 0;
    i <= s.length () - 1; i ++) {
        int count = 0;
        store = s.charAt (i) + "";
        if (ts.contains (store) == false) {
            for (int j = 0;
            j <= s.length () - 1; j ++) {
                store1 = s.charAt (j) + "";
                if (store.equals (store1)) {
                    ++ count;
                }
            }
            System.out.println (store + " : " + count);
            ts.add (store);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter The Sentense");
    String s = in.nextLine ();
    HashMap < Character, Integer > w = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < s.length (); i ++) {
        w.put (s.charAt (i), w.get (s.charAt (i)) == null ? 1 : (w.get (s.charAt (i)) + 1));
    }
    for (char i : w.keySet ()) {
        System.out.println (i + ":" + w.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37900708_37901214_3_23
37900708_37901226_1_26
Title: A program that prints the following code 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter the numbers of rows you want to print: ");
    Scanner scan = new Scanner (System.in);
    int numberOfRows = scan.nextInt ();
    StringBuilder currentRow = new StringBuilder ();
    for (int rowIndex = 1;
    rowIndex <= numberOfRows; rowIndex ++) {
        for (char currentCharacter = 'A';
        currentCharacter < rowIndex + 'A'; currentCharacter ++) {
            currentRow.append (currentCharacter);
        }
        int numberOfSpacesNeeded = numberOfRows - rowIndex;
        char [] spaces = new char [numberOfSpacesNeeded];
        Arrays.fill (spaces, ' ');
        System.out.println (currentRow.toString () + new String (spaces) + currentRow.reverse ().toString ());
        currentRow = new StringBuilder ();
    }
}
----------------------------------------

public static void main (String args []) {
    System.out.print ("Enter the numbers of rows you want to print: ");
    Scanner scan = new Scanner (System.in);
    int n = scan.nextInt ();
    for (int i = 1;
    i < n; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print ((char) ('A' + j));
        }
        for (int j = 1;
        j < 2 * (n - i); j ++) {
            System.out.print (' ');
        }
        for (int j = i - 1;
        j >= 0; j --) {
            System.out.print ((char) ('A' + j));
        }
        System.out.println ();
    }
    for (int j = 0;
    j < n; j ++) {
        System.out.print ((char) ('A' + j));
    }
    for (int j = n - 2;
    j >= 0; j --) {
        System.out.print ((char) ('A' + j));
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37903323_37903417_1_50
37903323_37903425_6_37
Title: how to check 1 is prime number in java and Hashmap's output is wrong for String type 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int [] myarray = new int [n];
    Arrays.sort (myarray);
    for (int i = 0;
    i < n; i ++) {
        myarray [i] = sc.nextInt ();
    }
    HashMap < Integer, String > newmap = new LinkedHashMap < Integer, String > ();
    int temp;
    int value;
    for (int i = 0;
    i < n; i ++) {
        temp = myarray [i];
        boolean isprime = true;
        if (temp == 1) {
            isprime = false;
            break;
        }
        for (int j = 2;
        j <= temp / 2; j ++) {
            value = temp % j;
            if (value == 0) {
                isprime = false;
                break;
            }
        }
        if (isprime == true) {
            newmap.put (temp, "Prime");
        } else {
            newmap.put (temp, "Not prime");
        }
    }
    Set set = newmap.entrySet ();
    Iterator iterator = set.iterator ();
    while (iterator.hasNext ()) {
        Map.Entry mentry = (Map.Entry) iterator.next ();
        System.out.println (mentry.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int [] inputs = new int [n];
    for (int i = 0;
    i < n; i ++) {
        inputs [i] = sc.nextInt ();
    }
    List < String > results = new ArrayList < > ();
    for (int number : inputs) {
        boolean isprime = true;
        if (number == 1) {
            isprime = false;
        } else {
            for (int j = 2;
            j <= number / 2; j ++) {
                if (number % j == 0) {
                    isprime = false;
                    continue;
                }
            }
        }
        results.add (isprime ? "Prime" : "Not prime");
    }
    for (String result : results) {
        System.out.println (result);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37930631_37931147_34_50
37930631_37931147_57_73
Title: Standard deviation of an ArrayList 
----------------------------------------

public static double findDeviation (double [] nums) {
    double mean = findMean (nums);
    double squareSum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        squareSum += Math.pow (nums [i] - mean, 2);
    }
    return Math.sqrt ((squareSum) / (nums.length - 1));
}
----------------------------------------

public static double findDeviation (int [] nums) {
    double mean = findMean (nums);
    double squareSum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        squareSum += Math.pow (nums [i] - mean, 2);
    }
    return Math.sqrt ((squareSum) / (nums.length - 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37935013_37935418_1_11
37935013_37936804_1_21
Title: how to count the number of nodes in a binary tree with only one child? 
----------------------------------------

public int count (Node n) {
    if (n == null) {
        return 0;
    } else if (n.left == null && n.right != null) {
        return 1 + count (n.right);
    } else if (n.left != null && n.right == null) {
        return 1 + count (n.left);
    } else {
        return count (n.left) + count (n.right);
    }

}
----------------------------------------

public int count (Node n) {
    if (n == null) {
        return 0;
    } else if (n.left == null && n.right != null) {
        return 1 + count (n.right);
    } else if (n.left != null && n.right == null) {
        return 1 + count (n.left);
    } else if (n.left != null && n.right != null) {
        return count (n.left) + count (n.right);
    } else if (n.left == null && n.right == null) {
        return 1;
    } else {
        throw new RuntimeException ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37935630_37935869_1_13
37935630_37935912_1_18
Title: Reading from text file in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        BufferedReader in = new BufferedReader (new FileReader (file.txt));
        while (in.ready ()) {
            String [] arr = in.readLine ().split ("\"");
            System.out.println (Integer.parseInt (arr [arr.length - 1]));
        }
    } catch (FileNotFoundException ex) {
        Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    String cutString;
    File f = new File ("D:\\test.txt");
    FileReader fr = new FileReader (f);
    BufferedReader br = new BufferedReader (fr);
    while ((cutString = br.readLine ()) != null) {
        String split1 [] = cutString.split ("b");
        String split2 [] = split1 [1].split (":");
        String split3 [] = split2 [1].split ("\"");
        System.out.print (split3 [1]);
        System.out.print (",");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37958457_37958565_1_13
37958457_37958650_9_25
Title: match a string in file java 
----------------------------------------

public static void main (String [] args) {
    String word = "word";
    String text = "wordwordword";
    int count = 0;
    for (int i = 0;
    i < text.length (); i ++) {
        for (int j = 0;
        j < word.length (); j ++) {
            if ((j + i) >= text.length ()) break;

            if (word.charAt (j) != text.charAt (j + i)) break;

            if (j == word.length () - 1) count ++;

        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner in = new Scanner (new File (TEXT_FILE_LOCATION));
    String stringToSearch = in.nextLine ();
    StringBuffer buffer = new StringBuffer ();
    for (; in.hasNext ();) {
        buffer.append (in.next ());
    }
    Pattern pattern = Pattern.compile (stringToSearch);
    Matcher matcher = pattern.matcher (buffer.toString ());
    int from = 0;
    int count = 0;
    while (matcher.find (from)) {
        count ++;
        from = matcher.start () + 1;
    }
    System.out.println ("Number of matches : " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37958457_37958565_1_13
37958457_37959870_1_16
Title: match a string in file java 
----------------------------------------

public static void main (String [] args) {
    String word = "word";
    String text = "wordwordword";
    int count = 0;
    for (int i = 0;
    i < text.length (); i ++) {
        for (int j = 0;
        j < word.length (); j ++) {
            if ((j + i) >= text.length ()) break;

            if (word.charAt (j) != text.charAt (j + i)) break;

            if (j == word.length () - 1) count ++;

        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String text = null;
    BufferedReader bufferReader = new BufferedReader (new FileReader ("filepath"));
    text = bufferReader.readLine ();
    String string = "";
    int lastIndex = 0;
    int count = 0;
    while ((string = bufferReader.readLine ()) != null) {
        while ((lastIndex = string.indexOf (text, lastIndex)) != - 1) {
            count ++;
            lastIndex += text.length () - 1;
        }
    }
    System.out.println ("text to be found: " + text);
    System.out.println ("Number of occurrences in file: " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37958457_37958650_9_25
37958457_37959870_1_16
Title: match a string in file java 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner in = new Scanner (new File (TEXT_FILE_LOCATION));
    String stringToSearch = in.nextLine ();
    StringBuffer buffer = new StringBuffer ();
    for (; in.hasNext ();) {
        buffer.append (in.next ());
    }
    Pattern pattern = Pattern.compile (stringToSearch);
    Matcher matcher = pattern.matcher (buffer.toString ());
    int from = 0;
    int count = 0;
    while (matcher.find (from)) {
        count ++;
        from = matcher.start () + 1;
    }
    System.out.println ("Number of matches : " + count);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String text = null;
    BufferedReader bufferReader = new BufferedReader (new FileReader ("filepath"));
    text = bufferReader.readLine ();
    String string = "";
    int lastIndex = 0;
    int count = 0;
    while ((string = bufferReader.readLine ()) != null) {
        while ((lastIndex = string.indexOf (text, lastIndex)) != - 1) {
            count ++;
            lastIndex += text.length () - 1;
        }
    }
    System.out.println ("text to be found: " + text);
    System.out.println ("Number of occurrences in file: " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37958560_38457852_1_40
37958560_38476647_51_101
Title: miglayout with jtable with issue 
----------------------------------------

private void initComponents () {
    lblProd = new JLabel ("Product List: ");
    btn_NewUpdate = new JButton ("Add");
    btn_Delete = new JButton ("Remove");
    lbl_SelectedOption = new JLabel ("Tipo de datos");
    JLabel lbl_Opciones = new JLabel ("Opciones");
    lst_Options = new JList < String > ();
    modeloOpciones = new DefaultListModel < String > ();
    btn_Delete = new JButton ("Eliminar");
    btn_NewUpdate = new JButton ("Nuevo");
    scr_Data = new JScrollPane ();
    cmb_Suppliers = new JComboBox < String > ();
    modeloOpciones.addElement ("Proveedores");
    modeloOpciones.addElement ("Productos");
    modeloOpciones.addElement ("Partidas");
    lst_Options.setModel (modeloOpciones);
    tbl_Settings = createTable ();
    tbl_Settings.setFillsViewportHeight (true);
    scr_Data = new JScrollPane (tbl_Settings);
    tbl_Settings.setPreferredScrollableViewportSize (tbl_Settings.getPreferredSize ());
    setLayout (new MigLayout ("", "[right]"));
    add (lbl_Opciones, "growx,aligny, top, wrap");
    add (lst_Options, "grow");
    add (scr_Data, "width 100%, growx, push, span, wrap");
    scr_Data.setViewportView (tbl_Settings);
    lbl_Opciones.setHorizontalAlignment (SwingConstants.CENTER);
    btn_Delete.setHorizontalAlignment (SwingConstants.RIGHT);
    btn_NewUpdate.setHorizontalAlignment (SwingConstants.RIGHT);
    add (btn_Delete, "bottom, span 2");
    add (btn_NewUpdate, "bottom");
    refreshCombo (cmb_Suppliers);
}
----------------------------------------

private void initComponents () {
    lblProd = new JLabel ("Product List: ");
    lbl_cmb_supplier = new JLabel ("Proveedor");
    btn_NewUpdate = new JButton ("Add");
    btn_Delete = new JButton ("Remove");
    lbl_SelectedOption = new JLabel ("Tipo de datos");
    JLabel lbl_Opciones = new JLabel ("Opciones");
    cmb_Suppliers = new JComboBox < ComboItem > ();
    btn_Delete = new JButton ("Eliminar");
    btn_search = new JButton ("Search");
    btn_NewUpdate = new JButton ("Nuevo");
    scr_Data = new JScrollPane ();
    JComboBox < String > cmb_Suppliers = new JComboBox < String > ();
    JButton btn_New = new JButton ("Nuevo");
    JButton btn_Delete = new JButton ("Cancelar");
    JButton btn_PDF = new JButton ("Crea PDF");
    JButton btn_Send = new JButton ("Envia por correo");
    tbl_Settings = createTable ();
    tbl_Settings.setFillsViewportHeight (true);
    scr_Data = new JScrollPane (tbl_Settings);
    tbl_Settings.setPreferredScrollableViewportSize (tbl_Settings.getPreferredSize ());
    filterPanel = new JPanel ();
    setLayout (new MigLayout ("debug", "[122px][129px][23px][45px][148px,grow]", "[][100px,grow][]"));
    add (lbl_Opciones, "growx, wrap");
    filterPanel.add (lbl_cmb_supplier);
    filterPanel.add (cmb_Suppliers);
    filterPanel.add (btn_search, "grow, spany, wrap");
    add (filterPanel, "wrap");
    add (scr_Data, "width 100%, growx, push, span, wrap");
    add (btn_New);
    add (btn_PDF);
    add (btn_Send);
    add (btn_Delete);
    refreshCombo (cmb_Suppliers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37958980_37961162_1_19
37958980_37961769_7_35
Title: How to calculate number of days since the start of the year 
----------------------------------------

public static void main (String [] strings) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a month number: ");
    int month = input.nextInt ();
    System.out.print ("Enter a year: ");
    int year = input.nextInt ();
    input.close ();
    LocalDate date = LocalDate.of (year, Month.of (month), 01);
    int length = date.getMonth ().length (false);
    System.out.print (Month.of (month).getDisplayName (TextStyle.FULL, Locale.US) + " " + year + " has " + length + " days");
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int month;
    int year;
    int day;
    int remainingDays = 0, numDays = 0, totalDays = 365;
    System.out.println ("Please enter the Month: ");
    month = input.nextInt ();
    System.out.println ("Please enter the Year: ");
    year = input.nextInt ();
    System.out.println ("Please enter the Day: ");
    day = input.nextInt ();
    if (isLeapYear (year)) {
        totalDays ++;
    }
    for (int iMonth = 1;
    iMonth < month; iMonth ++) {
        numDays += MONTH_LENGTHS [iMonth];
        if (iMonth == 2 && isLeapYear (year)) {
            numDays ++;
        }
    }
    numDays += day;
    remainingDays = totalDays - numDays;
    System.out.println ("Number of days since start of the year = " + numDays);
    System.out.println ("Remaining days of the year = " + remainingDays);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37962971_37963350_1_15
37962971_37963373_4_24
Title: Compare two arraylists to return the latest date 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > keys = new ArrayList < > (Arrays.asList ("1", "1", "1", "2", "2", "3"));
    ArrayList < String > values = new ArrayList < > (Arrays.asList ("2016-06-22 07:18:45", "2016-06-22 08:18:45", "2016-06-22 09:18:45", "2016-06-22 03:18:45", "2016-06-22 04:18:45", "2016-06-22 01:18:45"));
    HashMap < String, String > map = new HashMap < String, String > ();
    for (int i = 0;
    keys.size () == values.size () && i < keys.size (); i ++) {
        String key = keys.get (i);
        String value = values.get (i);
        if (! map.containsKey (key) || dateAsNo (value) > dateAsNo (map.get (key))) {
            map.put (key, value);
        }
    }
    System.out.println (map);
}
----------------------------------------

public static void main (String args []) {
    ArrayList < String > keys = new ArrayList < > ();
    ArrayList < String > values = new ArrayList < > ();
    keys.add ("1");
    keys.add ("1");
    keys.add ("1");
    keys.add ("2");
    keys.add ("2");
    keys.add ("3");
    values.add ("2016-06-22 07:18:45");
    values.add ("2016-06-22 08:18:45");
    values.add ("2016-06-22 09:18:45");
    values.add ("2016-06-22 03:18:45");
    values.add ("2016-06-22 04:18:45");
    values.add ("2016-06-22 01:18:45");
    LinkedHashMap < String, String > map = new LinkedHashMap < String, String > ();
    for (int i = 0;
    i < keys.size (); i ++) {
        map.put (keys.get (i), values.get (i));
    }
    System.out.println (map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37963874_37964698_3_21
37963874_37964800_1_23
Title: A java program to find out the frequrncy of a word using Scanner class 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter a sentence:\t");
    String sentence = scanner.nextLine ();
    System.out.print ("Enter a word:\t");
    String word = scanner.nextLine ();
    int count = 0;
    while (! sentence.equals ("")) {
        if (sentence.contains (word)) {
            sentence = sentence.substring (sentence.indexOf (word) + word.length ());
            count ++;
        } else {
            sentence = "";
        }
    }
    System.out.println ("in your sentence the frequency of \"" + word + "\" is:\t" + count);
}
----------------------------------------

public static void main (String args []) throws IOException {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the String: ");
    String s = in.nextLine ();
    System.out.println ("Enter substring: ");
    String sub = in.nextLine ();
    int ind, count = 0;
    for (int i = 0;
    i + sub.length () <= s.length (); i ++) {
        ind = s.indexOf (sub, i);
        if (ind >= 0) {
            count ++;
            i = ind;
            ind = - 1;
        }
    }
    System.out.println ("Occurence of '" + sub + "' in String is " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37963874_37964698_3_21
37963874_37965102_7_21
Title: A java program to find out the frequrncy of a word using Scanner class 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter a sentence:\t");
    String sentence = scanner.nextLine ();
    System.out.print ("Enter a word:\t");
    String word = scanner.nextLine ();
    int count = 0;
    while (! sentence.equals ("")) {
        if (sentence.contains (word)) {
            sentence = sentence.substring (sentence.indexOf (word) + word.length ());
            count ++;
        } else {
            sentence = "";
        }
    }
    System.out.println ("in your sentence the frequency of \"" + word + "\" is:\t" + count);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter a sentence:\t");
    String sentence = scanner.nextLine ();
    System.out.print ("Enter a word:\t");
    String word = scanner.nextLine ();
    Pattern p = Pattern.compile (word);
    Matcher m = p.matcher (sentence);
    int count = 0;
    while (m.find ()) {
        count += 1;
    }
    System.out.println ("in your sentence the frequency of \"" + word + "\" is:\t" + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37963874_37964800_1_23
37963874_37965102_7_21
Title: A java program to find out the frequrncy of a word using Scanner class 
----------------------------------------

public static void main (String args []) throws IOException {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the String: ");
    String s = in.nextLine ();
    System.out.println ("Enter substring: ");
    String sub = in.nextLine ();
    int ind, count = 0;
    for (int i = 0;
    i + sub.length () <= s.length (); i ++) {
        ind = s.indexOf (sub, i);
        if (ind >= 0) {
            count ++;
            i = ind;
            ind = - 1;
        }
    }
    System.out.println ("Occurence of '" + sub + "' in String is " + count);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter a sentence:\t");
    String sentence = scanner.nextLine ();
    System.out.print ("Enter a word:\t");
    String word = scanner.nextLine ();
    Pattern p = Pattern.compile (word);
    Matcher m = p.matcher (sentence);
    int count = 0;
    while (m.find ()) {
        count += 1;
    }
    System.out.println ("in your sentence the frequency of \"" + word + "\" is:\t" + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
37966852_37967289_1_16
37966852_37967305_4_17
Title: program that prints the result to linear equation of : ax+b = 0 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Bitte geben sie den Wert für a ein : ");
    Double a = input.nextDouble ();
    Double b = input.nextDouble ();
    Double rechnung;
    if (a != 0) rechnung = - b / a;
    else {
        System.out.println ("x goes to infinity");
        return;
    }
    System.out.println (rechnung);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Bitte geben sie den Wert für a ein : ");
    double a = input.nextDouble ();
    System.out.print ("Bitte geben sie den Wert für b ein : ");
    double b = input.nextDouble ();
    if (a != 0) {
        System.out.println ("result is " + (- b / a));
    } else {
        System.out.println ("result is infinity");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3797941_16608976_1_13
3797941_3798002_2_18
Title: How to make a thread sleep for specific amount of time in java? 
----------------------------------------

public void run () {
    try {
        try {
            Thread.sleep (3000);
        } catch (Exception e) {
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public void run () {
    boolean sawException = false;
    for (int i = 0;
    i < 10; i ++) {
        try {
            Thread.sleep (300);
        } catch (InterruptedException e) {
            sawException = true;
        }
    }
    if (sawException) Thread.currentThread ().interrupt ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3797941_16608976_1_13
3797941_3798284_1_30
Title: How to make a thread sleep for specific amount of time in java? 
----------------------------------------

public void run () {
    try {
        try {
            Thread.sleep (3000);
        } catch (Exception e) {
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public void run () {
    long timeToSleep = 3000;
    long start, end, slept;
    boolean interrupted;
    while (timeToSleep > 0) {
        start = System.currentTimeMillis ();
        try {
            Thread.sleep (timeToSleep);
            break;
        } catch (InterruptedException e) {
            end = System.currentTimeMillis ();
            slept = end - start;
            timeToSleep -= slept;
            interrupted = true
        }
    }
    if (interrupted) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3797941_3798002_2_18
3797941_3798284_1_30
Title: How to make a thread sleep for specific amount of time in java? 
----------------------------------------

public void run () {
    boolean sawException = false;
    for (int i = 0;
    i < 10; i ++) {
        try {
            Thread.sleep (300);
        } catch (InterruptedException e) {
            sawException = true;
        }
    }
    if (sawException) Thread.currentThread ().interrupt ();

}
----------------------------------------

public void run () {
    long timeToSleep = 3000;
    long start, end, slept;
    boolean interrupted;
    while (timeToSleep > 0) {
        start = System.currentTimeMillis ();
        try {
            Thread.sleep (timeToSleep);
            break;
        } catch (InterruptedException e) {
            end = System.currentTimeMillis ();
            slept = end - start;
            timeToSleep -= slept;
            interrupted = true
        }
    }
    if (interrupted) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3798129_3798421_66_79
3798129_3798421_82_95
Title: Postgres Exception : No results were returned by the query. 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3798129_3798421_66_79
3798129_3798421_97_110
Title: Postgres Exception : No results were returned by the query. 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
