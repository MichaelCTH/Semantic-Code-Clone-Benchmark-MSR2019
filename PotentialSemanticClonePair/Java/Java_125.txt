$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52940543_52940693_1_46
52940543_52940891_4_22
Title: How do you check if inputted array values are the same? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] array = new int [5];
    int counter = 0;
    while (counter < 5) {
        System.out.print ("Enter number between 10 & 100: ");
        int userInput = input.nextInt ();
        if (userInput < 10 || userInput > 100) {
            System.out.print ("Please enter number between 10 & 100.\n");
        } else {
            boolean isItDuplicate = false;
            for (int i = 0;
            i < counter; i ++) {
                if (userInput == array [i]) {
                    isItDuplicate = true;
                }
            }
            if (isItDuplicate == true) {
                System.out.print ("Please enter a number that is not a duplicate.\n");
            } else {
                array [counter] = userInput;
                System.out.println (array [counter]);
                counter ++;
            }
        }
    }
    System.out.println ();
    System.out.println ("The value of Array[0]: " + array [0]);
    System.out.println ("The value of Array[1]: " + array [1]);
    System.out.println ("The value of Array[2]: " + array [2]);
    System.out.println ("The value of Array[3]: " + array [3]);
    System.out.println ("The value of Array[4]: " + array [4]);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int [] array = new int [5];
    int counter = 0;
    int userInput;
    while (counter < 5) {
        System.out.print ("Enter a number between 10 & 100: ");
        userInput = in.nextInt ();
        if ((userInput >= 10 && userInput <= 100) && ! searchDuplicates (array, userInput)) {
            array [counter] = userInput;
            counter ++;
        } else {
            System.out.println ("Invalid value entered");
        }
    }
    for (int i = 0;
    i < array.length; i ++) System.out.println ("Value " + (i + 1) + ": " + array [i]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5294590_11782617_1_16
5294590_5294656_1_15
Title: How can I add different menu items to multiple context menus? 
----------------------------------------

@Override
public void onCreateContextMenu (ContextMenu mymenu, View v, ContextMenuInfo menuInfo) {
    Toast.makeText (this, String.valueOf (v.getId ()), 1000).show ();
    if (v.equals (txtnum1) == true) {
        mymenu.add (0, 1, 0, "Square");
        mymenu.add (0, 2, 0, "Qube");
    } else if (v.equals (txtnum2) == true) {
        mymenu.add (0, 1, 0, "xxx");
        mymenu.add (0, 2, 0, "yyy");
    }

    super.onCreateContextMenu (mymenu, v, menuInfo);
}
----------------------------------------

public void onCreateContextMenu (ContextMenu menu, View v, ContextMenuInfo menuInfo) {
    super.onCreateContextMenu (menu, v, menuInfo);
    if (v == Button1) {
        menu.setHeaderTitle ("Select Notification");
        menu.add (0, v.getId (), 0, "Algebraic");
        menu.add (0, v.getId (), 0, "Knuckle Train");
        menu.add (0, v.getId (), 0, "In My Element ");
        menu.add (0, v.getId (), 0, "Let's Get This Party");
        menu.add (0, v.getId (), 0, "Shmowzow");
        menu.add (0, v.getId (), 0, "What the Jug");
        menu.add (0, v.getId (), 0, "Word to Your Mother");
    } else if (v == Button2) {
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52946083_52946358_1_49
52946083_52947771_27_46
Title: How to avoid a lot of if else conditions 
----------------------------------------

private static String getXSIType (String fieldType) {
    String result = new String ();
    switch (fieldType) {
        case "_checkBox" :
            result = "platformCore:BooleanCustomFieldRef";
            break;
        case "_integerNumber" :
            result = "platformCore:LongCustomFieldRef";
            break;
        case "_multipleSelect" :
            result = "platformCore:MultiSelectCustomFieldRef";
            break;
        case "_currency" :
        case "_decimalNumber" :
        case "_percent" :
            result = "platformCore:DoubleCustomFieldRef";
            break;
        case "_document" :
        case "_listRecord" :
        case "_image" :
            result = "platformCore:SelectCustomFieldRef";
            break;
        case "_date" :
        case "_datetime" :
        case "_timeOfDay" :
            result = "platformCore:DateCustomFieldRef";
            break;
        case "_freeFormText" :
        case "_eMailAddress" :
        case "_help" :
        case "_hyperlink" :
        case "_inlineText" :
        case "_longText" :
        case "_password" :
        case "_phoneNumber" :
        case "_richText" :
        case "_textArea" :
            result = "platformCore:StringCustomFieldRef";
            break;
        default :
            result = "platformCore:StringCustomFieldRef";
            break;
    }
    return result;
}
----------------------------------------

private static String getXSIType (String fieldType) {
    if (fieldType.matches ("_freeFormText|_eMailAddress|_help|_hyperlink|_inlineText|_longText|_password|_phoneNumber|_richText|_textArea")) {
        return "platformCore:StringCustomFieldRef";
    }
    switch (Types.getEnum (fieldType)) {
        case INTEGER_NUM :
            return "platformCore:LongCustomFieldRef";
        case MULTI_SELECT :
            return "platformCore:MultiSelectCustomFieldRef";
        case DOC :
        case LIST_RCRD :
        case IMG :
            return "platformCore:SelectCustomFieldRef";
        case CURRENCY :
        case DEC_NUM :
            return "platformCore:DoubleCustomFieldRef";
        case CHK_BOX :
            return "platformCore:BooleanCustomFieldRef";
        case DATE :
        case DTTM :
        case TIMESTAMP :
            return "platformCore:DateCustomFieldRef";
        default :
            return "platformCore:StringCustomFieldRef";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52946159_52946780_1_22
52946159_52946854_3_22
Title: Maximum Repeating characters and count 
----------------------------------------

static Entry < String, Integer > charactercountIndex (String str) {
    HashMap < String, Integer > stringIntegerHashMap = new HashMap < > ();
    for (String letter : str.split ("")) {
        if (stringIntegerHashMap.containsKey (letter)) {
            stringIntegerHashMap.put (letter, (stringIntegerHashMap.get (letter) + 1));
        } else {
            stringIntegerHashMap.put (letter, 1);
        }
    }
    Entry < String, Integer > maxEntry = null;
    for (Entry < String, Integer > entry : stringIntegerHashMap.entrySet ()) {
        if (maxEntry == null || entry.getValue ().compareTo (maxEntry.getValue ()) > 0) {
            maxEntry = entry;
        }
    }
    return maxEntry;
}
----------------------------------------

private static CountResult charactercountIndex (String str) {
    int len = str.length ();
    char res = str.charAt (0);
    int count = 0;
    for (int i = 0;
    i < len; i ++) {
        int cur_count = 1;
        for (int j = i + 1;
        j < len; j ++) {
            if (str.charAt (i) != str.charAt (j)) break;

            cur_count ++;
        }
        if (cur_count > count) {
            res = str.charAt (i);
            count = cur_count;
        }
    }
    return new CountResult (res, count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52956952_52958986_232_259
52956952_52958986_328_344
Title: How do I change Swing Timer Delay inside actionPerformed() 
----------------------------------------

public List < KeyFrame < T > > getKeyFramesBetween (double progress, double delta) {
    int startAt = 0;
    List < Double > keyFrames = new ArrayList < > (mapEvents.keySet ());
    while (startAt < keyFrames.size () && keyFrames.get (startAt) <= progress - delta) {
        startAt ++;
    }
    startAt = Math.min (keyFrames.size () - 1, startAt);
    int endAt = startAt;
    while (endAt < keyFrames.size () && keyFrames.get (endAt) <= progress + delta) {
        endAt ++;
    }
    endAt = Math.min (keyFrames.size () - 1, endAt);
    List < KeyFrame < T > > frames = new ArrayList < > (5);
    for (int index = startAt;
    index <= endAt; index ++) {
        KeyFrame < T > keyFrame = mapEvents.get (keyFrames.get (index));
        if (keyFrame.getProgress () >= progress - delta && keyFrame.getProgress () <= progress + delta) {
            frames.add (keyFrame);
        }
    }
    return frames;
}
----------------------------------------

public List < KeyFrame < T > > getKeyFramesBetween (float progress) {
    List < KeyFrame < T > > frames = new ArrayList < > (2);
    int startAt = 0;
    Float [] keyFrames = mapEvents.keySet ().toArray (new Float [mapEvents.size ()]);
    while (startAt < keyFrames.length && keyFrames [startAt] <= progress) {
        startAt ++;
    }
    startAt = Math.min (startAt, keyFrames.length - 1);
    frames.add (mapEvents.get (keyFrames [startAt - 1]));
    frames.add (mapEvents.get (keyFrames [startAt]));
    return frames;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52959987_52960186_9_26
52959987_52960210_6_16
Title: How to check if the letters/chars in a string are all found in a char array 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        char [] chars = str.toCharArray ();
        int j = 0;
        for (; j < chars.length; j ++) {
            if (! Arrays.asList (f).contains (chars [j])) {
                break;
            }
        }
        if (j == chars.length) {
            count ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        if (str.matches (f)) {
            count ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52959987_52960186_9_26
52959987_52960254_13_22
Title: How to check if the letters/chars in a string are all found in a char array 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        char [] chars = str.toCharArray ();
        int j = 0;
        for (; j < chars.length; j ++) {
            if (! Arrays.asList (f).contains (chars [j])) {
                break;
            }
        }
        if (j == chars.length) {
            count ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        if (containsOnly (str, f)) count ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52959987_52960210_6_16
52959987_52960254_13_22
Title: How to check if the letters/chars in a string are all found in a char array 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        if (str.matches (f)) {
            count ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    int count = 0;
    for (int i = 0;
    i < n; i ++) {
        String str = sc.nextLine ();
        if (containsOnly (str, f)) count ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52963562_52965012_1_13
52963562_52965902_3_26
Title: how to make a specific if for string java 
----------------------------------------

public static void main (String [] args) {
    String testStr = "ABC";
    StringBuilder sb = new StringBuilder ();
    char [] arrStr = testStr.toCharArray ();
    for (int i = 0;
    i < arrStr.length; i ++) {
        if (i == 0) {
            sb.append (testStr + "| This is " + arrStr [i]);
        } else {
            sb.append (" And " + arrStr [i]);
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    try {
        Scanner scanner;
        String line;
        scanner = new Scanner (System.in);
        for (;;) {
            System.out.print ("Enter line: ");
            System.out.flush ();
            line = scanner.nextLine ();
            if (line.isEmpty ()) break;

            check (line);
        }
        scanner.close ();
    } catch (Exception exception_ipar) {
        exception_ipar.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52966289_52966468_6_15
52966289_52967474_6_15
Title: Why does my code result in a compile error? 
----------------------------------------

public static void main (String [] args) {
    List < Human > humans = new ArrayList < Human > ();
    humans.add (new Human (13));
    humans.add (new Human (33));
    humans.add (new Human (21));
    humans.add (new Human (21));
    Collections.sort (humans);
    System.out.print (humans.get (0).age);
    System.out.print (humans.size ());
}
----------------------------------------

public static void main (String [] args) {
    List < Human > humans = new ArrayList < Human > ();
    humans.add (new Human (13));
    humans.add (new Human (33));
    humans.add (new Human (21));
    humans.add (new Human (21));
    Collections.sort (humans);
    System.out.print (humans.get (0).age);
    System.out.print (humans.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52966920_52967434_48_58
52966920_52967809_1_11
Title: Struggling with finding the closest occurence of character in string 
----------------------------------------

public static List < Integer > closest (String s, List < Integer > queries) {
    List < Integer > result = new ArrayList < Integer > ();
    List < Integer > db = prepareDb (s);
    for (int i = 0;
    i < queries.size (); i ++) {
        result.add (db.get (queries.get (i)));
    }
    return result;
}
----------------------------------------

public static int closest (String s, int index) {
    char target = s.charAt (index);
    int next = s.indexOf (target, index + 1);
    int previous = s.substring (0, index).lastIndexOf (target);
    if (index - previous <= next - index) {
        return previous;
    } else {
        return next;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52970372_52970587_6_21
52970372_52970684_1_13
Title: Find highest index value in array 
----------------------------------------

public static int findMax (int [] array) {
    if (array == null || array.length == 0) {
        return - 1;
    }
    int maxIndex = 0;
    int maxNum = array [0];
    for (int i = 1;
    i < array.length; i ++) {
        if (array [i] > maxNum) {
            maxNum = array [i];
            maxIndex = i;
        }
    }
    return maxIndex;
}
----------------------------------------

public void findMax (int [] array) {
    int values = - 99999999;
    int index = - 1;
    if (array.length == 0) {
        System.out.println ("-1");
    }
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] > values) {
            values = array [i];
            index = i;
        }
        System.out.println ("Max element is" + values + "and index is" + index);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52970372_52970587_6_21
52970372_52970713_1_15
Title: Find highest index value in array 
----------------------------------------

public static int findMax (int [] array) {
    if (array == null || array.length == 0) {
        return - 1;
    }
    int maxIndex = 0;
    int maxNum = array [0];
    for (int i = 1;
    i < array.length; i ++) {
        if (array [i] > maxNum) {
            maxNum = array [i];
            maxIndex = i;
        }
    }
    return maxIndex;
}
----------------------------------------

public int findMax (int [] array) {
    if (array == null || array.length == 0) return - 1;

    int index = 0;
    int max = - Integer.MAX_VALUE;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] > max) {
            index = i;
            max = array [i];
        }
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52970372_52970684_1_13
52970372_52970713_1_15
Title: Find highest index value in array 
----------------------------------------

public void findMax (int [] array) {
    int values = - 99999999;
    int index = - 1;
    if (array.length == 0) {
        System.out.println ("-1");
    }
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] > values) {
            values = array [i];
            index = i;
        }
        System.out.println ("Max element is" + values + "and index is" + index);
    }
}
----------------------------------------

public int findMax (int [] array) {
    if (array == null || array.length == 0) return - 1;

    int index = 0;
    int max = - Integer.MAX_VALUE;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] > max) {
            index = i;
            max = array [i];
        }
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52976205_52976251_1_14
52976205_52976266_1_14
Title: Trying to compile code but keep getting the same error? 
----------------------------------------

private boolean isVowel (int i) {
    if (w.charAt (i) == 'a') return true;
    else if (w.charAt (i) == 'e') return true;
    else if (w.charAt (i) == 'i') return true;
    else if (w.charAt (i) == 'o') return true;
    else if (w.charAt (i) == 'u') return true;
    else return false;

}
----------------------------------------

private boolean isVowel (int i) {
    if (w.charAt (i) == 'a') return true;
    else if (w.charAt (i) == 'e') return true;
    else if (w.charAt (i) == 'i') return true;
    else if (w.charAt (i) == 'o') return true;
    else if (w.charAt (i) == 'u') return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52976205_52976251_1_14
52976205_52977621_1_16
Title: Trying to compile code but keep getting the same error? 
----------------------------------------

private boolean isVowel (int i) {
    if (w.charAt (i) == 'a') return true;
    else if (w.charAt (i) == 'e') return true;
    else if (w.charAt (i) == 'i') return true;
    else if (w.charAt (i) == 'o') return true;
    else if (w.charAt (i) == 'u') return true;
    else return false;

}
----------------------------------------

private boolean isVowel (int i) {
    boolean found = false;
    if (w.charAt (i) == 'a') found = true;
    else if (w.charAt (i) == 'e') found = true;
    else if (w.charAt (i) == 'i') found = true;
    else if (w.charAt (i) == 'o') found = true;
    else if (w.charAt (i) == 'u') found = true;

    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52976205_52976266_1_14
52976205_52977621_1_16
Title: Trying to compile code but keep getting the same error? 
----------------------------------------

private boolean isVowel (int i) {
    if (w.charAt (i) == 'a') return true;
    else if (w.charAt (i) == 'e') return true;
    else if (w.charAt (i) == 'i') return true;
    else if (w.charAt (i) == 'o') return true;
    else if (w.charAt (i) == 'u') return true;

    return false;
}
----------------------------------------

private boolean isVowel (int i) {
    boolean found = false;
    if (w.charAt (i) == 'a') found = true;
    else if (w.charAt (i) == 'e') found = true;
    else if (w.charAt (i) == 'i') found = true;
    else if (w.charAt (i) == 'o') found = true;
    else if (w.charAt (i) == 'u') found = true;

    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52980736_52982295_40_54
52980736_52982295_5_28
Title: Dictionary input file and string manipulation 
----------------------------------------

private static Set < String > findWords (File file, Predicate < int [] > predicate, int numberOfLetters) throws FileNotFoundException {
    try (Scanner scan = new Scanner (file)) {
        Set < String > words = new LinkedHashSet < > ();
        int [] histogram = new int [26];
        while (scan.hasNext ()) {
            String word = scan.next ().toLowerCase ();
            if (word.length () == numberOfLetters && predicate.test (histogram (word, histogram))) words.add (word);

        }
        return words;
    }
}
----------------------------------------

public static void findWords (File file) throws FileNotFoundException {
    try (Scanner scan = new Scanner (System.in)) {
        System.out.println ("Enter the possible letters in your word: ");
        String lettersBeingTested = scan.next ();
        System.out.println ("Enter the number of letters in your target words: ");
        int numberOfLetters = scan.nextInt ();
        int [] requiredHistogram = histogram (lettersBeingTested, new int [26]);
        Predicate < int [] > predicate = wordHistogram -> {
            for (int i = 0;
            i < requiredHistogram.length; i ++) if (requiredHistogram [i] > 0 && wordHistogram [i] < requiredHistogram [i]) return false;

            return true;
        };
        Set < String > words = findWords (file, predicate, numberOfLetters);
        int i = 1;
        for (String word : words) System.out.println (i + " " + word);

        System.out.println ("End of list: " + words.size () + " words found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52995197_52995328_1_20
52995197_52995556_1_32
Title: How do I fix my java method to correctly iterate through string? 
----------------------------------------

public static boolean Check () {
    String random;
    Scanner sc = new Scanner (System.in);
    random = sc.nextLine ();
    String word = "john";
    sc.close ();
    int findIndex = 0;
    char findChar = word.charAt (findIndex);
    for (char c : random.toCharArray ()) {
        if (findChar == c) {
            findIndex ++;
            if (findIndex == word.length ()) {
                return true;
            }
            findChar = word.charAt (findIndex);
        }
    }
    return false;
}
----------------------------------------

public static boolean Check () {
    String random;
    Scanner sc = new Scanner (System.in);
    random = sc.nextLine ();
    HashMap < String, Boolean > map = new HashMap < String, Boolean > ();
    for (int i = 0;
    i < random.length (); i ++) {
        if (map.size () == 0) {
            if (random.charAt (i) == 'j') {
                map.put ("j", true);
            }
        } else if (map.containsKey ("j") && map.size () == 1) {
            if (random.charAt (i) == 'o') {
                map.put ("o", true);
            }
        } else if (map.containsKey ("o") && map.size () == 2) {
            if (random.charAt (i) == 'h') {
                map.put ("h", true);
            }
        } else if (map.containsKey ("h") && map.size () == 3) {
            if (random.charAt (i) == 'n') {
                map.put ("n", true);
            }
        }

    }
    return map.size () == 4;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52995210_52995454_1_25
52995210_52995492_1_22
Title: Why does this algorithm not sort the last index correctly? 
----------------------------------------

public static void dualSelectionSort (int [] a) {
    for (int i = 0;
    i < a.length - i - 1; i ++) {
        if (a [i] > a [(a.length - 1) - i]) {
            int temp = a [i];
            a [i] = a [(a.length - 1) - i];
            a [(a.length - 1) - i] = temp;
        }
        int min = i;
        int max = (a.length - 1) - i;
        for (int j = i + 1;
        j < (a.length - 1) - i; j ++) {
            if (a [j] < a [min]) {
                min = j;
            }
            if (a [j] > a [max]) {
                max = j;
            }
        }
        int temp1 = a [min];
        int temp2 = a [max];
        a [min] = a [i];
        a [max] = a [(a.length - 1) - i];
        a [i] = temp1;
        a [(a.length - 1) - i] = temp2;
    }
}
----------------------------------------

public static void dualSelectionSort (int [] a) {
    for (int i = 0;
    i < a.length - 1; i ++) {
        int min = i;
        int max = (a.length - 1) - i;
        for (int j = i;
        j < a.length - i; j ++) {
            if (a [j] < a [min]) {
                min = j;
            }
            if (a [j] > a [max]) {
                max = j;
            }
        }
        if (i == max) {
            swap (a, max, a.length - 1 - i);
            swap (a, min, i);
        } else {
            swap (a, min, i);
            swap (a, max, (a.length - 1) - i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53000091_53000164_1_14
53000091_53000178_4_17
Title: manipulating strings in java 
----------------------------------------

public static void main (String [] args) {
    String str = "hello".toUpperCase ();
    String str1 = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == 'A' || str.charAt (i) == 'E' || str.charAt (i) == 'I' || str.charAt (i) == 'O' || str.charAt (i) == 'U') {
            str1 += "AHHH";
        }
        str1 += str.charAt (i);
    }
    System.out.print (str1);
}
----------------------------------------

public static void main (String [] args) {
    String str = "hello";
    StringBuilder sb = new StringBuilder ();
    for (char c : str.toUpperCase ().toCharArray ()) {
        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
            sb.append ("AHHH");
        }
        sb.append (c);
    }
    System.out.print (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53000644_53001299_7_60
53000644_53001318_2_30
Title: Setting a number in a multidimensional array equal to a word 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    File file = new File ("C:/PathToFile/File.txt");
    Scanner scanInt = new Scanner (file);
    String line = "";
    int cycle = 0;
    String [] convertedFirstNums = new String [6];
    int [] [] nums = new int [8] [3];
    while (scanInt.hasNextLine ()) {
        line = scanInt.nextLine ();
        cycle ++;
        if (cycle > 2) {
            String firstNum = "" + line.toCharArray () [0];
            convertedFirstNums [cycle - 3] = switchInteger (Integer.parseInt (firstNum));
            int ind = 0;
            for (char c : line.substring (1).toCharArray ()) {
                switch (c) {
                    case ' ' :
                        break;
                    default :
                        String num = "" + c;
                        nums [cycle - 1] [ind] = Integer.parseInt (num);
                        ind ++;
                        break;
                }
            }
        } else {
            nums [cycle - 1] [0] = Integer.parseInt (line);
        }
    }
    scanInt.close ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (i < 2) System.out.printf ("%d\n", nums [i] [0]);
        else {
            System.out.print (convertedFirstNums [i - 2] + " : ");
            for (int j = 0;
            j < nums [i].length; j ++) {
                System.out.printf ("%d ", nums [i] [j]);
            }
            System.out.println ();
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    String stringArray [] [] = new String [10] [4];
    Scanner scanInt = new Scanner (new File ("File Path"));
    int n = 0;
    int displayCycle = 0;
    if (scanInt.hasNext ()) {
        n = scanInt.nextInt ();
        displayCycle = scanInt.nextInt ();
    }
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            if (scanInt.hasNext ()) {
                stringArray [i] [j] = getStringValue (scanInt.nextInt ());
            }
        }
    }
    for (String [] strArray : stringArray) {
        for (String s : strArray) {
            System.out.print (s + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53005533_53005728_1_12
53005533_53005851_7_21
Title: "setText() error Method cannot resolve for TextView" 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText Username = (EditText) findViewById (R.id.EmployerNameEdit);
    String userName = Username.getText ().toString ();
    TextView changedName = (TextView) findViewById (R.id.employerName);
    changedName.setText (userName);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    et = findViewById (R.id.et);
    tv = findViewById (R.id.tv);
    btn = findViewById (R.id.btn);
    btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            String text = et.getText ().toString ();
            tv.setText (text);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53005533_53005728_1_12
53005533_53007068_1_11
Title: "setText() error Method cannot resolve for TextView" 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText Username = (EditText) findViewById (R.id.EmployerNameEdit);
    String userName = Username.getText ().toString ();
    TextView changedName = (TextView) findViewById (R.id.employerName);
    changedName.setText (userName);
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText Username = (EditText) findViewById (R.id.EmployerNameEdit);
    String userName = Username.getText ().toString ();
    TextView changedName = (TextView) findViewById (R.id.employerName);
    changedName.setText (userName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53005533_53005851_7_21
53005533_53007068_1_11
Title: "setText() error Method cannot resolve for TextView" 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    et = findViewById (R.id.et);
    tv = findViewById (R.id.tv);
    btn = findViewById (R.id.btn);
    btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            String text = et.getText ().toString ();
            tv.setText (text);
        }}

    );
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText Username = (EditText) findViewById (R.id.EmployerNameEdit);
    String userName = Username.getText ().toString ();
    TextView changedName = (TextView) findViewById (R.id.employerName);
    changedName.setText (userName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5300787_5300871_43_86
5300787_5301187_23_47
Title: how do i create a custom cursor adapter for a listview for use with images and text? 
----------------------------------------

public void bindView (View v, Context context, Cursor c) {
    String title = c.getString (c.getColumnIndexOrThrow (ItemDbAdapter.KEY_TITLE));
    String date = c.getString (c.getColumnIndexOrThrow (ItemDbAdapter.KEY_DATE));
    String imagePath = c.getString (c.getColumnIndexOrThrow (ItemDbAdapter.KEY_IMG));
    int deletion = c.getInt (c.getColumnIndexOrThrow (ItemDbAdapter.KEY_DELETION));
    int priority = c.getInt (c.getColumnIndexOrThrow (ItemDbAdapter.KEY_PRIORITY));
    TextView title_text = (TextView) v.findViewById (R.id.item_text);
    if (title_text != null) {
        title_text.setText (title);
    }
    TextView date_text = (TextView) v.findViewById (R.id.item_date);
    if (date_text != null) {
        date_text.setText (date);
    }
    ImageView item_image = (ImageView) v.findViewById (R.id.item_attachment);
    item_image.setVisibility (ImageView.INVISIBLE);
    if (imagePath != null && imagePath.length () != 0 && item_image != null) {
        item_image.setVisibility (ImageView.VISIBLE);
    }
    ImageView del_image = (ImageView) v.findViewById (R.id.item_deletion);
    del_image.setVisibility (ImageView.INVISIBLE);
    if (deletion == 1) {
        del_image.setVisibility (ImageView.VISIBLE);
    }
}
----------------------------------------

public void bindView (View view, Context context, Cursor cursor) {
    TextView tvListText = (TextView) view.findViewById (R.id.txtCheckPoint);
    Date dt = new Date (cursor.getLong (cursor.getColumnIndex (DatabaseHelper.KEY_CHECKPOINT)));
    switch (layoutType) {
        case BLOTTER :
            tvListText.setText (dt.toLocaleString ());
            ((ImageView) view.findViewById (R.id.imgCheckpointInOut)).setImageResource (CheckpointsView.getImageResId (cursor.getCount () - cursor.getPosition ()));
            break;
        case DAY :
            tvListText.setText (new SimpleDateFormat ("HH:mm:ss").format (dt));
            ((ImageView) view.findViewById (R.id.imgCheckpointInOut)).setImageResource (CheckpointsView.getImageResId (cursor.getPosition () + 1));
            break;
        case MONTH :
            tvListText.setText (new SimpleDateFormat ("MMM dd HH:mm:ss").format (dt));
            ((ImageView) view.findViewById (R.id.imgCheckpointInOut)).setImageResource (CheckpointsView.getImageResId (cursor.getPosition () + 1));
            break;
        case OVERVIEW :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53015572_53015782_22_30
53015572_53015783_37_46
Title: Java program to calculalate how much I weigh on another planet 
----------------------------------------

public static void planetSelection () {
    Scanner in = new Scanner (System.in);
    System.out.println ("Choose a Planet in our Solar System: \n 1). Mercury \n 2). Venus \n 3). Earth \n 4). Moon \n 5). Mars \n 6). Jupiter \n 7). Saturn \n 8). Uranus \n 9). Neptune \n 10). Pluto \n Select one planet from (1-10");
    int choice = in.nextInt ();
    if (choice == 1) {
        double weightOnMercuryLbs = weightlbs * 0.4155;
        System.out.println ("Your weight on earth: " + weightLbs + " lbs. On Mercury you weigh: " + weightOnMercuryLbs + " lbs.");
    }
}
----------------------------------------

public static void planetSelection () {
    Scanner in = new Scanner (System.in);
    System.out.println ("Choose a Planet in our Solar System: \n 1). Mercury \n 2). Venus \n 3). Earth \n 4). Moon \n 5). Mars \n 6). Jupiter \n 7). Saturn \n 8). Uranus \n 9). Neptune \n 10). Pluto \n Select one planet from (1-10");
    int choice = in.nextInt ();
    if (choice == 1) {
        System.out.printf ("Your weight on Mercury is: %.1f lbs", (weightlbs * 0.4155));
        weight ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53015572_53015782_6_20
53015572_53015783_15_35
Title: Java program to calculalate how much I weigh on another planet 
----------------------------------------

public static void weight () {
    Scanner in = new Scanner (System.in);
    System.out.println ("\n1). Please type 1 and press enter, to know the weight in pounds." + "\n2). Please type 2 and press enter, to know the weight in kg." + "\n3). Please type 3 to exit this program.");
    int choice = in.nextInt ();
    if (choice == 1) {
        System.out.println ("You have chosen weight in lbs, please enter your current weight in pounds.");
        weightlbs = in.nextDouble ();
    } else if (choice == 2) {
        System.out.println ("You have chosen weight in kgs, please enter your current weight in pounds.");
        weightkg = in.nextDouble ();
    } else {
        System.out.println ("Goodbye.");
        System.exit (1);
    }

}
----------------------------------------

public static void weight () {
    boolean exit = false;
    Scanner in = new Scanner (System.in);
    System.out.println ("\n1). Please type 1 and press enter, to know the weight in pounds." + "\n2). Please type 2 and press enter, to know the weight in kg." + "\n3). Please type 3 to exit this program.");
    int choice = in.nextInt ();
    if (choice == 1) {
        System.out.println ("You have chosen weight in lbs, please enter your current weight in pounds.");
        weightlbs = in.nextDouble ();
    }
    if (choice == 2) {
        System.out.println ("You have chosen weight in kg, please enter your weight in kilograms.");
        weightkg = in.nextDouble ();
    }
    if (choice == 3) {
        System.out.println ("Ooops.. Something is not quite right, please try again later!");
        exit = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53018097_53018280_2_23
53018097_53018349_6_25
Title: Why does this loop not run properly 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String response = JOptionPane.showInputDialog (null, "How many problems would you like to solve?");
    int noOfTimes = Integer.parseInt (response);
    String result = null;
    for (int counter = 0;
    counter < noOfTimes; counter ++) {
        Random obj = new Random ();
        int num1 = obj.nextInt (10);
        int num2 = obj.nextInt (10);
        int rand = num1 + num2;
        int answer = Integer.parseInt (JOptionPane.showInputDialog (num1 + "+" + num2));
        if (answer == rand) {
            result = "Correct";
        } else {
            result = "Incorrect";
        }
        JOptionPane.showMessageDialog (null, result);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random obj = new Random ();
    String timesString = JOptionPane.showInputDialog (null, "How many problems would you like to solve?");
    int timesInt = Integer.parseInt (timesString);
    int counter = 0;
    while (counter != timesInt) {
        counter ++;
        int num1 = obj.nextInt (10);
        int num2 = obj.nextInt (10);
        int rand = num1 + num2;
        String answerString = JOptionPane.showInputDialog (num1 + "+" + num2);
        int answerInt = Integer.parseInt (answerString);
        JOptionPane.showMessageDialog (null, answerInt == rand ? "Correct" : "Incorrect");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53023107_53023202_1_10
53023107_53025429_1_12
Title: Calendar between two others with java.Calendar 
----------------------------------------

public int recaudacion (Calendar p_fechaDesde, Calendar p_fechaHasta) {
    int cont = 0;
    for (int i = 0;
    i < this.getVisitantes ().size (); i ++) {
        if (p_fechaDesde.after (((Visitante) this.getVisitantes ().get (i)).getFechaVisita ()) && p_fechaHasta.before (((Visitante) this.getVisitantes ().get (i)).getFechaVisita ())) cont ++;

    }
    return cont;
}
----------------------------------------

public int recaudacion (Calendar p_fechaDesde, Calendar p_fechaHasta) {
    int cont = 0;
    for (int i = 0;
    i < this.getVisitantes ().size (); i ++) {
        if (p_fechaDesde.before (((Visitante) this.getVisitantes ().get (i)).getFechaVisita ()) && p_fechaHasta.after (((Visitante) this.getVisitantes ().get (i)).getFechaVisita ())) {
            cont ++;
        }
    }
    return cont;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53039346_53039484_1_15
53039346_53040164_14_27
Title: "Java: Receives three numbers (short int long) the method must RETURN the largest number" 
----------------------------------------

public static int largest (short a, int b, long c) {
    if (a > b) {
        if (a > c) {
            return a;
        } else return (int) c;

    } else {
        if (b > c) return b;
        else return (int) c;

    }
}
----------------------------------------

public static void largest (short a, int b, long c) {
    if (a > b && a > c) {
        System.out.println (a + " Is the largest number");
    } else if (b > a && b > c) {
        System.out.println (b + " Is the largest number");
    } else if (c > a && c > b) {
        System.out.println (c + " Is the largest number");
    } else {
        System.out.println ("incorrect character");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53050788_53051080_1_27
53050788_53051089_1_26
Title: What should I change to my code in order that the program draws the image seen in picture 1? 
----------------------------------------

public void paint (Graphics g) {
    int x25 = this.getWidth () / 4;
    int x75 = this.getWidth () * 3 / 4;
    int y25 = this.getHeight () / 4;
    int y75 = this.getHeight () * 3 / 4;
    int x50 = this.getWidth () / 2;
    int y50 = this.getHeight () / 2;
    int stepX = (x75 - x25) / 40;
    g.drawLine (x75, y25, x25, y25);
    g.drawLine (x75, y25, x25, y75);
    g.drawLine (x25, y75, x75, y75);
    g.drawLine (x25, y25, x75, y75);
    for (int i = 1;
    x25 + (i * stepX) < x75; i ++) {
        g.drawLine (x50, y50, x25 + (stepX * i), y25);
        g.drawLine (x50, y50, x25 + (stepX * i), y75);
    }
}
----------------------------------------

@Override
public void paint (Graphics g) {
    g.setColor (Color.WHITE);
    g.fillRect (0, 0, getWidth (), getHeight ());
    int x25 = this.getWidth () / 4;
    int x75 = this.getWidth () * 3 / 4;
    int y25 = this.getHeight () / 4;
    int y75 = this.getHeight () * 3 / 4;
    g.setColor (Color.LIGHT_GRAY);
    int width = x75 - x25;
    double step = width / 40.0;
    for (double i = 0;
    i < width; i += step) {
        g.drawLine ((int) (x25 + i), y25, (int) (x75 - i), y75);
    }
    g.setColor (Color.BLACK);
    g.drawLine (x25, y25, x75, y25);
    g.drawLine (x25, y75, x75, y75);
    g.drawLine (x25, y25, x75, y75);
    g.drawLine (x75, y25, x25, y75);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53050909_53051123_1_12
53050909_53051744_1_21
Title: Break while loop only when all conditions in for loop are met 
----------------------------------------

public static boolean checkUpright () throws InterruptedException {
    int counter = 0;
    while (counter <= theBots.length) {
        if (! theBots [i].isUpright ()) {
            System.out.println ("Please ensure I'm upright");
            Thread.sleep (500);
        } else {
            counter ++;
        }
    }
}
----------------------------------------

public static boolean checkUpright () {
    ArrayList < Bot > notUprightBots = (ArrayList < Bot >) Arrays.asList (theBots);
    while (! notUprightBots.isEmpty ()) {
        Iterator < Bot > iterator = notUprightBots.iterator ();
        while (iterator.hasNext ()) {
            Bot bot = iterator.next ();
            if (! bot.isUpright ()) {
                System.out.println ("Please ensure I'm upright");
                try {
                    Thread.sleep (500);
                } catch (InterruptedException e) {
                }
            } else {
                iterator.remove ();
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53053035_53053109_1_16
53053035_53053152_1_18
Title: "How to stop a do while loop using ""0"" in java" 
----------------------------------------

public static void main (String [] args) {
    Scanner InputNum = new Scanner (System.in);
    DecimalFormat formatTenths = new DecimalFormat ("0.0");
    int sqroot = 0;
    do {
        System.out.println ("Please enter an integer.");
        sqroot = InputNum.nextInt ();
        double Finalsqroot = Math.sqrt (sqroot);
        System.out.println ("Your Square Root is: " + (formatTenths.format (Finalsqroot)));
    } while (sqroot != 0);
    System.out.println ("Closing...");
    InputNum.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner InputNum = new Scanner (System.in);
    DecimalFormat formatTenths = new DecimalFormat ("0.0");
    System.out.println ("Please enter an integer.");
    for (int sqroot = InputNum.nextInt ();
    sqroot > 0; sqroot = InputNum.nextInt ()) {
        double Finalsqroot = Math.sqrt (sqroot);
        System.out.println ("Your Square Root is: " + (formatTenths.format (Finalsqroot)));
    }
    System.out.println ("Closing...");
    InputNum.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53057082_53057131_1_16
53057082_53057196_3_26
Title: How to fix my insertion sort code into ascending order? I am getting the wrong order as the output 
----------------------------------------

public static void main (String [] args) {
    int [] a = {45, 23, 4, 6, 2};
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = i;
        j > 0; j --) {
            if (a [j] < a [j - 1]) {
                int temp = a [j];
                a [j] = a [j - 1];
                a [j - 1] = temp;
            }
        }
    }
    for (int idx = 0;
    idx < a.length; idx ++) {
        System.out.println (a [idx]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {45, 23, 4, 6, 2};
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = i;
        j > 0; j --) {
            if (a [j] < a [j - 1]) {
                int temp = a [j];
                a [j] = a [j - 1];
                a [j - 1] = temp;
            }
        }
    }
    for (int i = 0;
    i < n; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53058075_53058149_1_10
53058075_53058165_4_17
Title: concatenate two Lists 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < > ();
    List < String > secondList = new ArrayList < > ();
    list.add ("Hello");
    list.add (0, "World");
    secondList.add ("it's");
    secondList.add ("me");
    concatenate (list, secondList).forEach (System.out :: println);
}
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < > ();
    List < String > secondList = new ArrayList < > ();
    list.add (0, "Hello");
    list.add ("World");
    secondList.add (0, "it's");
    secondList.add (0, "me");
    List < String > result = concatenate (list, secondList);
    for (String s : result) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53058847_53063539_8_89
53058847_53068033_8_94
Title: Q : Doing multiple loops and multiple if-statements and if-else-statements || RENTAL CAR CALCULATOR PROJECT 
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    int days;
    int cus;
    int carType;
    double dailyFee = 0, nonTaxTotal, total, fullTotal = 0;
    boolean checkRunOrQuit = false, chooseTypeVehicle = false, numberOfDAysChosen = false;
    Scanner in = new Scanner (System.in);
    while (! checkRunOrQuit) {
        System.out.print ("Press 1 to enter Rental Calculator or else press 0 to quit\n");
        System.out.println ("Please only enter 1 or 0. Also, please only enter number(s) not letter(s)");
        try {
            cus = in.nextInt ();
            switch (cus) {
                case 0 :
                    System.out.println ("End of application");
                    System.exit (0);
                    break;
                case 1 :
                    checkRunOrQuit = true;
                    break;
                default :
                    System.out.println ("Number must be either 1 or 0");
            }
        } catch (InputMismatchException ex) {
            System.out.println ("Invalid entry: ");
            in.next ();
        }
    }
    while (! chooseTypeVehicle) {
        count ++;
        System.out.print ("What vehical would you like to rent?\n");
        System.out.println ("Enter 1 for an economy car");
        System.out.println ("Enter 2 for a sedan car");
        System.out.println ("Enter 3 for an SUV");
        try {
            carType = in.nextInt ();
            chooseTypeVehicle = true;
            switch (carType) {
                case 1 :
                    dailyFee = 31.76;
                    break;
                case 2 :
                    dailyFee = 40.32;
                    break;
                case 3 :
                    dailyFee = 47.56;
                    break;
                default :
                    System.out.print ("Number must be 1-3\n");
                    System.out.println ("Please enter 1 for an economy car");
                    System.out.println ("Enter 2 for a sedan car");
                    System.out.println ("Enter 3 for an SUV");
                    chooseTypeVehicle = false;
                    break;
            }
        } catch (InputMismatchException ex) {
            System.out.println ("Answer must be a number");
            in.next ();
        }
    }
    while (! numberOfDAysChosen) {
        try {
            System.out.print ("Please enter the number of days rented. (Example; 3) : ");
            days = in.nextInt ();
            if (days <= 0) {
                System.out.println ("Number of days must be more than zero");
            } else {
                nonTaxTotal = (dailyFee * days);
                total = (nonTaxTotal * 1.06);
                fullTotal += total;
                numberOfDAysChosen = true;
            }
        } catch (InputMismatchException ex) {
            System.out.println ("Answer must be a number");
            in.next ();
        }
    }
    in.close ();
    System.out.println ("Count of customers : " + count);
    System.out.printf ("total of the Day : $ %.2f", fullTotal);
}
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    int days;
    int cus = 10;
    double DailyFee = 0, NontaxTotal, CarType, Total, FullTotal = 0;
    boolean F1 = false, F2 = false;
    Scanner in = new Scanner (System.in);
    while (cus != 0) {
        while (true) {
            System.out.println ("If there are any customer press 1 else press 0");
            try {
                cus = in.nextInt ();
                if (cus == 0 || cus == 1) {
                    break;
                } else {
                    System.out.println ("Number must be either 1 or 0");
                }
            } catch (InputMismatchException ex) {
                System.out.println ("Invalid entry");
                in.next ();
            }
        }
        if (cus == 1) {
            while (F1 == false) {
                F1 = true;
                count ++;
                System.out.print ("What vehical would you like to rent?\n");
                System.out.println ("Enter 1 for an economy car");
                System.out.println ("Enter 2 for a sedan car");
                System.out.println ("Enter 3 for an SUV");
                try {
                    CarType = in.nextInt ();
                    if (CarType <= 0 || CarType >= 4) {
                        System.out.print ("Number must be 1-3\n");
                        System.out.println ("Please enter 1 for an economy car");
                        System.out.println ("Enter 2 for a sedan car");
                        System.out.println ("Enter 3 for an SUV");
                        F1 = false;
                    } else {
                        if (CarType == 1) {
                            F1 = true;
                            DailyFee = 31.76;
                        } else if (CarType == 2) {
                            F1 = true;
                            DailyFee = 40.32;
                        } else if (CarType == 3) {
                            F1 = true;
                            DailyFee = 47.56;
                        }

                        while (F2 == false) {
                            F2 = true;
                            try {
                                System.out.print ("Please enter the number of days rented. (Example; 3) : ");
                                days = in.nextInt ();
                                if (days <= 0) {
                                    System.out.println ("Number of days must be more than zero");
                                    F2 = false;
                                } else {
                                    double x = days;
                                    NontaxTotal = (DailyFee * x);
                                    Total = (NontaxTotal * 1.06);
                                    FullTotal += Total;
                                }
                            } catch (InputMismatchException ex) {
                                System.out.println ("Answer must be a number");
                                F2 = false;
                                in.next ();
                            }
                        }
                        F2 = false;
                    }
                } catch (InputMismatchException ex) {
                    F1 = false;
                    System.out.println ("Answer must be a number");
                    in.next ();
                }
            }
            F1 = false;
        }
    }
    System.out.println ("Count of customers : " + count);
    System.out.printf ("Total of the Day : $ %.2f", FullTotal);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53070245_53073917_57_71
53070245_53073917_90_108
Title: How to recognize an image in another image? 
----------------------------------------

static Point findImageLocation (BufferedImage mainImage, BufferedImage subImage, int threshold) {
    return findImageLocation (mainImage, subImage, (rgb0, rgb1) -> {
        int difference = computeDifference (rgb0, rgb1);
        if (difference > threshold) {
            return 1;
        }
        return 0;
    });
}
----------------------------------------

static Point findImageLocation (BufferedImage mainImage, BufferedImage subImage, IntBinaryOperator rgbComparator) {
    int w = mainImage.getWidth ();
    int h = mainImage.getHeight ();
    for (int x = 0;
    x < w; x ++) {
        for (int y = 0;
        y < h; y ++) {
            if (isSubImageAt (mainImage, x, y, subImage, rgbComparator)) {
                return new Point (x, y);
            }
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53086872_53087191_1_37
53086872_53087195_1_24
Title: How can I find the occurrence of consequent chars using Java? 
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    if (len <= 0) return "";

    String charOccurs = "";
    char currentChar = x.charAt (0);
    int count = 1;
    for (int i = 1;
    i <= len; i ++) {
        if (i == len) {
            if (currentChar != x.charAt (len - 1)) {
                currentChar = x.charAt (len - 1);
                count = 1;
            }
            charOccurs += Integer.toString (count) + currentChar;
        } else if (x.charAt (i) == currentChar) {
            count ++;
        } else {
            charOccurs += Integer.toString (count) + currentChar;
            currentChar = x.charAt (i);
            count = 1;
        }

    }
    return charOccurs;
}
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    String charOccurs = "";
    int count = 0;
    int i = 0;
    while (i < len) {
        char c = x.charAt (i);
        count = 1;
        for (int j = i + 1;
        j < len; j ++) {
            if (c == x.charAt (j)) {
                count ++;
            } else {
                break;
            }
        }
        charOccurs += "" + count + c;
        i += count;
    }
    return charOccurs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53086872_53087191_1_37
53086872_53087634_1_16
Title: How can I find the occurrence of consequent chars using Java? 
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    if (len <= 0) return "";

    String charOccurs = "";
    char currentChar = x.charAt (0);
    int count = 1;
    for (int i = 1;
    i <= len; i ++) {
        if (i == len) {
            if (currentChar != x.charAt (len - 1)) {
                currentChar = x.charAt (len - 1);
                count = 1;
            }
            charOccurs += Integer.toString (count) + currentChar;
        } else if (x.charAt (i) == currentChar) {
            count ++;
        } else {
            charOccurs += Integer.toString (count) + currentChar;
            currentChar = x.charAt (i);
            count = 1;
        }

    }
    return charOccurs;
}
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    String charOccurs = "";
    int count = 1;
    for (int i = 0;
    i < len - 1; i ++) {
        if (x.charAt (i) == x.charAt (i + 1)) {
            count ++;
        } else {
            charOccurs = charOccurs + count + "" + x.charAt (i);
            count = 1;
        }
    }
    return charOccurs + count + "" + x.charAt (len - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53086872_53087195_1_24
53086872_53087634_1_16
Title: How can I find the occurrence of consequent chars using Java? 
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    String charOccurs = "";
    int count = 0;
    int i = 0;
    while (i < len) {
        char c = x.charAt (i);
        count = 1;
        for (int j = i + 1;
        j < len; j ++) {
            if (c == x.charAt (j)) {
                count ++;
            } else {
                break;
            }
        }
        charOccurs += "" + count + c;
        i += count;
    }
    return charOccurs;
}
----------------------------------------

public static String chars (String x) {
    int len = x.length ();
    String charOccurs = "";
    int count = 1;
    for (int i = 0;
    i < len - 1; i ++) {
        if (x.charAt (i) == x.charAt (i + 1)) {
            count ++;
        } else {
            charOccurs = charOccurs + count + "" + x.charAt (i);
            count = 1;
        }
    }
    return charOccurs + count + "" + x.charAt (len - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53088859_53090082_4_25
53088859_53090554_1_25
Title: Determine how many time a Day occurs between two days in Java 
----------------------------------------

public static int getCountOfDayOfMonthBetween (LocalDate start, LocalDate end) {
    final int dom = start.getDayOfMonth ();
    int count = 1;
    LocalDate currDate = start.plusMonths (1);
    while (! currDate.isAfter (end)) {
        try {
            currDate = currDate.withDayOfMonth (dom);
            if (currDate.isAfter (end)) {
                return count;
            } else {
                count ++;
            }
        } catch (DateTimeException e) {
        }
        currDate = currDate.plusMonths (1);
    }
    return count;
}
----------------------------------------

private int getCountOfDayOfMonthBetween (int dayOfMonth, LocalDate scheduleStartDate, LocalDate scheduleEndDate) {
    if (scheduleEndDate == null) {
        return - 1;
    }
    LocalDate currDate = scheduleStartDate.withDayOfMonth (dayOfMonth);
    LocalDate convertedDate = scheduleStartDate.withDayOfMonth (scheduleStartDate.getMonth ().length (scheduleStartDate.isLeapYear ()));
    int recordCount = 0;
    while (currDate.isBefore (scheduleEndDate)) {
        if (convertedDate.getDayOfMonth () >= scheduleStartDate.getDayOfMonth ()) {
            recordCount ++;
        }
        currDate = currDate.plusMonths (1);
        convertedDate = convertedDate.plusMonths (1);
        convertedDate = convertedDate.withDayOfMonth (convertedDate.getMonth ().length (convertedDate.isLeapYear ()));
    }
    return recordCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53091276_53091413_1_16
53091276_53136758_1_19
Title: Java - Return the node visited after node x in a pre-order traversal of BT 
----------------------------------------

void findNextInPreOrder (TreeNode node, int key) {
    if (node == null) {
        return;
    }
    if (node.value == key) {
        if (node.left != null) {
            System.out.print ("Next is on left: " + node.left.value);
        } else if (node.right != null) {
            System.out.print ("Next is on right: " + node.right.value);
        } else {
            System.out.print ("There is no next node.");
        }

    }
    findNextInPreOrder (node.left);
    findNextInPreOrder (node.right);
}
----------------------------------------

void findNextInPreOrder (Node node, int key) {
    if (node == null) {
        return;
    }
    if (node.value == key) {
        if (node.left != null) {
            System.out.print ("Next is on left: " + node.left.value);
        } else if (node.right != null) {
            System.out.print ("Next is on right: " + node.right.value);
        } else {
            System.out.print ("There is no next node.");
        }

    } else {
        findNextInPreOrder (node.left, key);
        findNextInPreOrder (node.right, key);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53093101_53109673_41_56
53093101_53109673_61_70
Title: Current thread itself waiting infinitely while trying to call wait() on another thread 
----------------------------------------

public void run () {
    Socket client = null;
    while (server.isBound ()) {
        try {
            client = server.accept ();
            DataInputStream di = new DataInputStream (client.getInputStream ());
            String msg = di.readUTF ();
            clientsConnected.put (client, getMessage (msg));
            ServerWindow.write (msg);
            Runnable service = new ServerService (client, getMessage (msg));
            executor.execute (service);
        } catch (Exception e) {
            System.err.println ("error occurred while accepting connections");
        }
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            Server.dequeue ();
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53108851_53109635_19_48
53108851_53127329_4_27
Title: Marshal JAXB element into SOAP handling escape characters 
----------------------------------------

public static void main (String [] args) {
    try {
        Customer customer = new Customer ().setID ("123<>&g").setName ("Hello").setLastname ("World*+;:-<>&%$");
        MessageFactory messageFactory = MessageFactory.newInstance ();
        SOAPMessage soapMessage = messageFactory.createMessage ();
        SOAPPart soapPart = soapMessage.getSOAPPart ();
        SOAPEnvelope soapEnvelope = soapPart.getEnvelope ();
        SOAPBody soapBody = soapEnvelope.getBody ();
        JAXBContext jaxbContext = JAXBContext.newInstance (Customer.class);
        Marshaller jaxbMarshaller = jaxbContext.createMarshaller ();
        jaxbMarshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
        jaxbMarshaller.setProperty (Marshaller.JAXB_ENCODING, "UTF-8");
        StringWriter sw = new StringWriter ();
        jaxbMarshaller.marshal (customer, sw);
        soapBody.setValue (StringEscapeUtils.escapeXml11 (sw.toString ()));
        soapMessage.saveChanges ();
        soapMessage.writeTo (System.out);
        System.out.println ("\r\n\r\n-----\r\n\r\n");
        System.out.println (StringEscapeUtils.unescapeXml (soapBody.getValue ()));
    } catch (Exception e) {
        log.error ("no! ", e);
    }
    log.info ("stop");
}
----------------------------------------

public static void main (String [] args) {
    try {
        Customer customer = new Customer ().setID ("Hello <>&g World*+;:-<>&%$");
        String xml = marshall (new Workaround ().setID (marshall (customer)));
        xml = xml.substring (0, xml.indexOf ("</id>"));
        xml = xml.substring (xml.indexOf ("<id>") + 4);
        System.out.println ("\r\n\r\nxml:\r\n" + xml);
        MessageFactory messageFactory = MessageFactory.newInstance ();
        SOAPMessage soapMessage = messageFactory.createMessage ();
        SOAPPart soapPart = soapMessage.getSOAPPart ();
        SOAPEnvelope soapEnvelope = soapPart.getEnvelope ();
        SOAPBody soapBody = soapEnvelope.getBody ();
        soapBody.setValue (xml);
        System.out.println ("\r\n\r\nsoap:");
        soapMessage.writeTo (System.out);
    } catch (Exception e) {
        log.error ("no! ", e);
    }
    log.info ("stop");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53114033_53114134_1_19
53114033_53114446_1_10
Title: Remove an unknown number of chars from String java 
----------------------------------------

public static String trim (String str, char c) {
    int start = 0, end = str.length - 1;
    boolean foundStart = false, foundEnd = false;
    for (int i = 0, j = str.length - 1;
    i < str.length (); i ++, j --) {
        if (str.charAt (i) != c && ! foundStart) {
            start = i;
            foundStart = true;
        }
        if (str.charAt (j) != c && ! foundEnd) {
            end = j;
            foundEnd = true;
        }
        if (foundStart && foundEnd) {
            break;
        }
    }
    return str.subString (start, end + 1);
}
----------------------------------------

public static String trim (String str, char c) {
    int beginIndex = - 1, endIndex = str.length ();
    for (int i = 0, j = str.length () - 1;
    i <= j; i ++, j --) {
        beginIndex += beginIndex + 1 == i && str.charAt (i) == c ? 1 : 0;
        endIndex -= i != j && endIndex - 1 == j && str.charAt (j) == c ? 1 : 0;
    }
    return str.substring (beginIndex + 1, endIndex);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53114033_53114134_1_19
53114033_53114518_1_12
Title: Remove an unknown number of chars from String java 
----------------------------------------

public static String trim (String str, char c) {
    int start = 0, end = str.length - 1;
    boolean foundStart = false, foundEnd = false;
    for (int i = 0, j = str.length - 1;
    i < str.length (); i ++, j --) {
        if (str.charAt (i) != c && ! foundStart) {
            start = i;
            foundStart = true;
        }
        if (str.charAt (j) != c && ! foundEnd) {
            end = j;
            foundEnd = true;
        }
        if (foundStart && foundEnd) {
            break;
        }
    }
    return str.subString (start, end + 1);
}
----------------------------------------

public static String trim (String str, char c) {
    int begIndex = 0;
    while (begIndex < str.length () && str.charAt (begIndex) == c) {
        begIndex ++;
    }
    int endIndex = str.length () - 1;
    while (endIndex >= 0 && str.charAt (endIndex) == c) {
        endIndex --;
    }
    return str.substring (begIndex, endIndex + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53114033_53114446_1_10
53114033_53114518_1_12
Title: Remove an unknown number of chars from String java 
----------------------------------------

public static String trim (String str, char c) {
    int beginIndex = - 1, endIndex = str.length ();
    for (int i = 0, j = str.length () - 1;
    i <= j; i ++, j --) {
        beginIndex += beginIndex + 1 == i && str.charAt (i) == c ? 1 : 0;
        endIndex -= i != j && endIndex - 1 == j && str.charAt (j) == c ? 1 : 0;
    }
    return str.substring (beginIndex + 1, endIndex);
}
----------------------------------------

public static String trim (String str, char c) {
    int begIndex = 0;
    while (begIndex < str.length () && str.charAt (begIndex) == c) {
        begIndex ++;
    }
    int endIndex = str.length () - 1;
    while (endIndex >= 0 && str.charAt (endIndex) == c) {
        endIndex --;
    }
    return str.substring (begIndex, endIndex + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53135305_53135390_3_13
53135305_53136947_3_35
Title: Java: How to properly return result using a method 
----------------------------------------

public static void main (String [] args) {
    String response = JOptionPane.showInputDialog (null, "Enter the temperature");
    int inputTemp = Integer.parseInt (response);
    try {
        String message = String.format ("Based on the temperature of %d, it is most likely %s", inputTemp, determineSeason (inputTemp));
        JOptionPane.showMessageDialog (null, message);
    } catch (IllegalTemperatureValueException | NumberFormatException e) {
        JOptionPane.showMessageDialog (null, e.getMessage (), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
----------------------------------------

public static void main (String [] args) {
    Collection < Season > seasons = new ArrayList ();
    seasons.add (new Summer ());
    seasons.add (new Winter ());
    seasons.add (new Season () {
        @Override
        public Integer max () {
            return 39;
        }@Override
        public Integer min () {
            return 10;
        }@Override
        public String toString () {
            return "Winter";
        }}

    );
    String response = JOptionPane.showInputDialog (null, "Enter the temperature");
    int temperature = Integer.parseInt (response);
    String msg = "Based on the temperature of %d it is most likely %s%n";
    seasons.stream ().forEach (s -> {
        s.season (temperature).findAny ().ifPresent (t -> {
            String message = String.format (msg, temperature, t);
            JOptionPane.showMessageDialog (null, message);
        });
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53137641_53137682_1_14
53137641_53137688_1_12
Title: Writing a program that determines a prime number 
----------------------------------------

public static boolean isPrime (int num) {
    if (num == 2) {
        return true;
    }
    if (num < 1 || num % 2 == 0) {
        return false;
    }
    for (int i = 3;
    i <= Math.sqrt (num); i += 2) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int num) {
    for (int i = 2;
    i <= num / 2; i ++) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53138293_53138431_1_14
53138293_53138468_1_42
Title: How to ask the user if he wants to repeat the calculation using the do while 
----------------------------------------

public static void main (String [] args) {
    Scanner readInput = new Scanner (System.in);
    do {
        calculate (readInput);
        System.out.println ("do you want to continue: y or n");
        String userAnswer = readInput.next ();
        if (userAnswer.charAt (0) == 'y') calculate (readInput);
        else if (userAnswer.charAt (0) == 'n') break;

    } while (true);
    readInput.close ();
}
----------------------------------------

public static void main (String [] args) {
    double firstN;
    double secondN;
    char operator;
    Scanner readInput = new Scanner (System.in);
    char charResponse = 'y';
    do {
        System.out.printf ("Type a number, operator, number --" + "separated by a space: ");
        firstN = readInput.nextDouble ();
        operator = readInput.next ().charAt (0);
        secondN = readInput.nextDouble ();
        if (operator == '+') System.out.printf ("%f + %f = %f", firstN, secondN, firstN + secondN);
        else if (operator == '-') System.out.printf ("%f - %f = %f", firstN, secondN, firstN - secondN);
        else if (operator == '*') System.out.printf ("%f * %f = %f", firstN, secondN, firstN * secondN);
        else if (operator == '/') System.out.printf ("%f / %f = %f", firstN, secondN, firstN / secondN);
        else if (operator == '%') System.out.printf ("%f %% %f = %f", firstN, secondN, firstN % secondN);
        else System.out.printf ("Unknown operator");

        System.out.printf ("\n\n");
        int loopCount = 0;
        Scanner readInput1 = new Scanner (System.in);
        System.out.println ("press y to continue");
        charResponse = readInput1.next ().charAt (0);
    } while (charResponse == 'y');
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53146403_53146453_5_15
53146403_53146743_1_45
Title: How can I get the range used in generating random number? 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    List < Integer > bounds = new ArrayList < Integer > ();
    for (int i = 1;
    i < 1000000; i ++) {
        Random rng = new Random (532);
        if (rng.nextInt (i) == 235) {
            bounds.add (i);
        }
    }
    System.out.println (bounds);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final Scanner scanner = new Scanner (System.in);
    System.out.print ("Please enter the seed number: ");
    final long seed = scanner.nextLong ();
    System.out.print ("Please enter the hidden bound: ");
    final int bound = scanner.nextInt ();
    final long start = System.nanoTime ();
    final IntSupplier original = rand (seed, bound);
    final int firstRandom = original.getAsInt ();
    Map < Integer, IntSupplier > candidates = new HashMap < > ();
    for (int i = 1;
    i < Integer.MAX_VALUE; i ++) {
        final IntSupplier candidate = rand (seed, i);
        if (firstRandom == candidate.getAsInt ()) {
            candidates.put (i, candidate);
        }
    }
    int iterations = 1;
    while (candidates.size () > 1) {
        iterations += 1;
        final int current = original.getAsInt ();
        Map < Integer, IntSupplier > survivors = new HashMap < > ();
        for (Map.Entry < Integer, IntSupplier > entry : candidates.entrySet ()) {
            if (entry.getValue ().getAsInt () == current) {
                survivors.put (entry.getKey (), entry.getValue ());
            }
        }
        candidates = survivors;
    }
    if (candidates.size () == 1) {
        System.out.println ("Upper bound is " + candidates.keySet ().iterator ().next ());
    } else {
        System.out.println ("No upper bound found");
    }
    System.out.println ("Completed in " + iterations + " iterations");
    final long end = System.nanoTime ();
    System.out.println ("Completed in " + (end - start) / Math.pow (10, 9) + "seconds");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53146697_53146794_1_19
53146697_53146847_1_23
Title: Finding first match (only the first) in Java array 
----------------------------------------

public static int seatAvailable (int [] [] x, int y [] [], int z) {
    int seat = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < x [i].length; j ++) {
            if (z == x [i] [j]) {
                x [i] [j] = 0;
                seat = y [i] [j];
                return seat;
            }
        }
    }
    return seat;
}
----------------------------------------

public static int seatAvailable (int [] [] x, int y [] [], int z) {
    boolean found = false;
    int seat = 0;
    while (! found) {
        for (int i = 0;
        i < x.length; i ++) {
            for (int j = 0;
            j < x [0].length; j ++) {
                if (z == x [i] [j]) {
                    found = true;
                    x [i] [j] = 0;
                    seat = y [i] [j];
                    break;
                }
            }
            if (found) break;

        }
    }
    return seat;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53146820_53146911_17_24
53146820_53146911_7_14
Title: (Java) HangMan Game: While Loop Logic Seems To Be Off 
----------------------------------------

public Hangman (String word) {
    this.word = word;
    blank = new char [word.length ()];
    for (int i = 0;
    i < word.length (); i ++) {
        blank [i] = '*';
    }
    guesses = 0;
}
----------------------------------------

public Hangman () {
    word = "Toyota";
    blank = new char [word.length ()];
    for (int i = 0;
    i < word.length (); i ++) {
        blank [i] = '*';
    }
    guesses = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53154471_53154590_1_10
53154471_53154609_1_10
Title: Biggest digit of number with recursive function 
----------------------------------------

static int biggest (int n) {
    if (n < 10) return n;

    int digit = i % 10;
    int digitRest = biggest (i / 10);
    if (digit > digitRest) return digit;
    else return digitRest;

}
----------------------------------------

static int biggest (int n) {
    int n1 = n % 10;
    int n2 = n / 10;
    if (n2 == 0) {
        return n1;
    }
    int n3 = biggest (n2);
    return n1 > n3 ? n1 : n3;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53157156_53206700_25_33
53157156_53206700_8_17
Title: Spring boot kafka messaging. How to simplify dto mapping for handlers? 
----------------------------------------

public T deserialize (String topic, Headers headers, byte [] data) {
    log.info ("handling...");
    headers.forEach (header -> log.info ("   {}: {}", header.key (), getHeaderValueAsString (header)));
    Optional < String > classTypeFromHeader = getClassTypeFromHeader (headers);
    if (classTypeFromHeader.isPresent ()) {
        return parseFromJson (data, mappers.get (classTypeFromHeader.get ()));
    }
    return deserialize (topic, data);
}
----------------------------------------

public T deserialize (String arg0, byte [] devBytes) {
    ObjectMapper mapper = new ObjectMapper ();
    T bar = null;
    try {
        bar = (T) mapper.readValue (devBytes, Bar.class);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return bar;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53168705_53169366_20_49
53168705_53174305_25_55
Title: Per pixel drawing in Java with a Delay 
----------------------------------------

public void start (Stage primaryStage) {
    Canvas canvas = new Canvas (width, height);
    GraphicsContext gc = canvas.getGraphicsContext2D ();
    Scene scene = new Scene (new Group (canvas));
    primaryStage.setScene (scene);
    primaryStage.show ();
    Random ran = new Random ();
    triangle = new Point [3];
    triangle [1] = new Point (0d, 0d);
    triangle [0] = new Point (width / 2d, (double) height);
    triangle [2] = new Point ((double) width, 0d);
    midPoint = Point.findMidTo (triangle [0], triangle [1], triangle [2]);
    AnimationTimer timer = new AnimationTimer () {
        @Override
        public void handle (long now) {
            if (points -- > 0) {
                int r = ran.nextInt (3);
                midPoint = midPoint.findMidTo (triangle [r]);
                gc.fillOval (midPoint.getX (), midPoint.getY (), 1, 1);
            }
        }}

    ;
    timer.start ();
}
----------------------------------------

public void start (Stage primaryStage) {
    Canvas canvas = new Canvas (width, height);
    GraphicsContext gc = canvas.getGraphicsContext2D ();
    Scene scene = new Scene (new Group (canvas));
    primaryStage.setScene (scene);
    primaryStage.show ();
    Random ran = new Random ();
    triangle = new Point [3];
    triangle [1] = new Point (0d, 0d);
    triangle [0] = new Point (width / 2d, (double) height);
    triangle [2] = new Point ((double) width, 0d);
    midPoint = Point.findMidTo (triangle [0], triangle [1], triangle [2]);
    timer = new Timeline (new KeyFrame (Duration.millis (.1), (ActionEvent event) -> {
        if (points -- > 0) {
            int r = ran.nextInt (3);
            midPoint = midPoint.findMidTo (triangle [r]);
            gc.fillOval (midPoint.getX (), midPoint.getY (), 1, 1);
        } else {
            System.out.println ("Stopping!");
            timer.stop ();
        }
    }));
    timer.setCycleCount (Timeline.INDEFINITE);
    timer.play ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53171541_53171993_1_18
53171541_53171999_1_15
Title: How To Input Multiple Events into ImageButton? 
----------------------------------------

public void slideUpDown (final View view) {
    if (! isPanelShown ()) {
        Animation bottomUp = AnimationUtils.loadAnimation (this, R.anim.buttom_up);
        view.startAnimation (bottomUp);
        view.setVisibility (View.VISIBLE);
    } else {
        Animation bottomDown = AnimationUtils.loadAnimation (this, R.anim.buttom_down);
        view.startAnimation (bottomDown);
        view.setVisibility (View.GONE);
    }
}
----------------------------------------

public void slideUpDown (final View view) {
    if (! isPanelShown ()) {
        Animation bottomUp = AnimationUtils.loadAnimation (this, R.anim.buttom_up);
        view.startAnimation (bottomUp);
        view.setVisibility (View.VISIBLE);
    } else {
        Animation bottomDown = AnimationUtils.loadAnimation (this, R.anim.buttom_down);
        view.startAnimation (bottomDown);
        view.setVisibility (View.GONE);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53184161_53184348_19_52
53184161_53184393_34_93
Title: Convert Alphabetic phone number into just numbers 
----------------------------------------

public static String fullPhoneNumber (String phoneNumber) {
    StringBuilder result = new StringBuilder ();
    long number = 0;
    int strLength = phoneNumber.length ();
    for (int i = 0;
    i < strLength; i ++) {
        char letter = phoneNumber.charAt (i);
        if (Character.isLetter (letter)) {
            switch (letter) {
                case 'A' :
                case 'B' :
                case 'C' :
                    number = 2;
                    break;
                case 'D' :
                case 'E' :
                case 'F' :
                    number = 3;
                    break;
                case 'G' :
                case 'H' :
                case 'I' :
                    number = 4;
                    break;
                case 'J' :
                case 'K' :
                case 'L' :
                    number = 5;
                    break;
                case 'M' :
                case 'N' :
                case 'O' :
                    number = 6;
                    break;
                case 'P' :
                case 'Q' :
                case 'R' :
                case 'S' :
                    number = 7;
                    break;
                case 'T' :
                case 'U' :
                case 'V' :
                    number = 8;
                    break;
                case 'W' :
                case 'X' :
                case 'Y' :
                case 'Z' :
                    number = 9;
                    break;
            }
        } else if (Character.isDigit (letter)) {
            number = Character.getNumericValue (letter);
        } else {
            System.out.println ("Invalid character!");
        }

        result.append (String.valueOf (number));
    }
    return result.toString ();
}
----------------------------------------

public static String fullPhoneNumber (String phoneNumber) {
    String result = "5555-";
    String suffix = phoneNumber.substring ("555-".length ());
    for (int i = 0;
    i < suffix.length (); i ++) {
        char letter = suffix.charAt (i);
        if (Character.isLetter (letter)) {
            switch (letter) {
                case 'A' :
                case 'B' :
                case 'C' :
                    result += "2";
                    break;
                case 'D' :
                case 'E' :
                case 'F' :
                    result += "3";
                    break;
                case 'G' :
                case 'H' :
                case 'I' :
                    result += "4";
                    break;
                case 'J' :
                case 'K' :
                case 'L' :
                    result += "5";
                    break;
                case 'M' :
                case 'N' :
                case 'O' :
                    result += "6";
                    break;
                case 'P' :
                case 'Q' :
                case 'R' :
                case 'S' :
                    result += "7";
                    break;
                case 'T' :
                case 'U' :
                case 'V' :
                    result += "8";
                    break;
                case 'W' :
                case 'X' :
                case 'Y' :
                case 'Z' :
                    result += "9";
                    break;
            }
        } else if (letter == '-') {
            result += "-";
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53196073_53197302_2_14
53196073_53197515_2_11
Title: how to stop taking user inputs and print out arraylist 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > Grocerylist = new ArrayList < String > ();
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter an item, enter \"end\" to stop ");
    while (input.hasNext ()) {
        Grocerylist.add (input.next ());
        if (input.hasNext ("end")) {
            System.out.println (Grocerylist);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > Grocerylist = new ArrayList < > ();
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter an item, enter \"end\" to stop ");
    do {
        Grocerylist.add (input.next ());
    } while (! input.hasNext ("end"));
    System.out.println (Grocerylist);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53198226_53198385_6_36
53198226_53198574_6_26
Title: How do I start a while loop in the middle after running it once in Java? 
----------------------------------------

public static void main (String [] args) {
    keyboard = new Scanner (System.in);
    boolean anotherCustomer = true;
    while (anotherCustomer) {
        System.out.print ("Enter quantity:");
        if (keyboard.hasNextInt ()) {
            qunatity = keyboard.nextInt ();
            keyboard.nextLine ();
            calculate ();
            System.out.print ("Next customer (y/n):");
            String str = keyboard.nextLine ().trim ();
            if (str.equals ("y") || str.equals ("Y")) {
                anotherCustomer = true;
            } else if (str.equals ("n") || str.equals ("N")) {
                anotherCustomer = false;
                System.out.print ("Thank you for using Ripple Systems.");
            } else {
                System.out.println ("Incorrect User-Input");
                anotherCustomer = false;
            }

        } else {
            System.out.println ("Incorrect User-Input");
            anotherCustomer = false;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    keyboard = new Scanner (System.in);
    do {
        System.out.print ("Enter quantity:");
        qunatity = keyboard.nextInt ();
        keyboard.nextLine ();
        calculate ();
        System.out.print ("Next customer (y/n):");
        String str = keyboard.nextLine ().trim ();
        while (str == null || str.trim ().length () == 0 || (! (str.equals ("y") || str.equals ("Y")) && ! (str.equals ("n") || str.equals ("N")))) {
            System.out.print ("Next customer (y/n):");
            String str = keyboard.nextLine ().trim ();
        }
        if (str.equals ("n") || str.equals ("N")) {
            System.out.print ("Thank you for using Ripple Systems.");
            break;
        }
    } while (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53215929_53216225_3_15
53215929_53216331_3_12
Title: Converting object method with InputStream as input to array to print 
----------------------------------------

public static IntegerArray readIntArray (InputStream input) {
    try (Scanner scanner = new Scanner (input)) {
        List < Number > inputList = new LinkedList < > ();
        while (scanner.hasNextInt ()) {
            inputList.add (scanner.nextInt ());
        }
        int [] iarr = new int [inputList.size ()];
        for (int i = 0;
        i < inputList.size (); i ++) {
            iarr [i] = inputList.get (i).intValue ();
        }
        return new IntegerArray (iarr);
    }
}
----------------------------------------

public static IntegerArray readIntArray (InputStream input) {
    Scanner scanner = new Scanner (input);
    List < Integer > intList = new ArrayList < Integer > ();
    while (scanner.hasNextInt ()) {
        intList.add (scanner.nextInt ());
    }
    scanner.close ();
    return new IntegerArray (intList.stream ().mapToInt (Integer :: intValue).toArray ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53231210_53231337_1_20
53231210_53231418_1_20
Title: How to hold position of every character from encoded string 
----------------------------------------

public static void main (String [] args) {
    String str = "AUBU CUDU";
    Map < Character, List < Integer > > mapList = IntStream.range (0, str.length ()).boxed ().collect (Collectors.toMap (i -> str.charAt (i), i -> Arrays.asList (i), (la, lb) -> {
        List < Integer > res = new ArrayList < > (la);
        res.addAll (lb);
        return res;
    }));
    System.out.println (mapList);
    Map < Character, String > mapString = IntStream.range (0, str.length ()).boxed ().filter (i -> ("" + str.charAt (i)).matches ("[\\S]")).collect (Collectors.toMap (i -> str.charAt (i), i -> Integer.toString (i), (sa, sb) -> sa + sb));
    System.out.println (mapString);
}
----------------------------------------

public static void main (String [] args) {
    Map < Character, List < Integer > > charMap = new HashMap < > ();
    String string = "aaabbcdefg";
    for (int i = 0;
    i < string.length (); i ++) {
        Character c = string.charAt (i);
        if (charMap.containsKey (c)) {
            List < Integer > positions = charMap.get (c);
            positions.add (i);
        } else {
            charMap.put (c, new ArrayList < > (Arrays.asList (i)));
        }
    }
    for (Character c : charMap.keySet ()) {
        System.out.print (c + ": ");
        charMap.get (c).forEach (System.out :: print);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53235919_53241627_19_58
53235919_53241627_64_94
Title: Enforce printing sequence but threads waiting on each other after one iteration 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        synchronized (InterThCom.class) {
            if (isTh2RunFirst == false) {
                try {
                    InterThCom.class.wait ();
                } catch (InterruptedException e1) {
                    e1.printStackTrace ();
                }
            }
            for (int j = 0;
            j < 100; j ++) {
                System.out.println (Thread.currentThread ().getName () + " iter-" + (j + 1));
            }
            isTh2RunFirst = true;
            System.out.println (Thread.currentThread ().getName () + " outer-loop iter:" + (i + 1));
            InterThCom.class.notify ();
            try {
                InterThCom.class.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        synchronized (InterThCom.class) {
            for (int j = 0;
            j < 10; j ++) {
                System.out.println (Thread.currentThread ().getName () + " iter-" + (j + 1));
            }
            isTh2RunFirst = true;
            System.out.println (Thread.currentThread ().getName () + " outer-loop iter:" + (i + 1));
            InterThCom.class.notify ();
            try {
                InterThCom.class.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
    synchronized (InterThCom.class) {
        InterThCom.class.notify ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53243137_53243293_4_12
53243137_53243295_2_12
Title: Java: passing variable one time but different values 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    ClassOfYourObject object = new ClassOfYourObject ();
    while (true) {
        System.out.print ("Enter letter : ");
        String x = scanner.next ();
        object.yourMethodToPrint (x);
    }
}
----------------------------------------

public static void main (String [] args) {
    Test obj = new Test ();
    String x = "h";
    obj.testMethod (x);
    System.out.println (obj.m);
    x = "f";
    obj.testMethod (x);
    System.out.println (obj.m);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53249916_53249979_1_11
53249916_53250048_1_10
Title: removing duplicates that are next to each other 
----------------------------------------

public List < Point > getUniq () {
    List < Point > result = new ArrayList < > ();
    Point lastAdded = null;
    for (int i = 0;
    i < pointList.size (); i ++) {
        if (! points.get (i).equals (lastAdded)) {
            lastAdded = points.get (i);
            result.add (lastAdded);
        }
    }
    return result;
}
----------------------------------------

public List < Point > getUniq () {
    List < Point > l = new ArrayList < > ();
    l.add (pointList.get (0));
    for (int i = 1;
    i < pointList.size (); i ++) {
        if (! l.get (l.size () - 1).equals (pointList.get (i))) {
            l.add (pointList.get (i));
        }
    }
    return l;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53250329_53250669_1_14
53250329_53252312_1_19
Title: "Java class Boolean logic mess" 
----------------------------------------

public static boolean isValid (String inputstr) {
    int x = 0;
    boolean bool = true;
    do {
        if (! (inputstr.charAt (x) == 'A' || inputstr.charAt (x) == 'B' || inputstr.charAt (x) == 'C' || inputstr.charAt (x) == 'D')) {
            bool = false;
        }
        x ++;
    } while (x < inputstr.length ());
    return bool;
}
----------------------------------------

public static boolean isValid (String inputstr) {
    int count = 0;
    for (int x = 0;
    x < inputstr.length (); x ++) {
        switch (inputstr.charAt (x)) {
            case 'A' :
            case 'B' :
            case 'C' :
            case 'D' :
                break;
            default :
                count ++;
        }
    }
    if (count == 0) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53259486_53259806_1_12
53259486_53259807_6_23
Title: Having trouble storing input in array 
----------------------------------------

public static void inputStats (Scanner scan) {
    int [] number = new int [5];
    int [] rating = new int [5];
    for (int i = 0;
    i < number.length; i ++) {
        System.out.printf ("Enter player %d's jersey number\n", i + 1);
        number [i] = scan.nextInt ();
        rating [i] = scan.nextInt ();
    }
    System.out.println (Arrays.toString (number));
    System.out.println (Arrays.toString (rating));
}
----------------------------------------

public static void inputStats (Scanner scan) {
    int [] number = new int [5];
    int [] rating = new int [5];
    int jerseyNumber = 1;
    for (int i = 0;
    i < number.length; i ++) {
        System.out.printf ("Enter player %d's jersey number\n", jerseyNumber);
        number [i] = scan.nextInt ();
        System.out.printf ("Enter players %d's rating\n", jerseyNumber);
        rating [j] = scan.nextInt ();
        jerseyNumber ++;
    }
    System.out.println (Arrays.toString (number));
    System.out.println (Arrays.toString (rating));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53263427_53263565_1_19
53263427_53275201_1_45
Title: Add action on fragment before exit the App 
----------------------------------------

@Override
public void onBackPressed () {
    super.onBackPressed ();
    MainFragment main = (MainFragment) getSupportFragmentManager ().findFragmentByTag ("main");
    if (main != null && main.isVisible ()) {
        if (mExitCheck < 1) {
            Toast.makeText (this, "Press back again to exit", Toast.LENGTH_SHORT).show ();
        } else {
            mExitCheck = 0;
            finish ();
        }
        mExitCheck ++;
    } else {
        showMain ();
    }
}
----------------------------------------

@Override
public void onBackPressed () {
    if (mCurrentFrag == MAIN_FRAG) {
        runOnUiThread (new Runnable () {
            @Override
            public void run () {
                AlertDialog.Builder exitPopUp = new AlertDialog.Builder (MainActivity.this);
                exitPopUp.setTitle ("Exit");
                exitPopUp.setMessage ("Are you sure you want to exit?");
                exitPopUp.setPositiveButton ("Oui", new DialogInterface.OnClickListener () {
                    @Override
                    public void onClick (DialogInterface dialogInterface, int i) {
                        finish ();
                    }}

                );
                exitPopUp.setNegativeButton ("Non", new DialogInterface.OnClickListener () {
                    @Override
                    public void onClick (DialogInterface dialogInterface, int i) {
                    }}

                );
                exitPopUp.setNeutralButton ("Noter", new DialogInterface.OnClickListener () {
                    @Override
                    public void onClick (DialogInterface dialogInterface, int i) {
                        Uri uri = Uri.parse ("market://details?id=" + getApplicationContext ().getPackageName ());
                        Intent goToMarket = new Intent (Intent.ACTION_VIEW, uri);
                        goToMarket.addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_NEW_DOCUMENT | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
                        try {
                            startActivity (goToMarket);
                        } catch (ActivityNotFoundException e) {
                            startActivity (new Intent (Intent.ACTION_VIEW, Uri.parse ("http://play.google.com/store/apps/details?id=" + getApplicationContext ().getPackageName ())));
                        }
                    }}

                );
                exitPopUp.show ();
            }}

        );
    } else {
        super.onBackPressed ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5326742_5326781_1_15
5326742_5326819_1_11
Title: Problem converting date format in Java 
----------------------------------------

public String transformPrevDate (String date) {
    DateFormat oldFormat = new SimpleDateFormat ("MMM/dd/yyyy", Locale.ENGLISH);
    DateFormat newFormat = new SimpleDateFormat ("yyyyMMdd", Locale.ENGLISH);
    String formattedDate = "";
    try {
        formattedDate = newFormat.format (oldFormat.parse (date));
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    return formattedDate;
}
----------------------------------------

public String transformPrevDate (String datoe) {
    SimpleDateFormat dateFormat = new SimpleDateFormat ("MMM/dd/yyyy", Locale.ENGLISH);
    SimpleDateFormat dateFormat2 = new SimpleDateFormat ("yyyyMMdd");
    try {
        return dateFormat2.format (dateFormat.parse (datoe));
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53273709_53273758_1_19
53273709_53273795_1_18
Title: printing out calendar table in java 
----------------------------------------

public static void printMonthBody (int year, int month) {
    int startDay = 2;
    int numberofDaysInMonth = 31;
    int i = 0;
    for (i = 0; i < startDay; i ++) System.out.print ("    ");

    for (i = 1; i <= numberofDaysInMonth; i ++) {
        System.out.printf ("%2d", i);
        if ((i + startDay) % 7 == 0) System.out.println ();
        else if (i != numberofDaysInMonth) System.out.print ("  ");

    }
}
----------------------------------------

public static void printMonthBody (int year, int month) {
    int startDay = getStartDay (year, month);
    int numberofDaysInMonth = getNumberOfDaysInMonth (year, month);
    int i = 0;
    for (i = 0; i < startDay; i ++) System.out.print ("    ");

    for (i = 1; i <= numberofDaysInMonth - 1; i ++) {
        System.out.printf ("%2d", i);
        if ((i + startDay) % 7 == 0) System.out.println ();
        else System.out.print ("  ");

    }
    System.out.printf ("%2d", i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53274672_53274994_1_16
53274672_53275535_23_53
Title: Using nested for loop to add 2 Linked Lists with java.util.ListIterator; 
----------------------------------------

public Polynomial add (Polynomial p) {
    Polynomial answer = new Polynomial (this);
    for (ListIterator < Term > itr = answer.termList.listIterator ();
    itr.hasNext ();) {
        Term term = itr.next ();
        for (ListIterator < Term > itr2 = p.termList.listIterator ();
        itr2.hasNext ();) {
            Term term2 = itr2.next ();
            if (term.exponent == term2.exponent) {
                term.coefficient += term2.coefficient;
            } else {
                answer.termList.add (new Term (term2.exponent, term2.coefficient));
            }
        }
    }
    return answer;
}
----------------------------------------

public Polynomial add (Polynomial other) {
    Polynomial answer = new Polynomial ();
    Iterator < Term > itr = termList.iterator ();
    Iterator < Term > itr2 = other.termList.iterator ();
    Term t = itr.hasNext () ? itr.next () : null;
    Term t2 = itr2.hasNext () ? itr2.next () : null;
    while (true) {
        if (t == null) {
            if (t2 == null) {
                break;
            }
            answer.termList.add (new Term (t2.exponent, t2.coefficient));
            t2 = itr2.hasNext () ? itr2.next () : null;
        } else if (t2 == null) {
            answer.termList.add (new Term (t.exponent, t.coefficient));
            t = itr.hasNext () ? itr.next () : null;
        } else if (t2.exponent > t.exponent) {
            answer.termList.add (new Term (t2.exponent, t2.coefficient));
            t2 = itr2.hasNext () ? itr2.next () : null;
        } else if (t2.exponent < t.exponent) {
            answer.termList.add (new Term (t.exponent, t.coefficient));
            t = itr.hasNext () ? itr.next () : null;
        } else {
            answer.termList.add (new Term (t.exponent, t.coefficient + t2.coefficient));
            t = itr.hasNext () ? itr.next () : null;
            t2 = itr2.hasNext () ? itr2.next () : null;
        }

    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276201_53276460_21_42
53276201_53293671_1_57
Title: Java chain lock a bit differently 
----------------------------------------

private void test () {
    try {
        System.out.println ("section A" + threadId);
        cdlA.countDown ();
        cdlA.await ();
        System.out.println ("section B" + threadId);
        cdlB.countDown ();
        cdlB.await ();
        System.out.println ("section C" + threadId);
    } catch (InterruptedException e) {
    }
}
----------------------------------------

@Test
void test () throws InterruptedException {
    ExecutorService executor = Executors.newFixedThreadPool (3);
    SynchronousQueue < Integer > chromeQueue = new SynchronousQueue < > ();
    SynchronousQueue < Integer > firefoxQueue = new SynchronousQueue < > ();
    SynchronousQueue < Integer > ieQueue = new SynchronousQueue < > ();
    Runnable ieRunnable = () -> {
        try {
            firefoxQueue.take ();
            System.out.println ("ieRunnable section 1");
            ieQueue.put (1);
            firefoxQueue.take ();
            System.out.println ("ieRunnable section 2");
        } catch (InterruptedException e) {
            Thread.currentThread ().interrupt ();
        }
    };
    Runnable firefoxRunnable = () -> {
        try {
            chromeQueue.take ();
            System.out.println ("firefoxRunnable section 1");
            firefoxQueue.put (1);
            chromeQueue.take ();
            System.out.println ("firefoxRunnable section 2");
            firefoxQueue.put (1);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    };
    Runnable chromeRunnable = () -> {
        try {
            ieQueue.take ();
            System.out.println ("chromeRunnable section 1");
            chromeQueue.put (1);
            ieQueue.take ();
            System.out.println ("chromeRunnable section 2");
            chromeQueue.put (1);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    };
    executor.execute (chromeRunnable);
    executor.execute (firefoxRunnable);
    executor.execute (ieRunnable);
    ieQueue.put (1);
    executor.shutdown ();
    try {
        if (! executor.awaitTermination (5, TimeUnit.MINUTES)) {
            executor.shutdownNow ();
        }
    } catch (InterruptedException e) {
        executor.shutdownNow ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53277497_1_19
53276705_53277969_1_15
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] result = new char [inArr.length];
    int filled = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char c = inArr [i];
        if (c != ' ' || (filled > 0 && result [filled - 1] != ' ')) {
            result [filled ++] = c;
        }
    }
    while (filled < inArr.length) {
        result [filled ++] = ' ';
    }
    return result;
}
----------------------------------------

public static char [] moveWhiteSpaces (char [] arr) {
    char [] res = fill (new char [arr.length], ' ');
    for (int i = 0, j = 0;
    i < arr.length; i ++) {
        if (isAlphabetic (arr [i])) res [j ++] = arr [i];
        else if (isWhitespace (arr [i])) {
            if (i > 0 && ! isWhitespace (res [j - 1])) res [j ++] = arr [i];

        } else res [j == 0 ? j ++ : j - 1] = arr [i];

    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53277497_1_19
53276705_53278207_1_25
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] result = new char [inArr.length];
    int filled = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char c = inArr [i];
        if (c != ' ' || (filled > 0 && result [filled - 1] != ' ')) {
            result [filled ++] = c;
        }
    }
    while (filled < inArr.length) {
        result [filled ++] = ' ';
    }
    return result;
}
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] output = new char [inArr.length];
    boolean lastCharWhiteSpace = false;
    int lastIndex = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char currChar = inArr [i];
        if (' ' == currChar) {
            if (! lastCharWhiteSpace) {
                output [lastIndex] = currChar;
                lastIndex ++;
            }
            lastCharWhiteSpace = true;
        } else {
            output [lastIndex] = currChar;
            lastIndex ++;
            lastCharWhiteSpace = false;
        }
    }
    for (int i = lastIndex;
    i < output.length; i ++) {
        output [i] = ' ';
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53277497_1_19
53276705_53278509_1_18
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] result = new char [inArr.length];
    int filled = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char c = inArr [i];
        if (c != ' ' || (filled > 0 && result [filled - 1] != ' ')) {
            result [filled ++] = c;
        }
    }
    while (filled < inArr.length) {
        result [filled ++] = ' ';
    }
    return result;
}
----------------------------------------

static char [] moveWhiteSpaces (char [] input) {
    char [] result = new char [input.length];
    int _char = 0, space = input.length - 1;
    boolean first_occur = true, first_char = false;
    for (int i = 0;
    i < input.length; i ++) {
        char c = input [i];
        if (c != ' ') {
            result [_char ++] = c;
            first_char = true;
        } else if (c == ' ' && first_occur && first_char) {
            result [_char ++] = c;
            first_occur = false;
        } else {
            result [space --] = c;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53277969_1_15
53276705_53278207_1_25
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public static char [] moveWhiteSpaces (char [] arr) {
    char [] res = fill (new char [arr.length], ' ');
    for (int i = 0, j = 0;
    i < arr.length; i ++) {
        if (isAlphabetic (arr [i])) res [j ++] = arr [i];
        else if (isWhitespace (arr [i])) {
            if (i > 0 && ! isWhitespace (res [j - 1])) res [j ++] = arr [i];

        } else res [j == 0 ? j ++ : j - 1] = arr [i];

    }
    return res;
}
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] output = new char [inArr.length];
    boolean lastCharWhiteSpace = false;
    int lastIndex = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char currChar = inArr [i];
        if (' ' == currChar) {
            if (! lastCharWhiteSpace) {
                output [lastIndex] = currChar;
                lastIndex ++;
            }
            lastCharWhiteSpace = true;
        } else {
            output [lastIndex] = currChar;
            lastIndex ++;
            lastCharWhiteSpace = false;
        }
    }
    for (int i = lastIndex;
    i < output.length; i ++) {
        output [i] = ' ';
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53277969_1_15
53276705_53278509_1_18
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public static char [] moveWhiteSpaces (char [] arr) {
    char [] res = fill (new char [arr.length], ' ');
    for (int i = 0, j = 0;
    i < arr.length; i ++) {
        if (isAlphabetic (arr [i])) res [j ++] = arr [i];
        else if (isWhitespace (arr [i])) {
            if (i > 0 && ! isWhitespace (res [j - 1])) res [j ++] = arr [i];

        } else res [j == 0 ? j ++ : j - 1] = arr [i];

    }
    return res;
}
----------------------------------------

static char [] moveWhiteSpaces (char [] input) {
    char [] result = new char [input.length];
    int _char = 0, space = input.length - 1;
    boolean first_occur = true, first_char = false;
    for (int i = 0;
    i < input.length; i ++) {
        char c = input [i];
        if (c != ' ') {
            result [_char ++] = c;
            first_char = true;
        } else if (c == ' ' && first_occur && first_char) {
            result [_char ++] = c;
            first_occur = false;
        } else {
            result [space --] = c;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53276705_53278207_1_25
53276705_53278509_1_18
Title: how to shift elements in an array with brute-force java 
----------------------------------------

public char [] moveWhiteSpaces (char [] inArr) {
    char [] output = new char [inArr.length];
    boolean lastCharWhiteSpace = false;
    int lastIndex = 0;
    for (int i = 0;
    i < inArr.length; i ++) {
        char currChar = inArr [i];
        if (' ' == currChar) {
            if (! lastCharWhiteSpace) {
                output [lastIndex] = currChar;
                lastIndex ++;
            }
            lastCharWhiteSpace = true;
        } else {
            output [lastIndex] = currChar;
            lastIndex ++;
            lastCharWhiteSpace = false;
        }
    }
    for (int i = lastIndex;
    i < output.length; i ++) {
        output [i] = ' ';
    }
    return output;
}
----------------------------------------

static char [] moveWhiteSpaces (char [] input) {
    char [] result = new char [input.length];
    int _char = 0, space = input.length - 1;
    boolean first_occur = true, first_char = false;
    for (int i = 0;
    i < input.length; i ++) {
        char c = input [i];
        if (c != ' ') {
            result [_char ++] = c;
            first_char = true;
        } else if (c == ' ' && first_occur && first_char) {
            result [_char ++] = c;
            first_occur = false;
        } else {
            result [space --] = c;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53288488_53288638_2_20
53288488_53289693_3_21
Title: How can I remove the repetitive characters in Histogram [JAVA] 
----------------------------------------

public static void main (String [] args) {
    char [] a = {'a', 'b', 'c', 'd', 'a', 'b', 'c'};
    int count = 0;
    Map < String, Integer > output = new HashMap < > ();
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < a.length; j ++) {
            if (a [j] == a [i]) count += 1;

        }
        output.put (Character.toString (a [i]), count);
        count = 0;
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    char [] a = {'a', 'b', 'c', 'd', 'a', 'b', 'c'};
    int count = 0;
    Arrays.sort (a);
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = i;
        j < a.length; j ++) {
            if (a [j] == a [i]) {
                count += 1;
                continue;
            }
            i = j - 1;
            break;
        }
        System.out.println (a [i] + ":" + count);
        count = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53288488_53288701_2_19
53288488_53289693_3_21
Title: How can I remove the repetitive characters in Histogram [JAVA] 
----------------------------------------

public static void main (String [] args) {
    Set < String > doneSet = new HashSet < String > ();
    char [] a = {'a', 'b', 'c', 'd', 'a', 'b', 'c'};
    int count = 0;
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < a.length; j ++) {
            if (a [j] == a [i]) count += 1;

        }
        if (! doneSet.contains (String.valueOf (a [i]))) {
            System.out.println (a [i] + ":" + count);
            doneSet.add (String.valueOf (a [i]));
        }
        count = 0;
    }
}
----------------------------------------

public static void main (String [] args) {
    char [] a = {'a', 'b', 'c', 'd', 'a', 'b', 'c'};
    int count = 0;
    Arrays.sort (a);
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = i;
        j < a.length; j ++) {
            if (a [j] == a [i]) {
                count += 1;
                continue;
            }
            i = j - 1;
            break;
        }
        System.out.println (a [i] + ":" + count);
        count = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53299738_53300092_5_17
53299738_53315117_5_23
Title: Synchronise concurrent requests to share results of a slow operation 
----------------------------------------

public String serviceApiMethod () {
    if (holder != null && ! isTimedOut (holder.calculated)) {
        return holder.result;
    }
    synchronized (this) {
        if (holder != null && ! isTimedOut (holder.calculated)) {
            return holder.result;
        }
        String result = callSlowOperation ();
        holder = new ResultHolder (result, LocalDateTime.now ());
        return result;
    }
}
----------------------------------------

public String serviceApiMethod () {
    counter.incrementAndGet ();
    try {
        synchronized (this) {
            if (result == null) {
                result = callSlowOperation ();
            }
        }
        return result;
    } finally {
        if (counter.decrementAndGet () == 0) {
            synchronized (this) {
                if (counter.get () == 0) {
                    result = null;
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53305517_53306044_6_28
53305517_53306481_4_37
Title: How to print [ ] in an array (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    int num = 10;
    List < Integer > inputList = new ArrayList < > (num);
    while (num -- > 0) {
        inputList.add (scnr.nextInt ());
    }
    List < Integer > goofyArray = new ArrayList < > (inputList.size ());
    for (int i = inputList.size () - 1;
    i >= 0; i --) {
        if (inputList.get (i) % 7 == 0) {
            continue;
        }
        if (inputList.get (i) < 0) {
            goofyArray.add ((inputList.get (i) * - 1) * 2);
        } else {
            goofyArray.add (inputList.get (i));
        }
    }
    int [] output = new int [goofyArray.size ()];
    output = goofyArray.toArray (output);
    for (int number : output) {
        System.out.print (number + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    int NUM_OF_INPUTS = 10;
    int [] inputArray = new int [NUM_OF_INPUTS];
    for (int index = 0;
    index < NUM_OF_INPUTS; index ++) {
        inputArray [index] = scnr.nextInt ();
    }
    int [] goofyArray = new int [inputArray.length];
    int [] arrayWithoutSevensAndReversed;
    int multiplesOfSeven = 0;
    for (int i = 0;
    i < goofyArray.length; i ++) {
        goofyArray [i] = inputArray [goofyArray.length - 1 - i];
        if (goofyArray [i] % 7 == 0) multiplesOfSeven ++;

    }
    arrayWithoutSevensAndReversed = new int [goofyArray.length - multiplesOfSeven];
    for (int x = 0, y = 0;
    x < goofyArray.length; x ++) {
        if (goofyArray [x] % 7 != 0) {
            arrayWithoutSevensAndReversed [y] = goofyArray [x];
            if (arrayWithoutSevensAndReversed [y] < 0) {
                arrayWithoutSevensAndReversed [y] = arrayWithoutSevensAndReversed [y] * - 1 * 2;
            }
            y ++;
        }
    }
    for (int number : arrayWithoutSevensAndReversed) {
        System.out.print (number + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53305517_53306044_6_28
53305517_53306571_1_18
Title: How to print [ ] in an array (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    int num = 10;
    List < Integer > inputList = new ArrayList < > (num);
    while (num -- > 0) {
        inputList.add (scnr.nextInt ());
    }
    List < Integer > goofyArray = new ArrayList < > (inputList.size ());
    for (int i = inputList.size () - 1;
    i >= 0; i --) {
        if (inputList.get (i) % 7 == 0) {
            continue;
        }
        if (inputList.get (i) < 0) {
            goofyArray.add ((inputList.get (i) * - 1) * 2);
        } else {
            goofyArray.add (inputList.get (i));
        }
    }
    int [] output = new int [goofyArray.size ()];
    output = goofyArray.toArray (output);
    for (int number : output) {
        System.out.print (number + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] inputArray = {5, - 2, 28, 45, - 6, 8, 42, - 9, 10, 7};
    int length = inputArray.length;
    int [] goofyArray = new int [length];
    int count = 0;
    for (int i = 0;
    i < goofyArray.length; i ++) {
        if (inputArray [length - 1 - i] % 7 != 0) {
            goofyArray [count] = inputArray [length - 1 - i];
            if (goofyArray [count] < 0) {
                goofyArray [count] = Math.abs (goofyArray [count]) * 2;
            }
            count ++;
        }
    }
    int [] goofArray2 = Arrays.copyOf (goofyArray, count);
    for (int i = 0;
    i < goofArray2.length; i ++) System.out.print (goofArray2 [i] + "  ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53305517_53306481_4_37
53305517_53306571_1_18
Title: How to print [ ] in an array (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    int NUM_OF_INPUTS = 10;
    int [] inputArray = new int [NUM_OF_INPUTS];
    for (int index = 0;
    index < NUM_OF_INPUTS; index ++) {
        inputArray [index] = scnr.nextInt ();
    }
    int [] goofyArray = new int [inputArray.length];
    int [] arrayWithoutSevensAndReversed;
    int multiplesOfSeven = 0;
    for (int i = 0;
    i < goofyArray.length; i ++) {
        goofyArray [i] = inputArray [goofyArray.length - 1 - i];
        if (goofyArray [i] % 7 == 0) multiplesOfSeven ++;

    }
    arrayWithoutSevensAndReversed = new int [goofyArray.length - multiplesOfSeven];
    for (int x = 0, y = 0;
    x < goofyArray.length; x ++) {
        if (goofyArray [x] % 7 != 0) {
            arrayWithoutSevensAndReversed [y] = goofyArray [x];
            if (arrayWithoutSevensAndReversed [y] < 0) {
                arrayWithoutSevensAndReversed [y] = arrayWithoutSevensAndReversed [y] * - 1 * 2;
            }
            y ++;
        }
    }
    for (int number : arrayWithoutSevensAndReversed) {
        System.out.print (number + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] inputArray = {5, - 2, 28, 45, - 6, 8, 42, - 9, 10, 7};
    int length = inputArray.length;
    int [] goofyArray = new int [length];
    int count = 0;
    for (int i = 0;
    i < goofyArray.length; i ++) {
        if (inputArray [length - 1 - i] % 7 != 0) {
            goofyArray [count] = inputArray [length - 1 - i];
            if (goofyArray [count] < 0) {
                goofyArray [count] = Math.abs (goofyArray [count]) * 2;
            }
            count ++;
        }
    }
    int [] goofArray2 = Arrays.copyOf (goofyArray, count);
    for (int i = 0;
    i < goofArray2.length; i ++) System.out.print (goofArray2 [i] + "  ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53308591_53308638_1_15
53308591_53312912_6_26
Title: The first position of my array isn't being modified 
----------------------------------------

public static String checkDigit () {
    StringBuilder bar = new StringBuilder ();
    Scanner s = new Scanner (System.in);
    int input = 0;
    for (int p = 0;
    p < 5; p ++) {
        input = s.nextInt ();
        if (input == 0) {
            bar.append ("||:::");
        }
        if (input == 1) {
            bar.append (":::||");
        }
    }
    return bar.toString ();
}
----------------------------------------

public static String checkDigit () {
    Scanner s = new Scanner (System.in);
    String bar = "";
    int [] input;
    input = new int [5];
    for (int p = 0;
    p < 5; p ++) {
        input [p] = s.nextInt ();
        if (input [p] == 0) {
            bar = bar + "||:::";
        }
        if (input [p] == 1) {
            bar = bar + ":::||";
        }
    }
    System.out.println ();
    return bar;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53318046_53319906_16_34
53318046_53319906_19_32
Title: Refresh Access Token Retrofit2 + RXJava2 
----------------------------------------

public ObservableSource < T > apply (final Observable < T > stream) {
    return stream.flatMap (new Function < T, ObservableSource < T > > () {
        @Override
        public ObservableSource < T > apply (T response) throws Exception {
            if (response.code () == HttpCode.UNAUTHORIZED_HTTP_CODE) {
                return mApiService.refreshToken (mUserRepository.getRefreshTokenHeaders ()).filter (new UnauthorizedPredicate < > (mUserRepository)).flatMap (new Function < Response < TokenInfo >, ObservableSource < T > > () {
                    @Override
                    public ObservableSource < T > apply (Response < TokenInfo > tokenResponse) throws Exception {
                        return stream.filter (new UnauthorizedPredicate < T > (mUserRepository));
                    }}

                );
            }
            return stream;
        }}

    );
}
----------------------------------------

public ObservableSource < T > apply (T response) throws Exception {
    if (response.code () == HttpCode.UNAUTHORIZED_HTTP_CODE) {
        return mApiService.refreshToken (mUserRepository.getRefreshTokenHeaders ()).filter (new UnauthorizedPredicate < > (mUserRepository)).flatMap (new Function < Response < TokenInfo >, ObservableSource < T > > () {
            @Override
            public ObservableSource < T > apply (Response < TokenInfo > tokenResponse) throws Exception {
                return stream.filter (new UnauthorizedPredicate < T > (mUserRepository));
            }}

        );
    }
    return stream;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53333440_53333579_1_16
53333440_53333585_1_20
Title: I'm trying to get my program to continue asking for input and answering that input 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner s = new Scanner (System.in);
    int [] numbers = fileToArray ();
    Arrays.sort (numbers);
    while (true) {
        System.out.print ("Enter a number in the file: ");
        int numb = s.nextInt ();
        int i = Arrays.binarySearch (numbers, numb);
        if (i < 0) {
            System.out.print ("Number is not in file\n");
        } else {
            System.out.print ("Number is in file\n");
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner s = new Scanner (System.in);
    int [] numbers = fileToArray ();
    Arrays.sort (numbers);
    while (true) {
        System.out.print ("Enter a number in the file: ");
        int numb = s.nextInt ();
        int i = Arrays.binarySearch (numbers, numb);
        if (i < 0) {
            System.out.print ("Number is not in file\n");
        } else if (i >= 0) {
            System.out.print ("This number is in the file\n");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53337839_53338203_1_20
53337839_53338331_1_24
Title: Find the most repeated word in a string 
----------------------------------------

public static void main (String...strings) {
    String para = "Paris in the the spring.Not that that is related.Why are you laughing? Are my my regular expressions THAT bad??";
    String [] words = para.split ("\\s+");
    int finalCount = 0;
    int tempCount = 0;
    String mostlyUsedWord = null;
    for (String word : words) {
        tempCount = 0;
        for (String w : words) {
            if (word.equalsIgnoreCase (w)) {
                tempCount ++;
            }
        }
        if (tempCount >= finalCount) {
            finalCount = tempCount;
            mostlyUsedWord = word;
        }
    }
    System.out.println ("mostlyUsedWord:: = " + mostlyUsedWord + " ,count:: = " + finalCount);
}
----------------------------------------

public static void main (String [] args) {
    String myStr = "how can I find the most frequent word in an string how can I find how how how string";
    String [] splited = myStr.split (" ");
    Arrays.sort (splited);
    System.out.println (Arrays.toString (splited));
    int max = 0;
    int count = 1;
    String word = splited [0];
    String curr = splited [0];
    for (int i = 1;
    i < splited.length; i ++) {
        if (splited [i].equals (curr)) {
            count ++;
        } else {
            count = 1;
            curr = splited [i];
        }
        if (max < count) {
            max = count;
            word = splited [i];
        }
    }
    System.out.println (max + " x " + word);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53341169_53341508_1_41
53341169_53341907_1_24
Title: Usage Queues to count strings 
----------------------------------------

private static void MarkerCutt (Queue < String > kolejkaWyrazow) {
    String box;
    int countRepeats;
    while (! kolejkaWyrazow.isEmpty ()) {
        box = kolejkaWyrazow.remove ();
        countRepeats = 0;
        char curChar, prevChar = '\0';
        for (int k = 0;
        k < box.length (); k ++) {
            curChar = box.charAt (k);
            if (curChar != prevChar) {
                outputCount (countRepeats);
                countRepeats = 0;
                System.out.print (curChar);
            } else {
                ++ countRepeats;
            }
            prevChar = curChar;
        }
        outputCount (countRepeats);
        System.out.println ();
    }
}
----------------------------------------

private static void MarkerCutt (Queue < String > queue) {
    for (int i = 0;
    i <= queue.size (); i ++) {
        StringBuilder sb = new StringBuilder ();
        String box = queue.remove ();
        char c = box.charAt (0);
        int iCount = 1;
        for (int j = 1;
        j < box.length (); j ++) {
            if (box.charAt (j) == c) {
                iCount ++;
            } else {
                sb.append (c + "" + iCount);
                c = box.charAt (j);
                iCount = 1;
            }
        }
        sb.append (c + "" + iCount);
        System.out.println (sb.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53346008_53349126_15_28
53346008_53350067_15_31
Title: Dollars and cents counter 
----------------------------------------

Counter add (int dollars, int cents) {
    if (dollars < 0 || cents < 0) {
        throw new IllegalArgumentException ();
    }
    int dollarsToAdd = this.dollars + dollars;
    int centsToAdd = this.cents + cents;
    if (centsToAdd > 99) {
        dollarsToAdd += centsToAdd / 100;
        centsToAdd = centsToAdd % 100;
    }
    return new Counter (dollarsToAdd, centsToAdd);
}
----------------------------------------

public void add (int dollars, int cents) {
    if (dollars >= 0) {
        if (0 <= cents && cents <= 99) {
            this.dollars += dollars;
            this.cents += cents;
        }
        if (this.cents > 100 | cents > 100) {
            this.dollars += this.cents / 100;
            this.cents = this.cents % 100;
        }
        if (this.cents == 100 | cents == 100) {
            this.dollars ++;
            this.cents = this.cents - 100;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53352072_53352248_1_19
53352072_53352288_1_22
Title: Create an array of values which appear in both given arrays java 
----------------------------------------

public static void main (String [] args) {
    int arr1 [] = {2, 4, 5, 7, 9, 10};
    int arr2 [] = {1, 2, 5, 4, 8};
    int combined [] = new int [arr1.length];
    for (int x = 0;
    x < arr1.length; x ++) {
        for (int i = 0;
        i < arr2.length; i ++) {
            if (arr1 [x] == arr2 [i]) {
                combined [x] = arr1 [x];
            }
        }
    }
    for (int i = 0;
    i < combined.length; i ++) {
        System.out.print (combined [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int arr1 [] = {2, 4, 5, 7, 9, 10};
    int arr2 [] = {1, 2, 5, 6, 8};
    int min = Math.min (arr1.length, arr2.length);
    int counter = 0;
    int combined [] = new int [min];
    for (int s = 0;
    s < arr1.length; s ++) {
        for (int x = 0;
        x < arr2.length; x ++) {
            if (arr1 [s] == arr2 [x]) {
                combined [counter] = arr1 [s];
                counter ++;
                break;
            }
        }
    }
    int [] result = Arrays.copyOf (combined, counter);
    for (int i = 0;
    i < result.length; i ++) {
        System.out.print (result [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53355351_53355502_2_11
53355351_53356348_2_11
Title: Program to find the number of 'a' in a string that is repeated n characters? 
----------------------------------------

public static void main (String [] args) {
    assert findAmount ("aba", 10, "a") == 7;
    assert findAmount ("a", 100, "a") == 100;
    assert findAmount ("abca", 10, "a") == 5;
    assert findAmount ("", 10, "a") == 0;
    assert findAmount ("abcaa", 1000000, "a") == 600000;
    assert findAmount ("abc", 0, "a") == 0;
    assert findAmount ("bcd", 10, "a") == 0;
    System.out.println ("tests passed");
}
----------------------------------------

public static void main (String [] args) {
    boolean a = findAmountA ("aba", 10) == 7;
    boolean b = findAmountA ("a", 100) == 100;
    boolean c = findAmountA ("abca", 10) == 5;
    boolean d = findAmountA ("", 10) == 0;
    boolean e = findAmountA ("abcaa", 1000000) == 600000;
    boolean f = findAmountA ("abc", 0) == 0;
    boolean g = findAmountA ("bcd", 10) == 0;
    System.out.println (a && b && c && d && e && f && g);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53358032_53358520_134_142
53358032_53358520_147_161
Title: Collections.sort() not working with class that implements Comparable or when using Comparator Java 
----------------------------------------

public int compare (CreditCard o1, CreditCard o2) {
    if (o1.getExpDate ().compareTo (o2.getExpDate ()) == - 1) {
        return - 1;
    } else if ((o1.getExpDate ().compareTo (o2.getExpDate ()) == 0)) {
        return 0;
    } else {
        return 1;
    }

}
----------------------------------------

public int compare (CreditCard o1, CreditCard o2) {
    if (o1.getLastName ().compareToIgnoreCase (o2.getLastName ()) == 0) {
        if (o1.getFirstName ().compareToIgnoreCase (o2.getFirstName ()) == 0) {
            return 0;
        } else if (o1.getFirstName ().compareToIgnoreCase (o2.getFirstName ()) == - 1) {
            return - 1;
        } else {
            return 1;
        }

    } else if (o1.getLastName ().compareToIgnoreCase (o2.getLastName ()) == - 1) {
        return - 1;
    } else {
        return 1;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53365010_53365106_1_24
53365010_53365607_1_24
Title: How to count and separate consecutive heads or tails flips in java coin flip program? 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    System.out.print ("How many times do you want to flip the coin? ");
    int timesFlipped = scnr.nextInt ();
    Random randomNum = new Random ();
    int counter = 1;
    int previousFlip = randomNum.nextInt (2);
    printFlip (previousFlip);
    for (int i = 1;
    i < timesFlipped; i ++) {
        int currentflip = randomNum.nextInt (2);
        if (currentflip == previousFlip) {
            counter ++;
        } else {
            System.out.print (counter + " ");
            counter = 1;
            previousFlip = currentflip;
        }
        printFlip (currentflip);
    }
    System.out.print (counter);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    System.out.print ("How many times do you want to flip the coin? ");
    int timesFlipped = scnr.nextInt ();
    if (timesFlipped <= 0) return;

    Random randomNum = new Random ();
    boolean isHeads = false;
    int sequence = 0;
    for (int i = 0;
    i < timesFlipped; i ++) {
        boolean prevFlip = isHeads;
        isHeads = randomNum.nextBoolean ();
        if (i > 0 && isHeads != prevFlip) {
            System.out.print (sequence + " ");
            sequence = 0;
        }
        sequence ++;
        System.out.print (isHeads ? "H" : "T");
    }
    System.out.println (sequence);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53374153_53374218_1_11
53374153_53374245_1_11
Title: Convert uppercase string to lowercase using charAt 
----------------------------------------

private static String toLowerCase (String str) {
    StringBuilder sb = new StringBuilder (str.length ());
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            sb.append (Character.toLowerCase (str.charAt (i)));
        } else {
            sb.append (str.charAt (i));
        }
    }
    return sb.toString ();
}
----------------------------------------

private static String toLowerCase (String str) {
    StringBuffer lower = new StringBuffer ();
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            lower.append (Character.toLowerCase (str.charAt (i)));
        } else {
            lower.append (str.charAt (i));
        }
    }
    return lower.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53374153_53374218_1_11
53374153_53374538_1_11
Title: Convert uppercase string to lowercase using charAt 
----------------------------------------

private static String toLowerCase (String str) {
    StringBuilder sb = new StringBuilder (str.length ());
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            sb.append (Character.toLowerCase (str.charAt (i)));
        } else {
            sb.append (str.charAt (i));
        }
    }
    return sb.toString ();
}
----------------------------------------

private static String toLowerCase (String str) {
    String returning_Str = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char test_char = str.charAt (i);
        if (Character.isUpperCase (test_char)) {
            test_char = Character.toLowerCase (test_char);
        }
        returning_Str += test_char;
    }
    return returning_Str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53374153_53374218_1_11
53374153_53374567_7_14
Title: Convert uppercase string to lowercase using charAt 
----------------------------------------

private static String toLowerCase (String str) {
    StringBuilder sb = new StringBuilder (str.length ());
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            sb.append (Character.toLowerCase (str.charAt (i)));
        } else {
            sb.append (str.charAt (i));
        }
    }
    return sb.toString ();
}
----------------------------------------

private static String toLowerCase (String str) {
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            str = new String (str.replace (str.charAt (i), Character.toLowerCase (str.charAt (i))));
        }
    }
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
53374153_53374218_1_11
53374153_53374976_7_19
Title: Convert uppercase string to lowercase using charAt 
----------------------------------------

private static String toLowerCase (String str) {
    StringBuilder sb = new StringBuilder (str.length ());
    for (int i = 0;
    i < str.length (); i ++) {
        if (Character.isUpperCase (str.charAt (i))) {
            sb.append (Character.toLowerCase (str.charAt (i)));
        } else {
            sb.append (str.charAt (i));
        }
    }
    return sb.toString ();
}
----------------------------------------

private static StringBuffer toLowerCase (String str) {
    StringBuffer buf = new StringBuffer ();
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (Character.isUpperCase (str.charAt (i))) {
            c = Character.toLowerCase (str.charAt (i));
            buf.append (c);
        } else {
            buf.append (c);
        }
    }
    return buf;
}
----------------------------------------
