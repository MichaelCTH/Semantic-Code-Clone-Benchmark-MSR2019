$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20578235_20589246_20_57
20578235_20589246_4_16
Title: Comparing in ArrayList Poker Game Java 
----------------------------------------

boolean matches (List < Card > hand) {
    int [] rankCount = new int [14];
    for (Card card : hand) {
        rankCount [card.getRank ()] ++;
    }
    boolean foundHasOne = false;
    boolean foundHasFour = false;
    for (int i = 1;
    i < rankCount.length; i ++) {
        if (rankCount [i] == 1) {
            if (! foundHasOne) {
                foundHasOne = true;
            } else {
                return false;
            }
        } else if (rankCount [i] == 4) {
            if (! foundHasFour) {
                foundHasFour = true;
            } else {
                return false;
            }
        } else if (rankCount [i] != 0) {
            return false;
        }

    }
    return true;
}
----------------------------------------

boolean matches (List < Card > hand) {
    for (int i = 1;
    i < hand.size (); i ++) {
        if (card.get (i).getRank () != card.get (i - 1).getRank () + 1) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20578647_20578681_1_19
20578647_20578703_1_16
Title: Print array values above a certain value 
----------------------------------------

public static void main (String args []) {
    int [] intList = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int total = 0;
    for (int i : intList) {
        total += i;
    }
    double average = total / (double) intList.length;
    System.out.println ("average :" + average);
    for (int i : intList) {
        if (i > average) {
            System.out.println (i + "\t");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [] {1, 5, 2, 6, 3, 7, 4, 8};
    double sum = 0;
    for (int value : values) sum += value;

    double avg = sum / values.length;
    System.out.printf ("AVG = %.2f\n----------\n", avg);
    for (int value : values) {
        if (value > avg) System.out.println (value);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20580798_20581163_1_32
20580798_20581275_1_14
Title: "How to override equals for two Maps of <String Object>?" 
----------------------------------------

public boolean equals (Object o) {
    if (o == this) return true;

    if (! (o instanceof Map)) return false;

    Map < K, V > m = (Map < K, V >) o;
    if (m.size () != size ()) return false;

    try {
        Iterator < Entry < K, V > > i = entrySet ().iterator ();
        while (i.hasNext ()) {
            Entry < K, V > e = i.next ();
            K key = e.getKey ();
            V value = e.getValue ();
            if (value == null) {
                if (! (m.get (key) == null && m.containsKey (key))) return false;

            } else {
                if (! value.equals (m.get (key))) return false;

            }
        }
    } catch (ClassCastException unused) {
        return false;
    } catch (NullPointerException unused) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean equals (Object o) {
    if (! (o instanceof MyClass)) return false;

    MyClass that = (MyClass) o;
    if (map.size () != that.map.size ()) return false;

    for (Map.Entry < String, Object > entry : map) {
        Object a = entry.getValue ();
        Object b = that.map.get (entry.getKey ());
        if ((a == null ^ b == null) || (a == null && ! a.equals (b))) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20591286_20591305_1_11
20591286_20591461_11_25
Title: Coding a java game - JFrame not working as expected 
----------------------------------------

public GamePanel () {
    this.setTitle ("Game");
    this.setResizable (false);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    game = new Game (screenSize);
    add (game);
    pack ();
    setVisible (true);
}
----------------------------------------

public GamePanel () {
    game = new JavaGame (screenSize);
    game.setPreferredSize (screenSize);
    game.setMaximumSize (screenSize);
    game.setMinimumSize (screenSize);
    add (game);
    this.setTitle ("Game");
    this.setSize (screenSize);
    this.setResizable (false);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20595806_23775672_1_12
20595806_39058568_1_21
Title: Does the following two pieces of Java for loop code yield the same result in every case? 
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    if (nums.length > 1 && len > 0) {
        if (nums [len - 1] == nums [nums.length - 1]) {
            return true;
        }
    }
    if (len == 0 || nums.length == 1) return true;

    return false;
}
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    boolean b = true;
    if (len == 0) {
        b = true;
    }
    for (int i = 0;
    i < len; i ++) {
        if (nums [i] != nums [nums.length - len + i]) {
            b = false;
            break;
        }
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20595806_23775672_1_12
20595806_41336195_1_16
Title: Does the following two pieces of Java for loop code yield the same result in every case? 
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    if (nums.length > 1 && len > 0) {
        if (nums [len - 1] == nums [nums.length - 1]) {
            return true;
        }
    }
    if (len == 0 || nums.length == 1) return true;

    return false;
}
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    String testOne = "";
    String testTwo = "";
    for (int i = 0;
    i < len; i ++) {
        testOne = testOne + String.valueOf (nums [i]);
        testTwo = String.valueOf (nums [(nums.length - 1) - i]) + testTwo;
    }
    return (testOne.equals (testTwo));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20595806_39058568_1_21
20595806_41336195_1_16
Title: Does the following two pieces of Java for loop code yield the same result in every case? 
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    boolean b = true;
    if (len == 0) {
        b = true;
    }
    for (int i = 0;
    i < len; i ++) {
        if (nums [i] != nums [nums.length - len + i]) {
            b = false;
            break;
        }
    }
    return b;
}
----------------------------------------

public boolean sameEnds (int [] nums, int len) {
    String testOne = "";
    String testTwo = "";
    for (int i = 0;
    i < len; i ++) {
        testOne = testOne + String.valueOf (nums [i]);
        testTwo = String.valueOf (nums [(nums.length - 1) - i]) + testTwo;
    }
    return (testOne.equals (testTwo));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20598219_35423942_1_10
20598219_35423971_1_10
Title: How to refresh fragments 'onResume?' 
----------------------------------------

@Override
public void onResume () {
    super.onResume ();
    if (allowRefresh) {
        allowRefresh = false;
        lst_applist = db.load_apps ();
        getFragmentManager ().beginTransaction ().detach (this).attach (this).commit ();
    }
}
----------------------------------------

@Override
public void onResume () {
    super.onResume ();
    if (allowRefresh) {
        allowRefresh = false;
        lst_applist = db.load_apps ();
        getFragmentManager ().beginTransaction ().replace (Fragment_Container, fragment).commit ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20598935_20598991_1_10
20598935_20599035_1_28
Title: Getting multiple ints from string 
----------------------------------------

public static void main (String [] args) {
    String s = "3, V, 11, H, 21, H";
    String [] t = s.split (" [ ,]*|,[ ,]*");
    int first = Integer.parseInt (t [0]);
    int second = Integer.parseInt (t [2]);
    int third = Integer.parseInt (t [4]);
    System.out.println (first);
    System.out.println (second);
    System.out.println (third);
}
----------------------------------------

public static void main (String [] args) {
    String in = "3, V, 11, H, 21, H";
    List < String > storage = Arrays.asList (in.split (","));
    List < Integer > output = new ArrayList < Integer > ();
    int first = 0;
    int second = 0;
    int third = 0;
    for (String str : storage) {
        if (str.trim ().matches ("[0-9]+")) {
            output.add (Integer.parseInt (str.trim ()));
        }
    }
    if (output.size () == 3) {
        first = output.get (0);
        second = output.get (1);
        third = output.get (2);
    }
    System.out.print ("first: ");
    System.out.println (first);
    System.out.print ("second: ");
    System.out.println (second);
    System.out.print ("third: ");
    System.out.println (third);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20598935_20598991_1_10
20598935_20599174_4_16
Title: Getting multiple ints from string 
----------------------------------------

public static void main (String [] args) {
    String s = "3, V, 11, H, 21, H";
    String [] t = s.split (" [ ,]*|,[ ,]*");
    int first = Integer.parseInt (t [0]);
    int second = Integer.parseInt (t [2]);
    int third = Integer.parseInt (t [4]);
    System.out.println (first);
    System.out.println (second);
    System.out.println (third);
}
----------------------------------------

public static void main (String [] args) {
    String str = "3, V, 11, H, 21, H";
    String [] parts = str.split (", ");
    ArrayList < Integer > listNumbers = new ArrayList < Integer > ();
    for (String x : parts) {
        try {
            listNumbers.add (Integer.parseInt (x));
        } catch (Exception e) {
        }
    }
    for (int i = 0;
    i < listNumbers.size (); i ++) System.out.println ("Number " + (i + 1) + " : " + listNumbers.get (i));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20598935_20599035_1_28
20598935_20599174_4_16
Title: Getting multiple ints from string 
----------------------------------------

public static void main (String [] args) {
    String in = "3, V, 11, H, 21, H";
    List < String > storage = Arrays.asList (in.split (","));
    List < Integer > output = new ArrayList < Integer > ();
    int first = 0;
    int second = 0;
    int third = 0;
    for (String str : storage) {
        if (str.trim ().matches ("[0-9]+")) {
            output.add (Integer.parseInt (str.trim ()));
        }
    }
    if (output.size () == 3) {
        first = output.get (0);
        second = output.get (1);
        third = output.get (2);
    }
    System.out.print ("first: ");
    System.out.println (first);
    System.out.print ("second: ");
    System.out.println (second);
    System.out.print ("third: ");
    System.out.println (third);
}
----------------------------------------

public static void main (String [] args) {
    String str = "3, V, 11, H, 21, H";
    String [] parts = str.split (", ");
    ArrayList < Integer > listNumbers = new ArrayList < Integer > ();
    for (String x : parts) {
        try {
            listNumbers.add (Integer.parseInt (x));
        } catch (Exception e) {
        }
    }
    for (int i = 0;
    i < listNumbers.size (); i ++) System.out.println ("Number " + (i + 1) + " : " + listNumbers.get (i));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20601000_20601020_3_14
20601000_20601032_1_17
Title: Why is my program not recognizing the comparison between two strings in an if statement? 
----------------------------------------

public static void main (String [] args) {
    String s1 = "hello world";
    String s2 = "hello world";
    String s3 = new String ("hello world");
    System.out.println (s1 == s2);
    System.out.println (s1 == s3);
    System.out.println (s2 == s3);
    System.out.println (s1.equals (s3));
    System.out.println (s2.equals (s3));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String secretPhrase = "show me the money";
    boolean notDone = true;
    while (notDone) {
        System.out.print ("Guess the puzzle: ");
        String puzzleGuess = input.nextLine ();
        if (puzzleGuess.equals (secretPhrase)) {
            System.out.println ("Congratulations! You guessed the puzzle!");
            secretPhrase = null;
            notDone = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20602787_20602832_2_10
20602787_20603039_1_15
Title: How to move parts of an array to the front? 
----------------------------------------

public static Alien [] consolidate (Alien [] cockpitCrew) {
    List < Alien > al = new ArrayList < Alien > ();
    for (Alien alien : cockpitCrew) {
        if (alien != null) {
            al.add (alien);
        }
    }
    return al.toArray (new Alien [al.size ()]);
}
----------------------------------------

public void consolidate () {
    Alien newAlienArray [] = new Alien [cockpitCrew.length];
    int front = 0;
    int rear = cockpitCrew.length - 1;
    for (int index = 0;
    index < cockpitCrew.length; index ++) {
        if (cockpitCrew [index] == null) {
            newAlienArray [rear] = cockpitCrew [index];
            rear --;
        } else {
            newAlienArray [front] = cockpitCrew [index];
            front ++;
        }
    }
    cockpitCrew = newAlienArray;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20603802_20603826_1_13
20603802_20604061_1_22
Title: Code is not finding the right variance 
----------------------------------------

public static double variance (int [] data) {
    int sum = 0;
    for (int datum : data) {
        sum += datum;
    }
    double average = (double) sum / data.length;
    double devianceSum = 0;
    for (int datum : data) {
        devianceSum += Math.pow (datum - average, 2);
    }
    return devianceSum / data.length;
}
----------------------------------------

public static double variance (int [] data) {
    double sum = 0;
    double average;
    double [] deviations = new int [data.length];
    for (int i = 0;
    i < data.length; i ++) {
        sum += data [i];
    }
    average = sum / data.length;
    for (int i = 0;
    i < data.length; i ++) {
        deviations [i] = Math.pow (data [i] - average, 2);
    }
    double result = 0;
    for (Double d : deviations) result += d;

    result = result / data.length - 1;
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604176_20604274_1_13
20604176_20604293_1_11
Title: change image on click? 
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            item.setIcon (R.drawable.myAbnormalImage);
            return true;
        default :
            return false;
    }
}
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            item.setIcon (your_condition ? R.drawable.your_img1 : R.drawable.your_img2);
            return true;
        default :
            return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604176_20604274_1_13
20604176_20604322_1_14
Title: change image on click? 
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            item.setIcon (R.drawable.myAbnormalImage);
            return true;
        default :
            return false;
    }
}
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            getActionBar ().setIcon (R.drawable.xyz);
            return true;
        default :
            return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604176_20604293_1_11
20604176_20604322_1_14
Title: change image on click? 
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            item.setIcon (your_condition ? R.drawable.your_img1 : R.drawable.your_img2);
            return true;
        default :
            return false;
    }
}
----------------------------------------

@Override
public boolean onActionItemClicked (ActionMode mode, MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_item1 :
            getActionBar ().setIcon (R.drawable.xyz);
            return true;
        default :
            return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604974_20621142_22_56
20604974_20630806_40_58
Title: setButtonCell for ComboBox 
----------------------------------------

public void start (Stage primaryStage) {
    double y1 = 15;
    ProgressBar p1 = new ProgressBar ();
    p1.setLayoutY (y1);
    HBox vb1 = new HBox (10);
    vb1.getChildren ().addAll (new Label ("Progressbar 1"), p1);
    double y2 = 15;
    ProgressBar p2 = new ProgressBar ();
    p2.setLayoutY (y2);
    HBox vb2 = new HBox (10);
    vb2.getChildren ().addAll (new Label ("Progressbar 2"), p2);
    double y3 = 15;
    ProgressBar p3 = new ProgressBar ();
    p3.setLayoutY (y3);
    HBox vb3 = new HBox (10);
    vb3.getChildren ().addAll (new Label ("Progressbar 3"), p3);
    TextChooser textChooser = new TextChooser (vb1, vb2, vb3);
    textChooser.setStyle ("-fx-font: 10px \"Verdana\";");
    StackPane root = new StackPane ();
    root.getChildren ().add (textChooser);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    ProgressData vb1 = new ProgressData ("Progressbar 1", - 1);
    ProgressData vb2 = new ProgressData ("Progressbar 2", 0.2);
    ProgressData vb3 = new ProgressData ("Progressbar 3", 0.3);
    TextChooser textChooser = new TextChooser (vb1, vb2, vb3);
    textChooser.setStyle ("-fx-font: 10px \"Verdana\";");
    StackPane root = new StackPane ();
    root.getChildren ().add (textChooser);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604974_20621142_69_146
20604974_20630806_66_166
Title: setButtonCell for ComboBox 
----------------------------------------

public TextChooser (HBox...options) {
    StackPane.setAlignment (label, Pos.CENTER_LEFT);
    StackPane.setAlignment (combo, Pos.CENTER_LEFT);
    label.graphicProperty ().bind (combo.getSelectionModel ().selectedItemProperty ());
    label.visibleProperty ().bind (combo.visibleProperty ().not ());
    combo.getItems ().setAll (options);
    combo.setCellFactory (new Callback < ListView < HBox >, ListCell < HBox > > () {
        @Override
        public ListCell < HBox > call (ListView < HBox > p) {
            return new ListCell < HBox > () {
                @Override
                protected void updateItem (HBox item, boolean empty) {
                    super.updateItem (item, empty);
                    if (item == null || empty) {
                        setGraphic (null);
                    } else {
                        setGraphic (item);
                    }
                }}

            ;
        }}

    );
    combo.getSelectionModel ().select (0);
    combo.setVisible (true);
    label.setOnMouseEntered (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent arg0) {
            combo.setVisible (true);
        }}

    );
    combo.showingProperty ().addListener (new ChangeListener < Boolean > () {
        @Override
        public void changed (ObservableValue < ? extends Boolean > arg0, Boolean arg1, Boolean newVal) {
            if (! combo.isShowing ()) {
                combo.setVisible (false);
            }
        }}

    );
    combo.setOnMouseExited (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent arg0) {
            if (! combo.isShowing ()) {
                combo.setVisible (false);
            }
        }}

    );
    getChildren ().setAll (label, combo);
}
----------------------------------------

public TextChooser (ProgressData...options) {
    StackPane.setAlignment (label, Pos.CENTER_LEFT);
    StackPane.setAlignment (combo, Pos.CENTER_LEFT);
    final ProgressBar labelBar = new ProgressBar ();
    label.visibleProperty ().bind (combo.visibleProperty ().not ());
    label.setContentDisplay (ContentDisplay.RIGHT);
    label.setGraphic (labelBar);
    combo.getItems ().setAll (options);
    combo.getSelectionModel ().selectedItemProperty ().addListener (new ChangeListener < ProgressData > () {
        @Override
        public void changed (ObservableValue < ? extends ProgressData > observable, ProgressData oldValue, ProgressData newValue) {
            if (labelBar.progressProperty ().isBound ()) {
                labelBar.progressProperty ().unbind ();
            }
            labelBar.progressProperty ().bind (newValue.progressProperty ());
            label.setText (newValue.nameProperty ().get ());
        }}

    );
    combo.setCellFactory (new Callback < ListView < ProgressData >, ListCell < ProgressData > > () {
        @Override
        public ListCell < ProgressData > call (ListView < ProgressData > p) {
            return new ListCell < ProgressData > () {
                private final ProgressBar cellBar = new ProgressBar ();

                {
                    cellBar.setMouseTransparent (true);
                    setContentDisplay (ContentDisplay.RIGHT);
                    setGraphic (cellBar);
                }

                @Override
                protected void updateItem (ProgressData item, boolean empty) {
                    super.updateItem (item, empty);
                    if (item != null && ! empty) {
                        if (cellBar.progressProperty ().isBound ()) {
                            cellBar.progressProperty ().unbind ();
                        }
                        cellBar.progressProperty ().bind (item.progressProperty ());
                        setText (item.nameProperty ().get ());
                    }
                }}

            ;
        }}

    );
    combo.getSelectionModel ().select (0);
    combo.setVisible (true);
    label.setOnMouseEntered (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent event) {
            combo.setVisible (true);
        }}

    );
    combo.showingProperty ().addListener (new InvalidationListener () {
        @Override
        public void invalidated (Observable observable) {
            if (! combo.isShowing ()) {
                combo.setVisible (false);
            }
        }}

    );
    combo.setOnMouseExited (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent event) {
            if (! combo.isShowing ()) {
                combo.setVisible (false);
            }
        }}

    );
    getChildren ().setAll (label, combo);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20604974_20621142_88_107
20604974_20630806_99_126
Title: setButtonCell for ComboBox 
----------------------------------------

public ListCell < HBox > call (ListView < HBox > p) {
    return new ListCell < HBox > () {
        @Override
        protected void updateItem (HBox item, boolean empty) {
            super.updateItem (item, empty);
            if (item == null || empty) {
                setGraphic (null);
            } else {
                setGraphic (item);
            }
        }}

    ;
}
----------------------------------------

public ListCell < ProgressData > call (ListView < ProgressData > p) {
    return new ListCell < ProgressData > () {
        private final ProgressBar cellBar = new ProgressBar ();

        {
            cellBar.setMouseTransparent (true);
            setContentDisplay (ContentDisplay.RIGHT);
            setGraphic (cellBar);
        }

        @Override
        protected void updateItem (ProgressData item, boolean empty) {
            super.updateItem (item, empty);
            if (item != null && ! empty) {
                if (cellBar.progressProperty ().isBound ()) {
                    cellBar.progressProperty ().unbind ();
                }
                cellBar.progressProperty ().bind (item.progressProperty ());
                setText (item.nameProperty ().get ());
            }
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20611078_20611220_1_15
20611078_20611264_1_14
Title: Writing a generic function to perform an operation 
----------------------------------------

private int getKeyOf (int year) {
    switch (year / 100 % 4) {
        case 0 :
            return 2;
        case 1 :
            return 5;
        case 2 :
            return 3;
        case 3 :
            return 1;
    }
    return - 1;
}
----------------------------------------

protected int getKeyOf (int year) {
    switch (year / 100) {
        case 16 :
            return 2;
        case 17 :
            return 5;
        case 18 :
            return 3;
        case 19 :
            return 1;
        default :
            return - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20617554_20617603_1_21
20617554_20617650_1_25
Title: How can I limit the amount of strings printed on a single line 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Please enter string: ");
    String s = in.nextLine ();
    System.out.println ("Please enter number: ");
    int n = in.nextInt ();
    for (int j = 1;
    j < n + 1; j ++) {
        System.out.print (s);
        if (j % 2 == 0) System.out.println ("\n");
        else System.out.print (" ");

    }
    if (n < 0) {
        System.out.println ("error: number must be positive");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Please enter string: ");
    String s = in.nextLine ();
    System.out.println ("Please enter number: ");
    int n = in.nextInt ();
    for (int j = 0;
    j < n; j ++) {
        if (j % 2 == 0 && j != 0) {
            System.out.println ("\n");
        }
        System.out.print (s);
        System.out.print (" ");
    }
    if (n < 0) {
        System.out.println ("error: number must be positive");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20635394_20637445_115_188
20635394_28766085_70_141
Title: Uniform Cost Search Implementation 
----------------------------------------

public static void UniformCostSearch (Node source, Node goal) {
    source.pathCost = 0;
    PriorityQueue < Node > queue = new PriorityQueue < Node > (20, new Comparator < Node > () {
        public int compare (Node i, Node j) {
            if (i.pathCost > j.pathCost) {
                return 1;
            } else if (i.pathCost < j.pathCost) {
                return - 1;
            } else {
                return 0;
            }

        }}

    );
    queue.add (source);
    Set < Node > explored = new HashSet < Node > ();
    boolean found = false;
    do {
        Node current = queue.poll ();
        explored.add (current);
        if (current.value.equals (goal.value)) {
            found = true;
        }
        for (Edge e : current.adjacencies) {
            Node child = e.target;
            double cost = e.cost;
            child.pathCost = current.pathCost + cost;
            if (! explored.contains (child) && ! queue.contains (child)) {
                child.parent = current;
                queue.add (child);
                System.out.println (child);
                System.out.println (queue);
                System.out.println ();
            } else if ((queue.contains (child)) && (child.pathCost > current.pathCost)) {
                child.parent = current;
                queue.remove (child);
                queue.add (child);
            }

        }
    } while (! queue.isEmpty ());
}
----------------------------------------

public static void UniformCostSearch (Node source, Node goal) {
    List < Node > list = new ArrayList < Node > ();
    source.pathCost = 0;
    PriorityQueue < Node > queue = new PriorityQueue < Node > (20, new Comparator < Node > () {
        public int compare (Node i, Node j) {
            if ((i.pathCost > j.pathCost)) {
                return 1;
            } else if (i.pathCost < j.pathCost) {
                return - 1;
            } else {
                return 0;
            }

        }}

    );
    queue.add (source);
    Set < Node > explored = new HashSet < Node > ();
    List < Node > path = new ArrayList < Node > ();
    do {
        path.clear ();
        Node current = queue.poll ();
        explored.add (current);
        for (Node node = current;
        node != null; node = node.parent) {
            path.add (node);
        }
        if (current.value.equals (goal.value)) {
            goal.parent = current.parent;
            goal.pathCost = current.pathCost;
            break;
        }
        for (Edge e : current.adjacencies) {
            Node child = e.target;
            double cost = e.cost;
            if ((queue.contains (child) || explored.contains (child)) && ! path.contains (child)) {
                Node n = new Node (child);
                list.add (n);
                list.get (list.size () - 1).pathCost = current.pathCost + cost;
                list.get (list.size () - 1).parent = current;
                queue.add (list.get (list.size () - 1));
                System.out.println (list.get (list.size () - 1));
                System.out.println (queue);
            } else if (! path.contains (child)) {
                child.pathCost = current.pathCost + cost;
                child.parent = current;
                queue.add (child);
                System.out.println (child);
                System.out.println (queue);
            }

        }
    } while (! queue.isEmpty ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20635394_20637445_122_134
20635394_28766085_78_90
Title: Uniform Cost Search Implementation 
----------------------------------------

public int compare (Node i, Node j) {
    if (i.pathCost > j.pathCost) {
        return 1;
    } else if (i.pathCost < j.pathCost) {
        return - 1;
    } else {
        return 0;
    }

}
----------------------------------------

public int compare (Node i, Node j) {
    if ((i.pathCost > j.pathCost)) {
        return 1;
    } else if (i.pathCost < j.pathCost) {
        return - 1;
    } else {
        return 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20635394_20637445_190_200
20635394_28766085_143_153
Title: Uniform Cost Search Implementation 
----------------------------------------

public static List < Node > printPath (Node target) {
    List < Node > path = new ArrayList < Node > ();
    for (Node node = target;
    node != null; node = node.parent) {
        path.add (node);
    }
    Collections.reverse (path);
    return path;
}
----------------------------------------

public static List < Node > printPath (Node target) {
    List < Node > path = new ArrayList < Node > ();
    for (Node node = target;
    node != null; node = node.parent) {
        path.add (node);
    }
    Collections.reverse (path);
    return path;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20648078_20665773_1_12
20648078_20677876_1_13
Title: Java codingbat help - withoutString 
----------------------------------------

public String withoutString (String base, String remove) {
    int remIdx = 0;
    int remLen = remove.length ();
    remove = remove.toLowerCase ();
    while (true) {
        remIdx = base.toLowerCase ().indexOf (remove);
        if (remIdx == - 1) break;

        base = base.substring (0, remIdx) + base.substring (remIdx + remLen);
    }
    return base;
}
----------------------------------------

public String withoutString (String base, String remove) {
    String result = base.replaceAll ("(?i)" + remove, "");
    for (int i = 0;
    i < result.length () - 1;) {
        if (result.substring (i, i + 2).equals ("  ")) {
            result = result.replace (result.substring (i, i + 2), " ");
        } else i ++;

    }
    if (result.startsWith (" ")) result = result.substring (1);

    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20648078_20665773_1_12
20648078_26583991_1_19
Title: Java codingbat help - withoutString 
----------------------------------------

public String withoutString (String base, String remove) {
    int remIdx = 0;
    int remLen = remove.length ();
    remove = remove.toLowerCase ();
    while (true) {
        remIdx = base.toLowerCase ().indexOf (remove);
        if (remIdx == - 1) break;

        base = base.substring (0, remIdx) + base.substring (remIdx + remLen);
    }
    return base;
}
----------------------------------------

public String withoutString (String base, String remove) {
    final int rLen = remove.length ();
    final int bLen = base.length ();
    String op = "";
    for (int i = 0;
    i < bLen;) {
        if (! (i + rLen > bLen) && base.substring (i, i + rLen).equalsIgnoreCase (remove)) {
            i += rLen;
            continue;
        }
        op += base.substring (i, i + 1);
        i ++;
    }
    return op;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20648078_20665773_1_12
20648078_41254451_1_26
Title: Java codingbat help - withoutString 
----------------------------------------

public String withoutString (String base, String remove) {
    int remIdx = 0;
    int remLen = remove.length ();
    remove = remove.toLowerCase ();
    while (true) {
        remIdx = base.toLowerCase ().indexOf (remove);
        if (remIdx == - 1) break;

        base = base.substring (0, remIdx) + base.substring (remIdx + remLen);
    }
    return base;
}
----------------------------------------

public String withoutString (String base, String remove) {
    final int rLen = remove.length ();
    final int bLen = base.length ();
    StringBuilder op = new StringBuilder ();
    for (int i = 0;
    i < bLen;) {
        if (! (i + rLen > bLen) && base.substring (i, i + rLen).equalsIgnoreCase (remove)) {
            i += rLen;
            continue;
        }
        op.append (base.charAt (i));
        i ++;
    }
    return op.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20648078_20677876_1_13
20648078_26583991_1_19
Title: Java codingbat help - withoutString 
----------------------------------------

public String withoutString (String base, String remove) {
    String result = base.replaceAll ("(?i)" + remove, "");
    for (int i = 0;
    i < result.length () - 1;) {
        if (result.substring (i, i + 2).equals ("  ")) {
            result = result.replace (result.substring (i, i + 2), " ");
        } else i ++;

    }
    if (result.startsWith (" ")) result = result.substring (1);

    return result;
}
----------------------------------------

public String withoutString (String base, String remove) {
    final int rLen = remove.length ();
    final int bLen = base.length ();
    String op = "";
    for (int i = 0;
    i < bLen;) {
        if (! (i + rLen > bLen) && base.substring (i, i + rLen).equalsIgnoreCase (remove)) {
            i += rLen;
            continue;
        }
        op += base.substring (i, i + 1);
        i ++;
    }
    return op;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20648078_20677876_1_13
20648078_41254451_1_26
Title: Java codingbat help - withoutString 
----------------------------------------

public String withoutString (String base, String remove) {
    String result = base.replaceAll ("(?i)" + remove, "");
    for (int i = 0;
    i < result.length () - 1;) {
        if (result.substring (i, i + 2).equals ("  ")) {
            result = result.replace (result.substring (i, i + 2), " ");
        } else i ++;

    }
    if (result.startsWith (" ")) result = result.substring (1);

    return result;
}
----------------------------------------

public String withoutString (String base, String remove) {
    final int rLen = remove.length ();
    final int bLen = base.length ();
    StringBuilder op = new StringBuilder ();
    for (int i = 0;
    i < bLen;) {
        if (! (i + rLen > bLen) && base.substring (i, i + rLen).equalsIgnoreCase (remove)) {
            i += rLen;
            continue;
        }
        op.append (base.charAt (i));
        i ++;
    }
    return op.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20656143_20656628_2_25
20656143_20657767_4_30
Title: Parsing sql database file to get a wanted column field in java 
----------------------------------------

public static void main (String [] args) {
    StringBuffer tableBuffer = new StringBuffer ();
    StringBuffer columnBuffer = new StringBuffer ();
    try {
        Scanner scanner = new Scanner (new FileInputStream (new File ("D:\\test.sql")));
        while (scanner.hasNextLine ()) {
            String token = scanner.nextLine ().toUpperCase ();
            if (token.contains ("TABLE")) {
                tableBuffer.append (token).append ("\n");
            }
            if (isContainDataType (token)) {
                columnBuffer.append (token).append ("\n");
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    System.out.println ("table:\n" + tableBuffer.toString ());
    System.out.println ("column:\n" + columnBuffer.toString ());
}
----------------------------------------

public static void main (String args []) throws FileNotFoundException {
    List < String > tables = new ArrayList < String > ();
    List < String > columns = new ArrayList < String > ();
    File text = new File ("C:\\data.sql");
    Scanner scnr = new Scanner (text);
    int lineNumber = 1;
    while (scnr.hasNextLine ()) {
        String line = scnr.nextLine ();
        if (line.indexOf ("DROP") != - 1) {
            tables.add (parseTable (line));
        } else {
            if (line.indexOf ("CREATE") == - 1) columns.add (parseColumn (line));

        }
        lineNumber ++;
    }
    System.out.println ("Tables : " + tables);
    System.out.println ("Columns : " + columns);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20660748_20660801_1_17
20660748_20661038_1_17
Title: Why my code keep asking missing return statement 
----------------------------------------

public double open () {
    if (status.equalsIgnoreCase ("Pending")) {
        status = "Open";
        if (startPrice <= 5) {
            return 0.2;
        } else if (startPrice > 5 && startPrice <= 20) {
            return 0.5;
        } else if (startPrice > 20 && startPrice <= 100) {
            return 1;
        } else if (startPrice > 100 && startPrice <= 250) {
            return 2.5;
        } else if (startPrice > 250) {
            return 5;
        }

    }
    return - 1;
}
----------------------------------------

public double open () {
    if (status.equalsIgnoreCase ("Pending")) {
        status = "Open";
        if (startPrice <= 5) {
            return 0.2;
        } else if (startPrice <= 20) {
            return 0.5;
        } else if (startPrice <= 100) {
            return 1;
        } else if (startPrice <= 250) {
            return 2.5;
        } else {
            return 5;
        }

    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20660989_32042916_2_24
20660989_33028825_1_28
Title: Max double slice sum 
----------------------------------------

public int solution (int [] A) {
    int [] maxStartingHere = new int [A.length];
    int [] maxEndingHere = new int [A.length];
    int maxSum = 0, len = A.length;
    for (int i = len - 2;
    i > 0; -- i) {
        maxSum = Math.max (0, A [i] + maxSum);
        maxStartingHere [i] = maxSum;
    }
    maxSum = 0;
    for (int i = 1;
    i < len - 1; ++ i) {
        maxSum = Math.max (0, A [i] + maxSum);
        maxEndingHere [i] = maxSum;
    }
    int maxDoubleSlice = 0;
    for (int i = 0;
    i < len - 2; ++ i) {
        maxDoubleSlice = Math.max (maxDoubleSlice, maxEndingHere [i] + maxStartingHere [i + 2]);
    }
    return maxDoubleSlice;
}
----------------------------------------

public int solution (int [] A) {
    int [] forw = new int [A.Length];
    int [] rewi = new int [A.Length];
    bool isAllNeg = true;
    for (int i = 1;
    i < A.Length; i ++) {
        forw [i] = Math.Max (0, forw [i - 1] + A [i]);
        if (A [i] > 0 && isAllNeg) isAllNeg = false;

    }
    if (isAllNeg) return 0;

    for (int i = A.Length - 2;
    i >= 0; i --) {
        rewi [i] = Math.Max (0, rewi [i + 1] + A [i]);
    }
    int maxsum = 0;
    for (int i = 1;
    i < A.Length - 1; i ++) {
        maxsum = Math.Max (maxsum, forw [i - 1] + rewi [i + 1]);
    }
    return maxsum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20661724_20661822_1_12
20661724_50436581_1_12
Title: Regular Expression for UpperCase Letters In A String 
----------------------------------------

@Test
public void testCountTheNumberOfUpperCaseCharacters () {
    String testStr = "abcdefghijkTYYtyyQ";
    String regEx = "[A-Z]+";
    Pattern pattern = Pattern.compile (regEx);
    Matcher matcher = pattern.matcher (testStr);
    int count = 0;
    while (matcher.find ()) {
        count += matcher.group (0).length ();
    }
    System.out.printf ("Found %d, of capital letters in %s%n", count, testStr);
}
----------------------------------------

@Test
public void testCountTheNumberOfUpperCaseCharacters () {
    Pattern ptrn = Pattern.compile ("[A-Z]");
    Matcher matcher = ptrn.matcher ("ivekKVVV");
    int from = 0;
    int count = 0;
    while (matcher.find (from)) {
        count ++;
        from = matcher.start () + 1;
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20685709_20685745_1_14
20685709_20685746_1_11
Title: Check List for true or false 
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = false;
    for (PizzaTopping topping : topList) {
        if ((topping.isVeg () == true)) {
            veg1 = true;
        } else {
            return false;
        }
    }
    return veg1;
}
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = true;
    for (PizzaTopping topping : topList) {
        if (topping.isVeg () == false) {
            veg1 = false;
        }
    }
    return veg1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20685709_20685745_1_14
20685709_20696430_1_11
Title: Check List for true or false 
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = false;
    for (PizzaTopping topping : topList) {
        if ((topping.isVeg () == true)) {
            veg1 = true;
        } else {
            return false;
        }
    }
    return veg1;
}
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = true;
    for (PizzaTopping topping : topList) {
        if (topping.isVeg () == false) {
            veg1 = false;
        }
    }
    return veg1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20685709_20685746_1_11
20685709_20696430_1_11
Title: Check List for true or false 
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = true;
    for (PizzaTopping topping : topList) {
        if (topping.isVeg () == false) {
            veg1 = false;
        }
    }
    return veg1;
}
----------------------------------------

public boolean vegStatus () {
    boolean veg1 = true;
    for (PizzaTopping topping : topList) {
        if (topping.isVeg () == false) {
            veg1 = false;
        }
    }
    return veg1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20691839_20691978_12_21
20691839_20691978_26_35
Title: "Concurrency-How to start one thread then start another one and first thread keeps running when thread 2 running?" 
----------------------------------------

public void run () {
    System.out.println ("started a");
    try {
        Thread.sleep (4000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    cdl.countDown ();
    System.out.println ("stoped a");
}
----------------------------------------

public void run () {
    System.out.println ("started b");
    System.out.println ("wait a");
    try {
        cdl.await ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("stoped b");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20696441_20696731_25_46
20696441_20696830_2_33
Title: Code efficiency. Effective way of using loops 
----------------------------------------

public static void main (String [] args) {
    selector8 obj1 = new selector8 ();
    Scanner inputString = new Scanner (System.in);
    String input, A, B, C;
    System.out.println ("Choose. A || B || C || X to exit");
    input = inputString.nextLine ();
    char contLoop1 = 'y';
    do {
        if (input.equalsIgnoreCase ("y")) {
            input = "";
            System.out.println ("Choose. A || B || C || X to exit");
            input = inputString.nextLine ();
            startMethods (obj1, input);
        } else startMethods (obj1, input);

        System.out.println ("Do want to try again " + "Y/N");
        input = inputString.nextLine ();
        contLoop1 = input.charAt (0);
    } while (contLoop1 != 'n');
}
----------------------------------------

public static void main (String [] args) {
    Selector8 obj1 = new Selector8 ();
    Scanner inputString = new Scanner (System.in);
    Scanner inputYN = new Scanner (System.in);
    String input, A, B, C;
    System.out.println ("Choose. A || B || C || X to exit");
    input = inputString.nextLine ();
    char contLoop1 = 'y';
    while (contLoop1 != 'n') {
        if (input.equalsIgnoreCase ("y")) {
            System.out.println ("Choose. A || B || C || X to exit");
            input = inputString.nextLine ();
        }
        switch (input) {
            case ("a") :
            case ("b") :
            case ("c") :
                obj1.startMethod ();
                break;
            default :
                System.out.println (validate (input));
                break;
        }
        System.out.println ("Do want to try again " + "Y/N");
        input = inputYN.nextLine ();
        contLoop1 = input.charAt (0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20697779_20697813_1_22
20697779_20698024_3_23
Title: A program Binary to Decimal giving error in Java code 
----------------------------------------

public static void main (String [] args) throws IOException {
    boolean correctInput = true;
    BufferedReader m_bufRead = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Bitte geben sie eine Dualzahl ein:");
    String input = m_bufRead.readLine ().trim ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) != '0' && input.charAt (i) != '1') {
            correctInput = false;
        }
    }
    if (correctInput) {
        long dezimal = 0;
        for (int i = 0;
        i < input.length (); i ++) {
            dezimal += Character.getNumericValue (input.charAt (i)) * Math.pow (2, input.length () - (i + 1));
        }
        System.out.println ("\nDezimalwert:\n" + dezimal);
    } else {
        System.out.println ("Ihre Eingabe kann nicht umgewandelt werden");
    }
}
----------------------------------------

public static void main (String arg []) {
    int sum = 0, len, e, d, c;
    int a [] = new int [arg.length];
    for (int i = 0;
    i <= (arg.length - 1); i ++) {
        a [i] = Integer.parseInt (arg [i]);
    }
    len = a.length;
    d = len;
    for (int j = 0;
    j < d; j ++) {
        len --;
        e = pow (2, len);
        System.out.println (e);
        c = a [j] * e;
        sum = sum + c;
    }
    System.out.println ("sum is " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20697779_20697813_1_22
20697779_20698520_5_22
Title: A program Binary to Decimal giving error in Java code 
----------------------------------------

public static void main (String [] args) throws IOException {
    boolean correctInput = true;
    BufferedReader m_bufRead = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Bitte geben sie eine Dualzahl ein:");
    String input = m_bufRead.readLine ().trim ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) != '0' && input.charAt (i) != '1') {
            correctInput = false;
        }
    }
    if (correctInput) {
        long dezimal = 0;
        for (int i = 0;
        i < input.length (); i ++) {
            dezimal += Character.getNumericValue (input.charAt (i)) * Math.pow (2, input.length () - (i + 1));
        }
        System.out.println ("\nDezimalwert:\n" + dezimal);
    } else {
        System.out.println ("Ihre Eingabe kann nicht umgewandelt werden");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader bf = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the Binary value: ");
    String str = bf.readLine ();
    long num = Long.parseLong (str);
    long rem;
    while (num > 0) {
        rem = num % 10;
        num = num / 10;
        if (rem != 0 && rem != 1) {
            System.out.println ("This is not a binary number.");
            System.out.println ("Please try once again.");
            System.exit (0);
        }
    }
    int i = Integer.parseInt (str, 2);
    System.out.println ("Decimal:=" + i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20697779_20698024_3_23
20697779_20698520_5_22
Title: A program Binary to Decimal giving error in Java code 
----------------------------------------

public static void main (String arg []) {
    int sum = 0, len, e, d, c;
    int a [] = new int [arg.length];
    for (int i = 0;
    i <= (arg.length - 1); i ++) {
        a [i] = Integer.parseInt (arg [i]);
    }
    len = a.length;
    d = len;
    for (int j = 0;
    j < d; j ++) {
        len --;
        e = pow (2, len);
        System.out.println (e);
        c = a [j] * e;
        sum = sum + c;
    }
    System.out.println ("sum is " + sum);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader bf = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the Binary value: ");
    String str = bf.readLine ();
    long num = Long.parseLong (str);
    long rem;
    while (num > 0) {
        rem = num % 10;
        num = num / 10;
        if (rem != 0 && rem != 1) {
            System.out.println ("This is not a binary number.");
            System.out.println ("Please try once again.");
            System.exit (0);
        }
    }
    int i = Integer.parseInt (str, 2);
    System.out.println ("Decimal:=" + i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20700800_20701027_11_51
20700800_20701489_9_56
Title: Iterating vertical values in a collection to horizontal values in another collection 
----------------------------------------

public static void main (String [] args) throws Exception {
    List < String > input = new ArrayList < String > ();
    input.add ("2013-07-31,A,47");
    input.add ("2013-06-28,A,52");
    input.add ("2013-05-31,A,63");
    input.add ("2013-07-31,B,47");
    input.add ("2013-06-28,B,54");
    input.add ("2013-05-31,B,91");
    input.add ("2013-07-31,C,78");
    input.add ("2013-06-28,C,24");
    input.add ("2013-07-31,D,99");
    input.add ("2013-05-31,D,82");
    HashSet < Date > dates = new HashSet < Date > ();
    HashSet < String > products = new HashSet < String > ();
    SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-MM-dd");
    HashMap < String, Integer > counts = new HashMap < String, Integer > ();
    for (String s : input) {
        String [] str = s.split (",");
        dates.add (sdf.parse (str [0]));
        products.add (str [1]);
        counts.put (str [0] + "#" + str [1], Integer.parseInt (str [2]));
    }
    for (String p : products) {
        for (Date dt : dates) {
            Integer cnt = counts.get (sdf.format (dt) + "#" + p);
            if (cnt == null) {
                System.out.print ("00 ");
            } else {
                System.out.printf ("%2d ", cnt);
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > input = new ArrayList < String > ();
    input.add ("2013-07-31,A,47");
    input.add ("2013-06-28,A,52");
    input.add ("2013-05-31,A,63");
    input.add ("2013-07-31,B,47");
    input.add ("2013-06-28,B,54");
    input.add ("2013-05-31,B,91");
    input.add ("2013-07-31,C,78");
    input.add ("2013-06-28,C,24");
    input.add ("2013-07-31,D,99");
    input.add ("2013-05-31,D,82");
    Map < String, ArrayList < String > > map = new HashMap < String, ArrayList < String > > ();
    for (String s : input) {
        String [] tokens = s.split (",");
        if (! map.containsKey (tokens [1])) {
            ArrayList < String > list = new ArrayList < String > ();
            list.add (tokens [2]);
            map.put (tokens [1], list);
        } else {
            ArrayList < String > list = map.get (tokens [1]);
            list.add (tokens [2]);
            map.put (tokens [1], list);
        }
    }
    ArrayList < String > newList = new ArrayList < String > ();
    for (Map.Entry < String, ArrayList < String > > entry : map.entrySet ()) {
        StringBuilder sb = new StringBuilder ();
        sb.append (entry.getKey () + ",");
        for (String s : entry.getValue ()) {
            sb.append (s + ",");
        }
        newList.add (sb.toString ());
    }
    Collections.sort (newList);
    for (String s : newList) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20703544_20704938_21_31
20703544_20704938_5_15
Title: Bidirectional binding with ObjectBinding in JavaFX 
----------------------------------------

public void changed (ObservableValue < ? extends BigDecimal > observable, BigDecimal oldValue, BigDecimal newValue) {
    if (! changing) {
        try {
            changing = true;
            discountValue.set (newValue.multiply (getTotalValue ()).divide (new BigDecimal ("100"), RoundingMode.HALF_DOWN));
        } finally {
            changing = false;
        }
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends BigDecimal > observable, BigDecimal oldValue, BigDecimal newValue) {
    if (! changing) {
        try {
            changing = true;
            discountRate.set (newValue.multiply (new BigDecimal ("100")).divide (getTotalValue (), RoundingMode.HALF_DOWN));
        } finally {
            changing = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20726531_20726606_7_16
20726531_20726611_28_42
Title: Decimal Format Issue Java 
----------------------------------------

public static double var (double [] x) {
    if (x.length == 0) return Double.NaN;

    double avg = mean (x);
    double sum = 0.0;
    for (int i = 0;
    i < x.length; i ++) {
        sum += (x [i] - avg) * (x [i] - avg);
    }
    return sum / Math.sqrt (x.length - 1);
}
----------------------------------------

public static String var (double [] x) {
    if (x.length == 0) return null;

    double avg = mean (x, 10);
    double sum = 0.0;
    for (int i = 0;
    i < x.length; i ++) {
        sum += (x [i] - avg) * (x [i] - avg);
    }
    DecimalFormat myFormatter = new DecimalFormat ("#,##0.00");
    double result = sum / Math.sqrt (x.length - 1);
    return myFormatter.format (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20726531_20726611_28_42
20726531_20729850_26_34
Title: Decimal Format Issue Java 
----------------------------------------

public static String var (double [] x) {
    if (x.length == 0) return null;

    double avg = mean (x, 10);
    double sum = 0.0;
    for (int i = 0;
    i < x.length; i ++) {
        sum += (x [i] - avg) * (x [i] - avg);
    }
    DecimalFormat myFormatter = new DecimalFormat ("#,##0.00");
    double result = sum / Math.sqrt (x.length - 1);
    return myFormatter.format (result);
}
----------------------------------------

public static double var (double [] x) {
    if (x.length == 0) return Double.NaN;

    double avg = mean (x, 10);
    double sum = 0.0;
    for (int i = 0;
    i < x.length; i ++) {
        sum += (x [i] - avg) * (x [i] - avg);
    }
    return sum / Math.sqrt (x.length - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20726531_20726611_4_15
20726531_20729850_1_13
Title: Decimal Format Issue Java 
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    double [] x = new double [10];
    int i;
    for (i = 0; i < 10; i ++) {
        x [i] = s.nextDouble ();
    }
    double mean = mean (x, i);
    String deviation = var (x);
    System.out.println ("The mean is " + mean);
    System.out.println ("The standard deviation is " + deviation);
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    Scanner s = new Scanner (System.in);
    double [] x = new double [10];
    int i;
    for (i = 0; i < 2; i ++) {
        x [i] = s.nextDouble ();
    }
    double mean = mean (x, i);
    double deviation = var (x);
    DecimalFormat myFormatter = new DecimalFormat ("#,##0.00");
    System.out.println ("The mean is " + mean);
    System.out.println ("The standard deviation is " + myFormatter.format (deviation));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20733596_20733705_1_14
20733596_20733735_1_11
Title: Java - How to print chars inbewteen two seleted chars by the user? 
----------------------------------------

public static void printChars (char ch1, char ch2, int charsPerLine) {
    int difference = (int) (ch2 - ch1);
    for (int i = 0;
    i < difference; i ++) {
        if (ch1 == ch2) {
            break;
        }
        if ((i + 1) % charsPerLine == 0) {
            System.out.print (ch1 ++ + "\n");
        } else {
            System.out.print (ch1 ++ + " ");
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int charsPerLine) {
    int difference = (int) (ch2 - ch1);
    for (int i = 1;
    i < difference; i ++) {
        System.out.print (++ ch1 + " ");
        if (i % charsPerLine == 0) {
            System.out.print ("\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20747693_20747721_8_21
20747693_20748698_1_13
Title: Home Up Button in ActionBar doesn't work 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    super.onOptionsItemSelected (item);
    switch (item.getItemId ()) {
        case android.R.id.home :
            PreferenceActivity.this.onBackPressed ();
            break;
    }
    return true;
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    super.onOptionsItemSelected (item);
    switch (item.getItemId ()) {
        case android.R.id.home :
            break;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20753419_20758374_3_31
20753419_20758892_1_42
Title: How to extract data from a text file and write into CSV file in Java 
----------------------------------------

public static void main (String [] args) {
    String [] array = {"120030125  J Blog   23, SOME HOUSE, QUEENS       259.44  21-OCT-2013  17-NOV-2013", "120030318  R Mxx    37,WOODCLOSE,BIRMINGHAM,  121.96  16-OCT-2013  17-NOV-2013  Y 0", "120012174  JE xx    25, SOME HOUSE,QUEENS       259.44  21-OCT-2013  17-NOV-2013", "100154992  DL x     23, SOME HOUSE, QUEENS       259.44  21-OCT-2013  17-NOV-2013  Y"};
    String s1 = null;
    String s2 = null;
    String s3 = null;
    String s4 = null;
    String s5 = null;
    for (String s : array) {
        String [] split = s.split ("\\s+");
        s1 = split [0];
        s2 = split [1] + " " + split [2];
        for (String string : split) {
            if (string.matches ("\\d+\\.\\d{2}")) {
                s3 = string;
                break;
            }
        }
        String [] newArray = s.substring (s.indexOf (s3)).split ("\\s+");
        s4 = newArray [1];
        s5 = newArray [2];
        System.out.printf ("%s\t%s\t%s\t%s\t%s\n", s1, s2, s3, s4, s5);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new FileReader ("D:/input.txt"));
    String pattern = "\"\\d\\d\\d\\d";
    Pattern r = Pattern.compile (pattern);
    int i;
    ArrayList < String > list = new ArrayList < String > ();
    boolean a = true;
    PrintWriter out = new PrintWriter (new PrintWriter ("D:/Output.csv"), a);
    try {
        String line = br.readLine ();
        line = line.trim ();
        while (line != null) {
            Matcher m = r.matcher (line);
            if (m.find ()) {
                String temp;
                temp = line.substring (0, 19) + " " + line.substring (51, line.length () - 1);
                temp = temp.replaceAll ("[ ]+", " ").replace ("\"", "");
                String [] array = temp.split ("[ ]");
                temp = array [0] + "," + array [1] + " " + array [2] + "," + array [3] + "," + array [4] + "," + array [5];
                list.add (temp);
            } else {
            }
            line = br.readLine ();
        }
    } finally {
        br.close ();
    }
    for (i = 0; i < list.size (); i ++) {
        out.println (list.get (i));
    }
    out.flush ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20753600_20753627_10_37
20753600_44916377_5_36
Title: "Creating writing and editing same text file in java" 
----------------------------------------

public static void main (String [] args) {
    try {
        String verify, putData;
        File file = new File ("file.txt");
        file.createNewFile ();
        FileWriter fw = new FileWriter (file);
        BufferedWriter bw = new BufferedWriter (fw);
        bw.write ("Some text here for a reason");
        bw.flush ();
        bw.close ();
        FileReader fr = new FileReader (file);
        BufferedReader br = new BufferedReader (fr);
        while ((verify = br.readLine ()) != null) {
            if (verify != null) {
                putData = verify.replaceAll ("here", "there");
                bw.write (putData);
            }
        }
        br.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        String verify, putData;
        File file = new File ("G:\\Dairy.txt");
        file.createNewFile ();
        FileWriter fw = new FileWriter (file);
        BufferedWriter bw = new BufferedWriter (fw);
        bw.write ("I am Shah Khalid");
        bw.flush ();
        FileReader fr = new FileReader (file);
        BufferedReader br = new BufferedReader (fr);
        while ((verify = br.readLine ()) != null) {
            if (verify != null) {
                putData = verify.replaceAll ("here", "there");
            }
        }
        br.close ();
        bw.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println ("Shah");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20753600_26574809_5_33
20753600_44916377_5_36
Title: "Creating writing and editing same text file in java" 
----------------------------------------

public static void main (String [] args) {
    try {
        String verify, putData;
        File file = new File ("file.txt");
        file.createNewFile ();
        FileWriter fw = new FileWriter (file);
        BufferedWriter bw = new BufferedWriter (fw);
        bw.write ("Some text here for a reason");
        bw.flush ();
        FileReader fr = new FileReader (file);
        BufferedReader br = new BufferedReader (fr);
        while ((verify = br.readLine ()) != null) {
            if (verify != null) {
                putData = verify.replaceAll ("here", "there");
                bw.write (putData);
            }
        }
        br.close ();
        bw.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        String verify, putData;
        File file = new File ("G:\\Dairy.txt");
        file.createNewFile ();
        FileWriter fw = new FileWriter (file);
        BufferedWriter bw = new BufferedWriter (fw);
        bw.write ("I am Shah Khalid");
        bw.flush ();
        FileReader fr = new FileReader (file);
        BufferedReader br = new BufferedReader (fr);
        while ((verify = br.readLine ()) != null) {
            if (verify != null) {
                putData = verify.replaceAll ("here", "there");
            }
        }
        br.close ();
        bw.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println ("Shah");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20757432_20758046_1_41
20757432_20758384_5_31
Title: find the value of variable given in a string 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] nums = new int [3];
    boolean [] isNum = new boolean [3];
    String str = reader.nextLine ();
    String [] split = str.split ("[+=]");
    int i = 0;
    for (int k = 0;
    k < split.length; k ++) {
        try {
            String s = split [k];
            isNum [k] = true;
            nums [i] = Integer.parseInt (s);
            i ++;
        } catch (NumberFormatException e) {
            isNum [k] = false;
        }
    }
    int tot;
    if (str.indexOf ("H") > str.indexOf ("=")) {
        tot = nums [1] + nums [0];
    } else {
        tot = nums [1] - nums [0];
    }
    for (int k = 0;
    k < split.length; k ++) {
        if (! isNum [k]) {
            int indx = split [k].indexOf ("H");
            String h = Integer.toString (tot).charAt (indx) + "";
            h = str.replace ("H", h);
            System.out.println ("New expression :" + h);
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int hLocation = 0;
    int result;
    char hValue;
    Scanner in = new Scanner (System.in);
    String str = in.nextLine ().replaceAll (" ", "");
    String [] split = str.split ("[+=]");
    for (int i = 0;
    i < split.length; i ++) {
        if (split [i].contains ("H")) {
            hLocation = i;
        }
    }
    if (hLocation == 0) {
        result = Integer.parseInt (split [2]) - Integer.parseInt (split [1]);
    } else if (hLocation == 1) {
        result = Integer.parseInt (split [2]) - Integer.parseInt (split [0]);
    } else {
        result = Integer.parseInt (split [0]) + Integer.parseInt (split [1]);
    }

    hValue = String.valueOf (result).charAt (1);
    str = str.replace ('H', hValue);
    System.out.println (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20757432_20758046_1_41
20757432_20758544_1_33
Title: find the value of variable given in a string 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] nums = new int [3];
    boolean [] isNum = new boolean [3];
    String str = reader.nextLine ();
    String [] split = str.split ("[+=]");
    int i = 0;
    for (int k = 0;
    k < split.length; k ++) {
        try {
            String s = split [k];
            isNum [k] = true;
            nums [i] = Integer.parseInt (s);
            i ++;
        } catch (NumberFormatException e) {
            isNum [k] = false;
        }
    }
    int tot;
    if (str.indexOf ("H") > str.indexOf ("=")) {
        tot = nums [1] + nums [0];
    } else {
        tot = nums [1] - nums [0];
    }
    for (int k = 0;
    k < split.length; k ++) {
        if (! isNum [k]) {
            int indx = split [k].indexOf ("H");
            String h = Integer.toString (tot).charAt (indx) + "";
            h = str.replace ("H", h);
            System.out.println ("New expression :" + h);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] nums = new int [3];
    int varIndex = 0;
    int result = 0;
    String str = reader.nextLine ();
    String [] components = str.replaceAll (" ", "").split ("\\+|=");
    for (int i = 0;
    i < components.length; i ++) {
        try {
            nums [i] = Integer.parseInt (components [i]);
        } catch (Exception e) {
            varIndex = i;
        }
    }
    switch (varIndex) {
        case 0 :
            result = nums [2] - nums [1];
            break;
        case 1 :
            result = nums [2] - nums [0];
            break;
        case 2 :
            result = nums [0] + nums [1];
            break;
    }
    nums [varIndex] = result;
    System.out.println (nums [0] + " + " + nums [1] + " = " + nums [2]);
    System.out.println ("H = " + (String.valueOf (result)).charAt (components [varIndex].indexOf ('H')));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20757432_20758384_5_31
20757432_20758544_1_33
Title: find the value of variable given in a string 
----------------------------------------

public static void main (String args []) {
    int hLocation = 0;
    int result;
    char hValue;
    Scanner in = new Scanner (System.in);
    String str = in.nextLine ().replaceAll (" ", "");
    String [] split = str.split ("[+=]");
    for (int i = 0;
    i < split.length; i ++) {
        if (split [i].contains ("H")) {
            hLocation = i;
        }
    }
    if (hLocation == 0) {
        result = Integer.parseInt (split [2]) - Integer.parseInt (split [1]);
    } else if (hLocation == 1) {
        result = Integer.parseInt (split [2]) - Integer.parseInt (split [0]);
    } else {
        result = Integer.parseInt (split [0]) + Integer.parseInt (split [1]);
    }

    hValue = String.valueOf (result).charAt (1);
    str = str.replace ('H', hValue);
    System.out.println (str);
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] nums = new int [3];
    int varIndex = 0;
    int result = 0;
    String str = reader.nextLine ();
    String [] components = str.replaceAll (" ", "").split ("\\+|=");
    for (int i = 0;
    i < components.length; i ++) {
        try {
            nums [i] = Integer.parseInt (components [i]);
        } catch (Exception e) {
            varIndex = i;
        }
    }
    switch (varIndex) {
        case 0 :
            result = nums [2] - nums [1];
            break;
        case 1 :
            result = nums [2] - nums [0];
            break;
        case 2 :
            result = nums [0] + nums [1];
            break;
    }
    nums [varIndex] = result;
    System.out.println (nums [0] + " + " + nums [1] + " = " + nums [2]);
    System.out.println ("H = " + (String.valueOf (result)).charAt (components [varIndex].indexOf ('H')));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2075912_2075956_12_20
2075912_2083078_35_49
Title: Generate a random binary number with a variable proportion of '1' bits 
----------------------------------------

public long nextLong (double p) {
    long nxt = 0;
    for (int i = 0;
    i < 64; i ++) {
        if (nextBitIsOne (p)) {
            nxt += 1 << i;
        }
    }
    return nxt;
}
----------------------------------------

public long nextLong () {
    if (zero) return 0L;

    long acc = - 1L;
    int shiftReg = mantissa - 1;
    for (int bit = exponent;
    bit < 0; ++ bit) {
        if ((shiftReg & 1) == 0) {
            acc &= rnd.nextLong ();
        } else {
            acc |= rnd.nextLong ();
        }
        shiftReg>>= 1;
    }
    return acc;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2077457_15372652_1_16
2077457_19105820_1_29
Title: How can I make a simple vowel counter method in Java? 
----------------------------------------

public static void main (String [] args) {
    String s;
    Scanner in = new Scanner (System.in);
    s = in.nextLine ();
    for (int i = 0;
    i < s.length (); i ++) {
        char v = s.charAt (i);
        if (v == 'a' || v == 'e' || v == 'i' || v == 'o' || v == 'u' || v == 'A' || v == 'E' || v == 'I' || v == 'O' || v == 'U') {
            System.out.print (v);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String userInput;
    int vowelA = 0, vowelE = 0, vowelI = 0, vowelO = 0, vowelU = 0;
    System.out.println (welcomeMessage);
    userInput = scan.nextLine ();
    userInput = userInput.toLowerCase ();
    for (int x = 0;
    x <= userInput.length () - 1; x ++) {
        if (userInput.charAt (x) == 97) vowelA ++;
        else if (userInput.charAt (x) == 101) vowelE ++;
        else if (userInput.charAt (x) == 105) vowelI ++;
        else if (userInput.charAt (x) == 111) vowelO ++;
        else if (userInput.charAt (x) == 117) vowelU ++;

    }
    System.out.println ("There were " + vowelA + " A's in your sentence.");
    System.out.println ("There were " + vowelE + " E's in your sentence.");
    System.out.println ("There were " + vowelI + " I's in your sentence.");
    System.out.println ("There were " + vowelO + " O's in your sentence.");
    System.out.println ("There were " + vowelU + " U's in your sentence.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20779328_20779339_1_13
20779328_20779369_1_12
Title: "Why does java think this method is being declared not called?" 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    calculate = (Button) findViewById (R.id.button1);
    grade = (EditText) findViewById (R.id.editText1);
    wantedGrade = (EditText) findViewById (R.id.editText2);
    finalValue = (EditText) findViewById (R.id.editText3);
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    calculate = (Button) findViewById (R.id.button1);
    grade = (EditText) findViewById (R.id.editText1);
    wantedGrade = (EditText) findViewById (R.id.editText2);
    finalValue = (EditText) findViewById (R.id.editText3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20783506_20783639_13_81
20783506_20783787_1_31
Title: Get leaf nodes - XML parsing in Java 
----------------------------------------

public static void main (String argv []) {
    try {
        DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder ();
        Document doc = docBuilder.parse (new File ("book.xml"));
        doc.getDocumentElement ().normalize ();
        System.out.println ("Root element of the doc is " + doc.getDocumentElement ().getNodeName ());
        NodeList listOfPersons = doc.getElementsByTagName ("person");
        int totalPersons = listOfPersons.getLength ();
        System.out.println ("Total no of people : " + totalPersons);
        for (int s = 0;
        s < listOfPersons.getLength (); s ++) {
            Node firstPersonNode = listOfPersons.item (s);
            if (firstPersonNode.getNodeType () == Node.ELEMENT_NODE) {
                Element firstPersonElement = (Element) firstPersonNode;
                NodeList firstNameList = firstPersonElement.getElementsByTagName ("first");
                Element firstNameElement = (Element) firstNameList.item (0);
                NodeList textFNList = firstNameElement.getChildNodes ();
                System.out.println ("First Name : " + ((Node) textFNList.item (0)).getNodeValue ().trim ());
                NodeList lastNameList = firstPersonElement.getElementsByTagName ("last");
                Element lastNameElement = (Element) lastNameList.item (0);
                NodeList textLNList = lastNameElement.getChildNodes ();
                System.out.println ("Last Name : " + ((Node) textLNList.item (0)).getNodeValue ().trim ());
                NodeList ageList = firstPersonElement.getElementsByTagName ("age");
                Element ageElement = (Element) ageList.item (0);
                NodeList textAgeList = ageElement.getChildNodes ();
                System.out.println ("Age : " + ((Node) textAgeList.item (0)).getNodeValue ().trim ());
            }
        }
    } catch (SAXParseException err) {
        System.out.println ("** Parsing error" + ", line " + err.getLineNumber () + ", uri " + err.getSystemId ());
        System.out.println (" " + err.getMessage ());
    } catch (SAXException e) {
        Exception x = e.getException ();
        ((x == null) ? e : x).printStackTrace ();
    } catch (Throwable t) {
        t.printStackTrace ();
    }
}
----------------------------------------

public static void main (String argv []) {
    try {
        FileInputStream file = new FileInputStream (new File ("C:/Users/devteam/Desktop/e.xml"));
        DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder builder = builderFactory.newDocumentBuilder ();
        Document xmlDocument = builder.parse (file);
        XPath xPath = XPathFactory.newInstance ().newXPath ();
        System.out.println ("*************************");
        String expression = "/root/emp/name";
        String exp1 = "/root/emp/age";
        String exp2 = "/root/dept/branch";
        System.out.println (expression);
        String name = xPath.compile (expression).evaluate (xmlDocument);
        System.out.println (exp1);
        System.out.println (name);
        System.out.println (exp1);
        String age = xPath.compile (exp1).evaluate (xmlDocument);
        System.out.println (age);
        String branch = xPath.compile (exp2).evaluate (xmlDocument);
        System.out.println (branch);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
207889_207912_1_14
207889_208082_18_25
Title: recursion instead of multi-loops 
----------------------------------------

public static void allCombinations (List < String >...lists) {
    int [] indexes = new int [lists.length];
    while (incrementIndexes (lists, indexes)) {
        StringBuilder builder = new StringBuilder ();
        for (int i = 0;
        i < indexes.length; i ++) {
            if (i != 0) {
                builder.append ("-");
            }
            builder.append (lists [i].get (indexes [i]));
        }
        System.out.println (builder);
    }
}
----------------------------------------

private static void allCombinations (List < String > [] lists, int index, String pre) {
    int nextHop = hop (index, lists.length - 1);
    for (String s : lists [index]) {
        if (index != 0) {
            allCombinations (lists, nextHop, pre + s + "-");
        } else System.out.println (pre + s);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20798391_20798440_1_11
20798391_51195352_1_14
Title: What is wrong with my isPrime method? 
----------------------------------------

private static boolean isPrime (int num) {
    if (num == 2) return true;

    if (num < 2 || num % 2 == 0) return false;

    for (int i = 3;
    i * i <= num; i += 2) if (num % i == 0) return false;

    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number < 2) {
        return false;
    }
    int check = (int) Math.sqrt (number);
    for (int i = 2;
    i <= check; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20800224_20800258_1_14
20800224_20800264_1_17
Title: Convert any number to one digit number 
----------------------------------------

void product (int m) {
    int prod;
    do {
        prod = 1;
        while (m != 0) {
            int a = m % 10;
            m = m / 10;
            prod *= a;
        }
        System.out.println (prod);
    } while (prod >= 10);
}
----------------------------------------

void product (int m) {
    if (m % 10 == 0) {
        return;
    }
    while (m != 0) {
        int a = m % 10;
        m = m / 10;
        prod = prod * a;
    }
    System.out.println (prod);
    product (prod);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20800224_20800258_1_14
20800224_20800308_4_17
Title: Convert any number to one digit number 
----------------------------------------

void product (int m) {
    int prod;
    do {
        prod = 1;
        while (m != 0) {
            int a = m % 10;
            m = m / 10;
            prod *= a;
        }
        System.out.println (prod);
    } while (prod >= 10);
}
----------------------------------------

void product (int m) {
    while (m != 0) {
        int a = m % 10;
        m = m / 10;
        prod = prod * a;
    }
    if (String.valueOf (prod).length () > 1) {
        product (prod)
    }
    System.out.println (prod);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20800224_20800264_1_17
20800224_20800308_4_17
Title: Convert any number to one digit number 
----------------------------------------

void product (int m) {
    if (m % 10 == 0) {
        return;
    }
    while (m != 0) {
        int a = m % 10;
        m = m / 10;
        prod = prod * a;
    }
    System.out.println (prod);
    product (prod);
}
----------------------------------------

void product (int m) {
    while (m != 0) {
        int a = m % 10;
        m = m / 10;
        prod = prod * a;
    }
    if (String.valueOf (prod).length () > 1) {
        product (prod)
    }
    System.out.println (prod);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20815571_20815732_1_18
20815571_20816281_1_14
Title: Remove row from multidimensional array 
----------------------------------------

public static void main (String [] args) {
    String [] [] qArray = new String [] [] {{"question", "answerOption1", "answerOption2", "answerOption3", "answerOption4"}, {"question5", "answerOption6", "answerOption7", "answerOption8", "answerOption9"}};
    Queue < String [] > list = new LinkedList < String [] > (Arrays.asList (qArray));
    for (String [] theArr = list.poll ();
    theArr != null; theArr = list.poll ()) {
        for (String theStr : theArr) {
            System.out.print (theStr + " ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] [] qArray = new String [] [] {{"question", "answerOption1", "answerOption2", "answerOption3", "answerOption4"}, {"question5", "answerOption6", "answerOption7", "answerOption8", "answerOption9"}};
    List < String [] > list = new ArrayList < String [] > (Arrays.asList (qArray));
    list.remove (1);
    String [] [] qArray1 = list.toArray (new String [] [] {});
    for (String [] arr : qArray1) {
        System.out.println (Arrays.toString (arr));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20820883_20820910_1_10
20820883_20820926_1_18
Title: Removing Null elements in an array 
----------------------------------------

InputClass [] removeNulls (InputClass [] original) {
    List < InputClass > nonNulls = new ArrayList < InputClass > ();
    for (InputClass i : original) {
        if (i != null) {
            nonNulls.add (i);
        }
    }
    return nonNulls.toArray (new InputClass [0]);
}
----------------------------------------

public static < T > T [] removeNulls (T [] in) {
    if (in == null) {
        return in;
    }
    Class < ? > cls = null;
    List < T > al = new ArrayList < T > ();
    for (T t : in) {
        if (t != null) {
            if (cls == null) {
                cls = t.getClass ();
            }
            al.add (t);
        }
    }
    @SuppressWarnings ("unchecked")
    T [] out = (T []) Array.newInstance (cls, al.size ());
    return al.toArray (out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20821057_20821206_1_21
20821057_20821354_1_18
Title: How to sort an Array List made of String arrays? 
----------------------------------------

public static void main (String args []) {
    ArrayList < String [] > teamsToOrder = new ArrayList < String [] > ();
    String [] array1 = {"340", "100"};
    String [] array2 = {"7680", "70"};
    String [] array3 = {"770", "110"};
    teamsToOrder.add (array1);
    teamsToOrder.add (array2);
    teamsToOrder.add (array3);
    Collections.sort (teamsToOrder, new Comparator < String [] > () {
        public int compare (String [] s1, String [] s2) {
            return Integer.parseInt (s2 [1]) - Integer.parseInt (s1 [1]);
        }}

    );
    for (String [] s : teamsToOrder) {
        System.out.println (Arrays.toString (s));
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > entries = new ArrayList < String > ();
    entries.add ("0 - name1");
    entries.add ("1000 - name2");
    entries.add ("1004 - name4");
    entries.add ("1002 - name3");
    entries.add ("10000 - name5");
    entries.add ("2000 - name5");
    Comparator < String > comparator = new MyComparator ();
    Collections.sort (entries, comparator);
    for (String e : entries) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20831324_20831401_4_19
20831324_20831512_1_11
Title: Jumping to lines in Java 
----------------------------------------

public static void main (String [] args) {
    boolean right = true;
    do {
        if (right) System.out.print ("What do you want to calculate? ");
        else System.out.print ("Please input a valid method. \n\n");

        String method = sc.nextLine ();
        boolean right = false;
    } while (! method.equals ("tax"));
    tax ();
}
----------------------------------------

public static void main (String [] args) {
    String method = "";
    while (! method.equals ("tax")) {
        System.out.print ("What do you want to calculate? ");
        method = sc.nextLine ();
        if (method.equals ("tax")) break;

        System.out.print ("Please input a valid method. \n\n");
    }
    tax ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20834913_20835036_1_16
20834913_20835078_3_16
Title: Filtering java.util.Scanner input? 
----------------------------------------

public static void main (String [] args) throws AWTException, Exception {
    Scanner sc = new Scanner (System.in);
    while (sc.hasNextInt ()) {
        int val = sc.nextInt ();
        if (val == 0 || val == 1 || val == 2 || val == 3) {
        } else {
            System.out.println ("wrong number, enter again");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > lst = new ArrayList < Integer > ();
    System.out.println ("Please enter a number :");
    Scanner sc = new Scanner (System.in);
    int i = sc.nextInt ();
    if (i == 0 || i == 1 || i == 2 || i == 3) {
        lst.add (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20848187_20848515_109_128
20848187_20848515_89_102
Title: Monitor and update number of active processes 
----------------------------------------

public void run () {
    ProcessBuilder pb = new ProcessBuilder ("notepad");
    try {
        Process p = pb.start ();
        SharedResource.count ++;
        p.waitFor ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } finally {
        SharedResource.count --;
    }
}
----------------------------------------

public void run () {
    while (true) {
        countLabel.setText (String.valueOf (SharedResource.count));
        countLabel.getParent ().repaint ();
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20857755_20857876_9_24
20857755_20857878_5_15
Title: Reflection set field value in constructor 
----------------------------------------

public SerializedConig (String value) {
    Field field;
    try {
        field = this.getClass ().getDeclaredField ("field");
        field.setAccessible (true);
        field.set (this, value);
    } catch (NoSuchFieldException ex) {
        Logger.getLogger (Configuration.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (SecurityException ex) {
        Logger.getLogger (Configuration.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (IllegalArgumentException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public SerializedConig (String value) {
    try {
        field = this.getClass ().getDeclaredField ("field");
        field.setAccessible (true);
        field.set (this, value);
    } catch (NoSuchFieldException ex) {
        Logger.getLogger (Configuration.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (SecurityException ex) {
        Logger.getLogger (Configuration.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20859278_20859678_8_26
20859278_20862313_1_17
Title: Regex split up parentheses group 
----------------------------------------

public static final void main (String [] igno_red) {
    String sToSearch = "(1,2),(3,4),(5,6)";
    System.out.println ("Capture numbers:");
    String sFindNumCommaNum = "(\\b\\d+,\\d+\\b)";
    Matcher m = Pattern.compile (sFindNumCommaNum).matcher (sToSearch);
    while (m.find ()) {
        System.out.println (m.group ());
    }
    System.out.println ("Capture betweens:");
    String sFindBetweens = "((?:\\),\\()|(?:(?<!,)\\()|(?:\\)(?!,)))";
    m = Pattern.compile (sFindBetweens).matcher (sToSearch);
    while (m.find ()) {
        System.out.println (m.group ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String msg = "(1,2),(3,4),(5,6)";
    String fmt = "(\\(|\\)\\,\\()|(\\(|\\))";
    String tokens [] = msg.split (fmt);
    for (String token : tokens) {
        System.out.println (token);
    }
    Pattern p = Pattern.compile ("[0-9]+,[0-9]+");
    Matcher m = p.matcher ("(1,2),(3,4),(5,6)");
    while (m.find ()) {
        java.lang.System.out.println (m.group ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20863026_20863081_1_15
20863026_20863088_1_19
Title: What's with this output from a double? 
----------------------------------------

public static void main (String [] args) {
    int days = 100;
    java.math.BigDecimal init = java.math.BigDecimal.ONE;
    java.math.BigDecimal total = java.math.BigDecimal.ZERO;
    java.math.BigDecimal oneTenth = new java.math.BigDecimal ("0.1");
    for (int i = 1;
    i <= days; i ++) {
        if (i != 1) {
            init = init.add (oneTenth);
        }
        total = total.add (init);
    }
    System.out.println ("Total: " + total);
    System.out.println ("Daily: " + init);
}
----------------------------------------

public static void main (String...ignored) {
    int days = 100;
    double inc = 1;
    double init = 10;
    double total = 0;
    for (int i = 1;
    i <= days; i ++) {
        if (i == 1) {
            total = total + init;
        } else {
            init = init + inc;
            total = total + init;
        }
    }
    total /= 10;
    init /= 10;
    System.out.println ("Total: " + total);
    System.out.println ("Daily: " + init);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20875383_20875441_10_52
20875383_20875441_1_9
Title: Sudoku backtracking algorithm (Java) 
----------------------------------------

private boolean generateRandomCompleteSudoku (int [] [] sudoku, int x, int y) {
    if (x > 9) {
        x = 1;
        y ++;
    }
    if (y > 9) {
        return true;
    }
    List < Integer > possibleNumbers = new ArrayList < Integer > ();
    for (int i = 1;
    i <= 9; i ++) {
        boolean possible = true;
        for (int j = 1;
        j <= x - 1; j ++) {
            if (sudoku [j] [y] == i) {
                possible = false;
                break;
            }
        }
        if (possible) {
            possibleNumbers.add (i);
        }
    }
    if (possibleNumbers.size () <= 0) {
        return false;
    }
    Collections.shuffle (possibleNumbers);
    for (Integer possibleNumber : possibleNumbers) {
        sudoku [x] [y] = possibleNumber;
        if (generateRandomCompleteSudoku (sudoku, x + 1, y)) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public int [] [] generateRandomCompleteSudoku () {
    int [] [] sudoku = new int [10];
    for (int i = 1;
    i <= 9; i ++) {
        sudoku [i] = new int [10];
        Arrays.fill (sudoku [i], 0);
    }
    generateRandomCompleteSudoku (sudoku, 1, 1);
    return sudoku;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2088037_2088099_1_16
2088037_2097171_7_34
Title: Trim characters in Java 
----------------------------------------

public String trim (String stringToTrim, String stringToRemove) {
    String answer = stringToTrim;
    while (answer.startsWith (stringToRemove)) {
        answer = answer.substring (stringToRemove.length ());
    }
    while (answer.endsWith (stringToRemove)) {
        answer = answer.substring (0, answer.length () - stringToRemove.length ());
    }
    return answer;
}
----------------------------------------

static public String trim (String src, String lftval, String rgtval, boolean igncas) {
    int str = 0, end = src.length ();
    if (lftval.length () == 1) {
        char chr = lftval.charAt (0);
        while (str < end && src.charAt (str) == chr) {
            str ++;
        }
    } else if (lftval.length () > 1) {
        int vallen = lftval.length (), newstr;
        while ((newstr = (str + vallen)) <= end && src.regionMatches (igncas, str, lftval, 0, vallen)) {
            str = newstr;
        }
    }

    if (rgtval.length () == 1) {
        char chr = rgtval.charAt (0);
        while (str < end && src.charAt (end - 1) == chr) {
            end --;
        }
    } else if (rgtval.length () > 1) {
        int vallen = rgtval.length (), newend;
        while (str <= (newend = (end - vallen)) && src.regionMatches (igncas, newend, rgtval, 0, vallen)) {
            end = newend;
        }
    }

    if (str != 0 || end != src.length ()) {
        if (str < end) {
            src = src.substring (str, end);
        } else {
            src = "";
        }
    }
    return src;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2088037_2088099_1_16
2088037_41773873_1_16
Title: Trim characters in Java 
----------------------------------------

public String trim (String stringToTrim, String stringToRemove) {
    String answer = stringToTrim;
    while (answer.startsWith (stringToRemove)) {
        answer = answer.substring (stringToRemove.length ());
    }
    while (answer.endsWith (stringToRemove)) {
        answer = answer.substring (0, answer.length () - stringToRemove.length ());
    }
    return answer;
}
----------------------------------------

public static String trim (String value, char c) {
    if (c <= 32) return value.trim ();

    int len = value.length ();
    int st = 0;
    char [] val = value.toCharArray ();
    while ((st < len) && (val [st] == c)) {
        st ++;
    }
    while ((st < len) && (val [len - 1] == c)) {
        len --;
    }
    return ((st > 0) || (len < value.length ())) ? value.substring (st, len) : value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2088037_2097171_7_34
2088037_41773873_1_16
Title: Trim characters in Java 
----------------------------------------

static public String trim (String src, String lftval, String rgtval, boolean igncas) {
    int str = 0, end = src.length ();
    if (lftval.length () == 1) {
        char chr = lftval.charAt (0);
        while (str < end && src.charAt (str) == chr) {
            str ++;
        }
    } else if (lftval.length () > 1) {
        int vallen = lftval.length (), newstr;
        while ((newstr = (str + vallen)) <= end && src.regionMatches (igncas, str, lftval, 0, vallen)) {
            str = newstr;
        }
    }

    if (rgtval.length () == 1) {
        char chr = rgtval.charAt (0);
        while (str < end && src.charAt (end - 1) == chr) {
            end --;
        }
    } else if (rgtval.length () > 1) {
        int vallen = rgtval.length (), newend;
        while (str <= (newend = (end - vallen)) && src.regionMatches (igncas, newend, rgtval, 0, vallen)) {
            end = newend;
        }
    }

    if (str != 0 || end != src.length ()) {
        if (str < end) {
            src = src.substring (str, end);
        } else {
            src = "";
        }
    }
    return src;
}
----------------------------------------

public static String trim (String value, char c) {
    if (c <= 32) return value.trim ();

    int len = value.length ();
    int st = 0;
    char [] val = value.toCharArray ();
    while ((st < len) && (val [st] == c)) {
        st ++;
    }
    while ((st < len) && (val [len - 1] == c)) {
        len --;
    }
    return ((st > 0) || (len < value.length ())) ? value.substring (st, len) : value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20880793_20881092_6_17
20880793_20881189_40_52
Title: Draw grid issue 
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            JOptionPane.showMessageDialog (null, new GridCellPanel ());
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ();
            frame.add (new Grid ());
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20889571_20889973_12_47
20889571_20890438_36_58
Title: Java - list of subdirectories and files within a path + size? 
----------------------------------------

public static final void main (String [] igno_red) {
    File fDir = (new File ("R:\\code\\xbn\\"));
    Collection < File > cllf = FileUtils.listFiles (fDir, (new String [] {"java"}), true);
    TreeMap < Long, List < File > > tmFilesBySize = new TreeMap < Long, List < File > > ();
    Iterator < File > itrf = cllf.iterator ();
    while (itrf.hasNext ()) {
        File f = itrf.next ();
        Long LLen = f.length ();
        if (! tmFilesBySize.containsKey (LLen)) {
            ArrayList < File > alf = new ArrayList < File > ();
            alf.add (f);
            tmFilesBySize.put (LLen, alf);
        } else {
            tmFilesBySize.get (LLen).add (f);
        }
    }
    ArrayList < Long > alSize = new ArrayList < Long > (tmFilesBySize.keySet ());
    for (int i = alSize.size () - 1;
    i >= 0; i --) {
        itrf = tmFilesBySize.get (alSize.get (i)).iterator ();
        while (itrf.hasNext ()) {
            File f = itrf.next ();
            System.out.println (f.length () + ": " + f.getPath ());
        }
    }
}
----------------------------------------

public static void main (String...args) throws IOException {
    if (args.length != 1) {
        throw new IllegalArgumentException ("Usage: du <folder-path>");
    }
    File folder = new File (args [0]);
    if (folder.isDirectory ()) {
        List < Pair > results = new ArrayList < du.Pair > ();
        diskUsage (folder, results);
        Collections.sort (results, new Comparator < Pair > () {
            @Override
            public int compare (Pair o1, Pair o2) {
                return Long.compare (o2.getSize (), o1.getSize ());
            }}

        );
        for (Pair p : results) {
            System.out.printf ("%s (%dkb)\n", p.getPath (), p.getSize () / 1024);
        }
    } else {
        System.out.printf ("%s (%dkb)\n", folder.getAbsolutePath (), folder.length () / 1024);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20891176_20891548_1_26
20891176_20891807_1_40
Title: Does AtomicInteger really produce atomic integer? 
----------------------------------------

public static void main (String [] args) throws Exception {
    final AtomicInteger sequencer = new AtomicInteger (1);
    final int [] integers = new int [1000];
    final Runnable task = new Runnable () {
        @Override
        public void run () {
            int next = sequencer.getAndIncrement ();
            integers [next - 1] ++;
        }}

    ;
    List < Thread > threads = new ArrayList < > ();
    for (int i = 0;
    i < 1000; i ++) {
        Thread t = new Thread (task);
        t.start ();
        threads.add (t);
    }
    for (Thread t : threads) {
        t.join ();
    }
    for (int i = 0;
    i < 1000; i ++) {
        if (integers [i] != 1) System.out.println (i + " -> " + integers [i]);

    }
}
----------------------------------------

public static void main (String [] args) {
    final AtomicInteger sequencer = new AtomicInteger (1);
    final Set < Integer > integers = new HashSet < Integer > ();
    final Runnable task = new Runnable () {
        @Override
        public void run () {
            int next = sequencer.getAndIncrement ();
            synchronized (integers) {
                if (integers.contains (next)) {
                    System.out.println ("duplicate detected " + next);
                }
                integers.add (next);
            }
        }}

    ;
    for (int j = 0;
    j < 1000; j ++) {
        System.out.print ("testing " + j + " ");
        sequencer.set (0);
        integers.clear ();
        List < Thread > threads = new ArrayList < Thread > (10000);
        for (int i = 0;
        i < 1000; i ++) {
            Thread t = new Thread (task);
            threads.add (t);
            t.start ();
        }
        for (Thread t : threads) {
            try {
                t.join ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        System.out.println ("integers size " + integers.size ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20891176_20891807_1_40
20891176_20891836_1_26
Title: Does AtomicInteger really produce atomic integer? 
----------------------------------------

public static void main (String [] args) {
    final AtomicInteger sequencer = new AtomicInteger (1);
    final Set < Integer > integers = new HashSet < Integer > ();
    final Runnable task = new Runnable () {
        @Override
        public void run () {
            int next = sequencer.getAndIncrement ();
            synchronized (integers) {
                if (integers.contains (next)) {
                    System.out.println ("duplicate detected " + next);
                }
                integers.add (next);
            }
        }}

    ;
    for (int j = 0;
    j < 1000; j ++) {
        System.out.print ("testing " + j + " ");
        sequencer.set (0);
        integers.clear ();
        List < Thread > threads = new ArrayList < Thread > (10000);
        for (int i = 0;
        i < 1000; i ++) {
            Thread t = new Thread (task);
            threads.add (t);
            t.start ();
        }
        for (Thread t : threads) {
            try {
                t.join ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        System.out.println ("integers size " + integers.size ());
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    final AtomicInteger sequencer = new AtomicInteger (1);
    final Set < Integer > integers = new ConcurrentSkipListSet < Integer > ();
    final Runnable task = new Runnable () {
        @Override
        public void run () {
            int next = sequencer.getAndIncrement ();
            integers.add (next);
            System.out.println (next);
        }}

    ;
    List < Thread > threads = new ArrayList < Thread > (1000);
    for (int i = 0;
    i < 1000; i ++) {
        Thread t = new Thread (task);
        t.start ();
        threads.add (t);
    }
    for (Thread t : threads) {
        t.join ();
    }
    System.out.println (integers.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20897208_20897781_18_31
20897208_20897947_63_72
Title: java get font style jtextpane 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new TextStyleTestFrame ();
            frame.setSize (300, 300);
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Main ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20898347_20898468_1_16
20898347_20899840_1_19
Title: how to display entered students info completely at last in given java program 
----------------------------------------

public static void main (String [] args) {
    int maxs, nos;
    Scanner ip1 = new Scanner (System.in);
    System.out.print ("\nEnter No. of Students : ");
    nos = ip1.nextInt ();
    StudInfo [] studInfos = new StudInfo [nos];
    for (maxs = 0; maxs < nos; maxs ++) {
        System.out.println ("\nWelcome to Student database");
        System.out.print ("\n Enter Student [ " + (maxs + 1) + " ] details");
        studInfos [maxs] = new StudInfo ();
        studInfos [maxs].getdata ();
    }
    for (StudInfo s : studInfos) {
        s.display ();
    }
}
----------------------------------------

public static void main (String arg []) {
    List < StudInfo > students = new ArrayList < StudInfo > ();
    int maxs, nos;
    Scanner ip1 = new Scanner (System.in);
    System.out.print ("\nEnter No. of Students : ");
    nos = ip1.nextInt ();
    for (maxs = 1; maxs <= nos; maxs ++) {
        System.out.println ("\nWelcome to Student database");
        System.out.print ("\n Enter Student [ " + maxs + " ] details");
        StudInfo s = new StudInfo ();
        s.getdata ();
        students.add (s);
    }
    for (StudInfo s : students) {
        s.display ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20900340_20900906_221_235
20900340_20900906_275_307
Title: Linkedin Integration Android 
----------------------------------------

protected Person doInBackground (LinkedInAccessToken...arg0) {
    try {
        accessToken = arg0 [0];
        linkedinClient = factory.createLinkedInApiClient (accessToken);
        linkedinClient.setAccessToken (accessToken);
        return linkedinClient.getProfileForCurrentUser (ProfileParameters);
    } catch (LinkedInApiClientException ex) {
        Log.e (TAG, "LinkedInApiClientException: ", ex);
        return null;
    }
}
----------------------------------------

protected String doInBackground (String...params) {
    try {
        Person person = linkedinClient.getProfileForCurrentUser (EnumSet.of (ProfileField.FIRST_NAME, ProfileField.LAST_NAME, ProfileField.PICTURE_URL));
        String urlMyappsco = "www.myappsco.com";
        AccountManagerClass accountManagerClass = new AccountManagerClass ();
        Account account = accountManagerClass.getAccountInfo (mContext);
        linkedinClient.updateCurrentStatus (urlMyappsco + " " + account.rank + "(Id #" + accountManagerClass.getAboId (mContext) + ")" + " " + mContext.getResources ().getString (R.string.abo_url) + account.userName);
    } catch (Exception e) {
        e.printStackTrace ();
        System.out.println ("throttle::" + e.getMessage ());
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20900340_20900906_352_370
20900340_20900906_375_426
Title: Linkedin Integration Android 
----------------------------------------

public void onVerify (String verifier) {
    try {
        Log.i ("LinkedinSample", "verifier: " + verifier);
        LinkedInAccessToken accessToken = oAuthService.getOAuthAccessToken (linkedinToken, verifier);
        linkedinClient = factory.createLinkedInApiClient (accessToken);
        LinkedInFriends linkedInFriends = new LinkedInFriends (mContext, accessToken);
        linkedInFriends.show ();
    } catch (Exception e) {
    }
}
----------------------------------------

public void onVerify (String verifier) {
    try {
        Log.i ("LinkedinSample", "verifier: " + verifier);
        LinkedInAccessToken accessToken = oAuthService.getOAuthAccessToken (linkedinToken, verifier);
        linkedinClient = factory.createLinkedInApiClient (accessToken);
        linkedinClient.postNetworkUpdate (statusText);
        Person profile = linkedinClient.getProfileForCurrentUser (EnumSet.of (ProfileField.FIRST_NAME, ProfileField.LAST_NAME, ProfileField.PICTURE_URL));
        Log.e ("Name:", "" + profile.getFirstName () + " " + profile.getLastName ());
        Log.e ("Headline:", "" + profile.getHeadline ());
        Log.e ("Summary:", "" + profile.getSummary ());
        Log.e ("Industry:", "" + profile.getIndustry ());
        Log.e ("Picture url:", "" + profile.getPictureUrl ());
        String stringUrl = profile.getPictureUrl ().toString ();
        System.out.println ("url test" + stringUrl);
        Connections connections = linkedinClient.getConnectionsForCurrentUser ();
        List < String > list = new ArrayList < String > ();
        for (Person p : connections.getPersonList ()) {
            Log.e ("Name", "" + p.getLastName () + " " + p.getFirstName ());
            Log.e ("Industry      ", "" + p.getIndustry ());
            Log.e ("      ", "" + "*****************");
            Log.e ("currentStatus ", "" + p.getCurrentStatus ());
            Log.e ("link          ", "" + p.getPublicProfileUrl ());
            Log.e ("position      ", "" + p.getEducations ());
            Log.e ("id", "" + p.getId ());
            list.add (p.getId ());
        }
        System.out.println ("list::" + list);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20900340_20900906_547_616
20900340_20900906_575_610
Title: Linkedin Integration Android 
----------------------------------------

public void onClick (View v) {
    dismiss ();
    System.out.println ("send message click..." + position);
    Person p = (Person) v.getTag ();
    String idValue = p.getId ();
    System.out.println ("id array list" + Arrays.asList (idValue));
    final CustomPopUpSocialMedia customPopUpSocialMedia = new CustomPopUpSocialMedia (context, "Message");
    customPopUpSocialMedia.setEditText ();
    customPopUpSocialMedia.setSocialMediaTitle ("Visit MyAppsCo");
    customPopUpSocialMedia.setSocialMediaMessage ("Message");
    customPopUpSocialMedia.setSocialMediaUsername (p.getFirstName () + " " + p.getLastName ());
    String storeUrl = mContext.getResources ().getString (R.string.abo_url);
    AccountManagerClass accountManagerClass = new AccountManagerClass ();
    final Account account = accountManagerClass.getAccountInfo (mContext);
    customPopUpSocialMedia.setSocialMediaUrl ("Visit my MyAppsCo App Store at" + " " + storeUrl + account.userName);
    customPopUpSocialMedia.setFirstButton ("OK");
    customPopUpSocialMedia.mFirstButton.setTag (p);
    customPopUpSocialMedia.setFirstButtonOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            String shareStatus = customPopUpSocialMedia.getEditText ();
            System.out.println ("shareStatus ok" + shareStatus);
            System.out.println ("DoneOnClick... ok" + position);
            Person p = (Person) v.getTag ();
            String idValue = p.getId ();
            System.out.println ("DoneOnClick...id array list" + Arrays.asList (idValue));
            try {
                String linkAppStore = mContext.getResources ().getString (R.string.abo_url);
                linkedinClient.sendMessage (Arrays.asList (idValue), "Visit MyAppsCo-Abo", p.getFirstName () + " " + p.getLastName () + System.getProperty ("line.separator") + shareStatus + System.getProperty ("line.separator") + "Visit my MyAppsCo App Store at" + " " + linkAppStore + account.userName);
                CustomToast.makeText (mContext, "Sent message successfully", CustomToast.LENGTH_SHORT).show ();
            } catch (Exception e) {
                System.out.println ("throttle::" + e);
                CustomToast.makeText (mContext, "Throttle limit for calls to this resource is reached", CustomToast.LENGTH_SHORT).show ();
            }
            customPopUpSocialMedia.dismiss ();
        }}

    );
    customPopUpSocialMedia.show ();
}
----------------------------------------

public void onClick (View v) {
    String shareStatus = customPopUpSocialMedia.getEditText ();
    System.out.println ("shareStatus ok" + shareStatus);
    System.out.println ("DoneOnClick... ok" + position);
    Person p = (Person) v.getTag ();
    String idValue = p.getId ();
    System.out.println ("DoneOnClick...id array list" + Arrays.asList (idValue));
    try {
        String linkAppStore = mContext.getResources ().getString (R.string.abo_url);
        linkedinClient.sendMessage (Arrays.asList (idValue), "Visit MyAppsCo-Abo", p.getFirstName () + " " + p.getLastName () + System.getProperty ("line.separator") + shareStatus + System.getProperty ("line.separator") + "Visit my MyAppsCo App Store at" + " " + linkAppStore + account.userName);
        CustomToast.makeText (mContext, "Sent message successfully", CustomToast.LENGTH_SHORT).show ();
    } catch (Exception e) {
        System.out.println ("throttle::" + e);
        CustomToast.makeText (mContext, "Throttle limit for calls to this resource is reached", CustomToast.LENGTH_SHORT).show ();
    }
    customPopUpSocialMedia.dismiss ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20900618_20900656_1_14
20900618_20900668_72_87
Title: Syntax error on eclipse 
----------------------------------------

private Node insert (Node node, int data) {
    if (node == null) {
        node = new Node (data);
    } else {
        if (data <= node.data) {
            node.left = insert (node.left, data);
        } else {
            node.right = insert (node.right, data);
        }
    }
    return (node);
}
----------------------------------------

private Node insert (Node node, int data) {
    if (node == null) {
        node = new Node (data);
    } else {
        if (data <= node.data) {
            node.left = insert (node.left, data);
        } else {
            node.right = insert (node.right, data);
        }
    }
    return (node);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20905913_20906054_1_22
20905913_20906359_1_21
Title: How to write BOTH row and column indexes in a table (java) - nested for loops 
----------------------------------------

public static void print_table (int table [] []) {
    System.out.println ("PRINTING TABLE ");
    System.out.print ("I/J ");
    for (int j = 0;
    j <= MAX_AMOUNT; j ++) {
        System.out.print (j + " ");
    }
    for (int i = 0;
    i <= NCHANGES; i ++) {
        System.out.print ("[" + i + "]");
        for (int j = 0;
        j <= MAX_AMOUNT; j ++) {
            System.out.print (table [i] [j] + "\t");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void print_table (int table [] []) {
    System.out.println ("\n\nPRINTING TABLE ");
    System.out.println ("\t\tm");
    System.out.print ("\n        ");
    for (int column = 0;
    column <= MAX_AMOUNT; column ++) {
        System.out.print (column + " \t");
    }
    System.out.print ("\n----------------------------------------------------------------------------------------------------------------------------------");
    System.out.println ("----------------------------------------------------------");
    for (int i = 0;
    i <= NCHANGES; i ++) {
        System.out.print ("[" + i + "]:  ");
        for (int j = 0;
        j <= MAX_AMOUNT; j ++) {
            System.out.print (table [i] [j] + "\t");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20910838_20910920_1_18
20910838_20910970_1_14
Title: How to get a button to actually appear on screen? 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ();
            JButton balance = new JButton ("Check Balance");
            JButton deposit = new JButton ("Deposit");
            JButton withdraw = new JButton ("Withdraw");
            frame.setLayout (new FlowLayout ());
            frame.add (balance);
            frame.add (deposit);
            frame.add (withdraw);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    JButton balance = new JButton ("Check Balance");
    JButton deposit = new JButton ("Deposit");
    JButton withdraw = new JButton ("Withdraw");
    JFrame frame = new JFrame ();
    JPanel panel = new JPanel (new BorderLayout ());
    panel.add (balance, BorderLayout.WEST);
    panel.add (withdraw, BorderLayout.EAST);
    panel.add (deposit, BorderLayout.CENTER);
    frame.add (panel);
    frame.pack ();
    frame.setVisible (true);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20914804_20914866_2_10
20914804_20914867_2_10
Title: Simple syntax error in my while loop 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20914804_20914866_2_10
20914804_20914893_2_10
Title: Simple syntax error in my while loop 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20914804_20914867_2_10
20914804_20914893_2_10
Title: Simple syntax error in my while loop 
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    while (x < 10) {
        if (x % 2 != 0) {
            System.out.println (x);
        }
        x ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20933260_20933357_1_34
20933260_20933388_1_57
Title: Some trouble in loop 
----------------------------------------

public static void main (String [] args) {
    try {
        Scanner scanner = new Scanner (System.in);
        String input;
        while (true) {
            System.out.println ("Input X to terminate.");
            System.out.print ("Input: ");
            input = scanner.nextLine ().toLowerCase ();
            if (input.equals ("X")) {
                break;
            } else {
                int countA = 0;
                int countB = 0;
                for (int i = 0;
                i < input.length (); i ++) {
                    if (input.charAt (i) == 'a') {
                        countA ++;
                    } else if (input.charAt (i) == 'b') {
                        countB ++;
                    }

                }
                if (countA == countB) {
                    System.out.println ("Equal!");
                } else {
                    System.out.println ("Not equal!");
                }
            }
        }
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        Scanner scn = new Scanner (System.in);
        int z = 0;
        String input;
        int [] ABArray = null;
        while (z == 0) {
            ABArray = new int [2];
            System.out.println ("Input X to terminate.");
            System.out.print ("Input: ");
            input = scn.nextLine ().toLowerCase ();
            for (int i = 0;
            i < input.length (); i ++) {
                char AB = input.charAt (i);
                ABArray [AB - 'a'] ++;
            }
            if (ABArray [0] == 0 || ABArray [1] == 0) {
                System.out.println ("Not Equal");
                System.out.println ("");
            } else if (ABArray [0] == ABArray [1]) {
                System.out.println ("Equal");
                System.out.println ("");
            } else if (ABArray [0] != ABArray [1]) {
                System.out.println ("Not Equal");
                if (ABArray [0] > ABArray [1]) {
                    System.out.println ("The number of A is greater than B.");
                } else if (ABArray [0] < ABArray [1]) {
                    System.out.println ("The number of B is greater than A.");
                }

                System.out.println ("");
            }

        }
    } catch (ArrayIndexOutOfBoundsException X) {
        X.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20933931_20934425_28_41
20933931_20934556_43_61
Title: JAVA - get size of all subdirectories? 
----------------------------------------

private static long getDirSize (File dirs) {
    long size = 0;
    if (dirs != null && dirs.listFiles () != null) {
        for (File file : dirs.listFiles ()) {
            if (file.isFile ()) size += file.length ();
            else size += getDirSize (file);

        }
    }
    return size;
}
----------------------------------------

private long getDirSize (Path dirPath) throws IOException {
    final AtomicLong size = new AtomicLong (0L);
    Files.walkFileTree (dirPath, new SimpleFileVisitor < Path > () {
        @Override
        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
            size.addAndGet (attrs.size ());
            return FileVisitResult.CONTINUE;
        }@Override
        public FileVisitResult visitFileFailed (Path file, IOException exc) throws IOException {
            return FileVisitResult.CONTINUE;
        }}

    );
    return size.get ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20936101_20939710_12_32
20936101_20940851_68_94
Title: Get ListCell via ListView 
----------------------------------------

public ListCell < MyObject > call (ListView < MyObject > myObjectListView) {
    ListCell < MyObject > cell = new ListCell < MyObject > () {
        @Override
        protected void updateItem (MyObject myObject, boolean b) {
            super.updateItem (myObject, b);
            if (myObject != null) {
                setText (myObject.getName ());
                if ("selected".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                    System.out.println ("Setting new CSS/graphics for index retun from service." + myObject.getName ());
                    setText ("I am selected Index from Service");
                } else if ("selectedplusone".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                    System.out.println ("Setting new CSS/Graphics for index+1 returned from service" + myObject.getName ());
                    setText ("I am selected Index +1  from Service");
                }

                myObject.setSpecialIndicator ("");
            }
        }}

    ;
    return cell;
}
----------------------------------------

public ListCell < MyDataType > call (ListView < MyDataType > lv) {
    final ListCell < MyDataType > cell = new ListCell < > ();
    final IntegerBinding previousIndex = cell.indexProperty ().subtract (1);
    final ObjectBinding < MyDataType > previousItem = Bindings.valueAt (listView.getItems (), previousIndex);
    final BooleanBinding previousItemSelected = Bindings.selectBoolean (previousItem, "selected");
    final StringBinding thisItemName = Bindings.selectString (cell.itemProperty (), "name");
    final BooleanBinding thisItemSelected = Bindings.selectBoolean (cell.itemProperty (), "selected");
    cell.textProperty ().bind (Bindings.createStringBinding (new Callable < String > () {
        @Override
        public String call () throws Exception {
            if (cell.getItem () == null) {
                return null;
            } else {
                String value = cell.getItem ().getName ();
                if (thisItemSelected.get ()) {
                    value = value + " (selected) ";
                } else if (previousItemSelected.get ()) {
                    value = value + " (selected item is above)";
                }

                return value;
            }
        }}

    , thisItemName, thisItemSelected, previousItemSelected));
    return cell;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20936101_20939710_12_32
20936101_20940851_78_90
Title: Get ListCell via ListView 
----------------------------------------

public ListCell < MyObject > call (ListView < MyObject > myObjectListView) {
    ListCell < MyObject > cell = new ListCell < MyObject > () {
        @Override
        protected void updateItem (MyObject myObject, boolean b) {
            super.updateItem (myObject, b);
            if (myObject != null) {
                setText (myObject.getName ());
                if ("selected".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                    System.out.println ("Setting new CSS/graphics for index retun from service." + myObject.getName ());
                    setText ("I am selected Index from Service");
                } else if ("selectedplusone".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                    System.out.println ("Setting new CSS/Graphics for index+1 returned from service" + myObject.getName ());
                    setText ("I am selected Index +1  from Service");
                }

                myObject.setSpecialIndicator ("");
            }
        }}

    ;
    return cell;
}
----------------------------------------

public String call () throws Exception {
    if (cell.getItem () == null) {
        return null;
    } else {
        String value = cell.getItem ().getName ();
        if (thisItemSelected.get ()) {
            value = value + " (selected) ";
        } else if (previousItemSelected.get ()) {
            value = value + " (selected item is above)";
        }

        return value;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20936101_20939710_5_50
20936101_20940851_33_101
Title: Get ListCell via ListView 
----------------------------------------

public void start (Stage stage) throws Exception {
    VBox root = new VBox ();
    final ObservableList < MyObject > allObjects = FXCollections.observableArrayList (new MyObject ("object0"), new MyObject ("object1"), new MyObject ("object2"), new MyObject ("object3"), new MyObject ("object4"));
    final ListView < MyObject > listView = new ListView < > (allObjects);
    listView.setCellFactory (new Callback < ListView < MyObject >, ListCell < MyObject > > () {
        @Override
        public ListCell < MyObject > call (ListView < MyObject > myObjectListView) {
            ListCell < MyObject > cell = new ListCell < MyObject > () {
                @Override
                protected void updateItem (MyObject myObject, boolean b) {
                    super.updateItem (myObject, b);
                    if (myObject != null) {
                        setText (myObject.getName ());
                        if ("selected".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                            System.out.println ("Setting new CSS/graphics for index retun from service." + myObject.getName ());
                            setText ("I am selected Index from Service");
                        } else if ("selectedplusone".equalsIgnoreCase (myObject.getSpecialIndicator ())) {
                            System.out.println ("Setting new CSS/Graphics for index+1 returned from service" + myObject.getName ());
                            setText ("I am selected Index +1  from Service");
                        }

                        myObject.setSpecialIndicator ("");
                    }
                }}

            ;
            return cell;
        }}

    );
    Button serviceIndex2 = new Button ("ServiceIndex2");
    serviceIndex2.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent actionEvent) {
            int indexFromService = 2;
            listView.getItems ().get (indexFromService).setSpecialIndicator ("selected");
            listView.getItems ().get (indexFromService + 1).setSpecialIndicator ("selectedplusone");
            listView.setItems (null);
            listView.setItems (allObjects);
        }}

    );
    root.getChildren ().addAll (listView, serviceIndex2);
    Scene scene = new Scene (root, 500, 500);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    final ListView < MyDataType > listView = new ListView < > ();
    for (int i = 0;
    i <= 20; i ++) {
        listView.getItems ().add (new MyDataType ("Item " + i, false));
    }
    final HBox controls = new HBox (5);
    controls.setPadding (new Insets (5));
    final Button button = new Button ("Set selection");
    final TextField indexField = new TextField ();
    button.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            try {
                int index = Integer.parseInt (indexField.getText ());
                if (index >= 0 && index < listView.getItems ().size ()) {
                    final MyDataType item = listView.getItems ().get (index);
                    item.setSelected (! item.isSelected ());
                }
            } catch (NumberFormatException nfe) {
                indexField.setText ("");
            }
        }}

    );
    controls.getChildren ().addAll (new Label ("Enter selection index:"), indexField, button);
    final BorderPane root = new BorderPane ();
    root.setCenter (listView);
    root.setBottom (controls);
    listView.setCellFactory (new Callback < ListView < MyDataType >, ListCell < MyDataType > > () {
        @Override
        public ListCell < MyDataType > call (ListView < MyDataType > lv) {
            final ListCell < MyDataType > cell = new ListCell < > ();
            final IntegerBinding previousIndex = cell.indexProperty ().subtract (1);
            final ObjectBinding < MyDataType > previousItem = Bindings.valueAt (listView.getItems (), previousIndex);
            final BooleanBinding previousItemSelected = Bindings.selectBoolean (previousItem, "selected");
            final StringBinding thisItemName = Bindings.selectString (cell.itemProperty (), "name");
            final BooleanBinding thisItemSelected = Bindings.selectBoolean (cell.itemProperty (), "selected");
            cell.textProperty ().bind (Bindings.createStringBinding (new Callable < String > () {
                @Override
                public String call () throws Exception {
                    if (cell.getItem () == null) {
                        return null;
                    } else {
                        String value = cell.getItem ().getName ();
                        if (thisItemSelected.get ()) {
                            value = value + " (selected) ";
                        } else if (previousItemSelected.get ()) {
                            value = value + " (selected item is above)";
                        }

                        return value;
                    }
                }}

            , thisItemName, thisItemSelected, previousItemSelected));
            return cell;
        }}

    );
    final Scene scene = new Scene (root, 600, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20936101_20940851_68_94
20936101_20940851_78_90
Title: Get ListCell via ListView 
----------------------------------------

public ListCell < MyDataType > call (ListView < MyDataType > lv) {
    final ListCell < MyDataType > cell = new ListCell < > ();
    final IntegerBinding previousIndex = cell.indexProperty ().subtract (1);
    final ObjectBinding < MyDataType > previousItem = Bindings.valueAt (listView.getItems (), previousIndex);
    final BooleanBinding previousItemSelected = Bindings.selectBoolean (previousItem, "selected");
    final StringBinding thisItemName = Bindings.selectString (cell.itemProperty (), "name");
    final BooleanBinding thisItemSelected = Bindings.selectBoolean (cell.itemProperty (), "selected");
    cell.textProperty ().bind (Bindings.createStringBinding (new Callable < String > () {
        @Override
        public String call () throws Exception {
            if (cell.getItem () == null) {
                return null;
            } else {
                String value = cell.getItem ().getName ();
                if (thisItemSelected.get ()) {
                    value = value + " (selected) ";
                } else if (previousItemSelected.get ()) {
                    value = value + " (selected item is above)";
                }

                return value;
            }
        }}

    , thisItemName, thisItemSelected, previousItemSelected));
    return cell;
}
----------------------------------------

public String call () throws Exception {
    if (cell.getItem () == null) {
        return null;
    } else {
        String value = cell.getItem ().getName ();
        if (thisItemSelected.get ()) {
            value = value + " (selected) ";
        } else if (previousItemSelected.get ()) {
            value = value + " (selected item is above)";
        }

        return value;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20940398_20940423_8_38
20940398_20940433_4_48
Title: Selective Sort in Java 
----------------------------------------

public static void main (String [] args) {
    int arr [] = {50, 150, 100, 250, 200, 24, 376, 541, 56, 164};
    int arrLength = arr.length;
    for (int i = 0;
    i < arrLength - 1; i ++) {
        int min = i;
        for (int k = i + 1;
        k < arrLength; k ++) {
            if (arr [k] < arr [min]) {
                min = k;
            }
        }
        if (i != min) {
            int temp = arr [i];
            arr [i] = arr [min];
            arr [min] = temp;
        }
    }
    for (int j = 0;
    j < arrLength; j ++) {
        System.out.println (arr [j] + " ");
    }
    for (int p = 0;
    p < arrLength; p ++) {
        int pilotHours = arr [p];
        String pilot = "PILOT NAME, HOWEVER YOU GET IT";
        pilots.put (pilot, pilotHours);
    }
    System.out.println (pilots);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > nameArr = new ArrayList < String > ();
    nameArr.add ("John");
    nameArr.add ("Robert");
    nameArr.add ("Duncan");
    nameArr.add ("Steve");
    nameArr.add ("Adrian");
    nameArr.add ("Paul");
    nameArr.add ("Michael");
    nameArr.add ("Andrew");
    nameArr.add ("Henry");
    nameArr.add ("Bradley");
    int arr [] = {50, 150, 100, 250, 200, 24, 376, 541, 56, 164};
    int arrLength = arr.length;
    assert arrLength == nameArr.size ();
    int indexArr [] = new int [arrLength];
    for (int i = 0;
    i < arrLength; i ++) {
        indexArr [i] = i;
    }
    for (int i = 0;
    i < arrLength - 1; i ++) {
        int min = i;
        for (int k = i + 1;
        k < arrLength; k ++) {
            if (arr [k] < arr [min]) {
                min = k;
            }
        }
        if (i != min) {
            int temp = arr [i];
            arr [i] = arr [min];
            arr [min] = temp;
            temp = indexArr [i];
            indexArr [i] = indexArr [min];
            indexArr [min] = temp;
        }
    }
    for (int j = 0;
    j < arrLength; j ++) {
        int index = indexArr [j];
        String name = nameArr.get (index);
        System.out.println (name);
    }
}
----------------------------------------
