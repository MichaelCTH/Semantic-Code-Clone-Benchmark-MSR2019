$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35560429_35560771_1_19
35560429_35570329_20_38
Title: Thread waiting logic 
----------------------------------------

@Override
public void run () {
    boolean EndThread = false;
    int WaitingRuns = 0;
    while (! EndThread) {
        while (! group.HasSomethingNew && WaitingRuns < 3) {
            try {
                Thread.sleep (5000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            WaitingRuns ++;
        }
        if (group.HasSomethingNew) {
            group.displayFamilyMembers ();
            WaitingRuns = 0;
        } else EndThread = true;

    }
}
----------------------------------------

public void run () {
    long startTime = System.currentTimeMillis ();
    while (! timeOut (startTime) && hasSomethingNew ()) {
        hasSomthingNew = false;
        long currentTime = System.currentTimeMillis ();
        if (((startTime + MAX_WAITING_TIME) - currentTime) < MAX_INACTIVE_TIME) {
            break;
        }
        try {
            Thread.sleep (MAX_INACTIVE_TIME);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    long afterWhileLoop = System.currentTimeMillis ();
    System.out.println ("Total waiting time " + (afterWhileLoop - startTime));
    group.displayFamilyMembers ();
    System.out.println ("__________________________________");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35560429_35561063_23_31
35560429_35561063_6_15
Title: Thread waiting logic 
----------------------------------------

public void run () {
    try {
        Thread.sleep (MAX_WAITING_TIME);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    group.displayFamilyMembers ();
    second.start ();
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (5000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Before adding");
    group.displayFamilyMembers ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35560429_35561063_23_31
35560429_35570329_20_38
Title: Thread waiting logic 
----------------------------------------

public void run () {
    try {
        Thread.sleep (MAX_WAITING_TIME);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    group.displayFamilyMembers ();
    second.start ();
}
----------------------------------------

public void run () {
    long startTime = System.currentTimeMillis ();
    while (! timeOut (startTime) && hasSomethingNew ()) {
        hasSomthingNew = false;
        long currentTime = System.currentTimeMillis ();
        if (((startTime + MAX_WAITING_TIME) - currentTime) < MAX_INACTIVE_TIME) {
            break;
        }
        try {
            Thread.sleep (MAX_INACTIVE_TIME);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    long afterWhileLoop = System.currentTimeMillis ();
    System.out.println ("Total waiting time " + (afterWhileLoop - startTime));
    group.displayFamilyMembers ();
    System.out.println ("__________________________________");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35560429_35561063_6_15
35560429_35570329_20_38
Title: Thread waiting logic 
----------------------------------------

public void run () {
    try {
        Thread.sleep (5000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Before adding");
    group.displayFamilyMembers ();
}
----------------------------------------

public void run () {
    long startTime = System.currentTimeMillis ();
    while (! timeOut (startTime) && hasSomethingNew ()) {
        hasSomthingNew = false;
        long currentTime = System.currentTimeMillis ();
        if (((startTime + MAX_WAITING_TIME) - currentTime) < MAX_INACTIVE_TIME) {
            break;
        }
        try {
            Thread.sleep (MAX_INACTIVE_TIME);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    long afterWhileLoop = System.currentTimeMillis ();
    System.out.println ("Total waiting time " + (afterWhileLoop - startTime));
    group.displayFamilyMembers ();
    System.out.println ("__________________________________");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35561619_35561726_2_12
35561619_35561751_2_11
Title: Finding the pattern in desired output 
----------------------------------------

public static void main (String args []) {
    int counter;
    counter = 1;
    while (counter <= 10) {
        System.out.println ((11 - counter) * (11 - counter) - 1);
        counter = counter + 1;
    }
    System.exit (0);
}
----------------------------------------

public static void main (String args []) {
    int counter;
    counter = 1;
    while (counter <= 10) {
        System.out.println ((12 - counter) * (10 - counter));
        counter = counter + 1;
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35566918_35567363_4_15
35566918_35567396_4_13
Title: "Reverse number using only loops;no Arraysconvert to String just beginner...Bug:Zero" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("enter number:\n");
    String temp = input.next ();
    int digit = temp.length () - 1;
    while (digit >= 0) {
        char z = temp.charAt (digit);
        System.out.print (z);
        digit = digit - 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("enter number:\n");
    String x = input.next ();
    for (int i = x.length ();
    i > 0;) {
        char c = x.charAt (-- i);
        if (c <= '9' && c >= '0') System.out.print ();

    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35575713_35576139_1_19
35575713_35576205_1_20
Title: Convert Height to Centimeter in Java 
----------------------------------------

public double convertToCMs (String str) {
    double c = 0;
    String [] x = str.split ("'");
    try {
        if (x.length > 1) {
            c = (Integer.parseInt (x [0].trim ()) * 12 + Integer.parseInt (x [1].trim ().split ("\"") [0])) * 2.54;
        } else {
            c = (Integer.parseInt (x [0].trim ()) * 12) * 2.54;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return c;
}
----------------------------------------

public static double convertToCMs (String str) {
    double c = 0;
    double d = 0;
    try {
        String [] x = str.split (" - ") [0].split ("'");
        c = Integer.parseInt (x [0].trim ()) * 12;
        if (x.length > 1) {
            c = c + Integer.parseInt (x [1].trim ().split ("\"") [0]);
        }
        d = c * 2.54;
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return d;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35579985_35583637_27_41
35579985_35583637_7_20
Title: Sorting an array in parallel using Streams 
----------------------------------------

public < P_IN > Node < T > opEvaluateParallel (PipelineHelper < T > helper, Spliterator < P_IN > spliterator, IntFunction < T [] > generator) {
    if (StreamOpFlag.SORTED.isKnown (helper.getStreamAndOpFlags ()) && isNaturalSort) {
        return helper.evaluate (spliterator, false, generator);
    } else {
        T [] flattenedData = helper.evaluate (spliterator, true, generator).asArray (generator);
        Arrays.parallelSort (flattenedData, comparator);
        return Nodes.node (flattenedData);
    }
}
----------------------------------------

public < P_IN > Node < Integer > opEvaluateParallel (PipelineHelper < Integer > helper, Spliterator < P_IN > spliterator, IntFunction < Integer [] > generator) {
    if (StreamOpFlag.SORTED.isKnown (helper.getStreamAndOpFlags ())) {
        return helper.evaluate (spliterator, false, generator);
    } else {
        Node.OfInt n = (Node.OfInt) helper.evaluate (spliterator, true, generator);
        int [] content = n.asPrimitiveArray ();
        Arrays.parallelSort (content);
        return Nodes.node (content);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35589198_35589515_11_25
35589198_35589515_30_60
Title: Problems with adding to an ArrayList while keeping a sorted order 
----------------------------------------

public boolean add (T item) {
    int index = this.size ();
    for (int i = 0;
    i <= index; i ++) {
        try {
            add (i, item);
            break;
        } catch (IllegalArgumentException e) {
        }
    }
    return true;
}
----------------------------------------

public void add (int i, T item) {
    if (i <= size ()) {
        if (size () == 0) super.add (item);
        else if (i == size ()) {
            if (item.compareTo (this.get (i - 1)) >= 0) super.add (i, item);
            else throw new IllegalArgumentException ();

        } else if (i == 0) {
            if (item.compareTo (this.get (i)) <= 0) super.add (i, item);
            else throw new IllegalArgumentException ();

        } else {
            if (item.compareTo (this.get (i - 1)) >= 0 && item.compareTo (this.get (i)) <= 0) super.add (i, item);
            else throw new IllegalArgumentException ();

        }

    } else {
        throw new IllegalArgumentException ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35611596_35611825_15_42
35611596_35612021_15_44
Title: Change Random() int value on android 
----------------------------------------

public void randomGenerator (View view) {
    EditText guess = (EditText) findViewById (R.id.guessText);
    String myGuess = guess.getText ().toString ();
    int guessInt = new Integer (guess.getText ().toString ());
    if (guessInt == randomNumber) {
        Toast.makeText (getApplicationContext (), "You Guessed The Right Number!!! " + "( " + guessInt + " )", Toast.LENGTH_LONG).show ();
        guess.setText ("");
        randomNumber = randNum.nextInt (21);
    } else if (guessInt > randomNumber) {
        Toast.makeText (getApplicationContext (), "Your Guess Is Too High! " + "( " + guessInt + " )", Toast.LENGTH_SHORT).show ();
        guess.setText ("");
    } else {
        Toast.makeText (getApplicationContext (), "Your Guess Is Too Low! " + "( " + guessInt + " )", Toast.LENGTH_SHORT).show ();
        guess.setText ("");
    }

}
----------------------------------------

public void randomGenerator (View view) {
    boolean isRight = false;
    EditText guess = (EditText) findViewById (R.id.guessText);
    String myGuess = guess.getText ().toString ();
    int guessInt = new Integer (guess.getText ().toString ());
    if (guessInt == randomNumber) {
        Toast.makeText (getApplicationContext (), "You Guessed The Right Number!!! " + "( " + guessInt + " )", Toast.LENGTH_LONG).show ();
        guess.setText ("");
        randomNumber = randNum.nextInt (21);
    } else if (guessInt > randomNumber) {
        Toast.makeText (getApplicationContext (), "Your Guess Is Too High! " + "( " + guessInt + " )", Toast.LENGTH_SHORT).show ();
        guess.setText ("");
    } else {
        Toast.makeText (getApplicationContext (), "Your Guess Is Too Low! " + "( " + guessInt + " )", Toast.LENGTH_SHORT).show ();
        guess.setText ("");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35611957_35612631_1_16
35611957_35612726_1_18
Title: Trying to get the user to hit enter to generate the next prime number 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    while (! input.hasNextInt () && ! (input.nextInt () == 0)) {
        for (int i = 2;
        i <= 1000; i ++) {
            for (int j = 2;
            j <= i; j ++) {
                if (j == i) {
                    System.out.println (i);
                }
                if (i % j == 0) {
                    break;
                }
            }
        }
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("First scan: ");
    String next = scanner.nextLine ();
    while (! ("0".equals (next))) {
        if (next.isEmpty ()) {
            System.out.println ("Next prime");
        } else {
            System.out.println ("String: " + next);
        }
        System.out.println ("Next scan: ");
        next = scanner.nextLine ();
    }
    System.out.println ("Done");
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3561958_3562118_1_21
3561958_51992240_1_23
Title: How to get android system log from a Java program 
----------------------------------------

public static String [] getAdbLogCat () {
    try {
        Process p = Runtime.getRuntime ().exec ("/path/to/adb shell logcat");
        InputStream is = p.getInputStream ();
        InputStreamReader isr = new InputStreamReader (is);
        BufferedReader br = new BufferedReader (isr);
        final StringBuffer output = new StringBuffer ();
        String line;
        ArrayList < String > arrList = new ArrayList < String > ();
        while ((line = br.readLine ()) != null) {
            System.out.println (line);
        }
        return (String []) arrList.toArray (new String [0]);
    } catch (IOException e) {
        System.err.println (e);
        e.printStackTrace ();
        return new String [] {};
    }
}
----------------------------------------

private static String getAdbLogCat () {
    String log = "";
    String str;
    try {
        String myStringArray [] = {"logcat", "-d"};
        Process process = Runtime.getRuntime ().exec (myStringArray);
        InputStream is = process.getInputStream ();
        InputStreamReader isr = new InputStreamReader (is);
        BufferedReader br = new BufferedReader (isr);
        str = br.readLine ();
        while (str != null) {
            log += str;
            str = br.readLine ();
        }
    } catch (IOException e) {
    }
    return log;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35619915_35620039_1_21
35619915_35620216_1_31
Title: Assign different ArrayList as value to every different key in a HashMap in Java 
----------------------------------------

public HashMap < String, ArrayList < String > > iPsForDays () {
    HashMap < String, ArrayList < String > > mapDatesToIPs = new HashMap < String, ArrayList < String > > ();
    for (LogEntry le : records) {
        Date d = le.getAccessTime ();
        String dates = d.toString ().substring (4, 10);
        if (! mapDatesToIPs.containsKey (dates)) {
            ArrayList < String > ips = new ArrayList < String > ();
            ips.add (le.getIpAddress ());
            mapDatesToIPs.put (dates, ips);
        } else if (mapDatesToIPs.containsKey (dates)) {
            String ip = le.getIpAddress ();
            ArrayList < String > ips = mapDatesToIPs.get (dates);
            ips.add (ip);
        }

    }
    return mapDatesToIPs;
}
----------------------------------------

public HashMap < String, ArrayList < String > > iPsForDays () {
    HashMap < String, ArrayList < String > > mapDatesToIPs = new HashMap < String, ArrayList < String > > ();
    ArrayList < String > ips = null;
    String previous_date = null;
    for (LogEntry le : records) {
        Date d = le.getAccessTime ();
        String dates = d.toString ().substring (4, 10);
        if (! mapDatesToIPs.containsKey (dates)) {
            if (ips != null && ips.size > 0) {
                mapDatesToIPs.put (previous_date, ips);
            }
            previous_date = dates;
            ips = new ArrayList < String > ();
            ips.add (le.getIpAddress ());
            mapDatesToIPs.put (previous_date, null);
        } else if (mapDatesToIPs.containsKey (dates)) {
            String ip = le.getIpAddress ();
            if (! ips.contains (ip)) {
                ips.add (ip);
            }
        }

    }
    if (ips != null && ips.size > 0) {
        mapDatesToIPs.put (previous_date, ips);
    }
    return mapDatesToIPs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35621080_35621263_1_25
35621080_35621535_1_22
Title: How to get palindrome program to not recognize whitespace and to end with a period? 
----------------------------------------

public boolean checkPalindrome (String text) {
    text = text.replaceAll ("\\s+", "");
    if (text.endsWith (".")) {
        text = text.substring (0, text.length () - 1);
    }
    char [] array = new char [80];
    int length = text.length ();
    String reverseText = "";
    for (int i = length - 1;
    i >= 0; i --) {
        reverseText = reverseText + text.charAt (i);
    }
    if (reverseText.equalsIgnoreCase (text)) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------

public static boolean checkPalindrome (String input) {
    int length = input.length () - 1 - 1;
    int i = 0;
    int j = length;
    while (i < j) {
        if (input.charAt (i) == ' ') {
            i ++;
        }
        if (input.charAt (j) == ' ') {
            j --;
        }
        if (input.charAt (i) == input.charAt (j)) {
            i ++;
            j --;
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35622259_35622550_12_32
35622259_35622550_5_41
Title: How to change the modality of a dialog while it is visible 
----------------------------------------

public void run () {
    try {
        System.out.println ("Worker thread: sleeping for 5 seconds");
        Thread.sleep (5000);
        System.out.println ("Worker thread: sleeping finished!");
    } catch (InterruptedException ex) {
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            System.out.println ("ENTERING MODALSWITCHER!");
            dialog.setModalityType (ModalityType.MODELESS);
            dialog.setVisible (false);
            dialog.setVisible (true);
            System.out.println ("NO LONGER MODAL!");
        }}

    );
}
----------------------------------------

public void run () {
    JFrame frame = new JFrame ();
    final JDialog dialog = new JDialog (frame);
    dialog.setModal (true);
    Runnable modalSwitcher = new Runnable () {
        @Override
        public void run () {
            try {
                System.out.println ("Worker thread: sleeping for 5 seconds");
                Thread.sleep (5000);
                System.out.println ("Worker thread: sleeping finished!");
            } catch (InterruptedException ex) {
            }
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    System.out.println ("ENTERING MODALSWITCHER!");
                    dialog.setModalityType (ModalityType.MODELESS);
                    dialog.setVisible (false);
                    dialog.setVisible (true);
                    System.out.println ("NO LONGER MODAL!");
                }}

            );
        }}

    new Thread (modalSwitcher).start ();
    System.out.println ("DIALOG WILL NOW SHOW UP:");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setVisible (true);
    dialog.setVisible (true);
    System.out.println ("BYE!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35622718_35679802_104_118
35622718_35679802_122_140
Title: How to achieve four side shadow effect for TabbedPane in Java swing? 
----------------------------------------

public void paint (Graphics2D g, JComponent c, int width, int height) {
    int ex = selected ? OVERPAINT : 0;
    Graphics2D g2 = (Graphics2D) g.create (0, 0, width, height + ex);
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    int w = width - 6 - 1;
    int h = height + r;
    for (int i = 0;
    i < 3; i ++) {
        g2.setColor (new Color (0, 0, 0, 20));
        g2.fill (new RoundRectangle2D.Double (x - i, y - i, w + i + i, h, r, r));
    }
    g2.setColor (color);
    g2.fill (new RoundRectangle2D.Double (x, y, w, h + 4, r, r));
    g2.dispose ();
}
----------------------------------------

public void paint (Graphics2D g, JComponent c, int w, int h) {
    Graphics2D g2 = (Graphics2D) g.create (0, 0, w, h);
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    RoundRectangle2D r = new RoundRectangle2D.Double (shadowOffset, shadowOffset + h - OVERPAINT, w - strokeSize - shadowOffset, 40, arcs.width, arcs.height);
    g2.setPaint (Color.CYAN);
    g2.fill (r);
    g2.setColor (Color.RED);
    g2.setStroke (new BasicStroke (strokeSize));
    g2.draw (r);
    g2.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35622718_35679802_104_118
35622718_35679802_144_165
Title: How to achieve four side shadow effect for TabbedPane in Java swing? 
----------------------------------------

public void paint (Graphics2D g, JComponent c, int width, int height) {
    int ex = selected ? OVERPAINT : 0;
    Graphics2D g2 = (Graphics2D) g.create (0, 0, width, height + ex);
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    int w = width - 6 - 1;
    int h = height + r;
    for (int i = 0;
    i < 3; i ++) {
        g2.setColor (new Color (0, 0, 0, 20));
        g2.fill (new RoundRectangle2D.Double (x - i, y - i, w + i + i, h, r, r));
    }
    g2.setColor (color);
    g2.fill (new RoundRectangle2D.Double (x, y, w, h + 4, r, r));
    g2.dispose ();
}
----------------------------------------

public void paint (Graphics2D g, JComponent c, int w, int h) {
    Graphics2D g2 = (Graphics2D) g.create (0, 0, w, h);
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.translate (0, - OVERPAINT);
    h += OVERPAINT;
    RoundRectangle2D r = new RoundRectangle2D.Double (shadowOffset, shadowOffset, w - strokeSize - shadowOffset, h - strokeSize - shadowOffset, arcs.width, arcs.height);
    g2.setPaint (Color.WHITE);
    g2.fill (r);
    g2.setColor (Color.ORANGE);
    g2.setStroke (new BasicStroke (strokeSize));
    g2.draw (r);
    g2.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35627246_35627779_13_20
35627246_35627779_2_9
Title: Instantiate an extended class or its parent (depending on circumstances) 
----------------------------------------

public static void main (String [] args) {
    Creature B = new CreatureBuilder ().getCreature (new CreatureSupplier () {
        @Override
        public Creature get () {
            return new Cyborg ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    Creature A = new CreatureBuilder ().getCreature (new CreatureSupplier () {
        @Override
        public Creature get () {
            return new Human ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35641963_35642017_1_16
35641963_35642203_7_20
Title: Java Bubble Sort Acting Strange 
----------------------------------------

public static void bubbleSort (int [] data) {
    int k;
    for (int m = data.length;
    m >= 0; m --) {
        for (int i = 0;
        i < data.length - 1; i ++) {
            k = i + 1;
            if (array [i] > array [k]) {
                swapNumbers (i, k, array);
            }
        }
        for (int i = 0;
        i < data.length; i ++) {
            System.out.print (data [i] + ", ");
        }
        System.out.println ("\n");
    }
}
----------------------------------------

public static void bubbleSort (int [] data) {
    for (int ct1 = 0;
    ct1 < data.length - 1; ct1 ++) {
        for (int ct2 = 0;
        ct2 < data.length - 1 - ct1; ct2 ++) {
            if (data [ct2] > data [ct2 + 1]) {
                swap (data, ct2, ct2 + 1);
                for (int i = 0;
                i < data.length; i ++) {
                    System.out.print (data [i] + " ");
                }
                System.out.println ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35642993_35643063_29_83
35642993_35643063_85_136
Title: Java working with Objects and Constructors 
----------------------------------------

public Monthnum (int whichMonth) {
    Monthnum = whichMonth;
    if (whichMonth == 1) {
        monthName = "January";
        System.out.println ("January");
    } else if (whichMonth == 2) {
        monthName = "February";
        System.out.println ("February");
    } else if (whichMonth == 3) {
        monthName = "March";
        System.out.println ("March");
    } else if (whichMonth == 4) {
        monthName = "April";
        System.out.println ("April");
    } else if (whichMonth == 5) {
        monthName = "May";
        System.out.println ("May");
    } else if (whichMonth == 6) {
        monthName = "June";
        System.out.println ("June");
    } else if (whichMonth == 7) {
        monthName = "July";
        System.out.println ("July");
    } else if (whichMonth == 8) {
        monthName = "August";
        System.out.println ("August");
    } else if (whichMonth == 9) {
        monthName = "September";
        System.out.println ("September");
    } else if (whichMonth == 10) {
        monthName = "October";
        System.out.println ("October");
    } else if (whichMonth == 11) {
        monthName = "November";
        System.out.println ("November");
    } else if (whichMonth == 12) {
        monthName = "December";
        System.out.println ("December");
    } else {
        System.out.println ("Invalid input from int cons");
    }

}
----------------------------------------

public Monthnum (String whichMonth) {
    if (whichMonth.equals ("January")) {
        Monthnum = 1;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("February")) {
        Monthnum = 2;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("March")) {
        Monthnum = 3;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("April")) {
        Monthnum = 4;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("May")) {
        Monthnum = 5;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("June")) {
        Monthnum = 6;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("July")) {
        Monthnum = 7;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("August")) {
        Monthnum = 8;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("September")) {
        Monthnum = 9;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("October")) {
        Monthnum = 10;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("November")) {
        Monthnum = 11;
        System.out.println (Monthnum);
    } else if (whichMonth.equals ("December")) {
        Monthnum = 12;
        System.out.println (Monthnum);
    } else System.out.println ("Invalid input");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35643522_35643564_5_22
35643522_35658544_14_98
Title: java: output for quadratic equation tool 
----------------------------------------

public static void main (String [] args) {
    int a;
    int b;
    int c;
    String input;
    input = JOptionPane.showInputDialog ("Please enter your value for a:  ");
    a = (int) Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("Please enter your value for b:  ");
    b = (int) Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("Please enter your value for c:  ");
    c = (int) Double.parseDouble (input);
    JOptionPane.showMessageDialog (null, "A value: " + a + "\nB value:" + b + "\nC value:" + c);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JTextField a = new JTextField (5);
    JTextField b = new JTextField (5);
    JTextField c = new JTextField (5);
    JLabel aLabel = new JLabel ("a value:");
    JLabel bLabel = new JLabel ("b value:");
    JLabel cLabel = new JLabel ("c value:");
    JLabel calculatedLabel = new JLabel ("Calculated:");
    JLabel calculatedNum = new JLabel ("0.0");
    JPanel myPanel = new JPanel ();
    myPanel.add (aLabel);
    myPanel.add (a);
    myPanel.add (bLabel);
    myPanel.add (b);
    myPanel.add (cLabel);
    myPanel.add (c);
    myPanel.add (calculatedLabel);
    myPanel.add (calculatedNum);
    myPanel.setLayout (new GridLayout (4, 2));
    final ImageIcon icon = new ImageIcon (new URL ("http://iconizer.net/files/Devine_icons/thumb/128/Calculater.png"));
    double aNum = 0;
    double bNum = 0;
    double cNum = 0;
    boolean invalidInput = false;
    String Answer = "";
    boolean restart = true;
    Object [] mainOptions = {"Exit", "Calculate", "Copy answer"};
    while (restart) {
        int mainPanel = JOptionPane.showOptionDialog (null, myPanel, "Quadratic Equation Calculator", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, icon, mainOptions, mainOptions [1]);
        if (mainPanel == JOptionPane.CANCEL_OPTION) {
            StringSelection selection = new StringSelection (Answer);
            Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
            clipboard.setContents (selection, selection);
        } else if (mainPanel == JOptionPane.NO_OPTION) {
            invalidInput = false;
            try {
                aNum = Double.parseDouble (a.getText ());
            } catch (NumberFormatException nfe) {
                invalidInput = true;
                calculatedLabel.setText ("");
                calculatedNum.setText ("Invalid a value");
            }
            try {
                bNum = Double.parseDouble (b.getText ()) / 100;
            } catch (NumberFormatException nfe) {
                invalidInput = true;
                calculatedLabel.setText ("");
                calculatedNum.setText ("Invalid b value");
            }
            try {
                cNum = Double.parseDouble (c.getText ());
            } catch (NumberFormatException nfe) {
                invalidInput = true;
                calculatedLabel.setText ("");
                calculatedNum.setText ("Invalid c value");
            }
            double b2 = bNum * bNum;
            double inSqrt = b2 - (4 * aNum * cNum);
            double ans1 = (((bNum * (- 1)) - java.lang.Math.sqrt (java.lang.Math.abs (inSqrt))) / (2 * aNum));
            double ans2 = (((bNum * (- 1)) - java.lang.Math.sqrt (java.lang.Math.abs (inSqrt))) / (2 * aNum)) * - 1;
            Answer = "+: " + ans1 + ", -: " + ans2;
            if (! invalidInput) {
                calculatedLabel.setText ("Calculated:");
                calculatedNum.setText (Answer);
            }
        } else {
            System.exit (0);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35670817_35670887_1_10
35670817_35670892_7_14
Title: Java-Returning an Array from an Array Method to the Main Function 
----------------------------------------

public static String inputStudent (int i) {
    String studentNum [] = new String [i];
    for (int a = 0;
    a < i; a ++) {
        System.out.print ("Enter student name" + (a + 1) + ": ");
        studentNum [a] = new Scanner (System.in).nextLine ();
    }
    return Arrays.toString (studentNum);
}
----------------------------------------

public static String [] inputStudent (int i) {
    String studentNum [] = new String [i];
    for (int a = 0;
    a < i; a ++) {
        System.out.print ("Enter student name" + (a + 1) + ": ");
        studentNum [a] = new Scanner (System.in).nextLine ();
    }
    return studentNum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3567372_16083394_1_14
3567372_3585132_1_16
Title: Access to private inherited fields via reflection in Java 
----------------------------------------

public static Field getField (Class < ? > clazz, String fieldName) {
    Class < ? > tmpClass = clazz;
    do {
        try {
            Field f = tmpClass.getDeclaredField (fieldName);
            return f;
        } catch (NoSuchFieldException e) {
            tmpClass = tmpClass.getSuperclass ();
        }
    } while (tmpClass != null);
    throw new RuntimeException ("Field '" + fieldName + "' not found on class " + clazz);
}
----------------------------------------

private static Field getField (Class < ? > clazz, String fieldName) {
    Class < ? > tmpClass = clazz;
    do {
        for (Field field : tmpClass.getDeclaredFields ()) {
            String candidateName = field.getName ();
            if (! candidateName.equals (fieldName)) {
                continue;
            }
            field.setAccessible (true);
            return field;
        }
        tmpClass = tmpClass.getSuperclass ();
    } while (clazz != null);
    throw new RuntimeException ("Field '" + fieldName + "' not found on class " + clazz);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35675051_35675174_16_25
35675051_35675174_1_14
Title: @Override Java Parent Class 
----------------------------------------

@Override
public boolean choiceOfItem () {
    if (super.choiceOfItem ()) return true;

    if (ryeBread) {
        this.Choice ("ryeBread");
        return true;
    }
    return false;
}
----------------------------------------

public boolean choiceOfItem () {
    if (bread) this.Choice ("bread");
    else if (meat) this.Choice ("meat");
    else if (lettuce) this.Choice ("lettuce");
    else if (tomato) this.Choice ("tomato");
    else if (carrot) this.Choice ("carrot");
    else return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35675404_35675464_7_26
35675404_35675482_2_10
Title: "Random number generator to array with no duplicates java" 
----------------------------------------

public static void main (String args []) {
    Random rand = new Random ();
    boolean generating = true;
    int counting = 0;
    while (generating) {
        int testNum = rand.nextInt (30) + 1;
        if (! list.contains (testNum)) {
            list.add (testNum);
            counting ++;
            System.out.println (testNum);
        }
        if (counting >= 20) {
            generating = false;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Integer [] arr = new Integer [20];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = i;
    }
    Collections.shuffle (Arrays.asList (arr));
    System.out.println (Arrays.toString (arr));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35679827_35680267_1_48
35679827_45243581_6_95
Title: How to display calendar in java 
----------------------------------------

public static void main (String [] args) {
    int Y = 2016;
    int startDayOfMonth = 5;
    int spaces = startSayOfMonth;
    String [] months = {"", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
    int [] days = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    for (int M = 1;
    M <= 12; M ++) {
        if ((((Y % 4 == 0) && (Y % 100 != 0)) || (Y % 400 == 0)) && M == 2) days [M] = 29;

        System.out.println ("          " + months [M] + " " + Y);
        System.out.println ("_____________________________________");
        System.out.println ("   Sun  Mon Tue   Wed Thu   Fri  Sat");
        spaces = (days [M - 1] + spaces) % 7;
        for (int i = 0;
        i < spaces; i ++) System.out.print ("     ");

        for (int i = 1;
        i <= days [M]; i ++) {
            System.out.printf (" %3d ", i);
            if (((i + spaces) % 7 == 0) || (i == days [M])) System.out.println ();

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a year: ");
    int year = input.nextInt ();
    System.out.println ("Enter the weekday that the year starts: ");
    int day = input.nextInt ();
    int dayCounter = day;
    int nbrOfDays = 0;
    String monthx = "";
    for (int month = 1;
    month <= 12; month ++) {
        switch (month) {
            case 1 :
                monthx = "January";
                nbrOfDays = 31;
                break;
            case 2 :
                monthx = "February";
                if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
                    nbrOfDays = 29;
                    break;
                } else {
                    nbrOfDays = 28;
                    break;
                }
            case 3 :
                monthx = "March";
                nbrOfDays = 31;
                break;
            case 4 :
                monthx = "April";
                nbrOfDays = 30;
                break;
            case 5 :
                monthx = "May";
                nbrOfDays = 31;
                break;
            case 6 :
                monthx = "June";
                nbrOfDays = 30;
                break;
            case 7 :
                monthx = "July";
                nbrOfDays = 31;
                break;
            case 8 :
                monthx = "August";
                nbrOfDays = 31;
                break;
            case 9 :
                monthx = "September";
                nbrOfDays = 30;
                break;
            case 10 :
                monthx = "October";
                nbrOfDays = 31;
                break;
            case 11 :
                monthx = "November";
                nbrOfDays = 30;
                break;
            case 12 :
                monthx = "December";
                nbrOfDays = 31;
                break;
        }
        System.out.printf ("%15s %d  \n", monthx, year);
        System.out.println ("----------------------------");
        System.out.printf ("%s %s %s %s %s %s %s\n ", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
        for (int space = 1;
        space <= day; space ++) {
            System.out.printf ("%4s", "    ");
        }
        for (int i = 1;
        i <= nbrOfDays; i ++) {
            dayCounter ++;
            if (dayCounter % 7 == 0) System.out.printf ("%- 4d\n", i);
            else System.out.printf ("%-4d", i);

        }
        day = (day + nbrOfDays) % 7;
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35681906_35682013_1_12
35681906_35682071_5_17
Title: Multiple the contents of the Nodes Linked List 
----------------------------------------

public void product (Node head) {
    if (head == null) return;

    Node next = head.getNext ();
    product (next);
    if (next != null) {
        int data = head.getData () * next.getData ();
        head.setData (data);
    }
}
----------------------------------------

public int product (Node head) {
    if (head == null) {
        return 1;
    } else {
        int data = head.getData () * product (head.getNext ());
        head.setData (data);
        return data;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35685068_35685184_1_13
35685068_35685561_1_11
Title: "Java - Need help in finding the shortest string of an array i'm close from what i see but i'm getting an error" 
----------------------------------------

public static String findShortest (String [] array) {
    String shortestSeen = "";
    int shortestLength = Integer.MAX_VALUE;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i].length () < shortestLength) {
            shortestSeen = array [i];
            shortestLength = shortestSeen.length ();
        }
    }
    return shortestSeen;
}
----------------------------------------

public static String findShortest (String [] array) {
    String shortestSeen = array [0];
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i].length () < array [0].length ()) {
            shortestSeen = array [i];
        }
    }
    return shortestSeen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35685164_35697260_6_53
35685164_35701885_1_25
Title: How to split different line into strings 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader buff = new BufferedReader (new FileReader ("C:\\Users\\Steel\\Desktop\\JAVA\\somme\\som.txt"));
    int somma_bin;
    int somma_hex;
    int i;
    String ciao = "9";
    String prova;
    while ((prova = buff.readLine ()) != null) {
        somma_bin = 0;
        somma_hex = 0;
        String bin [] = null;
        String hex [] = null;
        if (prova.contains ("|")) {
            bin = prova.split ("\\|") [1].split (" ");
            hex = prova.split ("\\|") [0].split (" ");
        } else {
            continue;
        }
        for (String str : bin) {
            if (str != null && ! str.isEmpty ()) {
                somma_bin += Integer.valueOf (str.trim (), 2);
            }
        }
        for (String str : hex) {
            if (str != null && ! str.isEmpty ()) {
                somma_hex += Integer.valueOf (str.trim (), 16);
            }
        }
        if (somma_bin == somma_hex) {
            System.out.println ("true");
        } else {
            System.out.println ("false");
        }
    }
}
----------------------------------------

public static void main (String [] a) throws Exception {
    List < String > list = new ArrayList < > ();
    list.add ("64 6e 78 | 100101100 11110");
    list.add ("5e 7d 59 | 1101100 10010101 1100111");
    list.add ("93 75 | 1000111 1011010 1100010");
    for (String line : list) {
        String splits [] = line.split ("\\|");
        int hexTotal = Arrays.stream (splits [0].split (" ")).mapToInt (v -> {
            if (v.length () == 0) return 0;
            else return Integer.parseInt (v, 16);

        }).sum ();
        int binTotal = Arrays.stream (splits [1].split (" ")).mapToInt (v -> {
            if (v.length () == 0) return 0;
            else return Integer.parseInt (v, 2);

        }).sum ();
        System.out.println (hexTotal <= binTotal);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35693546_35694301_34_50
35693546_35694301_9_29
Title: Make even and odd threads to print numbers in natural order in Java 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i = i + 2) {
        try {
            synchronized (obj) {
                obj.wait ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        System.out.println (i);
        synchronized (obj) {
            obj.notifyAll ();
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10; i = i + 2) {
        System.out.println (i);
        synchronized (obj) {
            obj.notify ();
        }
        synchronized (obj) {
            try {
                obj.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35695027_35695718_3_37
35695027_35695733_5_36
Title: Error in 2D Array Division Code? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    Random rand = new Random ();
    int [] [] strings = new int [4] [4];
    for (int i = 0;
    i < strings.length; i ++) {
        for (int j = 0;
        j < strings [i].length; j ++) {
            strings [i] [j] = rand.nextInt ();
        }
    }
    int count = 0;
    int comparable = keyboard.nextInt ();
    for (int i = 0;
    i < strings.length; i ++) {
        for (int j = 0;
        j < strings [i].length; j ++) {
            if (strings [i] [j] % comparable == 0) {
                count ++;
                System.out.println ("Found a number!");
            }
        }
    }
    System.out.println ("Number of total divisible inputted numbers: " + "(" + count + ")");
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    Random rand = new Random ();
    int [] [] strings = new int [4] [4];
    int input = 0;
    System.out.println ("Please enter the 16 numbers to be checked for division!");
    input = keyboard.nextInt ();
    for (int i = 0;
    i < strings.length; i ++) {
        for (int j = 0;
        j < strings [i].length; j ++) {
            strings [i] [j] = 1 + rand.nextInt (100);
        }
    }
    int count = 0;
    for (int i = 0;
    i < strings.length; i ++) {
        for (int j = 0;
        j < strings [i].length; j ++) {
            if (input != 0 && strings [i] [j] % input == 0) count ++;

        }
    }
    System.out.println ("Number of total divisible inputted numbers: " + "(" + count + ")");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35714257_35714415_63_89
35714257_35714415_69_78
Title: I don't know how to display timer when stopped 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (timer == null) {
        button.setText ("Stop");
        startedAt = System.currentTimeMillis ();
        timer = new Timer (500, new ActionListener () {
            @Override
            public void actionPerformed (ActionEvent e) {
                long diff = System.currentTimeMillis () - startedAt;
                if (diff >= RUN_TIME) {
                    label.setText ("Out of time; Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
                    timer.stop ();
                    button.setText ("Start");
                } else {
                    label.setText ("Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
                }
            }}

        );
        label.setText ("Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
        timer.start ();
    } else {
        timer.stop ();
        long diff = System.currentTimeMillis () - startedAt;
        label.setText ("Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
        button.setText ("Start");
        timer = null;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    long diff = System.currentTimeMillis () - startedAt;
    if (diff >= RUN_TIME) {
        label.setText ("Out of time; Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
        timer.stop ();
        button.setText ("Start");
    } else {
        label.setText ("Used: " + remainingTime () + "s; remaining " + usedTime () + "s");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3571814_4361149_1_13
3571814_4364541_1_12
Title: Accessing the Android media stream for audio visualization 
----------------------------------------

public static int snoop (short [] outData, int kind) {
    try {
        Class c = MediaPlayer.class;
        Method m = c.getMethod ("snoop", outData.getClass (), Integer.TYPE);
        m.setAccessible (true);
        m.invoke (c, outData, kind);
        return 0;
    } catch (Exception e) {
        e.printStackTrace ();
        return 1;
    }
}
----------------------------------------

public static int snoop (short [] outData, int kind) {
    try {
        Class c = MediaPlayer.class;
        Method m = c.getMethod ("snoop", outData.getClass (), Integer.TYPE);
        m.setAccessible (true);
        return Integer.parseInt ((m.invoke (c, outData, kind)).toString ());
    } catch (Exception e) {
        e.printStackTrace ();
        return 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3572160_3572262_1_18
3572160_3572276_1_11
Title: How to handle infinite loop caused by invalid input (InputMismatchException) using Scanner 
----------------------------------------

public int readInt (String msg) {
    int num = 0;
    boolean loop = true;
    while (loop) {
        try {
            System.out.println (msg);
            String line = reader.nextLine ();
            Scanner sc = new Scanner (line);
            num = sc.nextInt ();
            loop = false;
        } catch (InputMismatchException e) {
            System.out.println ("Invalid value!");
        }
    }
    return num;
}
----------------------------------------

public int readInt (String msg) {
    int num = 0;
    try {
        System.out.println (msg);
        num = (new Scanner (System.in)).nextInt ();
    } catch (InputMismatchException e) {
        System.out.println ("Invalid value!");
        num = readInt (msg);
    }
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35727920_35728088_1_15
35727920_35728440_1_28
Title: Updating Values in Map on the basis of other map in Java 
----------------------------------------

public static void main (String [] args) {
    Map < String, String > map1 = new HashMap < > ();
    map1.put ("k1", "v1");
    map1.put ("k2", "v2");
    map1.put ("k3", "v3");
    Map < String, String > map2 = new HashMap < > ();
    map2.put ("v1", "val1");
    map2.put ("v2", "val2");
    map2.put ("v3", "val3");
    map1.replaceAll ((k, v) -> map2.get (v));
    System.out.println (map1);
}
----------------------------------------

public static void main (String [] args) {
    Map < String, String > map1 = new HashMap < > ();
    final Map < String, String > map2 = new HashMap < > ();
    for (int i = 0;
    i < 100000; i ++) {
        map1.put ("k" + i, "v" + i);
        map2.put ("v" + i, "val" + i);
    }
    long time;
    long prev_time = System.currentTimeMillis ();
    for (Map.Entry < String, String > entry : map1.entrySet ()) {
        map1.put (entry.getKey (), map2.get (entry.getValue ()));
    }
    time = System.currentTimeMillis () - prev_time;
    System.out.println ("Time after for loop " + time);
    map1 = new HashMap < > ();
    for (int i = 0;
    i < 100000; i ++) {
        map1.put ("k" + i, "v" + i);
    }
    prev_time = System.currentTimeMillis ();
    map1.replaceAll ((k, v) -> map2.get (v));
    time = System.currentTimeMillis () - prev_time;
    System.out.println ("Time after for loop " + time);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35761636_40250753_22_57
35761636_52165190_24_85
Title: Is it possible to use VectorDrawable in Buttons and TextViews using android:DrawableRight? 
----------------------------------------

void initAttrs (Context context, AttributeSet attrs) {
    if (attrs != null) {
        TypedArray attributeArray = context.obtainStyledAttributes (attrs, R.styleable.CustomTextView);
        Drawable drawableStart = null;
        Drawable drawableEnd = null;
        Drawable drawableBottom = null;
        Drawable drawableTop = null;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            drawableStart = attributeArray.getDrawable (R.styleable.CustomTextView_drawableStartCompat);
            drawableEnd = attributeArray.getDrawable (R.styleable.CustomTextView_drawableEndCompat);
            drawableBottom = attributeArray.getDrawable (R.styleable.CustomTextView_drawableBottomCompat);
            drawableTop = attributeArray.getDrawable (R.styleable.CustomTextView_drawableTopCompat);
        } else {
            final int drawableStartId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableStartCompat, - 1);
            final int drawableEndId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableEndCompat, - 1);
            final int drawableBottomId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableBottomCompat, - 1);
            final int drawableTopId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableTopCompat, - 1);
            if (drawableStartId != - 1) drawableStart = AppCompatResources.getDrawable (context, drawableStartId);

            if (drawableEndId != - 1) drawableEnd = AppCompatResources.getDrawable (context, drawableEndId);

            if (drawableBottomId != - 1) drawableBottom = AppCompatResources.getDrawable (context, drawableBottomId);

            if (drawableTopId != - 1) drawableTop = AppCompatResources.getDrawable (context, drawableTopId);

        }
        setCompoundDrawablesRelativeWithIntrinsicBounds (drawableStart, drawableTop, drawableEnd, drawableBottom);
        attributeArray.recycle ();
    }
}
----------------------------------------

void initAttrs (Context context, AttributeSet attrs) {
    if (attrs == null) {
        return;
    }
    Drawable [] drawablesArr = getCompoundDrawables ();
    TypedArray attributeArray = context.obtainStyledAttributes (attrs, R.styleable.CustomTextView);
    Drawable drawableStart = null;
    Drawable drawableEnd = null;
    Drawable drawableBottom = null;
    Drawable drawableTop = null;
    Drawable drawableLeft = null;
    Drawable drawableRight = null;
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
        drawableStart = attributeArray.getDrawable (R.styleable.CustomTextView_drawableStartCompat);
        drawableEnd = attributeArray.getDrawable (R.styleable.CustomTextView_drawableEndCompat);
        drawableBottom = attributeArray.getDrawable (R.styleable.CustomTextView_drawableBottomCompat);
        drawableTop = attributeArray.getDrawable (R.styleable.CustomTextView_drawableTopCompat);
        drawableLeft = attributeArray.getDrawable (R.styleable.CustomTextView_drawableLeftCompat);
        drawableRight = attributeArray.getDrawable (R.styleable.CustomTextView_drawableRightCompat);
    } else {
        final int drawableStartId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableStartCompat, NOT_SET);
        final int drawableEndId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableEndCompat, NOT_SET);
        final int drawableBottomId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableBottomCompat, NOT_SET);
        final int drawableTopId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableTopCompat, NOT_SET);
        final int drawableLeftId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableLeftCompat, NOT_SET);
        final int drawableRightId = attributeArray.getResourceId (R.styleable.CustomTextView_drawableRightCompat, NOT_SET);
        if (drawableStartId != NOT_SET) drawableStart = AppCompatResources.getDrawable (context, drawableStartId);

        if (drawableLeftId != NOT_SET) drawableLeft = AppCompatResources.getDrawable (context, drawableLeftId);

        if (drawableEndId != NOT_SET) drawableEnd = AppCompatResources.getDrawable (context, drawableEndId);

        if (drawableRightId != NOT_SET) drawableRight = AppCompatResources.getDrawable (context, drawableRightId);

        if (drawableBottomId != NOT_SET) drawableBottom = AppCompatResources.getDrawable (context, drawableBottomId);

        if (drawableTopId != NOT_SET) drawableTop = AppCompatResources.getDrawable (context, drawableTopId);

    }
    drawableStart = (drawableStart != null ? drawableStart : drawablesArr [START]);
    drawableLeft = (drawableLeft != null ? drawableLeft : drawablesArr [LEFT]);
    drawableStart = (drawableStart != null ? drawableStart : drawableLeft);
    drawableEnd = (drawableEnd != null ? drawableEnd : drawablesArr [END]);
    drawableRight = (drawableRight != null ? drawableRight : drawablesArr [RIGHT]);
    drawableEnd = (drawableEnd != null ? drawableEnd : drawableRight);
    drawableBottom = (drawableBottom != null ? drawableBottom : drawablesArr [BOTTOM]);
    drawableTop = (drawableTop != null ? drawableTop : drawablesArr [TOP]);
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
        setCompoundDrawablesRelativeWithIntrinsicBounds (drawableStart, drawableTop, drawableEnd, drawableBottom);
    } else {
        setCompoundDrawables (drawableStart, drawableTop, drawableEnd, drawableBottom);
    }
    attributeArray.recycle ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35763911_35764485_104_125
35763911_35764485_70_82
Title: Why can't I retrieve my buttons when I run my program? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        remove (pane);
        pane = null;
    }
    try (InputStream is = new FileInputStream (new File ("Save.dat"))) {
        try (XMLDecoder decoder = new XMLDecoder (is)) {
            Object value = decoder.readObject ();
            if (value instanceof RandomButtonPane) {
                pane = (RandomButtonPane) value;
                pane.revalidate ();
                add (pane);
            }
        }
    } catch (IOException exp) {
        exp.printStackTrace ();
    }
    Window window = SwingUtilities.windowForComponent (TestPane.this);
    window.pack ();
    window.setLocationRelativeTo (null);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        remove (pane);
    }
    pane = new RandomButtonPane ();
    pane.randomise ();
    add (pane);
    Window window = SwingUtilities.windowForComponent (TestPane.this);
    window.pack ();
    window.setLocationRelativeTo (null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35763911_35764485_104_125
35763911_35764485_87_99
Title: Why can't I retrieve my buttons when I run my program? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        remove (pane);
        pane = null;
    }
    try (InputStream is = new FileInputStream (new File ("Save.dat"))) {
        try (XMLDecoder decoder = new XMLDecoder (is)) {
            Object value = decoder.readObject ();
            if (value instanceof RandomButtonPane) {
                pane = (RandomButtonPane) value;
                pane.revalidate ();
                add (pane);
            }
        }
    } catch (IOException exp) {
        exp.printStackTrace ();
    }
    Window window = SwingUtilities.windowForComponent (TestPane.this);
    window.pack ();
    window.setLocationRelativeTo (null);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        try (OutputStream os = new FileOutputStream (new File ("Save.dat"))) {
            try (XMLEncoder encoder = new XMLEncoder (os)) {
                encoder.writeObject (pane);
                remove (pane);
                pane = null;
            }
        } catch (IOException exp) {
            exp.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35763911_35764485_70_82
35763911_35764485_87_99
Title: Why can't I retrieve my buttons when I run my program? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        remove (pane);
    }
    pane = new RandomButtonPane ();
    pane.randomise ();
    add (pane);
    Window window = SwingUtilities.windowForComponent (TestPane.this);
    window.pack ();
    window.setLocationRelativeTo (null);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (pane != null) {
        try (OutputStream os = new FileOutputStream (new File ("Save.dat"))) {
            try (XMLEncoder encoder = new XMLEncoder (os)) {
                encoder.writeObject (pane);
                remove (pane);
                pane = null;
            }
        } catch (IOException exp) {
            exp.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35766017_35766191_1_15
35766017_35768010_3_27
Title: Using java How to print all values entered by user as soon as user stops entering values 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    List list = new ArrayList ();
    String tmp = "";
    while (true) {
        tmp = input.nextLine ();
        if (tmp.length () > 0) list.add (tmp);
        else break;

    }
    System.out.println (Arrays.toString (list.toArray ()));
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    ArrayList < Integer > list1 = new ArrayList < Integer > ();
    HashMap < Integer, Integer > dic = new HashMap < Integer, Integer > ();
    HashMap < Integer, Integer > dic1 = new HashMap < Integer, Integer > ();
    try {
        String input = "";
        while (in != null && ! ((input = in.nextLine ()).equals (""))) {
            Scanner parse = new Scanner (input);
            dic.put (parse.nextInt (), parse.nextInt ());
        }
    } catch (Exception e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3576754_17893381_1_26
3576754_3576835_4_19
Title: Truncating Strings by Bytes 
----------------------------------------

public String cut (String s, int charLimit) throws UnsupportedEncodingException {
    byte [] utf8 = s.getBytes ("UTF-8");
    if (utf8.length <= charLimit) {
        return s;
    }
    int n16 = 0;
    boolean extraLong = false;
    int i = 0;
    while (i < charLimit) {
        extraLong = ((utf8 [i] & 0xF0) == 0xF0);
        if ((utf8 [i] & 0x80) == 0) {
            i += 1;
        } else {
            int b = utf8 [i];
            while ((b & 0x80) > 0) {
                ++ i;
                b = b << 1;
            }
        }
        if (i <= charLimit) {
            n16 += (extraLong) ? 2 : 1;
        }
    }
    return s.substring (0, n16);
}
----------------------------------------

public static String cut (String s, int n) {
    byte [] utf8 = s.getBytes ();
    if (utf8.length < n) n = utf8.length;

    int n16 = 0;
    int advance = 1;
    int i = 0;
    while (i < n) {
        advance = 1;
        if ((utf8 [i] & 0x80) == 0) i += 1;
        else if ((utf8 [i] & 0xE0) == 0xC0) i += 2;
        else if ((utf8 [i] & 0xF0) == 0xE0) i += 3;
        else {
            i += 4;
            advance = 2;
        }

        if (i <= n) n16 += advance;

    }
    return s.substring (0, n16);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3576754_28359630_1_12
3576754_3588370_1_10
Title: Truncating Strings by Bytes 
----------------------------------------

public static String substring (String s, int byteLimit) {
    if (s.getBytes ().length <= byteLimit) {
        return s;
    }
    int n = Math.min (byteLimit - 1, s.length () - 1);
    do {
        s = s.substring (0, n --);
    } while (s.getBytes ().length > byteLimit);
    return s;
}
----------------------------------------

public static String substring (String text, int maxBytes) {
    StringBuilder ret = new StringBuilder ();
    for (int i = 0;
    i < text.length (); i ++) {
        if ((maxBytes -= text.substring (i, i + 1).getBytes ().length) < 0) break;

        ret.append (text.charAt (i));
    }
    return ret.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35769435_40026115_5_16
35769435_46990706_4_16
Title: .nextLine() method does not take subsequent String inputs 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int i = sc.nextInt ();
    sc.nextLine ();
    double d = sc.nextDouble ();
    sc.nextLine ();
    String s = sc.nextLine ();
    System.out.println ("String: " + s);
    System.out.println ("Double: " + d);
    System.out.println ("Int: " + i);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int i = scan.nextInt ();
    double d = scan.nextDouble ();
    scan.nextLine ();
    String s = scan.nextLine ();
    System.out.println ("String: " + s);
    System.out.println ("Double: " + d);
    System.out.println ("Int: " + i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35780278_35780440_1_22
35780278_35780594_1_38
Title: Making a table in Java using loops 
----------------------------------------

public static void main (String [] args) {
    int angles = 15;
    double cosines = 4;
    int meters = 15;
    for (int i = 1;
    i <= 78; i ++) {
        System.out.print (i);
        System.out.print ('|');
        System.out.print (angles);
        angles += 5;
        if (angles > 75) {
            angles = 15;
        }
        System.out.print ('|');
        System.out.print (meters);
        meters += 3;
        if (meters > 30) {
            meters = 15;
        }
        System.out.println ("|4|");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] table = new int [4] [78];
    int angles = 10;
    double cosines = 4;
    int meters = 12;
    int line = 0;
    for (int i = 1;
    i <= 78; i ++) {
        table [0] [line] = i;
        line ++;
    }
    line = 0;
    for (int j = 1;
    j <= 6; j ++) for (angles = 10; angles < 75;) {
        angles += 5;
        table [1] [line] = angles;
        line ++;
    }

    line = 0;
    for (int j = 1;
    j <= 13; j ++) for (meters = 12; meters < 30;) {
        meters += 3;
        table [2] [line] = meters;
        table [3] [line] = 4;
        line ++;
    }

    for (line = 0; line < 78; line ++) {
        System.out.print (table [0] [line]);
        for (int column = 1;
        column < 4; column ++) {
            System.out.print ("|" + table [column] [line]);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35783215_35783559_1_15
35783215_35783764_1_22
Title: exponents without math.pow using for loop (in java) 
----------------------------------------

public static double mathPower (double a, int b) {
    double result = 1;
    if (b < 0) {
        a = 1.0 / a;
        b = - b;
    }
    for (int i = 0;
    i < b; i ++) {
        result = result * a;
    }
    return result;
}
----------------------------------------

public static double mathPower (double a, int b) {
    double result = 1.0;
    if (b == 0) {
        result = 1.0;
    }
    if (b < 0) {
        a = (1.0 / a);
        b = - b;
    }
    for (int i = 0;
    i < b; i ++) {
        result = result * a;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35787303_35787382_1_41
35787303_35787456_7_33
Title: Simple Java Method? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    HashSet < Integer > hs = new HashSet < > ();
    int GuessLogic = (int) (Math.random () * 10 + 1);
    int guess;
    int NumGuess = 0;
    do {
        System.out.print ("Enter a guess: ");
        guess = keyboard.nextInt ();
        NumGuess ++;
        if (hs.contains (guess)) {
            System.out.println ("You have already entered this number");
            continue;
        }
        if (guess < 0 || guess > 10) {
            System.out.println ("Your guess is out of the specified range. Please try again.");
            continue;
        }
        System.out.println ("Your guess is " + guess);
        if (guess == GuessLogic) {
            System.out.println ("You got it right!! Congrats!! Total Number of Guesses: " + NumGuess);
            return;
        } else if (guess < GuessLogic) {
            System.out.println ("You are wrong!!! Hint: Guess Higher, Guess number: " + NumGuess);
        } else if (guess > GuessLogic) {
            System.out.println ("You are wrong!!! Hint: Guess Lower, Guess number: " + NumGuess);
        }

        hs.add (guess);
    } while (true);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > guesses = new ArrayList < > ();
    int GuessLogic;
    GuessLogic = (int) (Math.random () * 10 + 1);
    Scanner keyboard = new Scanner (System.in);
    int guess;
    int NumGuess;
    NumGuess = 1;
    do {
        System.out.print ("Enter a guess: ");
        guess = keyboard.nextInt ();
        if (guesses.contains (guess)) {
            System.out.println ("You have already entered this number");
            continue;
        }
        guesses.add (guess);
        System.out.println ("Your guess is " + guess);
        if (guess == GuessLogic) System.out.println ("You got it right!! Congrats!! Total Number of Guesses: " + NumGuess ++);
        else if (guess < GuessLogic && guess > 0) System.out.println ("You are wrong!!! Hint: Guess Higher, Guess number: " + NumGuess ++);
        else if (guess > GuessLogic && guess <= 10) System.out.println ("You are wrong!!! Hint: Guess Lower, Guess number: " + NumGuess ++);
        else System.out.println ("Your guess is out of the specified range. Please try again.");

    } while (guess != GuessLogic);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35787444_35787510_5_27
35787444_35787551_7_25
Title: How to compare user input in array? 
----------------------------------------

public static void main (String args []) {
    int num = 0;
    Scanner input = new Scanner (System.in);
    for (int count = 0;
    count < enterednum.length; count ++) {
        System.out.println ("Enter a number.");
        num = input.nextInt ();
        compare (num, count);
        enterednum [count] = num;
    }
    System.out.println ("These are the number you have entered: ");
    for (int count = 0;
    count < enterednum.length; count ++) {
        System.out.println (enterednum [count]);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    Set < Integer > numbers = new HashSet < > ();
    for (int i = 0;
    i < 5; i ++) {
        System.out.print ("Enter a number: ");
        String line = in.readLine ();
        int intValue = Integer.parseInt (line);
        if (numbers.contains (intValue)) {
            System.out.println ("You have entered " + intValue + " before");
        } else {
            numbers.add (intValue);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35803829_35803950_1_11
35803829_35806927_1_11
Title: How do you make a button from second activity open a third activity? 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.fifth_layout);
    Button button = (Button) findViewById (R.id.button);
    button.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            startActivity (new Intent (this, ThirdActivity.class));
        }}

    );
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.fifth_layout);
    Button button = (Button) findViewById (R.id.button);
    button.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            startActivity (new Intent (this, ThirdActivity.class));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35805495_35805547_1_10
35805495_35805551_1_14
Title: Java: Check equality of two arrays based on user input 
----------------------------------------

boolean equal (char [] t, char [] s, int n) {
    if (s.length <= n || t.length <= n) {
        throw new IllegalArgumentException ("...");
    }
    for (int i = 0;
    i < n; ++ i) {
        if (s [i] != t [i]) return false;

    }
    return true;
}
----------------------------------------

public boolean equal (char [] s, char [] t, int n) {
    for (int i = 0;
    i < n; i ++) {
        if (s [i] != t [i]) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35812586_35816008_17_27
35812586_35816008_28_42
Title: Converting vectors to matrix 
----------------------------------------

public Matrix (int length) {
    this.matrix = new double [length] [length];
    for (int i = 0;
    i < length; i ++) {
        for (int j = 0;
        j < length; j ++) {
            if (i == j) this.matrix [i] [j] = 1;
            else this.matrix [i] [j] = 0;

        }
    }
}
----------------------------------------

public Matrix (int type, Vector...vectors) {
    if (type == 1) this.matrix = new double [vectors.length] [vectors [0].length ()];
    else this.matrix = new double [vectors [0].length ()] [vectors.length];

    for (int i = 0;
    i < vectors.length; i ++) {
        for (int j = 0;
        j < vectors [i].length (); j ++) {
            if (type == 1) this.matrix [i] [j] = vectors [i].get (j);
            else this.matrix [j] [i] = vectors [i].get (j);

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35817843_35817878_1_10
35817843_35817887_1_11
Title: Comparing elements of two arrays 
----------------------------------------

public static boolean allLess (int [] a, int [] b) {
    boolean sameLength = (a.length == b.length);
    if (! sameLength) return false;

    boolean digitDifference = true;
    for (int i = 0;
    i <= a.length - 1 && digitDifference; i ++) {
        digitDifference = (a [i] < b [i]);
    }
    return digitDifference;
}
----------------------------------------

public static boolean allLess (int [] a, int [] b) {
    if (a.length != b.length) {
        return false;
    }
    for (i = 0; i <= a.length - 1; i ++) {
        if (a [i] >= b [i]) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35819598_35819710_1_10
35819598_35819745_1_13
Title: "pack() method of JFrame doesn't work (javaubuntu)" 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel ();
    JLabel label1 = new JLabel ("");
    panel.add (label1);
    frame.add (panel);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("test");
    JPanel panel = new JPanel ();
    JLabel label1 = new JLabel ("");
    Color darkBlue = new Color (8, 40, 94);
    panel.setPreferredSize (new Dimension (1000, 500));
    panel.setBackground (darkBlue);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().add (panel);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35823599_35823670_1_15
35823599_35824081_10_47
Title: Tokenizing data from textfile 
----------------------------------------

public static void readFile () {
    try {
        List < String > tokens = new ArrayList < > ();
        Scanner scanner;
        scanner = new Scanner (new File ("test.txt"));
        scanner.useDelimiter (",|\r\n");
        while (scanner.hasNext ()) {
            tokens.add (scanner.next ());
            System.out.println (tokens);
        }
    } catch (FileNotFoundException ex) {
        Logger.getLogger (MaxByTest.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

public static List < String > readFile (String fileName) {
    FileInputStream fileStrm = null;
    InputStreamReader reader = null;
    BufferedReader buffReader = null;
    List < String > tokens = null;
    try {
        fileStrm = new FileInputStream (fileName);
        reader = new InputStreamReader (fileStrm);
        buffReader = new BufferedReader (reader);
        String line;
        tokens = new ArrayList < String > ();
        line = buffReader.readLine ();
        while (line != null) {
            tokens.add (line);
            line = buffReader.readLine ();
        }
    } catch (IOException e) {
        if (fileStrm != null) {
            try {
                fileStrm.close ();
            } catch (IOException e2) {
            }
        }
    }
    return tokens;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35827638_35827801_1_10
35827638_35827817_1_11
Title: deleteNode have problems 
----------------------------------------

private void deleteNode (ListNode node, int data) {
    while (node != null && node.data != data) {
        node = node.next;
    }
    if (node != null) {
        System.out.println ("Deleted Node With Data: " + node.data);
        node = node.next;
    }
}
----------------------------------------

public ListNode deleteNode (ListNode start, ListNode deleteMe) {
    ListNode prev = start;
    if (start == deleteMe) return start.next;

    while (prev.next != null) {
        if (prev.next == deleteMe) deleteNextNode (prev);

        prev = prev.next;
    }
    return start;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35828800_35828911_1_18
35828800_35828947_8_22
Title: Creating checkerboard pattern 
----------------------------------------

public static void printCheckerBoard (int height, int width) {
    String pn1 = "";
    String pn2 = "";
    for (int j = 0;
    j < width; j ++) {
        if (j % 2 == 0) {
            pn1 += '#';
            pn2 += '0';
        } else {
            pn1 += '0';
            pn2 += '#';
        }
    }
    for (int i = 0;
    i < height; i ++) {
        System.out.println (i % 2 == 0 ? pn1 : pn2);
    }
}
----------------------------------------

public static void printCheckerBoard (int rows, int cols) {
    System.out.println ("Rows: " + rows + " and Columns: " + cols);
    for (int i = 1;
    i <= rows; i ++) {
        System.out.print ("\t");
        for (int j = 1;
        j <= cols; j ++) if ((i % 2 == 1 && j % 2 == 1) || (i % 2 == 0 && j % 2 == 0)) System.out.print ("#");
        else System.out.print (" ");

        System.out.println ();
    }
    System.out.println ("----------------------------");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35831807_35831905_1_16
35831807_35855613_1_50
Title: Compare values in an object to the ones of a parameter 
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (obj instanceof Airport) {
        if (this.airportCode.equals (((Airport) obj).getAirportCode ())) {
            String [] gs = ((Airport) obj).getGates ();
            Arrays.sort (gates);
            Arrays.sort (gs);
            return gatesAreEqual;
        } else {
            return false;
        }
    } else {
        return false;
    }
}
----------------------------------------

@Override
public boolean equals (Object other) {
    if (other == null) return false;

    if (this == other) return true;

    if (! (other instanceof Airport)) return false;

    Airport port = (Airport) other;
    if (airportCode == null) {
        if (port.airportCode != null) return false;

    }
    if (! port.airportCode.equals (airportCode)) return false;

    Object [] otherGates = port.gates;
    Arrays.sort (gates);
    Arrays.sort (otherGates);
    return Arrays.equals (gates, otherGates);
    List < ? > otherGates = port.gates;
    Comparator < ? > c = null;
    gates.sort (c);
    otherGates.sort (c);
    return gates.equals (otherGates);
    Gates otherGates = port.gates;
    return gates.equals (otherGates);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35835986_35836840_5_32
35835986_35837063_30_50
Title: I can not figure it out 
----------------------------------------

public static void main (String [] args) {
    @SuppressWarnings ("resource")
    Scanner scanner = new Scanner (System.in);
    int [] frequency = new int [50];
    System.out.println ("Input: ");
    for (int i = 0;
    i < 51; i ++) {
        Integer num = scanner.nextInt ();
        if (num > 0 && num <= 50) frequency [num] = frequency [num] + 1;

        if (num == 0) break;

    }
    System.out.printf ("%s%10s%n", "Number", "Frequency");
    for (int number = 1;
    number < frequency.length; number ++) System.out.printf ("%6d%10d%n", number, frequency [number]);

}
----------------------------------------

public static void main (String [] args) {
    int totalInputs = 50;
    int numIntsLoaded = 0;
    int input = - 1;
    Scanner keyboard = new Scanner (System.in);
    Countingintegers counter = new Countingintegers (1, 50);
    while (numIntsLoaded < totalInputs && input != 0) {
        System.out.println ("Input a number between 1-50, or 0 to exit (" + (totalInputs - numIntsLoaded) + " to go):");
        try {
            input = keyboard.nextInt ();
            counter.addInt (input);
            numIntsLoaded ++;
        } catch (Exception e) {
            System.out.println ("You entered an invalid input. Please try again!");
            keyboard.nextLine ();
        }
    }
    counter.printCounts ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35840135_35844141_104_121
35840135_35844141_126_159
Title: JavaFX TableView cell set value later 
----------------------------------------

public TableCell < String, String > call (TableColumn < String, String > param) {
    TableCell < String, String > cell = new TableCell < String, String > () {
        public void updateItem (String item, boolean empty) {
            if (item != null) {
                Label label = new Label ();
                label.setText (item);
                label.setPrefHeight (40);
                label.setTextAlignment (TextAlignment.CENTER);
                label.setWrapText (wrap);
                setGraphic (label);
            }
        }}

    ;
    return cell;
}
----------------------------------------

public TableCell < Boolean, Boolean > call (TableColumn < Boolean, Boolean > param) {
    AnchorPane pane = new AnchorPane ();
    ImageView imageView = new ImageView ();
    imageView.setFitWidth (20);
    imageView.setY (10);
    imageView.setPreserveRatio (true);
    imageView.setSmooth (true);
    imageView.setCursor (Cursor.HAND);
    TableCell < Boolean, Boolean > cell = new TableCell < Boolean, Boolean > () {
        public void updateItem (Boolean item, boolean empty) {
            if (item != null) {
                Image image = new Image (Main.class.getResourceAsStream ("/cross.png"));
                imageView.setImage (image);
            }
        }}

    ;
    imageView.setOnMouseClicked ((Event event) -> {
        TableView table = (TableView) ((ImageView) event.getSource ()).getParent ().getParent ().getParent ().getParent ().getParent ().getParent ().getParent ();
        ColumnCellValue row = (ColumnCellValue) (table).getSelectionModel ().getSelectedItem ();
        Controller.localJson.remove (row.getUrl ().toString ());
        table.getItems ().remove (row);
        table.refresh ();
    });
    pane.getChildren ().add (imageView);
    cell.setGraphic (pane);
    return cell;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35840135_35844141_104_121
35840135_35844141_64_93
Title: JavaFX TableView cell set value later 
----------------------------------------

public TableCell < String, String > call (TableColumn < String, String > param) {
    TableCell < String, String > cell = new TableCell < String, String > () {
        public void updateItem (String item, boolean empty) {
            if (item != null) {
                Label label = new Label ();
                label.setText (item);
                label.setPrefHeight (40);
                label.setTextAlignment (TextAlignment.CENTER);
                label.setWrapText (wrap);
                setGraphic (label);
            }
        }}

    ;
    return cell;
}
----------------------------------------

public TableCell < Boolean, Boolean > call (TableColumn < Boolean, Boolean > param) {
    AnchorPane pane = new AnchorPane ();
    ImageView imageView = new ImageView ();
    imageView.setFitWidth (30);
    imageView.setY (5);
    imageView.setPreserveRatio (true);
    imageView.setSmooth (true);
    TableCell < Boolean, Boolean > cell = new TableCell < Boolean, Boolean > () {
        public void updateItem (Boolean item, boolean empty) {
            if (item != null) {
                Image image;
                if (item) {
                    image = new Image (Main.class.getResourceAsStream ("/hourglass.gif"));
                } else {
                    image = new Image (Main.class.getResourceAsStream ("/clean.gif"));
                }
                imageView.setImage (image);
            }
        }}

    ;
    pane.getChildren ().add (imageView);
    cell.setGraphic (pane);
    return cell;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35840135_35844141_106_117
35840135_35844141_74_86
Title: JavaFX TableView cell set value later 
----------------------------------------

public void updateItem (String item, boolean empty) {
    if (item != null) {
        Label label = new Label ();
        label.setText (item);
        label.setPrefHeight (40);
        label.setTextAlignment (TextAlignment.CENTER);
        label.setWrapText (wrap);
        setGraphic (label);
    }
}
----------------------------------------

public void updateItem (Boolean item, boolean empty) {
    if (item != null) {
        Image image;
        if (item) {
            image = new Image (Main.class.getResourceAsStream ("/hourglass.gif"));
        } else {
            image = new Image (Main.class.getResourceAsStream ("/clean.gif"));
        }
        imageView.setImage (image);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35840135_35844141_126_159
35840135_35844141_64_93
Title: JavaFX TableView cell set value later 
----------------------------------------

public TableCell < Boolean, Boolean > call (TableColumn < Boolean, Boolean > param) {
    AnchorPane pane = new AnchorPane ();
    ImageView imageView = new ImageView ();
    imageView.setFitWidth (20);
    imageView.setY (10);
    imageView.setPreserveRatio (true);
    imageView.setSmooth (true);
    imageView.setCursor (Cursor.HAND);
    TableCell < Boolean, Boolean > cell = new TableCell < Boolean, Boolean > () {
        public void updateItem (Boolean item, boolean empty) {
            if (item != null) {
                Image image = new Image (Main.class.getResourceAsStream ("/cross.png"));
                imageView.setImage (image);
            }
        }}

    ;
    imageView.setOnMouseClicked ((Event event) -> {
        TableView table = (TableView) ((ImageView) event.getSource ()).getParent ().getParent ().getParent ().getParent ().getParent ().getParent ().getParent ();
        ColumnCellValue row = (ColumnCellValue) (table).getSelectionModel ().getSelectedItem ();
        Controller.localJson.remove (row.getUrl ().toString ());
        table.getItems ().remove (row);
        table.refresh ();
    });
    pane.getChildren ().add (imageView);
    cell.setGraphic (pane);
    return cell;
}
----------------------------------------

public TableCell < Boolean, Boolean > call (TableColumn < Boolean, Boolean > param) {
    AnchorPane pane = new AnchorPane ();
    ImageView imageView = new ImageView ();
    imageView.setFitWidth (30);
    imageView.setY (5);
    imageView.setPreserveRatio (true);
    imageView.setSmooth (true);
    TableCell < Boolean, Boolean > cell = new TableCell < Boolean, Boolean > () {
        public void updateItem (Boolean item, boolean empty) {
            if (item != null) {
                Image image;
                if (item) {
                    image = new Image (Main.class.getResourceAsStream ("/hourglass.gif"));
                } else {
                    image = new Image (Main.class.getResourceAsStream ("/clean.gif"));
                }
                imageView.setImage (image);
            }
        }}

    ;
    pane.getChildren ().add (imageView);
    cell.setGraphic (pane);
    return cell;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3584263_3584345_11_29
3584263_3587482_12_35
Title: How to disable the automatic HTML support of JLabel? 
----------------------------------------

public static void main (String [] args) {
    JFrame.setDefaultLookAndFeelDecorated (true);
    JFrame frame = new JFrame ("JList Test");
    frame.setLayout (new FlowLayout ());
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    String [] selections = {"<html><img src='http:\\\\invalid\\url'>", "red", "orange", "dark blue"};
    JList list = new JList (selections);
    list.setCellRenderer (new MyCellRenderer ());
    list.setSelectedIndex (1);
    System.out.println (list.getSelectedValue ());
    frame.add (new JScrollPane (list));
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    try {
        UIManager.setLookAndFeel (WindowsClassicLookAndFeelExt.class.getCanonicalName ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
    JFrame frame = new JFrame ("JList Test");
    frame.setLayout (new FlowLayout ());
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    String [] selections = {"<html><img src='http:\\\\invalid\\url'>", "<html><H1>Hello</h1></html>", "orange", "dark blue"};
    JList list = new JList (selections);
    list.setSelectedIndex (1);
    System.out.println (list.getSelectedValue ());
    JLabel jLabel = new JLabel ("<html><h2>standard Label</h2></html>");
    frame.add (new JScrollPane (list));
    frame.add (jLabel);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35846727_35847426_11_21
35846727_35849488_16_29
Title: when f11 is pressed how can i make the window fullscreen? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int state = frame.getExtendedState ();
    if (state == JFrame.MAXIMIZED_BOTH) {
        state = JFrame.NORMAL;
    } else {
        state = JFrame.MAXIMIZED_BOTH;
    }
    frame.setExtendedState (state);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    frame.dispose ();
    if (frame.isUndecorated ()) {
        fullscreenDevice.setFullScreenWindow (null);
        frame.setUndecorated (false);
    } else {
        frame.setUndecorated (true);
        fullscreenDevice.setFullScreenWindow (frame);
    }
    frame.setVisible (true);
    frame.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35853410_35853566_1_10
35853410_35853608_1_13
Title: Return Type Issues in Java 
----------------------------------------

public static double mean (double [] data) {
    double sum = 0.0;
    for (double i : data) {
        sum += i;
    }
    double arrayLength = data.length;
    double avg = sum / arrayLength;
    return avg;
}
----------------------------------------

public static double mean (double [] data) {
    double sum = 0.0;
    for (double i : data) {
        sum += i;
    }
    double arrayLength = data.length;
    double avg = sum / arrayLength;
    return avg;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35858343_35858454_3_15
35858343_35858535_1_17
Title: Find mean and standard deviation using loops 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    while (input.hasNext ()) {
        sum += input.nextDouble ();
        count ++;
    }
    mean = sum / count;
    stdDev = sum - (count * mean);
    System.out.println ("The mean is " + mean + ".");
    System.out.println ("The standard deviation is " + stdDev + ".");
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double sum = 0;
    double sqSum = 0;
    System.out.println ("Enter 10 numbers: separte by space");
    for (int i = 0;
    i < 10; i ++) {
        double val = input.nextDouble ();
        sum += val;
        sqSum += val * val;
    }
    double mean = sum / 10;
    double stdDev = sqSum / 10 - mean * mean;
    System.out.println ("The mean is " + mean + ".");
    System.out.println ("The standard deviation is " + stdDev + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35858343_35858454_3_15
35858343_35858573_4_28
Title: Find mean and standard deviation using loops 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    while (input.hasNext ()) {
        sum += input.nextDouble ();
        count ++;
    }
    mean = sum / count;
    stdDev = sum - (count * mean);
    System.out.println ("The mean is " + mean + ".");
    System.out.println ("The standard deviation is " + stdDev + ".");
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter 10 numbers to find standard deviation");
    Scanner in = new Scanner (System.in);
    double [] arr = new double [10];
    double sum = 0, mean = 0;
    for (inti = 0; i < 10; i ++) {
        System.out.print ("Enter a number : ");
        arr [i] = in.nextDouble ();
        sum += arr [i];
    }
    mean = sum / 10;
    sum = 0;
    System.out.println ("Mean : " + mean);
    double [] temp = new double [10];
    for (inti = 0; i < 10; i ++) {
        temp [i] = Math.pow ((arr [i] - mean), 2);
        sum += temp [i];
    }
    mean = sum / 10;
    double deviation = Math.sqrt (mean);
    System.out.println ("Deviation : " + deviation);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35858343_35858535_1_17
35858343_35858573_4_28
Title: Find mean and standard deviation using loops 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double sum = 0;
    double sqSum = 0;
    System.out.println ("Enter 10 numbers: separte by space");
    for (int i = 0;
    i < 10; i ++) {
        double val = input.nextDouble ();
        sum += val;
        sqSum += val * val;
    }
    double mean = sum / 10;
    double stdDev = sqSum / 10 - mean * mean;
    System.out.println ("The mean is " + mean + ".");
    System.out.println ("The standard deviation is " + stdDev + ".");
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter 10 numbers to find standard deviation");
    Scanner in = new Scanner (System.in);
    double [] arr = new double [10];
    double sum = 0, mean = 0;
    for (inti = 0; i < 10; i ++) {
        System.out.print ("Enter a number : ");
        arr [i] = in.nextDouble ();
        sum += arr [i];
    }
    mean = sum / 10;
    sum = 0;
    System.out.println ("Mean : " + mean);
    double [] temp = new double [10];
    for (inti = 0; i < 10; i ++) {
        temp [i] = Math.pow ((arr [i] - mean), 2);
        sum += temp [i];
    }
    mean = sum / 10;
    double deviation = Math.sqrt (mean);
    System.out.println ("Deviation : " + deviation);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35859431_35859932_8_19
35859431_35859943_20_45
Title: "reading in CSV file arrayindex out of bounds error" 
----------------------------------------

public static void main (String [] args) {
    String filePath = "D:\\user.csv";
    try {
        List < CSVRecord > listRecords = CSVFormat.DEFAULT.parse (new FileReader (filePath)).getRecords ();
        for (CSVRecord csvRecord : listRecords) {
            System.out.println (csvRecord.get (0));
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) throws FileNotFoundException, IOException {
    HashMap < String, Integer > h = new HashMap < String, Integer > ();
    try {
        BufferedReader readIn = new BufferedReader (new FileReader (new File ("test.csv")));
        while (readIn.ready ()) {
            String line = readIn.readLine ();
            String str [] = line.split (",");
            for (int i = 0;
            i < str.length; i ++) {
                String k = str [0];
                int v = Integer.parseInt (str [1]);
                h.put (k, v);
            }
            System.out.println (h.toString ());
        }
        readIn.close ();
    } catch (ArrayIndexOutOfBoundsException ob) {
        System.out.println (" - The file wasn't found.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35860028_35860062_1_12
35860028_35860184_15_26
Title: Assigning value to members of list of list in Java 
----------------------------------------

public static List < List < Integer > > generate (int numRows) {
    List < List < Integer > > l = new ArrayList < > ();
    for (int i = 0;
    i < numRows; i ++) {
        l.add (new List < Integer > ());
        for (int j = 0;
        j < l.get (i).size (); j ++) {
            l.get (i).add ((int) biCoeff (numRows, j));
        }
    }
    return l;
}
----------------------------------------

public static List < Integer > generate (List < Integer > list, int counter, int noOfRows) {
    l.add (list);
    List < Integer > tempList = new ArrayList < Integer > ();
    tempList.add (1);
    for (int i = 1;
    i < list.size (); i ++) {
        tempList.add (list.get (i) + list.get (i - 1));
    }
    tempList.add (1);
    if (counter != noOfRows) generate (tempList, ++ counter, noOfRows);

    return tempList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35878331_45503283_1_26
35878331_50184878_2_10
Title: Determining length of gap of binary number 
----------------------------------------

public int solution (final int N) {
    String bin = Integer.toString (N, 2);
    System.out.println ("binary equivalent = " + bin);
    int gap = 0;
    int maxGap = 0;
    for (int i = 1;
    i < bin.length (); i ++) {
        if (bin.charAt (i) == '0') {
            gap ++;
        } else if (bin.charAt (i) == '1') {
            if (gap > maxGap) {
                maxGap = gap;
            }
            gap = 0;
        }

    }
    return maxGap;
}
----------------------------------------

public int solution (int N) {
    while (N % 2 == 0) {
        N /= 2;
    }
    String binaryString = Integer.toBinaryString (N);
    String [] matches = binaryString.split ("1");
    Optional maxValueOptional = Arrays.stream (matches).max (String :: compareTo);
    return maxValueOptional.isPresent () ? ((String) maxValueOptional.get ()).length () : 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35889087_35889501_15_35
35889087_35889998_1_15
Title: Variable of an object assumes wrong values - At the moment of creation everything is ok 
----------------------------------------

public static void main (String [] args) {
    String [] options = new String [4];
    int counter = 0;
    List < Question > list = new ArrayList < Question > ();
    for (int i = 0;
    i < 10; ++ i) {
        options = new String [4];
        for (int j = 0;
        j < 4; ++ j, ++ counter) {
            options [j] = counter + "";
        }
        Question q = new Question (counter + "", options);
        list.add (q);
    }
    for (Question q : list) {
        System.out.println (q);
    }
}
----------------------------------------

public static void main (String args []) {
    Integer x = 5;
    Integer y;
    y = x;
    System.out.println (x + " " + y);
    y = 10;
    System.out.println (x + " " + y);
    Integer [] a = {5};
    Integer [] b = a;
    System.out.println (a [0] + " " + b [0]);
    b [0] = 10;
    System.out.println (a [0] + " " + b [0]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35890439_35890761_1_19
35890439_35890761_21_34
Title: i want to check that only if My first test with priority 1 is failed then My test case with priority 3 should run 
----------------------------------------

@Test (priority = 1)
public void Login () throws Exception {
    browser.findElement (By.name ("name")).sendKeys ("johnmartin11");
    browser.findElement (By.name ("password")).sendKeys ("johnmartin1111");
    browser.findElement (By.cssSelector ("input.signup-btn")).click ();
    Thread.sleep (20000);
    try {
        Thread.sleep (20000);
        WebElement element = browser.findElement (By.xpath ("/html/body/div[3]/div/div[1]/div/div[2]/div/div[1]/a/div[1]"));
        String trb = element.getText ();
        Assert.assertNotEquals ("Blood", trb);
        System.out.println ("Login as Buyer successful");
    } catch (Exception e) {
        System.out.println ("Login failed as Buyer");
    }
}
----------------------------------------

@Test (dependsOnMethods = {"Login"})
public void CompanyAccount () throws Exception {
    browser.findElement (Companyac).click ();
    Thread.sleep (20000);
    try {
        WebElement element = browser.findElement (Companyac);
        String cac = element.getText ();
        Assert.assertEquals ("Company Account", cac);
        System.out.println ("in Company Account page Successfully");
    } catch (Exception e) {
        System.out.println ("Company Account failed");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35906779_35906780_180_226
35906779_35906780_25_37
Title: Converting from Swing to JavaFX? 
----------------------------------------

private void setUp () {
    SpringLayout manager = new SpringLayout ();
    this.setLayout (manager);
    ranking = new JButton ("Ranking");
    ranking.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    ranking.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, ranking, 0, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, ranking, 10, SpringLayout.NORTH, this);
    this.add (ranking);
    map = new JButton ("Map");
    map.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    map.addActionListener (this);
    manager.putConstraint (SpringLayout.EAST, map, - 10, SpringLayout.WEST, ranking);
    manager.putConstraint (SpringLayout.NORTH, map, 10, SpringLayout.NORTH, this);
    this.add (map);
    overview = new JButton ("Overview");
    overview.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    overview.addActionListener (this);
    manager.putConstraint (SpringLayout.EAST, overview, - 10, SpringLayout.WEST, map);
    manager.putConstraint (SpringLayout.NORTH, overview, 10, SpringLayout.NORTH, this);
    this.add (overview);
    reports = new JButton ("Reports");
    reports.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    reports.addActionListener (this);
    manager.putConstraint (SpringLayout.WEST, reports, 10, SpringLayout.EAST, ranking);
    manager.putConstraint (SpringLayout.NORTH, reports, 10, SpringLayout.NORTH, this);
    this.add (reports);
    home = new JButton ("Home");
    home.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    home.addActionListener (this);
    manager.putConstraint (SpringLayout.WEST, home, 10, SpringLayout.EAST, reports);
    manager.putConstraint (SpringLayout.NORTH, home, 10, SpringLayout.NORTH, this);
    this.add (home);
}
----------------------------------------

private void setUp () {
    layout = new CardLayout ();
    manager = new JPanel (layout);
    this.add (manager);
    start = new Introduction ();
    manager.add (start, INTRODUCTION);
    display = new MainDisplay ();
    manager.add (display);
    layout.show (manager);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35906779_35906780_180_226
35906779_35906780_53_110
Title: Converting from Swing to JavaFX? 
----------------------------------------

private void setUp () {
    SpringLayout manager = new SpringLayout ();
    this.setLayout (manager);
    ranking = new JButton ("Ranking");
    ranking.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    ranking.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, ranking, 0, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, ranking, 10, SpringLayout.NORTH, this);
    this.add (ranking);
    map = new JButton ("Map");
    map.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    map.addActionListener (this);
    manager.putConstraint (SpringLayout.EAST, map, - 10, SpringLayout.WEST, ranking);
    manager.putConstraint (SpringLayout.NORTH, map, 10, SpringLayout.NORTH, this);
    this.add (map);
    overview = new JButton ("Overview");
    overview.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    overview.addActionListener (this);
    manager.putConstraint (SpringLayout.EAST, overview, - 10, SpringLayout.WEST, map);
    manager.putConstraint (SpringLayout.NORTH, overview, 10, SpringLayout.NORTH, this);
    this.add (overview);
    reports = new JButton ("Reports");
    reports.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    reports.addActionListener (this);
    manager.putConstraint (SpringLayout.WEST, reports, 10, SpringLayout.EAST, ranking);
    manager.putConstraint (SpringLayout.NORTH, reports, 10, SpringLayout.NORTH, this);
    this.add (reports);
    home = new JButton ("Home");
    home.setFont (new Font (Font.SERIF, Font.PLAIN, 10));
    home.addActionListener (this);
    manager.putConstraint (SpringLayout.WEST, home, 10, SpringLayout.EAST, reports);
    manager.putConstraint (SpringLayout.NORTH, home, 10, SpringLayout.NORTH, this);
    this.add (home);
}
----------------------------------------

private void setUp () {
    SpringLayout manager = new SpringLayout ();
    this.setLayout (manager);
    JLabel title = new JLabel ("Demo");
    title.setFont (new Font (Font.SERIF, Font.BOLD, 60));
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, title, 0, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, title, 10, SpringLayout.NORTH, this);
    this.add (title);
    start = new JButton ("New Game");
    start.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    start.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, start, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, start, 50, SpringLayout.SOUTH, title);
    this.add (start);
    toGame = new JButton ("Continue");
    toGame.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    toGame.addActionListener (this);
    toGame.setEnabled (false);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, toGame, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, toGame, 10, SpringLayout.SOUTH, start);
    this.add (toGame);
    load = new JButton ("Load Game");
    load.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    load.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, load, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, load, 10, SpringLayout.SOUTH, toGame);
    this.add (load);
    save = new JButton ("Save Game");
    save.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    save.addActionListener (this);
    save.setEnabled (false);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, save, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, save, 10, SpringLayout.SOUTH, load);
    this.add (save);
    exit = new JButton ("Exit Game");
    exit.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    exit.setToolTipText ("Saves the current game, and exits the program.");
    exit.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, exit, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, exit, 10, SpringLayout.SOUTH, save);
    this.add (exit);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35906779_35906780_25_37
35906779_35906780_53_110
Title: Converting from Swing to JavaFX? 
----------------------------------------

private void setUp () {
    layout = new CardLayout ();
    manager = new JPanel (layout);
    this.add (manager);
    start = new Introduction ();
    manager.add (start, INTRODUCTION);
    display = new MainDisplay ();
    manager.add (display);
    layout.show (manager);
}
----------------------------------------

private void setUp () {
    SpringLayout manager = new SpringLayout ();
    this.setLayout (manager);
    JLabel title = new JLabel ("Demo");
    title.setFont (new Font (Font.SERIF, Font.BOLD, 60));
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, title, 0, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, title, 10, SpringLayout.NORTH, this);
    this.add (title);
    start = new JButton ("New Game");
    start.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    start.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, start, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, start, 50, SpringLayout.SOUTH, title);
    this.add (start);
    toGame = new JButton ("Continue");
    toGame.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    toGame.addActionListener (this);
    toGame.setEnabled (false);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, toGame, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, toGame, 10, SpringLayout.SOUTH, start);
    this.add (toGame);
    load = new JButton ("Load Game");
    load.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    load.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, load, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, load, 10, SpringLayout.SOUTH, toGame);
    this.add (load);
    save = new JButton ("Save Game");
    save.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    save.addActionListener (this);
    save.setEnabled (false);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, save, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, save, 10, SpringLayout.SOUTH, load);
    this.add (save);
    exit = new JButton ("Exit Game");
    exit.setFont (new Font (Font.SERIF, Font.PLAIN, 16));
    exit.setToolTipText ("Saves the current game, and exits the program.");
    exit.addActionListener (this);
    manager.putConstraint (SpringLayout.HORIZONTAL_CENTER, exit, - 250, SpringLayout.HORIZONTAL_CENTER, this);
    manager.putConstraint (SpringLayout.NORTH, exit, 10, SpringLayout.SOUTH, save);
    this.add (exit);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35907558_35907662_33_42
35907558_35907686_24_33
Title: Declaring Integer Outside of Method? 
----------------------------------------

static void random () {
    double random = Math.random ();
    if (random >= 0 && random <= 0.33) {
        monster ();
    } else if (random >= 0.24 && random <= 0.66) {
        potion ();
    } else {
        bag ();
    }

}
----------------------------------------

static void random () {
    double random = Math.random ();
    if (random >= 0 && random <= 0.33) {
        monster ();
    } else if (random >= 0.24 && random <= 0.66) {
        potion ();
    } else {
        bag ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35907558_35907662_44_59
35907558_35907686_35_49
Title: Declaring Integer Outside of Method? 
----------------------------------------

static void turn () {
    System.out.println ("Do you want to go left or right?");
    Scanner turn = new Scanner (System.in);
    String leftOrRight = turn.nextLine ();
    if (leftOrRight.equals ("Right")) {
        System.out.println ("You turned right and...");
        random ();
    } else if (leftOrRight.equals ("Left")) {
        System.out.println ("You turned left and...");
        random ();
    } else {
        System.out.println ("You entered an invalid answer...");
        System.exit (0);
    }

}
----------------------------------------

static void turn () {
    System.out.println ("Do you want to go left or right?");
    Scanner turn = new Scanner (System.in);
    String leftOrRight = turn.nextLine ();
    if (leftOrRight.equals ("Right")) {
        System.out.println ("You turned right and...");
        random ();
    } else if (leftOrRight.equals ("Left")) {
        System.out.println ("You turned left and...");
        random ();
    } else {
        System.out.println ("You entered an invalid answer...");
        System.exit (0);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35924676_35924800_1_12
35924676_35924863_1_12
Title: How to return a single print statement from a search() method in an array? 
----------------------------------------

public void search (int numChosen) {
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == numChosen) {
            System.out.println (numChosen + " was found.");
            return;
        }
    }
    System.out.println (numChosen + " was not found.");
}
----------------------------------------

public void search (int numChosen) {
    int count = 0;
    for (int i = 0;
    i < array.length; i ++) if (array [i] == numChosen) count ++;

    if (count == 0) System.out.println (numChosen + " was not found.");
    else System.out.println (numChosen + " was found " + count + " times.");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35927307_35927873_9_43
35927307_35934873_3_13
Title: print out nth string using Queue 
----------------------------------------

public static void main (String [] args) {
    int nth = Integer.parseInt (args [0]);
    Queue < String > q = new LinkedList < > ();
    BufferedReader bufferRead = new BufferedReader (new InputStreamReader (System.in));
    try {
        String s = "";
        while (! "/".equals ((s = bufferRead.readLine ()))) {
            q.add (s);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    String polled = "";
    int count = 1;
    while ((polled = q.poll ()) != null) {
        if (count == nth) {
            System.out.println (nth + " th string is " + polled);
        }
        count ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    Integer n = Integer.parseInt (args [0]);
    Queue < Integer > q = new Queue < Integer > ();
    while (! StdIn.isEmpty ()) {
        q.enqueue (StdIn.readInt ());
    }
    while (q.size () > n) {
        q.dequeue ();
    }
    StdOut.println (q.peek ().toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35929786_35931027_1_27
35929786_35949663_1_20
Title: "Java 8 - effectively final variables lambdas and try/catch/finally block" 
----------------------------------------

public void insertBlankPages (File inputFile, String outputFile, final int OFFSET) {
    PDDocument [] newDocument = new PDDocument [1];
    PDDocument oldDocument = null;
    try {
        newDocument [0] = createNewDocument ();
        oldDocument = createOldDocument (inputFile);
        List < PDPage > oldPages = getAllPages (oldDocument);
        oldPages.stream ().limit (oldPages.size () - OFFSET).forEach (page -> {
            newDocument [0].addPage (page);
            newDocument [0].addPage (new PDPage (page.getMediaBox ()));
        });
        newDocument [0].save (outputFile);
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (COSVisitorException e) {
        e.printStackTrace ();
    } finally {
        if (newDocument [0] != null) newDocument [0].close ();

        if (oldDocument != null) oldDocument.close ();

    }
}
----------------------------------------

public void insertBlankPages (File inputFile, String outputFile, final int OFFSET) {
    try (PDDocument newDocument = createNewDocument (); PDDocument oldDocument = createOldDocument (inputFile)) {
        List < PDPage > oldPages = getAllPages (oldDocument);
        oldPages.stream ().limit (oldPages.size () - OFFSET).forEach (page -> {
            newDocument.addPage (page);
            newDocument.addPage (new PDPage (page.getMediaBox ()));
        });
        newDocument.save (outputFile);
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (COSVisitorException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35933171_35933675_3_33
35933171_51531357_2_63
Title: Big Decimal Comparison in Java 
----------------------------------------

public static void main (String [] argh) {
    int res;
    String temp = "";
    Scanner sc = new Scanner (System.in);
    MathContext mc = new MathContext (100, RoundingMode.FLOOR);
    int n = sc.nextInt ();
    String [] s = new String [n + 2];
    for (int i = 0;
    i < n; i ++) {
        s [i] = sc.next ();
    }
    for (int i = 0;
    i < n - 1; i ++) {
        for (int j = 0;
        j < n - i - 1; j ++) {
            res = new BigDecimal (s [j + 0], mc).compareTo (new BigDecimal (s [j + 1], mc));
            if (res == - 1) {
                temp = s [j + 1];
                s [j + 1] = s [j + 0];
                s [j + 0] = temp;
            }
        }
    }
    for (int i = 0;
    i < n; i ++) {
        System.out.println (s [i]);
    }
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String [] s = new String [n + 2];
    for (int i = 0;
    i < n; i ++) {
        s [i] = sc.next ();
    }
    sc.close ();
    int maxIndex;
    for (int i = 0;
    i < n; i ++) {
        String maxDec = s [i];
        maxIndex = i;
        for (int j = i;
        j < n; j ++) {
            BigDecimal max = new BigDecimal (maxDec);
            BigDecimal dec = new BigDecimal (s [j]);
            if (max.compareTo (dec) == 0) continue;

            if (max.compareTo (dec) < 0) {
                maxDec = s [j];
                maxIndex = j;
            }
        }
        if (i != maxIndex) {
            s [maxIndex] = s [i];
            s [i] = maxDec;
        }
    }
    for (int i = 0;
    i < n; i ++) {
        System.out.println (s [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35933850_35933877_1_23
35933850_35934181_1_26
Title: Get value of variable from inner class 
----------------------------------------

public void getLastTenMessageCallBack (int user_id, int sender_id, int offset_number, RESTDatabaseDAO service) {
    Call < ArrayList < Message > > call = service.getLastTenMessage (user_id, sender_id, offset_number);
    call.enqueue (new Callback < ArrayList < Message > > () {
        @Override
        public void onResponse (Call < ArrayList < Message > > call, Response < ArrayList < Message > > response) {
            if (response.isSuccess ()) {
                updateViews (response.body ());
                Log.i ("Success", "Good ten " + response.body ().size ());
            } else {
                Log.i ("Success", "Not good  ten" + response.raw ());
            }
        }@Override
        public void onFailure (Call < ArrayList < Message > > call, Throwable t) {
            Log.i ("Fail", "Failure ten " + t.toString ());
        }}

    );
}
----------------------------------------

public ArrayList < Message > getLastTenMessageCallBack (int user_id, int sender_id, int offset_number, RESTDatabaseDAO service) {
    ArrayList < Message > messages = new ArrayList < > ();
    CountDownLatch latch = new CountDownLatch (1);
    Call < ArrayList < Message > > call = service.getLastTenMessage (user_id, sender_id, offset_number);
    call.enqueue (new Callback < ArrayList < Message > > () {
        @Override
        public void onResponse (Call < ArrayList < Message > > call, Response < ArrayList < Message > > response) {
            if (response.isSuccess ()) {
                messages = response.body ();
                latch.countDown ();
            }
        }@Override
        public void onFailure (Call < ArrayList < Message > > call, Throwable t) {
            Log.i ("Fail", "Failure ten " + t.toString ());
            latch.countDown ();
        }}

    );
    latch.await ();
    return messages;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35937657_35937912_1_17
35937657_35937915_1_15
Title: Describing all existing elements of a class from another class 
----------------------------------------

public static List < Student > populate () {
    List < Student > students = new ArrayList < Student > ();
    Student s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    students.add (s01);
    Student s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    students.add (s02);
    return students;
}
----------------------------------------

public static List < Student > populate () {
    Student s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    Student s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    List < Student > students = new ArrayList < Student > ();
    students.add (s01);
    students.add (s02);
    return students;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35937657_35937912_1_17
35937657_35938175_7_17
Title: Describing all existing elements of a class from another class 
----------------------------------------

public static List < Student > populate () {
    List < Student > students = new ArrayList < Student > ();
    Student s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    students.add (s01);
    Student s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    students.add (s02);
    return students;
}
----------------------------------------

public static void populate () {
    s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    s01.PrintInfo ();
    s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    s02.PrintInfo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35937657_35937915_1_15
35937657_35938175_7_17
Title: Describing all existing elements of a class from another class 
----------------------------------------

public static List < Student > populate () {
    Student s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    Student s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    List < Student > students = new ArrayList < Student > ();
    students.add (s01);
    students.add (s02);
    return students;
}
----------------------------------------

public static void populate () {
    s01 = new Student ("David");
    s01.age = 12;
    s01.program = "Elementary School";
    s01.PrintInfo ();
    s02 = new Student ("Alex");
    s02.age = 5;
    s02.program = "Kindergarten";
    s02.PrintInfo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35947566_35947731_2_38
35947566_35947777_3_28
Title: Sum and Averages of an Array 
----------------------------------------

public static void main (String args []) {
    int [] weeks = new int [10];
    int sum = 0;
    double average = 0;
    weeks [0] = 2;
    weeks [1] = 4;
    weeks [2] = 8;
    weeks [3] = 10;
    weeks [4] = 14;
    weeks [5] = 16;
    weeks [6] = 20;
    weeks [7] = 22;
    weeks [8] = 24;
    weeks [9] = 26;
    for (int index = 0;
    index < weeks.length; index ++) sum = sum + weeks [index];

    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) average = (double) sum / weeks.length;
    else average = 0;

    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------

public static void main (String args []) {
    int [] weeks = {2, 4, 8, 10, 14, 16, 20, 22, 24, 26};
    int sum = 0;
    double average = 0;
    for (int index = 0;
    index < weeks.length; index ++) sum = sum + weeks [index];

    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) average = (double) sum / weeks.length;
    else average = 0;

    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35947566_35947731_2_38
35947566_35947880_3_25
Title: Sum and Averages of an Array 
----------------------------------------

public static void main (String args []) {
    int [] weeks = new int [10];
    int sum = 0;
    double average = 0;
    weeks [0] = 2;
    weeks [1] = 4;
    weeks [2] = 8;
    weeks [3] = 10;
    weeks [4] = 14;
    weeks [5] = 16;
    weeks [6] = 20;
    weeks [7] = 22;
    weeks [8] = 24;
    weeks [9] = 26;
    for (int index = 0;
    index < weeks.length; index ++) sum = sum + weeks [index];

    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) average = (double) sum / weeks.length;
    else average = 0;

    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------

public static void main (String args []) {
    int [] weeks = new int [] {2, 4, 8, 10, 14, 16, 20, 22, 24, 26};
    int sum = 0;
    double average = 0;
    for (int index = 0;
    index < weeks.length; index ++) {
        sum += weeks [index];
    }
    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) {
        average = (double) sum / weeks.length;
    } else {
        average = 0;
    }
    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35947566_35947777_3_28
35947566_35947880_3_25
Title: Sum and Averages of an Array 
----------------------------------------

public static void main (String args []) {
    int [] weeks = {2, 4, 8, 10, 14, 16, 20, 22, 24, 26};
    int sum = 0;
    double average = 0;
    for (int index = 0;
    index < weeks.length; index ++) sum = sum + weeks [index];

    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) average = (double) sum / weeks.length;
    else average = 0;

    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------

public static void main (String args []) {
    int [] weeks = new int [] {2, 4, 8, 10, 14, 16, 20, 22, 24, 26};
    int sum = 0;
    double average = 0;
    for (int index = 0;
    index < weeks.length; index ++) {
        sum += weeks [index];
    }
    System.out.println ("The total miles ran in 10 weeks is " + sum);
    if (weeks.length != 0) {
        average = (double) sum / weeks.length;
    } else {
        average = 0;
    }
    System.out.println ("The average of the miles ran in 10 weeks is " + average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35954557_35954581_1_15
35954557_35954601_4_20
Title: Prime number program Boolean not working properly 
----------------------------------------

public static void main (String [] args) {
    int myInt = 0;
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter a number: ");
    myInt = kb.nextInt ();
    boolean isPrime = true;
    for (int i = 2;
    i < myInt; i ++) {
        if (myInt % i == 0) {
            isPrime = false;
            break;
        }
    }
    System.out.println (isPrime ? "Prime" : "Non-Prime");
}
----------------------------------------

public static void main (String [] args) {
    int myInt = 0;
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter a number: ");
    myInt = kb.nextInt ();
    boolean isPrime = true;
    {
        for (int i = 2;
        i < myInt; i ++) if (myInt % i == 0) isPrime = false;

    } if (isPrime == true) System.out.println ("It is a Prime number.");
    else if (isPrime == false) System.out.println ("the number is NOT PRIME");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35956095_35956352_1_14
35956095_35956370_1_13
Title: Comparing character strings 
----------------------------------------

public static boolean lessThan (char [] s, char [] t, int n) {
    int minLength = Math.min (Math.min (s.length, t.length), n);
    for (int i = 0;
    i < minLength; i ++) {
        if (s [i] < t [i]) {
            return true;
        } else if (s [i] > t [i]) {
            return false;
        }

    }
    return (minLength < n && s.length < t.length) ? true : false;
}
----------------------------------------

public boolean lessThan (char [] s, char [] t, int n) {
    int i = 0, j = 0, q = 0;
    while (i < s.length && i < t.length && (i < n)) {
        if (s [i] > t [i]) return false;

        i ++;
    }
    if (s.length > t.length) return false;
    else if (n < i) return true;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35965076_35965161_1_11
35965076_35965187_14_38
Title: java matrix 0's and 1's 
----------------------------------------

public static void printMatrix (int n) {
    Random rand = new Random ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            sb.append (rand.nextBoolean () ? "1 " : "0 ");
        }
        sb.append (System.lineSeparator ());
    }
    JOptionPane.showMessageDialog (null, sb.toString ());
}
----------------------------------------

public static void printMatrix (int n) {
    String sb = "";
    for (int row = 0;
    row < n; row ++) {
        for (int col = 0;
        col < n; col ++) {
            String randomN = ((int) (Math.random () * 2) + " ");
            sb += randomN;
        }
        sb += "\n";
    }
    System.out.print (sb);
    JOptionPane.showMessageDialog (null, sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35965076_35965161_1_11
35965076_35965563_1_13
Title: java matrix 0's and 1's 
----------------------------------------

public static void printMatrix (int n) {
    Random rand = new Random ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            sb.append (rand.nextBoolean () ? "1 " : "0 ");
        }
        sb.append (System.lineSeparator ());
    }
    JOptionPane.showMessageDialog (null, sb.toString ());
}
----------------------------------------

private static Object printMatrix (int n) {
    String randomN [] [] = new String [n] [n];
    for (int row = 0;
    row < n; row ++) {
        for (int col = 0;
        col < n; col ++) {
            randomN [row] [col] = ((int) (Math.random () * 2) + " ");
        }
    }
    String s = Arrays.deepToString (randomN).replace ("], ", "\n").replaceAll (",|\\[|\\]", "");
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35965076_35965187_14_38
35965076_35965563_1_13
Title: java matrix 0's and 1's 
----------------------------------------

public static void printMatrix (int n) {
    String sb = "";
    for (int row = 0;
    row < n; row ++) {
        for (int col = 0;
        col < n; col ++) {
            String randomN = ((int) (Math.random () * 2) + " ");
            sb += randomN;
        }
        sb += "\n";
    }
    System.out.print (sb);
    JOptionPane.showMessageDialog (null, sb);
}
----------------------------------------

private static Object printMatrix (int n) {
    String randomN [] [] = new String [n] [n];
    for (int row = 0;
    row < n; row ++) {
        for (int col = 0;
        col < n; col ++) {
            randomN [row] [col] = ((int) (Math.random () * 2) + " ");
        }
    }
    String s = Arrays.deepToString (randomN).replace ("], ", "\n").replaceAll (",|\\[|\\]", "");
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35967012_36004711_21_36
35967012_38416077_21_40
Title: Put and Get JSON object from Nashorn to MongoDB 
----------------------------------------

public void shouldStringifyCorrectly () throws ScriptException {
    String exepectedStringified = "{\"value\":1}";
    MyJsonWrapper myJsonWrapper = new MyJsonWrapper ();
    myJsonWrapper.put ("value", 1);
    scriptEngine.put ("jsonObject", ScriptObjectMirror.wrapAsJSONCompatible (myJsonWrapper, null));
    Assert.assertEquals (1, scriptEngine.eval ("jsonObject.value"));
    String result = (String) scriptEngine.eval ("JSON.stringify(jsonObject)");
    Assert.assertEquals (exepectedStringified, result);
}
----------------------------------------

public void shouldStringifyCorrectly () throws ScriptException {
    String exepectedStringified = "{\"value\":1}";
    MyJsonWrapper myJsonWrapper = new MyJsonWrapper ();
    myJsonWrapper.put ("value", 1);
    scriptEngine.put ("jsonObject", myJsonWrapper);
    scriptEngine.eval ("function toCleanObject(t){switch(typeof t){case\"object\":var e={};for(var n in t)e[n]=toCleanObject(t[n]);return e;default:return t}}");
    scriptEngine.eval ("jsonObject = toCleanObject(jsonObject);");
    Assert.assertEquals (1, scriptEngine.eval ("jsonObject.value"));
    String result = (String) scriptEngine.eval ("JSON.stringify(jsonObject)");
    Assert.assertEquals (exepectedStringified, result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35971447_35971539_1_15
35971447_35971620_2_13
Title: How To Traverse And Print A 2D Array In ZigZag Path 
----------------------------------------

public static void main (String [] args) {
    int [] [] a = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}, {17, 18, 19, 20}};
    for (int k = 0;
    k < 4; k ++) {
        for (int i = 0;
        i < a.length; i ++) {
            System.out.print (a [i] [k] + " ");
        }
        k ++;
        for (int i = a.length - 1;
        i >= 0; i --) {
            System.out.print (a [i] [k] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] a = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}, {17, 18, 19, 20}};
    String separator = "";
    System.out.print ("{");
    for (int [] row : a) {
        for (int cell : row) {
            System.out.print (separator + cell);
            separator = ",";
        }
    }
    System.out.println ("}");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35971447_35971539_1_15
35971447_35971629_3_20
Title: How To Traverse And Print A 2D Array In ZigZag Path 
----------------------------------------

public static void main (String [] args) {
    int [] [] a = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}, {17, 18, 19, 20}};
    for (int k = 0;
    k < 4; k ++) {
        for (int i = 0;
        i < a.length; i ++) {
            System.out.print (a [i] [k] + " ");
        }
        k ++;
        for (int i = a.length - 1;
        i >= 0; i --) {
            System.out.print (a [i] [k] + " ");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int [] [] wave = {{1, 2, 3, 4}, {5, 6, 7, 8}, {8, 9, 10, 11}, {12, 13, 14, 15}};
    for (int i = 0;
    i < wave.length; i ++) {
        if (i % 2 == 0) {
            for (int j = 0;
            j < wave [0].length; j ++) {
                System.out.print (wave [i] [j] + " ");
            }
            System.out.println ();
        } else {
            for (int j = wave [0].length - 1;
            j >= 0; j --) {
                System.out.print (wave [i] [j] + " ");
            }
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35971447_35971620_2_13
35971447_35971629_3_20
Title: How To Traverse And Print A 2D Array In ZigZag Path 
----------------------------------------

public static void main (String [] args) {
    int [] [] a = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}, {17, 18, 19, 20}};
    String separator = "";
    System.out.print ("{");
    for (int [] row : a) {
        for (int cell : row) {
            System.out.print (separator + cell);
            separator = ",";
        }
    }
    System.out.println ("}");
}
----------------------------------------

public static void main (String args []) {
    int [] [] wave = {{1, 2, 3, 4}, {5, 6, 7, 8}, {8, 9, 10, 11}, {12, 13, 14, 15}};
    for (int i = 0;
    i < wave.length; i ++) {
        if (i % 2 == 0) {
            for (int j = 0;
            j < wave [0].length; j ++) {
                System.out.print (wave [i] [j] + " ");
            }
            System.out.println ();
        } else {
            for (int j = wave [0].length - 1;
            j >= 0; j --) {
                System.out.print (wave [i] [j] + " ");
            }
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35975657_35975828_1_15
35975657_35975833_12_20
Title: pattern matching in java using regex 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String s = in.nextLine ();
    boolean matches = Pattern.matches (".*[HQ9].*", s);
    if (matches) {
        System.out.println ("YES");
    } else {
        System.out.println ("NO");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (String text : TESTS) {
        boolean flag1 = false;
        String pat1 = ".*[HQ9].*";
        System.out.println (text);
        flag1 = Pattern.matches (pat1, text);
        System.out.println (flag1 ? "YES" : "NO");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35976177_35997031_1_22
35976177_36073314_22_56
Title: Java Minecraft Bukkit promote plugin 
----------------------------------------

public boolean onCommand (CommandSender sender, Command cmd, String label, String args []) {
    Player p = (Player) sender;
    if (cmd.getName ().equalsIgnoreCase ("promote") && sender instanceof Player) {
        if (args [0] == "mod") {
            Player playerToPromote = Bukkit.getPlayer (args [1]);
            if (! playerToPromote.isOfflinePlayer ()) {
                String modN = ChatColor.GRAY + "[Mod] ";
                playerToPromote.setDisplayName (modN + playerToPromote.getDisplayName ());
                String modb = ChatColor.YELLOW + "has been promoted into a ";
                String mod = ChatColor.GOLD + "Mod ";
                Bukkit.getServer ().broadcastMessage (playerToPromote + modb + mod);
                playerToPromote.update ();
            } else {
                p.sendMessage (ChatColor.RED + "player not online");
            }
        }
    }
    return false;
}
----------------------------------------

public boolean onCommand (CommandSender sender, Command cmd, String label, String args []) {
    if (! (sender instanceof Player)) {
        log.info ("error message : sender isnt player");
        return true;
    }
    Player p;
    if (cmd.getName ().equalsIgnoreCase ("commandnamehere")) {
        if (args.length != 1) {
            p.sendMessage ("Look! Not enough arguments!");
            return true;
        }
        if (args [0] == "lookaspecialthingy") {
            Player target = Bukkit.getPlayer (args [0]);
            if (target == null) {
                return true;
            }
            String modN = ChatColor.GRAY + "[Mod] ";
            target.setDisplayName (modN + target.getDisplayName ());
            String modb = ChatColor.YELLOW + " has been promoted into a ";
            String mod = ChatColor.GOLD + "Mod!";
            Bukkit.getServer ().broadcastMessage (target + modb + mod);
        }
    }
    return false;
}
----------------------------------------
