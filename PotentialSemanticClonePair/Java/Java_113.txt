$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47129452_47129945_13_57
47129452_47130146_7_43
Title: sort values where their corresponding integers are same 
----------------------------------------

public static void main (String arg []) {
    Scanner sc = new Scanner (System.in);
    String input = sc.nextLine ();
    StringTokenizer st = new StringTokenizer (input);
    Vector < A > v = new Vector < A > ();
    while (st.hasMoreTokens ()) {
        A a = new A ();
        a.s = st.nextToken ();
        a.num = Integer.parseInt (st.nextToken ());
        v.add (a);
    }
    for (int i = 0;
    i < v.size (); i ++) {
        for (int j = 0;
        j < v.size () - 1; j ++) {
            if (v.get (j).num < v.get (j + 1).num) {
                A temp = v.get (j);
                v.set (j, v.get (j + 1));
                v.set (j + 1, temp);
            } else if (v.get (j).num == v.get (j + 1).num) {
                if (v.get (j).s.compareTo (v.get (j + 1).s) > 0) {
                    A temp = v.get (j);
                    v.set (j, v.get (j + 1));
                    v.set (j + 1, temp);
                }
            }

        }
    }
    for (int i = 0;
    i < v.size (); i ++) System.out.print (v.get (i).s + " " + v.get (i).num + " ");

}
----------------------------------------

public static void main (String [] args) {
    String inputString = "abc 2 hi 3 bye 3 q 2 a 1";
    String [] asArray = inputString.split (" ");
    List < String > allSubStrings = new ArrayList < String > ();
    List < Integer > allSubNumbers = new ArrayList < Integer > ();
    for (int i = 0;
    i < asArray.length; i ++) {
        if (i % 2 == 0) allSubStrings.add (asArray [i]);
        else allSubNumbers.add (Integer.parseInt (asArray [i]));

    }
    for (int i = 0;
    i < allSubStrings.size (); i ++) {
        pq.add (new DataValue (allSubStrings.get (i), allSubNumbers.get (i)));
    }
    for (int i = 0;
    i < allSubNumbers.size (); i ++) {
        System.out.print (pq.remove () + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47129452_47129945_13_57
47129452_47131036_6_45
Title: sort values where their corresponding integers are same 
----------------------------------------

public static void main (String arg []) {
    Scanner sc = new Scanner (System.in);
    String input = sc.nextLine ();
    StringTokenizer st = new StringTokenizer (input);
    Vector < A > v = new Vector < A > ();
    while (st.hasMoreTokens ()) {
        A a = new A ();
        a.s = st.nextToken ();
        a.num = Integer.parseInt (st.nextToken ());
        v.add (a);
    }
    for (int i = 0;
    i < v.size (); i ++) {
        for (int j = 0;
        j < v.size () - 1; j ++) {
            if (v.get (j).num < v.get (j + 1).num) {
                A temp = v.get (j);
                v.set (j, v.get (j + 1));
                v.set (j + 1, temp);
            } else if (v.get (j).num == v.get (j + 1).num) {
                if (v.get (j).s.compareTo (v.get (j + 1).s) > 0) {
                    A temp = v.get (j);
                    v.set (j, v.get (j + 1));
                    v.set (j + 1, temp);
                }
            }

        }
    }
    for (int i = 0;
    i < v.size (); i ++) System.out.print (v.get (i).s + " " + v.get (i).num + " ");

}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String ss = sc.nextLine ();
    String [] a;
    String temp;
    a = ss.split (" ");
    for (int i = 1;
    i < a.length; i += 2) {
        for (int j = i + 2;
        j < a.length; j += 2) {
            if (Integer.parseInt (a [i]) < Integer.parseInt (a [j])) {
                temp = a [i];
                a [i] = a [j];
                a [j] = temp;
                temp = a [i - 1];
                a [i - 1] = a [j - 1];
                a [j - 1] = temp;
            } else if (Integer.parseInt (a [i]) == Integer.parseInt (a [j])) {
                if (a [i - 1].compareTo (a [j - 1]) > 0) {
                    temp = a [i];
                    a [i] = a [j];
                    a [j] = temp;
                    temp = a [i - 1];
                    a [i - 1] = a [j - 1];
                    a [j - 1] = temp;
                }
            }

        }
    }
    for (int i = 0;
    i < a.length; i ++) System.out.print (a [i] + " ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47129452_47130146_7_43
47129452_47131036_6_45
Title: sort values where their corresponding integers are same 
----------------------------------------

public static void main (String [] args) {
    String inputString = "abc 2 hi 3 bye 3 q 2 a 1";
    String [] asArray = inputString.split (" ");
    List < String > allSubStrings = new ArrayList < String > ();
    List < Integer > allSubNumbers = new ArrayList < Integer > ();
    for (int i = 0;
    i < asArray.length; i ++) {
        if (i % 2 == 0) allSubStrings.add (asArray [i]);
        else allSubNumbers.add (Integer.parseInt (asArray [i]));

    }
    for (int i = 0;
    i < allSubStrings.size (); i ++) {
        pq.add (new DataValue (allSubStrings.get (i), allSubNumbers.get (i)));
    }
    for (int i = 0;
    i < allSubNumbers.size (); i ++) {
        System.out.print (pq.remove () + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String ss = sc.nextLine ();
    String [] a;
    String temp;
    a = ss.split (" ");
    for (int i = 1;
    i < a.length; i += 2) {
        for (int j = i + 2;
        j < a.length; j += 2) {
            if (Integer.parseInt (a [i]) < Integer.parseInt (a [j])) {
                temp = a [i];
                a [i] = a [j];
                a [j] = temp;
                temp = a [i - 1];
                a [i - 1] = a [j - 1];
                a [j - 1] = temp;
            } else if (Integer.parseInt (a [i]) == Integer.parseInt (a [j])) {
                if (a [i - 1].compareTo (a [j - 1]) > 0) {
                    temp = a [i];
                    a [i] = a [j];
                    a [j] = temp;
                    temp = a [i - 1];
                    a [i - 1] = a [j - 1];
                    a [j - 1] = temp;
                }
            }

        }
    }
    for (int i = 0;
    i < a.length; i ++) System.out.print (a [i] + " ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47130524_47130921_21_40
47130524_47130981_6_31
Title: How to sort my list on basis of date field 
----------------------------------------

public int compare (ListViewRow o1, ListViewRow o2) {
    int o1Priority = priorityLevel (o1.date);
    int o2Priority = priorityLevel (o2.date);
    if (o1Priority == VALID_DATE && o2Priority == VALID_DATE) {
        try {
            return format.parse (o1.date).compareTo (format.parse (o2.date));
        } catch (ParseException e) {
            e.printStackTrace ();
        }
    }
    if (o1Priority == STRING_DATE && o2Priority == STRING_DATE) {
        return o1.date.compareTo (o2.date);
    }
    return o1Priority - o2Priority;
}
----------------------------------------

public int compare (ListViewRow o1, ListViewRow o2) {
    SimpleDateFormat format = new SimpleDateFormat ("dd/MM/yyyy", Locale.getDefault ());
    try {
        if (o1.date == null) o1.date = "01/01/1900";

        date1 = format.parse (o1.date);
    } catch (ParseException e) {
        try {
            date1 = format.parse ("01/01/1900");
        } catch (ParseException e1) {
            e1.printStackTrace ();
        }
        e.printStackTrace ();
    }
    try {
        if (o2.date == null) o2.date = "01/01/1900";

        date2 = format.parse (o2.date);
    } catch (ParseException e) {
        try {
            date2 = format.parse ("01/01/1900");
        } catch (ParseException e1) {
            e1.printStackTrace ();
        }
        e.printStackTrace ();
    }
    return date1.compareTo (date2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47147227_47147334_1_13
47147227_47147463_1_23
Title: Find n:th word in a string 
----------------------------------------

public static String pick (String message, int n) {
    int index = 0;
    for (int i = 1;
    i < n; i ++) {
        while (index < message.length () && message.charAt (index) != ' ') index ++;

        while (index < message.length () && message.charAt (index) == ' ') index ++;

    }
    int start = index;
    while (index < message.length () && message.charAt (index) != ' ') index ++;

    return message.substring (start, index);
}
----------------------------------------

public static String pick (String message, int n) {
    int wordCount = 0;
    String word = "";
    int wordBegin = 0;
    int wordEnd = message.indexOf (' ');
    while (wordEnd >= 0 && wordCount < n) {
        word = message.substring (wordBegin, wordEnd).trim ();
        message = message.substring (wordEnd).trim ();
        wordEnd = message.indexOf (' ');
        wordCount ++;
    }
    if (wordEnd == - 1 && wordCount + 1 == n) {
        return message;
    }
    if (wordCount + 1 < n) {
        return "Not enough words to satisfy";
    }
    return word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47150031_47150567_14_46
47150031_47150587_13_42
Title: In JavaFX How to resize multiple images inside a parent node? 
----------------------------------------

public void start (Stage primaryStage) {
    HBox mainPane = new HBox ();
    try {
        allImages = createImages (10, "icon.png");
    } catch (Exception e1) {
        e1.printStackTrace ();
    }
    if (allImages == null || allImages.isEmpty ()) {
        Platform.exit ();
    }
    mainPane.getChildren ().addAll (allImages);
    mainPane.widthProperty ().addListener (e -> {
        double fitWidth = mainPane.widthProperty ().get () / allImages.size ();
        for (ImageView iv : allImages) {
            iv.setFitWidth (fitWidth);
        }
    });
    mainPane.heightProperty ().addListener (e -> {
        double fitHeight = mainPane.heightProperty ().get ();
        for (ImageView iv : allImages) {
            iv.setFitHeight (fitHeight);
        }
    });
    Scene scene = new Scene (mainPane, 600, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    HBox OuterHBox = new HBox ();
    Image image1 = new Image ("file:resources/redseven.png", 200, 200, true, true);
    ImageView imageView1 = new ImageView (image1);
    imageView1.setFitWidth (200);
    imageView1.setFitHeight (200);
    imageView1.setPreserveRatio (true);
    imageView1.fitHeightProperty ().bind (OuterHBox.heightProperty ());
    Image image2 = new Image ("file:resources/redseven.png", 200, 200, true, true);
    ImageView imageView2 = new ImageView (image2);
    imageView2.setFitWidth (200);
    imageView2.setFitHeight (200);
    imageView2.setPreserveRatio (true);
    imageView2.fitHeightProperty ().bind (OuterHBox.heightProperty ());
    OuterHBox.widthProperty ().addListener ((observable, oldValue, newValue) -> {
        imageView1.setFitWidth (newValue.doubleValue () / 2);
        imageView2.setFitWidth (newValue.doubleValue () / 2);
    });
    OuterHBox.getChildren ().addAll (imageView1, imageView2);
    Scene scene = new Scene (OuterHBox, 600, 300);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47150081_47150309_7_24
47150081_47150437_1_31
Title: While loop for multiple inputs 
----------------------------------------

public void plotPoints (Scanner keyboard) {
    int x = 1;
    while (x != - 1) {
        System.out.print ("Enter an x and y coordinate: ");
        x = keyboard.nextInt ();
        int y = keyboard.nextInt ();
        new Circle (x, y);
    }
}
----------------------------------------

public List < Circle > plotPoints (Scanner keyboard) {
    List < Circle > arrList = new ArrayList < > ();
    while (true) {
        System.out.println ("Enter an x and y coordinate: ");
        System.out.println ("Enter value for x: (x=-1 to exit)");
        int x = keyboard.nextInt ();
        System.out.println ("x =" + x);
        if (x == - 1) {
            System.out.println ("Good bye!");
            break;
        }
        System.out.println ("Enter value for y: ");
        int y = keyboard.nextInt ();
        System.out.println ("y = " + y);
        System.out.println ("Plotting point (" + x + "," + y + ")");
        arrList.add (new Circle (x, y));
    }
    return arrList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47151934_47152049_1_24
47151934_47152068_1_20
Title: How to avoid infinite loop when using try/catch? 
----------------------------------------

public void askUserForStrategy () {
    for (int i = 0;
    i < 1; ++ i) {
        try {
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            selectStrategy (strategy);
            break;
        } catch (InputMismatchException Exception) {
            System.out.println ("That is not an integer. Try again.\n");
            continue;
        }
    }
}
----------------------------------------

public void askUserForStrategy () {
    Boolean loopFlag = true;
    while (loopFlag) {
        try {
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            Integer.parseInt (strategy);
            loopFlag = false;
            selectStrategy (strategy);
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47151934_47152049_1_24
47151934_47157650_1_17
Title: How to avoid infinite loop when using try/catch? 
----------------------------------------

public void askUserForStrategy () {
    for (int i = 0;
    i < 1; ++ i) {
        try {
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            selectStrategy (strategy);
            break;
        } catch (InputMismatchException Exception) {
            System.out.println ("That is not an integer. Try again.\n");
            continue;
        }
    }
}
----------------------------------------

public void askUserForStrategy () {
    while (true) {
        try {
            Scanner sc = new Scanner (System.in);
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            System.out.println ("Selected strategy : " + strategy);
            break;
        } catch (Exception e) {
            System.out.println ("That is not an integer. Try again.\n");
            continue;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47151934_47152068_1_20
47151934_47157650_1_17
Title: How to avoid infinite loop when using try/catch? 
----------------------------------------

public void askUserForStrategy () {
    Boolean loopFlag = true;
    while (loopFlag) {
        try {
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            Integer.parseInt (strategy);
            loopFlag = false;
            selectStrategy (strategy);
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void askUserForStrategy () {
    while (true) {
        try {
            Scanner sc = new Scanner (System.in);
            System.out.println ("What strategy do you want to use?\n");
            System.out.println ("1 = Math.random\t     2 = System time\t " + "3 = Sum of Math.random and System time");
            int strategy = sc.nextInt ();
            System.out.println ("Selected strategy : " + strategy);
            break;
        } catch (Exception e) {
            System.out.println ("That is not an integer. Try again.\n");
            continue;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47173194_47173450_7_20
47173194_47175105_3_21
Title: java: illegal start of expression when entering int[] 
----------------------------------------

public static int [] myFunction (int [] arg) {
    for (int i = 0;
    i <= arg.length; i ++) {
        pointer = i;
        temp_arr = arg;
        temp_arr [i] = 1;
        for (int j = 0;
        i <= arr.length; i ++) {
            input *= temp_arr [j];
        }
        arr [pointer] = input;
    }
    return arr;
}
----------------------------------------

public static int [] myFunction (int [] arg) {
    int input = 1;
    int [] temp_arr;
    int [] arr;
    arr = new int [arg.length];
    for (int i = 0;
    i < arg.length; i ++) {
        temp_arr = Arrays.copyOf (arg, arg.length);
        temp_arr [i] = 1;
        for (int j = 0;
        j < temp_arr.length; j ++) {
            input *= temp_arr [j];
        }
        arr [i] = input;
        input = 1;
    }
    return arr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47184723_47184899_2_10
47184723_47185023_22_33
Title: How to receive user-input and pass it to object? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a number: ");
    Scanner reader = new Scanner (System.in);
    double n = reader.nextDouble ();
    reader.close ();
    Circle circle = new Circle (n);
    double area = circle.getArea ();
    System.out.printf ("The area is %f", area);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a number: ");
    Scanner reader = new Scanner (System.in);
    double input = reader.nextDouble ();
    reader.close ();
    Circle circle = new Circle (input);
    double area = circle.calculateArea ();
    System.out.printf ("My radius is %f%n", circle.getRadius ());
    System.out.printf ("My area is %f", area);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47189683_47190688_8_34
47189683_47191145_27_48
Title: Can I call method from KeyListener 
----------------------------------------

public MyClass () {
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setBounds (50, 50, 300, 300);
    this.setVisible (true);
    this.addKeyListener (new KeyListener () {
        @Override
        public void keyPressed (KeyEvent e) {
        }@Override
        public void keyReleased (KeyEvent e) {
            myMethod (e.getKeyCode ());
        }@Override
        public void keyTyped (KeyEvent e) {
        }}

    );
}
----------------------------------------

public MyClass () {
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel () {
        @Override
        public Dimension getPreferredSize () {
            return new Dimension (300, 300);
        }}

    ;
    setContentPane (panel);
    InputMap im = panel.getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW);
    ActionMap am = panel.getActionMap ();
    im.put (KeyStroke.getKeyStroke (KeyEvent.VK_SPACE, 0), "spaced");
    am.put ("spaced", new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent e) {
            myMethod ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47192874_47193776_1_20
47192874_47194355_1_29
Title: Runtime error when passing string into boolean function to scan file for an identical string 
----------------------------------------

public static boolean hasIDAlreadyBeenUsed (String IDBeingTested) throws IOException {
    boolean Decision = false;
    String ID = "Product ID: " + IDBeingTested;
    BufferedReader theBR = null;
    String scannedString;
    try {
        theBR = new BufferedReader (new FileReader ("ProductData.txt"));
        while ((scannedString = theBR.readLine ()) != null) {
            if (! Decision) Decision = scannedString.contains (ID);
            else break;

        }
    } finally {
        theBR.close ();
    }
    return Decision;
}
----------------------------------------

public static boolean hasIDAlreadyBeenUsed (String IDBeingTested) {
    boolean Decision = false;
    String ID = "Product ID:" + IDBeingTested;
    Scanner scanner;
    String scannedString;
    try {
        scanner = new Scanner (new File ("src/ProductData.txt"));
        while (scanner.hasNextLine ()) {
            scannedString = scanner.nextLine ();
            if (scannedString.equalsIgnoreCase (ID)) {
                Decision = true;
                System.out.println ("they are a match: " + ID);
                break;
            }
        }
    } catch (IOException ioe) {
        Decision = false;
        System.out.println (ioe);
    }
    return Decision;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47193361_47193530_1_18
47193361_47193643_7_33
Title: converting from if-else to methods 
----------------------------------------

public static void main (String [] args) {
    int numberofDays;
    int sharePoints;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    numberofDays = validator (numberofDays, keyboard);
    outPutTablePrinter (numberofDays, sharePoints);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Number of days in the period: ");
    numberofDays = keyboard.nextInt ();
    System.out.print ("Share points on the first day: ");
    sharePoints = keyboard.nextInt ();
    while (numberofDays < 10 || numberofDays > 20) {
        System.out.println ("The number of days doesn’t meet the required criteria, enter it again");
        System.out.print ("Number of days in the period: ");
        numberofDays = keyboard.nextInt ();
    }
    DisplayStock ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47201124_47201473_1_14
47201124_47201699_1_26
Title: Command line arguments 
----------------------------------------

public static void main (String [] args) {
    if (args.length > 0) {
        try {
            if (args [0].equals ("-H")) {
                Human person = new Human (args [1], args [2]);
                System.out.println (person);
            }
        } catch (ArrayIndexOutOfBoundsException exception) {
            System.out.println ("error with parameters");
        }
    } else System.out.println ("No command");

}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > Argument = new ArrayList < String > ();
    for (String item : args) {
        Argument.add (item);
    }
    String currentItem;
    for (int i = 0;
    i < Argument.size (); i ++) {
        currentItem = Argument.get (i);
        if (currentItem.equals ("-H")) {
            String thatname = Argument.get (i + 1);
            String thatage = Argument.get (i + 2);
            i += 2;
            Human person = new Human (thatname, thatage);
            System.out.println (person);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47208692_47209771_12_22
47208692_47209771_1_10
Title: How to find the root element of a TreeSet 
----------------------------------------

@SuppressWarnings ("unchecked")
public static < K, V > K getTreeRoot (TreeMap < K, V > tm) {
    try {
        Field rootField = TreeMap.class.getDeclaredField ("root");
        rootField.setAccessible (true);
        Map.Entry < K, V > root = (Map.Entry < K, V >) rootField.get (tm);
        return (root == null ? null : root.getKey ());
    } catch (NoSuchFieldException | IllegalAccessException e) {
        throw new IllegalStateException ("Internals of TreeMap has changed", e);
    }
}
----------------------------------------

@SuppressWarnings ("unchecked")
public static < E > E getTreeRoot (TreeSet < E > ts) {
    try {
        Field mField = TreeSet.class.getDeclaredField ("m");
        mField.setAccessible (true);
        return getTreeRoot ((TreeMap < E, Object >) mField.get (ts));
    } catch (NoSuchFieldException | IllegalAccessException e) {
        throw new IllegalStateException ("Internals of TreeSet has changed", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47213621_47214198_1_16
47213621_47215748_13_41
Title: Issue converting Image Uri from gallery to bitmap Android 
----------------------------------------

@Override
protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == PICK_IMAGE && resultCode == RESULT_OK && data != null) {
        Uri imageUri = data.getData ();
        try {
            Bitmap bitmap = MediaStore.Images.Media.getBitmap (getContentResolver (), imageUri);
            imageView.setImageBitmap (bitmap);
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

@Override
public void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (resultCode == RESULT_CANCELED) {
        return;
    }
    if (requestCode == GALLERY) {
        if (data != null) {
            Uri contentURI = data.getData ();
            try {
                ByteArrayOutputStream bytes = new ByteArrayOutputStream ();
                Bitmap bitmap = MediaStore.Images.Media.getBitmap (this.getContentResolver (), contentURI);
                bitmap.compress (Bitmap.CompressFormat.JPEG, 90, bytes);
                imageView.setImageBitmap (bitmap);
            } catch (IOException e) {
                e.printStackTrace ();
                Toast.makeText (MainActivity.this, "Failed!", Toast.LENGTH_SHORT).show ();
            }
        }
    } else if (requestCode == CAMERA) {
        Bitmap thumbnail = (Bitmap) data.getExtras ().get ("data");
        imageView.setImageBitmap (thumbnail);
        path = saveImage (thumbnail);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47216822_47216965_6_40
47216822_47217060_5_39
Title: Setting textview text in a method 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final Button button1 = (Button) findViewById (R.id.button1);
    final Button button2 = (Button) findViewById (R.id.button2);
    final Button button3 = (Button) findViewById (R.id.button3);
    final Button button4 = (Button) findViewById (R.id.button4);
    final Button button5 = (Button) findViewById (R.id.button5);
    final Button button6 = (Button) findViewById (R.id.button6);
    final Button button7 = (Button) findViewById (R.id.button7);
    final Button button8 = (Button) findViewById (R.id.button8);
    final Button button9 = (Button) findViewById (R.id.button9);
    tv = (TextView) findViewById (R.id.winnerTextView);
    button1.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            if (counter % 2 == 0) {
                button1.setText ("O");
            } else {
                button1.setText ("X");
            }
            counter ++;
            if (counter == 10) {
                getWinner ();
            }
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final Button button1 = (Button) findViewById (R.id.button1);
    final TextView tv = (TextView) findViewById (R.id.winnerTextView);
    button1.setOnClickListener (listener);
    button2.setOnClickListener (listener);
    button3.setOnClickListener (listener);
    button4.setOnClickListener (listener);
    button5.setOnClickListener (listener);
    button6.setOnClickListener (listener);
    button7.setOnClickListener (listener);
    button8.setOnClickListener (listener);
    button9.setOnClickListener (listener);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47219141_47219830_1_15
47219141_47252166_21_51
Title: Find out recursive pattern in a string java 
----------------------------------------

public boolean repeatedSubstringPattern (String str) {
    int l = str.length ();
    for (int i = l / 2;
    i >= 1; i --) {
        if (l % i == 0) {
            int m = l / i;
            String subS = str.substring (0, i);
            StringBuilder sb = new StringBuilder ();
            for (int j = 0;
            j < m; j ++) {
                sb.append (subS);
            }
            if (sb.toString ().equals (str)) return true;

        }
    }
    return false;
}
----------------------------------------

bool repeatedSubstringPattern (string s) {
    auto kmp = buildKMPtable (s);
    if (kmp [s.size () - 1] == 0) {
        return false;
    }
    int diff = s.size () - kmp [s.size () - 1];
    if (s.size () % diff != 0) {
        return false;
    }
    string word = s.substr (0, diff);
    int w_size = word.size ();
    for (int i = 0;
    i < w_size; ++ i) {
        int j = i;
        while (j < s.size ()) {
            if (word [i] == s [j]) {
                j += w_size;
            } else {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4722049_4886495_1_29
4722049_6353660_1_44
Title: unzip a zipfile in the same hierachy using java.util.ZipFile 
----------------------------------------

public static void unzip (File file, File targetDir) throws ZipException, IOException {
    targetDir.mkdirs ();
    ZipFile zipFile = new ZipFile (file);
    try {
        Enumeration < ? extends ZipEntry > entries = zipFile.entries ();
        while (entries.hasMoreElements ()) {
            ZipEntry entry = entries.nextElement ();
            File targetFile = new File (targetDir, entry.getName ());
            if (entry.isDirectory ()) {
                targetFile.mkdirs ();
            } else {
                InputStream input = zipFile.getInputStream (entry);
                try {
                    OutputStream output = new FileOutputStream (targetFile);
                    try {
                        copy (input, output);
                    } finally {
                        output.close ();
                    }
                } finally {
                    input.close ();
                }
            }
        }
    } finally {
        zipFile.close ();
    }
}
----------------------------------------

public static File unzip (File inFile, File outFolder) {
    final int BUFFER = 2048;
    try {
        BufferedOutputStream out = null;
        ZipInputStream in = new ZipInputStream (new BufferedInputStream (new FileInputStream (inFile)));
        ZipEntry entry;
        while ((entry = in.getNextEntry ()) != null) {
            int count;
            byte data [] = new byte [BUFFER];
            File entrySupposedPath = new File (outFolder.getAbsolutePath () + File.separator + entry.getName ());
            if (! entrySupposedPath.getParentFile ().exists ()) {
                entrySupposedPath.getParentFile ().mkdirs ();
            }
            out = new BufferedOutputStream (new FileOutputStream (outFolder.getPath () + "/" + entry.getName ()), BUFFER);
            while ((count = in.read (data, 0, BUFFER)) != - 1) {
                out.write (data, 0, count);
            }
            out.flush ();
            out.close ();
        }
        in.close ();
        return outFolder;
    } catch (Exception e) {
        e.printStackTrace ();
        return inFile;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47224319_47225168_10_36
47224319_47225216_7_41
Title: Flatten lists in map into single list 
----------------------------------------

public static void main (String [] args) {
    Map < Integer, List < String > > map = new HashMap < Integer, List < String > > ();
    map.put (1, Arrays.asList ("11", "12", "13"));
    map.put (2, Arrays.asList ("21", "22", "23"));
    List < String > result = new ArrayList < String > ();
    for (List < String > list : map.values ()) {
        result.addAll (list);
    }
    System.out.println (result);
    String [] array = result.toArray (new String [0]);
    System.out.println (Arrays.toString (array));
    List < String > java8List = map.values ().stream ().flatMap (l -> l.stream ()).collect (Collectors.toList ());
    System.out.println (java8List);
    String [] arrays = java8List.toArray (new String [0]);
    System.out.println (Arrays.toString (arrays));
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Map < Integer, List < String > > MapOf_words_arrays = new HashMap < Integer, List < String > > ();
    ArrayList < String > s1 = new ArrayList < > ();
    s1.add ("anupam");
    s1.add ("lucky");
    ArrayList < String > s2 = new ArrayList < > ();
    s2.add ("anu");
    s2.add ("luck");
    MapOf_words_arrays.put (0, s1);
    MapOf_words_arrays.put (1, s2);
    ArrayList < String > final_ans = new ArrayList < String > ();
    for (List < String > list : MapOf_words_arrays.values ()) {
        for (int i = 0;
        i < list.size (); i ++) {
            final_ans.add (list.get (i));
        }
    }
    String [] myArray = final_ans.toArray (new String [final_ans.size ()]);
    for (int b = 0;
    b < myArray.length; b ++) System.out.print (myArray [b] + " ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234357_47234458_20_32
47234357_47234486_13_22
Title: Find the Average of digits by using While Loop 
----------------------------------------

public static void avDigits () {
    int num = number;
    while (num > 0) {
        digits += 1;
        sum += num % 10;
        num /= 10;
    }
    average = ((float) sum / digits);
}
----------------------------------------

private static float avDigits (int number) {
    int digits = 0;
    float sum = 0.0F;
    while (number > 0) {
        digits += 1;
        sum += number % 10;
        number /= 10;
    }
    return (sum / digits);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234648_47234679_5_39
47234648_47234695_5_37
Title: Need to prompt user to enter integers until binary number is entered 
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    int binaryDigit = 0, notBinaryDigit = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) binaryDigit ++;
            else notBinaryDigit ++;

            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            break;
        } else System.out.println (value + " is not a Binary Number.");

    }
}
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    Scanner scan = new Scanner (System.in);
    while (true) {
        int binaryDigit = 0, notBinaryDigit = 0;
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) {
                binaryDigit ++;
            } else {
                notBinaryDigit ++;
            }
            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            return;
        } else {
            System.out.println (value + " is not a Binary Number.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234648_47234679_5_39
47234648_47234719_4_39
Title: Need to prompt user to enter integers until binary number is entered 
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    int binaryDigit = 0, notBinaryDigit = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) binaryDigit ++;
            else notBinaryDigit ++;

            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            break;
        } else System.out.println (value + " is not a Binary Number.");

    }
}
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    int binaryDigit = 0, notBinaryDigit = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        binaryDigit = 0;
        notBinaryDigit = 0;
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) {
                binaryDigit ++;
            } else {
                notBinaryDigit ++;
            }
            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            break;
        } else {
            System.out.println (value + " is not a Binary Number.\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234648_47234679_5_39
47234648_47236495_4_18
Title: Need to prompt user to enter integers until binary number is entered 
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    int binaryDigit = 0, notBinaryDigit = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) binaryDigit ++;
            else notBinaryDigit ++;

            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            break;
        } else System.out.println (value + " is not a Binary Number.");

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    boolean isValid = false;
    String userInput = "";
    do {
        System.out.print ("Please Enter a binary integer: ");
        userInput = sc.next ();
        isValid = userInput != null && ! userInput.trim ().isEmpty () && userInput.matches ("[01]{1,32}");
        if (! isValid) System.out.println ("invalid binary integer entered! ");

    } while (! isValid);
    System.out.println ("Valid input: " + userInput);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234648_47234695_5_37
47234648_47236495_4_18
Title: Need to prompt user to enter integers until binary number is entered 
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    Scanner scan = new Scanner (System.in);
    while (true) {
        int binaryDigit = 0, notBinaryDigit = 0;
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) {
                binaryDigit ++;
            } else {
                notBinaryDigit ++;
            }
            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            return;
        } else {
            System.out.println (value + " is not a Binary Number.");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    boolean isValid = false;
    String userInput = "";
    do {
        System.out.print ("Please Enter a binary integer: ");
        userInput = sc.next ();
        isValid = userInput != null && ! userInput.trim ().isEmpty () && userInput.matches ("[01]{1,32}");
        if (! isValid) System.out.println ("invalid binary integer entered! ");

    } while (! isValid);
    System.out.println ("Valid input: " + userInput);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47234648_47234719_4_39
47234648_47236495_4_18
Title: Need to prompt user to enter integers until binary number is entered 
----------------------------------------

public static void main (String [] args) {
    int value, userValue;
    int binaryDigit = 0, notBinaryDigit = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        binaryDigit = 0;
        notBinaryDigit = 0;
        System.out.println ("Please enter positive integers: ");
        userValue = scan.nextInt ();
        value = userValue;
        while (userValue > 0) {
            if ((userValue % 10 == 0) || (userValue % 10 == 1)) {
                binaryDigit ++;
            } else {
                notBinaryDigit ++;
            }
            userValue = userValue / 10;
        }
        if (notBinaryDigit == 0) {
            System.out.println (value + " is a Binary Number.");
            break;
        } else {
            System.out.println (value + " is not a Binary Number.\n");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    boolean isValid = false;
    String userInput = "";
    do {
        System.out.print ("Please Enter a binary integer: ");
        userInput = sc.next ();
        isValid = userInput != null && ! userInput.trim ().isEmpty () && userInput.matches ("[01]{1,32}");
        if (! isValid) System.out.println ("invalid binary integer entered! ");

    } while (! isValid);
    System.out.println ("Valid input: " + userInput);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47235118_47235397_3_16
47235118_47235566_8_47
Title: What can be the possible logic for printing this pattern in Java(BlueJ)? 
----------------------------------------

public static void main (String [] args) {
    int max = 3;
    for (int i = max;
    i >= 0; i --) {
        foo (max - i, max);
    }
    for (int i = 1;
    i < max; i ++) {
        foo (max - i, max);
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int n;
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    int a, b;
    a = n - 1;
    b = 1;
    for (int i = 1;
    i <= n; i ++) {
        for (int j = 1;
        j <= a; j ++) System.out.print ("#");

        for (int k = 1;
        k <= b; k ++) System.out.print (k);

        for (int l = b - 1;
        l >= 1; l --) System.out.print (l);

        System.out.println ("\n");
        a --;
        b ++;
    }
    a = 1;
    b = n - 1;
    for (int i = n - 1;
    i >= 1; i --) {
        for (int j = 1;
        j <= a; j ++) System.out.print ("#");

        for (int k = 1;
        k <= b; k ++) System.out.print (k);

        for (int l = b - 1;
        l >= 1; l --) System.out.print (l);

        a ++;
        b --;
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47239399_47240215_101_109
47239399_47240215_49_59
Title: Efficient way to access/store data instead of having a huge constructor class 
----------------------------------------

public boolean equals (Object o) {
    if (o == this) return true;

    if (! (o instanceof Exercise)) return false;

    Exercise < ? > other = (Exercise < ? >) o;
    if (! other.canEqual ((Object) this)) return false;

    if (this.getName () == null ? other.getValue () != null : ! this.getName ().equals (other.getName ())) return false;

    if (this.getValue () == null ? other.getValue () != null : ! this.getValue ().equals (other.getValue ())) return false;

    return true;
}
----------------------------------------

public boolean equals (Object o) {
    if (o == this) return true;

    if (! (o instanceof DataExample)) return false;

    DataExample other = (DataExample) o;
    if (! other.canEqual ((Object) this)) return false;

    if (this.getName () == null ? other.getName () != null : ! this.getName ().equals (other.getName ())) return false;

    if (this.getAge () != other.getAge ()) return false;

    if (Double.compare (this.getScore (), other.getScore ()) != 0) return false;

    if (! Arrays.deepEquals (this.getTags (), other.getTags ())) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47240704_47240795_14_33
47240704_47241215_30_45
Title: Frequency of elements in an ArrayList 
----------------------------------------

public static HashMap < Character, Integer > frequency (String string) {
    int length = string.length ();
    char c;
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < length; i ++) {
        c = string.charAt (i);
        if (map.containsKey (c)) {
            map.put (c, map.get (c) + 1);
        } else {
            map.put (c, 1);
        }
    }
    return map;
}
----------------------------------------

public static List < Entry > frequency (String string) {
    int length = string.length ();
    char c;
    Entry entry;
    List < Entry > list = new ArrayList < Entry > ();
    for (int i = 0;
    i < length; i ++) {
        c = string.charAt (i);
        add (c, list);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47241386_47241593_3_30
47241386_47241657_2_27
Title: Extending my program with another while loop Java 
----------------------------------------

public static void main (String [] args) {
    StdOut.println ("Enter your integers:");
    int max = Integer.MIN_VALUE;
    int min = Integer.MAX_VALUE;
    while (! StdIn.isEmpty ()) {
        int value = StdIn.readInt ();
        if (value < 0) {
            StdOut.println ("You entered negative number, try positive numbers.");
            max = Integer.MIN_VALUE;
            min = Integer.MAX_VALUE;
            continue;
        }
        if (value > max) max = value;

        if (value < min) min = value;

    }
    StdOut.println ("Maximum = " + max + ", Minimum = " + min);
}
----------------------------------------

public static void main (String [] args) {
    do {
        StdOut.println ("Enter your integers:");
    } while (StdIn.isEmpty ());
    int max = StdIn.readInt ();
    int min = max;
    while (! StdIn.isEmpty ()) {
        int value = StdIn.readInt ();
        if (value < 0) {
            StdOut.println ("Please enter a positive integer");
        } else {
            if (value > max) max = value;

            if (value < min) min = value;

        }
    }
    do {
        StdOut.println ("Maximum = " + max + ", Minimum = " + min);
        return;
    } while (StdIn.readInt () > 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47241599_47241752_13_24
47241599_47241752_1_9
Title: binary search tree traversal using recursion 
----------------------------------------

public Node traverse (Node root, int data) {
    if (root.data == data) {
        return root;
    }
    if (root.left != null) {
        return traverse (root.left, data);
    }
    if (root.right != null) {
        return traverse (root.right, data);
    }
    return null;
}
----------------------------------------

public void traverse (Node root) {
    if (root.left != null) {
        traverse (root.left);
    }
    System.out.println (root.data);
    if (root.right != null) {
        traverse (root.right);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4724270_39079692_22_46
4724270_4726556_20_42
Title: How to POST request to Google Shortener API with Google API Java Client and parse a JSON response? 
----------------------------------------

public static void main (String [] args) throws Exception {
    HttpTransport httpTransport = GoogleNetHttpTransport.newTrustedTransport ();
    HttpHeaders headers = new HttpHeaders ();
    JsonObjectParser parser = new JsonObjectParser (new JacksonFactory ());
    GenericUrl url = new GenericUrl ("https://www.googleapis.com/urlshortener/v1/url");
    Map < String, String > json = new HashMap < String, String > ();
    json.put ("longUrl", "http://www.google.com/");
    final HttpContent content = new JsonHttpContent (new JacksonFactory (), json);
    HttpRequest request = httpTransport.createRequestFactory ().buildPostRequest (url, content);
    try {
        HttpResponse response = request.execute ();
        Result result = response.parseAs (Result.class);
        System.out.println (result.shortUrl);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    HttpTransport transport = GoogleTransport.create ();
    GoogleHeaders defaultHeaders = new GoogleHeaders ();
    transport.defaultHeaders = defaultHeaders;
    transport.defaultHeaders.put ("Content-Type", "application/json");
    transport.addParser (new JsonHttpParser ());
    HttpRequest request = transport.buildPostRequest ();
    request.setUrl (GOOGL_URL);
    GenericData data = new GenericData ();
    data.put ("longUrl", "http://www.google.com/");
    JsonHttpContent content = new JsonHttpContent ();
    content.data = data;
    request.content = content;
    HttpResponse response = request.execute ();
    Result result = response.parseAs (Result.class);
    System.out.println (result.shortUrl);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47242897_47243200_6_21
47242897_47243301_23_35
Title: increase value count of array 
----------------------------------------

public static void main (String [] args) {
    int lastChecked = 0;
    for (int id : ids) {
        newIds.add (id);
        if (lastChecked != id) checkForIncrease (id);

        lastChecked = id;
    }
    ids.forEach (num -> System.out.print (num + " "));
    System.out.println ();
    newIds.forEach (num -> System.out.print (num + " "));
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > x = new ArrayList < > ();
    int [] screen_ids = {17, 17, 13, 13, 13, 12, 11, 11, 11, 10, 10, 10, 9, 9, 9, 9, 8, 7, 7, 7, 5, 5, 4, 4, 3, 3, 3, 2, 2, 1};
    for (int i : screen_ids) {
        x.add (i);
    }
    processData (screen_ids, 17, 1.4, x);
    System.out.println (" x length: " + x.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47246155_47246245_1_14
47246155_47246559_1_18
Title: How to convert multiple functions to create a generic function 
----------------------------------------

public < T > List < T > csvObjConverter (Reader reader, T object) {
    CsvParserSettings parserSettings = new CsvParserSettings ();
    parserSettings.getFormat ().setLineSeparator ("\n");
    CsvParser parser = new CsvParser (parserSettings);
    parser.beginParsing (reader);
    String [] row;
    ArrayList < T > objects = new ArrayList < > ();
    while ((row = parser.parseNext ()) != null) {
        T obj = new T (row).preprocess ();
        objects.add (obj);
    }
    parser.stopParsing ();
    return objects;
}
----------------------------------------

public < T extends AbstractObj > List < T > csvObjConverter (Reader r, Class < T > clazz) throws IllegalAccessException, InstantiationException, InvocationTargetException, NoSuchMethodException {
    CsvParserSettings parserSettings = new CsvParserSettings ();
    parserSettings.getFormat ().setLineSeparator ("\n");
    parserSettings.setHeaderExtractionEnabled (true);
    parserSettings.detectFormatAutomatically ();
    parserSettings.setMaxCharsPerColumn (90000);
    CsvParser parser = new CsvParser (parserSettings);
    parser.beginParsing (r);
    String [] row;
    ArrayList < T > objects = new ArrayList < > ();
    Constructor < T > cons = clazz.getConstructor (String [].class);
    while ((row = parser.parseNext ()) != null) {
        T obj = cons.newInstance ((Object) row);
        objects.add (obj);
    }
    parser.stopParsing ();
    return objects;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47247901_47247956_3_16
47247901_47248037_1_15
Title: Calling method of another class JAVA 
----------------------------------------

public static void main (String [] args) {
    int arrayInt [] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    for (int i = 0;
    i < 9; i ++) {
        System.out.print ("El" + arrayInt [i] + "es: ");
        if (PrimeNumber.isPrime (arrayInt [i]) == true) {
            System.out.print ("primo\n");
        } else {
            System.out.print ("no primo\n");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    PrimeNumber obj = new PrimeNumber ();
    int arrayInt [] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    for (int i = 0;
    i < 9; i ++) {
        System.out.print ("El" + arrayInt [i] + "es: ");
        if (obj.isPrimeNumber (arrayInt [i]) == true) {
            System.out.print ("primo\n");
        } else {
            System.out.print ("no primo\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47249470_47249495_1_16
47249470_47249535_4_23
Title: getting the times of trying the loop 
----------------------------------------

public static void main (String [] args) {
    int a = (int) (Math.random () * 10);
    int b = (int) (Math.random () * 10);
    Scanner s = new Scanner (System.in);
    int count = 0;
    System.out.println ("What is: " + a + " + " + b + " ?");
    int answer = s.nextInt ();
    while (answer != (a + b)) {
        System.out.println ("Incorrect. Try again.");
        count ++;
        System.out.println ("What is: " + a + " + " + b + " ?");
        answer = s.nextInt ();
    }
    System.out.println ("Correct after " + count + " time(s)");
}
----------------------------------------

public static void main (String [] args) {
    int a = (int) (Math.random () * 10);
    int b = (int) (Math.random () * 10);
    int count = 0;
    Scanner s = new Scanner (System.in);
    System.out.println ("What is: " + a + " + " + b + " ?");
    int answer = s.nextInt ();
    while (answer != (a + b)) {
        System.out.println ("Incorrect. Try again.");
        count ++;
        System.out.println ("What is: " + a + " + " + b + " ?");
        answer = s.nextInt ();
    }
    System.out.println ("Correct after " + count + " time(s)");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47253790_47254491_140_160
47253790_47254491_98_114
Title: Custom deletion Container for Transferable and Transferhandler on JList 
----------------------------------------

public boolean importData (TransferSupport info) {
    JList < Object > target = (JList < Object >) info.getComponent ();
    JList.DropLocation dl = (JList.DropLocation) info.getDropLocation ();
    DefaultListModel < Object > listModel = (DefaultListModel < Object >) target.getModel ();
    int index = dl.getIndex ();
    int max = listModel.getSize ();
    if (index < 0 || index > max) {
        index = max;
    }
    try {
        Object object = info.getTransferable ().getTransferData (DataFlavor.stringFlavor);
        listModel.add (index, object);
        target.addSelectionInterval (index, index);
        return true;
    } catch (UnsupportedFlavorException | IOException e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

public boolean importData (TransferSupport support) {
    if (! canImport (support)) {
        return false;
    }
    Transferable transferable = support.getTransferable ();
    try {
        Trash trash = (Trash) transferable.getTransferData (TrashTransferable.FLAVOR);
        Object item = trash.getItem ();
        System.out.println ("><![CDATA[> Trash " + item);
        return true;
    } catch (UnsupportedFlavorException | IOException ex) {
        ex.printStackTrace ();
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47265690_47265783_9_23
47265690_47265930_6_39
Title: multiple int[][] array to single[] String array in java 
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    int i, j, sum;
    String [] abo = new String [a.length];
    System.out.println (abo.length);
    for (i = 0; i < a.length; i ++) for (j = 0; j < a [0].length; j ++) {
        sum = 0;
        int x = a [i] [j];
        sum = sum + x;
        if (sum > 62) abo [i] = "Senior";
        else abo [i] = "Open";

    }

    return abo;
}
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    int i, j, sum, x;
    String [] abo = new String [a.length];
    for (i = 0; i < a.length; i ++) {
        sum = 0;
        for (j = 0; j < a [0].length; j ++) {
            x = a [i] [j];
            sum = sum + x;
        }
        if (sum > 62) {
            abo [i] = "Senior";
        } else {
            abo [i] = "Open";
        }
    }
    return abo;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47265690_47265783_9_23
47265690_47265957_2_12
Title: multiple int[][] array to single[] String array in java 
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    int i, j, sum;
    String [] abo = new String [a.length];
    System.out.println (abo.length);
    for (i = 0; i < a.length; i ++) for (j = 0; j < a [0].length; j ++) {
        sum = 0;
        int x = a [i] [j];
        sum = sum + x;
        if (sum > 62) abo [i] = "Senior";
        else abo [i] = "Open";

    }

    return abo;
}
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    String [] abo = new String [a.length];
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] [0] >= 55 && a [i] [1] > 7) {
            abo [i] = "Senior";
        } else {
            abo [i] = "Open";
        }
    }
    return abo;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47265690_47265930_6_39
47265690_47265957_2_12
Title: multiple int[][] array to single[] String array in java 
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    int i, j, sum, x;
    String [] abo = new String [a.length];
    for (i = 0; i < a.length; i ++) {
        sum = 0;
        for (j = 0; j < a [0].length; j ++) {
            x = a [i] [j];
            sum = sum + x;
        }
        if (sum > 62) {
            abo [i] = "Senior";
        } else {
            abo [i] = "Open";
        }
    }
    return abo;
}
----------------------------------------

static String [] openOrSenior (int [] [] a) {
    String [] abo = new String [a.length];
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] [0] >= 55 && a [i] [1] > 7) {
            abo [i] = "Senior";
        } else {
            abo [i] = "Open";
        }
    }
    return abo;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47268870_47335478_163_187
47268870_47335478_219_236
Title: java Capture sound and hear it and record it to WAV simultaneously 
----------------------------------------

public void run () {
    Line.Info targetDLInfo = new Line.Info (TargetDataLine.class);
    for (Mixer.Info info : mixers) {
        Mixer tmp = AudioSystem.getMixer (info);
        if (tmp.isLineSupported (targetDLInfo)) {
            String s = tmp.getMixerInfo ().getName ();
            if (s.toLowerCase ().contains (mConfig.getProperty ("radioName").toLowerCase ())) {
                mFoundMixer = tmp;
                try {
                    mTargetInfo = new DataLine.Info (TargetDataLine.class, mFormat);
                    mTargetLine = (TargetDataLine) mFoundMixer.getLine (mTargetInfo);
                    System.out.println ("Found radio device: " + mFoundMixer.getMixerInfo ().getName ());
                    startThread ();
                } catch (Exception e) {
                    System.out.println ("RadioListener input error");
                    mFoundMixer = null;
                }
                break;
            }
        }
    }
}
----------------------------------------

public void run () {
    int numBytesRead;
    byte [] targetData = new byte [mTargetLine.getBufferSize () / 5];
    while (isCommunicating) {
        numBytesRead = mTargetLine.read (targetData, 0, targetData.length);
        if (numBytesRead == - 1) break;

        if (isRetranslating) mSourceLine.write (targetData, 0, numBytesRead);

        if (isRecording) {
            try {
                fos.write (targetData);
            } catch (IOException e) {
                stopRecording ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47274119_47282390_16_35
47274119_47282390_1_13
Title: Entity manager get or create 
----------------------------------------

@Transactional (propagation = Propagation.REQUIRES_NEW)
public Product getOrCreateProductWithDoubleCheckedLocking (final String productName, final String productDescr) {
    Product product = findProduct (productName);
    if (product != null) {
        return product;
    }
    synchronized (this) {
        product = findProduct (productName);
        if (product != null) {
            return product;
        }
        product = new Product (productName, productDescr);
        em.persist (product);
    }
    return product;
}
----------------------------------------

@Transactional (propagation = Propagation.REQUIRES_NEW)
public synchronized Product getOrCreateProductWithSynchronization (final String productName, final String productDescr) {
    Product product = findProduct (productName);
    if (product != null) {
        return product;
    }
    product = new Product (productName, productDescr);
    em.persist (product);
    return product;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47277358_47280570_1_12
47277358_47282216_1_22
Title: How to test if BufferedImage using ImageIO picks up a 'null' 
----------------------------------------

public void displayImage (String strfilename, JLabel label) {
    try {
        BufferedImage image = ImageIO.read (new File (strfilename + ".jpg"));
        ImageIcon icon = new ImageIcon (image);
        label.setIcon (icon);
    } catch (IOException | NullPointerException ex) {
        ImageIcon icon = new ImageIcon ("NOIMAGE.jpg");
        label.setIcon (icon);
    }
}
----------------------------------------

public void displayImage (String strfilename, JLabel JLlabel) {
    BufferedImage image = null;
    if (! isImageExist (strfilename)) {
        image = ImageIO.read (new File ("NOIMAGE.jpg"));
    } else {
        try {
            image = ImageIO.read (new File (strfilename + ".jpg"));
        } catch (IOException ioe) {
            ioe.printStackTrace ();
        }
    }
    ImageIcon icon = new ImageIcon (image);
    JLlabel.setIcon (icon);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47282747_47282763_1_10
47282747_47282804_1_11
Title: Validation for digit only in an EditText 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    firstIntCB = (EditText) findViewById (R.id.firstNumber);
    secundIntCB = (EditText) findViewById (R.id.secundNumber);
    getProductCB = (Button) findViewById (R.id.GetProduct);
    addDataToDisplay ();
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    firstIntCB = (EditText) findViewById (R.id.firstNumber);
    secundIntCB = (EditText) findViewById (R.id.secundNumber);
    getProductCB = (Button) findViewById (R.id.GetProduct);
    addDataToDisplay ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47284361_47285149_1_70
47284361_47285250_89_102
Title: Using TextWatcher to calculate average between EditTexts 
----------------------------------------

public void onAddField (View v) {
    LayoutInflater inflater = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    final View rowView = inflater.inflate (R.layout.field, null);
    ((EditText) rowView.findViewById (R.id.number_edit_text1)).addTextChangedListener (new TextWatcher () {
        public void beforeTextChanged (CharSequence s, int start, int count, int after) {
        } public void onTextChanged (CharSequence s, int start, int before, int count) {
            ((TextView) rowView.findViewById (R.id.number_text_view)).setText (avg (((EditText) rowView.findViewById (R.id.number_edit_text1)), ((EditText) rowView.findViewById (R.id.number_edit_text2)), ((EditText) rowView.findViewById (R.id.number_edit_text3))));
        } public void afterTextChanged (Editable s) {
        }}

    );
    ((EditText) rowView.findViewById (R.id.number_edit_text2)).addTextChangedListener (new TextWatcher () {
        public void beforeTextChanged (CharSequence s, int start, int count, int after) {
        } public void onTextChanged (CharSequence s, int start, int before, int count) {
            ((TextView) rowView.findViewById (R.id.number_text_view)).setText (avg (((EditText) rowView.findViewById (R.id.number_edit_text1)), ((EditText) rowView.findViewById (R.id.number_edit_text2)), ((EditText) rowView.findViewById (R.id.number_edit_text3))));
        } public void afterTextChanged (Editable s) {
        }}

    );
    ((EditText) rowView.findViewById (R.id.number_edit_text3)).addTextChangedListener (new TextWatcher () {
        public void beforeTextChanged (CharSequence s, int start, int count, int after) {
        } public void onTextChanged (CharSequence s, int start, int before, int count) {
            ((TextView) rowView.findViewById (R.id.number_text_view)).setText (avg (((EditText) rowView.findViewById (R.id.number_edit_text1)), ((EditText) rowView.findViewById (R.id.number_edit_text2)), ((EditText) rowView.findViewById (R.id.number_edit_text3))));
        } public void afterTextChanged (Editable s) {
        }}

    );
    parentLinearLayout.addView (rowView, parentLinearLayout.getChildCount () - 1);
}
----------------------------------------

public void onAddField (View v) {
    LayoutInflater inflater = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    final View rowView = inflater.inflate (R.layout.field, null);
    EditText editText1 = (EditText) rowView.findViewById (R.id.number_edit_text1);
    EditText editText2 = (EditText) rowView.findViewById (R.id.number_edit_text2);
    EditText editText3 = (EditText) rowView.findViewById (R.id.number_edit_text3);
    TextView textViewResult = (TextView) findViewById (R.id.number_text_view);
    addTextListeners (editText1, editText2, editText3, textViewResult);
    parentLinearLayout.addView (rowView, parentLinearLayout.getChildCount () - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47317405_47318019_14_36
47317405_47318699_12_33
Title: While loop starts from beginning in tic tac toe game 
----------------------------------------

public static void createBoard () {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            array [i] [j] = '#';
        }
    }
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            System.out.print (array [i] [j] + " ");
        }
        System.out.println ();
    }
    System.out.println ();
    System.out.println ("--------------");
}
----------------------------------------

public static void createBoard () {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            array [i] [j] = '#';
        }
    }
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            System.out.print (array [i] [j] + " ");
        }
        System.out.println ();
    }
    System.out.println ();
    System.out.println ("--------------");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47317405_47318019_39_86
47317405_47318377_35_120
Title: While loop starts from beginning in tic tac toe game 
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    while (whoseTurn <= (SIZE * SIZE)) {
        row = number.nextInt (6 - 1) + 1;
        column = number.nextInt (6 - 1) + 1;
        if ((whoseTurn % 2) != 0) {
            array [row - 1] [column - 1] = 'X';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            array [row - 1] [column - 1] = 'O';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    PairList boardStatusX = new PairList ();
    PairList boardStatusY = new PairList ();
    while (whoseTurn <= (SIZE * SIZE)) {
        do {
            row = number.nextInt (6 - 1) + 1;
            column = number.nextInt (6 - 1) + 1;
        } while (boardStatusX.contains (row, column) || boardStatusY.contains (row, column));
        if ((whoseTurn % 2) != 0) {
            boardStatusX.add (new Pair (row, column));
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    if (boardStatusX.contains (i, j)) {
                        array [i] [j] = 'X';
                    } else {
                        array [i] [j] = '#';
                    }
                }
            }
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            boardStatusY.add (new Pair (row, column));
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    if (boardStatusY.contains (i, j)) {
                        array [i] [j] = 'Y';
                    } else {
                        array [i] [j] = '#';
                    }
                }
            }
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47317405_47318019_39_86
47317405_47318699_35_85
Title: While loop starts from beginning in tic tac toe game 
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    while (whoseTurn <= (SIZE * SIZE)) {
        row = number.nextInt (6 - 1) + 1;
        column = number.nextInt (6 - 1) + 1;
        if ((whoseTurn % 2) != 0) {
            array [row - 1] [column - 1] = 'X';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            array [row - 1] [column - 1] = 'O';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    while (whoseTurn <= (SIZE * SIZE)) {
        do {
            row = number.nextInt (6 - 1) + 1;
            column = number.nextInt (6 - 1) + 1;
        } while (array [row] [column] == 'X' || array [row] [column] == 'Y');
        if ((whoseTurn % 2) != 0) {
            array [row - 1] [column - 1] = 'X';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            array [row - 1] [column - 1] = 'O';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47317405_47318377_12_33
47317405_47318699_12_33
Title: While loop starts from beginning in tic tac toe game 
----------------------------------------

public static void createBoard () {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            array [i] [j] = '#';
        }
    }
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            System.out.print (array [i] [j] + " ");
        }
        System.out.println ();
    }
    System.out.println ();
    System.out.println ("--------------");
}
----------------------------------------

public static void createBoard () {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            array [i] [j] = '#';
        }
    }
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            System.out.print (array [i] [j] + " ");
        }
        System.out.println ();
    }
    System.out.println ();
    System.out.println ("--------------");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47317405_47318377_35_120
47317405_47318699_35_85
Title: While loop starts from beginning in tic tac toe game 
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    PairList boardStatusX = new PairList ();
    PairList boardStatusY = new PairList ();
    while (whoseTurn <= (SIZE * SIZE)) {
        do {
            row = number.nextInt (6 - 1) + 1;
            column = number.nextInt (6 - 1) + 1;
        } while (boardStatusX.contains (row, column) || boardStatusY.contains (row, column));
        if ((whoseTurn % 2) != 0) {
            boardStatusX.add (new Pair (row, column));
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    if (boardStatusX.contains (i, j)) {
                        array [i] [j] = 'X';
                    } else {
                        array [i] [j] = '#';
                    }
                }
            }
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            boardStatusY.add (new Pair (row, column));
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    if (boardStatusY.contains (i, j)) {
                        array [i] [j] = 'Y';
                    } else {
                        array [i] [j] = '#';
                    }
                }
            }
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------

public static void move () {
    int whoseTurn = 1;
    while (whoseTurn <= (SIZE * SIZE)) {
        do {
            row = number.nextInt (6 - 1) + 1;
            column = number.nextInt (6 - 1) + 1;
        } while (array [row] [column] == 'X' || array [row] [column] == 'Y');
        if ((whoseTurn % 2) != 0) {
            array [row - 1] [column - 1] = 'X';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        } else if ((whoseTurn % 2) == 0) {
            array [row - 1] [column - 1] = 'O';
            for (int i = 0;
            i < array.length; i ++) {
                for (int j = 0;
                j < array.length; j ++) {
                    System.out.print (array [i] [j] + " ");
                }
                System.out.println ();
            }
            System.out.println ("--------------");
            whoseTurn += 1;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47328574_47328671_1_11
47328574_47329181_1_11
Title: Java - Store the changing int variable 
----------------------------------------

public void attack (Player somePlayer) {
    somePlayer.totalHealth = somePlayer.totalHealth - this.damage;
    if (somePlayer.totalHealth.equals (0) || somePlayer.totalHealth < 0) {
        System.out.println ("Your player died");
    } else {
        System.out.println ("The monster attacked " + somePlayer.getName () + " and made " + this.damage + " damage");
        System.out.println ("Your remaining health is - " + (somePlayer.totalHealth - somePlayer.getStrength ()));
    }
}
----------------------------------------

public void attack (Player somePlayer) {
    somePlayer.remainingHealth -= this.damage;
    if (somePlayer.remainingHealth <= 0) {
        System.out.println ("Your player died");
    } else {
        System.out.println ("The monster attacked ...");
        System.out.println ("Your remaining health is - " + somePlayer.remainingHealth);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47329274_47329432_3_25
47329274_47329575_1_14
Title: What is this method doing? (Arrays and random numbers) 
----------------------------------------

public static int [] arrayHist () {
    int [] counts = new int [30];
    int [] hist = randomIntArray (30);
    for (int i = 0;
    i < 10 && i >= 0; i ++) {
        int index = hist [i];
        counts [index] ++;
    }
    return hist;
}
----------------------------------------

public static int [] arrayHist () {
    int [] hist = randomIntArray (30);
    int [] counts = new int [11];
    for (int j = 0;
    j < hist.length; j ++) {
        int number = hist [j];
        if (number > - 1 && number < 11) {
            counts [number] ++;
        }
    }
    return counts;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47332271_47332340_1_82
47332271_47332487_1_15
Title: Menu loop in 2 different methods Java program 
----------------------------------------

public void runProgram () {
    showMenu ();
    int numberFromUser;
    do {
        numberFromUser = citire.readNumbers ();
        switch (numberFromUser) {
            case 1 :
                addition ();
                break;
            case 2 :
                subtraction ();
                break;
            case 3 :
                multiply ();
                break;
            case 4 :
                divide ();
                break;
            case 5 :
                comparareNumere ();
                break;
            case 6 :
                listhundred ();
                break;
            case 7 :
                setnumbertolist ();
                break;
            case 8 :
                contain ();
                break;
            case 9 :
                limit ();
                break;
            case 10 :
                list ();
                break;
            case 11 :
                secmax ();
                break;
            case 12 :
                secmin ();
                break;
            case 13 :
                nr ();
                break;
            case 14 :
                nr2 ();
                break;
            case 15 :
                nr3 ();
                break;
            case 16 :
                string ();
                break;
            case 17 :
                string2 ();
                break;
            case 18 :
                weather ();
                break;
            case 19 :
                eligible ();
                break;
            case 20 :
                oddoreven ();
                break;
            case 21 :
                dog ();
                break;
            case 22 :
                cat ();
                break;
            case 23 :
                elev ();
                break;
            default :
                break;
        }
    } while (numberFromUser != 0);
}
----------------------------------------

public void runProgram () {
    int numberFromUser;
    showMenu ();
    while (true) {
        System.out.print ("Enter choice: ");
        numberFromUser = citire.readNumbers ();
        switch (NumberFromUser) {
            case 0 :
                System.exit (0);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47337919_47338059_1_12
47337919_47338134_27_40
Title: How utilize user input later in another method 
----------------------------------------

public static String next () {
    Scanner input = new Scanner (System.in);
    System.out.print ("How many days are you going to spend travelling?");
    String days = input.nextLine ();
    System.out.print ("How much money in USD are you planning to spend on your trip?");
    String budget = input.nextLine ();
    System.out.print ("What is the three letter currency symbol for your travel destination?");
    String currency = input.nextLine ();
    System.out.print ("How many " + currency + " are there in 1 USD?");
    String currencyConversion = input.nextLine ();
    return days;
}
----------------------------------------

public static void next () {
    Scanner input = new Scanner (System.in);
    System.out.print ("How many days are you going to spend travelling?");
    days = input.nextLine ();
    System.out.print ("How much money in USD are you planning to spend on your trip?");
    String budget = input.nextLine ();
    System.out.print ("What is the three letter currency symbol for your travel destination?");
    String currency = input.nextLine ();
    System.out.print ("How many " + currency + " are there in 1 USD?");
    String currencyConversion = input.nextLine ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47341466_47344137_20_44
47341466_47344137_46_70
Title: Generic choose of method / infering methods in java 
----------------------------------------

public ArrayList < Customer > search (Customer c) {
    ArrayList < Customer > resultList = new ArrayList < > ();
    ResultSet rs = getRestultSet (c.getSimpleName ());
    Customer match;
    while (rs.next ()) {
        String number = String.valueOf (rs.getInt ("NUMBER"));
        String id = rs.getString ("ID");
        String lastname = rs.getString ("LASTNAME");
        String firstname = rs.getString ("FIRSTNAME");
        String birthdate = rs.getString ("BIRTHDATE");
        String zipcode = String.valueOf (rs.getInt ("ZIPCODE"));
        String domicile = rs.getString ("DOMICILE");
        String street = rs.getString ("STREET");
        String housenumber = String.valueOf (rs.getInt ("HOUSENUMBER"));
        String notification = rs.getString ("NOTIFICATION");
        String notificationTimestamp = rs.getString ("NOTIFICATIONTIMESTAMP");
        match = new Customer (number, id, lastname, firstname, birthdate, zipcode, domicile, street, housenumber, notification, notificationTimestamp);
        resultList.add (match);
    }
    rs.close ();
    return resultList;
}
----------------------------------------

public ArrayList < Medium > search (Medium m) {
    ArrayList < Medium > resultList = new ArrayList < > ();
    ResultSet rs = getRestultSet (m.getSimpleName ());
    Medium match;
    while (rs.next ()) {
        String number = String.valueOf (rs.getInt ("NUMBER"));
        String id = rs.getString ("ID");
        String isbn = rs.getString ("ISBN");
        String title = rs.getString ("TITLE");
        String authors = rs.getString ("AUTHORS");
        String type = rs.getString ("TYPE");
        String category = rs.getString ("CATEGORY");
        String publishingYear = String.valueOf (rs.getInt ("PUBLISHINGYEAR"));
        String publishingMonth = rs.getString ("PUBLISHINGMONTH");
        String timestamp = rs.getString ("TIMESTAMP");
        String loanerNumber = String.valueOf (rs.getInt ("LOANERNUMBER"));
        match = new Medium (number, id, isbn, title, type, authors, category, publishingYear, publishingMonth, timestamp, loanerNumber);
        resultList.add (match);
    }
    rs.close ();
    return resultList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47342751_47343000_11_36
47342751_47343097_1_12
Title: Printing from a method 
----------------------------------------

public static int [] [] fill () {
    int [] [] grid = new int [5] [5];
    for (int r = 0;
    r < grid.length; r ++) {
        for (int c = 0;
        c < grid [r].length; c ++) {
            grid [r] [c] = (int) (Math.random () * 100);
        }
    }
    System.out.println ("Input 2D");
    for (int r = 0;
    r < grid.length; r ++) {
        for (int c = 0;
        c < grid [r].length; c ++) {
            System.out.print (grid [r] [c]);
            System.out.print ("\t");
        }
        System.out.println ("");
    }
    return grid;
}
----------------------------------------

public static int [] [] fill () {
    int [] [] grid = new int [5] [5];
    for (int r = 0;
    r < grid.length; r ++) {
        for (int c = 0;
        c < grid [r].length; c ++) {
            grid [r] [c] = (int) (Math.random () * 100);
        }
    }
    return grid;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47343366_47343541_1_20
47343366_47343591_1_11
Title: remove characters before and after character in java 
----------------------------------------

public static void main (String [] args) {
    String str1;
    String res = "";
    int n;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the string");
    str1 = sc.next ();
    res = str1;
    StringBuffer a = new StringBuffer (str1);
    n = str1.length () - 1;
    String [] splitVal = str1.split (".\\*+.");
    String newString = "";
    for (int i = 0;
    i < splitVal.length; i ++) {
        newString = newString + splitVal [i];
    }
    System.out.println ("The final string is " + newString);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the string");
    Scanner sc = new Scanner (System.in);
    String str1 = sc.nextLine ();
    String [] separated = str1.split (".\\*+.");
    String result = "";
    for (String str : separated) {
        result += str;
    }
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47349042_47351146_8_20
47349042_52037879_30_49
Title: How do you set the JRViewer export options? 
----------------------------------------

protected JRViewerToolbar createToolbar () {
    JRViewerToolbar toolbar = super.createToolbar ();
    Locale locale = viewerContext.getLocale ();
    ResourceBundle resBundle = viewerContext.getResourceBundle ();
    JRPdfSaveContributor pdf = new JRPdfSaveContributor (locale, resBundle);
    JRRtfSaveContributor rtf = new JRRtfSaveContributor (locale, resBundle);
    JRSingleSheetXlsSaveContributor xls = new JRSingleSheetXlsSaveContributor (locale, resBundle);
    JRDocxSaveContributor docx = new JRDocxSaveContributor (locale, resBundle);
    toolbar.setSaveContributors (new JRSaveContributor [] {pdf, rtf, xls, docx});
    return toolbar;
}
----------------------------------------

protected JRViewerToolbar createToolbar () {
    JRViewerToolbar toolbar = super.createToolbar ();
    Locale locale = viewerContext.getLocale ();
    ResourceBundle resBundle = viewerContext.getResourceBundle ();
    JRSaveContributor [] jrsc = new JRSaveContributor [extensions.length];
    Class [] type = {Locale.class, ResourceBundle.class};
    Object [] obj = {locale, resBundle};
    for (int i = 0;
    i < extensions.length; i ++) {
        try {
            Constructor cons = extensions [i].getClazz ().getConstructor (type);
            jrsc [i] = (JRSaveContributor) cons.newInstance (obj);
        } catch (Exception x) {
            x.printStackTrace ();
        }
    }
    toolbar.setSaveContributors (jrsc);
    return toolbar;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47358843_47361289_160_202
47358843_47361289_85_134
Title: How to communicate between two process and two hosts using UDP datagrams on Android 
----------------------------------------

public void run () {
    final String methodName = "run";
    try {
        byte messageBytes [] = new byte [1500];
        DatagramPacket dp = new DatagramPacket (messageBytes, messageBytes.length);
        DatagramSocket mSocket = new DatagramSocket (TEST_PORT_NUMBER);
        mSocket.setSoTimeout (DELAY_BETWEEN_PACKETS_MS);
        mSocket.setBroadcast (true);
        while (totalReceived < TEST_COUNT) {
            try {
                mSocket.receive (dp);
                if (dp.getLength () > 0) {
                    totalReceived ++;
                    String payloadStr = new String (dp.getData ());
                    log ("received #" + totalReceived + " : \"" + payloadStr + "\"");
                }
            } catch (Exception ex) {
                log ("receive exception " + ex.toString ());
            }
        }
        mSocket.close ();
        mSocket = null;
        log (methodName + " socket closed.");
    } catch (Exception ex) {
        log (methodName + " exception " + ex.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        mSocket = new DatagramSocket ();
        mSocket.setBroadcast (true);
        InetAddress interfaceBroadcast = getBroadcastAddress ();
        InetAddress broadcastAddr = InetAddress.getByName ("255.255.255.255");
        String payloadStr = "payload pid=" + android.os.Process.myPid ();
        byte payloadBytes [] = payloadStr.getBytes ();
        for (int packet = 0;
        packet < TEST_COUNT; packet ++) {
            DatagramPacket dp = new DatagramPacket (payloadBytes, payloadBytes.length, broadcastAddr, TEST_PORT_NUMBER);
            mSocket.send (dp);
            if (interfaceBroadcast != null) {
                dp = new DatagramPacket (payloadBytes, payloadBytes.length, interfaceBroadcast, TEST_PORT_NUMBER);
                mSocket.send (dp);
            }
            log ("sent #" + packet + " with " + payloadBytes.length + " bytes \"" + payloadStr + "\"");
            synchronized (this) {
                try {
                    wait (DELAY_BETWEEN_PACKETS_MS);
                } catch (InterruptedException ex) {
                    log ("run exeption " + ex.toString ());
                }
            }
        }
        mSocket.close ();
        mSocket = null;
    } catch (Exception ex) {
        log ("run exception " + ex.toString () + " stack " + Log.getStackTraceString (ex));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47359984_47360648_1_46
47359984_47360717_5_60
Title: "Creating a Morse Code translator for my programming classhaving troubles with the output" 
----------------------------------------

public static void main (String...args) {
    String [] letras = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Map < String, String > decodeMap = new HashMap < String, String > ();
    for (int i = 0;
    i < letras.length; i ++) {
        decodeMap.put (letras [i], MORSE [i]);
    }
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.toLowerCase ();
    String [] paraletras = frase.split (" ");
    for (int i = 0;
    i < paraletras.length; i ++) {
        boolean gotValue = false;
        for (Entry < String, String > decodeEntry : decodeMap.entrySet ()) {
            if (decodeEntry.getKey ().equals (paraletras [i])) {
                resp += decodeEntry.getValue ();
                gotValue = true;
                break;
            } else if (decodeEntry.getValue ().equals (paraletras [i])) {
                resp += decodeEntry.getKey ();
                gotValue = true;
                break;
            }

        }
        if (gotValue) {
            resp += " ";
        }
    }
    System.out.print (resp);
}
----------------------------------------

public static void main (String [] args) {
    String [] LETRAS = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.trim ().toLowerCase ();
    String [] chars = frase.split (" ");
    for (int i = 0;
    i < chars.length; i ++) {
        String group = chars [i];
        String newChar = null;
        for (int j = 0;
        j < LETRAS.length; j ++) {
            if (LETRAS [j].equals (group)) {
                newChar = MORSE [j];
                break;
            }
        }
        if (newChar == null) {
            for (int j = 0;
            j < MORSE.length; j ++) {
                if (MORSE [j].equals (group)) {
                    newChar = LETRAS [j];
                    break;
                }
            }
        }
        if (newChar == null) {
            System.out.println ("Group not found: " + group);
            continue;
        }
        resp += newChar + " ";
    }
    System.out.print (resp);
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47359984_47360648_1_46
47359984_47361365_3_46
Title: "Creating a Morse Code translator for my programming classhaving troubles with the output" 
----------------------------------------

public static void main (String...args) {
    String [] letras = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Map < String, String > decodeMap = new HashMap < String, String > ();
    for (int i = 0;
    i < letras.length; i ++) {
        decodeMap.put (letras [i], MORSE [i]);
    }
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.toLowerCase ();
    String [] paraletras = frase.split (" ");
    for (int i = 0;
    i < paraletras.length; i ++) {
        boolean gotValue = false;
        for (Entry < String, String > decodeEntry : decodeMap.entrySet ()) {
            if (decodeEntry.getKey ().equals (paraletras [i])) {
                resp += decodeEntry.getValue ();
                gotValue = true;
                break;
            } else if (decodeEntry.getValue ().equals (paraletras [i])) {
                resp += decodeEntry.getKey ();
                gotValue = true;
                break;
            }

        }
        if (gotValue) {
            resp += " ";
        }
    }
    System.out.print (resp);
}
----------------------------------------

public static void main (String [] args) {
    String [] abecedario = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.toLowerCase ();
    String [] palavra = frase.split (" ");
    for (int i = 0;
    i < palavra.length; i ++) {
        String letra = palavra [i];
        String novochar = "";
        for (int j = 0;
        j < abecedario.length; j ++) {
            if (abecedario [j].equals (letra));

            novochar = MORSE [j];
            break;
        }
        if (novochar == "") {
            for (int j = 0;
            j < MORSE.length; j ++) {
                if (MORSE [j].equals (letra));

                novochar = abecedario [j];
                break;
            }
        }
        if (novochar == "") {
            novochar = "?";
            continue;
        }
        resp = resp + novochar + " ";
    }
    System.out.println (resp);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47359984_47360717_5_60
47359984_47361365_3_46
Title: "Creating a Morse Code translator for my programming classhaving troubles with the output" 
----------------------------------------

public static void main (String [] args) {
    String [] LETRAS = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.trim ().toLowerCase ();
    String [] chars = frase.split (" ");
    for (int i = 0;
    i < chars.length; i ++) {
        String group = chars [i];
        String newChar = null;
        for (int j = 0;
        j < LETRAS.length; j ++) {
            if (LETRAS [j].equals (group)) {
                newChar = MORSE [j];
                break;
            }
        }
        if (newChar == null) {
            for (int j = 0;
            j < MORSE.length; j ++) {
                if (MORSE [j].equals (group)) {
                    newChar = LETRAS [j];
                    break;
                }
            }
        }
        if (newChar == null) {
            System.out.println ("Group not found: " + group);
            continue;
        }
        resp += newChar + " ";
    }
    System.out.print (resp);
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    String [] abecedario = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    String [] MORSE = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Insira uma frase em codigo morse para uma traducao para texto ou vice-versa");
    Scanner in = new Scanner (System.in);
    String frase = in.nextLine ();
    String resp = "";
    frase = frase.toLowerCase ();
    String [] palavra = frase.split (" ");
    for (int i = 0;
    i < palavra.length; i ++) {
        String letra = palavra [i];
        String novochar = "";
        for (int j = 0;
        j < abecedario.length; j ++) {
            if (abecedario [j].equals (letra));

            novochar = MORSE [j];
            break;
        }
        if (novochar == "") {
            for (int j = 0;
            j < MORSE.length; j ++) {
                if (MORSE [j].equals (letra));

                novochar = abecedario [j];
                break;
            }
        }
        if (novochar == "") {
            novochar = "?";
            continue;
        }
        resp = resp + novochar + " ";
    }
    System.out.println (resp);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47360699_47361656_102_121
47360699_47361656_152_196
Title: Making two objects rotate at the same time 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    int xCenter = getWidth () / 2;
    int yCenter = getHeight () / 2;
    int radius = (int) (Math.min (getWidth (), getHeight ()) * 0.4);
    g2d.setTransform (AffineTransform.getRotateInstance (Math.toRadians (angle), xCenter, yCenter));
    int x = xCenter - radius;
    int y = yCenter - radius;
    g2d.fillArc (x, y, 2 * radius, 2 * radius, 0, 30);
    g2d.fillArc (x, y, 2 * radius, 2 * radius, 90, 30);
    g2d.fillArc (x, y, 2 * radius, 2 * radius, 180, 30);
    g2d.fillArc (x, y, 2 * radius, 2 * radius, 270, 30);
    g2d.dispose ();
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    int clockRadius = (int) (Math.min (getWidth (), getHeight ()) * 0.8 * 0.5);
    int xCenter = getWidth () / 2;
    int yCenter = getHeight () / 2;
    g.setColor (Color.black);
    g.drawOval (xCenter - clockRadius, yCenter - clockRadius, 2 * clockRadius, 2 * clockRadius);
    g.drawString ("12", xCenter - 5, yCenter - clockRadius + 12);
    g.drawString ("9", xCenter - clockRadius + 3, yCenter + 5);
    g.drawString ("3", xCenter + clockRadius - 10, yCenter + 3);
    g.drawString ("6", xCenter - 3, yCenter + clockRadius - 3);
    int sLength = (int) (clockRadius * 0.8);
    int xSecond = (int) (xCenter + sLength * Math.sin (second * (2 * Math.PI / 60)));
    int ySecond = (int) (yCenter - sLength * Math.cos (second * (2 * Math.PI / 60)));
    g.setColor (Color.red);
    g.drawLine (xCenter, yCenter, xSecond, ySecond);
    int mLength = (int) (clockRadius * 0.65);
    int xMinute = (int) (xCenter + mLength * Math.sin (minute * (2 * Math.PI / 60)));
    int yMinute = (int) (yCenter - mLength * Math.cos (minute * (2 * Math.PI / 60)));
    g.setColor (Color.blue);
    g.drawLine (xCenter, yCenter, xMinute, yMinute);
    int hLength = (int) (clockRadius * 0.5);
    int xHour = (int) (xCenter + hLength * Math.sin ((hour % 12 + minute / 60.0) * (2 * Math.PI / 12)));
    int yHour = (int) (yCenter - hLength * Math.cos ((hour % 12 + minute / 60.0) * (2 * Math.PI / 12)));
    g.setColor (Color.green);
    g.drawLine (xCenter, yCenter, xHour, yHour);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47362635_47362674_1_15
47362635_47362678_1_17
Title: JAVA Looping a formula 
----------------------------------------

public static void main (String [] args) {
    double startAmount = 1000;
    double ratePercentage = 0.05;
    double newAmount;
    for (int i = 0;
    i < 10; i ++) {
        newAmount = startAmount + (startAmount * ratePercentage);
        System.out.println (i + " " + newAmount);
        startAmount = newAmount;
    }
}
----------------------------------------

public static void main (String [] args) {
    double startAmount = 1000;
    double ratePercentage = 0.05;
    double newAmount;
    newAmount = startAmount;
    for (int i = 0;
    i <= 10; i ++) {
        newAmount = newAmount + (newAmount * ratePercentage);
        System.out.println (i + " " + newAmount);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47373378_47373431_4_20
47373378_47373804_3_19
Title: "Ask user for 10 numbers tell which one was the least number" 
----------------------------------------

public static void main (String [] args) {
    double low = Double.MAX_VALUE;
    double weight;
    Scanner input = new Scanner (System.in);
    for (int i = 1;
    i <= 10; i ++) {
        System.out.print ("Enter your best friend # " + i + "'s weight: ");
        weight = input.nextDouble ();
        if (weight < low) {
            low = weight;
        }
    }
    input.close ();
    System.out.println ("The lowest weight that you entered was " + low);
}
----------------------------------------

public static void main (String [] args) {
    double low;
    double weight;
    Scanner input = new Scanner (System.in);
    low = 9999;
    for (int i = 1;
    i <= 10; i ++) {
        System.out.print ("Enter your best friend # " + i + "'s weight: ");
        Weight = input.nextDouble ();
        if (weight < low) {
            low = weight;
        }
    }
    input.close ();
    System.out.println ("The lowest weight that you entered was " + low);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47377513_47382353_19_30
47377513_47382353_63_106
Title: Getting graphics object to draw with buffer strategy 
----------------------------------------

public void run () {
    TestCanvas canvas = new TestCanvas ();
    JFrame frame = new JFrame ();
    frame.add (canvas);
    frame.setTitle ("Test");
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    canvas.start ();
}
----------------------------------------

public void run () {
    createBufferStrategy (3);
    do {
        BufferStrategy bs = getBufferStrategy ();
        while (bs == null) {
            System.out.println ("get buffer");
            bs = getBufferStrategy ();
        }
        do {
            do {
                System.out.println ("draw");
                Graphics graphics = bs.getDrawGraphics ();
                graphics.setColor (Color.RED);
                graphics.fillRect (0, 0, 100, 100);
                graphics.dispose ();
            } while (bs.contentsRestored ());
            System.out.println ("show");
            bs.show ();
        } while (bs.contentsLost ());
        System.out.println ("done");
        try {
            Thread.sleep (100);
        } catch (InterruptedException ex) {
            ex.printStackTrace ();
        }
    } while (keepRendering.get ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4738374_30269684_2_20
4738374_47160558_1_11
Title: Break an infinite loop 
----------------------------------------

public static void main (String args []) throws java.io.IOException {
    char press, clear;
    for (;;) {
        System.out.print ("Press any key to get display, otherwise press t to terminate:  ");
        press = (char) System.in.read ();
        System.out.println ("You Pressed: " + press);
        do {
            clear = (char) System.in.read ();
        } while (clear != '\n');
        System.out.println ("\n");
        if (press == 't' | press == 'T') {
            System.out.println ("Terminating Program......Program Terminated!");
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int i = 0;
    while (true) {
        if (i == 10) {
            break;
        }
        System.out.println ("Hello");
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47384851_47384976_1_17
47384851_47385050_1_17
Title: Return false is not working in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] numList = {983, 235, 92, 118, 79, 203, 199};
    System.out.println ("Enter the key: ");
    int key = input.nextInt ();
    System.out.println ("\nThe arrays: ");
    printArray (numList);
    if (searchKey (numList, key)) System.out.println (key + " is found in the array");
    else System.out.println (key + " is not found in the array");

    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] numList = {983, 235, 92, 118, 79, 203, 199};
    boolean found;
    System.out.println ("Enter the key: ");
    int key = input.nextInt ();
    System.out.println ("\nThe arrays: ");
    printArray (numList);
    if (searchKey (numList, key)) {
        System.out.println (key + " is found in the array");
    } else {
        System.out.println (key + " is not found in the array");
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47391549_47391971_1_13
47391549_47402340_4_18
Title: How to find the occurence of an array in another array? and returning indexes of the first array 
----------------------------------------

private static int findSubarrayPosition (int [] array, int [] subarray) {
    int start = 0;
    while (start + subarray.length < array.length) {
        if (Arrays.equals (Arrays.copyOfRange (array, start, start + subarray.length), subarray)) {
            return start;
        }
        start ++;
    }
    return - 1;
}
----------------------------------------

private static int findSubarrayPosition (int [] array, int [] subarray) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < array.length; i ++) {
        sb.append (array [i]);
    }
    String string = sb.toString ();
    sb = new StringBuilder ();
    for (int i = 0;
    i < subarray.length; i ++) {
        sb.append (subarray [i]);
    }
    String subString = sb.toString ();
    return string.lastIndexOf (subString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47391549_47392215_1_12
47391549_47392416_1_22
Title: How to find the occurence of an array in another array? and returning indexes of the first array 
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int index = - 1;
    arrayLoop : for (int i = 0;
    i < array.length; i ++) {
        if (array [i] == subArray [0]) {
            for (int j = 1;
            j < subArray.length; j ++) {
                if (i + j > array.length - 1 || array [i + j] != subArray [j]) continue arrayLoop;

            }
            index = i;
        }
    }
    return index;
}
----------------------------------------

public static int findArray (int [] array, int [] subArray) {
    int count = 0;
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < subArray.length; j ++) {
            if (array [i] == subArray [j]) {
                if (array.length > (i + 1) && subArray.length > (j + 1)) {
                    if (array [i + 1] == subArray [j + 1]) {
                        count += 1;
                        continue;
                    }
                } else if (subArray.length == j + 1) {
                    count += 1;
                    continue;
                }

            }
        }
    }
    if (count < subArray.length) {
        return - 1;
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47401539_47401739_1_11
47401539_47401877_1_10
Title: Changing Array index 0 to 1 in java 
----------------------------------------

public static void answerCall () {
    for (int i = 0;
    i < customerList.Length - 1; i ++) {
        if (customerList [i + 1] != null) {
            customerList [i] = customerList [i + 1];
        }
    }
    customerList [customerList.Length] = null;
}
----------------------------------------

public static void answerCall () {
    for (int i = 0;
    i < customerList.length - 1; i ++) {
        if (customerList [i + 1] == 0) {
            customerList [i] = 0;
        } else if (customerList [i + 1] != 0) {
            customerList [i] = customerList [i + 1];
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47403145_47405287_32_40
47403145_47405287_50_63
Title: Implementing Adaptive function plotting 
----------------------------------------

public AdaptivePlot computePlot (int depth, double eps) {
    plot.clear ();
    Point pa = pointAt (a);
    Point pc = pointAt (c);
    plot.add (pa);
    plot.add (pc);
    computePlot (pa, pc, depth, eps);
    return this;
}
----------------------------------------

private void computePlot (Point pa, Point pc, int depth, double eps) {
    Point pb = pointAt (0.5 * (pa.x + pc.x));
    Point pa1 = pointAt (0.5 * (pa.x + pb.x));
    Point pb1 = pointAt (0.5 * (pb.x + pc.x));
    plot.add (pb);
    if (depth > 0 && (oscillates (pa.y, pa1.y, pb.y, pb1.y, pc.y) || unsmooth (pa.y, pa1.y, pb.y, pb1.y, pc.y, eps))) {
        computePlot (pa, pb, depth - 1, 2 * eps);
        computePlot (pb, pc, depth - 1, 2 * eps);
    }
    plot.add (pa1);
    plot.add (pb1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407251_47407646_1_15
47407251_47408893_1_16
Title: Optimal way to find next prime number (Java) 
----------------------------------------

public int nextPrime (int input) {
    int counter;
    while (true) {
        counter = 0;
        for (int i = 1;
        i <= input; i ++) {
            if (input % i == 0) counter ++;

        }
        if (counter == 2) return input;
        else {
            input ++;
            continue;
        }
    }
}
----------------------------------------

public int nextPrime (int input) {
    int counter;
    input ++;
    while (true) {
        counter = 0;
        for (int i = 2;
        i <= sqrt (input); i ++) {
            if (input % i == 0) counter ++;

        }
        if (counter == 0) return input;
        else {
            input ++;
            continue;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407251_47407646_1_15
47407251_51128309_1_15
Title: Optimal way to find next prime number (Java) 
----------------------------------------

public int nextPrime (int input) {
    int counter;
    while (true) {
        counter = 0;
        for (int i = 1;
        i <= input; i ++) {
            if (input % i == 0) counter ++;

        }
        if (counter == 2) return input;
        else {
            input ++;
            continue;
        }
    }
}
----------------------------------------

static long nextPrime (long number) {
    boolean prime = false;
    long n = number;
    while (! prime && n < number * 2) {
        n ++;
        prime = true;
        for (int i = 2;
        i < n; i ++) {
            if (n % i == 0) {
                prime = false;
                break;
            }
        }
    }
    return n;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407251_47408893_1_16
47407251_51128309_1_15
Title: Optimal way to find next prime number (Java) 
----------------------------------------

public int nextPrime (int input) {
    int counter;
    input ++;
    while (true) {
        counter = 0;
        for (int i = 2;
        i <= sqrt (input); i ++) {
            if (input % i == 0) counter ++;

        }
        if (counter == 0) return input;
        else {
            input ++;
            continue;
        }
    }
}
----------------------------------------

static long nextPrime (long number) {
    boolean prime = false;
    long n = number;
    while (! prime && n < number * 2) {
        n ++;
        prime = true;
        for (int i = 2;
        i < n; i ++) {
            if (n % i == 0) {
                prime = false;
                break;
            }
        }
    }
    return n;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407322_47407635_1_34
47407322_47408375_5_26
Title: Java program to find the duplicate record in an array when the number is repeated more than twice 
----------------------------------------

public static void main (String [] args) throws IOException {
    int a, i;
    Scanner sc = new Scanner (System.in);
    a = sc.nextInt ();
    long [] b = new long [a];
    for (i = 0; i <= (b.length - 1);) {
        do {
            b [i] = sc.nextLong ();
            i ++;
        } while (i <= a - 1);
    }
    Set < Long > first = new HashSet < > ();
    Set < Long > duplicates = new HashSet < > ();
    for (i = 0; i < b.length; i ++) {
        if (! first.add (b [i])) {
            duplicates.add (b [i]);
        }
    }
    String message = duplicates.size () > 0 ? "Duplicate records:" : "No Duplicate entry";
    System.out.println (message);
    duplicates.stream ().forEach (System.out :: println);
    first.removeAll (duplicates);
    if (first.size () > 0) {
        System.out.println ("Unique Entries:");
        first.stream ().forEach (System.out :: println);
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    ArrayList < Integer > arr = new ArrayList < Integer > ();
    int length = sc.nextInt ();
    int myarr [] = new int [length];
    for (int i = 0;
    i < length; i ++) {
        System.out.println ("enter the value of array");
        int value = sc.nextInt ();
        if (arr.contains (value)) {
            System.out.println ("dublicate value not add and index not increased");
            i = i - 1;
        } else {
            myarr [i] = value;
        }
        arr.add (value);
    }
    System.out.println ("Here is the array output");
    for (int m = 0;
    m < length; m ++) {
        System.out.print (myarr [m] + ",");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407322_47407635_1_34
47407322_47467798_7_35
Title: Java program to find the duplicate record in an array when the number is repeated more than twice 
----------------------------------------

public static void main (String [] args) throws IOException {
    int a, i;
    Scanner sc = new Scanner (System.in);
    a = sc.nextInt ();
    long [] b = new long [a];
    for (i = 0; i <= (b.length - 1);) {
        do {
            b [i] = sc.nextLong ();
            i ++;
        } while (i <= a - 1);
    }
    Set < Long > first = new HashSet < > ();
    Set < Long > duplicates = new HashSet < > ();
    for (i = 0; i < b.length; i ++) {
        if (! first.add (b [i])) {
            duplicates.add (b [i]);
        }
    }
    String message = duplicates.size () > 0 ? "Duplicate records:" : "No Duplicate entry";
    System.out.println (message);
    duplicates.stream ().forEach (System.out :: println);
    first.removeAll (duplicates);
    if (first.size () > 0) {
        System.out.println ("Unique Entries:");
        first.stream ().forEach (System.out :: println);
    }
}
----------------------------------------

public static void main (String [] args) {
    int a, i;
    Scanner sc = new Scanner (System.in);
    a = sc.nextInt ();
    long [] b = new long [a];
    Map < Long, Integer > countMap = new HashMap < Long, Integer > ();
    for (i = 0; i <= (b.length - 1);) {
        do {
            b [i] = sc.nextLong ();
            if (countMap.containsKey (b [i])) {
                countMap.put (b [i], countMap.get (b [i]) + 1);
            } else {
                countMap.put (b [i], 1);
            }
            i ++;
        } while (i <= a - 1);
    }
    System.out.println ("Duplicate records :");
    for (Long key : countMap.keySet ()) {
        if (countMap.get (key) > 1) {
            System.out.println (key);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47407322_47408375_5_26
47407322_47467798_7_35
Title: Java program to find the duplicate record in an array when the number is repeated more than twice 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    ArrayList < Integer > arr = new ArrayList < Integer > ();
    int length = sc.nextInt ();
    int myarr [] = new int [length];
    for (int i = 0;
    i < length; i ++) {
        System.out.println ("enter the value of array");
        int value = sc.nextInt ();
        if (arr.contains (value)) {
            System.out.println ("dublicate value not add and index not increased");
            i = i - 1;
        } else {
            myarr [i] = value;
        }
        arr.add (value);
    }
    System.out.println ("Here is the array output");
    for (int m = 0;
    m < length; m ++) {
        System.out.print (myarr [m] + ",");
    }
}
----------------------------------------

public static void main (String [] args) {
    int a, i;
    Scanner sc = new Scanner (System.in);
    a = sc.nextInt ();
    long [] b = new long [a];
    Map < Long, Integer > countMap = new HashMap < Long, Integer > ();
    for (i = 0; i <= (b.length - 1);) {
        do {
            b [i] = sc.nextLong ();
            if (countMap.containsKey (b [i])) {
                countMap.put (b [i], countMap.get (b [i]) + 1);
            } else {
                countMap.put (b [i], 1);
            }
            i ++;
        } while (i <= a - 1);
    }
    System.out.println ("Duplicate records :");
    for (Long key : countMap.keySet ()) {
        if (countMap.get (key) > 1) {
            System.out.println (key);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47415524_47416527_25_70
47415524_47526904_1_33
Title: JAVA - How can i read an XML file and save each node to a string array 
----------------------------------------

public static void main (String [] args) {
    init ();
    SAXBuilder builder = new SAXBuilder ();
    String folderPath = "C:\\Users\\udi\\Documents\\external\\XML\\";
    String fileName = "configTest.xml";
    String filePath = folderPath + fileName;
    File xmlFile = new File (filePath);
    List < String > nodes = new ArrayList < String > ();
    List < String > attributeNodes = new ArrayList < String > ();
    try {
        Document document = (Document) builder.build (xmlFile);
        Element rootNode = document.getRootElement ();
        List configList = rootNode.getChildren ();
        for (int i = 0;
        i < configList.size (); i ++) {
            Element node = (Element) configList.get (i);
            if (wantedNodes.contains (node.getName ())) {
                nodes.add (node.getName ());
                List dataNodes = node.getChildren ();
                for (int j = 0;
                j < dataNodes.size (); ++ j) {
                    Element dataNode = (Element) dataNodes.get (j);
                    if (wantedAttributes.contains (dataNode.getName ())) {
                        attributeNodes.add (dataNode.getValue ());
                    }
                }
            }
        }
    } catch (IOException io) {
        System.out.println (io.getMessage ());
    } catch (JDOMException jdomex) {
        System.out.println (jdomex.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String folderPath = "C:\\XML\\";
    String fileName = "2.xml";
    String xmlFile = folderPath + fileName;
    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder dBuilder;
    try {
        dBuilder = dbFactory.newDocumentBuilder ();
        Document doc = dBuilder.parse (xmlFile);
        doc.getDocumentElement ().normalize ();
        NodeList mainList = doc.getElementsByTagName ("Page");
        List < String > list = new ArrayList < String > ();
        for (int temp = 0;
        temp < mainList.getLength (); temp ++) {
            Node mainNode = mainList.item (temp);
            Element eElement = (Element) mainNode;
            list.add (eElement.getAttribute ("id"));
            System.out.println (list.get (temp));
        }
        System.out.println (list);
        System.out.println ("----------------------------------------");
    } catch (SAXException | ParserConfigurationException | IOException e1) {
        e1.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47428417_47470319_112_129
47428417_47470319_83_102
Title: "Producer-Consumer Bounded Buffer Insert Error?" 
----------------------------------------

public void run () {
    Random sleepRand = new Random ();
    for (int i = 0;
    i < 100; i ++) {
        try {
            Thread.sleep (sleepRand.nextInt (500));
        } catch (InterruptedException e) {
            System.out.println ("CONSUMER INTERRUPT: " + e);
        }
        try {
            buffer.remove ();
        } catch (Exception e) {
            System.out.println ("Error while removing " + e);
        }
    }
}
----------------------------------------

public void run () {
    Random proRand = new Random ();
    Random sleepRand = new Random ();
    for (int i = 0;
    i < 100; i ++) {
        try {
            Thread.sleep (sleepRand.nextInt (500));
        } catch (InterruptedException e) {
            System.out.println ("PRODUCER INTERRUPT: " + e);
        }
        try {
            buffer.insert (proRand.nextInt ((99999 - 10000) + 10000));
        } catch (Exception e) {
            System.out.println ("Error while inserting " + e);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47431310_47431344_19_36
47431310_47431415_22_39
Title: "Variable accessed from inner class need to declare final" 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.addition);
    valueOne = (EditText) findViewById (R.id.valueOne);
    valueTwo = (EditText) findViewById (R.id.valueTwo);
    result = (TextView) findViewById (R.id.result);
    btnAdd = (Button) findViewById (R.id.buttonAdd);
    btnAdd.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            num1 = Double.parseDouble (valueOne.getText ().toString ());
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.addition);
    valueOne = (EditText) findViewById (R.id.valueOne);
    valueTwo = (EditText) findViewById (R.id.valueTwo);
    result = (TextView) findViewById (R.id.result);
    btnAdd = (Button) findViewById (R.id.buttonAdd);
    btnAdd.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            num1 = Double.parseDouble (valueOne.getText ().toString ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47431960_47432188_18_33
47431960_47432609_15_29
Title: When recycleview scrolling parent activity button go disable 
----------------------------------------

public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
    if (isChecked) {
        ((MainActivity) context).isChecked (true);
        holder.chkBox.setChecked (true);
        dataItemsArrayList.get (position).setChecked (true);
    } else {
        ((MainActivity) context).isChecked (false);
        holder.chkBox.setChecked (false);
        dataItemsArrayList.get (position).setChecked (false);
    }
}
----------------------------------------

public void onCheckedChanged (CompoundButton compoundButton, boolean b) {
    items.get (position).setChecked (b);
    if (items.get (position).isChecked ()) Count ++;
    else Count --;

    if (Count > 0) {
        ((MyActivity) context).showButton ().setEnabled (true);
    } else {
        ((MyActivity) context).showButton ().setEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47431960_47432188_1_36
47431960_47432609_1_35
Title: When recycleview scrolling parent activity button go disable 
----------------------------------------

@Override
public void onBindViewHolder (final ViewHolder holder, final int position) {
    if (dataItemsArrayList.get (position).isChecked) {
        holder.chkBox.setChecked (true);
    } else {
        holder.chkBox.setChecked (false);
    }
    holder.tvTitle.setText (dataItemsArrayList.get (position).getTitle () + "");
    holder.tvPrice.setText (dataItemsArrayList.get (position).getPrice () + "");
    holder.tvQTY.setText (dataItemsArrayList.get (position).getQty () + "");
    holder.chkBox.setTag (position);
    holder.chkBox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            if (isChecked) {
                ((MainActivity) context).isChecked (true);
                holder.chkBox.setChecked (true);
                dataItemsArrayList.get (position).setChecked (true);
            } else {
                ((MainActivity) context).isChecked (false);
                holder.chkBox.setChecked (false);
                dataItemsArrayList.get (position).setChecked (false);
            }
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (RecyclerView.ViewHolder holder, int position) {
    try {
        final GridViewHolder viewHolder = (GridViewHolder) holder;
        viewHolder.myCheckBox.setTag (position);
        viewHolder.myCheckBox.setOnCheckedChangeListener (null);
        viewHolder.myCheckBox.setChecked (items.get (position).isChecked ());
        viewHolder.myCheckBox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
            @Override
            public void onCheckedChanged (CompoundButton compoundButton, boolean b) {
                items.get (position).setChecked (b);
                if (items.get (position).isChecked ()) Count ++;
                else Count --;

                if (Count > 0) {
                    ((MyActivity) context).showButton ().setEnabled (true);
                } else {
                    ((MyActivity) context).showButton ().setEnabled (false);
                }
            }}

        );
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47434588_47435630_27_53
47434588_47435630_39_51
Title: Calculate total sum from all prices items 
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder dialogBuilder = new AlertDialog.Builder (context);
    LayoutInflater inflater = context.getLayoutInflater ();
    final View dialogView = inflater.inflate (R.layout.dialog_alert, null);
    dialogBuilder.setView (dialogView);
    final ElegantNumberButton elegantNumberButton = (ElegantNumberButton) dialogView.findViewById (R.id.elegantNumberButton);
    final Button dialog_btn = (Button) dialogView.findViewById (R.id.dialog_btn);
    dialogBuilder.setTitle ("Alege cantitate : " + vanzatorProduse.getProdus ());
    final AlertDialog b = dialogBuilder.create ();
    b.show ();
    dialog_btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            String num = elegantNumberButton.getNumber ();
            total = (Integer.parseInt (vanzatorProduse.getPret ()) * (Integer.parseInt (num)));
            textViewPret1.setText (String.valueOf (total));
            textViewCantitate1.setText (num);
            b.dismiss ();
            vanzatorProduse.setSubTotal (total);
            Toast.makeText (context, "total : " + calculateTotal (), Toast.LENGTH_LONG).show ();
        }}

    );
}
----------------------------------------

public void onClick (View v) {
    String num = elegantNumberButton.getNumber ();
    total = (Integer.parseInt (vanzatorProduse.getPret ()) * (Integer.parseInt (num)));
    textViewPret1.setText (String.valueOf (total));
    textViewCantitate1.setText (num);
    b.dismiss ();
    vanzatorProduse.setSubTotal (total);
    Toast.makeText (context, "total : " + calculateTotal (), Toast.LENGTH_LONG).show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47434881_47436017_4_23
47434881_47436520_1_22
Title: I am getting an error while trying to calculate if a number is palaindrome? 
----------------------------------------

public static void main (String [] args) {
    int number;
    System.out.println ("Enter here:  ");
    Scanner sc = new Scanner (System.in);
    number = sc.nextInt ();
    int reverse = 0;
    int temp = number;
    while (number != 0) {
        int rel = number % 10;
        reverse = (reverse * 10) + rel;
        number = number / 10;
    }
    String resMessage = temp == reverse ? "the number is palaindrome " + reverse : "the number is not palaindrome " + reverse;
    System.out.println (resMessage);
}
----------------------------------------

public static void main (String [] args) {
    int number;
    System.out.println ("Enter here:  ");
    Scanner sc = new Scanner (System.in);
    number = sc.nextInt ();
    int numberRef = number;
    int reverse = 0;
    while (number != 0) {
        int rel = number % 10 == 0 ? 0 : number % 10;
        reverse = (reverse * 10) + rel;
        number = number / 10;
    }
    if (numberRef == reverse) {
        System.out.println ("the number is palaindrome " + reverse);
    } else System.out.println ("the number is not palaindrome " + reverse);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47442730_47444234_10_26
47442730_47489493_21_57
Title: Can I reuse the threads for all the iterations of the for loop here? 
----------------------------------------

public void run () {
    while (true) {
        synchronized (this.producer) {
            Integer i = this.producer.peek ();
            if (i != null && check (i)) {
                this.producer.get ();
                process (i);
            }
            try {
                this.producer.wait ();
            } catch (InterruptedException ie) {
                throw new RuntimeException ("Consumer interrupted!");
            }
        }
    }
}
----------------------------------------

public void run () {
    ExecutorService executorService = Executors.newFixedThreadPool (2);
    int num = 0;
    Random r = new Random ();
    try {
        for (int i = 0;
        i < 5; i ++) {
            num = r.nextInt (100);
            System.out.println ("Main Thread and Generated Number is " + num);
            if (num % 2 == 0) {
                executorService.submit (new even (num));
            } else {
                executorService.submit (new odd (num));
            }
            Thread.sleep (1000);
            System.out.println ("--------------------------------------");
        }
    } catch (Exception ex) {
        System.out.println (ex.getMessage ());
    } finally {
        executorService.shutdown ();
    }
    try {
        executorService.awaitTermination (1, TimeUnit.HOURS);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47443071_47459196_1_28
47443071_47469853_1_17
Title: Could not commit Hibernate transaction 
----------------------------------------

@Override
public boolean updateStoreDetails (List < StoreDetailsDTO > storeDetailsDTOs) {
    Session session = this.hibernateSessionFactory.getCurrentSession ();
    int count = 0;
    boolean sessionEnded = true;
    for (StoreDetailsDTO storeDetailsDTOTmp : storeDetailsDTOs) {
        if (sessionEnded) {
            session.getTransaction ().begin ();
            sessionEnded = false;
        }
        session.saveOrUpdate (storeDetailsDTOTmp);
        if (++ count % 10 == 0) {
            logger.info ("Clearing session after 50 batch size. Total rows inserted/updated till now: " + count);
            session.getTransaction ().commit ();
            session.flush ();
            session.clear ();
            sessionEnded = true;
        } else if (count == storeDetailsDTOs.size ()) {
            session.getTransaction ().commit ();
            session.flush ();
            session.clear ();
        }

    }
    logger.info ("Insertion completed. Total rows inserted/updated: " + count);
    return true;
}
----------------------------------------

@Override
public boolean updateStoreDetails (List < StoreDetailsDTO > storeDetailsDTOs) {
    Session session = this.hibernateSessionFactory.getCurrentSession ();
    int count = 0;
    boolean sessionEnded = false;
    for (StoreDetailsDTO storeDetailsDTOTmp : storeDetailsDTOs) {
        session.saveOrUpdate (storeDetailsDTOTmp);
        if (++ count % 50 == 0) {
            logger.info ("Clearing session after 50 batch size.");
            session.flush ();
            session.clear ();
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47447196_47447951_5_25
47447196_47448026_5_18
Title: Making RecyclerView image fullscreen when clicked 
----------------------------------------

public ViewHolder (View view) {
    super (view);
    ImageView imageView = (ImageView) view.findViewById (R.id.imageGalleryView);
    imageView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            File imageFile = imagesFile.listFiles () [getAdapterPosition ()];
            Intent intent = new Intent (context, FullScreenActivity.class);
            intent.putExtra ("filepath", imageFile.getAbsolutePath ());
            intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
            context.startActivity (intent);
        }}

    );
}
----------------------------------------

public ViewHolder (View view) {
    super (view);
    ImageView imageView = (ImageView) view.findViewById (R.id.imageGalleryView);
    imageView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47447721_47448119_3_24
47447721_47448642_3_29
Title: How to create array to ask user to enter a certain amount of numbers and then take the average 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Please enter the max number:");
    int max = input.nextInt ();
    int [] arr1 = new int [max];
    for (int i = 0;
    i < max; i ++) {
        arr1 [i] = input.nextInt ();
    }
    int sum = 0;
    for (int num : arr1) {
        sum = sum + num;
    }
    double avg = sum / max;
    System.out.println (" Avarage : " + avg);
}
----------------------------------------

public static void main (String [] args) {
    try (Scanner input = new Scanner (System.in)) {
        System.out.print ("Please enter the max number: ");
        int max = input.nextInt ();
        int [] arr1 = new int [max];
        double sum = 0.0;
        for (int i = 0;
        i < max; i ++) {
            arr1 [i] = input.nextInt ();
            sum += arr1 [i];
        }
        for (int i = 0;
        i < max; i ++) {
            System.out.print (arr1 [i] + " ");
        }
        System.out.println ();
        System.out.println ("Average of all is " + sum / max);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47450254_47451482_6_17
47450254_47472776_1_10
Title: How to get all float values from string in Java 
----------------------------------------

public static void main (String [] args) {
    String str = "Entry, x: 0.0 y: -0.9980941 Entry, x: 1.0 y: -0.9686125 Entry, x: 2.0 y: 0.9044667";
    String regEx = "\\d*\\.?\\d+";
    Pattern patternObject = Pattern.compile (regEx);
    Matcher matcher = patternObject.matcher (str);
    while (matcher.find ()) {
        System.out.println (matcher.group ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = " Entry, x: 0.0 y: -0.9980941 Entry, x: 1.0 y: -0.9686125 Entry, x: 2.0 y: 0.9044667";
    List < String > allMatches = new ArrayList < > ();
    Matcher m = Pattern.compile ("[-+]?[0-9]+\\.?[0-9]*").matcher (s);
    while (m.find ()) {
        allMatches.add (m.group ());
    }
    System.out.println (allMatches);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47453242_47458225_133_147
47453242_47458225_50_62
Title: Alert box not repeating and input checking not working 
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    m_Text = input.getText ().toString ();
    if (m_Text.equals ("pass")) {
        isAlarm = false;
    } else {
        dialog.dismiss ();
        buildDialog ();
        input.setText ("");
    }
}
----------------------------------------

public void onClick (View view) {
    AlertDialog.Builder altdial = new AlertDialog.Builder (MainActivity.this);
    altdial.setMessage ("Bitte geben Sie mich bei der Kasse ab.").setCancelable (false).setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialogInterface, int i) {
            dialogInterface.cancel ();
        }}

    );
    AlertDialog alert = altdial.create ();
    alert.setTitle ("xxx");
    alert.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47453242_47458225_133_147
47453242_47458225_70_82
Title: Alert box not repeating and input checking not working 
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    m_Text = input.getText ().toString ();
    if (m_Text.equals ("pass")) {
        isAlarm = false;
    } else {
        dialog.dismiss ();
        buildDialog ();
        input.setText ("");
    }
}
----------------------------------------

public void onClick (View view) {
    AlertDialog.Builder altdial = new AlertDialog.Builder (MainActivity.this);
    altdial.setMessage ("Bitte geben Sie mich sofort bei der Kasse ab!").setCancelable (false).setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialogInterface, int i) {
            dialogInterface.cancel ();
        }}

    );
    AlertDialog alert = altdial.create ();
    alert.setTitle ("xxx");
    alert.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47453242_47458225_50_62
47453242_47458225_70_82
Title: Alert box not repeating and input checking not working 
----------------------------------------

public void onClick (View view) {
    AlertDialog.Builder altdial = new AlertDialog.Builder (MainActivity.this);
    altdial.setMessage ("Bitte geben Sie mich bei der Kasse ab.").setCancelable (false).setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialogInterface, int i) {
            dialogInterface.cancel ();
        }}

    );
    AlertDialog alert = altdial.create ();
    alert.setTitle ("xxx");
    alert.show ();
}
----------------------------------------

public void onClick (View view) {
    AlertDialog.Builder altdial = new AlertDialog.Builder (MainActivity.this);
    altdial.setMessage ("Bitte geben Sie mich sofort bei der Kasse ab!").setCancelable (false).setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialogInterface, int i) {
            dialogInterface.cancel ();
        }}

    );
    AlertDialog alert = altdial.create ();
    alert.setTitle ("xxx");
    alert.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47454785_47455260_1_34
47454785_47455824_20_38
Title: Matrix multiply in Java 
----------------------------------------

public static int [] [] lungimeDrumuri (int [] [] array, int n) {
    int [] [] newArray = new int [array.length] [array.length];
    int [] [] tmp = new int [array.length] [array.length];
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            newArray [i] [j] = array [i] [j];
        }
    }
    for (int k = 1;
    k < n; k ++) {
        for (int i = 0;
        i < array.length; i ++) {
            for (int j = 0;
            j < array.length; j ++) {
                int sum = 0;
                for (int x = 0;
                x < array.length; x ++) {
                    sum += newArray [i] [x] * array [x] [j];
                }
                tmp [i] [j] = sum;
            }
        }
        System.arraycopy (tmp, 0, newArray, 0, tmp.length);
        tmp = new int [array.length] [array.length];
    }
    return newArray;
}
----------------------------------------

public static int [] [] lungimeDrumuri (int [] [] array, int newArray [] [], int n) {
    int newArray1 [] [] = new int [array.length] [array.length];
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            int sum = 0;
            for (int x = 0;
            x < array.length; x ++) {
                sum += array [i] [x] * newArray [x] [j];
            }
            newArray1 [i] [j] = sum;
        }
    }
    return newArray1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47462243_47462921_13_25
47462243_47462938_18_48
Title: How to extract number only and sort in ascending from text file contains String and Int? 
----------------------------------------

public static void main (String [] args) {
    String str = "9, a, R, 3, 60, Z, 40, 30, 33, 29, DDD, aaa, !!, 21, 88, s, q, l, z, 2, a";
    ArrayList < Integer > numList = new ArrayList < Integer > ();
    String [] strArr = str.split (",");
    for (int i = 0;
    i < strArr.length; i ++) {
        if (isNumeric (strArr [i].trim ())) {
            numList.add (Integer.parseInt (strArr [i].trim ()));
        }
    }
    Collections.sort (numList);
    System.out.println (numList);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    FileInputStream fi = new FileInputStream ("F:\\SeleniumTCs\\input.txt");
    BufferedReader br = new BufferedReader (new InputStreamReader (fi));
    String strLine;
    ArrayList < Integer > nos = new ArrayList < Integer > ();
    while ((strLine = br.readLine ()) != null) {
        String [] arr = strLine.split (" ");
        for (int i = 0;
        i <= arr.length - 1; i ++) {
            try {
                int no = Integer.parseInt (arr [i]);
                nos.add (no);
            } catch (NumberFormatException e) {
            }
        }
        Collections.sort (nos);
    }
    System.out.println ("The Numbers in Ascending Order");
    for (int i : nos) {
        System.out.println (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47466310_47466419_1_10
47466310_47466453_1_27
Title: I want add this ArrayList to an existing .txt file 
----------------------------------------

public static void main (String [] args) throws IOException {
    ArrayList < String > personList = new ArrayList < > ();
    personList.add ("appending and writing");
    personList.add ("line by line");
    BufferedWriter output = new BufferedWriter (new FileWriter ("D:\\cicd poc\\abc.txt", true));
    for (String s : personList) {
        output.append (s + "\n");
    }
    output.close ();
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > personList = new ArrayList < > ();
    personList.add ("title");
    personList.add ("firstName");
    personList.add ("lastName");
    personList.add ("address");
    personList.add ("emailAddress");
    personList.add ("cellPhone");
    personList.add ("status");
    personList.add ("dateOfBirth");
    try (FileOutputStream fos = new FileOutputStream ("memberlog.txt")) {
        ObjectOutputStream oos = new ObjectOutputStream (fos);
        oos.writeObject (personList);
    } catch (IOException e) {
        System.out.println ("Exception Occurred:");
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
47466374_47466464_39_54
47466374_47466464_70_85
Title: Does AsyncTask works simultaneously? 
----------------------------------------

protected Void doInBackground (Void...params) {
    for (int index = 0;
    index < 50; index ++) {
        Log.i ("AsyncTask", "FirstAsyncTask");
        try {
            Thread.sleep (100);
        } catch (InterruptedException exception) {
            exception.printStackTrace ();
        }
    }
    return null;
}
----------------------------------------

protected Void doInBackground (Void...params) {
    for (int index = 0;
    index < 50; index ++) {
        Log.d ("AsyncTask", "SecondAsyncTask");
        try {
            Thread.sleep (100);
        } catch (InterruptedException exception) {
            exception.printStackTrace ();
        }
    }
    return null;
}
----------------------------------------
