$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51155240_51155289_1_12
51155240_51155534_1_17
Title: Java making switch case statment shorter 
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    SongListFragment slf = new SongListFragment ();
    slf.setAudioList (getAudioList (tabTitles [position]));
    slf.setItemOnClickListener (new SongListFragment.SongListItemOnClickListener () {
        @Override
        public void onClick (Audio audio) {
            itemListener.onClick (audio);
        }}

    );
    return slf;
}
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    switch (position) {
        case 0 :
            return yourMethod (0);
        case 1 :
            return yourMethod (1);
        case 2 :
            return yourMethod (2);
        case 3 :
            return yourMethod (3);
        case 4 :
            return yourMethod (4);
        default :
            return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51155240_51155534_1_17
51155240_51155687_1_17
Title: Java making switch case statment shorter 
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    switch (position) {
        case 0 :
            return yourMethod (0);
        case 1 :
            return yourMethod (1);
        case 2 :
            return yourMethod (2);
        case 3 :
            return yourMethod (3);
        case 4 :
            return yourMethod (4);
        default :
            return null;
    }
}
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    if (position < 0 || position >= tabTiles.length ()) {
        return null;
    } else {
        SongListFragment slf = new SongListFragment ();
        slf.setAudioList (getAudioList (tabTitles [position]));
        slf.setItemOnClickListener (new SongListFragment.SongListItemOnClickListener () {
            @Override
            public void onClick (Audio audio) {
                itemListener.onClick (audio);
            }}

        );
        return slf;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51155240_51155534_1_17
51155240_51157355_1_19
Title: Java making switch case statment shorter 
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    switch (position) {
        case 0 :
            return yourMethod (0);
        case 1 :
            return yourMethod (1);
        case 2 :
            return yourMethod (2);
        case 3 :
            return yourMethod (3);
        case 4 :
            return yourMethod (4);
        default :
            return null;
    }
}
----------------------------------------

@Override
public SongListFragment getItem (int position) {
    SongListFragment slf = null;
    if (position >= 0 && position <= 4 && position < tabTiles.length ()) {
        slf = new SongListFragment ();
        slf.setAudioList (getAudioList (tabTitles [position]));
        slf.setItemOnClickListener (new SongListFragment.SongListItemOnClickListener () {
            @Override
            public void onClick (Audio audio) {
                itemListener.onClick (audio);
            }}

        );
    }
    return slf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51159097_51159539_1_65
51159097_51184377_1_55
Title: Post Json data with HttpURLConnection to REST API server 
----------------------------------------

public static String executePost (String targetURL, String requestJSON, String apikey) {
    HttpURLConnection connection = null;
    InputStream is = null;
    try {
        URL url = new URL (targetURL);
        connection = (HttpURLConnection) url.openConnection ();
        connection.setRequestMethod ("POST");
        connection.setRequestProperty ("Content-Type", "application/json");
        if (apikey.equals (Constants.APIKEY_PREPROD)) {
            connection.setRequestProperty ("Authorization", Constants.APIKEY_PREPROD);
        }
        if (apikey.equals (Constants.APIKEY_PROD)) {
            connection.setRequestProperty ("Authorization", Constants.APIKEY_PROD);
        }
        connection.setRequestProperty ("Content-Length", Integer.toString (requestJSON.getBytes ().length));
        connection.setRequestProperty ("Content-Language", "en-US");
        connection.setUseCaches (false);
        connection.setDoOutput (true);
        System.out.println (requestJSON);
        DataOutputStream wr = new DataOutputStream (connection.getOutputStream ());
        wr.writeBytes (requestJSON);
        wr.close ();
        try {
            is = connection.getInputStream ();
        } catch (IOException ioe) {
            if (connection instanceof HttpURLConnection) {
                HttpURLConnection httpConn = (HttpURLConnection) connection;
                int statusCode = httpConn.getResponseCode ();
                if (statusCode != 200) {
                    is = httpConn.getErrorStream ();
                }
            }
        }
        BufferedReader rd = new BufferedReader (new InputStreamReader (is));
        StringBuilder response = new StringBuilder ();
        String line;
        while ((line = rd.readLine ()) != null) {
            response.append (line);
            response.append ('\r');
        }
        rd.close ();
        return response.toString ();
    } catch (Exception e) {
        e.printStackTrace ();
        return null;
    } finally {
        if (connection != null) {
            connection.disconnect ();
        }
    }
}
----------------------------------------

public static String executePost (String targetURL, String requestJSON, String apikey) {
    HttpURLConnection connection = null;
    InputStream is = null;
    String authKey = "Basic " + Base64.encodeToString ((apikey + ":").getBytes (), Base64.NO_WRAP);
    try {
        URL url = new URL (targetURL);
        connection = (HttpURLConnection) url.openConnection ();
        connection.setRequestMethod ("POST");
        connection.setRequestProperty ("Content-Type", "text/plain");
        connection.setRequestProperty ("Authorization", authKey);
        connection.setRequestProperty ("Content-Length", Integer.toString (requestJSON.getBytes ().length));
        connection.setUseCaches (false);
        connection.setDoOutput (true);
        DataOutputStream wr = new DataOutputStream (connection.getOutputStream ());
        wr.writeBytes (requestJSON);
        wr.close ();
        try {
            is = connection.getInputStream ();
        } catch (IOException ioe) {
            if (connection instanceof HttpURLConnection) {
                HttpURLConnection httpConn = (HttpURLConnection) connection;
                int statusCode = httpConn.getResponseCode ();
                if (statusCode != 200) {
                    is = httpConn.getErrorStream ();
                }
            }
        }
        BufferedReader rd = new BufferedReader (new InputStreamReader (is));
        StringBuilder response = new StringBuilder ();
        String line;
        while ((line = rd.readLine ()) != null) {
            response.append (line);
            response.append ('\r');
        }
        rd.close ();
        return response.toString ();
    } catch (Exception e) {
        e.printStackTrace ();
        return null;
    } finally {
        if (connection != null) {
            connection.disconnect ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51159957_51160336_6_34
51159957_51160480_3_21
Title: How to stop on duplicate entry (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 20, maxItems = 0;
    String arrayOfNames [] = new String [numOfItems];
    String Temp = "";
    for (int i = 0;
    i < arrayOfNames.length; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        Temp = scan.nextLine ();
        if (Temp.equals (arrayOfNames [0])) {
            maxItems = i;
            break;
        } else {
            arrayOfNames [i] = Temp;
        }
    }
    for (int i = 0;
    i < maxItems; i ++) {
        System.out.print ("Item # " + (i + 1) + " : ");
        System.out.print (arrayOfNames [i] + "\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > al = new ArrayList < String > ();
    Scanner sc = new Scanner (System.in);
    while (true) {
        System.out.print ("Enter name:");
        String temp = sc.next ();
        if (al.isEmpty () != true) {
            if (temp.equals (al.get (0))) break;

        }
        al.add (temp);
    }
    for (int i = 0;
    i < al.size (); i ++) {
        System.out.println (al.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51159957_51160336_6_34
51159957_51160642_67_98
Title: How to stop on duplicate entry (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 20, maxItems = 0;
    String arrayOfNames [] = new String [numOfItems];
    String Temp = "";
    for (int i = 0;
    i < arrayOfNames.length; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        Temp = scan.nextLine ();
        if (Temp.equals (arrayOfNames [0])) {
            maxItems = i;
            break;
        } else {
            arrayOfNames [i] = Temp;
        }
    }
    for (int i = 0;
    i < maxItems; i ++) {
        System.out.print ("Item # " + (i + 1) + " : ");
        System.out.print (arrayOfNames [i] + "\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 0;
    System.out.print ("Enter How Many Items: ");
    try {
        numOfItems = Integer.parseInt (scan.nextLine ().trim ());
    } catch (NumberFormatException e) {
        System.out.print ("Number of items you entered is invalid!");
        System.exit (0);
    }
    Grocery grocery = new Grocery (numOfItems);
    for (int i = 0;
    i < numOfItems; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        if (! grocery.addItem (scan.nextLine ())) {
            System.out.println ("First Item Duplicate Detected!");
            System.exit (0);
        }
    }
    scan.close ();
    System.out.println (grocery.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51159957_51160480_3_21
51159957_51160642_67_98
Title: How to stop on duplicate entry (Java) 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > al = new ArrayList < String > ();
    Scanner sc = new Scanner (System.in);
    while (true) {
        System.out.print ("Enter name:");
        String temp = sc.next ();
        if (al.isEmpty () != true) {
            if (temp.equals (al.get (0))) break;

        }
        al.add (temp);
    }
    for (int i = 0;
    i < al.size (); i ++) {
        System.out.println (al.get (i));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int numOfItems = 0;
    System.out.print ("Enter How Many Items: ");
    try {
        numOfItems = Integer.parseInt (scan.nextLine ().trim ());
    } catch (NumberFormatException e) {
        System.out.print ("Number of items you entered is invalid!");
        System.exit (0);
    }
    Grocery grocery = new Grocery (numOfItems);
    for (int i = 0;
    i < numOfItems; i ++) {
        System.out.print ("Enter Item " + (i + 1) + " : ");
        if (! grocery.addItem (scan.nextLine ())) {
            System.out.println ("First Item Duplicate Detected!");
            System.exit (0);
        }
    }
    scan.close ();
    System.out.println (grocery.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51164413_51941933_1_19
51164413_51942151_1_14
Title: Increasing Triplet Subsequence 
----------------------------------------

public boolean increasingTriplet (int [] nums) {
    int first = Integer.MAX_VALUE;
    int second = Integer.MAX_VALUE;
    int third = Integer.MAX_VALUE;
    for (int p = 0;
    i < nums.length; p ++) {
        if (nums [p] <= third) {
            third = nums [p];
        } else {
            if (nums [p] <= second) {
                first = third;
                second = nums [p];
            } else {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean increasingTriplet (int [] nums) {
    for (int i = 0;
    i < nums.length - 2; ++ i) {
        for (int j = i + 1;
        j < nums.length - 1; ++ j) {
            if (nums [j] > nums [i]) {
                for (int k = j + 1;
                k < nums.length; ++ k) {
                    if (nums [k] > nums [j]) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51178385_51196203_24_41
51178385_51196203_51_71
Title: Even Odd number using Thread locking system 
----------------------------------------

public void run () {
    int i = 0;
    while (i <= 100) {
        object.getLock ().lock ();
        try {
            if (! object.isOdd ()) {
                System.out.println ("Even : " + i);
                i = i + 2;
                object.setOdd (true);
            }
        } catch (Exception e) {
            e.printStackTrace ();
        } finally {
            object.getLock ().unlock ();
        }
    }
}
----------------------------------------

public void run () {
    int i = 1;
    while (i <= 100) {
        object.getLock ().lock ();
        try {
            if (object.isOdd ()) {
                System.out.println ("Odd : " + i);
                i = i + 2;
                object.setOdd (false);
            }
        } catch (Exception e) {
            e.printStackTrace ();
        } finally {
            object.getLock ().unlock ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51184062_51184751_1_17
51184062_51184812_1_18
Title: Need help listing the frequency of characters based on user input 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    String s = scan.nextLine ();
    Map < Character, Integer > frequency = new TreeMap < > ();
    for (int i = 0;
    i < s.length (); i ++) {
        Character c = s.charAt (i);
        Integer n = frequency.get (c);
        if (n == null) frequency.put (c, 1);
        else frequency.put (c, n + 1);

    }
    for (Map.Entry < Character, Integer > e : frequency.entrySet ()) {
        System.out.println (e.getKey () + " " + e.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Map < Character, Integer > rst = new HashMap < > ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter String: ");
    String str = sc.nextLine ();
    char [] charArr = str.toCharArray ();
    for (int i = 0;
    i < charArr.length; i ++) {
        int cnt = rst.containsKey (charArr [i]) ? rst.get (charArr [i]) + 1 : 1;
        rst.put (charArr [i], cnt);
    }
    rst.entrySet ().forEach (entry -> {
        System.out.println (entry.getKey () + " " + entry.getValue ());
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51188295_51188929_20_29
51188295_51189451_4_15
Title: How to use a variable in different classes without it changing 
----------------------------------------

public void game_id () {
    String currentURL = Drivers.getDriver ().getCurrentUrl ();
    String [] arrayURL = currentURL.split ("/");
    int arrLength = arrayURL.length;
    final String gameID;
    gameID = arrayURL [arrLength - 1];
    System.out.println (gameID);
    this.currentGameId = gameID;
}
----------------------------------------

public String game_id () {
    String currentURL = Drivers.getDriver ().getCurrentUrl ();
    String [] arrayURL = currentURL.split ("/");
    int arrLength = arrayURL.length;
    final String gameID;
    gameID = arrayURL [arrLength - 1];
    System.out.println (gameID);
    gameId = gameID;
    return gameID;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51189335_51189623_26_40
51189335_51189998_20_37
Title: Print return value in Java 
----------------------------------------

public static int playGame (int maxNumber) {
    int answer = (int) (Math.random () * maxNumber) + 1;
    int guessCount = 0;
    boolean bool = false;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Guess a number between 1 and " + maxNumber);
    while (! bool) {
        int guess = reader.nextInt ();
        guessCount = guessCount + 1;
        bool = giveResponse (answer, guess);
    }
    return guessCount;
}
----------------------------------------

public static int playGame (int maxNumber) {
    int answer = (int) (Math.random () * maxNumber) + 1;
    int guessCount = 0;
    boolean bool = true;
    Scanner reader = new Scanner (System.in);
    System.out.println ("Guess a number between 1 and " + maxNumber);
    while (bool) {
        int guess = reader.nextInt ();
        guessCount = guessCount + 1;
        Answer ans = giveResponse (answer, guess);
        System.out.println (ans.getMessage ());
        if (ans == Answer.CORRECT) {
            bool = false;
            System.out.println ("You took " + guessCount + " guess to get right number.");
        }
    }
    return guessCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51189335_51189623_42_55
51189335_51189998_39_47
Title: Print return value in Java 
----------------------------------------

public static boolean giveResponse (int answer, int guess) {
    if (guess == answer) {
        System.out.println ("Your guess is correct!\r");
        return true;
    } else if (guess > answer) {
        System.out.println ("Your guess is too high, guess again:\r");
        return false;
    } else if (guess < answer) {
        System.out.println ("Your guess is too low, guess again:\r");
        return false;
    }

}
----------------------------------------

public static Answer giveResponse (int answer, int guess) {
    if (guess == answer) {
        return Answer.CORRECT;
    } else if (guess > answer) {
        return Answer.HIGH;
    } else {
        return Answer.LOW;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51190416_51191006_1_14
51190416_51191015_1_17
Title: "Given 2 strings a and b return the number of the positions where they contain the same length 2 substring" 
----------------------------------------

public int stringMatch (String a, String b) {
    int counter = 0;
    for (int i = 0;
    ((i < a.length () - 2) && (i < b.length () - 2)); i ++) {
        String aSub = a.substring (i, i + 2);
        String bSub = b.substring (i, i + 2);
        if (aSub.equals (bSub)) {
            counter ++;
        }
    }
    return counter;
}
----------------------------------------

public static int stringMatch (String a, String b) {
    int counter = 0;
    for (int i = 0;
    i < a.length () - 1; i ++) {
        for (int j = 0;
        j < b.length () - 1; j ++) {
            String aSub = a.substring (i, i + 2);
            String bSub = b.substring (j, j + 2);
            if (aSub.equals (bSub)) {
                System.out.println (aSub);
                counter ++;
            }
        }
    }
    return counter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5119920_5213795_23_37
5119920_5213795_3_21
Title: Convert byte to int and vice-versa 
----------------------------------------

public static byte [] convert (int [] in) {
    int bytesPerSample = 4;
    byte [] res = new byte [bytesPerSample * in.length];
    for (int i = 0;
    i < in.length; i ++) {
        int bOffset = i * bytesPerSample;
        int intVal = in [i];
        for (int b = 0;
        b < bytesPerSample; b ++) {
            res [bOffset + b] = (byte) (intVal & 0xFF);
            intVal>>= 8;
        }
    }
    return res;
}
----------------------------------------

public static int [] convert (byte [] in) {
    int bytesPerSample = 4;
    int [] res = new int [in.length / bytesPerSample];
    for (int i = 0;
    i < res.length; i ++) {
        int bOffset = i * bytesPerSample;
        int intVal = 0;
        for (int b = 0;
        b < bytesPerSample; b ++) {
            int v = in [bOffset + b];
            if (b < bytesPerSample - 1) {
                v &= 0xFF;
            }
            intVal += v << (b * 8);
        }
        res [i] = intVal;
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51208651_51208697_1_11
51208651_51208720_1_15
Title: are arrays equal method in java 
----------------------------------------

public static boolean areArraysEqual (int [] firstArr, int [] secArr) {
    if (firstArr == null || secArr == null || firstArr.length != secArr.length) {
        return false;
    }
    for (int i = 0;
    i < firstArr.length; i ++) {
        if (firstArr [i] != secArr [i]) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean areArraysEqual (int [] firstArr, int [] secArr) {
    System.out.println (firstArr.length);
    if (firstArr.length != secArr.length) {
        return false;
    }
    if (firstArr == null || secArr == null) {
        return false;
    }
    for (int i = 0;
    i < firstArr.length; i ++) {
        if (firstArr [i] != secArr [i]) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51226643_51226675_1_17
51226643_51226721_19_31
Title: Write a function that takes an array of int and returns sum of even and odd values as a array. (Read full in Description) 
----------------------------------------

public int [] getSumOfEvensAndOdds (int [] array) {
    int [] res = {0, 0};
    if (array == null) {
        return res;
    }
    int len = array.length;
    for (int i = 0;
    i < len; i ++) {
        if (array [i] % 2 == 0) {
            res [0] += array [i];
        } else {
            res [1] += array [i];
        }
    }
    return res;
}
----------------------------------------

public static int [] getSumOfEvensAndOdds (int [] arr) {
    int [] res = new int [2];
    if (arr == null) return res;

    for (int i : arr) {
        if (i % 2 == 0) {
            res [0] += i;
        } else {
            res [1] += i;
        }
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51227984_51228035_6_22
51227984_51228127_1_12
Title: Replace letters but NOT special characters and capital letters in strings (Java) 
----------------------------------------

private static String nextLetter (String data) {
    String result = "";
    for (int i = 0;
    i < data.length (); i ++) {
        char character = data.charAt (i);
        if (Character.isLowerCase (character)) {
            character ++;
            if (character == '{') {
                character = 'a';
            }
        }
        result += character;
    }
    return result;
}
----------------------------------------

public static String nextLetter (String s) {
    StringBuilder sb = new StringBuilder ();
    s.chars ().forEach (c -> {
        if (Character.isLowerCase (c)) {
            sb.append ((char) (((c - 'a' + 1) % 26) + 'a'));
        } else {
            sb.append ((char) c);
        }
    });
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51244404_51244673_10_18
51244404_51244729_14_22
Title: Output a currency's sheet from USD to CNY 
----------------------------------------

public static int [] convertDollarArray (int n) {
    int [] currencyArray = new int [21];
    int [] convertedValue = new int [21];
    for (int i = 1;
    i < currencyArray.length; i ++) {
        currencyArray [i] = i;
        convertedValue [i] = currencyArray [i] * n;
    }
    return convertedValue;
}
----------------------------------------

public static int [] convertDollarArray (int n) {
    int [] currencyArray = new int [21];
    int [] convertedValue = new int [21];
    for (int i = 1;
    i < currencyArray.length; i ++) {
        currencyArray [i] = i;
        convertedValue [i] = currencyArray [i] * n;
    }
    return convertedValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51248858_51249027_5_14
51248858_51249051_5_14
Title: How can I make this code shorter and cleaner 
----------------------------------------

public static void main (String [] args) throws Exception {
    try (Scanner scan = new Scanner (new File ("text.txt"))) {
        List < Integer > list = new ArrayList < Integer > ();
        while (scan.hasNextInt ()) list.add (scan.nextInt ());

        Collections.sort (list);
        System.out.println (list);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > lines = new ArrayList < > ();
    try (Stream < String > stream = Files.lines (Paths.get (FILE_LOCATION))) {
        lines = stream.map (Integer :: parseInt).collect (Collectors.toList ());
    } catch (IOException e) {
        e.printStackTrace ();
    }
    lines.sort (Comparator.naturalOrder ());
    lines.forEach (System.out :: println);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51248858_51249027_5_14
51248858_51249746_4_30
Title: How can I make this code shorter and cleaner 
----------------------------------------

public static void main (String [] args) throws Exception {
    try (Scanner scan = new Scanner (new File ("text.txt"))) {
        List < Integer > list = new ArrayList < Integer > ();
        while (scan.hasNextInt ()) list.add (scan.nextInt ());

        Collections.sort (list);
        System.out.println (list);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    File file = new File ("/Users/WalterCueva/Desktop/4.txt");
    if (! file.exists ()) {
        System.out.println ("The file does not exist ");
        System.exit (0);
    }
    Scanner input = new Scanner (file);
    ArrayList < Integer > numbers = new ArrayList < > ();
    while (input.hasNext ()) {
        numbers.add (input.nextInt ());
    }
    input.close ();
    for (double e : numbers) {
        System.out.println (e);
    }
    java.util.Collections.sort (numbers);
    System.out.println (numbers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51248858_51249051_5_14
51248858_51249746_4_30
Title: How can I make this code shorter and cleaner 
----------------------------------------

public static void main (String [] args) {
    List < Integer > lines = new ArrayList < > ();
    try (Stream < String > stream = Files.lines (Paths.get (FILE_LOCATION))) {
        lines = stream.map (Integer :: parseInt).collect (Collectors.toList ());
    } catch (IOException e) {
        e.printStackTrace ();
    }
    lines.sort (Comparator.naturalOrder ());
    lines.forEach (System.out :: println);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    File file = new File ("/Users/WalterCueva/Desktop/4.txt");
    if (! file.exists ()) {
        System.out.println ("The file does not exist ");
        System.exit (0);
    }
    Scanner input = new Scanner (file);
    ArrayList < Integer > numbers = new ArrayList < > ();
    while (input.hasNext ()) {
        numbers.add (input.nextInt ());
    }
    input.close ();
    for (double e : numbers) {
        System.out.println (e);
    }
    java.util.Collections.sort (numbers);
    System.out.println (numbers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51250617_51250984_4_30
51250617_51251540_13_40
Title: syntax mistakes in java code in android 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    EditText firstNumber;
    EditText secondNumber;
    TextView addResult;
    Button btnAdd;
    double num1, num2, sum;
    firstNumber = findViewById (R.id.txtNumber1);
    secondNumber = findViewById (R.id.txtNumber2);
    addResult = findViewById (R.id.txtResult);
    btnAdd = findViewById (R.id.btnAdd);
    btnAdd.setOnClickListener (new OnClickListener () {
        public void onClick (View v) {
            num1 = Double.parseDouble (firstNumber.getText ().toString ());
            num2 = Double.parseDouble (secondNumber.getText ().toString ());
            sum = num1 + num2;
            addResult.setText (Double.toString (sum));
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_catalog);
    EditText firstNumber;
    EditText secondNumber;
    final TextView addResult;
    Button btnAdd;
    final double num1, num2, sum;
    firstNumber = (EditText) findViewById (R.id.action_save);
    secondNumber = (EditText) findViewById (R.id.action_save);
    addResult = (TextView) findViewById (R.id.action_save);
    btnAdd = (Button) findViewById (R.id.action_save);
    num1 = Double.parseDouble (firstNumber.getText ().toString ());
    num2 = Double.parseDouble (secondNumber.getText ().toString ());
    sum = num1 + num2;
    btnAdd.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            addResult.setText (Double.toString (sum));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51251161_51251511_19_63
51251161_51251660_1_31
Title: parse an XML string in java 
----------------------------------------

public static void main (String [] args) {
    String requestBody = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>" + "<ShipmentList>" + "<Shipment ActualShipmentDate=\"2018-06-26T11:25:00+05:30\" DocumentType=\"0005\" TotalWeight=\"55.5\" TotalWeightUOM=\"LB\" TrackingNo=\"9461236897846412938163\"><![CDATA[" + "<ShipmentLines>" + "<ShipmentLine OrderNo=\"1529904772887\" PrimeLineNo=\"1\" Quantity=\"3\" SubLineNo=\"1\"/>" + "<ShipmentLine OrderNo=\"1529904772887\" PrimeLineNo=\"2\" Quantity=\"3\" SubLineNo=\"1\"/>" + "<ShipmentLine OrderNo=\"1529904772887\" PrimeLineNo=\"3\" Quantity=\"3\" SubLineNo=\"1\"/>" + "<ShipmentLine OrderNo=\"1529904772887\" PrimeLineNo=\"4\" Quantity=\"3\" SubLineNo=\"1\"/>" + "<ShipmentLine OrderNo=\"1529904772887\" PrimeLineNo=\"5\" Quantity=\"3\" SubLineNo=\"1\"/>" + "</ShipmentLines>" + "<Extn ExtnPackageASN=\"55538770655551006451\" ExtnPackageID=\"6247442951596360944\" ExtnPackLength=\"25.0\" ExtnLengthUOM=\"IN\" ExtnPackWidth=\"20.0\" ExtnWidthUOM=\"IN\" ExtnPackHeight=\"16.0\" ExtnHeightUOM=\"IN\" ExtnCarrierMethodId=\"83\"/>" + "</Shipment>" + "</ShipmentList>";
    NodeList nl = null;
    try {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder builder = factory.newDocumentBuilder ();
        Document doc = builder.parse (new InputSource (new StringReader (requestBody)));
        XPathFactory xPathfactory = XPathFactory.newInstance ();
        XPath xpath = xPathfactory.newXPath ();
        XPathExpression expr = xpath.compile ("//ShipmentList/Shipment/ShipmentLines/ShipmentLine/@OrderNo");
        nl = (NodeList) expr.evaluate (doc, XPathConstants.NODESET);
        for (int i = 0;
        i < nl.getLength (); i ++) {
            System.out.println (nl.item (i));
        }
    } catch (XPathExpressionException e1) {
        e1.printStackTrace ();
    } catch (ParserConfigurationException e1) {
        e1.printStackTrace ();
    } catch (SAXException e1) {
        e1.printStackTrace ();
    } catch (IOException e1) {
        e1.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    factory.setNamespaceAware (true);
    DocumentBuilder builder;
    Document doc = null;
    try {
        builder = factory.newDocumentBuilder ();
        doc = builder.parse ("C:/shipment.xml");
        XPathFactory xpathFactory = XPathFactory.newInstance ();
        XPath xpath = xpathFactory.newXPath ();
        try {
            XPathExpression expr = xpath.compile ("/ShipmentList/Shipment/ShipmentLines/ShipmentLine");
            NodeList nodes = (NodeList) expr.evaluate (doc, XPathConstants.NODESET);
            for (int i = 0;
            i < nodes.getLength (); i ++) {
                Node nNode = nodes.item (i);
                System.out.println ("\nCurrent Element :" + nNode.getNodeName ());
                if (nNode.getNodeType () == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    System.out.println ("OrderNo :" + eElement.getAttribute ("OrderNo"));
                }
            }
        } catch (XPathExpressionException e) {
            e.printStackTrace ();
        }
    } catch (ParserConfigurationException | SAXException | IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51265212_51265765_1_10
51265212_51265769_14_30
Title: How to remove relationship in Java 
----------------------------------------

public void setPartner (Partner p1, Partner p2) {
    if (p1 != null && p2 != null) {
        if (p1.partner != null) p1.partner.partner = null;

        if (p2.partner != null) p2.partner.partner = null;

        p1.partner = p2;
        p2.partner = p1;
        System.out.println (unlinked);
    }
}
----------------------------------------

public void setPartner (Partner p) {
    if (partner == p) {
        return;
    }
    if (partner != null) {
        partner.partner = null;
    }
    partner = p;
    if (p != null) {
        p.setPartner (this);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51267328_51267934_1_10
51267328_51268111_1_12
Title: Is it possible to find the first instance of a value from a Hashmap within the same loop? 
----------------------------------------

private static String findFirstCharacter (String s) {
    Set < Integer > singles = new LinkedHashSet < > (), duplicates = new HashSet < > ();
    s.codePoints ().forEach (ch -> {
        if (! duplicates.contains (ch) && ! singles.add (ch)) {
            singles.remove (ch);
            duplicates.add (ch);
        }
    });
    return (singles.isEmpty () ? null : new String (new int [] {singles.iterator ().next ()}, 0, 1));
}
----------------------------------------

private static boolean findFirstCharacter (String s) {
    List < String > listChars = Arrays.asList (s.split (""));
    Map < String, Long > map = listChars.stream ().collect (Collectors.groupingBy (c -> c, Collectors.counting ()));
    for (String key : map.keySet ()) {
        if (map.get (key) == 1) {
            System.out.println ("Result: " + key);
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51270349_51270549_1_11
51270349_51270558_1_12
Title: String iteration with numbers at the end (Beginner) 
----------------------------------------

public static String reduce (String w) {
    if (w == null) return null;

    String result = "";
    result += w.charAt (0);
    for (int i = 1;
    i < w.length (); i ++) {
        if (w.charAt (i - 1) != w.charAt (i)) {
            result += w.charAt (i);
        }
    }
    return result;
}
----------------------------------------

public static String reduce (String w) {
    if (w == null) return null;

    String result = Character.toString (w.charAt (0));
    for (int i = 1;
    i < w.length (); i ++) {
        if (w.charAt (i) != w.charAt (i - 1)) {
            result += w.charAt (i);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51277278_51277360_1_19
51277278_51277575_6_26
Title: "Return statement inside if else if else statement is not working" 
----------------------------------------

int binarySearch (int arr [], int x) {
    int l = 0, r = arr.length - 1;
    while (l <= r) {
        int m = l + (r - l) / 2;
        if (arr [m] == x) return m;

        if (arr [m] < x) l = m + 1;
        else r = m - 1;

    }
    return - 1;
}
----------------------------------------

public int binarySearch (int lowIndex, int highIndex, int [] arr, int val) {
    if (highIndex >= lowIndex) {
        int middleIndex = (lowIndex + highIndex) / 2;
        if (arr [middleIndex] < val) {
            lowIndex = middleIndex;
        } else if (arr [middleIndex] > val) {
            highIndex = middleIndex;
        } else {
            return middleIndex;
        }

        return binarySearch (lowIndex, highIndex, arr, val);
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51288154_51289452_2_27
51288154_52644690_1_17
Title: Parse a String of key=value to a Map 
----------------------------------------

public static void main (String [] args) {
    String [] data = {"Overtime=true,TransportCosts=one, two, three", "Overtime=true,TransportCosts=1= 1,two, three,Billable=7200"};
    for (int i = 0;
    i < data.length; i ++) {
        data [i] = data [i].replaceAll ("(?<=,)([A-Z])", ",$1");
        String [] pieces = data [i].split (",,");
        for (int j = 0;
        j < pieces.length; j ++) {
            int equalIndex = pieces [j].indexOf ("=");
            StringBuilder sb = new StringBuilder (pieces [j]);
            sb.insert (equalIndex, "\"");
            sb.insert (equalIndex + 2, "\"");
            sb.insert (0, "\"");
            sb.append ("\"");
            pieces [j] = sb.toString ();
        }
        data [i] = String.join (",", pieces);
        System.out.println (data [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Pattern pattern = Pattern.compile ("([^,]+=[^=]+)(,|$)");
    String test1 = "abc=def,jkl,nm=ghi,egrh=jh=22,kdfka,92,kjasd=908@0982";
    System.out.println ("Test 1: " + test1);
    Matcher matcher = pattern.matcher (test1);
    while (matcher.find ()) {
        System.out.println (matcher.group (1));
    }
    System.out.println ();
    String test2 = "Overtime=true,TransportCosts=1= 1,two, three,Billable=7200";
    System.out.println ("Test 2: " + test2);
    matcher = pattern.matcher (test2);
    while (matcher.find ()) {
        System.out.println (matcher.group (1));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51291628_51292518_5_15
51291628_51293298_1_12
Title: Fragment errors android 
----------------------------------------

public View onCreateView (final LayoutInflater inflater, final ViewGroup container, final Bundle savedInstanceState) {
    View view = inflater.inflate (R.layout.navbar, container, false);
    homeBtn = (Button) view.findViewById (R.id.homeBtn);
    optionsBtn = (Button) view.findViewById (R.id.optionsBtn);
    connectionBtn = (Button) view.findViewById (R.id.micBtn);
    micBtn = (Button) view.findViewById (R.id.homeBtn);
    aboutBtn = (Button) view.findViewById (R.id.aboutBtn);
    return view;
}
----------------------------------------

@Override
public View onCreateView (LayoutInflater inflater,@Nullable
ViewGroup container, Bundle savedInstanceState) {
    View view = inflater.inflate (R.layout.navbar, container, false);
    homeBtn = (Button) view.findViewById (R.id.homeBtn);
    optionsBtn = (Button) view.findViewById (R.id.optionsBtn);
    connectionBtn = (Button) view.findViewById (R.id.micBtn);
    micBtn = (Button) view.findViewById (R.id.homeBtn);
    aboutBtn = (Button) view.findViewById (R.id.aboutBtn);
    return view;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5130254_5130316_113_126
5130254_5130316_82_95
Title: java error (No suitable driver found) 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5130254_5130316_113_126
5130254_5130316_98_111
Title: java error (No suitable driver found) 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5130254_5130316_82_95
5130254_5130316_98_111
Title: java error (No suitable driver found) 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5131547_5131595_1_12
5131547_5131618_52_68
Title: Java KeyListener in separate class 
----------------------------------------

public Blobs () {
    super ("Blobs :) - By Chris Tanaka");
    setVisible (true);
    setResizable (false);
    setSize (1000, 1000);
    setIgnoreRepaint (true);
    setDefaultCloseOperation (EXIT_ON_CLOSE);
    World world = new World ();
    getContentPane ().add (world);
    this.addKeyListener (world);
    setVisible (true);
}
----------------------------------------

public Blobs () {
    super ("Blobs :) - By Chris Tanaka");
    World world = new World ();
    world.addObserver (this);
    setResizable (false);
    setSize (1000, 1000);
    setIgnoreRepaint (true);
    setDefaultCloseOperation (EXIT_ON_CLOSE);
    getContentPane ().add (world);
    this.addKeyListener (world);
    setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51343099_51343728_1_14
51343099_51344631_6_32
Title: JXTextField not working properly with Arabic font 
----------------------------------------

public static void main (String [] args) {
    JXTextField tb = new JXTextField ();
    tb.setText ("عربي");
    JXPanel panel = new JXPanel (new FlowLayout (FlowLayout.CENTER));
    panel.add (tb);
    JXFrame frame = new JXFrame ();
    frame.setLayout (new FlowLayout (FlowLayout.CENTER));
    frame.add (panel);
    frame.setLocationRelativeTo (null);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setResizable (false);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            String arabic = "عربي";
            JTextField textField = new JTextField (arabic);
            int result = JOptionPane.showConfirmDialog (null, textField, "Does this show as expected?", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.NO_OPTION) {
                String [] fontFamilies = GraphicsEnvironment.getLocalGraphicsEnvironment ().getAvailableFontFamilyNames ();
                for (String fontFamily : fontFamilies) {
                    Font font = new Font (fontFamily, Font.PLAIN, 20);
                    if (font.canDisplayUpTo (arabic) < 0) {
                        textField.setFont (font);
                        JOptionPane.showMessageDialog (null, textField, fontFamily, JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51344793_51344810_1_11
51344793_51344920_7_32
Title: How do you use a method to calculate 1 array parameter of grades and returns the total of the array? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Hello Drews, how many total grades do you want to process?");
    int numberOfGrades = keyboard.nextInt ();
    int [] storeGrades = new int [numberOfGrades];
    for (int i = 0;
    i < numberOfGrades; i ++) {
        System.out.println ("Please enter grade " + (i + 1) + ": ");
        storeGrades [i] = keyboard.nextInt ();
    }
    System.out.println (getTotalScore (storeGrades));
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Hello Drews, how many total grades do you want to process?");
    int numberOfGrades = 0;
    while (! keyboard.hasNextInt ()) {
        System.out.println ("Sorry, please enter a valid number!");
        keyboard.next ();
    }
    numberOfGrades = keyboard.nextInt ();
    int [] storedGrades = getGrades (numberOfGrades, keyboard);
    int totalScore = getTotalScore (storedGrades);
    System.out.println ("Total Score is: " + totalScore);
    keyboard.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51345188_51345215_1_27
51345188_51345482_3_27
Title: I need help to write a code that finds the largest difference between two integers in a sequence 
----------------------------------------

public static void main (String [] args) {
    final int days = 10;
    int largeDiff = 0;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter a stock price:");
    int price1 = sc.nextInt ();
    int price2 = sc.nextInt ();
    int diff1 = price1 - price2;
    largeDiff = Math.abs (diff1);
    for (int i = 1;
    i <= 8; i ++) {
        int priceA = sc.nextInt ();
        int priceB = sc.nextInt ();
        int diff2 = Math.abs (priceA - priceB);
        if (diff2 > largeDiff) {
            largeDiff = diff2;
        }
    }
    System.out.println (largeDiff);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int totalDays = 10;
    int stockPrices [] = new int [totalDays];
    for (int c = 1;
    c <= totalDays; c ++) {
        System.out.printf ("Enter stock price for day %d\n", c);
        stockPrices [c - 1] = sc.nextInt ();
    }
    int largestDiff = - 1;
    for (int c = 0;
    c < totalDays - 1; c ++) {
        int diff = Math.abs (stockPrices [c] - stockPrices [c + 1]);
        if (diff > largestDiff) {
            largestDiff = diff;
        }
    }
    System.out.printf ("Largest difference in stock price is %d\n", largestDiff);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51345188_51345460_4_25
51345188_51345482_3_27
Title: I need help to write a code that finds the largest difference between two integers in a sequence 
----------------------------------------

public static void main (String [] args) {
    final int days = 10;
    int largeDiff = 0;
    int diff1 = 0;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter a stock price:");
    for (int i = 0;
    i < 5; i ++) {
        int priceA = sc.nextInt ();
        int priceB = sc.nextInt ();
        int diff2 = Math.abs (priceA - priceB);
        if (diff2 > diff1) {
            largeDiff = diff2;
            diff1 = diff2;
        }
    }
    System.out.println (largeDiff);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int totalDays = 10;
    int stockPrices [] = new int [totalDays];
    for (int c = 1;
    c <= totalDays; c ++) {
        System.out.printf ("Enter stock price for day %d\n", c);
        stockPrices [c - 1] = sc.nextInt ();
    }
    int largestDiff = - 1;
    for (int c = 0;
    c < totalDays - 1; c ++) {
        int diff = Math.abs (stockPrices [c] - stockPrices [c + 1]);
        if (diff > largestDiff) {
            largestDiff = diff;
        }
    }
    System.out.printf ("Largest difference in stock price is %d\n", largestDiff);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51352161_51352368_195_214
51352161_51352368_248_257
Title: How to stop flickering in java.awt.graphics? 
----------------------------------------

public void move () {
    if (up) {
        yv -= 1;
    } else if (down) {
        yv += 1;
    } else if (! down && ! up) {
        yv *= GRAVITY;
    }

    if (yv >= 15) {
        yv = 5;
    } else if (yv <= - 5) {
        yv = - 5;
    }

    y += yv;
    if (y <= 0) {
        y = 0;
    } else if (y >= 420) {
        y = 420;
    }

}
----------------------------------------

public void move () {
    x += xv;
    y += yv;
    if (y < 10) {
        yv = - yv;
    }
    if (y > 490) {
        yv = - yv;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51354196_51354282_1_21
51354196_51354330_9_28
Title: Java - How to check if entered Integer is unique 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] input = new int [10];
    for (int i = 0;
    i < input.length; i ++) {
        int n = sc.nextInt ();
        boolean loop = true;
        do {
            if (checkunique (n, input)) {
                input [i] = n;
                loop = false;
            } else {
                System.out.println ("Choose a different one.");
                n = sc.nextInt ();
            }
        } while (loop);
    }
}
----------------------------------------

public static void main (String [] args) {
    try (Scanner sc = new Scanner (System.in)) {
        while (true) {
            System.out.println ("Choose a number:-");
            int n = sc.nextInt ();
            if (! uniqueInput.contains (n)) {
                uniqueInput.add (n);
                if (uniqueInput.size () == 10) break;

            } else {
                System.out.println ("Duplicate input");
                continue;
            }
        }
    }
    for (Object i : uniqueInput.toArray ()) {
        System.out.print (i + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51354196_51354282_1_21
51354196_51356097_24_50
Title: Java - How to check if entered Integer is unique 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] input = new int [10];
    for (int i = 0;
    i < input.length; i ++) {
        int n = sc.nextInt ();
        boolean loop = true;
        do {
            if (checkunique (n, input)) {
                input [i] = n;
                loop = false;
            } else {
                System.out.println ("Choose a different one.");
                n = sc.nextInt ();
            }
        } while (loop);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner receive = new Scanner (System.in);
    InputChecker check = new InputChecker ();
    ArrayList < String > checkMe = new ArrayList < String > ();
    ArrayList < String > validEntry = new ArrayList < String > ();
    while (true) {
        System.out.println ("Please enter some input, or end to quit: ");
        String userInput = receive.nextLine ();
        if (! userInput.equals ("end")) {
            checkMe.add (userInput);
            String [] k = new String [checkMe.size ()];
            k = checkMe.toArray (k);
            boolean bool = check.checkInput (k, userInput);
            if (bool) {
                System.out.println ("Please enter another input: ");
            } else {
                System.out.println ("Input stored!");
                validEntry.add (userInput);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51354196_51354330_9_28
51354196_51356097_24_50
Title: Java - How to check if entered Integer is unique 
----------------------------------------

public static void main (String [] args) {
    try (Scanner sc = new Scanner (System.in)) {
        while (true) {
            System.out.println ("Choose a number:-");
            int n = sc.nextInt ();
            if (! uniqueInput.contains (n)) {
                uniqueInput.add (n);
                if (uniqueInput.size () == 10) break;

            } else {
                System.out.println ("Duplicate input");
                continue;
            }
        }
    }
    for (Object i : uniqueInput.toArray ()) {
        System.out.print (i + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner receive = new Scanner (System.in);
    InputChecker check = new InputChecker ();
    ArrayList < String > checkMe = new ArrayList < String > ();
    ArrayList < String > validEntry = new ArrayList < String > ();
    while (true) {
        System.out.println ("Please enter some input, or end to quit: ");
        String userInput = receive.nextLine ();
        if (! userInput.equals ("end")) {
            checkMe.add (userInput);
            String [] k = new String [checkMe.size ()];
            k = checkMe.toArray (k);
            boolean bool = check.checkInput (k, userInput);
            if (bool) {
                System.out.println ("Please enter another input: ");
            } else {
                System.out.println ("Input stored!");
                validEntry.add (userInput);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51354595_51354676_4_22
51354595_51355358_5_29
Title: How to compare a 1D array to a 2D array 
----------------------------------------

public static void main (String [] args) {
    int [] [] x = {{23, 33, 46, 50, 56}, {3, 8, 65, 34, 90}, {2, 7, 46, 50, 56}};
    int [] y = {2, 7, 46, 50, 56};
    for (int [] aX : x) {
        System.out.println (Arrays.toString (x [2]));
        if (Arrays.equals (aX, y)) {
            System.out.println ("match");
        } else {
            System.out.println ("no match");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] x = {{23, 33, 46, 50, 56}, {3, 8, 65, 34, 90}, {2, 7, 46, 50, 56}};
    int [] y = {2, 7, 46, 50, 56};
    String yArray = Arrays.toString (y);
    boolean match = false;
    for (int i = 0;
    i < x.length; i ++) {
        String comparison = Arrays.toString (x [i]);
        if (comparison.equals (yArray)) {
            match = true;
        }
    }
    if (match) {
        System.out.println ("Match");
    } else System.out.println ("No match");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51365021_51367475_229_249
51365021_51367475_232_247
Title: progressbar countdownTimer 
----------------------------------------

public void run () {
    runOnUiThread (new Runnable () {
        @Override
        public void run () {
            monCountTimer = new CountDownTimer (6000, 1000) {
                @Override
                public void onTick (long millisUntilFinished) {
                    myDownloadTask.this.inc ++;
                    myDownloadTask.this.getMaProgressBar ().setProgress ((int) myDownloadTask.this.inc * 100 / (6000 / 1000));
                }@Override
                public void onFinish () {
                }}

            ;
            monCountTimer.start ();
        }}

    );
}
----------------------------------------

public void run () {
    monCountTimer = new CountDownTimer (6000, 1000) {
        @Override
        public void onTick (long millisUntilFinished) {
            myDownloadTask.this.inc ++;
            myDownloadTask.this.getMaProgressBar ().setProgress ((int) myDownloadTask.this.inc * 100 / (6000 / 1000));
        }@Override
        public void onFinish () {
        }}

    ;
    monCountTimer.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5138518_5138538_1_10
5138518_5138541_1_11
Title: java basic array question 
----------------------------------------

public void Post () {
    double Temp = 0;
    int K;
    for (K = 0; K < Count; K ++) {
        System.out.print (" " + List [K].GetLocation () + ": ");
        System.out.println ("Enter Temperature");
        Temp = Input.nextDouble ();
    }
}
----------------------------------------

public void Post () {
    double Temp = 0;
    int K;
    for (K = 0; K < Count; K ++) {
        System.out.print (" " + List [K].GetLocation () + ": ");
        System.out.println ("Enter Temperature");
        Temp = Input.nextDouble ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51386667_51386866_5_34
51386667_51387040_5_50
Title: PROGRAM to find least common entry in array 
----------------------------------------

public static void main (String [] args) {
    int m = 1000;
    int count = 0;
    int store = 0;
    int c = 0;
    Scanner scan = new Scanner (System.in);
    int [] a = new int [20];
    int n;
    System.out.print ("Enter no of elements");
    n = scan.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        a [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < n; i ++) {
        c = a [i];
        for (int j = 0;
        j < n; j ++) {
            if (a [j] == c) {
                count ++;
            }
            if (j == (n - 1)) {
                if (count < m) {
                    store = a [i];
                    m = count;
                }
            }
        }
        count = 0;
    }
    System.out.print (store);
}
----------------------------------------

public static void main (String [] args) {
    int m = 0;
    int count = 0;
    int store = 0;
    int c = 0;
    Scanner scan = new Scanner (System.in);
    int [] a = new int [20];
    int n;
    System.out.print ("Enter no of elements");
    n = scan.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        a [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < n; i ++) {
        c = a [i];
        for (int j = 0;
        j < n; j ++) {
            if (a [j] == c) {
                count ++;
            }
            if (j == (n - 1)) {
                if (m != 0 && m > count) {
                    store = a [i];
                    m = count;
                } else {
                    m = count;
                }
            }
        }
        count = 0;
    }
    System.out.print (store);
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51418796_51418829_7_21
51418796_51418916_4_16
Title: I can't access a objects attribute 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    tv = findViewById (R.id.tv);
    A = new Point ();
    A.x = 1;
    A.y = 1;
    A.paths.put ("B", 1);
    A.paths.put ("C", 2);
    addition ();
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Point A = new Point ();
    A.x = 1;
    A.y = 1;
    A.paths.put ("B", 1);
    A.paths.put ("C", 2);
    addition (A.x, A.y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51424204_51791072_1_29
51424204_52464195_1_24
Title: "Google Maps API shows location but doesn't center" 
----------------------------------------

private void getDeviceLocation () {
    try {
        if (mLocationPermissionGranted) {
            Task locationResult = mFusedLocationProviderClient.getLastLocation ();
            locationResult.addOnCompleteListener (this, new OnCompleteListener () {
                @Override
                public void onComplete (@NonNull
                Task task) {
                    if (task.isSuccessful () && task.getResult () != null) {
                        Log.d (TAG, "onComplete: location found!");
                        Location currentLocation = (Location) task.getResult ();
                        float currentZoom = mMap.getCameraPosition ().zoom;
                        mMap.moveCamera (CameraUpdateFactory.newLatLngZoom (new LatLng (currentLocation.getLatitude (), currentLocation.getLongitude ()), DEFAULT_ZOOM));
                    } else {
                        Log.d (TAG, "onComplete: current location is null");
                        Toast.makeText (MapActivity.this, "unable to get current location", Toast.LENGTH_SHORT).show ();
                    }
                }}

            );
        }
    } catch (SecurityException e) {
    }
}
----------------------------------------

private void getDeviceLocation () {
    mFusedLocationProviderClient = LocationServices.getFusedLocationProviderClient (this);
    try {
        if (mLocationPermissionGranted) {
            Task location = mFusedLocationProviderClient.getLastLocation ();
            location.addOnCompleteListener (new OnCompleteListener () {
                @Override
                public void onComplete (@NonNull
                Task task) {
                    if (task.isSuccessful () && task.getResult () != null) {
                        Toast.makeText (DriverMapActivity.this, "Task is successful", Toast.LENGTH_SHORT).show ();
                        Location currentLocation = (Location) task.getResult ();
                        mLatLng = new LatLng (currentLocation.getLatitude (), currentLocation.getLongitude ());
                        moveCamera (mLatLng, DEFAULT_ZOOM);
                    } else {
                        Toast.makeText (DriverMapActivity.this, "Task is unsuccessful", Toast.LENGTH_SHORT).show ();
                    }
                }}

            );
        }
    } catch (SecurityException e) {
        Toast.makeText (this, "SecurityException Found", Toast.LENGTH_SHORT).show ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51424204_51791072_7_22
51424204_52464195_8_18
Title: "Google Maps API shows location but doesn't center" 
----------------------------------------

public void onComplete (@NonNull
Task task) {
    if (task.isSuccessful () && task.getResult () != null) {
        Log.d (TAG, "onComplete: location found!");
        Location currentLocation = (Location) task.getResult ();
        float currentZoom = mMap.getCameraPosition ().zoom;
        mMap.moveCamera (CameraUpdateFactory.newLatLngZoom (new LatLng (currentLocation.getLatitude (), currentLocation.getLongitude ()), DEFAULT_ZOOM));
    } else {
        Log.d (TAG, "onComplete: current location is null");
        Toast.makeText (MapActivity.this, "unable to get current location", Toast.LENGTH_SHORT).show ();
    }
}
----------------------------------------

public void onComplete (@NonNull
Task task) {
    if (task.isSuccessful () && task.getResult () != null) {
        Toast.makeText (DriverMapActivity.this, "Task is successful", Toast.LENGTH_SHORT).show ();
        Location currentLocation = (Location) task.getResult ();
        mLatLng = new LatLng (currentLocation.getLatitude (), currentLocation.getLongitude ());
        moveCamera (mLatLng, DEFAULT_ZOOM);
    } else {
        Toast.makeText (DriverMapActivity.this, "Task is unsuccessful", Toast.LENGTH_SHORT).show ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51428665_51429195_1_20
51428665_51453922_5_18
Title: Scenario: There is this web page which has a list of 10 web link. Click on each web link and open in new window or tab using selenium Java 
----------------------------------------

public static void main (String args []) {
    System.setProperty ("webdriver.chrome.driver", "drivers/chromedriver.exe");
    WebDriver driver = new ChromeDriver ();
    driver.get ("https://www.guru99.com/selenium-tutorial.html");
    driver.manage ().window ().maximize ();
    WebDriverWait wait = new WebDriverWait (driver, 20);
    wait.until (ExpectedConditions.titleContains ("Selenium Tutorial"));
    List < WebElement > tutorialLinkList = driver.findElements (By.xpath ("//strong[contains(text(),'Tutorial')]/ancestor::a"));
    JavascriptExecutor js = (JavascriptExecutor) driver;
    for (int i = 0;
    i < 10; i ++) {
        String url = tutorialLinkList.get (i).getAttribute ("href");
        js.executeScript ("window.open(arguments[0])", url);
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    System.setProperty ("webdriver.chrome.driver", "C:\\Users\\user***\\Downloads\\chromedriver_win32\\chromedriver.exe");
    driver = new ChromeDriver ();
    driver.manage ().window ().maximize ();
    driver.get ("https://www.guru99.com/selenium-tutorial.html");
    JavascriptExecutor jse = (JavascriptExecutor) driver;
    jse.executeScript ("window.scrollBy(0,650)", "");
    List < WebElement > element = driver.findElements (By.xpath ("//strong[text()='WebDriver Tutorial']/following-sibling::table[1]/descendant::a"));
    Actions action = new Actions (driver);
    for (WebElement ele : element) {
        action.keyDown (Keys.LEFT_CONTROL).moveToElement (ele).click ().keyUp (Keys.LEFT_CONTROL).build ().perform ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51452256_51452288_1_12
51452256_51452346_1_23
Title: How to leave newline unmodified while incrementing/decrementing alphabet characters? 
----------------------------------------

public static void incrementCharacters (String sentence) {
    StringBuilder str = new StringBuilder ();
    for (int i = 0;
    i < sentence.length (); i ++) {
        char ch = sentence.charAt (i);
        if (Character.isAlphabetic (ch)) {
            str.append ((char) (ch + 2));
        } else {
            str.append (ch);
        }
    }
    System.out.println (str);
}
----------------------------------------

public static void incrementCharacters (String sentence) throws IOException {
    BufferedReader reader = new BufferedReader (new StringReader (sentence));
    StringBuilder str = new StringBuilder ();
    String line;
    while ((line = reader.readLine ()) != null) {
        for (int i = 0;
        i < line.length (); i ++) {
            char ch = line.charAt (i);
            if (Character.isAlphabetic (ch)) {
                if (Character.isUpperCase (ch)) {
                    str.append (Character.toUpperCase ((char) (ch + 2)));
                } else {
                    str.append (Character.toLowerCase ((char) (ch + 2)));
                }
            } else {
                str.append (ch);
            }
        }
        str.append ("\n");
    }
    System.out.println (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51460488_51460526_1_23
51460488_51460527_1_11
Title: How to generate a TextView inside a thread inside a for loop in the main activity 
----------------------------------------

public void toggleButtonConnectToClientsFunction (View view) {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            multicastthreadRun.run ();
            for (int counter = 0;
            counter < multicastthreadRun.ClientIpArrayList.size (); counter ++) {
                TextView textView = new TextView (YourActivityNamethis);
                runOnUiThread (new Runnable () {
                    @Override
                    public void run () {
                        linearLayoutSecondaryTexts.addView (textView);
                    }}

                );
            }
        }}

    );
    t.start ();
}
----------------------------------------

public void toggleButtonConnectToClientsFunction (View view) {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            multicastthreadRun.run ();
            makeTextView (0, multicastthreadRun.ClientIpArrayList.size ());
        }}

    );
    t.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51471137_51471233_1_10
51471137_51471414_1_10
Title: Count the number of prime numbers under a non-negative number - JAVA 
----------------------------------------

boolean isPrime (int n) {
    if (n % 2 == 0) return false;

    for (int i = 3;
    i * i <= n; i += 2) {
        if (n % i == 0) return false;

    }
    return true;
}
----------------------------------------

public static boolean isPrime (List < Long > primes, long number) {
    if (number < 2) return false;

    for (Long prime : primes) {
        if (number % prime == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51476418_51477246_62_73
51476418_51487043_119_128
Title: Scroll Bar not appearing along with JTextArea 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int password = Integer.parseInt (txtPassword.getText ());
    int guess_password = 0;
    while (guess_password != password) {
        txtStatus.append ("\n [+] Password Attempt: " + guess_password);
        guess_password = guess_password + 1;
    }
    if (guess_password == password) {
        txtStatus.append ("\n \n [-] Password Found: " + guess_password);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (! workThreadIsRunning) {
        txtStatus.setText (null);
        new Thread (workThread).start ();
    }
    if (btn.getText ().equals ("Cancel Test")) {
        shutDownThread = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51476418_51477246_77_86
51476418_51487043_132_142
Title: Scroll Bar not appearing along with JTextArea 
----------------------------------------

public static void main (String [] args) throws Exception {
    UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    frameObject = new JFrame ("Brute Force Tool");
    BruteForce gui = new BruteForce ();
    frameObject.add (gui.panelObject);
    frameObject.setSize (300, 300);
    frameObject.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frameObject.setLocationRelativeTo (null);
    frameObject.setVisible (true);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    java.awt.EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new BruteForce ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51490075_51490159_22_36
51490075_51491929_1_13
Title: How to make intersection between method 
----------------------------------------

static void fibo (int n, List < Integer > fibo_set) {
    int fibo [] = new int [n];
    fibo [0] = 0;
    fibo [1] = 1;
    System.out.print (fibo [0] + " " + fibo [1] + " ");
    for (int i = 2;
    i <= n; i ++) {
        fibo [i] = fibo [i - 1] + fibo [i - 2];
        if (n >= fibo [i]) {
            System.out.print (fibo [i] + " ");
            fibo_set.add (fibo [i]);
        } else {
            break;
        }
    }
}
----------------------------------------

static void fibo (int n) {
    List < Integer > fibos = new ArrayList < > (n);
    fibos.add (0);
    fibos.add (1);
    System.out.print (fibos.get (0) + "," + fibos.get (1));
    for (int i = 2;
    i <= n; i ++) {
        int a = fibos.get (i - 1) + fibos.get (i - 2);
        if (a <= n) {
            fibos.add (a);
            System.out.print ("," + a);
        } else break;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51500798_51501133_1_14
51500798_51501453_1_10
Title: How do I compare the variables held within two objects before returning them from an ArrayList? 
----------------------------------------

public AirJourney getFlightDetailsFromAirportPairing (String airportPair) {
    double lowestDistance = Double.MAX_VALUE;
    AirJourney lowestDistanceAirJourney = null;
    for (AirJourney journey : database) {
        String journeyPair = journey.getOriginAirport () + journey.getDestinationAirport ();
        if (airportPair.equals (journeyPair)) {
            if (lowestDistanceAirJourney == null || journey.getMiles () < lowestDistance) {
                lowestDistanceAirJourney = journey;
                lowestDistance = journey.getMiles ();
            }
        }
    }
    return lowestDistanceAirJourney;
}
----------------------------------------

public static String getFlightDetailsFromAirportPairing (String airportPair) {
    List < String > database = Arrays.asList ("DE400", "DE300");
    String journeyPair = "DE";
    int minimumMiles = database.stream ().map (value -> Integer.valueOf (value.split ("(?<=\\D)(?=\\d)") [1])).collect (Collectors.toList ()).stream ().reduce ((x, y) -> x.compareTo (y) <= 0 ? x : y).get ();
    if (airportPair.equals (journeyPair)) {
        return journeyPair + minimumMiles;
    } else {
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51513140_51513643_13_27
51513140_51515204_19_40
Title: Java - How to create a deck of cards (with a focus on static arrays)? - AP Computer Science Project 
----------------------------------------

public Deck () {
    cards = new Card [numberOfCards];
    int currentCardId = 0;
    for (int suit = 0;
    suit <= 3; suit ++) {
        for (int rank = 0;
        rank <= 12; rank ++) {
            this.rank = "" + ranks [rank];
            this.value = values [rank];
            cards [currentCardId] = new Card (suits [suit], this.rank, value);
            System.out.println (cards [currentCardId].toString ());
            currentCardId ++;
        }
    }
}
----------------------------------------

public Deck () {
    cards = new Card [numberOfCards];
    for (int suit = 0;
    suit <= 3; suit ++) {
        for (int rank = 0;
        rank <= 12; rank ++) {
            for (int values = 0;
            values <= 12; values ++) this.rank = ranks [rank];

            this.value = values [rank];
            numberOfCards --;
            cards [numberOfCards] = new Card (suits [suit], this.rank, value);
        }
    }
    shuffle ();
    for (Card card : cards) {
        System.out.println (card);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51514680_51540435_6_22
51514680_51540920_1_17
Title: How to make TestNG open one browser at a time 
----------------------------------------

public static WebDriver getInstance () {
    if (System.getProperty ("webdriver.chrome.driver") == null) {
        System.setProperty ("webdriver.chrome.driver", "E:\\gita_workspace\\GitaProject\\drivers\\chromedriver.exe");
    }
    if (System.getProperty ("test.url") != null) {
        testUrl = System.getProperty ("test.url");
    }
    System.out.println (System.getProperty ("webdriver.chrome.driver"));
    ChromeOptions options = new ChromeOptions ();
    options.addArguments ("window-size=1200x600");
    return driver = new ChromeDriver (options);
}
----------------------------------------

@BeforeMethod
public static WebDriver getInstance () {
    if (System.getProperty ("webdriver.chrome.driver") == null) {
        System.setProperty ("webdriver.chrome.driver", "E:\\gita_workspace\\GitaProject\\drivers\\chromedriver.exe");
    }
    if (System.getProperty ("test.url") != null) {
        testUrl = System.getProperty ("test.url");
    }
    System.out.println (System.getProperty ("webdriver.chrome.driver"));
    ChromeOptions options = new ChromeOptions ();
    options.addArguments ("window-size=1200x600");
    driver = new ChromeDriver (options);
    driver.get (testUrl);
    driver.manage ().timeouts ().implicitlyWait (10, TimeUnit.SECONDS);
    driver.manage ().window ().maximize ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51519209_51519362_1_12
51519209_51519465_4_19
Title: Null output while storing tokenized output from StringTokenizer class nextToken() method in an array 
----------------------------------------

public static void main (String [] args) {
    String s = "My name is Sugandha";
    int len = 0, i = 1;
    String [] ar = new String [50];
    StringTokenizer s1 = new StringTokenizer (s, " ");
    while (s1.hasMoreTokens ()) {
        ar [i] = s1.nextToken ();
        System.out.println (ar [i]);
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "My name is Sugandha";
    int i = 0;
    StringTokenizer s1 = new StringTokenizer (s, " ");
    String [] ar = new String [s1.countTokens ()];
    while (s1.hasMoreTokens ()) {
        ar [i ++] = s1.nextToken ();
    }
    for (int j = 0;
    j < ar.length; j ++) {
        System.out.println (ar [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51530380_51530412_3_30
51530380_51533773_12_24
Title: Reverse Characters in Each Individual Word in String Preserving Whitespace 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    final String sentence = "Book on the table but not over there \nAlmost there\rHave fun!";
    System.out.println (sentence);
    final char [] letters = sentence.toCharArray ();
    final StringBuilder reversed = new StringBuilder ();
    final StringBuilder tmp = new StringBuilder ();
    for (char c : letters) {
        if (Character.isWhitespace (c)) {
            reversed.append (tmp.reverse ()).append (c);
            if (0 < tmp.length ()) {
                tmp.delete (0, tmp.length ());
            }
        } else {
            tmp.append (c);
        }
    }
    if (0 < tmp.length ()) {
        reversed.append (tmp.reverse ());
    }
    System.out.println (reversed);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    List < String > words = getWords ();
    System.out.println (words);
    List < String > wordsReversed = getReversedWords (words);
    System.out.println (wordsReversed);
    String result = assembleWordsAndWhitespaces (wordsReversed);
    System.out.println (result);
    printToVerify (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51530380_51530443_1_24
51530380_51530496_1_21
Title: Reverse Characters in Each Individual Word in String Preserving Whitespace 
----------------------------------------

private static String reverseWords (String sentence) {
    StringBuilder sb = new StringBuilder ();
    try {
        String line = null;
        BufferedReader reader = new BufferedReader (new StringReader (sentence));
        while ((line = reader.readLine ()) != null) {
            String [] words = line.split (" ");
            for (int i = 0;
            i < words.length; i ++) {
                String word = words [i];
                sb.append (reverseCharacters (word));
                if (i < words.length - 1) {
                    sb.append (" ");
                }
            }
            sb.append (System.getProperty ("line.separator"));
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    String str = sb.toString ();
    return str.substring (0, str.length () - 1);
}
----------------------------------------

static String reverseWords (String sentence) {
    StringBuilder newSentence = new StringBuilder ();
    try {
        String line = null;
        BufferedReader reader = new BufferedReader (new StringReader (sentence));
        while ((line = reader.readLine ()) != null) {
            String [] words = line.split (" ");
            newSentence.append (reverseCharacters (words [0]));
            for (int i = 1;
            i < words.length; i ++) {
                String reversed = reverseCharacters (words [i]);
                newSentence.append (" ").append (reversed);
            }
            newSentence.append ("\n");
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    if (! sentence.endsWith ("\n")) newSentence.deleteCharAt (newSentence.length () - 1);

    return newSentence.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51536253_51536920_1_26
51536253_51552286_16_38
Title: How to deal with a Java Processes grandchilds when reading the output? 
----------------------------------------

private static Thread startReadingThread (Process myProcess) {
    InputStream stream = myProcess.getInputStream ();
    return new Thread (() -> {
        int character;
        try {
            while (stream.available () != 0) {
                if ((character = stream.read ()) == - 1) {
                    System.out.write (character);
                    stream.close ();
                    break;
                }
                System.out.write (character);
            }
            stream.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        } finally {
            try {
                System.out.println ("Reading ended");
                stream.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    });
}
----------------------------------------

private static Thread startReadingThread (Process myProcess) {
    InputStream stream = myProcess.getInputStream ();
    return new Thread (() -> {
        int character;
        try {
            while (myProcess.isAlive () || stream.available () > 0) {
                if ((character = stream.read ()) == - 1) {
                    break;
                }
                System.out.write (character);
            }
        } catch (IOException e) {
            e.printStackTrace ();
        } finally {
            try {
                stream.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51536966_51537819_7_44
51536966_51555866_10_96
Title: Unable to get total amount payable 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    boolean continueLoop = true;
    Map < TicketType, Integer > purchases = new HashMap < > ();
    do {
        TicketType type = printMenu (scan);
        System.out.println ("Enter number of tickets for " + type.label);
        int quantity = scan.nextInt ();
        System.out.println ("You are purchasing " + quantity + " " + type.label + " ticket at " + type.cost + " each. " + "Press 1 to confirm?");
        int confirm = scan.nextInt ();
        if (confirm != 1) continue;

        if (purchases.containsKey (type)) {
            purchases.put (type, purchases.get (type) + quantity);
            System.out.println ("You now have " + purchases.get (type) + " " + type.label + " tickets in total");
        } else {
            purchases.put (type, quantity);
        }
        System.out.println ("You have added " + quantity + " " + type.label + " tickets in your basket.");
        System.out.println ("Do you wish to continue (Y|N)?");
        String resume = scan.next ();
        if (resume.startsWith ("Y") || resume.startsWith ("y")) {
            continueLoop = true;
        } else {
            continueLoop = false;
        }
    } while (continueLoop);
    System.out.println ("Purchases");
    long total = 0;
    for (Map.Entry < TicketType, Integer > ticketTypeIntegerEntry : purchases.entrySet ()) {
        System.out.println (ticketTypeIntegerEntry.getKey ().label + "(" + ticketTypeIntegerEntry.getValue () + ")");
        total += ticketTypeIntegerEntry.getKey ().cost * ticketTypeIntegerEntry.getValue ();
    }
    System.out.println ("Total payable ammount: " + total);
}
----------------------------------------

public static void main (String [] args) {
    final float childCost = 18;
    final float adultCost = 36;
    final float seniorCost = 32.50F;
    boolean continueLoop = true;
    Scanner input = new Scanner (System.in);
    float childTotal = 0;
    float adultTotal = 0;
    float seniorTotal = 0;
    while (continueLoop) {
        int option, confirm = 0;
        System.out.println ("\t @@@@@ Welcome to Zoos Victoria @@@@@");
        System.out.println ("\t \t MAIN MENU \n");
        System.out.println ("\t Zoo has the following ticketing options \n");
        System.out.println ("\t 1 = Child (4-6 yrs)");
        System.out.println ("\t 2 = Adult (16+ yrs)");
        System.out.println ("\t 3 = Senior (60+ yrs) \n");
        System.out.println ("Enter your option:");
        option = input.nextInt ();
        switch (option) {
            case 1 :
                {
                    System.out.println ("Enter total No of tickets for Child:");
                    int quantity = input.nextInt ();
                    childTotal = quantity * childCost;
                    System.out.println ("You are purchasing " + quantity + " child tickets at " + childCost + " each!");
                    System.out.println ("Press 1 to confirm");
                    confirm = input.nextInt ();
                    if (confirm == 1) {
                        System.out.println ("Total amount for child tickets: $" + childTotal);
                    }
                    break;
                } case 2 :
                {
                    System.out.println ("Enter total No of tickets for Adult:");
                    int quantity = input.nextInt ();
                    adultTotal = quantity * adultCost;
                    System.out.println ("You are purchasing " + quantity + " adult tickets at " + adultCost + " each!");
                    System.out.println ("Press 1 to confirm");
                    confirm = input.nextInt ();
                    if (confirm == 1) {
                        System.out.println ("Total amount for adult tickets $" + adultTotal);
                    }
                    break;
                } case 3 :
                {
                    System.out.println ("Enter total No of tickets for Senior:");
                    int quantity = input.nextInt ();
                    seniorTotal = quantity * seniorCost;
                    System.out.println ("You are purchasing " + quantity + " senior tickets at " + seniorCost + " each!");
                    System.out.println ("Press 1 to confirm");
                    confirm = input.nextInt ();
                    if (confirm == 1) {
                        System.out.println ("Total amount for senior tickets $" + seniorTotal);
                    }
                    break;
                }}
        if (confirm != 1) {
            System.out.println ("Incorrect key!");
        }
        System.out.println ("Do you wish to continue? (Y/N) ");
        char resume = input.next ().charAt (0);
        if (resume != 'y' && resume != 'Y') {
            continueLoop = false;
            System.out.println ("Total amount for child tickets: $" + childTotal);
            System.out.println ("Total amount for senior tickets $" + seniorTotal);
            System.out.println ("Total amount for adult tickets $" + adultTotal);
            float finalTotal = childTotal + adultTotal + seniorTotal;
            System.out.println ("Total amount payable: $ " + finalTotal);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51549688_51550509_4_25
51549688_51551622_9_43
Title: I want to know how to remove certain elements from an array 
----------------------------------------

public static void main (String args []) {
    double [] weights = {39.5, 34.8, 22.6, 38.7, 25.4, 30.1, 22.6, 41.8, 33.6, 26.2, 27.3};
    double minimum = Double.MAX_VALUE;
    double maximum = Double.MIN_VALUE;
    for (int i = 0;
    i < weights.length; i ++) {
        if (minimum > weights [i]) minimum = weights [i];
        else if (maximum < weights [i]) maximum = weights [i];

    }
    System.out.println ("Before: " + Arrays.toString (weights));
    final double minimumFilter = minimum;
    final double maximumFilter = maximum;
    weights = Arrays.stream (weights).filter (w -> w != minimumFilter && w != maximumFilter).toArray ();
    System.out.println ("After : " + Arrays.toString (weights));
}
----------------------------------------

public static void main (String [] args) {
    double [] weights = {39.5, 34.8, 22.6, 38.7, 25.4, 30.1, 41.8, 33.6, 26.2, 27.3};
    double minimum = Integer.MAX_VALUE;
    double maximum = Integer.MIN_VALUE;
    int minIndex = - 1;
    int maxIndex = - 1;
    for (int i = 0;
    i < weights.length; i ++) {
        if (minimum > weights [i]) {
            minimum = weights [i];
            minIndex = i;
        }
    }
    for (int i = 0;
    i < weights.length; i ++) {
        if (maximum < weights [i]) {
            maximum = weights [i];
            maxIndex = i;
        }
    }
    List < Double > list = Arrays.stream (weights).boxed ().collect (Collectors.toList ());
    list.remove (minIndex);
    if (minIndex < maxIndex) list.remove (maxIndex - 1);
    else list.remove (maxIndex);

    weights = list.stream ().mapToDouble (Double :: doubleValue).toArray ();
    for (double weight : weights) {
        System.out.print (weight + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51549725_51549818_1_12
51549725_51551204_1_14
Title: How can I avoid stackoverflow exception 
----------------------------------------

void removeHierarchy (List < Employee > managers) {
    List < Employee > toBeRemoved = new ArrayList < > ();
    for (Employee manager : managers) {
        removeHierarchy (manager.getEmployees ());
        if (0 == manager.getSalary () && manager.getEmployees ().isEmpty ()) {
            toBeRemoved.add (manager);
        }
    }
    managers.removeAll (toBeRemoved);
}
----------------------------------------

void removeHierarchy (List < Employee > managers) {
    if (null != managers && ! managers.isEmpty ()) {
        List < Employee > toBeRemoved = new ArrayList < > ();
        for (Employee manager : managers) {
            List < Employee > employees = manager.getEmployees ();
            removeHierarchy (employees);
            if (0 == manager.getSalary () && (null == employees || employees.isEmpty ())) {
                toBeRemoved.add (manager);
            }
        }
        managers.removeAll (toBeRemoved);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550139_51550372_4_15
51550139_51554720_5_16
Title: Make the program the you if the word you've inputed in the console is a palindrome or not in Java 
----------------------------------------

public static void main (String args []) {
    Scanner reader = new Scanner (System.in);
    System.out.println ("Enter a string: ");
    String DAWORD = reader.nextLine ();
    reader.close ();
    if (new StringBuilder (DAWORD).reverse ().toString ().contentEquals (DAWORD)) System.out.println ("This word is a palindrome");
    else System.out.println ("This word is not a palindrome");

}
----------------------------------------

public static void main (String [] args) {
    String str = "kajak";
    String str2 = StringUtils.reverse (str);
    if (str2.equals (str)) {
        System.out.println ("It's a palidrom");
    } else {
        System.out.println ("Not a palidorm");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550663_1_20
51550518_51550843_1_19
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    int dupes = 0;
    for (int i = 0;
    i < array.length - 1 - dupes; i ++) {
        int idupes = 0;
        for (int j = i + 1;
        j < array.length - dupes; j ++) {
            if (array [i] == array [j]) {
                idupes ++;
                dupes ++;
            } else if (idupes > 0) {
                array [j - idupes] = array [j];
            }

        }
    }
    if (dupes > 0) {
        Arrays.fill (array, array.length - dupes, array.length, 0);
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    int j = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (map.containsKey (array [i])) {
            continue;
        } else {
            map.put (array [i], 1);
            array [j] = array [i];
            j ++;
        }
    }
    for (int i = j;
    i < array.length; i ++) {
        array [i] = 0;
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550663_1_20
51550518_51551359_1_12
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    int dupes = 0;
    for (int i = 0;
    i < array.length - 1 - dupes; i ++) {
        int idupes = 0;
        for (int j = i + 1;
        j < array.length - dupes; j ++) {
            if (array [i] == array [j]) {
                idupes ++;
                dupes ++;
            } else if (idupes > 0) {
                array [j - idupes] = array [j];
            }

        }
    }
    if (dupes > 0) {
        Arrays.fill (array, array.length - dupes, array.length, 0);
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    List < Integer > list = new ArrayList (Arrays.stream (array).boxed ().distinct ().collect (Collectors.toList ()));
    for (int i = 0;
    i < array.length; i ++) {
        if (i < list.size ()) {
            array [i] = list.get (i);
        } else {
            array [i] = 0;
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550663_1_20
51550518_51560749_1_15
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    int dupes = 0;
    for (int i = 0;
    i < array.length - 1 - dupes; i ++) {
        int idupes = 0;
        for (int j = i + 1;
        j < array.length - dupes; j ++) {
            if (array [i] == array [j]) {
                idupes ++;
                dupes ++;
            } else if (idupes > 0) {
                array [j - idupes] = array [j];
            }

        }
    }
    if (dupes > 0) {
        Arrays.fill (array, array.length - dupes, array.length, 0);
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [j] == array [i]) {
                int tempIndex = j;
                while (tempIndex + 1 < array.length) {
                    array [tempIndex] = array [tempIndex + 1];
                    array [array.length - 1] = 0;
                    tempIndex ++;
                }
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550663_1_20
51550518_51561013_1_14
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    int dupes = 0;
    for (int i = 0;
    i < array.length - 1 - dupes; i ++) {
        int idupes = 0;
        for (int j = i + 1;
        j < array.length - dupes; j ++) {
            if (array [i] == array [j]) {
                idupes ++;
                dupes ++;
            } else if (idupes > 0) {
                array [j - idupes] = array [j];
            }

        }
    }
    if (dupes > 0) {
        Arrays.fill (array, array.length - dupes, array.length, 0);
    }
    return array;
}
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length - 1; i ++) {
        if (array [i] == NEUTRAL) continue;

        int idx = i + 1;
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] == array [j]) {
                array [j] = NEUTRAL;
            } else {
                array [idx ++] = array [j];
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550670_1_23
51550518_51551245_6_19
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static void main (String [] args) {
    int a [] = {1, 1, 1, 2, 3, 4, 5};
    int b [] = new int [a.length];
    int top = 0;
    for (int i : a) {
        int count = 0;
        for (int j = 0;
        j < top; j ++) {
            if (i == b [j]) count += 1;

        }
        if (count == 0) {
            b [top] = i;
            top += 1;
        }
    }
    for (int i = 0;
    i < b.length; i ++) System.out.println (b [i]);

}
----------------------------------------

public static void main (String [] args) {
    int [] array = {1, 1, 2, 2, 3, 2};
    Set < Integer > set = new HashSet < > ();
    for (int anArray : array) {
        set.add (anArray);
    }
    int [] a = new int [array.length];
    int i = 0;
    for (Integer s : set) {
        a [i] = s;
        i ++;
    }
    System.out.println (Arrays.toString (a));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550843_1_19
51550518_51551359_1_12
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    int j = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (map.containsKey (array [i])) {
            continue;
        } else {
            map.put (array [i], 1);
            array [j] = array [i];
            j ++;
        }
    }
    for (int i = j;
    i < array.length; i ++) {
        array [i] = 0;
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    List < Integer > list = new ArrayList (Arrays.stream (array).boxed ().distinct ().collect (Collectors.toList ()));
    for (int i = 0;
    i < array.length; i ++) {
        if (i < list.size ()) {
            array [i] = list.get (i);
        } else {
            array [i] = 0;
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550843_1_19
51550518_51560749_1_15
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    int j = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (map.containsKey (array [i])) {
            continue;
        } else {
            map.put (array [i], 1);
            array [j] = array [i];
            j ++;
        }
    }
    for (int i = j;
    i < array.length; i ++) {
        array [i] = 0;
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [j] == array [i]) {
                int tempIndex = j;
                while (tempIndex + 1 < array.length) {
                    array [tempIndex] = array [tempIndex + 1];
                    array [array.length - 1] = 0;
                    tempIndex ++;
                }
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51550843_1_19
51550518_51561013_1_14
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    int j = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (map.containsKey (array [i])) {
            continue;
        } else {
            map.put (array [i], 1);
            array [j] = array [i];
            j ++;
        }
    }
    for (int i = j;
    i < array.length; i ++) {
        array [i] = 0;
    }
    return array;
}
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length - 1; i ++) {
        if (array [i] == NEUTRAL) continue;

        int idx = i + 1;
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] == array [j]) {
                array [j] = NEUTRAL;
            } else {
                array [idx ++] = array [j];
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51551359_1_12
51550518_51560749_1_15
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    List < Integer > list = new ArrayList (Arrays.stream (array).boxed ().distinct ().collect (Collectors.toList ()));
    for (int i = 0;
    i < array.length; i ++) {
        if (i < list.size ()) {
            array [i] = list.get (i);
        } else {
            array [i] = 0;
        }
    }
    return array;
}
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [j] == array [i]) {
                int tempIndex = j;
                while (tempIndex + 1 < array.length) {
                    array [tempIndex] = array [tempIndex + 1];
                    array [array.length - 1] = 0;
                    tempIndex ++;
                }
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51551359_1_12
51550518_51561013_1_14
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    List < Integer > list = new ArrayList (Arrays.stream (array).boxed ().distinct ().collect (Collectors.toList ()));
    for (int i = 0;
    i < array.length; i ++) {
        if (i < list.size ()) {
            array [i] = list.get (i);
        } else {
            array [i] = 0;
        }
    }
    return array;
}
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length - 1; i ++) {
        if (array [i] == NEUTRAL) continue;

        int idx = i + 1;
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] == array [j]) {
                array [j] = NEUTRAL;
            } else {
                array [idx ++] = array [j];
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51550518_51560749_1_15
51550518_51561013_1_14
Title: "Remove duplicates in array zero padding at end" 
----------------------------------------

public static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [j] == array [i]) {
                int tempIndex = j;
                while (tempIndex + 1 < array.length) {
                    array [tempIndex] = array [tempIndex + 1];
                    array [array.length - 1] = 0;
                    tempIndex ++;
                }
            }
        }
    }
    return array;
}
----------------------------------------

private static int [] deleteArrayDuplicates (int [] array) {
    for (int i = 0;
    i < array.length - 1; i ++) {
        if (array [i] == NEUTRAL) continue;

        int idx = i + 1;
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] == array [j]) {
                array [j] = NEUTRAL;
            } else {
                array [idx ++] = array [j];
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51553494_51553598_2_19
51553494_51553612_2_18
Title: Number Pattern in Java 
----------------------------------------

public static void main (String [] args) {
    int a = 6;
    int i, j;
    int max = 1;
    int num;
    for (i = 1; i <= a; i ++) {
        num = 1;
        for (j = 1; j <= max; j ++) {
            System.out.print (num);
            System.out.print (" ");
            num ++;
        }
        System.out.println (" ");
        max ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 6;
    int i, j;
    int max = 1;
    int num;
    for (i = 1; i <= a; i ++) {
        num = 1;
        for (j = 1; j <= max; j ++) {
            System.out.print (num);
            System.out.print (" ");
            num ++;
        }
        System.out.println ();
        max ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51568749_51568981_1_13
51568749_51569103_1_10
Title: Search minimum absolute value difference in java 
----------------------------------------

static int minAbsVal (int [] myArray) {
    Arrays.sort (myArray);
    int minimum = Math.abs (myArray [1] - myArray [0]);
    for (int i = 1;
    i < myArray.length - 1; i ++) {
        int diff = Math.abs (myArray [i + 1] - myArray [i]);
        if (diff == 0) return 0;
        else if (minimum > diff) minimum = diff;

    }
    return minimum;
}
----------------------------------------

static int minAbsVal (int [] myArray) {
    int min = Integer.MAX_VALUE;
    for (int i = 0;
    i < myArray.length; i ++) {
        for (int j = i + 1;
        j < myArray.length; j ++) {
            min = Math.min (min, Math.abs (myArray [i] - myArray [j]));
        }
    }
    return min;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51582295_51582492_1_13
51582295_51607359_1_17
Title: Java: Deleting node from linked list 
----------------------------------------

public void deletenode (int data) {
    if (head != null && head.data == data) {
        head = head.next;
        return;
    }
    Node prev = null;
    Node cur = head;
    while (cur != null && cur.data != data) {
        prev = cur;
        cur = cur.next;
    }
    prev.next = cur.next;
}
----------------------------------------

public void deletenode (int data) {
    Node prev = null;
    for (Node trace = head;
    trace != null; trace = trace.next) {
        if (trace.data == data) {
            if (prev == null) {
                head = trace.next;
            } else {
                prev.next = trace.next;
            }
        } else {
            prev = trace;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51585355_51585747_40_52
51585355_51590803_1_16
Title: Java: Most Efficient Way to Get Input Integer Array 
----------------------------------------

public static void main (String [] args) throws IOException {
    File f = new File ("/tmp/tst.txt");
    long t = System.currentTimeMillis ();
    testing (f);
    System.out.println ("duration without reading one line at a time, without using a Scanner instance: " + (System.currentTimeMillis () - t) + " ms");
    t = System.currentTimeMillis ();
    testing2 (f);
    System.out.println ("duration when reading one line at a time with a Scanner instance: " + (System.currentTimeMillis () - t) + " ms");
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    int count = Integer.parseInt (in.readLine ());
    int array [] = new int [count];
    for (int i = 0;
    i < count; i ++) {
        int nextInteger = 0;
        int nextChar = in.read ();
        do {
            nextInteger = nextInteger * 10 + (nextChar - '0');
            nextChar = in.read ();
        } while (nextChar != - 1 && nextChar != (int) ' ');
        array [i] = nextInteger;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51588383_51588501_12_26
51588383_51589099_17_43
Title: How do I convert this FOR loop into a WHILE loop so that it also counts for Consonants? (JAVA) 
----------------------------------------

private static int [] count (String str) {
    int i = str.length ();
    int [] count = new int [2];
    while (-- i >= 0) {
        char ch = Character.toLowerCase (str.charAt (i));
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') count [0] ++;
        else if (ch >= 'a' && ch <= 'z') count [1] ++;

    }
    return count;
}
----------------------------------------

public static Counts count (String str) {
    int vowCount = 0;
    int consCount = 0;
    str = str.toLowerCase ();
    int i = str.length ();
    while (i -- > 0) {
        char ch = str.charAt (i);
        if (ch >= 'a' && ch <= 'z') {
            switch (ch) {
                case 'a' :
                case 'e' :
                case 'i' :
                case 'o' :
                case 'u' :
                    vowCount ++;
                    break;
                default :
                    consCount ++;
                    break;
            }
        }
    }
    return new Counts (vowCount, consCount);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51588500_51588924_11_34
51588500_51589092_11_39
Title: "How to read the file and save into the hashmap then save the first element as the key and the rest in a set?" 
----------------------------------------

public static void main (String [] args) {
    Scanner fin = null;
    try {
        fin = new Scanner (new File ("diseases.txt"));
        while (fin.hasNextLine ()) {
            HashSet < String > remedies = new HashSet < > ();
            String [] parts = fin.nextLine ().split (",");
            for (int i = 1;
            i < parts.length; i ++) {
                remedies.add (parts [i].trim ());
            }
            disease.put (parts [0], remedies);
        }
        fin.close ();
    } catch (Exception e) {
        System.out.println ("Error: " + e.getMessage ());
    } finally {
        try {
            fin.close ();
        } catch (Exception e) {
        }
    }
    Set < String > result = disease.get ("thrombosis");
    display (result);
}
----------------------------------------

public static void main (String [] args) {
    Scanner fin = null;
    try {
        fin = new Scanner (new File ("diseases.txt"));
        while (fin.hasNextLine ()) {
            HashSet < String > remedies = new HashSet < > ();
            String [] parts = fin.nextLine ().split (",");
            disease.put (parts [0], remedies);
            for (int i = 1;
            i < parts.length; i ++) {
                remedies.add (parts [i].trim ());
            }
        }
    } catch (Exception e) {
        System.out.println ("Error: " + e.getMessage ());
    } finally {
        try {
            fin.close ();
        } catch (Exception e) {
            System.out.println ("Error when closing file: " + e.getMessage ());
        }
    }
    Set < String > result = disease.get ("thrombosis");
    display (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51588500_51588924_36_48
51588500_51589092_41_62
Title: "How to read the file and save into the hashmap then save the first element as the key and the rest in a set?" 
----------------------------------------

public static < T > void display (Set < T > items) {
    if (items == null) return;

    int LEN = 80;
    String line = "[";
    for (T item : items) {
        line += item.toString () + ",";
        if (line.length () > LEN) {
            line = "";
        }
    }
    System.out.println (line + "]");
}
----------------------------------------

public static < T > void display (Set < T > items) {
    if (items == null) return;

    StringBuilder line = new StringBuilder ("[");
    int currentLength = 1;
    for (T item : items) {
        String itemStr = item.toString ();
        line.append (itemStr).append (",");
        currentLength += itemStr.length () + 1;
        if (currentLength >= LINE_LENGTH) {
            line.append ("\n");
            currentLength = 0;
        }
    }
    line.replace (line.length () - 1, line.length (), "]");
    System.out.println (line.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
515993_1437120_10_32
515993_1437120_3_43
Title: What is the correct way to add a Shutdown Hook for an Eclipse RCP application? 
----------------------------------------

public void run () {
    IWorkbenchWindow [] workbenchWindows = workbench.getWorkbenchWindows ();
    for (int i = 0;
    i < workbenchWindows.length; i ++) {
        IWorkbenchWindow workbenchWindow = workbenchWindows [i];
        if (workbenchWindow == null) {
        } else {
            IWorkbenchPage [] pages = workbenchWindow.getPages ();
            for (int j = 0;
            j < pages.length; j ++) {
                IEditorPart [] dirtyEditors = pages [j].getDirtyEditors ();
                for (int k = 0;
                k < dirtyEditors.length; k ++) {
                    dirtyEditors [k].doSave (new NullProgressMonitor ());
                }
            }
        }
    }
}
----------------------------------------

public void run () {
    try {
        final IWorkbench workbench = PlatformUI.getWorkbench ();
        final Display display = PlatformUI.getWorkbench ().getDisplay ();
        if (workbench != null && ! workbench.isClosing ()) {
            display.syncExec (new Runnable () {
                public void run () {
                    IWorkbenchWindow [] workbenchWindows = workbench.getWorkbenchWindows ();
                    for (int i = 0;
                    i < workbenchWindows.length; i ++) {
                        IWorkbenchWindow workbenchWindow = workbenchWindows [i];
                        if (workbenchWindow == null) {
                        } else {
                            IWorkbenchPage [] pages = workbenchWindow.getPages ();
                            for (int j = 0;
                            j < pages.length; j ++) {
                                IEditorPart [] dirtyEditors = pages [j].getDirtyEditors ();
                                for (int k = 0;
                                k < dirtyEditors.length; k ++) {
                                    dirtyEditors [k].doSave (new NullProgressMonitor ());
                                }
                            }
                        }
                    }
                }}

            );
            display.syncExec (new Runnable () {
                public void run () {
                    workbench.close ();
                }}

            );
        }
    } catch (IllegalStateException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51600913_51601287_5_17
51600913_51605421_3_23
Title: Printing out specific row in ArrayList without using index 
----------------------------------------

public static void main (String [] args) {
    List < TestarIgen > testList = new ArrayList < TestarIgen > ();
    testList.add (new TestarIgen (1, 1, 1));
    testList.add (new TestarIgen (2, 2, 2));
    String titelRad = "%-10s %6s %6s\n";
    String template = "%-10s %6d %6s\n";
    System.out.printf (titelRad, "Kontonummer ", "Saldo ", "Kredit");
    TestarIgen test = testList.stream ().filter (t -> t.getKontoNr () == 1).findFirst ().get ();
    System.out.printf (template, test.getKontoNr (), test.getSaldo (), test.getKredit ());
}
----------------------------------------

public static void main (String [] args) {
    List < TestarIgen > testList = new ArrayList < > ();
    testList.add (new TestarIgen (1, 1, 1));
    testList.add (new TestarIgen (2, 2, 2));
    testList.add (new TestarIgen (12, 2, 2));
    testList.add (new TestarIgen (4, 2, 2));
    System.out.println (testList);
    Comparator < TestarIgen > kontonummerComparator = new Comparator < TestarIgen > () {
        public int compare (TestarIgen one, TestarIgen two) {
            return Integer.compare (one.getKontoNr (), two.getKontoNr ());
        }}

    ;
    Collections.sort (testList, kontonummerComparator);
    System.out.println (testList);
    TestarIgen searchKey = new TestarIgen (4, 2, 2);
    int index = Collections.binarySearch (testList, searchKey, kontonummerComparator);
    System.out.println (index);
    System.out.println (testList.get (index));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51605038_51605203_3_31
51605038_51605380_5_30
Title: (Java) Counting letters in a sentence? 
----------------------------------------

public static void main (String [] args) {
    String sentence = "Once upon a time...";
    int count [] = new int [256];
    int length = sentence.length ();
    for (int i = 0;
    i < length; i ++) count [sentence.charAt (i)] ++;

    char chars [] = new char [sentence.length ()];
    for (int i = 0;
    i < length; i ++) {
        chars [i] = sentence.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (sentence.charAt (i) == chars [j]) find ++;

        }
        if (find == 1) {
            System.out.println ("Occurrence of " + sentence.charAt (i) + " is:" + count [sentence.charAt (i)]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String sentence = "The quick brown fox jumps over the lazy dog.";
    int [] letterCount = new int [26];
    if (sentence.contains (".")) {
        for (char letter : sentence.toLowerCase ().toCharArray ()) {
            if (Character.isLetter (letter)) {
                letterCount [letter - 'a'] ++;
            }
        }
        int sumOfLetters = 0;
        for (int i = 0;
        i < letterCount.length; i ++) {
            int count = letterCount [i];
            if (count > 0) {
                System.out.println ((char) (i + 'a') + " occurs " + count + " times");
                sumOfLetters += count;
            }
        }
        System.out.println ("Total number of letters is " + sumOfLetters);
    } else {
        System.out.println ("You forgot a period.  Try again.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51606383_51615941_51_98
51606383_51615941_7_47
Title: Get imageview from Adapter in Fragment 
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    try {
        imgView.buildDrawingCache ();
        Bitmap bm = imgView.getDrawingCache ();
        OutputStream fOut = null;
        File root = new File (Environment.getExternalStorageDirectory () + File.separator + " Beauty" + File.separator);
        if (! root.exists ()) root.mkdirs ();

        File sdImageMainDirectory = new File (root, "1.jpg");
        fOut = new FileOutputStream (sdImageMainDirectory);
        bm.compress (Bitmap.CompressFormat.PNG, 100, fOut);
        fOut.flush ();
        fOut.close ();
        Intent shareIntent = new Intent (Intent.ACTION_SEND);
        Uri phototUri = Uri.fromFile (sdImageMainDirectory);
        shareIntent.setData (phototUri);
        shareIntent.setType ("image/png");
        shareIntent.putExtra (Intent.EXTRA_STREAM, phototUri);
        startActivityForResult (Intent.createChooser (shareIntent, "share using"), 2);
    } catch (Exception ce) {
        ce.printStackTrace ();
    }
}
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    imgView.buildDrawingCache ();
    Bitmap bm = imgView.getDrawingCache ();
    OutputStream fOut = null;
    try {
        File root = new File (Environment.getExternalStorageDirectory () + File.separator + "Beauty" + File.separator);
        if (! root.exists ()) root.mkdirs ();

        File sdImageMainDirectory = new File (root, System.currentTimeMillis () + ".jpg");
        fOut = new FileOutputStream (sdImageMainDirectory);
        bm.compress (Bitmap.CompressFormat.PNG, 100, fOut);
        fOut.flush ();
        fOut.close ();
        Toast.makeText (ImagePagerActivity.this, "File saved at  Beauty  folder", Toast.LENGTH_SHORT).show ();
    } catch (Exception e) {
        Toast.makeText (ImagePagerActivity.this, "Error occured. Please try again later.", Toast.LENGTH_SHORT).show ();
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5162254_32507096_1_16
5162254_51488075_1_27
Title: All possible combinations of an array 
----------------------------------------

public static Port [] [] combinations (Port [] ports) {
    List < Port [] > combinationList = new ArrayList < Port [] > ();
    for (long i = 1;
    i < Math.pow (2, ports.length); i ++) {
        List < Port > portList = new ArrayList < Port > ();
        for (int j = 0;
        j < ports.length; j ++) {
            if ((i & (long) Math.pow (2, j)) > 0) {
                portList.add (ports [j]);
            }
        }
        combinationList.add (portList.toArray (new Port [0]));
    }
    return combinationList.toArray (new Port [0] [0]);
}
----------------------------------------

public static < T > T [] [] combinations (T [] a) {
    int len = a.length;
    if (len > 31) throw new IllegalArgumentException ();

    int numCombinations = (1 << len) - 1;
    @SuppressWarnings ("unchecked")
    T [] [] combinations = (T [] []) java.lang.reflect.Array.newInstance (a.getClass (), numCombinations);
    for (int i = 1;
    i <= numCombinations; i ++) {
        @SuppressWarnings ("unchecked")
        T [] combination = (T []) java.lang.reflect.Array.newInstance (a.getClass ().getComponentType (), Integer.bitCount (i));
        for (int j = 0, ofs = 0;
        j < len; j ++) if ((i & (1 << j)) > 0) combination [ofs ++] = a [j];

        combinations [i - 1] = combination;
    }
    return combinations;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51627116_51627620_1_12
51627116_51627947_49_55
Title: add node to binary search tree recursively with errors 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    if (left != null) {
        sb.append (left.toString ());
    }
    sb.append ("[" + item + "]");
    if (right != null) {
        sb.append (right.toString ());
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder stringBuilder = new StringBuilder ();
    if (left != null) stringBuilder.append (left.toString ());

    stringBuilder.append ("[" + item + "]");
    if (right != null) stringBuilder.append (right.toString ());

    return stringBuilder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51641541_51641738_1_11
51641541_51641763_1_12
Title: Java forcing default return statement from method with enum switch with all enum values covered 
----------------------------------------

String getMessageForType (MessageType myType) {
    switch (myType) {
        case error :
            return "Error type";
        case warning :
            return "Warning type";
        case info :
            return "Info type";
    }
    throw new RuntimeException ("Should not happen here ! We get the enum value " + myType);
}
----------------------------------------

String getMessageForType (MessageType myType) {
    switch (myType) {
        case error :
            return "Error type";
        case warning :
            return "Warning type";
        case info :
            return "Info type";
        default :
            return "unknown message type";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51656971_51657170_47_58
51656971_51657356_1_16
Title: Saving the Selections of a Checkbox 
----------------------------------------

public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
    SharedPreferences.Editor preferencesEditor = sp.edit ();
    preferencesEditor.putBoolean ("FreshStart", isChecked);
    preferencesEditor.apply ();
    buttonView.setSelected (isChecked);
    if (isChecked) Toast.makeText (mContext, "Saved as Favorite", Toast.LENGTH_SHORT).show ();
    else Toast.makeText (mContext, "No Longer set as Favorite", Toast.LENGTH_SHORT).show ();

}
----------------------------------------

public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
    final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (mContext);
    final SharedPreferences.Editor editor = prefs.edit ();
    buttonView.setSelected (true);
    if (isChecked) {
        Toast.makeText (mContext, "Saved as Favorite", Toast.LENGTH_SHORT).show ();
        editor.putBoolean ("some_name", true);
        editor.apply ();
    } else {
        Toast.makeText (mContext, "No Longer set as Favorite", Toast.LENGTH_SHORT).show ();
        editor.editor.putBoolean ("some_name", false);
        editor.apply ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51665092_51665389_1_13
51665092_52651032_6_27
Title: Run the program and observe the output to be: 55 4 50 19 
----------------------------------------

public static void addPlayer (ArrayList < Integer > players, int playerNum) {
    int index = 0;
    for (int i = 0;
    i < players.size (); i ++) {
        if (players.get (i).compareTo (playerNum) >= 0) {
            index = i;
            break;
        } else {
            index = i + 1;
        }
    }
    players.add (index, playerNum);
}
----------------------------------------

public static void addPlayer (ArrayList < Integer > players, int playerNum) {
    int i;
    boolean foundHigher;
    foundHigher = false;
    i = 0;
    while ((! foundHigher) && (i < players.size ())) {
        if (players.get (i) > playerNum) {
            players.add (i, playerNum);
            foundHigher = true;
        }
        ++ i;
    }
    if (i == players.size ()) {
        players.add (new Integer (playerNum));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51665629_51665829_1_13
51665629_51665940_1_19
Title: array out of bound exception in java 
----------------------------------------

public static void main (String [] args) {
    String n;
    String a [] = {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty"};
    System.out.println ("Enter number in words");
    Scanner sc = new Scanner (System.in);
    n = sc.next ();
    for (int i = 0;
    i < a.length; i ++) {
        if (n.equals (a [i])) {
            System.out.println (i);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String n;
    String a [] = {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten"};
    String b [] = {"eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty"};
    System.out.println ("Enter number in words");
    Scanner sc = new Scanner (System.in);
    n = sc.next ();
    for (int i = 0;
    i <= 20; i ++) {
        if (n.equals (a [i % a.length])) {
            System.out.println (i);
            break;
        } else if (n.equals (b [i % b.length])) {
            System.out.println (i);
            break;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51681845_51681953_1_11
51681845_51683766_1_14
Title: add rows of 2D arrays in processing 
----------------------------------------

int sumRows (int ArrayR [] []) {
    int row = 3;
    int col = 3;
    int sumR = 0;
    for (int i = 0;
    i < row; i ++) {
        for (int j = 0;
        j < col; j ++) {
            sumR += ArrayR [i] [j];
        }
    }
    return sumR;
}
----------------------------------------

int [] sumRows (int ArrayR [] []) {
    int row = ArrayR.length;
    int [] sumR = new int [row];
    for (int i = 0;
    i < row; i ++) {
        int col = ArrayR [i].length;
        sumR [i] = 0;
        for (int j = 0;
        j < col; j ++) {
            sumR [i] += ArrayR [i] [j];
        }
    }
    return sumR;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5169978_5170415_13_24
5169978_5173096_5_18
Title: Split 1GB Xml file using Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    XMLInputFactory xif = XMLInputFactory.newInstance ();
    XMLStreamReader xsr = xif.createXMLStreamReader (new FileReader ("input.xml"));
    xsr.nextTag ();
    TransformerFactory tf = TransformerFactory.newInstance ();
    Transformer t = tf.newTransformer ();
    while (xsr.nextTag () == XMLStreamConstants.START_ELEMENT) {
        File file = new File ("out/" + xsr.getAttributeValue (null, "account") + ".xml");
        t.transform (new StAXSource (xsr), new StreamResult (file));
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    VTDGen vg = new VTDGen ();
    if (vg.parseHttpUrl ("c:\\xml\\input.xml", true)) {
        VTDNav vn = vg.getNav ();
        AutoPilot ap = new AutoPilot (vn);
        ap.selectXPath ("/records/record");
        int i = - 1, j = 0;
        while ((i = ap.evalXPath ()) != - 1) {
            long l = vn.getElementFragment ();
            (new FileOutputStream ("out" + j + ".xml")).write (vn.getXML ().getBytes (), (int) l, (int) (l>> 32));
            j ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51706742_51706899_11_19
51706742_51707572_36_61
Title: Using comparator with multiple comparators 
----------------------------------------

public int compare (Student studen1, Student studen2) {
    for (Comparator < Student > comparator : listComparators) {
        int result = comparator.compare (studen1, studen2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Student one, Student another) {
    int comparisonByOne;
    int comparisonByAnother;
    if (orderOneAscending) {
        comparisonByOne = comparatorOne.compare (another, one);
    } else {
        comparisonByOne = comparatorOne.compare (one, another);
    }
    if (orderTwoAscending) {
        comparisonByAnother = comparatorTwo.compare (one, another);
    } else {
        comparisonByAnother = comparatorTwo.compare (another, one);
    }
    if (comparisonByOne == 0) {
        return comparisonByAnother;
    } else {
        return comparisonByOne;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51719701_51719940_1_26
51719701_51720064_6_24
Title: How to print a arrayline in seperate line in a TEXT FILE 
----------------------------------------

public static void main (String [] args) {
    String data = null;
    List < String > test = new ArrayList < > ();
    test.add ("test");
    test.add ("test1");
    test.add ("test2");
    test.add ("test3");
    try {
        BufferedWriter bw = new BufferedWriter (new FileWriter (FILENAME));
        for (String testList : test) {
            data = testList;
            bw.write (data);
            bw.newLine ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        bw.close ();
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > values = new ArrayList < > ();
    values.add ("bat");
    values.add ("ball");
    values.add ("print");
    BufferedWriter wr = null;
    try {
        wr = new BufferedWriter (new FileWriter ("output.txt"));
        for (String var : values) {
            wr.write (var);
            wr.newLine ();
        }
        wr.close ();
    } catch (Exception e) {
    }
}
----------------------------------------
