$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28576925_28577128_2_17
28576925_28577141_1_14
Title: How setcontentview in a new activity depending on the button clicked 
----------------------------------------

@Override
public void onClick (View v) {
    Intent a = new Intent (this, PictureFingeringChart.class);
    switch (v.getId ()) {
        case R.id.btn_bes1 :
            a.putExtra ("outputtodisplay", R.layout.viewToDisplay);
            break;
        default :
            break;
    }
    startActivity (a);
}
----------------------------------------

@Override
public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.btn_bes1 :
            Intent a = new Intent (this, PictureFingeringChart.class);
            int img_ID = R.id.your_image;
            a.putExtra ("EXTRA_ID", img_ID);
            startActivity (a);
            break;
        default :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28606254_28606386_1_15
28606254_28606449_1_15
Title: How to find if an ArrayList contains a character from a String? 
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    int count = 0;
    String errMsg;
    for (int j = 0;
    j < testStr.length (); j ++) {
        boolean found = false;
        for (int i = 0;
        i < fcontents.size () && ! found; i ++) {
            found = fcontents.get (i).indexOf (testStr.charAt (j)) >= 0;
        }
        if (! found) {
            errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
        }
    }
}
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    int count = 0;
    boolean flag = false;
    for (int j = 0;
    j < testStr.length (); j ++) {
        flag = false;
        for (String content : fcontents) {
            if (content.contains ("" + (testStr.charAt (j)))) {
                flag = true;
            }
        }
        if (flag) {
            String errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28606254_28606386_1_15
28606254_28606643_1_14
Title: How to find if an ArrayList contains a character from a String? 
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    int count = 0;
    String errMsg;
    for (int j = 0;
    j < testStr.length (); j ++) {
        boolean found = false;
        for (int i = 0;
        i < fcontents.size () && ! found; i ++) {
            found = fcontents.get (i).indexOf (testStr.charAt (j)) >= 0;
        }
        if (! found) {
            errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
        }
    }
}
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    String fullStr = "";
    for (int j = 0;
    j < fcontents.length (); j ++) {
        fullStr += fcontents.get (j);
    }
    for (int j = 0;
    j < testStr.length (); j ++) {
        if (! fullStr.contains (testStr.charAt (j))) {
            String errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
            System.out.println (errMsg);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28606254_28606449_1_15
28606254_28606643_1_14
Title: How to find if an ArrayList contains a character from a String? 
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    int count = 0;
    boolean flag = false;
    for (int j = 0;
    j < testStr.length (); j ++) {
        flag = false;
        for (String content : fcontents) {
            if (content.contains ("" + (testStr.charAt (j)))) {
                flag = true;
            }
        }
        if (flag) {
            String errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
        }
    }
}
----------------------------------------

private static void ValidateDecFile (String testStr, ArrayList < String > fcontents) {
    String fullStr = "";
    for (int j = 0;
    j < fcontents.length (); j ++) {
        fullStr += fcontents.get (j);
    }
    for (int j = 0;
    j < testStr.length (); j ++) {
        if (! fullStr.contains (testStr.charAt (j))) {
            String errMsg = "Character '" + testStr.charAt (j) + "' is not in the string.";
            System.out.println (errMsg);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2861762_2861910_62_85
2861762_2862240_47_61
Title: Need a Java based interruptible timer thread 
----------------------------------------

public void run () {
    while (! Thread.interrupted ()) {
        String line;
        try {
            line = input.readLine ();
        } catch (IOException ex) {
            throw new RuntimeException (ex);
        }
        try {
            if ((line == null) || (line.length () == 0)) {
                pipe.put (EOF);
                break;
            } else {
                pipe.put (line);
            }
        } catch (InterruptedException ex) {
            break;
        }
    }
}
----------------------------------------

public void run () {
    System.out.println ("starting a new run of the sleep thread!!");
    try {
        sleep (10000);
    } catch (InterruptedException ex) {
        System.out.println ("TimeOut thread interrupted!!");
    }
    System.out.println ("went through TimeOut without interruption");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28621617_28621618_84_108
28621617_28630262_78_85
Title: Component for filtering a list 
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (Exception useDefault) {
            }
            FontFilter o1 = new FontFilter (true);
            FontFilter o2 = new FontFilter (false);
            JFrame f = new JFrame ("Font Filter");
            f.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            f.setLocationByPlatform (true);
            f.add (o1.getUI (), BorderLayout.LINE_START);
            f.add (o2.getUI (), BorderLayout.CENTER);
            f.pack ();
            f.setMinimumSize (f.getSize ());
            f.setVisible (true);
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new FilterListDemo ().createAndShowGui ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28625432_28625614_6_23
28625432_28631075_7_30
Title: Checking whether a number is in Fibonacci Sequence? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int cand = sc.nextInt ();
    if (cand < 0) {
        System.out.println ("IsNotFibo");
        return;
    }
    int aTest = 5 * cand * cand + 4;
    int bTest = 5 * cand * cand - 4;
    int sqrt1 = (int) Math.sqrt (aTest);
    int sqrt2 = (int) Math.sqrt (bTest);
    if ((sqrt1 * sqrt1 == aTest) || (sqrt2 * sqrt2 == bTest)) {
        System.out.println ("IsFibo");
    } else {
        System.out.println ("IsNotFibo");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    long [] fib = new long [52];
    Set < Long > fibSet = new HashSet < > (52);
    fib [0] = 0L;
    fib [1] = 1L;
    for (int i = 2;
    i < 52; i ++) {
        fib [i] = fib [i - 1] + fib [i - 2];
        fibSet.add (fib [i]);
    }
    int n = sc.nextInt ();
    long cand;
    for (int i = 0;
    i < n; i ++) {
        cand = sc.nextLong ();
        if (cand < 0) {
            System.out.println ("IsNotFibo");
            continue;
        }
        if (fibSet.contains (cand)) {
            System.out.println ("IsFibo");
        } else {
            System.out.println ("IsNotFibo");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28632657_28633860_16_59
28632657_28636310_23_53
Title: JavaFX - scroll a scrollPane while button pressed 
----------------------------------------

public void start (Stage primaryStage) {
    ScrollPane scroller = new ScrollPane ();
    Pane pane = new Pane ();
    pane.setMinHeight (1000);
    scroller.setContent (pane);
    Button upButton = new Button ("Up");
    Button downButton = new Button ("Down");
    HBox controls = new HBox (10, upButton, downButton);
    controls.setPadding (new Insets (10));
    controls.setAlignment (Pos.CENTER);
    Scene scene = new Scene (new BorderPane (scroller, null, null, controls, null), 600, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
    final double scrollSpeed = 0.5;
    AnimationTimer timer = new AnimationTimer () {
        private long lastUpdate = 0;
        @Override
        public void handle (long time) {
            if (lastUpdate > 0) {
                long elapsedNanos = time - lastUpdate;
                double elapsedSeconds = elapsedNanos / 1_000_000_000.0;
                double delta = 0;
                if (upButton.isArmed ()) {
                    delta = - scrollSpeed * elapsedSeconds;
                }
                if (downButton.isArmed ()) {
                    delta = scrollSpeed * elapsedSeconds;
                }
                double newValue = clamp (scroller.getVvalue () + delta, scroller.getVmin (), scroller.getVmax ());
                scroller.setVvalue (newValue);
            }
            lastUpdate = time;
        }}

    ;
    timer.start ();
}
----------------------------------------

public void start (Stage primaryStage) {
    ScrollPane scroller = new ScrollPane ();
    Pane pane = new Pane ();
    pane.setMinHeight (1000);
    scroller.setContent (pane);
    Button upButton = new Button ("Up");
    Button downButton = new Button ("Down");
    HBox controls = new HBox (10, upButton, downButton);
    controls.setPadding (new Insets (10));
    controls.setAlignment (Pos.CENTER);
    Scene scene = new Scene (new BorderPane (scroller, null, null, controls, null), 600, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
    EventStream < BTN > armedButtons = merge (valuesOf (upButton.armedProperty ()).map (armed -> armed ? BTN.UP : BTN.NONE), valuesOf (downButton.armedProperty ()).map (armed -> armed ? BTN.DOWN : BTN.NONE));
    EventStream < Double > deltas = armedButtons.flatMap (btn -> {
        switch (btn) {
            case UP :
                return elapsedSeconds ().map (sec -> sec * - scrollSpeed);
            case DOWN :
                return elapsedSeconds ().map (sec -> sec * scrollSpeed);
            default :
                return never ();
        }
    });
    deltas.subscribe (delta -> scroller.setVvalue (scroller.getVvalue () + delta));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28634000_28634211_5_38
28634000_28634869_6_28
Title: Check if user enters negative numbers straight away? 
----------------------------------------

public static void main (String [] args) {
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    double num = keys.nextInt ();
    double Max = num + 0.5;
    double Min = num - 0.5;
    if (num < 0) {
        System.out.println ("Max and Min undefined");
        System.exit (1);
    }
    while (true) {
        double temp_num = num;
        num = Math.abs (num);
        Max = num + 0.5;
        Min = num - 0.5;
        System.out.println ("Max = " + Max);
        System.out.println ("Min = " + Min);
        if (temp_num < 0) break;

        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
    }
    System.out.println ("Number is Negative! System Shutdown!");
}
----------------------------------------

public static void main (String [] args) {
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    double num = keys.nextInt ();
    double Max = num + 0.5;
    double Min = num - 0.5;
    while (true) {
        if (num < 0 && entryCount == 0) {
            System.out.println ("Number is Negative! System Shutdown!");
            System.exit (1);
        }
        System.out.println ("Max = " + Max);
        System.out.println ("Min = " + Min);
        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
        entryCount ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28634000_28634211_5_38
28634000_28635030_37_78
Title: Check if user enters negative numbers straight away? 
----------------------------------------

public static void main (String [] args) {
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    double num = keys.nextInt ();
    double Max = num + 0.5;
    double Min = num - 0.5;
    if (num < 0) {
        System.out.println ("Max and Min undefined");
        System.exit (1);
    }
    while (true) {
        double temp_num = num;
        num = Math.abs (num);
        Max = num + 0.5;
        Min = num - 0.5;
        System.out.println ("Max = " + Max);
        System.out.println ("Min = " + Min);
        if (temp_num < 0) break;

        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
    }
    System.out.println ("Number is Negative! System Shutdown!");
}
----------------------------------------

public static void main (String [] args) {
    class2 obj = new class2 ();
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    boolean bol = true;
    String k = "";
    double num = keys.nextInt ();
    int count = 1;
    if (num < 0 && count == 1) {
        k = "terminate";
        count = count + 1;
        System.out.println ("Max and Min undefined");
        System.exit (1);
        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
    }
    while (bol == true) {
        while (num > 0) {
            count = count + 1;
            obj.positive (num);
            num = keys.nextInt ();
        }
        while (num < 0 && count != 2) {
            k = "terminate";
            obj.negative (num, k);
            num = keys.nextInt ();
        }
        count = count + 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28634000_28634869_6_28
28634000_28635030_37_78
Title: Check if user enters negative numbers straight away? 
----------------------------------------

public static void main (String [] args) {
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    double num = keys.nextInt ();
    double Max = num + 0.5;
    double Min = num - 0.5;
    while (true) {
        if (num < 0 && entryCount == 0) {
            System.out.println ("Number is Negative! System Shutdown!");
            System.exit (1);
        }
        System.out.println ("Max = " + Max);
        System.out.println ("Min = " + Min);
        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
        entryCount ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    class2 obj = new class2 ();
    Scanner keys = new Scanner (System.in);
    System.out.println ("Enter a number: ");
    boolean bol = true;
    String k = "";
    double num = keys.nextInt ();
    int count = 1;
    if (num < 0 && count == 1) {
        k = "terminate";
        count = count + 1;
        System.out.println ("Max and Min undefined");
        System.exit (1);
        System.out.println ("\nEnter another: ");
        num = keys.nextInt ();
    }
    while (bol == true) {
        while (num > 0) {
            count = count + 1;
            obj.positive (num);
            num = keys.nextInt ();
        }
        while (num < 0 && count != 2) {
            k = "terminate";
            obj.negative (num, k);
            num = keys.nextInt ();
        }
        count = count + 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28641141_28641197_1_13
28641141_28641208_1_19
Title: Generate a factor array and print it contents 
----------------------------------------

public int [] generateFactors () {
    int [] factors = new int [number];
    for (int i = 0;
    i < number; i ++) {
        if ((i + 1 % number) == 0) {
            factors [i] = i;
            System.out.println ("Factor= " + i);
        } else {
            factors [i] = 0;
        }
    }
    return factors;
}
----------------------------------------

public String generateFactors () {
    String ret = "";
    int [] factors = new int [number];
    for (int i = 0;
    i < number; i ++) {
        if ((number % (i + 1)) == 0) {
            factors [i] = i + 1;
        } else {
            factors [i] = 0;
        }
    }
    for (int i = 0;
    i < number; i ++) {
        if (factors [i] != 0) ret += factors [i] + "\n";

    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28641141_28641197_1_13
28641141_28641220_1_18
Title: Generate a factor array and print it contents 
----------------------------------------

public int [] generateFactors () {
    int [] factors = new int [number];
    for (int i = 0;
    i < number; i ++) {
        if ((i + 1 % number) == 0) {
            factors [i] = i;
            System.out.println ("Factor= " + i);
        } else {
            factors [i] = 0;
        }
    }
    return factors;
}
----------------------------------------

public String generateFactors () {
    int [] factors = new int [number];
    String strPrint = "";
    for (int i = 0;
    i < number; i ++) {
        if ((i + 1 % number) == 0) {
            factors [i] = i;
            strPrint = strPrint + "Factor= " + i + "\n"
        } else {
            factors [i] = 0;
        }
    }
    for (int i = 0;
    i < number; i ++) {
        strPrint = strPrint + factors [i] + "\n"
    }
    return strPrint;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28641141_28641208_1_19
28641141_28641220_1_18
Title: Generate a factor array and print it contents 
----------------------------------------

public String generateFactors () {
    String ret = "";
    int [] factors = new int [number];
    for (int i = 0;
    i < number; i ++) {
        if ((number % (i + 1)) == 0) {
            factors [i] = i + 1;
        } else {
            factors [i] = 0;
        }
    }
    for (int i = 0;
    i < number; i ++) {
        if (factors [i] != 0) ret += factors [i] + "\n";

    }
    return ret;
}
----------------------------------------

public String generateFactors () {
    int [] factors = new int [number];
    String strPrint = "";
    for (int i = 0;
    i < number; i ++) {
        if ((i + 1 % number) == 0) {
            factors [i] = i;
            strPrint = strPrint + "Factor= " + i + "\n"
        } else {
            factors [i] = 0;
        }
    }
    for (int i = 0;
    i < number; i ++) {
        strPrint = strPrint + factors [i] + "\n"
    }
    return strPrint;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_19650007_8_29
2864117_21659104_5_17
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("C://text.txt");
    StringBuffer stringBuffer = new StringBuffer ("");
    try {
        FileInputStream fileInputStream = new FileInputStream (file);
        try {
            while ((ch = fileInputStream.read ()) != - 1) {
                stringBuffer.append ((char) ch);
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    System.out.println ("File contents :");
    System.out.println (stringBuffer);
}
----------------------------------------

public static void main (String args []) {
    FileReader fr = new FileReader (new File ("<put your file path here>"));
    while (true) {
        int n = fr.read ();
        if (n > - 1) {
            char ch = (char) fr.read ();
            System.out.print (ch);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_19650007_8_29
2864117_2864155_4_24
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("C://text.txt");
    StringBuffer stringBuffer = new StringBuffer ("");
    try {
        FileInputStream fileInputStream = new FileInputStream (file);
        try {
            while ((ch = fileInputStream.read ()) != - 1) {
                stringBuffer.append ((char) ch);
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    System.out.println ("File contents :");
    System.out.println (stringBuffer);
}
----------------------------------------

public static void main (String args []) {
    try {
        FileInputStream fstream = new FileInputStream ("textfile.txt");
        DataInputStream in = new DataInputStream (fstream);
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        String strLine;
        while ((strLine = br.readLine ()) != null) {
            System.out.println (strLine);
        }
        in.close ();
    } catch (Exception e) {
        System.err.println ("Error: " + e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_19650007_8_29
2864117_46747347_8_23
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("C://text.txt");
    StringBuffer stringBuffer = new StringBuffer ("");
    try {
        FileInputStream fileInputStream = new FileInputStream (file);
        try {
            while ((ch = fileInputStream.read ()) != - 1) {
                stringBuffer.append ((char) ch);
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    System.out.println ("File contents :");
    System.out.println (stringBuffer);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner input = new Scanner (new File ("cards.txt"));
    int times = input.nextInt ();
    for (int i = 0;
    i < times; i ++) {
        int numbersFromFile = input.nextInt ();
        System.out.println (numbersFromFile);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_21659104_5_17
2864117_2864155_4_24
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String args []) {
    FileReader fr = new FileReader (new File ("<put your file path here>"));
    while (true) {
        int n = fr.read ();
        if (n > - 1) {
            char ch = (char) fr.read ();
            System.out.print (ch);
        }
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        FileInputStream fstream = new FileInputStream ("textfile.txt");
        DataInputStream in = new DataInputStream (fstream);
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        String strLine;
        while ((strLine = br.readLine ()) != null) {
            System.out.println (strLine);
        }
        in.close ();
    } catch (Exception e) {
        System.err.println ("Error: " + e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_21659104_5_17
2864117_46747347_8_23
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String args []) {
    FileReader fr = new FileReader (new File ("<put your file path here>"));
    while (true) {
        int n = fr.read ();
        if (n > - 1) {
            char ch = (char) fr.read ();
            System.out.print (ch);
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner input = new Scanner (new File ("cards.txt"));
    int times = input.nextInt ();
    for (int i = 0;
    i < times; i ++) {
        int numbersFromFile = input.nextInt ();
        System.out.println (numbersFromFile);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2864117_2864155_4_24
2864117_46747347_8_23
Title: Read data from a text file using Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileInputStream fstream = new FileInputStream ("textfile.txt");
        DataInputStream in = new DataInputStream (fstream);
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        String strLine;
        while ((strLine = br.readLine ()) != null) {
            System.out.println (strLine);
        }
        in.close ();
    } catch (Exception e) {
        System.err.println ("Error: " + e.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner input = new Scanner (new File ("cards.txt"));
    int times = input.nextInt ();
    for (int i = 0;
    i < times; i ++) {
        int numbersFromFile = input.nextInt ();
        System.out.println (numbersFromFile);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28644755_28645331_34_69
28644755_28645331_71_88
Title: Find the length of longest chain formed using given words in String 
----------------------------------------

boolean hasChain (List < String > stringList) {
    for (String str : stringList) {
        Character start = getFirstChar (str);
        Character end = getLastChar (str);
        List < String > startsWithList;
        List < String > endsWithList;
        if (startsWith.containsKey (start)) {
            startsWithList = startsWith.get (start);
        } else {
            startsWithList = new ArrayList < String > ();
            startsWith.put (start, startsWithList);
        }
        if (endsWith.containsKey (end)) {
            endsWithList = endsWith.get (end);
        } else {
            endsWithList = new ArrayList < String > ();
            endsWith.put (end, endsWithList);
        }
        startsWithList.add (str);
        endsWithList.add (str);
    }
    Stack < String > stringStack = new Stack < String > ();
    for (String str : stringList) {
        if (hasChain (stringList.size (), str, stringStack)) {
            System.out.println (stringStack);
            System.out.println ("size " + stringStack.size ());
            chainLength = stringStack.size ();
            return true;
        }
    }
    return false;
}
----------------------------------------

private boolean hasChain (int size, String startString, Stack < String > stringStack) {
    if (size == stringStack.size ()) return true;

    Character last = getLastChar (startString);
    if (startsWith.containsKey (last)) {
        List < String > stringList = startsWith.get (last);
        for (int i = 0;
        i < stringList.size (); i ++) {
            String candidate = stringList.remove (i --);
            stringStack.push (candidate);
            if (hasChain (size, candidate, stringStack)) {
                return true;
            }
            stringStack.pop ();
            stringList.add (++ i, candidate);
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28649344_28650366_33_42
28649344_28650366_44_54
Title: Java XMLStreamWriter: Outputting Unicode extended characters (non-BMP) 
----------------------------------------

public void writeCharacters (String text) throws XMLStreamException {
    xmlSW.writeCharacters ("");
    xmlSW.flush ();
    try {
        characterEscapor.translate (text, writer);
    } catch (IOException e) {
        throw new XMLStreamException (e);
    }
}
----------------------------------------

public void writeCharacters (char [] text, int start, int len) throws XMLStreamException {
    xmlSW.writeCharacters ("");
    xmlSW.flush ();
    try {
        characterEscapor.translate (CharBuffer.wrap (text, start, len), writer);
    } catch (IOException e) {
        throw new XMLStreamException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28651269_28651421_1_30
28651269_28651464_1_31
Title: Java program calculates averages. How do I display highest average? 
----------------------------------------

public static void main (String [] args) {
    final List < Double > allAverages = new ArrayList < > ();
    double score = 0;
    double totalScore = 0;
    double avg = 0;
    int count = - 1;
    Scanner input = new Scanner (System.in);
    for (int player = 1;
    player <= 4; player ++) {
        System.out.printf ("\nPlayer %d\n", player);
        do {
            System.out.println ("Enter Your Score: ");
            totalScore = totalScore + score;
            score = input.nextDouble ();
            count ++;
        } while (score != - 1);
        avg = totalScore / count;
        System.out.printf ("Average Score = %.2f\n", avg);
        allAverages.add (totalScore / count);
        score = 0;
        totalScore = 0;
        count = - 1;
    }
    System.out.println ("The highest is : " + Collections.max (allAverages));
}
----------------------------------------

public static void main (String [] args) {
    double bestScore = 0;
    int bestPlayer = 1;
    Scanner input = new Scanner (System.in);
    for (int player = 1;
    player <= 4; player ++) {
        System.out.printf ("\nPlayer %d\n", player);
        int count = 0;
        double totalScore = 0;
        do {
            System.out.println ("Enter Your Score: ");
            double score = input.nextDouble ();
            if (score != - 1) {
                totalScore += score;
                count ++;
            }
        } while (score != - 1);
        double averageScore = totalScore / count;
        if (averageScore > bestScore) {
            bestScore = averageScore;
            bestPlayer = player;
        }
        System.out.printf ("Average Score = %.2f\n", averageScore);
    }
    System.out.printf ("Best Average Score = %.2f, best player = %d\n", bestScore, bestPlayer);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28651269_28651421_1_30
28651269_28651496_1_29
Title: Java program calculates averages. How do I display highest average? 
----------------------------------------

public static void main (String [] args) {
    final List < Double > allAverages = new ArrayList < > ();
    double score = 0;
    double totalScore = 0;
    double avg = 0;
    int count = - 1;
    Scanner input = new Scanner (System.in);
    for (int player = 1;
    player <= 4; player ++) {
        System.out.printf ("\nPlayer %d\n", player);
        do {
            System.out.println ("Enter Your Score: ");
            totalScore = totalScore + score;
            score = input.nextDouble ();
            count ++;
        } while (score != - 1);
        avg = totalScore / count;
        System.out.printf ("Average Score = %.2f\n", avg);
        allAverages.add (totalScore / count);
        score = 0;
        totalScore = 0;
        count = - 1;
    }
    System.out.println ("The highest is : " + Collections.max (allAverages));
}
----------------------------------------

public static void main (String [] args) throws NumberFormatException, IOException {
    double currentScore = 0;
    double totalScore = 0;
    int numScores = 0;
    double averageScore = 0;
    double topAverage = 0;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    for (int i = 0;
    i < 4; i ++) {
        do {
            System.out.println ("Enter Score");
            currentScore = Double.parseDouble (br.readLine ());
            totalScore = totalScore + currentScore;
            numScores += 1;
        } while (currentScore != - 1);
        numScores -= 1;
        totalScore += 1;
        averageScore = totalScore / numScores;
        System.out.println ("Average Score is " + averageScore);
        if (topAverage < averageScore) {
            topAverage = averageScore;
        }
        currentScore = 0;
        totalScore = 0;
        numScores = 0;
    }
    System.out.println ("Top Average is " + topAverage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28651269_28651464_1_31
28651269_28651496_1_29
Title: Java program calculates averages. How do I display highest average? 
----------------------------------------

public static void main (String [] args) {
    double bestScore = 0;
    int bestPlayer = 1;
    Scanner input = new Scanner (System.in);
    for (int player = 1;
    player <= 4; player ++) {
        System.out.printf ("\nPlayer %d\n", player);
        int count = 0;
        double totalScore = 0;
        do {
            System.out.println ("Enter Your Score: ");
            double score = input.nextDouble ();
            if (score != - 1) {
                totalScore += score;
                count ++;
            }
        } while (score != - 1);
        double averageScore = totalScore / count;
        if (averageScore > bestScore) {
            bestScore = averageScore;
            bestPlayer = player;
        }
        System.out.printf ("Average Score = %.2f\n", averageScore);
    }
    System.out.printf ("Best Average Score = %.2f, best player = %d\n", bestScore, bestPlayer);
}
----------------------------------------

public static void main (String [] args) throws NumberFormatException, IOException {
    double currentScore = 0;
    double totalScore = 0;
    int numScores = 0;
    double averageScore = 0;
    double topAverage = 0;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    for (int i = 0;
    i < 4; i ++) {
        do {
            System.out.println ("Enter Score");
            currentScore = Double.parseDouble (br.readLine ());
            totalScore = totalScore + currentScore;
            numScores += 1;
        } while (currentScore != - 1);
        numScores -= 1;
        totalScore += 1;
        averageScore = totalScore / numScores;
        System.out.println ("Average Score is " + averageScore);
        if (topAverage < averageScore) {
            topAverage = averageScore;
        }
        currentScore = 0;
        totalScore = 0;
        numScores = 0;
    }
    System.out.println ("Top Average is " + topAverage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28652149_28653090_21_46
28652149_33130731_4_20
Title: RotateTransition around a pivot? 
----------------------------------------

public void start (Stage primaryStage) {
    Line line = new Line (200, 200, 200, 350);
    Pane pane = new Pane (line);
    Rotate rotation = new Rotate ();
    rotation.pivotXProperty ().bind (line.startXProperty ());
    rotation.pivotYProperty ().bind (line.startYProperty ());
    line.getTransforms ().add (rotation);
    Timeline timeline = new Timeline (new KeyFrame (Duration.ZERO, new KeyValue (rotation.angleProperty (), 0)), new KeyFrame (Duration.seconds (1), new KeyValue (rotation.angleProperty (), 360)));
    Button button = new Button ("Rotate");
    button.setOnAction (evt -> timeline.play ());
    button.disableProperty ().bind (timeline.statusProperty ().isEqualTo (Animation.Status.RUNNING));
    HBox controls = new HBox (button);
    controls.setAlignment (Pos.CENTER);
    controls.setPadding (new Insets (12));
    BorderPane root = new BorderPane (pane, null, null, controls, null);
    Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    Group root = new Group ();
    primaryStage.setScene (new Scene (root, 140, 140));
    Rectangle rect = new Rectangle (1, 1, 40, 40);
    movePivot (rect, - 20, - 20);
    RotateTransition rt = new RotateTransition (Duration.seconds (4), rect);
    rt.setToAngle (720);
    rt.setCycleCount (Timeline.INDEFINITE);
    rt.setAutoReverse (true);
    rt.play ();
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2866526_2866894_1_16
2866526_3212026_1_15
Title: How to prevent the other threads from accessing a method when one thread is accessing a method? 
----------------------------------------

public void WriteSingle (File output_file, File final_output) throws IOException {
    System.out.println ("Writing Single file");
    FileOutputStream fo = new FileOutputStream (final_output, true);
    FileChannel fi = fo.getChannel ();
    FileInputStream fs = new FileInputStream (output_file);
    FileChannel fc = fs.getChannel ();
    FileLock lock = fi.lock ();
    fc.transferTo (0, fc.size (), fi);
    fc.close ();
    fi.close ();
    fo.close ();
    fs.close ();
}
----------------------------------------

public void WriteSingle (File output_file, File final_output) throws IOException {
    synchronized (getClass ()) {
        System.out.println ("Writing Single file");
        FileOutputStream fo = new FileOutputStream (final_output, true);
        FileChannel fi = fo.getChannel ();
        FileInputStream fs = new FileInputStream (output_file);
        FileChannel fc = fs.getChannel ();
        int maxCount = (64 * 1024 * 1024) - (32 * 1024);
        long size = fc.size ();
        long position = 0;
        while (position < size) {
            position += fc.transferTo (position, maxCount, fi);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28667664_28667769_5_16
28667664_28667826_16_24
Title: How to reduce this below java code? 
----------------------------------------

public void run () {
    try {
        Intent intent = new Intent (Intent.ACTION_VIEW, Uri.parse (link));
        intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity (intent);
    } catch (Exception e) {
        Log.e ("Exception Caught", e.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        Intent intent = new Intent (Intent.ACTION_VIEW, Uri.parse (mLink));
        intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity (intent);
    } catch (Exception e) {
        Log.e ("Exception Caught", e.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28667664_28667826_1_28
28667664_28667826_5_26
Title: How to reduce this below java code? 
----------------------------------------

public void onClick (View v) {
    v.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            if (v == tv) mLink = "link1";
            else if (v == tv1) mLink = "link2";
            else if (v == tv2) mLink = "link3";

            v.startAnimation (myscale);
            new Handler ().postDelayed (new Runnable () {
                @Override
                public void run () {
                    try {
                        Intent intent = new Intent (Intent.ACTION_VIEW, Uri.parse (mLink));
                        intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
                        startActivity (intent);
                    } catch (Exception e) {
                        Log.e ("Exception Caught", e.toString ());
                    }
                }}

            , 50);
        }}

    );
}
----------------------------------------

public void onClick (View v) {
    if (v == tv) mLink = "link1";
    else if (v == tv1) mLink = "link2";
    else if (v == tv2) mLink = "link3";

    v.startAnimation (myscale);
    new Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            try {
                Intent intent = new Intent (Intent.ACTION_VIEW, Uri.parse (mLink));
                intent.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity (intent);
            } catch (Exception e) {
                Log.e ("Exception Caught", e.toString ());
            }
        }}

    , 50);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28674876_28675192_4_14
28674876_28675530_11_61
Title: Drawing in JPanel disappears when scrolling or ressizing the frame 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    g.setColor (Color.RED);
    g.drawRect (150, 10, 100, 20);
    g.fillRect (150, 10, 100, 20);
    g.drawLine (200, 10, 200, 2000);
    g.setColor (Color.BLACK);
    g.drawString ("UE", 190, 25);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (source == null) {
        return;
    }
    g.setColor (Color.RED);
    g.drawRect (150, 10, 100, 20);
    g.fillRect (150, 10, 100, 20);
    g.drawLine (200, 10, 200, 2000);
    g.setColor (Color.BLACK);
    g.drawString ("UE", 190, 25);
    g.setColor (Color.BLUE);
    g.drawRect (350, 10, 100, 20);
    g.fillRect (350, 10, 100, 20);
    g.drawLine (400, 10, 400, 2000);
    g.setColor (Color.BLACK);
    g.drawString ("Node B", 380, 25);
    g.setColor (Color.GREEN);
    g.drawRect (550, 10, 100, 20);
    g.fillRect (550, 10, 100, 20);
    g.drawLine (600, 10, 600, 2000);
    g.setColor (Color.BLACK);
    g.drawString ("RNC", 590, 25);
    g.setColor (Color.YELLOW);
    g.drawRect (750, 10, 100, 20);
    g.fillRect (750, 10, 100, 20);
    g.drawLine (800, 10, 800, 2000);
    g.setColor (Color.BLACK);
    g.drawString ("CN", 790, 25);
    System.out.println (new java.io.File ("").getAbsolutePath ());
    final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    try {
        final DocumentBuilder builder = factory.newDocumentBuilder ();
        final Document document = builder.parse (source);
    } catch (final ParserConfigurationException e) {
        e.printStackTrace ();
    } catch (final SAXException e) {
        e.printStackTrace ();
    } catch (final IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28676123_28691264_9_23
28676123_34767334_1_18
Title: mockrunner jdbc - no columns/rows in result set 
----------------------------------------

public void test () throws Exception {
    PreparedStatementResultSetHandler statementHandler = getJDBCMockObjectFactory ().getMockConnection ().getPreparedStatementResultSetHandler ();
    MockResultSet resultMock = statementHandler.createResultSet ();
    resultMock.addColumn ("ID", new Object [] {"1"});
    resultMock.addColumn ("USERNAME", new Object [] {"foobar"});
    statementHandler.prepareResultSet ("SELECT * FROM DUAL", resultMock, new HashMap ());
    Connection con = DriverManager.getConnection ("a", "b", "c");
    System.out.println (con);
    PreparedStatement stmtObjects = con.prepareStatement ("SELECT * FROM DUAL WHERE 1=?");
    ResultSet rs = stmtObjects.executeQuery ();
    System.out.println (rs);
    System.out.println (this.getPreparedStatements ());
}
----------------------------------------

@Test
public void test () throws Exception {
    PreparedStatementResultSetHandler statementHandler = getJDBCMockObjectFactory ().getMockConnection ().getPreparedStatementResultSetHandler ();
    MockResultSet resultMock = statementHandler.createResultSet ();
    resultMock.addColumn ("ID", new Object [] {"1"});
    resultMock.addColumn ("USERNAME", new Object [] {"foobar"});
    statementHandler.prepareGlobalResultSet (resultMock);
    Connection con = DriverManager.getConnection ("a", "b", "c");
    PreparedStatement stmtObjects = con.prepareStatement ("SELECT * FROM USER");
    ResultSet rs = stmtObjects.executeQuery ();
    assertTrue (rs.next ());
    verifySQLStatementExecuted ("SELECT * FROM USER");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28677090_28678316_41_51
28677090_28678316_60_70
Title: Android - Real time location sharing 
----------------------------------------

public void onLocationChanged (Location location) {
    timer.cancel ();
    x = location.getLatitude ();
    y = location.getLongitude ();
    lm.removeUpdates (this);
    lm.removeUpdates (locationListenerNetwork);
    Context context = getApplicationContext ();
    int duration = Toast.LENGTH_SHORT;
    Toast toast = Toast.makeText (context, "gps enabled " + x + "\n" + y, duration);
    toast.show ();
}
----------------------------------------

public void onLocationChanged (Location location) {
    timer.cancel ();
    x = location.getLatitude ();
    y = location.getLongitude ();
    lm.removeUpdates (this);
    lm.removeUpdates (locationListenerGps);
    Context context = getApplicationContext ();
    int duration = Toast.LENGTH_SHORT;
    Toast toast = Toast.makeText (context, "network enabled" + x + "\n" + y, duration);
    toast.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2868240_2868389_6_16
2868240_2868813_10_27
Title: "500 Worker Threads what kind of thread pool?" 
----------------------------------------

public void run () {
    while (true) {
        Thread.sleep (ONE_MINUTE);
        sem.acquire ();
        try {
        } finally {
            sem.release ();
        }
    }
}
----------------------------------------

public void run () {
    for (int iteration = 0;
    iteration < 4;) {
        if (System.currentTimeMillis () - this.lastRunTime > TIME_OUT) {
            ++ iteration;
            System.out.printf ("Task {%d} iteration {%d} thread {%s}.\n", task, iteration, Thread.currentThread ());
            this.lastRunTime = System.currentTimeMillis ();
        } else {
            Thread.yield ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28686854_28686901_3_27
28686854_28686978_5_21
Title: Not sure where to insert a for loop 
----------------------------------------

public static void main (String [] args) {
    Scanner c = new Scanner (System.in);
    System.out.println ("Enter spaces between stars: ");
    int l = c.nextInt ();
    String a = "*";
    String b = " ";
    for (int i = 0;
    i < 5; i ++) {
        for (int j = 0;
        j < 3; j ++) {
            System.out.print (a);
            for (int k = 0;
            k < l; k ++) {
                System.out.print (b);
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter spaces between stars: ");
    int numSpaces = scanner.nextInt ();
    String charToDisplay = "*";
    String spaces = buildNSpaces (numSpaces);
    int numberOfRows = 3;
    int numberOfCharactersPerRow = 3;
    for (int i = 0;
    i < numberOfRows; i ++) {
        for (int j = 0;
        j < numberOfCharactersPerRow; j ++) {
            System.out.print (charToDisplay + spaces);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28687360_28687421_5_28
28687360_28687703_5_25
Title: Alternative to goto statement in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner keys = new Scanner (System.in);
    sopln ("Hello, and welcome to Casino Games!");
    sopln ("Would you like to login, register, or play as a guest?");
    while (true) {
        char token = keys.nextLine ().toLowerCase ().charAt (0);
        if (token == 'l') {
            User.login ();
            break;
        } else if (token == 'r') {
            User.register ();
            break;
        } else if (token == 'g') {
            User.guestLogin ();
            break;
        } else {
            sopln ("Invalid Choice, please try again!");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    try (Scanner input = new Scanner (System.in)) {
        sopln ("Hello, and welcome to Casino Games!");
        sopln ("Would you like to login, register, or play as a guest?");
        while (true) {
            char token = input.next ().toLowerCase ().charAt (0);
            if (token == 'l') {
                User.login ();
                break;
            } else if (token == 'r') {
                User.register ();
                break;
            } else if (token == 'g') {
                User.guestLogin ();
                break;
            } else {
                sopln ("Invalid Choice, please try again!");
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28688175_29162244_1_21
28688175_29162244_23_48
Title: Can some help me figure out why my zeroes are not appending? 
----------------------------------------

public BigNum mult (BigNum other) {
    BigNum tmp = new BigNum ();
    BigNum acc = new BigNum ();
    String s = "";
    int count = 0;
    for (int i = 0;
    i < other.num.length (); i ++) {
        tmp = this.mult (Character.getNumericValue (other.num.charAt (i)));
        if (i > 0) {
            s = tmp.num;
            for (int j = i;
            j > 0; j --) {
                s = s + "0";
            }
        } else {
            s = tmp.num;
        }
        tmp = new BigNum (s);
        count ++;
        acc = acc.add (tmp);
    }
    return acc;
}
----------------------------------------

public BigNum mult (int n) {
    String result;
    int carry;
    if (n == 0) {
        result = "0";
    } else {
        carry = 0;
        result = "";
    }
    for (int i = this.num.length () - 1;
    i >= 0; i --) {
        int temp = n * Character.getNumericValue (this.num.charAt (i));
        carry = temp / 10;
        if (carry > 0) {
            int lastnum = (result.length () == 0) ? 0 : Character.getNumericValue (result.charAt (result.length () - 1));
            lastnum = lastnum + carry;
            result = (result.length () == 0) ? "" : result.substring (0, result.length () - 1);
            result = result + lastnum;
        }
        result = result + (temp % 10);
    }
    return new BigNum (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28690104_28690204_1_11
28690104_28690360_6_16
Title: SimpleDateFormat RegEx formats 
----------------------------------------

private static String getFormat (String time) {
    String firstRegEx = "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$";
    String secondRegEx = "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\s\\w{3}$";
    if (time.matches (firstRegEx)) {
        return firstRegEx;
    } else if (time.toLowerCase ().matches (secondRegEx)) {
        return secondRegEx;
    }

    return null;
}
----------------------------------------

private static DateFormat getFormat (String time) {
    DateFormat format1 = new SimpleDateFormat ("yyyy-MM-dd'T'HH:mm:ssX");
    DateFormat format2 = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss z");
    if (isFormat (format1, time)) {
        return format1;
    } else if (isFormat (format2, time)) {
        return format2;
    } else {
        return null;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28697222_28697294_1_12
28697222_28697341_1_11
Title: "Cannot Resolve Symbol ""OnClickListener""" 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    Button mButton = (Button) findViewById (R.id.More);
    final TextView mTextView = (TextView) findViewById (R.id.Antal);
    mButton.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            mTextView.setText ("Some Text");
        }}

    );
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    Button mButton = (Button) findViewById (R.id.More);
    mButton.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            final TextView mTextView = (TextView) findViewById (R.id.Antal);
            mTextView.setText ("Some Text");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28703273_28704959_11_135
28703273_28728437_16_63
Title: Sorting byte arrays in numeric order 
----------------------------------------

public int compare (byte [] o1, byte [] o2) {
    if (o1 == null) {
        if (o2 == null) return 0;

        return - 1;
    }
    if (o2 == null) return 1;

    String o1String = new String (o1, "UTF-8").trim ();
    String o2String = new String (o2, "UTF-8").trim ();
    final boolean o1Neg = o1String.charAt (0) == '-';
    final boolean o2Neg = o2String.charAt (0) == '-';
    if (o1Neg && ! o2Neg) return - 1;

    if (! o1Neg && o2Neg) return 1;

    String o1WithoutZeroPadding = leftZeroPadding.matcher (o1String).replaceAll ("");
    String o2WithoutZeroPadding = leftZeroPadding.matcher (o2String).replaceAll ("");
    if (o1WithoutZeroPadding.equals (o2WithoutZeroPadding)) return 0;

    int o1Dec = o1WithoutZeroPadding.indexOf ('.');
    int o2Dec = o2WithoutZeroPadding.indexOf ('.');
    final int o1LeftLength;
    final int o2LeftLength;
    final String o1Left;
    final String o2Left;
    final String o1Right;
    final String o2Right;
    if (o1Dec == - 1) {
        o1LeftLength = o1WithoutZeroPadding.length ();
        o1Left = o1WithoutZeroPadding;
        o1Right = "";
    } else {
        o1LeftLength = o1Dec;
        if (o1LeftLength == 0) o1Left = "";
        else o1Left = o1WithoutZeroPadding.substring (0, o1Dec);

        if (o1Dec + 1 == o1LeftLength) {
            o1Right = "";
        } else {
            o1Right = rightZeroPadding.matcher (o1WithoutZeroPadding.substring (o1Dec + 1)).replaceAll ("");
        }
    }
    if (o2Dec == - 1) {
        o2LeftLength = o2WithoutZeroPadding.length ();
        o2Left = o2WithoutZeroPadding;
        o2Right = "";
    } else {
        o2LeftLength = o2Dec;
        if (o2LeftLength == 0) o2Left = "";
        else o2Left = o2WithoutZeroPadding.substring (0, o2Dec);

        if (o2Dec + 1 == o2LeftLength) {
            o2Right = "";
        } else {
            o2Right = rightZeroPadding.matcher (o2WithoutZeroPadding.substring (o2Dec + 1)).replaceAll ("");
        }
    }
    if (o1LeftLength < o2LeftLength) {
        if (o1Neg) return 1;

        return - 1;
    }
    if (o1LeftLength > o2LeftLength) {
        if (o2Neg) return - 1;

        return - 1;
    }
    char o1Char;
    char o2Char;
    for (int pos = 0;
    pos < o1LeftLength; pos ++) {
        o1Char = o1Left.charAt (pos);
        o2Char = o2Left.charAt (pos);
        if (o1Char != o2Char) {
            return o1Char - o2Char;
        }
    }
    int rightLength = Math.min (o1Right.length (), o2Right.length ());
    for (int pos = 0;
    pos < rightLength; pos ++) {
        o1Char = o1Right.charAt (pos);
        o2Char = o2Right.charAt (pos);
        if (o1Char != o2Char) {
            int multiplier = 1;
            if (o1Neg) multiplier = - 1;

            return (o1Char - o2Char) * multiplier;
        }
    }
    int multiplier = 1;
    if (o1Neg) multiplier = - 1;

    return (o1Right.length () - o2Right.length ()) * multiplier;
}
----------------------------------------

public int compare (byte [] leftArray, byte [] rightArray) {
    Numeric left = new Numeric (leftArray);
    Numeric right = new Numeric (rightArray);
    if (notSameSign (left, right)) {
        if (left.isNegative ()) {
            return - 1;
        }
        return 1;
    }
    if (! left.isDecimal () && ! right.isDecimal ()) {
        return compareIntegers (left, right);
    }
    if (left.decimalOffset != right.decimalOffset) {
        if (left.isNegative ()) {
            return right.decimalOffset - left.decimalOffset;
        }
        return left.decimalOffset - right.decimalOffset;
    }
    byte [] leftWhole = Arrays.copyOf (left.bytes, left.decimalOffset);
    byte [] rightWhole = Arrays.copyOf (right.bytes, right.decimalOffset);
    int result;
    if (left.isPositive ()) {
        result = compareToSameLength (leftWhole, rightWhole);
    } else {
        result = compareToSameLength (rightWhole, leftWhole);
    }
    if (result != 0) {
        return result;
    }
    if (left.isPositive ()) {
        result = compareTo (left.decimalPortion (), right.decimalPortion ());
    } else {
        result = compareTo (right.decimalPortion (), left.decimalPortion ());
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28705368_28705439_1_15
28705368_28705467_4_15
Title: Program that creates a random string of characters and acts as a password generator 
----------------------------------------

public static void main (String [] arg) {
    Scanner in = new Scanner (System.in);
    Random gen = new Random ();
    System.out.println ("Enter password length:  ");
    int length = in.nextInt ();
    int slength = length + gen.nextInt (length - 1);
    StringBuilder s = new StringBuilder (slength);
    while (s.length () <= length) {
        s.append ((char) (33 + gen.nextInt (126)));
    }
    System.out.println (s.toString ());
}
----------------------------------------

public static void main (String [] arg) {
    Scanner in = new Scanner (System.in);
    Random gen = new Random ();
    System.out.println ("Enter password length:  ");
    int length = in.nextInt ();
    String s = "";
    while (s.length () <= length) {
        s += (char) (33 + gen.nextInt (126));
    }
    System.out.println (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28707184_28707456_3_19
28707184_28710294_13_29
Title: ASyncTask and returning an ArrayList 
----------------------------------------

protected List < String > doInBackground (String...params) {
    List < String > str = new ArrayList < String > ();
    try {
        Document doc = Jsoup.connect ("http://www.mywebsite.com/id/" + params).get ();
        Elements row1 = doc.select ("table");
        Elements row2 = doc.select ("td");
        Elements row3 = doc.select ("td");
        for (int i = 0;
        i < row1.size (); i ++) {
            str.add (row1.get (i).text () + "," + row2.get (i).text () + "," + row2.get (i).text ());
        }
        return str;
    } catch (Exception e) {
        return new ArrayList < String > ();
    }
}
----------------------------------------

protected List < String > doInBackground (String...params) {
    List < String > str = new ArrayList < String > ();
    try {
        Document doc = Jsoup.connect ("http://www.mywebsite.com/id/" + params).get ();
        Elements row1 = doc.select ("table");
        Elements row2 = doc.select ("td");
        Elements row3 = doc.select ("td");
        for (int i = 0;
        i < row1.size (); i ++) {
            str.add (row1.get (i).text () + "," + row2.get (i).text () + "," + row2.get (i).text ());
        }
        return str;
    } catch (Exception e) {
        return new ArrayList < String > ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28717343_28721089_14_24
28717343_28728843_4_71
Title: JavaFX: create a vertical menu ribbon 
----------------------------------------

public void start (Stage primaryStage) {
    MenuButton menuButton = new MenuButton ();
    menuButton.getItems ().addAll (Stream.of ("Info", "New", "Open", "Save", "Save As", "Print", "Share", "Export", "Close").map (MenuItem :: new).collect (Collectors.toList ()));
    BorderPane root = new BorderPane (null, menuButton, null, null, null);
    Scene scene = new Scene (root, 350, 75);
    scene.getStylesheets ().add ("word-like-menu-button.css");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    Button btn = new Button ();
    btn.setText ("File");
    final StackPane root = new StackPane ();
    AnchorPane editorRoot = new AnchorPane ();
    editorRoot.getChildren ().add (btn);
    root.getChildren ().add (editorRoot);
    Scene scene = new Scene (root, 300, 250);
    scene.getStylesheets ().add ("/jfxdemos/styles.css");
    primaryStage.setScene (scene);
    primaryStage.show ();
    HBox fileRoot = new HBox ();
    VBox menu = new VBox ();
    menu.setStyle ("-fx-background-color: blue;");
    menu.setFillWidth (true);
    Button backBtn = new Button ("Left Arrow");
    backBtn.setPrefWidth (100);
    backBtn.getStyleClass ().add ("custom-menu-button");
    backBtn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            FadeTransition hideFileRootTransition = new FadeTransition (Duration.millis (500), fileRoot);
            hideFileRootTransition.setFromValue (1.0);
            hideFileRootTransition.setToValue (0.0);
            FadeTransition showEditorRootTransition = new FadeTransition (Duration.millis (500), editorRoot);
            showEditorRootTransition.setFromValue (0.0);
            showEditorRootTransition.setToValue (1.0);
            showEditorRootTransition.play ();
            hideFileRootTransition.play ();
            root.getChildren ().remove (fileRoot);
        }}

    );
    Button infoBtn = new Button ("Info");
    infoBtn.setPrefWidth (100);
    infoBtn.getStyleClass ().add ("custom-menu-button");
    Button newBtn = new Button ("New");
    newBtn.setPrefWidth (100);
    newBtn.getStyleClass ().add ("custom-menu-button");
    Button openBtn = new Button ("Open");
    openBtn.setPrefWidth (100);
    openBtn.getStyleClass ().add ("custom-menu-button");
    menu.getChildren ().addAll (backBtn, infoBtn, newBtn, openBtn);
    VBox.setVgrow (infoBtn, Priority.ALWAYS);
    fileRoot.getChildren ().add (menu);
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            root.getChildren ().add (fileRoot);
            FadeTransition hideEditorRootTransition = new FadeTransition (Duration.millis (500), editorRoot);
            hideEditorRootTransition.setFromValue (1.0);
            hideEditorRootTransition.setToValue (0.0);
            FadeTransition showFileRootTransition = new FadeTransition (Duration.millis (500), fileRoot);
            showFileRootTransition.setFromValue (0.0);
            showFileRootTransition.setToValue (1.0);
            hideEditorRootTransition.play ();
            showFileRootTransition.play ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28722920_30376368_1_17
28722920_41214407_1_46
Title: Codingbat plusOut - StringBuffer Trouble 
----------------------------------------

public String plusOut (String str, String word) {
    StringBuilder strBuilder = new StringBuilder ();
    int i = 0;
    while (i < str.length ()) {
        if (str.substring (i).startsWith (word)) {
            strBuilder.append (word);
            i = i + word.length ();
        } else {
            strBuilder.append ("+");
            i ++;
        }
    }
    return strBuilder.toString ();
}
----------------------------------------

public String plusOut (String str, String word) {
    String out = "";
    int endAmt = 0;
    for (int i = 0;
    i < str.length () - word.length (); i ++) {
        if (str.substring (i, i + word.length ()).equals (word)) {
            out = out + str.substring (i, i + word.length ());
            i += word.length () - 1;
            endAmt = i + 1;
        } else {
            out = out.substring (0, i) + '+';
        }
    }
    if (str.substring (str.length () - word.length ()).equals (word)) {
        out = out + word;
    } else {
        out = out.substring (0, endAmt);
        for (int i = 0;
        i < str.length () - endAmt; i ++) {
            out = out + "+";
        }
    }
    return out;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28722920_30376368_1_17
28722920_42762109_1_15
Title: Codingbat plusOut - StringBuffer Trouble 
----------------------------------------

public String plusOut (String str, String word) {
    StringBuilder strBuilder = new StringBuilder ();
    int i = 0;
    while (i < str.length ()) {
        if (str.substring (i).startsWith (word)) {
            strBuilder.append (word);
            i = i + word.length ();
        } else {
            strBuilder.append ("+");
            i ++;
        }
    }
    return strBuilder.toString ();
}
----------------------------------------

public static String plusOut (String str, String word) {
    StringBuffer b = new StringBuffer ();
    int indexOfWord = str.indexOf (word, 0);
    for (int i = 0;
    i < str.length (); i ++) {
        if (i == indexOfWord) {
            b.append (word);
            i = i + word.length () - 1;
            indexOfWord = str.indexOf (word, indexOfWord + word.length ());
        } else {
            b.append ("+");
        }
    }
    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28722920_41214407_1_46
28722920_42762109_1_15
Title: Codingbat plusOut - StringBuffer Trouble 
----------------------------------------

public String plusOut (String str, String word) {
    String out = "";
    int endAmt = 0;
    for (int i = 0;
    i < str.length () - word.length (); i ++) {
        if (str.substring (i, i + word.length ()).equals (word)) {
            out = out + str.substring (i, i + word.length ());
            i += word.length () - 1;
            endAmt = i + 1;
        } else {
            out = out.substring (0, i) + '+';
        }
    }
    if (str.substring (str.length () - word.length ()).equals (word)) {
        out = out + word;
    } else {
        out = out.substring (0, endAmt);
        for (int i = 0;
        i < str.length () - endAmt; i ++) {
            out = out + "+";
        }
    }
    return out;
}
----------------------------------------

public static String plusOut (String str, String word) {
    StringBuffer b = new StringBuffer ();
    int indexOfWord = str.indexOf (word, 0);
    for (int i = 0;
    i < str.length (); i ++) {
        if (i == indexOfWord) {
            b.append (word);
            i = i + word.length () - 1;
            indexOfWord = str.indexOf (word, indexOfWord + word.length ());
        } else {
            b.append ("+");
        }
    }
    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28723580_28723677_1_23
28723580_28724006_36_46
Title: Java - Sorting out an array 
----------------------------------------

public static void main (String [] args) {
    Integer [] t = {3, - 1, - 1, - 1, 4, 5, 6, - 1, - 1};
    List < Integer > list = new ArrayList < > ();
    Collections.addAll (list, t);
    int numberOfMinusOnes = 0;
    for (Integer number : list) {
        if (number == - 1) {
            numberOfMinusOnes ++;
        }
    }
    list.removeAll (Arrays.asList (- 1));
    for (int i = 0;
    i < numberOfMinusOnes; i ++) {
        list.add (- 1);
    }
    list.toArray (t);
    System.out.println (Arrays.toString (t));
}
----------------------------------------

public static void main (String [] args) {
    int a [] = new int [10];
    Test test = new Test ();
    test.fillRandomNumber (a);
    System.out.println ("Random Number bofore sort");
    test.printNumber (a);
    test.sortRandomNumber (a);
    System.out.println ("\n Random Number after sort");
    test.printNumber (a);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28723854_28727983_5_43
28723854_28728062_114_133
Title: Array count logic error 
----------------------------------------

public static void main (String args []) {
    int c, first, last, middle, n, search, array [];
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter number of elements");
    n = in.nextInt ();
    array = new int [n];
    System.out.println ("Enter " + n + " integers");
    for (c = 0; c < n; c ++) array [c] = in.nextInt ();

    System.out.println ("Enter value to find");
    search = in.nextInt ();
    first = 0;
    last = n - 1;
    middle = (first + last) / 2;
    while (first <= last) {
        if (array [middle] < search) first = middle + 1;
        else if (array [middle] == search) {
            System.out.println (search + " found at location " + (middle + 1) + ".");
            break;
        } else last = middle - 1;

        middle = (first + last) / 2;
    }
    if (first > last) System.out.println (search + " is not present in the list.\n");

}
----------------------------------------

public static void main (String [] args) {
    Scanner kbd = new Scanner (System.in);
    System.out.println ("ENTER A SINGLE INTEGER: ");
    int n = kbd.nextInt ();
    char [] [] mazeValue = new char [n] [n];
    System.out.println ("ENTER A PATH: ");
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            mazeValue [i] [j] = kbd.next ().charAt (0);
        }
    }
    printMaze (mazeValue, n);
    openfactor (mazeValue, n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28734679_28734779_7_17
28734679_28734869_1_13
Title: How to execute a statement within a recursive method only once in Java? 
----------------------------------------

private static boolean recursiveMethod (int x, boolean firstTime) {
    if (x <= 5) {
        return true;
    }
    if (firstTime) {
        System.out.println ("It's the first time!");
    }
    return recursiveMethod (x + 1, false);
}
----------------------------------------

public static boolean recursiveMethod (int x) {
    if (x >= 5) {
        return true;
    }
    boolean isPrintedOnce = false;
    if (isPrintedOnce = false) {
        if (x == 0) {
            System.out.println ("Printed once!");
        }
        isPrintedOnce = true;
    }
    return recursiveMethod (x + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28734679_28734779_7_17
28734679_28734916_1_11
Title: How to execute a statement within a recursive method only once in Java? 
----------------------------------------

private static boolean recursiveMethod (int x, boolean firstTime) {
    if (x <= 5) {
        return true;
    }
    if (firstTime) {
        System.out.println ("It's the first time!");
    }
    return recursiveMethod (x + 1, false);
}
----------------------------------------

public static boolean recursiveMethod (int x) {
    if (x >= 5) {
        return true;
    }
    Exception e = new Exception ();
    e.fillInStackTrace ();
    if (e.getStackTrace ().length == 2) {
        System.out.println ("Printed once!");
    }
    return recursiveMethod (x + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28734679_28734869_1_13
28734679_28734916_1_11
Title: How to execute a statement within a recursive method only once in Java? 
----------------------------------------

public static boolean recursiveMethod (int x) {
    if (x >= 5) {
        return true;
    }
    boolean isPrintedOnce = false;
    if (isPrintedOnce = false) {
        if (x == 0) {
            System.out.println ("Printed once!");
        }
        isPrintedOnce = true;
    }
    return recursiveMethod (x + 1);
}
----------------------------------------

public static boolean recursiveMethod (int x) {
    if (x >= 5) {
        return true;
    }
    Exception e = new Exception ();
    e.fillInStackTrace ();
    if (e.getStackTrace ().length == 2) {
        System.out.println ("Printed once!");
    }
    return recursiveMethod (x + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28739550_28740334_1_22
28739550_47418192_1_22
Title: jhipster authentication login with email 
----------------------------------------

@Override
@Transactional
public UserDetails loadUserByUsername (final String login) {
    log.debug ("Authenticating {}", login);
    String lowercaseLogin = login.toLowerCase ();
    Optional < User > userFromDatabase = userRepository.findOneByEmail (login);
    return userFromDatabase.map (user -> {
        if (! user.getVerified ()) {
            throw new UserNotActivatedException ("User " + lowercaseLogin + " was not activated");
        }
        List < GrantedAuthority > grantedAuthorities = user.getAuthorities ().stream ().map (authority -> new SimpleGrantedAuthority (authority.getName ())).collect (Collectors.toList ());
        return new org.springframework.security.core.userdetails.User (user.getLogin (), user.getPassword (), grantedAuthorities);
    }).orElseThrow (() -> new UsernameNotFoundException ("User " + lowercaseLogin + " was not found in the database"));
}
----------------------------------------

@Override
@Transactional
public UserDetails loadUserByUsername (final String login) {
    log.debug ("Authenticating {}", login);
    String lowercaseLogin = login.toLowerCase (Locale.ENGLISH);
    User user = userRepository.findOneByLogin (lowercaseLogin).map (Optional :: of).orElse (userRepository.findOneByEmail (lowercaseLogin)).orElseThrow (() -> new UsernameNotFoundException ("User " + lowercaseLogin + " was not found in the " + "database"));
    if (! user.getActivated ()) {
        throw new UserNotActivatedException ("User " + lowercaseLogin + " was not activated");
    }
    List < GrantedAuthority > grantedAuthorities = getGrantedAuthorities (user);
    return new org.springframework.security.core.userdetails.User (user.getLogin (), user.getPassword (), grantedAuthorities);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28746158_28746173_1_11
28746158_28746183_1_15
Title: "Error in Java: ""missing Return statement""" 
----------------------------------------

static int handValue (int card1, int card2) {
    if ((card1 + card2) >= 10) return 0;

    if ((card1 + card2) <= 10) return card1 + card2;

    if (card1 >= 10 && card2 <= 9 && card2 >= 1) return card2;

    if (card2 >= 10 && card1 <= 9 && card1 >= 1) return card1;

    return - 1;
}
----------------------------------------

static int handValue (int card1, int card2) throws Exception {
    if ((card1 + card2) >= 10) return 0;

    if ((card1 + card2) <= 10) return card1 + card2;

    if (card1 >= 10 && card2 <= 9 && card2 >= 1) return card2;

    if (card2 >= 10 && card1 <= 9 && card1 >= 1) return card1;

    throw new Exception ("no cards!!!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28746158_28746173_1_11
28746158_28746810_1_11
Title: "Error in Java: ""missing Return statement""" 
----------------------------------------

static int handValue (int card1, int card2) {
    if ((card1 + card2) >= 10) return 0;

    if ((card1 + card2) <= 10) return card1 + card2;

    if (card1 >= 10 && card2 <= 9 && card2 >= 1) return card2;

    if (card2 >= 10 && card1 <= 9 && card1 >= 1) return card1;

    return - 1;
}
----------------------------------------

static int handValue (int card1, int card2) {
    if (card1 >= 10 && card2 <= 9 && card2 >= 1) {
        return card2;
    } else if (card2 >= 10 && card1 <= 9 && card1 >= 1) {
        return card1;
    } else if ((card1 + card2) <= 10) {
        return card1 + card2;
    } else {
        return 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28746158_28746183_1_15
28746158_28746810_1_11
Title: "Error in Java: ""missing Return statement""" 
----------------------------------------

static int handValue (int card1, int card2) throws Exception {
    if ((card1 + card2) >= 10) return 0;

    if ((card1 + card2) <= 10) return card1 + card2;

    if (card1 >= 10 && card2 <= 9 && card2 >= 1) return card2;

    if (card2 >= 10 && card1 <= 9 && card1 >= 1) return card1;

    throw new Exception ("no cards!!!");
}
----------------------------------------

static int handValue (int card1, int card2) {
    if (card1 >= 10 && card2 <= 9 && card2 >= 1) {
        return card2;
    } else if (card2 >= 10 && card1 <= 9 && card1 >= 1) {
        return card1;
    } else if ((card1 + card2) <= 10) {
        return card1 + card2;
    } else {
        return 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28746512_28746898_15_39
28746512_28748246_14_99
Title: Alphanumeric sorting of ArrayList with HashMap 
----------------------------------------

public int compare (String o1, String o2) {
    if (o1.isEmpty ()) return - 1;

    if (o2.isEmpty ()) return 1;

    String o1number = extractNumberPrefix (o1);
    String o2number = extractNumberPrefix (o2);
    if (o1number.isEmpty ()) if (o2number.isEmpty ()) return o1.compareTo (o2);
    else return 1;

    if (o2number.isEmpty ()) return - 1;

    if (o1number.equals (o2number)) return o1.compareTo (o2);

    return Integer.parseInt (o1number) - Integer.parseInt (o2number);
}
----------------------------------------

public int compare (Object firstObjToCompare, Object secondObjToCompare) {
    String firstString = ((HashMap < String, String >) firstObjToCompare).get ("KEY_ID");
    String secondString = ((HashMap < String, String >) secondObjToCompare).get ("KEY_ID");
    if (secondString == null || firstString == null) {
        return 0;
    }
    int lengthFirstStr = firstString.length ();
    int lengthSecondStr = secondString.length ();
    int index1 = 0;
    int index2 = 0;
    while (index1 < lengthFirstStr && index2 < lengthSecondStr) {
        char ch1 = firstString.charAt (index1);
        char ch2 = secondString.charAt (index2);
        char [] space1 = new char [lengthFirstStr];
        char [] space2 = new char [lengthSecondStr];
        int loc1 = 0;
        int loc2 = 0;
        do {
            space1 [loc1 ++] = ch1;
            index1 ++;
            if (index1 < lengthFirstStr) {
                ch1 = firstString.charAt (index1);
            } else {
                break;
            }
        } while (Character.isDigit (ch1) == Character.isDigit (space1 [0]));
        do {
            space2 [loc2 ++] = ch2;
            index2 ++;
            if (index2 < lengthSecondStr) {
                ch2 = secondString.charAt (index2);
            } else {
                break;
            }
        } while (Character.isDigit (ch2) == Character.isDigit (space2 [0]));
        String str1 = new String (space1);
        String str2 = new String (space2);
        int result;
        if (Character.isDigit (space1 [0]) && Character.isDigit (space2 [0])) {
            Integer firstNumberToCompare = new Integer (Integer.parseInt (str1.trim ()));
            Integer secondNumberToCompare = new Integer (Integer.parseInt (str2.trim ()));
            result = firstNumberToCompare.compareTo (secondNumberToCompare);
        } else {
            result = str1.compareTo (str2);
        }
        if (result != 0) {
            return result;
        }
    }
    return lengthFirstStr - lengthSecondStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28756080_28756455_20_35
28756080_28756455_62_99
Title: Java Frames disposal creates extra empty frame 
----------------------------------------

private void makeFrame () {
    frame = new JFrame ("Login");
    frame.setSize (300, 200);
    frame.add (panel);
    panel.add (login);
    login.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            JOptionPane.showMessageDialog (null, "Welcome");
            frame.dispose ();
            MainScreen s = new MainScreen ();
        }}

    );
    frame.setVisible (true);
}
----------------------------------------

private void makeFrame () {
    frame = new JFrame ("Main Screen");
    frame.setSize (650, 550);
    frame.setResizable (false);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (panel);
    panel.setLayout (new BorderLayout ());
    panel.add (top, BorderLayout.PAGE_START);
    top.add (welcome);
    top.add (userLbl);
    panel.add (left, BorderLayout.LINE_START);
    left.add (news);
    panel.add (center, BorderLayout.CENTER);
    left.setPreferredSize (new Dimension (200, 150));
    center.setLayout (new GridLayout (5, 2));
    center.add (PR);
    center.add (personalCreate);
    personalCreate.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            frame.dispose ();
        }}

    );
    center.add (ER);
    center.add (employmentCreate);
    employmentCreate.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            frame.dispose ();
        }}

    );
    center.add (PerR);
    center.add (review);
    center.add (AR);
    center.add (approve);
    center.add (empty);
    center.add (logout);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28758232_28758349_1_20
28758232_46387188_2_28
Title: Nested loops: Print seats in java 
----------------------------------------

public static void main (final String [] args) {
    int numRows = 2;
    int numCols = 3;
    int rows = 0;
    while (rows < numRows) {
        rows ++;
        int cols = 1;
        char col = 'A';
        while (cols <= numCols) {
            System.out.print ("" + rows + col + " ");
            col ++;
            cols ++;
        }
    }
    System.out.println (" ");
}
----------------------------------------

public static void main (String [] args) {
    int numRows = 2;
    int numCols = 3;
    int i = 0;
    int j = 0;
    char rows;
    char columns;
    rows = '1';
    for (i = 0; i < numRows; ++ i) {
        columns = 'A';
        for (j = 0; j < numCols; ++ j) {
            System.out.print ("" + rows + columns + " ");
            columns ++;
        }
        rows ++;
    }
    System.out.println ("");
    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28758232_28758349_1_20
28758232_47406148_2_15
Title: Nested loops: Print seats in java 
----------------------------------------

public static void main (final String [] args) {
    int numRows = 2;
    int numCols = 3;
    int rows = 0;
    while (rows < numRows) {
        rows ++;
        int cols = 1;
        char col = 'A';
        while (cols <= numCols) {
            System.out.print ("" + rows + col + " ");
            col ++;
            cols ++;
        }
    }
    System.out.println (" ");
}
----------------------------------------

public static void main (String [] args) {
    int numRows = 2;
    int numCols = 5;
    for (int i = 1;
    i <= numRows; i ++) {
        char abc = 'A';
        for (int j = 1;
        j <= numCols; ++ j) {
            System.out.print ("" + i + abc + " ");
            ++ abc;
        }
    }
    System.out.println ("");
    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28758232_46387188_2_28
28758232_47406148_2_15
Title: Nested loops: Print seats in java 
----------------------------------------

public static void main (String [] args) {
    int numRows = 2;
    int numCols = 3;
    int i = 0;
    int j = 0;
    char rows;
    char columns;
    rows = '1';
    for (i = 0; i < numRows; ++ i) {
        columns = 'A';
        for (j = 0; j < numCols; ++ j) {
            System.out.print ("" + rows + columns + " ");
            columns ++;
        }
        rows ++;
    }
    System.out.println ("");
    return;
}
----------------------------------------

public static void main (String [] args) {
    int numRows = 2;
    int numCols = 5;
    for (int i = 1;
    i <= numRows; i ++) {
        char abc = 'A';
        for (int j = 1;
        j <= numCols; ++ j) {
            System.out.print ("" + i + abc + " ");
            ++ abc;
        }
    }
    System.out.println ("");
    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28771449_28771575_1_11
28771449_28772093_1_10
Title: How to create a method that governs all subclasses in Java 
----------------------------------------

public static Room mostExpensive (Collection < Room > allMyRooms) {
    int max = 0;
    Room mostExp = null;
    for (Room room : allMyRooms) {
        if (room.cost () > max) {
            max = room.cost ();
            mostExp = room;
        }
    }
    return mostExp;
}
----------------------------------------

public Room mostExpensive (ArrayList < Room > allRooms) {
    Room mostExpensiveRoom;
    int max = 0;
    for (int x = 0;
    x < allRooms.size (); x ++) if (allRooms.get (x).getCost () > max) {
        mostExpensiveRoom = allRooms.get (x);
        max = allRooms.get (x).getCost ();
    }

    return mostExpensiveRoom;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28788117_28790986_10_46
28788117_38751587_21_67
Title: Stacking charts in JavaFX 
----------------------------------------

public void start (Stage stage) {
    final CategoryAxis xAxis = new CategoryAxis ();
    final NumberAxis yAxis = new NumberAxis ();
    final BarChart < String, Number > barChart = new BarChart < String, Number > (xAxis, yAxis);
    barChart.setLegendVisible (false);
    barChart.setAnimated (false);
    xAxis.setLabel ("Country");
    yAxis.setLabel ("Value");
    LineChart < String, Number > lineChart = new LineChart < String, Number > (xAxis, yAxis);
    lineChart.setLegendVisible (false);
    lineChart.setAnimated (false);
    lineChart.setCreateSymbols (true);
    lineChart.setAlternativeRowFillVisible (false);
    lineChart.setAlternativeColumnFillVisible (false);
    lineChart.setHorizontalGridLinesVisible (false);
    lineChart.setVerticalGridLinesVisible (false);
    lineChart.getXAxis ().setVisible (false);
    lineChart.getYAxis ().setVisible (false);
    lineChart.getStylesheets ().addAll (getClass ().getResource ("chart.css").toExternalForm ());
    barChart.getData ().add (createChartSeries ());
    lineChart.getData ().add (createChartSeries ());
    StackPane root = new StackPane ();
    root.getChildren ().addAll (barChart, lineChart);
    Scene scene = new Scene (root, 800, 600);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    final CategoryAxis xAxis = new CategoryAxis ();
    xAxis.setLabel ("Country");
    final NumberAxis yAxis1 = new NumberAxis ();
    yAxis1.setLabel ("Value");
    final BarChart < String, Number > barChart = new BarChart < > (xAxis, yAxis1);
    barChart.setLegendVisible (false);
    barChart.setAnimated (false);
    XYChart.Series < String, Number > series1 = new XYChart.Series < > ();
    series1.getData ().add (new XYChart.Data < > (AUSTRIA, 25601.34));
    series1.getData ().add (new XYChart.Data < > (BRAZIL, 20148.82));
    series1.getData ().add (new XYChart.Data < > (FRANCE, 10000));
    series1.getData ().add (new XYChart.Data < > (ITALY, 35407.15));
    series1.getData ().add (new XYChart.Data < > (USA, 12000));
    barChart.getData ().add (series1);
    final LineChart < String, Number > lineChart = new LineChart < > (xAxis, yAxis1);
    lineChart.setLegendVisible (false);
    lineChart.setAnimated (false);
    lineChart.setCreateSymbols (true);
    lineChart.setAlternativeRowFillVisible (false);
    lineChart.setAlternativeColumnFillVisible (false);
    lineChart.setHorizontalGridLinesVisible (false);
    lineChart.setVerticalGridLinesVisible (false);
    lineChart.getXAxis ().setVisible (false);
    lineChart.getYAxis ().setVisible (false);
    lineChart.getStylesheets ().addAll (getClass ().getResource ("Exemple158.css").toExternalForm ());
    XYChart.Series < String, Number > series2 = new XYChart.Series < > ();
    int delta = 10000;
    series2.getData ().add (new XYChart.Data < > (AUSTRIA, 25601.34 + delta));
    series2.getData ().add (new XYChart.Data < > (BRAZIL, 20148.82 + delta));
    series2.getData ().add (new XYChart.Data < > (FRANCE, 10000 + delta));
    series2.getData ().add (new XYChart.Data < > (ITALY, 35407.15 + delta));
    series2.getData ().add (new XYChart.Data < > (USA, 12000 + delta));
    lineChart.getData ().add (series2);
    StackPane root = new StackPane ();
    root.getChildren ().addAll (barChart, lineChart);
    Scene scene = new Scene (root, 800, 600);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28788616_28797363_1_37
28788616_28797981_7_52
Title: Parse the osu! binary database in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        DataInputStream in = new DataInputStream (new BufferedInputStream (new FileInputStream ("src/collection/collection.db")));
        byte b1 = in.readByte ();
        byte b2 = in.readByte ();
        byte b3 = in.readByte ();
        byte b4 = in.readByte ();
        int s = 0;
        s = s | (b4 & 0xff);
        s = (s << 8);
        s = s | (b3 & 0xff);
        s = (s << 8);
        s = s | (b2 & 0xff);
        s = (s << 8);
        s = s | (b1 & 0xff);
        System.out.println ("Version des collections : " + s);
        b1 = in.readByte ();
        b2 = in.readByte ();
        b3 = in.readByte ();
        b4 = in.readByte ();
        s = 0;
        s = s | (b4 & 0xff);
        s = (s << 8);
        s = s | (b3 & 0xff);
        s = (s << 8);
        s = s | (b2 & 0xff);
        s = (s << 8);
        s = s | (b1 & 0xff);
        System.out.println ("Nombre de collections : " + s);
    } catch (Exception e) {
        System.out.print ("mdr fail");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String kind = args [0];
    OsuReader reader = new OsuReader (args [1]);
    if (kind.equals ("collection")) {
        CollectionDB db = reader.readCollectionDB ();
        System.out.printf ("Version: %d\n", db.version);
        for (CollectionItem item : db.collections) {
            System.out.println ();
            System.out.printf ("Name: %s\n", item.name);
            for (String hash : item.md5Hashes) {
                System.out.printf ("  Hash: %s\n", hash);
            }
        }
    } else if (kind.equals ("scores")) {
        ScoresDB db = reader.readScoresDB ();
        System.out.printf ("Version: %d", db.version);
        for (Beatmap beatmap : db.beatmaps) {
            System.out.println ("---");
            System.out.printf ("Beatmap hash: %s\n", beatmaps.hash);
            for (Score score : beatmaps.scores) {
                System.out.println ("  ---");
                System.out.printf ("  Mode: %s (%d)\n", score.mode.name (), score.mode.byteValue);
                System.out.printf ("  Version: %d\n", score.version);
                System.out.printf ("  Beatmap MD5: %s\n", score.beatmapMd5Hash);
                System.out.printf ("  Player name: %s\n", score.playerName);
                System.out.printf ("  Replay MD5: %s\n", score.replayMd5Hash);
                System.out.printf ("  Scores: %d / %d / %d / %d / %d / %d\n", score.numberOf300s, score.numberOf100s, score.numberOf50s, score.numberOfGekis, score.numberOfKatus, score.numberOfMisses);
                System.out.printf ("  Replay score: %d\n", score.replayScore);
                System.out.printf ("  Max combo: %d\n", score.maxCombo);
                System.out.printf ("  Perfect combo: %s\n", score.perfectCombo ? "Yes" : "No");
                System.out.printf ("  Mods used: %s\n", score.modsUsed);
                System.out.printf ("  Timestamp: %s\n", score.timestamp);
            }
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28791519_28791535_13_23
28791519_28792319_58_73
Title: Why won't it gives me the output that I want? 
----------------------------------------

public String decrypt (String sntnc) {
    x1 = sntnc.replace ("ag',r", "v");
    x1 = x1.replace ("ag',r", "V");
    x1 = x1.replace ("ssad", "M");
    x1 = x1.replace ("ssad", "m");
    x1 = x1.replace ("jeb..w", "g");
    x1 = x1.replace ("jeb..w", "G");
    x1 = x1.replace ("dug>?/", "B");
    x1 = x1.replace ("dug>?/", "b");
    return x1;
}
----------------------------------------

public String decrypt (String sntnc) {
    x1 = sntnc;
    x1 = x1.replaceAll ("dug\\>\\?/", "4");
    x1 = x1.replaceAll ("jeb\\.\\.w", "3");
    x1 = x1.replaceAll ("ssad", "2");
    x1 = x1.replaceAll ("ag',r", "1");
    x1 = x1.replaceAll ("4", "B");
    x1 = x1.replaceAll ("3", "G");
    x1 = x1.replaceAll ("2", "M");
    x1 = x1.replaceAll ("1", "V");
    return x1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28791519_28791535_1_11
28791519_28792319_39_56
Title: Why won't it gives me the output that I want? 
----------------------------------------

public String encrypt (String sntnc) {
    x1 = sntnc.replace ("v", "ag',r");
    x1 = x1.replace ("V", "ag',r");
    x1 = x1.replace ("M", "ssad");
    x1 = x1.replace ("m", "ssad");
    x1 = x1.replace ("g", "jeb..w");
    x1 = x1.replace ("G", "jeb..w");
    x1 = x1.replace ("B", "dug>?/");
    x1 = x1.replace ("b", "dug>?/");
    return x1;
}
----------------------------------------

public String encrypt (String sntnc) {
    x1 = sntnc;
    x1 = x1.replaceAll ("[vV]", "1");
    x1 = x1.replaceAll ("[mM]", "2");
    x1 = x1.replaceAll ("[gG]", "3");
    x1 = x1.replaceAll ("[bB]", "4");
    x1 = x1.replaceAll ("1", "ag',r");
    x1 = x1.replaceAll ("2", "ssad");
    x1 = x1.replaceAll ("3", "jeb..w");
    x1 = x1.replaceAll ("4", "dug>?/");
    return x1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28809187_28809280_1_12
28809187_28809533_4_15
Title: How can I read a number in between 2 numbers? 
----------------------------------------

public static void main (String [] argh) {
    int myChar;
    Scanner in = new Scanner (System.in);
    do {
        System.out.print ("choose a player: ");
        myChar = in.nextInt ();
    } while (myChar <= 0 || myChar >= 4);
    System.out.println ("--------");
    System.out.println ("you chose " + myChar);
}
----------------------------------------

public static void main (String [] argh) {
    int myChar;
    Scanner in = new Scanner (System.in);
    do {
        System.out.print ("choose a player: ");
        myChar = in.nextInt ();
    } while (myChar < 1 || myChar > 3);
    System.out.println ("--------");
    System.out.println ("you chose " + myChar);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28809341_28810351_1_14
28809341_28964893_39_52
Title: Java drawImage method 
----------------------------------------

public void draw (Graphics2D g2) {
    try {
        for (int i = 0;
        i < 3; i ++) {
            for (int j = 0;
            j < 3; j ++) {
                System.out.println (i * 3 + j);
                images.get (i * 3 + j).draw (g2, i, j);
            }
        }
    } catch (Exception my) {
    }
}
----------------------------------------

public void draw (Graphics2D g2) {
    int j = 0, k = 0, pocet = 0;
    for (int i = 0;
    i < 9; i ++) {
        images.get (i).draw (g2, j * (IMAGE_X + PAD), k * (IMAGE_Y + PAD));
        pocet ++;
        if ((pocet % 3) == 0) {
            j = 0;
            k ++;
        } else {
            j = j + 1;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28809341_28812036_50_80
28809341_28964893_72_111
Title: Java drawImage method 
----------------------------------------

public void mouseClicked (MouseEvent me) {
    JLabel label = (JLabel) me.getSource ();
    if (counter == 0) {
        previousIndex = findLabelIndex (label);
        System.out.println ("Previous Index: " + previousIndex);
        counter = 1;
    } else if (counter == 1) {
        currentIndex = findLabelIndex (label);
        System.out.println ("Current Index: " + currentIndex);
        ImageIcon tempIcon = (ImageIcon) splitImageLabel [previousIndex].getIcon ();
        splitImageLabel [previousIndex].setIcon (splitImageLabel [currentIndex].getIcon ());
        splitImageLabel [currentIndex].setIcon (tempIcon);
        String labelName = splitImageLabel [previousIndex].getName ();
        splitImageLabel [previousIndex].setName (splitImageLabel [currentIndex].getName ());
        splitImageLabel [currentIndex].setName (labelName);
        prepareModel ();
        counter = 0;
    }

    if (hasWon ()) {
        System.out.println ("CONGRATULATIONS you won :-)");
    }
}
----------------------------------------

public void mouseClicked (MouseEvent e) {
    int picturepiece_id;
    if (counter == 0) {
        previouspicture = getPicturePiece (e.getX (), e.getY ());
        counter = 1;
    } else if (counter == 1) {
        counter = 0;
        currentpicture = getPicturePiece (e.getX (), e.getY ());
        if ((previouspicture != currentpicture) && (previouspicture != - 1) && (currentpicture != - 1)) {
            swap (previouspicture, currentpicture);
            repaint ();
            int j = 0;
            int i = 0;
            i = 0;
            while ((j == i) && (i < images.size ()) && (j < images.size ())) {
                i ++;
                j = images.get (i).getId ();
                if ((j == 8) && (i == 8)) {
                    won = true;
                    removeMouseListener (this);
                    repaint ();
                    break;
                }
            }
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28812572_28812830_1_13
28812572_28812840_1_14
Title: Copying double ArrayList containing objects in Java (ArrayList<ArrayList<Object>>>) 
----------------------------------------

public ArrayList < ArrayList < Cell > > copyBoard (ArrayList < ArrayList < Cell > > board) {
    ArrayList < ArrayList < Cell > > copiedBoard = new ArrayList < ArrayList < Cell > > ();
    for (ArrayList < Cell > array : board) {
        ArrayList < Cell > copiedArray = new ArrayList < Cell > ();
        for (Cell cell : array) {
            Cell copiedCell = new Cell (cell);
            copiedArray.add (copiedCell);
        }
        copiedBoard.add (coppiedArray);
    }
    return copiedBoard;
}
----------------------------------------

public ArrayList < ArrayList < Cell > > copyBoard (ArrayList < ArrayList < Cell > > board) {
    ArrayList < ArrayList < Cell > > copiedBoard = new ArrayList < ArrayList < Cell > > ();
    for (ArrayList < Cell > array : board) {
        ArrayList < Cell > copiedArray = new ArrayList < Cell > ();
        for (Cell cell : array) {
            Cell copiedCell = new Cell (cell);
            copiedArray.add (copiedCell);
        }
        copiedBoard.add (copiedArray);
    }
    return copiedBoard;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28812572_28812830_1_13
28812572_28812997_1_14
Title: Copying double ArrayList containing objects in Java (ArrayList<ArrayList<Object>>>) 
----------------------------------------

public ArrayList < ArrayList < Cell > > copyBoard (ArrayList < ArrayList < Cell > > board) {
    ArrayList < ArrayList < Cell > > copiedBoard = new ArrayList < ArrayList < Cell > > ();
    for (ArrayList < Cell > array : board) {
        ArrayList < Cell > copiedArray = new ArrayList < Cell > ();
        for (Cell cell : array) {
            Cell copiedCell = new Cell (cell);
            copiedArray.add (copiedCell);
        }
        copiedBoard.add (coppiedArray);
    }
    return copiedBoard;
}
----------------------------------------

public ArrayList < ArrayList < Cell > > copyBoard (ArrayList < ArrayList < Cell > > board) {
    ArrayList < ArrayList < Cell > > copiedBoard = new ArrayList < ArrayList < Cell > > ();
    for (ArrayList < Cell > array : board) {
        ArrayList < Cell > copiedArray = new ArrayList < Cell > ();
        for (Cell cell : array) {
            Cell copiedCell = new Cell (cell);
            copiedArray.add (copiedCell);
        }
        copiedBoard.add (copiedArray);
    }
    return copiedBoard;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28816691_28835815_27_37
28816691_29165280_7_22
Title: How can I create an Observer over a dynamic list in RxJava? 
----------------------------------------

public static void main (String [] args) throws Exception {
    ObservableList < Integer > olist = new ObservableList < > ();
    olist.getObservable ().subscribe (System.out :: println);
    olist.add (1);
    Thread.sleep (1000);
    olist.add (2);
    Thread.sleep (1000);
    olist.add (3);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > initialNumbers = new ArrayList < Integer > ();
    initialNumbers.add (1);
    initialNumbers.add (2);
    Observable < Integer > observableInitial = Observable.from (initialNumbers);
    ReplaySubject < Integer > subject = ReplaySubject.create ();
    Observable < Integer > source = Observable.merge (observableInitial, subject);
    source.subscribe (System.out :: println);
    for (int i = 0;
    i < 100; ++ i) {
        subject.onNext (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28819604_28819748_1_12
28819604_28819769_7_15
Title: Return inside parentheses value in a string as integer in Java 
----------------------------------------

private int convertSize (String pic) {
    Pattern p = Pattern.compile ("\\((\\d+)\\)");
    Matcher m = p.matcher (pic);
    if (m.find ()) {
        if (pic.startsWith ("9")) {
            return Integer.valueOf (m.group (1) + 1);
        } else if (pic.startsWith ("X")) {
            return Integer.valueOf (m.group (1));
        }

    }
    return 0;
}
----------------------------------------

private static int convertSize (String pic) {
    try {
        String myNumberInString = pic.substring (pic.indexOf ("(") + 1, pic.indexOf (")"));
        int myNumberInInteger = Integer.valueOf (myNumberInString);
        return myNumberInInteger;
    } catch (Exception e) {
        return 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28819604_28819748_1_12
28819604_28820382_29_46
Title: Return inside parentheses value in a string as integer in Java 
----------------------------------------

private int convertSize (String pic) {
    Pattern p = Pattern.compile ("\\((\\d+)\\)");
    Matcher m = p.matcher (pic);
    if (m.find ()) {
        if (pic.startsWith ("9")) {
            return Integer.valueOf (m.group (1) + 1);
        } else if (pic.startsWith ("X")) {
            return Integer.valueOf (m.group (1));
        }

    }
    return 0;
}
----------------------------------------

private int convertSize (String pic) {
    if (pic == null) {
        return 0;
    }
    Matcher xPatternMatcher = xPattern.matcher (pic);
    Matcher ninePatternMatcher = ninePattern.matcher (pic);
    if ("X".equals (pic)) {
        return 1;
    } else if (xPatternMatcher.matches ()) {
        return Integer.parseInt (xPatternMatcher.group (1));
    } else if (ninePatternMatcher.matches ()) {
        return Integer.parseInt (ninePatternMatcher.group (1)) + 1;
    } else {
        return 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28819604_28819769_7_15
28819604_28820382_29_46
Title: Return inside parentheses value in a string as integer in Java 
----------------------------------------

private static int convertSize (String pic) {
    try {
        String myNumberInString = pic.substring (pic.indexOf ("(") + 1, pic.indexOf (")"));
        int myNumberInInteger = Integer.valueOf (myNumberInString);
        return myNumberInInteger;
    } catch (Exception e) {
        return 0;
    }
}
----------------------------------------

private int convertSize (String pic) {
    if (pic == null) {
        return 0;
    }
    Matcher xPatternMatcher = xPattern.matcher (pic);
    Matcher ninePatternMatcher = ninePattern.matcher (pic);
    if ("X".equals (pic)) {
        return 1;
    } else if (xPatternMatcher.matches ()) {
        return Integer.parseInt (xPatternMatcher.group (1));
    } else if (ninePatternMatcher.matches ()) {
        return Integer.parseInt (ninePatternMatcher.group (1)) + 1;
    } else {
        return 0;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28822419_28822459_1_10
28822419_28822529_1_18
Title: How to get get rid of duplicate values in an int array? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] intArray = new int [5];
    Set < Integer > uniques = new HashSet < Integer > ();
    for (int i = 0;
    i < 5; i ++) {
        System.out.println ("Please enter your desired number that is between 10 and 100: ");
        uniques.add (input.nextInt ());
    }
    System.out.println (Arrays.toString (uniques.toArray ()));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Set < Integer > intSet = new LinkedHashSet < > ();
    int [] intArray = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        System.out.println ("Please enter your desired number that is between 10 and 100: ");
        intSet.add (input.nextInt ());
    }
    int [] intArray = new int [intSet.size ()];
    int i = 0;
    for (Integer val : intSet) {
        intArray [i ++] = val;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28823132_28823162_12_24
28823132_28823207_6_17
Title: "Why is there the compile error "" ; expected "" for my Java Code?" 
----------------------------------------

public static Map < String, Integer > buildTable () {
    String aCity;
    Map < String, Command > result = new HashMap < String, Command > ();
    aCity = new City ();
    result.put ("NYC", 100000);
    aCity = new City ();
    result.put ("Boston", 500);
    return result;
}
----------------------------------------

Map < String, Integer > buildTable () {
    String aCity;
    Map < String, Command > result = new HashMap < String, Command > ();
    aCity = new City ();
    result.put ("NYC", 100000);
    aCity = new City ();
    result.put ("Boston", 500);
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28824672_28830608_103_124
28824672_28833768_1_12
Title: reverse multiplication table javafx 
----------------------------------------

public void setUpLabel (final Label l, final int col, final int row) {
    l.setPrefHeight (50);
    l.setPrefWidth (50);
    l.setAlignment (Pos.CENTER);
    l.setStyle ("-fx-stroke-border: black; -fx-border-width: 1;");
    String a = String.valueOf (row);
    String b = String.valueOf (col);
    if (row == 0 || col == 0) {
        l.getStyleClass ().add ("gridBorders");
        if (row == 0) {
            l.setText (b);
        } else if (col == 0) {
            l.setText (a);
        }

    } else {
        l.setText (a + " * " + b);
        l.getStyleClass ().add ("gridInside");
    }
}
----------------------------------------

public void setUpLabel (final Label l, final int col, final int row) {
    value.addListener ((obs, oldValue, newValue) -> {
        if (col * row == newValue.intValue ()) {
            l.getStyleClass ().add ("gridAnswer");
        } else {
            l.getStyleClass ().remove ("gridAnswer");
        }
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28829980_28830167_1_12
28829980_28831963_1_11
Title: How to check if a string exists in a object which is stored in a hashmap? 
----------------------------------------

public boolean equals (Object o) {
    if (o == null) return false;

    if (! (o instanceof Employee)) return false;

    Employee emp = (Employee) o;
    if (emp.name.equalsIgnoreCase (this.name)) return true;
    else return false;

}
----------------------------------------

@Override
public boolean equals (Object o) {
    if (this == o) return true;

    if (o == null || getClass () != o.getClass ()) return false;

    Employee employee = (Employee) o;
    if (name != null ? ! name.equals (employee.name) : employee.name != null) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28834857_28834946_1_11
28834857_28835026_1_14
Title: Get rid of duplicate Strings in Java 
----------------------------------------

public void filter (String [] words, String text) {
    for (int i = 0;
    i < words.length; i ++) {
        if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
            System.out.println (text);
            break;
        }
    }
}
----------------------------------------

public void filter (String [] words, BufferedReader reader) throws IOException {
    String text;
    while ((text = reader.readLine ()) != null) {
        for (int i = 0;
        i < words.length; i ++) {
            if (text.toLowerCase ().contains (words [i].toLowerCase ())) {
                System.out.println (text);
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28841467_28841753_2_18
28841467_28841842_1_28
Title: Pyramids using asterisks 
----------------------------------------

public static void main (String [] args) {
    int spaces = 10;
    for (int row = 10;
    row >= 0; row --) {
        for (int cnt = 0;
        cnt < row; cnt ++) {
            System.out.print ("*");
        }
        for (int cnt = 0;
        cnt < spaces; cnt ++) {
            System.out.print (" ");
        }
        spaces = spaces + 2;
        for (int cnt = 0;
        cnt < row; cnt ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

int main () {
    char star = '*';
    char space = ' ';
    int noOfTimesToPrint = 10;
    int noOfSpaceToPrint = 1;
    int line = 0;
    int starCount = 0;
    int spaceCount = 1;
    for (line = 1; line <= 10; line ++) {
        for (starCount = 1; starCount <= noOfTimesToPrint; starCount ++) {
            printf ("%c", star);
        }
        for (spaceCount = 1; spaceCount <= noOfSpaceToPrint; spaceCount ++) {
            printf ("%c", space);
        }
        noOfSpaceToPrint = noOfSpaceToPrint + 2;
        for (starCount = 1; starCount <= noOfTimesToPrint; starCount ++) {
            printf ("%c", star);
        }
        printf ("\n");
        -- noOfTimesToPrint;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28841467_28841753_2_18
28841467_30617768_2_19
Title: Pyramids using asterisks 
----------------------------------------

public static void main (String [] args) {
    int spaces = 10;
    for (int row = 10;
    row >= 0; row --) {
        for (int cnt = 0;
        cnt < row; cnt ++) {
            System.out.print ("*");
        }
        for (int cnt = 0;
        cnt < spaces; cnt ++) {
            System.out.print (" ");
        }
        spaces = spaces + 2;
        for (int cnt = 0;
        cnt < row; cnt ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int space = 1;
    for (int i = 1;
    i <= 10; i ++) {
        for (int j = 0;
        j < 10 - i; j ++) {
            System.out.print ("*");
        }
        for (int j = 0;
        j < space; j ++) System.out.print (" ");

        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.println ();
        space = space + 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28841467_28841842_1_28
28841467_30617768_2_19
Title: Pyramids using asterisks 
----------------------------------------

int main () {
    char star = '*';
    char space = ' ';
    int noOfTimesToPrint = 10;
    int noOfSpaceToPrint = 1;
    int line = 0;
    int starCount = 0;
    int spaceCount = 1;
    for (line = 1; line <= 10; line ++) {
        for (starCount = 1; starCount <= noOfTimesToPrint; starCount ++) {
            printf ("%c", star);
        }
        for (spaceCount = 1; spaceCount <= noOfSpaceToPrint; spaceCount ++) {
            printf ("%c", space);
        }
        noOfSpaceToPrint = noOfSpaceToPrint + 2;
        for (starCount = 1; starCount <= noOfTimesToPrint; starCount ++) {
            printf ("%c", star);
        }
        printf ("\n");
        -- noOfTimesToPrint;
    }
}
----------------------------------------

public static void main (String [] args) {
    int space = 1;
    for (int i = 1;
    i <= 10; i ++) {
        for (int j = 0;
        j < 10 - i; j ++) {
            System.out.print ("*");
        }
        for (int j = 0;
        j < space; j ++) System.out.print (" ");

        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.println ();
        space = space + 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28854207_28854522_4_21
28854207_28855378_3_28
Title: Default constructor cannot handle exception type IOException thrown by implicit super constructor. Must define an explicit constructor 
----------------------------------------

public String [] getparams () throws IOException {
    Properties properties = new Properties ();
    FileInputStream fileStream = new FileInputStream ("C:/.../Desktop/configuration.txt");
    try {
        properties.load (fileStream);
        String ip = (String) properties.get ("IP");
        String port = (String) properties.get ("Port");
        return new String [] {ip, port};
    } finally {
        try {
            fileStream.close ();
        } catch (IOException ex) {
            Logger.getLogger (this.getClass ().getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------

public String getparams () {
    Properties properties = new Properties ();
    FileInputStream fileStream = null;
    try {
        fileStream = new FileInputStream ("C:/.../Desktop/configuration.txt");
        properties.load (fileStream);
        String ip = (String) properties.get ("IP");
        String port = (String) properties.get ("Port");
        return ip + port;
    } catch (IOException ex) {
        return null;
    } finally {
        try {
            fileStream.close ();
        } catch (IOException ex) {
            Logger.getLogger (this.getClass ().getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28869081_28870479_12_28
28869081_28872004_8_29
Title: Filter Chain not autowiring into my custom filter class 
----------------------------------------

public Authentication attemptAuthentication (HttpServletRequest request, HttpServletResponse response) throws AuthenticationException, IOException, ServletException {
    String username = request.getParameter ("j_username");
    String password = request.getParameter ("j_password");
    UsernamePasswordAuthenticationToken authRequest = null;
    if (util == null) {
        util = ApplicationContext.getInstance (AuthenticationUtil.class);
    }
    if (util.isLDAPEnalbed ()) {
        authRequest = new LDAPUsernamePasswordAuthenticationToken (username, password);
    } else {
        authRequest = new DBUsernamePasswordAuthenticationToken (username, password);
    }
    setDetails (request, authRequest);
    return getAuthenticationManager ().authenticate (authRequest);
}
----------------------------------------

public Authentication attemptAuthentication (HttpServletRequest request, HttpServletResponse response) throws AuthenticationException {
    String username = obtainUsername (request);
    String password = obtainPassword (request);
    if (username == null) {
        username = "";
    }
    if (password == null) {
        password = "";
    }
    username = username.trim ();
    UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken (username, password);
    setDetails (request, authRequest);
    return this.authProvider.authenticate (authRequest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28882706_28883005_3_30
28882706_28883056_3_27
Title: shifting in the array 
----------------------------------------

public static void main (String [] args) {
    int [] cpoies = {22, 12, 13, 4, 3, 2, 26};
    int numOfNumbers = cpoies.length;
    for (int i = 0;
    i < cpoies.length; i ++) {
        if (cpoies [i] < 20) {
            int temp = cpoies [i];
            for (int j = i + 1;
            j < cpoies.length; j ++) {
                if (cpoies [j] > 20) {
                    cpoies [i] = cpoies [j];
                    cpoies [j] = temp;
                    numOfNumbers --;
                }
            }
        }
    }
    System.out.println ("The remained : ");
    for (int i = 0;
    i <= cpoies.length - numOfNumbers; i ++) {
        System.out.println (cpoies [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = {22, 12, 13, 4, 3, 2, 26};
    int numOfNumbers = numbers.length;
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] > 20) {
            for (int j = i;
            j > 0; j --) if (numbers [j - 1] > 20) {
                break;
                numOfNumbers = j;
            }

            tempnum = numbers [j];
            numbers [j] = numbers [j - 1];
            numbers [j - 1] = tempnum;
        }
    }
    System.out.println ("The remained : ");
    for (int i = 0;
    i <= numOfNumbers; i ++) {
        System.out.println (numbers [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28892336_28892508_3_67
28892336_28892779_1_36
Title: How to count multiple character occurrences in a string using the switch loop? Java 
----------------------------------------

public static void main (String [] args) {
    String phrase;
    int countBlank;
    int length;
    char ch;
    phrase = "abcd efgh skjadh sjds";
    length = phrase.length ();
    int i = 0;
    countBlank = 0;
    int aCount = 0;
    int eCount = 0;
    int sCount = 0;
    int tCount = 0;
    int capACount = 0;
    int capECount = 0;
    int capSCount = 0;
    int capTCount = 0;
    while (i < length) {
        ch = phrase.charAt (i);
        switch (ch) {
            case 'a' :
                aCount ++;
                break;
            case 'e' :
                eCount ++;
                break;
            case 's' :
                sCount ++;
                break;
            case 't' :
                tCount ++;
                break;
            case 'A' :
                capACount ++;
                break;
            case 'E' :
                capECount ++;
                break;
            case 'S' :
                capSCount ++;
                break;
            case 'T' :
                capTCount ++;
                break;
        }
        i ++;
    }
    System.out.println ("Number of a: " + aCount);
    System.out.println ("Number of e: " + eCount);
    System.out.println ("Number of s: " + sCount);
    System.out.println ("Number of t: " + tCount);
    System.out.println ("Number of A: " + capACount);
    System.out.println ("Number of E: " + capECount);
    System.out.println ("Number of S: " + capSCount);
    System.out.println ("Number of T: " + capTCount);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ();
    System.out.println ("Character Counter");
    System.out.println ();
    System.out.print ("Enter a sentence or phrase: ");
    Scanner scan = new Scanner (System.in);
    String phrase = scan.nextLine ();
    int length = phrase.length ();
    String findChars = " AaEeSsTt";
    int [] counts = new int [findChars.length ()];
    for (int i = 0;
    i < length; i ++) {
        char ch = phrase.charAt (i);
        for (int n = 0;
        n < findChars.length (); n ++) {
            char find = findChars.charAt (n);
            if (ch == find) {
                counts [n] ++;
                break;
            }
        }
    }
    System.out.println ();
    for (int n = 0;
    n < findChars.length (); n ++) {
        System.out.println ("Number of '" + findChars.charAt (n) + "': " + counts [n]);
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28892662_28893134_10_23
28892662_28893134_27_35
Title: Implementing thread waiting 
----------------------------------------

public void run () {
    for (int i = 0;
    i <= 20; i ++) {
        if (number == 3) {
            while (z < 4);

        }
        System.out.print (number ++);
        if (number == 4) {
            number = 1;
            z = 1;
        }
    }
    t2.stop ();
}
----------------------------------------

public void run () {
    while (true) {
        while (z <= 3) {
            System.out.print ("z");
            z ++;
        }
        System.out.print ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28892662_28893134_10_23
28892662_28894033_12_21
Title: Implementing thread waiting 
----------------------------------------

public void run () {
    for (int i = 0;
    i <= 20; i ++) {
        if (number == 3) {
            while (z < 4);

        }
        System.out.print (number ++);
        if (number == 4) {
            number = 1;
            z = 1;
        }
    }
    t2.stop ();
}
----------------------------------------

public void run () {
    System.out.println (1);
    System.out.println (2);
    try {
        cdl.await ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println (3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28892662_28893134_27_35
28892662_28894033_12_21
Title: Implementing thread waiting 
----------------------------------------

public void run () {
    while (true) {
        while (z <= 3) {
            System.out.print ("z");
            z ++;
        }
        System.out.print ("");
    }
}
----------------------------------------

public void run () {
    System.out.println (1);
    System.out.println (2);
    try {
        cdl.await ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println (3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28892662_28893134_7_39
28892662_28894033_5_37
Title: Implementing thread waiting 
----------------------------------------

public static void main (String [] args) {
    Thread t = new Thread (new Runnable () {
        public void run () {
            for (int i = 0;
            i <= 20; i ++) {
                if (number == 3) {
                    while (z < 4);

                }
                System.out.print (number ++);
                if (number == 4) {
                    number = 1;
                    z = 1;
                }
            }
            t2.stop ();
        }}

    );
    t2 = new Thread (new Runnable () {
        public void run () {
            while (true) {
                while (z <= 3) {
                    System.out.print ("z");
                    z ++;
                }
                System.out.print ("");
            }
        }}

    );
    t.start ();
    t2.start ();
}
----------------------------------------

public static void main (String...s) {
    final CountDownLatch cdl = new CountDownLatch (1);
    Thread t1 = new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println (1);
            System.out.println (2);
            try {
                cdl.await ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            System.out.println (3);
        }}

    );
    Thread t2 = new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 3; i ++) System.out.println ("z");

            cdl.countDown ();
        }}

    );
    t2.start ();
    t1.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28895785_28895808_1_15
28895785_28898328_1_10
Title: IsPrime? - missing return statement 
----------------------------------------

public static boolean isPrime (int number) {
    for (int i = 2;
    i < number; i ++) {
        boolean status;
        if (number % i == 0) status = true;
        else status = false;

        return status;
    }
    return false;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number < 2) return false;

    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28895785_28895823_1_12
28895785_28898328_1_10
Title: IsPrime? - missing return statement 
----------------------------------------

public static boolean isPrime (int number) {
    for (int i = 2;
    i < number; i ++) {
        boolean status;
        if (number % i == 0) status = true;
        else status = false;

        return status;
    }
    return false;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number < 2) return false;

    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28895910_28899486_10_22
28895910_28899486_37_48
Title: Array List implementation with 2 threads having following conditions 
----------------------------------------

public void run () {
    System.out.println ("Starting ArrayListThred 2 ");
    ArrayList < String > al = new ArrayList < String > ();
    al.add ("Ravi");
    al.add ("Vijay");
    al.add ("Ravi");
    al.add ("Ajay");
    for (int i = (al.size () - 1);
    i >= 0; i --) {
        System.out.println (al.get (i));
    }
}
----------------------------------------

public void run () {
    ArrayList < String > al = new ArrayList < String > ();
    al.add ("Ravi");
    al.add ("Vijay");
    al.add ("Ravi");
    al.add ("Ajay");
    Iterator itr = al.iterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28898423_28898511_1_16
28898423_28898606_1_15
Title: Exhaustive Nested Directory Search in Java 
----------------------------------------

void RecursiveFileSearch (File f, String d) {
    int i;
    String s [] = f.list ();
    for (i = 0; i < s.length; i ++) {
        File fs = new File (d + "/" + s [i]);
        if (fs.isDirectory ()) {
            System.out.println ("#DIRECTORY :" + s [i]);
            String d2 = d + "/" + s [i];
            RecursiveFileSearch (fs, d2);
        } else {
            System.out.println ("@FILE : " + s [i]);
        }
    }
}
----------------------------------------

void RecursiveFileSearch (File f) {
    File [] list = f.listFiles ();
    for (File elem : list) {
        if (elem.isDirectory ()) {
            System.out.println ("#DIRECTORY:" + elem.getAbsoluteFile ());
            RecursiveFileSearch (x);
        } else {
            System.out.println ("@FILE : " + elem.getAbsoluteFile ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28898423_28898598_1_16
28898423_28898606_1_15
Title: Exhaustive Nested Directory Search in Java 
----------------------------------------

void RecursiveFileSearch (File f, String d) {
    int i;
    String s [] = f.list ();
    for (i = 0; i < s.length; i ++) {
        File fs = new File (d + "/" + s [i]);
        if (fs.isDirectory ()) {
            System.out.println ("#DIRECTORY :" + s [i]);
            RecursiveFileSearch (fs, d + "/" + s [i]);
        } else {
            System.out.println ("@FILE : " + s [i]);
        }
    }
}
----------------------------------------

void RecursiveFileSearch (File f) {
    File [] list = f.listFiles ();
    for (File elem : list) {
        if (elem.isDirectory ()) {
            System.out.println ("#DIRECTORY:" + elem.getAbsoluteFile ());
            RecursiveFileSearch (x);
        } else {
            System.out.println ("@FILE : " + elem.getAbsoluteFile ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28924127_28924663_19_35
28924127_29029901_40_102
Title: I am making a program to display error message whenever an empty space or blank space is entered 
----------------------------------------

public void getInput () {
    Scanner data = new Scanner (System.in);
    while (getName ().trim ().isEmpty ()) {
        System.out.print ("Name (not empty): ");
        setName (data.nextLine ());
        setName (getName ().toUpperCase ());
    }
    while (getAge () < 1 | getAge () > 50) {
        System.out.print ("AGE (1 - 50): ");
        setAge (Integer.parseInt (data.nextLine ()));
    }
    System.out.print ("GENDER (m/f): ");
    setGender (data.next ().charAt (0));
}
----------------------------------------

public static Person getInput () {
    Scanner data = new Scanner (System.in);
    Person p = new Person ();
    boolean isEmpty = false;
    while (p.getName ().trim ().isEmpty ()) {
        try {
            System.out.println ("Please enter your name.");
            p.setName (data.next ());
            p.setName (p.getName ().toUpperCase ());
            break;
        } catch (Exception e) {
            System.err.println (" Input invalid. ");
            p.setName (data.next ());
        }
    }
    while (p.getAge () >= 1 && p.getAge () <= 50) {
        try {
            System.out.println ("AGE (1-50): ");
            p.setAge (Integer.parseInt (data.nextLine ()));
            if (p.getAge () >= 1 && p.getAge () <= 50) {
                p.setAge (p.getAge ());
                break;
            } else {
                System.err.println ("Please enter a number from 1 - 50. ");
            }
        } catch (Exception e) {
            System.err.println (" Input invalid. ");
            p.setAge (Integer.parseInt (data.nextLine ()));
        }
    }
    while (p.getGender () == 'F' || p.getGender () == 'f' || p.getGender () == 'M' || p.getGender () == 'm') {
        try {
            System.out.println ("GENDER (M/F): ");
            p.setGender (data.next ().charAt (0));
            if (p.getGender () == 'F' || p.getGender () == 'f' || p.getGender () == 'M' || p.getGender () == 'm') {
                p.setGender (p.getGender ());
                break;
            } else {
                System.out.println ("Please enter M for male and F for female. ");
            }
        } catch (Exception e) {
            System.err.println (" Input invalid. ");
            p.setGender (data.next ().charAt (0));
        }
    }
    return p;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28929013_28929073_1_17
28929013_28929085_1_13
Title: How can I return String inputs from a while loop? 
----------------------------------------

public static List < String > getTitles () {
    Scanner numberOfTitles = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = numberOfTitles.nextInt ();
    int count = 1;
    List < String > titles = new ArrayList < String > ();
    while (count <= titlesAmount) {
        Scanner titlesReader = new Scanner (System.in);
        System.out.println ("Enter title: ");
        String titlesInput = titlesReader.next ();
        titles.add (titlesInput);
        count ++;
    }
    return titles;
}
----------------------------------------

public static String getTitles () {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = scanner.nextInt ();
    int count = 1;
    StringBuilder sbReturn = new StringBuilder ();
    while (count <= titlesAmount) {
        System.out.println ("Enter title: ");
        sbReturn.append (scanner.next ()).append (",");
        count ++;
    }
    return sbReturn.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28929013_28929073_1_17
28929013_28929175_1_11
Title: How can I return String inputs from a while loop? 
----------------------------------------

public static List < String > getTitles () {
    Scanner numberOfTitles = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = numberOfTitles.nextInt ();
    int count = 1;
    List < String > titles = new ArrayList < String > ();
    while (count <= titlesAmount) {
        Scanner titlesReader = new Scanner (System.in);
        System.out.println ("Enter title: ");
        String titlesInput = titlesReader.next ();
        titles.add (titlesInput);
        count ++;
    }
    return titles;
}
----------------------------------------

public static List < String > getTitles () {
    List < String > titles = new ArrayList < String > ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = sc.nextInt ();
    for (int i = 0;
    i < titlesAmount; i ++) {
        System.out.println ("Enter title: ");
        titles.add (sc.next ());
    }
    return titles;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28929013_28929085_1_13
28929013_28929175_1_11
Title: How can I return String inputs from a while loop? 
----------------------------------------

public static String getTitles () {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = scanner.nextInt ();
    int count = 1;
    StringBuilder sbReturn = new StringBuilder ();
    while (count <= titlesAmount) {
        System.out.println ("Enter title: ");
        sbReturn.append (scanner.next ()).append (",");
        count ++;
    }
    return sbReturn.toString ();
}
----------------------------------------

public static List < String > getTitles () {
    List < String > titles = new ArrayList < String > ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter number of titles: ");
    int titlesAmount = sc.nextInt ();
    for (int i = 0;
    i < titlesAmount; i ++) {
        System.out.println ("Enter title: ");
        titles.add (sc.next ());
    }
    return titles;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28939068_28939213_1_15
28939068_28939402_1_15
Title: How to print specified pattern in Java 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    System.out.println ("The Pattern is");
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j <= 4 - i; j ++) System.out.print (" ");

        for (int k = 0;
        k <= i - 2; k ++) System.out.print ("V ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    final int numRows = 4;
    for (int row = 0;
    row < numRows; row ++) {
        for (int preSpace = numRows - row;
        preSpace >= 0; preSpace --) {
            System.out.print (" ");
        }
        if (row > 0) {
            System.out.print ("v");
            for (int postSpace = 1;
            postSpace < row * 2; postSpace ++) {
                System.out.print (" ");
            }
        }
        System.out.println ("v");
    }
}
----------------------------------------
