$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27900058_27900250_9_26
27900058_27903008_1_13
Title: Java pass by value with recursion 
----------------------------------------

private void insert (NODE nodeptr, int key) {
    if (key <= nodeptr.data) {
        if (nodeptr.left == null) {
            nodeptr.left = new NODE (key)
        } else {
            insert (nodeptr.left, key);
        }
    } else {
        if (nodeptr.right == null) {
            nodeptr.right = new NODE (key)
        } else {
            insert (nodeptr.right, key);
        }
    }
}
----------------------------------------

NODE insert (NODE nodeptr, int key) {
    if (nodeptr == null) {
        nodeptr = new NODE (key);
    } else if (key <= nodeptr.data) {
        nodeptr.left = insert (nodeptr.left, key);
    } else {
        nodeptr.right = insert (nodeptr.right, key);
    }

    return nodeptr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27915283_27915367_14_28
27915283_27915405_1_13
Title: how to generate special numbers? 
----------------------------------------

public static void main (String [] args) {
    for (long num = 13, end = 14, count = 0;
    count < 2000000; num += 2) {
        if (num >= end) {
            end = end * 10;
            num = (end / 14) * 13 - 1;
            continue;
        }
        if (isPrime (num)) {
            count ++;
            System.out.println ("#" + count + ": " + num);
        }
    }
}
----------------------------------------

public void main (String [] args) {
    List < Integer > res = new ArrayList < > (20);
    int i = 13;
    while (res.size () < 20) {
        if (isPrime (i)) {
            char [] chars = String.valueOf (i).toCharArray ();
            if (chars [0] == '1' && chars [1] == '3') {
                res.add (i);
            }
        }
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27916511_27916580_4_22
27916511_27916752_4_24
Title: How to find the longest sequence of consecutive natural successors? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int x = scan.nextInt ();
    int nmbr [] = new int [x];
    for (int f = 0;
    f < nmbr.length; f ++) nmbr [f] = scan.nextInt ();

    int counter = 1;
    int max = 1;
    for (int i = 0;
    i < nmbr.length - 1; i ++) {
        if (nmbr [i] == (nmbr [i + 1] - 1)) counter ++;
        else counter = 1;

        if (counter > max) max = counter;

    }
    System.out.println (max);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int x = scan.nextInt ();
    int nmbr [] = new int [x];
    for (int f = 0;
    f < nmbr.length; f ++) {
        nmbr [f] = scan.nextInt ();
    }
    int counter = 0;
    int max = 0;
    for (int i = 0;
    i < nmbr.length - 1; i ++) {
        if (nmbr [i] == (nmbr [i + 1] - 1)) {
            counter ++;
        } else {
            if (counter > max) max = (counter + 1);

            counter = 0;
        }
    }
    System.out.println (max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27928238_27928393_1_13
27928238_27928492_1_10
Title: Evenly truncate an array to a given length limit in Java 
----------------------------------------

public static < T > List < T > limitArray (T [] array, int limit) {
    if (limit > array.length) {
        return Arrays.asList (array);
    }
    List < T > list = new ArrayList < T > ();
    double stepSize = ((double) array.length - 1) / ((double) limit - 1);
    double i = 0;
    while (i < array.length) {
        list.add (array [(int) i]);
        i += stepSize;
    }
    return list;
}
----------------------------------------

public < T > List < T > limitArray (T [] array, int limit) {
    List < T > list = new ArrayList < T > ();
    int i = 0;
    double scale = array.length * 1.0 / limit;
    while (i < limit) {
        list.add (array [(int) (i * scale)]);
        i ++;
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27930315_27930566_22_37
27930315_27932131_16_33
Title: MergeSort java Graphical representation 
----------------------------------------

public static void mergeSort (int [] array, List < int [] > listOfLists) {
    if (array.length > 1) {
        int [] left = leftHalf (array);
        int [] right = rightHalf (array);
        mergeSort (left, listOfLists);
        mergeSort (right, listOfLists);
        merge (array, left, right);
        listOfLists.add (array);
    }
}
----------------------------------------

public static void mergeSort (int [] array, int left, int right) {
    int mid = 0;
    if (right > left) {
        mid = (right + left) / 2;
        mergeSort (array, left, mid);
        mergeSort (array, mid + 1, right);
        merge (array, left, mid + 1, right);
        System.out.println ("during: " + Arrays.toString (array));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27930315_27930566_60_74
27930315_27932131_35_59
Title: MergeSort java Graphical representation 
----------------------------------------

public static void merge (int [] result, int [] left, int [] right) {
    int i1 = 0;
    int i2 = 0;
    for (int i = 0;
    i < result.length; i ++) {
        if (i2 >= right.length || (i1 < left.length && left [i1] <= right [i2])) {
            result [i] = left [i1];
            i1 ++;
        } else {
            result [i] = right [i2];
            i2 ++;
        }
    }
}
----------------------------------------

public static void merge (int [] numbers, int left, int mid, int right) {
    int [] temp = new int [numbers.length];
    int i, left_end, num_elements, tmp_pos;
    left_end = (mid - 1);
    tmp_pos = left;
    num_elements = (right - left + 1);
    while ((left <= left_end) && (mid <= right)) {
        if (numbers [left] <= numbers [mid]) temp [tmp_pos ++] = numbers [left ++];
        else temp [tmp_pos ++] = numbers [mid ++];

    }
    while (left <= left_end) temp [tmp_pos ++] = numbers [left ++];

    while (mid <= right) temp [tmp_pos ++] = numbers [mid ++];

    for (i = 0; i < num_elements; i ++) {
        numbers [right] = temp [right];
        right --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2793175_2793194_21_31
2793175_2793194_9_17
Title: "Invoke a cleanup method for java user thread when JVM stops the thread" 
----------------------------------------

public void run () {
    while (keepRunning) {
        System.out.println ("worknig...");
        try {
            sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("cleaning up.");
}
----------------------------------------

public void run () {
    System.out.println ("Shutting down...");
    keepRunning = false;
    t.interrupt ();
    try {
        t.join ();
    } catch (InterruptedException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2793297_2793308_12_24
2793297_2793518_6_27
Title: Types of Nested Loops in Java 
----------------------------------------

public static void main (String [] args) {
    char [] sentence = "reversing letters of words in sentence".toCharArray ();
    final int L = sentence.length;
    int last = 0;
    for (int i = 0;
    i <= L; i ++) {
        if ((i == L) || (sentence [i] == ' ')) {
            reverse (sentence, last, i);
            last = i + 1;
        }
    }
    System.out.println (new String (sentence));
}
----------------------------------------

public static void main (String [] args) throws Exception {
    for (int n = 1;
    n < 10000; ++ n) {
        String className = "test" + n;
        FileWriter fw = new FileWriter ("f:/test/" + className + ".java");
        BufferedWriter o = new BufferedWriter (fw);
        o.write ("public class ");
        o.write (className);
        o.write ("\n{\npublic static void main(String[] args) {\n");
        for (int i = 0;
        i < n; ++ i) {
            o.write ("while(true) {\n");
        }
        for (int i = 0;
        i < n; ++ i) {
            o.write ("}\n");
        }
        o.write ("}\n}\n");
        o.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27939594_27939621_1_20
27939594_27939890_1_18
Title: initialize two dimensional string array with dynamic size in java 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader r = new BufferedReader (new FileReader (new File ("data.txt")));
    String line;
    List < String [] > list = new ArrayList < String [] > ();
    while ((line = r.readLine ()) != null) list.add (line.split (" +"));

    String [] [] data = new String [list.size ()] [];
    list.toArray (data);
    for (int i = 0;
    i < data.length; ++ i) {
        for (int j = 0;
        j < data [i].length; ++ j) System.out.print (data [i] [j] + " ");

        System.out.println ();
    }
    r.close ();
}
----------------------------------------

public static void main (String args []) throws IOException {
    String [] [] data;
    BufferedReader bufferedReader = new BufferedReader (new InputStreamReader (System.in));
    int r = Integer.parseInt (bufferedReader.readLine ());
    int c = Integer.parseInt (bufferedReader.readLine ());
    data = new String [r] [c];
    for (int i = 0;
    i < r; i ++) for (int j = 0;
    j < c; j ++) data [i] [j] = "hello";

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27953414_27953556_5_16
27953414_27953568_1_14
Title: How would I make a recursive trace print out like this? 
----------------------------------------

public static long fibonacci (int n, int indent) {
    System.out.printf ("%" + indent + "s", "");
    long result;
    if (n == 0 || n == 1) {
        result = n;
        System.out.printf ("fib(%s)-->%s%n", n, result);
    } else {
        result = fibonacci (n - 1, indent + 2) + fibonacci (n - 2, indent + 2);
        System.out.printf ("fib(%s)%n", n);
    }
    return result;
}
----------------------------------------

public static long fibonacci (int depth, int n) {
    String indent = new String (new char [depth]).replace ('\0', ' ');
    long result;
    if (n == 0 || n == 1) {
        result = n;
        System.out.printf (indent + "fib(%s)-->%s%n", n, result);
    } else {
        long first = fibonacci (depth + 1, n - 1);
        System.out.printf (indent + "fib(%s)%n", n);
        long second = fibonacci (depth + 1, n - 2);
        result = first + second;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27953414_27953556_5_16
27953414_27953662_1_18
Title: How would I make a recursive trace print out like this? 
----------------------------------------

public static long fibonacci (int n, int indent) {
    System.out.printf ("%" + indent + "s", "");
    long result;
    if (n == 0 || n == 1) {
        result = n;
        System.out.printf ("fib(%s)-->%s%n", n, result);
    } else {
        result = fibonacci (n - 1, indent + 2) + fibonacci (n - 2, indent + 2);
        System.out.printf ("fib(%s)%n", n);
    }
    return result;
}
----------------------------------------

public static long fibonacci (int n) {
    int saveFibCount = fibCount;
    fibCount ++;
    try {
        fibCount ++;
        long result;
        if (n == 0 || n == 1) {
            result = n;
            System.out.printf ("fib(%s)-->%s%n", n, result);
        } else {
            result = fibonacci (n - 1) + fibonacci (n - 2);
            System.out.printf ("fib(%s)%n", n);
        }
        return result;
    } finally {
        fibCount = saveFibCount;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27953414_27953568_1_14
27953414_27953662_1_18
Title: How would I make a recursive trace print out like this? 
----------------------------------------

public static long fibonacci (int depth, int n) {
    String indent = new String (new char [depth]).replace ('\0', ' ');
    long result;
    if (n == 0 || n == 1) {
        result = n;
        System.out.printf (indent + "fib(%s)-->%s%n", n, result);
    } else {
        long first = fibonacci (depth + 1, n - 1);
        System.out.printf (indent + "fib(%s)%n", n);
        long second = fibonacci (depth + 1, n - 2);
        result = first + second;
    }
    return result;
}
----------------------------------------

public static long fibonacci (int n) {
    int saveFibCount = fibCount;
    fibCount ++;
    try {
        fibCount ++;
        long result;
        if (n == 0 || n == 1) {
            result = n;
            System.out.printf ("fib(%s)-->%s%n", n, result);
        } else {
            result = fibonacci (n - 1) + fibonacci (n - 2);
            System.out.printf ("fib(%s)%n", n);
        }
        return result;
    } finally {
        fibCount = saveFibCount;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_11286568_7_21
2795350_27079114_4_31
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int num [] = new int [10];
    int average = 0;
    int i = 0;
    int sum = 0;
    for (i = 0; i < num.length; i ++) {
        System.out.println ("enter a number");
        num [i] = in.nextInt ();
        sum = sum + num [i];
    }
    average = sum / 10;
    System.out.println ("Average=" + average);
}
----------------------------------------

public static void main (String args []) {
    int i, n, t;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter the size of array");
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter elements in array");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
    }
    t = a [1];
    for (i = 0; i < n; i ++) {
        if (a [i] > t) t = a [i];

    }
    System.out.println ("Greates integer is" + t);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_11286568_7_21
2795350_2795379_1_11
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int num [] = new int [10];
    int average = 0;
    int i = 0;
    int sum = 0;
    for (i = 0; i < num.length; i ++) {
        System.out.println ("enter a number");
        num [i] = in.nextInt ();
        sum = sum + num [i];
    }
    average = sum / 10;
    System.out.println ("Average=" + average);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double [] numbers = new double [5];
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.println ("Please enter number");
        numbers [i] = input.nextDouble ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_11286568_7_21
2795350_29743032_8_30
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int num [] = new int [10];
    int average = 0;
    int i = 0;
    int sum = 0;
    for (i = 0; i < num.length; i ++) {
        System.out.println ("enter a number");
        num [i] = in.nextInt ();
        sum = sum + num [i];
    }
    average = sum / 10;
    System.out.println ("Average=" + average);
}
----------------------------------------

public static void main (String [] args) {
    int i, n;
    System.out.println ("Enter the number of inputs");
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter the inputs");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
        System.out.println ("Inputs are " + a [i]);
    }
    int sum = 0;
    for (i = 0; i < n; i ++) {
        sum = sum + a [i];
        System.out.println ("Sums : " + sum);
    }
    int avg;
    avg = sum / n;
    System.out.println ("avg : " + avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_27079114_4_31
2795350_2795379_1_11
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String args []) {
    int i, n, t;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter the size of array");
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter elements in array");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
    }
    t = a [1];
    for (i = 0; i < n; i ++) {
        if (a [i] > t) t = a [i];

    }
    System.out.println ("Greates integer is" + t);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double [] numbers = new double [5];
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.println ("Please enter number");
        numbers [i] = input.nextDouble ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_27079114_4_31
2795350_29743032_8_30
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String args []) {
    int i, n, t;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter the size of array");
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter elements in array");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
    }
    t = a [1];
    for (i = 0; i < n; i ++) {
        if (a [i] > t) t = a [i];

    }
    System.out.println ("Greates integer is" + t);
}
----------------------------------------

public static void main (String [] args) {
    int i, n;
    System.out.println ("Enter the number of inputs");
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter the inputs");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
        System.out.println ("Inputs are " + a [i]);
    }
    int sum = 0;
    for (i = 0; i < n; i ++) {
        sum = sum + a [i];
        System.out.println ("Sums : " + sum);
    }
    int avg;
    avg = sum / n;
    System.out.println ("avg : " + avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2795350_2795379_1_11
2795350_29743032_8_30
Title: How to put a Scanner input into an array... for example a couple of numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double [] numbers = new double [5];
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.println ("Please enter number");
        numbers [i] = input.nextDouble ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, n;
    System.out.println ("Enter the number of inputs");
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    int a [] = new int [n];
    System.out.println ("Enter the inputs");
    for (i = 0; i < n; i ++) {
        a [i] = sc.nextInt ();
        System.out.println ("Inputs are " + a [i]);
    }
    int sum = 0;
    for (i = 0; i < n; i ++) {
        sum = sum + a [i];
        System.out.println ("Sums : " + sum);
    }
    int avg;
    avg = sum / n;
    System.out.println ("avg : " + avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27956222_27956258_1_19
27956222_27956393_1_13
Title: How to convert an ArrayList to String array with ordered elements? 
----------------------------------------

public static String [] orderStudent (List < Student > list) {
    String [] students = new String [list.size ()];
    Collections.sort (list, new Comparator < Student > () {
        @Override
        public int compare (Student object1, Student object2) {
            return Integer.compare (object2.getScore (), object1.getScore ());
        }}

    );
    for (int index = 0;
    index < list.size (); index ++) {
        Student student = list.get (index);
        students [index] = student.getName ();
        System.out.println ("Name: " + student.getName ());
    }
    return students;
}
----------------------------------------

public static List < String > orderStudent (List < Student > ls) {
    Collections.sort (ls, new Comparator < Student > () {
        @Override
        public int compare (Student o1, Student o2) {
            return o2.getScore ().compareTo (o1.getScore ());
        }}

    );
    List < String > result = new ArrayList < String > ();
    for (Student s : ls) {
        result.add (s.getName ());
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27957273_27957309_1_22
27957273_27957370_1_16
Title: Write a Program that calculates the sum of (a/1)+(a/2)+(a/3)+(a/4)+..........+(a/n) 
----------------------------------------

public static void main () throws IOException {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (isr);
    System.out.println ("Enter the value of the numerator");
    double a = Double.parseDouble (br.readLine ());
    System.out.println ("Enter the limit for the denominator");
    int limit = Integer.parseInt (br.readLine ());
    double n = 1.0;
    double sum = 0.0;
    while (n <= limit) {
        sum += (a / n);
        n ++;
    }
    System.out.println (sum);
}
----------------------------------------

public static void main () throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter the value of the numerator");
    double a = Double.parseDouble (br.readLine ());
    System.out.println ("Enter the limit for the denominator");
    int limit = Integer.parseInt (br.readLine ());
    double sum = 0.0;
    for (int i = 1;
    i <= limit; i ++) {
        sum += a / i;
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27957273_27957330_4_20
27957273_27957370_1_16
Title: Write a Program that calculates the sum of (a/1)+(a/2)+(a/3)+(a/4)+..........+(a/n) 
----------------------------------------

public static void main (String [] args) throws IOException {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (isr);
    System.out.println ("Enter the value of the numerator");
    double a = Double.parseDouble (br.readLine ());
    System.out.println ("Enter the limit for the denominator");
    int limit = Integer.parseInt (br.readLine ());
    double n = 1.0;
    double sum = 0.0;
    while (n <= limit) {
        sum += (a / n);
        n ++;
    }
    System.out.println (sum);
}
----------------------------------------

public static void main () throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter the value of the numerator");
    double a = Double.parseDouble (br.readLine ());
    System.out.println ("Enter the limit for the denominator");
    int limit = Integer.parseInt (br.readLine ());
    double sum = 0.0;
    for (int i = 1;
    i <= limit; i ++) {
        sum += a / i;
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27969112_27969168_1_17
27969112_27969190_1_14
Title: How to store just a part of a return statement 
----------------------------------------

public String [] orderTime () {
    String dateStore = "";
    String time = "";
    if (! out) {
        GregorianCalendar orderDay = new GregorianCalendar ();
        SimpleDateFormat sdf = new SimpleDateFormat ("EEEE, dd/MM/yyyy");
        SimpleDateFormat timeFormat = new SimpleDateFormat ("HH:mm:ss");
        timeFormat.setTimeZone (TimeZone.getTimeZone ("GMT+1"));
        time = timeFormat.format (new Date ());
        System.out.println ();
        dateStore = sdf.format (orderDay.getTime ());
    }
    String [] aReturn = new String [2];
    aReturn [0] = "Date of Order: " + dateStore;
    aReturn [1] = "Time of Order: " + time;
    return aReturn;
}
----------------------------------------

public DateAndTime orderTime () {
    String dateStore = "";
    String time = "";
    if (! out) {
        GregorianCalendar orderDay = new GregorianCalendar ();
        SimpleDateFormat sdf = new SimpleDateFormat ("EEEE, dd/MM/yyyy");
        SimpleDateFormat timeFormat = new SimpleDateFormat ("HH:mm:ss");
        timeFormat.setTimeZone (TimeZone.getTimeZone ("GMT+1"));
        time = timeFormat.format (new Date ());
        dateStore = sdf.format (orderDay.getTime ());
    }
    return new DateAndTime (dateStore, time);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27977828_27978340_1_18
27977828_27978364_11_34
Title: Static methods and Jagged Arrays 
----------------------------------------

public static int findMaxRow (int [] [] maxRows) {
    int sum = Integer.MIN_VALUE;
    int biggestIndex = 0;
    for (int i = 0;
    i < maxRows.length; i ++) {
        int temp = 0;
        for (int ir : maxRows [i]) {
            temp += ir;
        }
        if (temp > sum) {
            sum = temp;
            biggestIndex = i;
        }
    }
    return biggestIndex;
}
----------------------------------------

public static int findMaxRow (int [] [] maxRows) {
    int largestRow = 0;
    int largestSum = 0;
    int sum;
    for (int i = 0;
    i < maxRows.length; i ++) {
        sum = 0;
        for (int j = 0;
        j < maxRows [i].length; j ++) {
            sum += maxRows [i] [j];
        }
        if (sum > largestSum) {
            largestRow = i;
            largestSum = sum;
        }
    }
    return largestRow;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27981071_27981580_1_25
27981071_27984446_1_26
Title: Display relative time with one number with Joda time [Java] 
----------------------------------------

protected final String toRelativeTime (final DateTime dateTime) {
    long nowLngTime = System.currentTimeMillis ();
    DateTime now = new DateTime ();
    long difference = Math.abs (dateTime.getTime () - nowLngTime);
    Period period = new Period (dateTime, now);
    PeriodFormatterBuilder formatterBuilder = new PeriodFormatterBuilder ();
    if (difference > DateUtils.YEAR_IN_MILLIS) {
        formatterBuilder.appendYears ().appendSuffix (" year");
    } else if (difference > DateUtils.DAY_IN_MILLIS * 30) {
        formatterBuilder.appendMonths ().appendSuffix (" month");
    } else if (difference > DateUtils.WEEK_IN_MILLIS) {
        formatterBuilder.appendWeeks ().appendSuffix (" week");
    } else if (difference > DateUtils.DAY_IN_MILLIS) {
        formatterBuilder.appendDays ().appendSuffix (" day");
    } else if (difference > DateUtils.HOUR_IN_MILLIS) {
        formatterBuilder.appendHours ().appendSuffix (" hour");
    } else if (difference > DateUtils.MINUTE_IN_MILLIS) {
        formatterBuilder.appendMinutes ().appendSuffix (" minute");
    } else if (difference > DateUtils.SECOND_IN_MILLIS) {
        formatterBuilder.appendSeconds ().appendSuffix (" second");
    }

    String ends = formatterBuilder.printZeroNever ().toFormatter ().print (period);
    String plural = ends.startsWith ("1 ") ? "" : "s";
    return plural;
}
----------------------------------------

private final String toRelativeTime (LocalDateTime startTime, LocalDateTime endTime) {
    final String sufix = " ago";
    final Long seconds = ChronoUnit.SECONDS.between (startTime, endTime);
    final Long minutes = ChronoUnit.MINUTES.between (startTime, endTime);
    final Long hours = ChronoUnit.HOURS.between (startTime, endTime);
    final Long days = ChronoUnit.DAYS.between (startTime, endTime);
    final Long weeks = ChronoUnit.WEEKS.between (startTime, endTime);
    final Long months = ChronoUnit.MONTHS.between (startTime, endTime);
    final Long years = ChronoUnit.YEARS.between (startTime, endTime);
    if (years > 0) {
        return years.toString () + " " + checkPluralisation (years, "year", "years") + sufix;
    } else if (months > 0) {
        return months.toString () + " " + checkPluralisation (months, "month", "months") + sufix;
    } else if (weeks > 0) {
        return weeks.toString () + " " + checkPluralisation (weeks, "week", "weeks") + sufix;
    } else if (days > 0) {
        return days.toString () + " " + checkPluralisation (days, "day", "days") + sufix;
    } else if (hours > 0) {
        return hours.toString () + " " + checkPluralisation (hours, "hour", "hours") + sufix;
    } else if (minutes > 0) {
        return minutes.toString () + " " + checkPluralisation (minutes, "minute", "minutes") + sufix;
    } else {
        return seconds.toString () + " " + checkPluralisation (seconds, "second", "seconds") + sufix;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27982800_27982837_1_14
27982800_27982854_3_14
Title: count up positive integers loop 
----------------------------------------

public static void main (String [] args) {
    int i = 1;
    int limit = 10;
    while (i < limit) {
        if (i % 2 == 0) {
            System.out.println ("i = " + i);
        }
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int i = 1;
    int limit = 10;
    while (i < limit) {
        if (i % 2 == 0) {
            System.out.println ("i = " + i);
        }
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27994021_27994579_1_22
27994021_27995096_1_12
Title: Most elegant way to generate possible boolean combinations 
----------------------------------------

public static Iterator < Boolean [] > bool (final int n) {
    return new Iterator < Boolean [] > () {
        final BigInteger max = BigInteger.ONE.shiftLeft (n);
        BigInteger next = BigInteger.ZERO;
        @Override
        public boolean hasNext () {
            return next.compareTo (max) < 0;
        }@Override
        public Boolean [] next () {
            Boolean [] b = new Boolean [n];
            for (int i = 0;
            i < n; i ++) {
                b [i] = next.testBit (i);
            }
            next = next.add (BigInteger.ONE);
            return b;
        }}

    ;
}
----------------------------------------

public static List < boolean [] > bool (int n) {
    return IntStream.range (0, 1 << n).mapToObj (i -> BitSet.valueOf (new long [] {i})).map (bs -> {
        boolean [] a = new boolean [n];
        for (int i = 0;
        i < n; i ++) {
            a [n - i - 1] = bs.get (i);
        }
        return a;
    }).collect (Collectors.toList ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27999430_28000358_106_130
27999430_28000358_80_100
Title: JavaFX - Clickable line on canvas 
----------------------------------------

public void handle (MouseEvent t) {
    double offsetX = t.getSceneX () - orgSceneX;
    double offsetY = t.getSceneY () - orgSceneY;
    double newTranslateX = orgTranslateX + offsetX;
    double newTranslateY = orgTranslateY + offsetY;
    if (t.getSource () instanceof Circle) {
        Circle p = ((Circle) (t.getSource ()));
        p.setCenterX (newTranslateX);
        p.setCenterY (newTranslateY);
    } else {
        Node p = ((Node) (t.getSource ()));
        p.setTranslateX (newTranslateX);
        p.setTranslateY (newTranslateY);
    }
}
----------------------------------------

public void handle (MouseEvent t) {
    orgSceneX = t.getSceneX ();
    orgSceneY = t.getSceneY ();
    if (t.getSource () instanceof Circle) {
        Circle p = ((Circle) (t.getSource ()));
        orgTranslateX = p.getCenterX ();
        orgTranslateY = p.getCenterY ();
    } else {
        Node p = ((Node) (t.getSource ()));
        orgTranslateX = p.getTranslateX ();
        orgTranslateY = p.getTranslateY ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28023967_28028738_28_48
28023967_28028738_57_66
Title: Can't properly keep track of connected clients java 
----------------------------------------

private static Runnable run () {
    System.out.println ("(" + new SimpleDateFormat ("HH:mm:ss").format (new Date ()) + ") Started listening on port: " + port);
    ServerSocket socket = null;
    while (listening) {
        try {
            socket = new ServerSocket (port);
            try {
                SERVER_INSTANCE.acquire ();
                Socket clientSocket = socket.accept ();
                MultiThread connection = new MultiThread (clientSocket, arena, SERVER_INSTANCE);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        } catch (IOException e1) {
            e1.printStackTrace ();
        }
    }
    return null;
}
----------------------------------------

public void run () {
    try {
        serverInstance.acquire ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } finally {
        serverInstance.release ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28026022_28075161_115_125
28026022_28075161_50_63
Title: "Java threads in Queue once done with task need to sleep" 
----------------------------------------

public void run () {
    long now = System.currentTimeMillis ();
    Iterator < BusinessTaskCompletionData > it = tasksToRepeat.iterator ();
    while (it.hasNext ()) {
        BusinessTaskCompletionData data = it.next ();
        if (data.nextSubmitTime >= now) {
            workersPool.submit (data.businessTask);
            it.remove ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            Future < Repeatable > completedBusinessTask = completionService.take ();
            Repeatable repeatable = completedBusinessTask.get ();
            if (repeatable.shouldBeRepeated ()) {
                completedTasks.add (new BusinessTaskCompletionData (repeatable.reset (), System.currentTimeMillis () + repeatable.delayBeforeRepeat ()));
            }
        } catch (ExecutionException | InterruptedException ie) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28028380_30102834_1_18
28028380_33969972_1_18
Title: "Spring 4 JSON - HTTP Error 406 Not Acceptable" 
----------------------------------------

@RequestMapping (value = "/schedule", method = RequestMethod.GET, headers = "Accept=*/*", produces = "application/json")
public@ResponseBody
String getEventyJSON (Principal principal) throws JsonProcessingException {
    String name = principal.getName ();
    List < Eventy > eventy = userService.findOneWithEventy (name).getEventy ();
    List < HashMap < String, String > > events = new ArrayList < HashMap < String, String > > ();
    for (int i = 0;
    i < eventy.size (); i ++) {
        HashMap < String, String > map = new HashMap < String, String > ();
        map.put ("title", eventy.get (i).getTitle ());
        map.put ("start", eventy.get (i).getStart ());
        events.add (map);
    }
    ObjectMapper mapper = new ObjectMapper ();
    return mapper.writeValueAsString (events);
}
----------------------------------------

@RequestMapping (value = "/schedule", method = RequestMethod.GET, headers = "Accept=*/*", produces = "application/json")
public@ResponseBody
String getEventyJSON (Principal principal) throws JsonProcessingException {
    String name = principal.getName ();
    List < Eventy > eventy = userService.findOneWithEventy (name).getEventy ();
    List < HashMap < String, String > > events = new ArrayList < HashMap < String, String > > ();
    for (int i = 0;
    i < eventy.size (); i ++) {
        HashMap < String, String > map = new HashMap < String, String > ();
        map.put ("title", eventy.get (i).getTitle ());
        map.put ("start", eventy.get (i).getStart ());
        events.add (map);
    }
    ObjectMapper mapper = new ObjectMapper ();
    return mapper.writeValueAsString (events);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28033836_28034049_30_43
28033836_28034049_94_125
Title: Allow Java application to continue running while recording audio 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        AudioFormat format = getAudioFormat ();
        DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
        if (! AudioSystem.isLineSupported (info)) {
            System.out.println ("Line not supported");
            System.exit (0);
        }
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format);
        line.start ();
        System.out.println ("In utils.Recorder: Start capturing...");
        AudioInputStream ais = new AudioInputStream (line);
        System.out.println ("In utils.Recorder: Start recording...");
        System.out.println ("Is recoding");
        AudioSystem.write (ais, FILE_TYPE, new File ("Test.wav"));
    } catch (LineUnavailableException ex) {
        ex.printStackTrace ();
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    }
    System.out.println ("Recording is done");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28036468_28038718_18_30
28036468_28057626_2_10
Title: "How to save LinkedHashMap<Integer Integer>?" 
----------------------------------------

public void SaveHashMapToInternalStorage (String SavedData, LinkedHashMap < Integer, Integer > linkedHashMapList) throws FileNotFoundException, IOException {
    try {
        File fileOne = new File (SavedData);
        FileOutputStream fileOutputStream = new FileOutputStream (fileOne);
        ObjectOutputStream oos = new ObjectOutputStream (fileOutputStream);
        oos.writeObject (linkedHashMapList);
        oos.flush ();
        oos.close ();
        fileOutputStream.close ();
    } catch (Exception e) {
    }
}
----------------------------------------

public void SaveHashMapToInternalStorage (String SavedData, LinkedHashMap < Integer, Integer > linkedHashMapList) {
    try {
        FileOutputStream fos = this.openFileOutput (SavedData, Context.MODE_PRIVATE);
        ObjectOutputStream s = new ObjectOutputStream (fos);
        s.writeObject (linkedHashMapList);
        s.close ();
    } catch (Exception e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28036468_28038718_33_48
28036468_28057626_13_24
Title: "How to save LinkedHashMap<Integer Integer>?" 
----------------------------------------

public LinkedHashMap < Integer, Integer > LoadHashMapFromInternalStorage (String SavedData) throws IOException {
    LinkedHashMap < Integer, Integer > linkedHashMapList = new LinkedHashMap < Integer, Integer > ();
    try {
        File toRead = new File (SavedData);
        FileInputStream fileInputStream = new FileInputStream (toRead);
        ObjectInputStream objectInputStream = new ObjectInputStream (fileInputStream);
        linkedHashMapList = (LinkedHashMap < Integer, Integer >) objectInputStream.readObject ();
        objectInputStream.close ();
        fileInputStream.close ();
        for (Entry < Integer, Integer > m : linkedHashMapList.entrySet ()) {
            linkedHashMapList.put (m.getKey (), m.getValue ());
        }
    } catch (Exception e) {
    }
    return linkedHashMapList;
}
----------------------------------------

public LinkedHashMap < Integer, Integer > LoadHashMapFromInternalStorage (String SavedData) {
    LinkedHashMap < Integer, Integer > linkedHashMapLIST = new LinkedHashMap < Integer, Integer > ();
    try {
        FileInputStream fileInputStream = this.openFileInput (SavedData);
        ObjectInputStream objectInputStream = new ObjectInputStream (fileInputStream);
        linkedHashMapLIST = (LinkedHashMap < Integer, Integer >) objectInputStream.readObject ();
        objectInputStream.close ();
        fileInputStream.close ();
    } catch (Exception e) {
    }
    return linkedHashMapLIST;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28036940_28038012_5_25
28036940_28038026_7_22
Title: how can i make a username and password test method that doesnt overlap? 
----------------------------------------

public static void main (String [] args) {
    Scanner scn = new Scanner (System.in);
    System.out.println ("Enter the user name : ");
    String username = scn.next ();
    System.out.println ("Enter the password");
    String password = scn.next ();
    if (username.equals ("alex") && password.equals ("mightyducks")) {
        System.out.println ("You are now logged into the system!");
    } else if (username.equals ("emily") && password.equals ("cat")) {
        System.out.println ("You are now logged into the system!");
    } else {
        System.out.println ("Your username or password was invalid!");
    }

}
----------------------------------------

public static void main (String [] args) {
    Map < String, String > map = new HashMap < String, String > ();
    map.put ("alex", "mightyducks");
    map.put ("emily", "cat");
    Scanner reader = new Scanner (System.in);
    System.out.println ("Type your username:");
    String user = reader.nextLine ();
    System.out.println ("Type your password:");
    String pass = reader.nextLine ();
    reader.close ();
    if (null != map.get (user) && map.get (user).equals (pass)) {
        System.out.println ("You are now logged into the system!");
    } else {
        System.out.println ("Your username or password was invalid!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28047367_28047563_1_10
28047367_28047624_1_17
Title: "java.lang.NumberFormatException: Invalid int: ""android.support.v7.internal.widget.TintEditText" 
----------------------------------------

public void sumNumbers (View v) {
    EditText input1 = (EditText) findViewById (R.id.input1);
    int calc1 = Integer.parseInt (String.valueOf (input1.getText ()));
    EditText input2 = (EditText) findViewById (R.id.input2);
    int calc2 = Integer.parseInt (String.valueOf (input2.getText ()));
    int total = calc1 + calc2;
    String result = String.valueOf (total);
    EditText output1 = (EditText) findViewById (R.id.output);
    output1.setText (result);
}
----------------------------------------

public void sumNumbers (View v) {
    try {
        EditText input1 = (EditText) findViewById (R.id.input1);
        input1.setInputType (InputType.TYPE_NUMBER_FLAG_DECIMAL | InputType.TYPE_NUMBER_FLAG_SIGNED);
        int calc1 = Integer.parseInt (input1.getText ().toString ());
        EditText input2 = (EditText) findViewById (R.id.input2);
        input2.setInputType (InputType.TYPE_NUMBER_FLAG_DECIMAL | InputType.TYPE_NUMBER_FLAG_SIGNED);
        int calc2 = Integer.parseInt (input2.getText ().toString ());
        int total = calc1 + calc2;
        String result = String.valueOf (total);
        EditText output1 = (EditText) findViewById (R.id.output);
        output1.setText (result);
    } catch (NumberFormatException e) {
        Log.e ("NumberFormatException", e.getMessage ().toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28051983_28052494_2_17
28051983_47503927_1_19
Title: Convert alternate char to uppercase 
----------------------------------------

public static void main (String s []) {
    String testString = "TESTSTRING";
    String output = "";
    for (int i = 0;
    i < testString.length (); i ++) {
        if (i % 2 == 0) {
            output += Character.toUpperCase (testString.toCharArray () [i]);
        } else {
            output += Character.toLowerCase (testString.toCharArray () [i]);
        }
    }
    System.out.println ("Newly generated string is as follow: " + output);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter Stirng");
    String str = sc.nextLine ();
    for (int i = 0;
    i < str.length (); i ++) {
        if (i % 2 == 0) {
            System.out.print (Character.toLowerCase (str.charAt (i)));
        } else {
            System.out.print (Character.toUpperCase (str.charAt (i)));
        }
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28052851_28052952_1_16
28052851_28053378_1_12
Title: Beginner String Manipulation 
----------------------------------------

public String frontTimes (String str, int n) {
    String front;
    if (str.length () < 3) front = str;
    else front = str.substring (0, 3);

    String copies = "";
    while (n > 0) {
        copies = copies + front;
        n = n - 1;
    }
    return copies;
}
----------------------------------------

public String frontTimes (String str, int n) {
    if (str.length () > 3) str = str.substring (0, 3);

    StringBuilder sb = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder (str);
    while (n > 0) {
        if ((n & 1) == 1) sb.append (sb2);

        n /= 2;
        sb2.append (sb2);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28052851_28052952_1_16
28052851_28054102_1_21
Title: Beginner String Manipulation 
----------------------------------------

public String frontTimes (String str, int n) {
    String front;
    if (str.length () < 3) front = str;
    else front = str.substring (0, 3);

    String copies = "";
    while (n > 0) {
        copies = copies + front;
        n = n - 1;
    }
    return copies;
}
----------------------------------------

public String frontTimes (String str, int n) {
    String front;
    if (str.length () < 3) {
        front = str;
    } else {
        front = str.substring (0, 3);
    }
    String copies = "";
    for (int i = 0;
    i < n; i ++) {
        copies += front;
    }
    return copies;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28052851_28053378_1_12
28052851_28054102_1_21
Title: Beginner String Manipulation 
----------------------------------------

public String frontTimes (String str, int n) {
    if (str.length () > 3) str = str.substring (0, 3);

    StringBuilder sb = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder (str);
    while (n > 0) {
        if ((n & 1) == 1) sb.append (sb2);

        n /= 2;
        sb2.append (sb2);
    }
    return sb.toString ();
}
----------------------------------------

public String frontTimes (String str, int n) {
    String front;
    if (str.length () < 3) {
        front = str;
    } else {
        front = str.substring (0, 3);
    }
    String copies = "";
    for (int i = 0;
    i < n; i ++) {
        copies += front;
    }
    return copies;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28058186_28058289_1_15
28058186_28058356_1_10
Title: "Practicing Singly Linked List implementation stumped by my list reversal method throwing NullPointerException" 
----------------------------------------

private static Node reverseList (Node head) {
    Node reverseHead = getLastNode (head);
    Node reference = reverseHead;
    int counter = listSize;
    while (counter > 1) {
        Node temp = getPreviousNode (reference, head);
        Node last = getLastNode (reverseHead);
        temp.next = null;
        last.next = temp;
        reference = temp;
        counter --;
    }
    return reverseHead;
}
----------------------------------------

private static Node reverseList (Node head) {
    Node res = null;
    while (head != null) {
        Node node = new Node (head.value);
        node.next = res;
        res = node;
        head = head.next;
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28060141_28102244_26_36
28060141_28102244_46_55
Title: Parse search query with Lucene and build Hibernate criteria based on that 
----------------------------------------

private Criterion parse (BooleanQuery query) {
    if (query.getClauses ().length == 1) {
        return parse (query.getClauses () [0].getQuery ());
    }
    Junction junction = createJunction (query.getClauses () [0]);
    for (BooleanClause clause : query.getClauses ()) {
        junction.add (parse (clause.getQuery ()));
    }
    return junction;
}
----------------------------------------

private Criterion parse (PhraseQuery query) {
    String field = query.getTerms () [0].field ();
    StringBuilder phraseBuilder = new StringBuilder ();
    for (Term term : query.getTerms ()) {
        phraseBuilder.append (term.text ());
        phraseBuilder.append (" ");
    }
    return createNameValueRestriction (field, phraseBuilder.toString ().trim ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28060141_28102244_26_36
28060141_28102244_5_19
Title: Parse search query with Lucene and build Hibernate criteria based on that 
----------------------------------------

private Criterion parse (BooleanQuery query) {
    if (query.getClauses ().length == 1) {
        return parse (query.getClauses () [0].getQuery ());
    }
    Junction junction = createJunction (query.getClauses () [0]);
    for (BooleanClause clause : query.getClauses ()) {
        junction.add (parse (clause.getQuery ()));
    }
    return junction;
}
----------------------------------------

private Criterion parse (Query query) {
    if (query instanceof TermQuery) {
        return parse ((TermQuery) query);
    } else if (query instanceof BooleanQuery) {
        return parse ((BooleanQuery) query);
    } else if (query instanceof PhraseQuery) {
        return parse ((PhraseQuery) query);
    } else if (query instanceof PrefixQuery) {
        return parse ((PrefixQuery) query);
    } else if (query instanceof WildcardQuery) {
        return parse ((WildcardQuery) query);
    } else {
        LOG.error (String.format ("%s unsupported", query.getClass ()));
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28060141_28102244_46_55
28060141_28102244_5_19
Title: Parse search query with Lucene and build Hibernate criteria based on that 
----------------------------------------

private Criterion parse (PhraseQuery query) {
    String field = query.getTerms () [0].field ();
    StringBuilder phraseBuilder = new StringBuilder ();
    for (Term term : query.getTerms ()) {
        phraseBuilder.append (term.text ());
        phraseBuilder.append (" ");
    }
    return createNameValueRestriction (field, phraseBuilder.toString ().trim ());
}
----------------------------------------

private Criterion parse (Query query) {
    if (query instanceof TermQuery) {
        return parse ((TermQuery) query);
    } else if (query instanceof BooleanQuery) {
        return parse ((BooleanQuery) query);
    } else if (query instanceof PhraseQuery) {
        return parse ((PhraseQuery) query);
    } else if (query instanceof PrefixQuery) {
        return parse ((PrefixQuery) query);
    } else if (query instanceof WildcardQuery) {
        return parse ((WildcardQuery) query);
    } else {
        LOG.error (String.format ("%s unsupported", query.getClass ()));
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28071078_43331602_12_53
28071078_50884316_11_30
Title: Mongodb Java: remove an element of an embedded array within a document based on certain condition of elements 
----------------------------------------

public static void main (String [] args) {
    MongoClient client = new MongoClient ();
    MongoDatabase database = client.getDatabase ("school");
    MongoCollection < Document > collection = database.getCollection ("students");
    List < Document > all = collection.find ().into (new ArrayList < Document > ());
    int i = 0;
    Double s1 = 0.0;
    Double s2 = 0.0;
    Document doc1 = null;
    Document doc2 = null;
    for (Document cur : all) {
        List < Document > scores = (List < Document >) cur.get ("scores");
        for (Document score : scores) {
            if (score.getString ("type").equals ("homework")) {
                if (i == 0) {
                    i ++;
                    s1 = (Double) score.get ("score");
                    doc1 = score;
                } else {
                    i --;
                    s2 = (Double) score.get ("score");
                    doc2 = score;
                    if (s1 < s2) {
                        doc1.clear ();
                        collection.replaceOne (new Document ("_id", cur.get ("_id")), cur);
                    } else {
                        doc2.clear ();
                        collection.replaceOne (new Document ("_id", cur.get ("_id")), cur);
                    }
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    MongoDatabase database;
    try (MongoClient client = new MongoClient ()) {
        database = client.getDatabase ("school");
        MongoCollection < Document > collection = database.getCollection ("students");
        List < Document > students = collection.find ().into (new ArrayList < > ());
        for (Document student : students) {
            Document lowestScore = null;
            for (Document score : (List < Document >) student.get ("scores")) {
                if (score.getString ("type").equals ("homework")) {
                    if (lowestScore == null || score.getDouble ("score") < (lowestScore.getDouble ("score"))) {
                        lowestScore = score;
                    }
                }
            }
            collection.updateOne (student, pull ("scores", lowestScore));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28071078_43331602_12_53
28071078_51993892_1_32
Title: Mongodb Java: remove an element of an embedded array within a document based on certain condition of elements 
----------------------------------------

public static void main (String [] args) {
    MongoClient client = new MongoClient ();
    MongoDatabase database = client.getDatabase ("school");
    MongoCollection < Document > collection = database.getCollection ("students");
    List < Document > all = collection.find ().into (new ArrayList < Document > ());
    int i = 0;
    Double s1 = 0.0;
    Double s2 = 0.0;
    Document doc1 = null;
    Document doc2 = null;
    for (Document cur : all) {
        List < Document > scores = (List < Document >) cur.get ("scores");
        for (Document score : scores) {
            if (score.getString ("type").equals ("homework")) {
                if (i == 0) {
                    i ++;
                    s1 = (Double) score.get ("score");
                    doc1 = score;
                } else {
                    i --;
                    s2 = (Double) score.get ("score");
                    doc2 = score;
                    if (s1 < s2) {
                        doc1.clear ();
                        collection.replaceOne (new Document ("_id", cur.get ("_id")), cur);
                    } else {
                        doc2.clear ();
                        collection.replaceOne (new Document ("_id", cur.get ("_id")), cur);
                    }
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    MongoClient client = new MongoClient ();
    MongoDatabase database = client.getDatabase ("school");
    MongoCollection < Document > collection = database.getCollection ("students");
    List < Document > homeworks = collection.find ().into (new ArrayList < Document > ());
    for (Document doc : homeworks) {
        ArrayList < Document > scores = (ArrayList < Document >) doc.get ("scores");
        double lowestHomework = Double.MAX_VALUE;
        for (Document embeddedDoc : scores) {
            if (embeddedDoc.getString ("type").equals ("homework")) {
                Double score = embeddedDoc.getDouble ("score");
                if (score < lowestHomework) {
                    lowestHomework = score;
                }
            }
        }
        Bson studentFilter = Filters.eq ("_id", doc.get ("_id"));
        Bson delete = Updates.pull ("scores", new Document ("score", lowestHomework).append ("type", "homework"));
        collection.updateOne (studentFilter, delete);
    }
    client.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28071078_50884316_11_30
28071078_51993892_1_32
Title: Mongodb Java: remove an element of an embedded array within a document based on certain condition of elements 
----------------------------------------

public static void main (String [] args) {
    MongoDatabase database;
    try (MongoClient client = new MongoClient ()) {
        database = client.getDatabase ("school");
        MongoCollection < Document > collection = database.getCollection ("students");
        List < Document > students = collection.find ().into (new ArrayList < > ());
        for (Document student : students) {
            Document lowestScore = null;
            for (Document score : (List < Document >) student.get ("scores")) {
                if (score.getString ("type").equals ("homework")) {
                    if (lowestScore == null || score.getDouble ("score") < (lowestScore.getDouble ("score"))) {
                        lowestScore = score;
                    }
                }
            }
            collection.updateOne (student, pull ("scores", lowestScore));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    MongoClient client = new MongoClient ();
    MongoDatabase database = client.getDatabase ("school");
    MongoCollection < Document > collection = database.getCollection ("students");
    List < Document > homeworks = collection.find ().into (new ArrayList < Document > ());
    for (Document doc : homeworks) {
        ArrayList < Document > scores = (ArrayList < Document >) doc.get ("scores");
        double lowestHomework = Double.MAX_VALUE;
        for (Document embeddedDoc : scores) {
            if (embeddedDoc.getString ("type").equals ("homework")) {
                Double score = embeddedDoc.getDouble ("score");
                if (score < lowestHomework) {
                    lowestHomework = score;
                }
            }
        }
        Bson studentFilter = Filters.eq ("_id", doc.get ("_id"));
        Bson delete = Updates.pull ("scores", new Document ("score", lowestHomework).append ("type", "homework"));
        collection.updateOne (studentFilter, delete);
    }
    client.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28071700_28073026_141_151
28071700_28073026_162_172
Title: JavaFX: compatibility issue between Java 7.4 and Java 8 
----------------------------------------

public TableCell < Person, Boolean > call (TableColumn < Person, Boolean > column) {
    return new CheckBoxCell < Person > (new Callback < Person, BooleanProperty > () {
        @Override
        public BooleanProperty call (Person person) {
            return person.emailProperty ();
        }}

    );
}
----------------------------------------

public TableCell < Person, Boolean > call (TableColumn < Person, Boolean > column) {
    return new CheckBoxCell < Person > (new Callback < Person, BooleanProperty > () {
        @Override
        public BooleanProperty call (Person person) {
            return person.phoneProperty ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28071700_28073026_286_298
28071700_28073026_345_357
Title: JavaFX: compatibility issue between Java 7.4 and Java 8 
----------------------------------------

public void changed (ObservableValue < ? extends Person > observable, Person oldValue, Person newValue) {
    if (oldValue != null) {
        oldValue.emailProperty ().removeListener (propertyListener);
        oldValue.phoneProperty ().removeListener (propertyListener);
    }
    if (newValue != null) {
        newValue.emailProperty ().addListener (propertyListener);
        newValue.phoneProperty ().addListener (propertyListener);
        updateCheckBox ();
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends Boolean > observable, Boolean oldValue, Boolean newValue) {
    @SuppressWarnings ("unchecked")
    TableRow < T > row = getTableRow ();
    if (row != null) {
        T item = row.getItem ();
        if (item != null) {
            BooleanProperty property = propertyMapper.call (item);
            property.set (newValue);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28082040_28082264_15_48
28082040_28082264_23_39
Title: How to write A ServerSocket which accept multiple clicent Socket? 
----------------------------------------

public void run () {
    while (true) {
        try {
            System.out.println ("Waiting for connect to client");
            final Socket s1 = serverSocket.accept ();
            executor.execute (new Runnable () {
                public void run () {
                    try {
                        System.out.println ("Connection received from " + s1.getInetAddress ().getHostName ());
                        InputStream s1In = s1.getInputStream ();
                        DataInputStream dis = new DataInputStream (s1In);
                        String st = dis.readUTF ();
                        System.out.println (st);
                        s1In.close ();
                        dis.close ();
                        s1.close ();
                    } catch (Exception e) {
                        System.out.println ("Exceptiopn: " + e);
                    }
                }}

            );
        } catch (IOException ex) {
            Logger.getLogger (SimpleServer.class.getName ()).log (Level.SEVERE, null, ex);
        } catch (Exception e) {
            System.out.println ("Exceptiopn: " + e);
        }
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("Connection received from " + s1.getInetAddress ().getHostName ());
        InputStream s1In = s1.getInputStream ();
        DataInputStream dis = new DataInputStream (s1In);
        String st = dis.readUTF ();
        System.out.println (st);
        s1In.close ();
        dis.close ();
        s1.close ();
    } catch (Exception e) {
        System.out.println ("Exceptiopn: " + e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28084491_28104178_96_112
28084491_39907741_18_28
Title: JComboBox preventing of popup closing 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (value instanceof Item) {
        if (((Item) value).isEnabled ()) {
            setForeground (isSelected ? list.getSelectionForeground () : list.getForeground ());
            setBackground (isSelected ? list.getSelectionBackground () : list.getBackground ());
        } else {
            setForeground (UIManager.getColor ("Label.disabledForeground"));
            setBackground (list.getBackground ());
        }
    } else {
        setForeground (isSelected ? list.getSelectionForeground () : list.getForeground ());
        setBackground (isSelected ? list.getSelectionBackground () : list.getBackground ());
    }
    return this;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    if (index == - 1) {
        if (select_action_performed) {
            showPopup ();
            select_action_performed = false;
        }
        return r;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28099633_28099662_1_11
28099633_28099670_1_16
Title: Try-Catch block termination 
----------------------------------------

public T pop () {
    T temp = null;
    try {
        temp = first.data;
        first = first.next;
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    return temp;
}
----------------------------------------

public T pop () {
    T temp = null;
    try {
        temp = first.data;
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    first = first.next;
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28099633_28099662_1_11
28099633_28099705_1_18
Title: Try-Catch block termination 
----------------------------------------

public T pop () {
    T temp = null;
    try {
        temp = first.data;
        first = first.next;
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    return temp;
}
----------------------------------------

public T pop () {
    T temp = null;
    try {
        if (first != null) {
            temp = first.data;
            first = first.next;
        }
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28099633_28099670_1_16
28099633_28099705_1_18
Title: Try-Catch block termination 
----------------------------------------

public T pop () {
    T temp = null;
    try {
        temp = first.data;
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    first = first.next;
    return temp;
}
----------------------------------------

public T pop () {
    T temp = null;
    try {
        if (first != null) {
            temp = first.data;
            first = first.next;
        }
    } catch (Exception e) {
        System.out.println ("Invalid operation on an empty stack");
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28106062_28106345_1_13
28106062_28106504_1_18
Title: Java Comparing Strings in Array 
----------------------------------------

public static String gooD (String...arr) {
    int max = 0;
    String best = "";
    for (String s : arr) {
        String t = s.replaceAll ("\\dx", "");
        int d = s.length () - t.length ();
        if (d > max) {
            max = d;
            best = s;
        }
    }
    return best;
}
----------------------------------------

public String gooD (String arr []) {
    Pattern pattern = Pattern.compile ("\\dx");
    String candidate = "";
    int max = 0;
    for (String s : arr) {
        Matcher matcher = pattern.matcher (s);
        int current = 0;
        while (matcher.find ()) {
            current ++;
        }
        if (current > max) {
            max = current;
            candidate = s;
        }
    }
    return candidate;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28106062_28106345_1_13
28106062_28108490_1_24
Title: Java Comparing Strings in Array 
----------------------------------------

public static String gooD (String...arr) {
    int max = 0;
    String best = "";
    for (String s : arr) {
        String t = s.replaceAll ("\\dx", "");
        int d = s.length () - t.length ();
        if (d > max) {
            max = d;
            best = s;
        }
    }
    return best;
}
----------------------------------------

public String gooD (String arr []) {
    String digits = "0123456789";
    int low = 0;
    int ilow = 0;
    int check = 0;
    String s;
    String d = "";
    for (int i = 0;
    i < arr.length; i ++) {
        s = arr [i];
        check = 0;
        for (int j = 0;
        j < s.length () - 1; j ++) {
            if (digits.indexOf (s.substring (j, j + 1)) != - 1) {
                if (s.substring (j + 1, j + 2).equals ("x")) {
                    check += 1;
                }
            }
        }
        if (check > low) {
            low = check;
            ilow = i;
        }
    }
    return arr [ilow];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28106062_28106504_1_18
28106062_28108490_1_24
Title: Java Comparing Strings in Array 
----------------------------------------

public String gooD (String arr []) {
    Pattern pattern = Pattern.compile ("\\dx");
    String candidate = "";
    int max = 0;
    for (String s : arr) {
        Matcher matcher = pattern.matcher (s);
        int current = 0;
        while (matcher.find ()) {
            current ++;
        }
        if (current > max) {
            max = current;
            candidate = s;
        }
    }
    return candidate;
}
----------------------------------------

public String gooD (String arr []) {
    String digits = "0123456789";
    int low = 0;
    int ilow = 0;
    int check = 0;
    String s;
    String d = "";
    for (int i = 0;
    i < arr.length; i ++) {
        s = arr [i];
        check = 0;
        for (int j = 0;
        j < s.length () - 1; j ++) {
            if (digits.indexOf (s.substring (j, j + 1)) != - 1) {
                if (s.substring (j + 1, j + 2).equals ("x")) {
                    check += 1;
                }
            }
        }
        if (check > low) {
            low = check;
            ilow = i;
        }
    }
    return arr [ilow];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28115790_28116792_41_58
28115790_28116792_65_74
Title: Thread pools and stopping execution of a for loop when a counter reaches X 
----------------------------------------

public void run () {
    if (errorCondition.get ()) {
        System.out.println ("%%% MAX_ERRORS of [" + MAX_ERRORS + "] occurred, skipping task");
        return;
    }
    if (rand.nextBoolean ()) {
        System.out.println ("+++ GOOD RESULT");
        submitDoneTask (true);
    } else {
        System.out.println ("*** BAD RESULT");
        submitDoneTask (false);
    }
}
----------------------------------------

public void run () {
    if (! errorCondition.get () && success) {
        errorCount.set (0);
    } else {
        int errors = errorCount.incrementAndGet ();
        if (errors >= MAX_ERRORS) {
            errorCondition.set (true);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28119255_28119691_51_62
28119255_28119691_84_96
Title: Reading first N bytes of a file as an InputStream in Java? 
----------------------------------------

public int read (byte [] buf, int off, int len) throws IOException {
    if (bytesRemaining > 0) {
        int nRead = data.read (buf, off, (int) Math.min (len, bytesRemaining));
        bytesRemaining -= nRead;
        return nRead;
    } else {
        return - 1;
    }
}
----------------------------------------

public int read () throws IOException {
    if (bytesRemaining > 0) {
        int c = data.read ();
        if (c >= 0) {
            bytesRemaining -= 1;
        }
        return c;
    } else {
        return - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28129896_28130279_22_31
28129896_28130476_23_48
Title: How do I call a method from an action listener without the JFrame freezing and waiting for the action listener to complete? 
----------------------------------------

public void run () {
    try {
        EnablePage frame = new EnablePage ();
        frame.pack ();
        frame.setLocationRelativeTo (null);
        frame.setVisible (true);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    frame = new JFrame ("Clock");
    frame.setDefaultCloseOperation (JFrame.DO_NOTHING_ON_CLOSE);
    frame.addWindowListener (new WindowAdapter () {
        @Override
        public void windowClosing (WindowEvent event) {
            exitProcedure ();
        }}

    );
    JPanel panel = new JPanel ();
    clockDisplay = new JTextField (12);
    clockDisplay.setEditable (false);
    clockDisplay.setHorizontalAlignment (JTextField.CENTER);
    panel.add (clockDisplay);
    frame.add (panel);
    frame.pack ();
    frame.setLocationByPlatform (true);
    frame.setVisible (true);
    timer = new Timer (this);
    new Thread (timer).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28140153_28140212_1_15
28140153_28140315_5_14
Title: How to get a user-input string as an array of individual characters? 
----------------------------------------

public static void main (String [] args) {
    Scanner userInput = new Scanner (System.in);
    String name = userInput.nextLine ();
    int arrayLength = name.length ();
    String ArrayName [] = new String [arrayLength];
    char [] chars = name.toCharArray ();
    for (int counter = 0;
    counter < arrayLength; counter ++) {
        ArrayName [counter] = chars [counter] + "";
        System.out.println ("Element No" + counter + ": " + name.substring (counter));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner userInput = new Scanner (System.in);
    String name = userInput.nextLine ();
    char [] nameArray = name.toCharArray ();
    for (int counter = 0;
    counter < nameArray.length; counter ++) {
        System.out.println ("Element No" + counter + ": " + nameArray [counter]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2816005_2816403_22_30
2816005_2816403_34_46
Title: communication between threads in java: stopping a thread if another thread has finished 
----------------------------------------

public void run () {
    while (Test.keepRunning) {
        try {
            String msg = Test.msgBuf.take ();
            System.out.println ("Eating " + msg);
        } catch (InterruptedException ie) {
        }
    }
}
----------------------------------------

public void run () {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String in;
    try {
        while (! (in = br.readLine ()).equals ("quit")) {
            System.out.println ("Feeding " + in);
            Test.msgBuf.offer (in);
        }
    } catch (IOException e) {
    }
    Test.keepRunning = false;
    Test.thread2.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28160643_28160689_55_64
28160643_28160755_33_48
Title: Close JFrame pane when button is clicked 
----------------------------------------

public void actionPerformed (ActionEvent actionEvent) {
    AbstractButton abstractButton = (AbstractButton) actionEvent.getSource ();
    boolean selected = abstractButton.getModel ().isSelected ();
    if (selected) {
        button.setText ("X");
    } else {
        button.setText ("");
    }
    SwingUtilities.getWindowAncestor (button).dispose ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (getSeatDialog == null) {
        Window win = SwingUtilities.getWindowAncestor (APlaneJToggleTest.this);
        getSeatDialog = new JDialog (win, "Choose Seat", ModalityType.APPLICATION_MODAL);
        getSeatDialog.add (aPlaneJToggle.getMainPanel ());
        getSeatDialog.setResizable (false);
        getSeatDialog.pack ();
    }
    getSeatDialog.setVisible (true);
    ButtonModel model = aPlaneJToggle.getSelectedModel ();
    if (model != null) {
        String actionCommand = model.getActionCommand ();
        seatListModel.addElement (actionCommand);
        aPlaneJToggle.clear ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28163366_28163565_11_21
28163366_28163565_23_60
Title: "How would I add the data from one class to another class' JTable by JButton?" 
----------------------------------------

public InterviewPane (Interview interview) {
    this ();
    this.interview = interview;
    if (interview != null) {
        queueNumber.setValue (interview.getQueueNumber ());
        time.setValue (interview.getTime ());
        name.setText (interview.getName ());
        interviewer.setText (interview.getInterviewer ());
        room.setSelectedItem (interview.getRoom ());
    }
}
----------------------------------------

public InterviewPane () {
    queueNumber = new JSpinner ();
    time = new JSpinner ();
    SpinnerDateModel sm = new SpinnerDateModel (new Date (), null, null, Calendar.MINUTE);
    time = new JSpinner (sm);
    JSpinner.DateEditor de = new JSpinner.DateEditor (time, "hh:mm a");
    name = new JTextField (10);
    interviewer = new JTextField (10);
    room = new JComboBox ();
    room.setModel (new DefaultComboBoxModel (new String [] {" ", "Circle Room", "Square Room", "Triangle Room", "Pentagon Room", "Rectangle Room"}));
    setLayout (new GridBagLayout ());
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.anchor = GridBagConstraints.WEST;
    add (new JLabel ("Queue Number: "), gbc);
    gbc.gridy ++;
    add (new JLabel ("Name: "), gbc);
    gbc.gridy ++;
    add (new JLabel ("Interviewer: "), gbc);
    gbc.gridy ++;
    add (new JLabel ("Time: "), gbc);
    gbc.gridy ++;
    add (new JLabel ("Room: "), gbc);
    gbc.gridx ++;
    gbc.gridy = 0;
    add (queueNumber, gbc);
    gbc.gridy ++;
    add (name, gbc);
    gbc.gridy ++;
    add (interviewer, gbc);
    gbc.gridy ++;
    add (time, gbc);
    gbc.gridy ++;
    add (room, gbc);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28164990_28165241_1_20
28164990_30487456_32_55
Title: how to run the main thread after all child threads have completed there exceution 
----------------------------------------

public static void main (String...args) {
    final CountDownLatch latch = new CountDownLatch (28);
    for (int i = 0;
    i < 28; i ++) {
        Thread t = new Thread (new Runnable () {
            public void run () {
                try {
                } finally {
                    latch.countDown ();
                }
            }}

        );
        t.start ();
    }
    latch.await ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    int n = 1000;
    int tn = 10;
    int from = 1;
    int to;
    int sum = 0;
    Sum [] sumArray = new Sum [tn];
    final CountDownLatch latch = new CountDownLatch (tn);
    for (int i = 0;
    i < tn; i ++) {
        to = from + n / tn;
        Sum s = new Sum (from, to, latch);
        sumArray [i] = s;
        s.start ();
        from = to;
    }
    latch.await ();
    for (int i = 0;
    i < tn; i ++) {
        sum += sumArray [i].getSum ();
    }
    System.out.println (sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28168396_28171505_6_19
28168396_28173004_17_28
Title: Best way to use value generated by thread on different class 
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
    } catch (final InterruptedException e) {
        e.printStackTrace ();
    }
    result = "Result " + System.currentTimeMillis ();
    System.out.println ("Worker has result:" + result);
    synchronized (this) {
        notifyAll ();
    }
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    result = " Thread done at " + System.currentTimeMillis ();
    System.out.println ("result calculated");
    resultDone = true;
    synchronized (resultLock) {
        resultLock.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28179935_28206116_47_65
28179935_28206116_78_95
Title: How to cange a the cursor type by clicking on a button in JavaFX? 
----------------------------------------

public void run () {
    try {
        sleep (3000);
    } catch (Throwable th) {
        th.printStackTrace ();
    } finally {
        Platform.runLater (() -> {
            primaryStage.getScene ().setCursor (Cursor.DEFAULT);
        });
    }
}
----------------------------------------

public void run () {
    try {
        sleep (3000);
    } catch (Throwable th) {
        th.printStackTrace ();
    } finally {
        Platform.runLater (() -> {
            button.setCursor (null);
        });
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185210_2_17
28185130_28185376_2_20
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String arg []) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (j == i - 1) {
                System.out.print (i);
            } else {
                System.out.print (i + "*");
            }
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int n;
    n = 3;
    for (int i = 1;
    i < 2 * n; i ++) {
        if (i <= n) {
            for (int j = 1;
            j < i; j ++) {
                System.out.print (i + "*");
            }
            System.out.println (i);
        } else {
            for (int j = i + 1;
            j < 2 * n; j ++) {
                System.out.print (2 * n - i + "*");
            }
            System.out.println (2 * n - i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185210_2_17
28185130_28185412_1_16
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String arg []) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (j == i - 1) {
                System.out.print (i);
            } else {
                System.out.print (i + "*");
            }
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String arg []) {
    int iterations = 3;
    for (int i = 1;
    i <= iterations; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
    for (int i = iterations - 1;
    i >= 1; i --) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185210_2_17
28185130_28185891_1_21
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String arg []) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (j == i - 1) {
                System.out.print (i);
            } else {
                System.out.print (i + "*");
            }
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int limit = 5;
    int rows = limit + (limit - 1);
    int center = (int) Math.ceil (((double) rows / 2));
    boolean centerReached = false;
    for (int i = 1;
    i <= limit && i > 0;) {
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (i);
            if (i == j) continue;

            System.out.print ("*");
        }
        if (center == i) centerReached = true;

        if (centerReached) i --;
        else i ++;

        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185376_2_20
28185130_28185412_1_16
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String [] args) {
    int n;
    n = 3;
    for (int i = 1;
    i < 2 * n; i ++) {
        if (i <= n) {
            for (int j = 1;
            j < i; j ++) {
                System.out.print (i + "*");
            }
            System.out.println (i);
        } else {
            for (int j = i + 1;
            j < 2 * n; j ++) {
                System.out.print (2 * n - i + "*");
            }
            System.out.println (2 * n - i);
        }
    }
}
----------------------------------------

public static void main (String arg []) {
    int iterations = 3;
    for (int i = 1;
    i <= iterations; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
    for (int i = iterations - 1;
    i >= 1; i --) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185376_2_20
28185130_28185891_1_21
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String [] args) {
    int n;
    n = 3;
    for (int i = 1;
    i < 2 * n; i ++) {
        if (i <= n) {
            for (int j = 1;
            j < i; j ++) {
                System.out.print (i + "*");
            }
            System.out.println (i);
        } else {
            for (int j = i + 1;
            j < 2 * n; j ++) {
                System.out.print (2 * n - i + "*");
            }
            System.out.println (2 * n - i);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int limit = 5;
    int rows = limit + (limit - 1);
    int center = (int) Math.ceil (((double) rows / 2));
    boolean centerReached = false;
    for (int i = 1;
    i <= limit && i > 0;) {
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (i);
            if (i == j) continue;

            System.out.print ("*");
        }
        if (center == i) centerReached = true;

        if (centerReached) i --;
        else i ++;

        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28185130_28185412_1_16
28185130_28185891_1_21
Title: "How to print number and ""*"" combination in java" 
----------------------------------------

public static void main (String arg []) {
    int iterations = 3;
    for (int i = 1;
    i <= iterations; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
    for (int i = iterations - 1;
    i >= 1; i --) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (i == 1 || j == i - 1 ? i : i + "*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int limit = 5;
    int rows = limit + (limit - 1);
    int center = (int) Math.ceil (((double) rows / 2));
    boolean centerReached = false;
    for (int i = 1;
    i <= limit && i > 0;) {
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (i);
            if (i == j) continue;

            System.out.print ("*");
        }
        if (center == i) centerReached = true;

        if (centerReached) i --;
        else i ++;

        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28192588_28192817_4_12
28192588_28193139_5_14
Title: java recursion print number with just 1 parameter 
----------------------------------------

public static String func (String tmp, int num) {
    if (num > 0) {
        String res = tmp + num;
        System.out.println (res);
        return func (res, num - 1);
    } else {
        return tmp;
    }
}
----------------------------------------

public static String func (int num) {
    String numStr = num + "";
    int lastDigit = Integer.valueOf (numStr.substring (numStr.length () - 1)).intValue ();
    if (lastDigit == 0) {
        return numStr.substring (0, numStr.length () - 1);
    }
    System.out.println (numStr);
    int newNum = num * 10 + lastDigit - 1;
    return func (newNum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28194571_28272107_12_22
28194571_28272363_47_75
Title: Add progress bar in JavaFX table pagination 
----------------------------------------

protected ObservableList < Sample > call () throws Exception {
    for (int i = 0;
    i < 99; i ++) {
        Thread.sleep (20);
        updateProgress (i, 100);
    }
    int fromIndex = pageIndex * rowsPerPage;
    int toIndex = Math.min (fromIndex + rowsPerPage, data.size ());
    return (FXCollections.observableArrayList (data.subList (fromIndex, toIndex)));
}
----------------------------------------

public Node call (final Integer pageIndex) {
    progressIndicator.setVisible (true);
    dataList.clear ();
    new Thread () {
        public void run () {
            try {
                int fromIndex = pageIndex * rowsPerPage;
                int toIndex = Math.min (fromIndex + rowsPerPage, dataSize);
                List < Sample > loadedList = loadData (fromIndex, toIndex);
                Platform.runLater (() -> dataList.setAll (loadedList));
            } finally {
                Platform.runLater (() -> progressIndicator.setVisible (false));
            }
        }}

    .start ();
    return tablePane;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28200425_28200665_109_117
28200425_28200665_96_106
Title: readLine of BufferedReader does not change file pointer even if buffer size is small 
----------------------------------------

public synchronized int read (byte [] b, int off, int len) throws IOException {
    if (length != null && bytesRead >= length) {
        return - 1;
    }
    final int reducedLength = computeReducedLength (len);
    int numberOfBytesRead = randomAccessFile.read (b, off, reducedLength);
    bytesRead += numberOfBytesRead;
    return numberOfBytesRead;
}
----------------------------------------

public synchronized int read () throws IOException {
    if (length != null && bytesRead >= length) {
        return - 1;
    }
    int value = randomAccessFile.read ();
    if (value != - 1) {
        bytesRead ++;
    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28206950_28207024_119_127
28206950_28207024_98_106
Title: (JAVA) moving clipping area by keylistener 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    yAxis += delta;
    if (yAxis > getHeight ()) {
        yAxis = getHeight () - 50;
    } else if (yAxis < 0) {
        yAxis = 0;
    }

    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    xAxis += delta;
    if (yAxis > getWidth ()) {
        yAxis = getWidth () - 50;
    } else if (yAxis < 0) {
        yAxis = 0;
    }

    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28214457_28215073_31_51
28214457_28215793_63_76
Title: Java split string with combinations 
----------------------------------------

public static void main (String [] argvs) {
    stringList.add ("");
    String input = "a-b-c-d|e-f";
    for (String s : input.split ("\\-")) {
        if (s.contains ("|")) {
            forkStringList ();
            addTowElems (s.split ("\\|") [0], s.split ("\\|") [1]);
        } else {
            addOneElem (s);
        }
    }
    System.out.println (stringList);
}
----------------------------------------

public static void main (final String [] args) {
    final PathParser pathParser = new PathParser ();
    final String input = "element1-element2-element3-element4a|element4b|element4c-element5-element6a|element6b|element6c";
    System.out.println ("Input");
    System.out.println (input);
    System.out.println ();
    final List < String > paths = pathParser.parse (input);
    System.out.println ("Output");
    for (final String path : paths) {
        System.out.println (path);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28214457_28215073_31_51
28214457_28217496_2_58
Title: Java split string with combinations 
----------------------------------------

public static void main (String [] argvs) {
    stringList.add ("");
    String input = "a-b-c-d|e-f";
    for (String s : input.split ("\\-")) {
        if (s.contains ("|")) {
            forkStringList ();
            addTowElems (s.split ("\\|") [0], s.split ("\\|") [1]);
        } else {
            addOneElem (s);
        }
    }
    System.out.println (stringList);
}
----------------------------------------

public static void main (String arg []) {
    String input = "a-b|c-d|e-f|g-h";
    String [] primeTokens = input.split ("-");
    String [] level2Tokens = null;
    String element = "";
    String level2element = "";
    ArrayList stringList = new ArrayList ();
    ArrayList level1List = new ArrayList ();
    ArrayList level2List = new ArrayList ();
    for (int i = 0;
    i < primeTokens.length; i ++) {
        if (primeTokens [i].contains ("|")) {
            level2Tokens = primeTokens [i].split ("\\|");
            for (int j = 0;
            j < level2Tokens.length; j ++) {
                for (int k = 0;
                k < stringList.size (); k ++) {
                    element = (String) stringList.get (k);
                    level2element = element + level2Tokens [j];
                    level2List.add (level2element);
                }
            }
            stringList = new ArrayList ();
            for (int w = 0;
            w < level2List.size (); w ++) {
                stringList.add (level2List.get (w));
            }
            level2List = new ArrayList ();
        } else {
            if (stringList.size () > 0) {
                for (int z = 0;
                z < stringList.size (); z ++) {
                    element = (String) stringList.get (z);
                    element = element + primeTokens [i];
                    level1List.add (element);
                }
                stringList = new ArrayList ();
                for (int w = 0;
                w < level1List.size (); w ++) {
                    stringList.add (level1List.get (w));
                }
                level1List = new ArrayList ();
            } else {
                element = element + primeTokens [i];
                if (stringList.size () == 0) {
                    stringList.add (element);
                }
            }
        }
    }
    for (int q = 0;
    q < stringList.size (); q ++) {
        System.out.println (stringList.get (q));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28214457_28215793_63_76
28214457_28217496_2_58
Title: Java split string with combinations 
----------------------------------------

public static void main (final String [] args) {
    final PathParser pathParser = new PathParser ();
    final String input = "element1-element2-element3-element4a|element4b|element4c-element5-element6a|element6b|element6c";
    System.out.println ("Input");
    System.out.println (input);
    System.out.println ();
    final List < String > paths = pathParser.parse (input);
    System.out.println ("Output");
    for (final String path : paths) {
        System.out.println (path);
    }
}
----------------------------------------

public static void main (String arg []) {
    String input = "a-b|c-d|e-f|g-h";
    String [] primeTokens = input.split ("-");
    String [] level2Tokens = null;
    String element = "";
    String level2element = "";
    ArrayList stringList = new ArrayList ();
    ArrayList level1List = new ArrayList ();
    ArrayList level2List = new ArrayList ();
    for (int i = 0;
    i < primeTokens.length; i ++) {
        if (primeTokens [i].contains ("|")) {
            level2Tokens = primeTokens [i].split ("\\|");
            for (int j = 0;
            j < level2Tokens.length; j ++) {
                for (int k = 0;
                k < stringList.size (); k ++) {
                    element = (String) stringList.get (k);
                    level2element = element + level2Tokens [j];
                    level2List.add (level2element);
                }
            }
            stringList = new ArrayList ();
            for (int w = 0;
            w < level2List.size (); w ++) {
                stringList.add (level2List.get (w));
            }
            level2List = new ArrayList ();
        } else {
            if (stringList.size () > 0) {
                for (int z = 0;
                z < stringList.size (); z ++) {
                    element = (String) stringList.get (z);
                    element = element + primeTokens [i];
                    level1List.add (element);
                }
                stringList = new ArrayList ();
                for (int w = 0;
                w < level1List.size (); w ++) {
                    stringList.add (level1List.get (w));
                }
                level1List = new ArrayList ();
            } else {
                element = element + primeTokens [i];
                if (stringList.size () == 0) {
                    stringList.add (element);
                }
            }
        }
    }
    for (int q = 0;
    q < stringList.size (); q ++) {
        System.out.println (stringList.get (q));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28223988_28224489_7_51
28223988_28224534_3_38
Title: Min and Max Values 
----------------------------------------

public static void main (String [] args) {
    double count, sum, grades, max, min;
    Scanner scan = new Scanner (System.in);
    count = 0;
    sum = 0;
    max = 0;
    min = 0;
    do {
        System.out.println ("Enter next grade (" + (int) END_GRADES + " to quit):");
        grades = scan.nextDouble ();
        if (grades != END_GRADES) {
            if (count == 0) {
                min = grades;
            }
            sum = sum + grades;
            count ++;
            System.out.println ("The sum so far is: " + sum);
            if (max < grades) {
                max = grades;
            }
            if (min > grades) {
                min = grades;
            }
        }
    } while (grades != END_GRADES);
    if (count != 0) {
        System.out.println ("The average grade is: " + (sum / count));
        System.out.println ("The max grade is: " + max);
        System.out.println ("The min grade is: " + min);
    } else {
        System.out.println ("No grades were entered.");
    }
}
----------------------------------------

public static void main (String [] args) {
    double average, count = 0, sum = 0, max = 0, min = 0;
    int MAX_GRA = Integer.MIN_VALUE;
    int MIN_GRA = Integer.MAX_VALUE;
    int grade;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter the grades (999 to quit): ");
    grade = scan.nextInt ();
    while (grade != 999) {
        count ++;
        sum += grade;
        MAX_GRA = Math.max (grade, MAX_GRA);
        MIN_GRA = Math.min (grade, MIN_GRA);
        System.out.println ("The sum so far is " + sum);
        System.out.print ("Enter the grades (999 to quit): ");
        grade = scan.nextInt ();
    }
    if (count == 0) {
        System.out.println ("No grades were entered.");
    } else {
        average = (double) sum / count;
        DecimalFormat fmt = new DecimalFormat ("0.##");
        System.out.println ("The average grade is " + fmt.format (average));
        System.out.println ("The maximum grade is " + MAX_GRA);
        System.out.println ("The minimum grade is " + MIN_GRA);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28228121_28228166_1_12
28228121_28228180_24_43
Title: How to move move a rectangle in JFrame using KeyListener? 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Mainframe");
    JComponent test = new Mainframe ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (800, 600);
    frame.setFocusable (true);
    frame.getContentPane ().setBackground (Color.WHITE);
    frame.getContentPane ().add (test);
    frame.addKeyListener ((KeyListener) test);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                ex.printStackTrace ();
            }
            JFrame frame = new JFrame ("Mainframe");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setSize (800, 600);
            frame.setFocusable (true);
            frame.getContentPane ().setBackground (Color.WHITE);
            frame.getContentPane ().add (new Mainframe ());
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28228121_28228180_114_123
28228121_28228180_95_104
Title: How to move move a rectangle in JFrame using KeyListener? 
----------------------------------------

protected void applyDelta () {
    int delta = getDelta ();
    x += delta;
    if (x < 0) {
        x = 0;
    } else if (x + 100 > getWidth ()) {
        x = getWidth () - 100;
    }

    repaint ();
}
----------------------------------------

protected void applyDelta () {
    int delta = getDelta ();
    y += delta;
    if (y < 0) {
        y = 0;
    } else if (y + 100 > getHeight ()) {
        y = getHeight () - 100;
    }

    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28231066_28758102_16_41
28231066_46205709_14_47
Title: how to crop the detected face image in opencv java 
----------------------------------------

public static void main (String [] args) throws Exception {
    int x = 0, y = 0, height = 0, width = 0;
    System.loadLibrary (Core.NATIVE_LIBRARY_NAME);
    System.out.println ("\nRunning FaceDetector");
    CascadeClassifier faceDetector = new CascadeClassifier (Snapshot.class.getResource ("haarcascade_frontalface_alt.xml").getPath ().substring (1));
    Mat image = Highgui.imread ("C:\\image.jpg");
    faceDetector.detectMultiScale (image, face_Detections);
    System.out.println (String.format ("Detected %s faces", face_Detections.toArray ().length));
    Rect rect_Crop = null;
    for (Rect rect : face_Detections.toArray ()) {
        Core.rectangle (image, new Point (rect.x, rect.y), new Point (rect.x + rect.width, rect.y + rect.height), new Scalar (0, 255, 0));
        rectCrop = new Rect (rect.x, rect.y, rect.width, rect.height);
    }
    Mat image_roi = new Mat (image, rectCrop);
    Highgui.imwrite ("C:\\cropimage_912.jpg", image_roi);
}
----------------------------------------

public static void main (String [] args) {
    System.loadLibrary (Core.NATIVE_LIBRARY_NAME);
    CascadeClassifier faceDetector = new CascadeClassifier ();
    faceDetector.load ("D:\\OpenCv\\opencv\\sources\\data\\haarcascades\\haarcascade_frontalface_alt.xml");
    System.out.println ("Working");
    Mat image = Imgcodecs.imread ("D:\\input.jpg");
    MatOfRect faceDetections = new MatOfRect ();
    faceDetector.detectMultiScale (image, faceDetections);
    Rect rectCrop = null;
    for (Rect rect : faceDetections.toArray ()) {
        Imgproc.rectangle (image, new Point (rect.x, rect.y), new Point (rect.x + rect.width, rect.y + rect.height), new Scalar (0, 255, 0));
        rectCrop = new Rect (rect.x, rect.y, rect.width, rect.height);
    }
    String filename = "Ouput.jpg";
    Imgcodecs.imwrite ("D:\\" + filename, image);
    Mat markedImage = new Mat (image, rectCrop);
    Imgcodecs.imwrite ("D:\\cropimage.jpg", markedImage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28236742_28236948_25_46
28236742_28236948_58_66
Title: Write files using mutiples thread 
----------------------------------------

public void close () throws IOException {
    super.close ();
    final ByteArrayOutputStream baos = this;
    if (es.getQueue ().size () > maxQueueSize) try {
        Thread.sleep (10);
    } catch (InterruptedException e) {
        throw new AssertionError (e);
    }

    es.submit (new Runnable () {
        public void run () {
            try {
                FileOutputStream fos = new FileOutputStream (filename);
                fos.write (baos.toByteArray ());
                fos.close ();
            } catch (IOException ioe) {
                System.err.println ("Unable to write to " + filename);
                ioe.printStackTrace ();
            }
        }}

    );
}
----------------------------------------

public void close () {
    es.shutdown ();
    try {
        es.awaitTermination (2, TimeUnit.HOURS);
    } catch (InterruptedException e) {
        e.printStackTrace ();
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28255346_28255522_6_22
28255346_28255590_7_26
Title: Populating array with JOptionPane 
----------------------------------------

public static void main (String [] args) {
    int nbStudents;
    TreeMap < Integer, String > students = new TreeMap < > ();
    try {
        nbStudents = Integer.parseInt (JOptionPane.showInputDialog ("Number of students:"));
    } catch (NumberFormatException ex) {
        nbStudents = Integer.parseInt (JOptionPane.showInputDialog ("Number of students:"));
    }
    for (int i = 0;
    i < nbStudents; i ++) {
        String name = JOptionPane.showInputDialog ("Student " + i);
        students.put (i, name);
    }
    System.out.println (students);
}
----------------------------------------

public static void main (String [] args) {
    int Num, f;
    String [] NumArray;
    Num = Integer.parseInt (JOptionPane.showInputDialog (null, "Increse numero des etudiants: "));
    NumArray = new String [Num];
    for (f = 0; f < NumArray.length; f ++) {
        NumArray [f] = JOptionPane.showInputDialog ("Nombre " + f + ": ");
    }
    for (int R = 0;
    R < NumArray.length; R ++) {
        names += NumArray [R] + "\n";
    }
    JOptionPane.showMessageDialog (null, names);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28263645_28263937_3_23
28263645_28264189_1_13
Title: Using while loops to print out vaules 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int Num1 = 0;
    int max = 0;
    int userInput = 0;
    System.out.println ("Please enter 10 integers");
    for (Num1 = 0; Num1 < 10; Num1 ++);

    {
        userInput = in.nextInt ();
        if (num1 == 0) {
            max = userInput;
        } else if (max < userInput) {
            max = userInput;
        }

    }}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    List < Integer > list = new ArrayList < > ();
    while (list.size () < 10 && scanner.hasNext ()) {
        if (scanner.hasNextInt ()) {
            list.add (scanner.nextInt ());
        } else {
            scanner.next ();
        }
    }
    Integer max = Collections.max (list);
    System.out.println (max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28267183_28267301_7_57
28267183_28267947_1_41
Title: While loop printing incorrectly 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int score;
    String choice;
    Main : while (true) {
        try {
            System.out.println ("Enter your percentage mark: ");
            score = scan.nextInt ();
            if (score < 40) {
                System.out.println ("You FAILED");
            } else if (score >= 40 && score < 50) {
                System.out.println ("Your grade: PASS MARK");
            } else if (score >= 50 && score < 60) {
                System.out.println ("Your grade: 2:2");
            } else if (score >= 60 && score < 70) {
                System.out.println ("Your grade: 2:1");
            } else {
                System.out.println ("Your grade: 1:1");
            }

            Prompt : while (true) {
                System.out.println ("Do you want to enter another grade: ");
                choice = scan.next ();
                try {
                    if (choice.equalsIgnoreCase ("yes")) {
                        continue Main;
                    } else if (choice.equalsIgnoreCase ("no")) break Main;
                    else {
                        System.err.println ("Incorrect Input ");
                        continue Prompt;
                    }

                } catch (InputMismatchException e) {
                    System.err.println ("Incorrect Input ");
                    continue Prompt;
                }
            }
        } catch (InputMismatchException e) {
            System.err.println ("Incorrect Input ");
            continue Main;
        }
    }
    System.out.println ("program terminated");
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int score;
    String choice;
    while (true) {
        System.out.println ("Enter your percentage mark: ");
        score = scan.nextInt ();
        if (score < 40) {
            System.out.println ("You FAILED");
        } else if (score >= 40 && score < 50) {
            System.out.println ("Your grade: PASS MARK");
        } else if (score >= 50 && score < 60) {
            System.out.println ("Your grade: 2:2");
        } else if (score >= 60 && score < 70) {
            System.out.println ("Your grade: 2:1");
        } else {
            System.out.println ("Your grade: 1:1");
        }

        System.out.println ("Do you want to enter another grade: ");
        choice = scan.next ();
        if (choice.equalsIgnoreCase ("no")) {
            System.out.println ("Program terminated");
            scan.close ();
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28267573_28267634_1_11
28267573_53375681_44_54
Title: Creating a Stack class with Arrays in Java 
----------------------------------------

public E pop () throws EmptyStackException {
    if (count <= 0) {
        throw new EmptyStackException ();
    }
    E poppedObject = data [0];
    for (int i = 0;
    i < count; i ++) {
        data [i] = data [i + 1];
    }
    count --;
    return poppedObject;
}
----------------------------------------

public E pop () {
    if (top == - 1) {
        System.out.println ("Stack is Empty!...");
        throw new RuntimeException ("Statck Empty!...");
    }
    E e = stack [top];
    stack [top] = null;
    top --;
    return e;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28275607_28275978_1_31
28275607_28276281_1_25
Title: Storing non-duplicated numbers in an array 
----------------------------------------

public void duplication () {
    int max = 100;
    int min = 1;
    boolean duplicate = false;
    Random rand = new Random ();
    int [] all = new int [20];
    for (int x = 0;
    x < 20; x ++) {
        duplicate = false;
        int randomNum = rand.nextInt ((max - min) + 1) + min;
        for (int i : all) {
            if (i == randomNum) {
                duplicate = true;
                break;
            }
        }
        if (duplicate) {
            x --;
        } else {
            all [x] = randomNum;
        }
    }
}
----------------------------------------

public static void duplication () {
    int max = 100;
    int min = 1;
    Random rand = new Random ();
    int index = 0;
    int [] all = new int [20];
    while (index < 20) {
        boolean duplicate = false;
        int randomNum = rand.nextInt ((max - min) + 1) + min;
        for (int i = 0;
        i < all.length; i ++) {
            if (all [i] == randomNum) {
                duplicate = true;
                break;
            }
        }
        if (! duplicate) {
            all [index ++] = randomNum;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28276582_28276708_15_27
28276582_28277024_6_16
Title: java String index out of range 1111 
----------------------------------------

public String read () {
    String decodedMessage = "";
    int lenEncode = encodedMessage.length ();
    for (int i = 0;
    (i + 1) < lenEncode; i += 10) {
        String update = encodedMessage.substring (i, i + 1);
        decodedMessage = decodedMessage + update;
    }
    return decodedMessage;
}
----------------------------------------

public String read () {
    int lenEncode = encodedMessage.length ();
    StringBuilder decodedMessage = new StringBuilder ();
    for (int count = 0;
    count < lenEncode; count += 10) {
        char character = encodedMessage.charAt (count);
        decodedMessage.append (character);
    }
    return decodedMessage.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28282858_28286095_195_222
28282858_28286095_229_248
Title: Multiple animations(threads) in a JPanel 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    futureLocations = new HashMap < > ();
    movingPawns = new ArrayList < > ();
    for (Pawn p : pawnLocations.values ()) {
        int row = random.nextInt (8);
        int col = random.nextInt (8);
        Location location;
        while (futureLocations.containsKey ((location = new Location (row, col)))) {
            row = random.nextInt (8);
            col = random.nextInt (8);
        }
        futureLocations.put (location, p);
        Cell futureCell = board.getCell (location);
        futureCoordinates.put (p, SwingUtilities.convertPoint (futureCell, 0, 0, glassPane));
        movingPawns.add (p);
    }
    for (Pawn p : movingPawns) {
        Point locationInGlassPane = SwingUtilities.convertPoint (p.getParent (), 0, 0, glassPane);
        glassPane.add (p);
        p.setLocation (locationInGlassPane);
        originalCoordinates.put (p, locationInGlassPane);
    }
    subTimer = new Timer (50, new AnimationSteps ());
    subTimer.setInitialDelay (0);
    subTimer.setCoalesce (true);
    subTimer.setRepeats (true);
    subTimer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e1) {
    if (step < 50 + 1) {
        for (Pawn p : movingPawns) {
            Point p1 = originalCoordinates.get (p);
            Point p2 = futureCoordinates.get (p);
            int x = (int) (p1.x + ((p2.x - p1.x) * (double) step / 50));
            int y = (int) (p1.y + ((p2.y - p1.y) * (double) step / 50));
            p.setLocation (x, y);
        }
    } else {
        for (Entry < Location, Pawn > e : futureLocations.entrySet ()) {
            board.add (e.getValue (), e.getKey ());
        }
        board.revalidate ();
        subTimer.stop ();
        pawnLocations = futureLocations;
    }
    step ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28283693_28283779_1_19
28283693_42040008_1_18
Title: Use a Binary Search on an int array sorted in descending order 
----------------------------------------

private static < T > int binarySearch (T [] a, Comparator < T > c, T srchVal) {
    int lb = 0;
    int ub = a.length - 1;
    while (lb <= ub) {
        int mid = (lb + ub) / 2;
        int ci = c.compare (a [mid], srchVal);
        if (ci == 0) {
            return mid;
        } else if (ci < 0) {
            lb = mid + 1;
        } else {
            ub = mid - 1;
        }

    }
    return - 1;
}
----------------------------------------

private static int binarySearch (int a [], int srchVal, boolean isAscending) {
    int lb = 0;
    int ub = a.length - 1;
    while ((lb <= ub) == isAscending) {
        int mid = (lb + ub) / 2;
        if (a [mid] == srchVal) {
            return mid;
        } else if (srchVal > a [mid]) {
            lb = mid + 1;
        } else {
            ub = mid - 1;
        }

    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28283693_42040008_1_18
28283693_51922093_11_28
Title: Use a Binary Search on an int array sorted in descending order 
----------------------------------------

private static int binarySearch (int a [], int srchVal, boolean isAscending) {
    int lb = 0;
    int ub = a.length - 1;
    while ((lb <= ub) == isAscending) {
        int mid = (lb + ub) / 2;
        if (a [mid] == srchVal) {
            return mid;
        } else if (srchVal > a [mid]) {
            lb = mid + 1;
        } else {
            ub = mid - 1;
        }

    }
    return - 1;
}
----------------------------------------

private static int binarySearch (int a [], int srchVal) {
    int lb = 0;
    int ub = a.length - 1;
    while (lb <= ub) {
        int mid = (lb + ub) / 2;
        if (a [mid] == srchVal) {
            return mid;
        } else if (srchVal < a [mid]) {
            lb = mid + 1;
        } else {
            ub = mid - 1;
        }

    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28284394_28284682_42_102
28284394_28284689_36_84
Title: Passing parameters into methods 
----------------------------------------

public static void day () {
    System.out.println ("You have chosen to see the temperature for a specified day");
    System.out.println ("Please choose a day below");
    System.out.println (" 1. Monday");
    System.out.println (" 2. Tuesday");
    System.out.println (" 3. Wednesday");
    System.out.println (" 4. Thursday");
    System.out.println (" 5. Friday");
    System.out.println (" 6. Saturday");
    System.out.println (" 7. Sunday ");
    choice = keyboard.nextInt ();
    if (choice == 1) {
        System.out.println (" You have chosen to see the temperature for Monday");
        System.out.println (" The temperature for Monday is " + monTemp + "°C");
    } else if (choice == 2) {
        System.out.println (" You have chosen to see the temperature for Tuesday");
        System.out.println (" The temperature for Tuesday " + tuesTemp + "°C");
    } else if (choice == 3) {
        System.out.println (" You have chosen to see the temperature for Wednesday");
        System.out.println (" The temperature for Wednesday is " + wedTemp + "°C");
    } else if (choice == 4) {
        System.out.println (" You have chosen to see the temperature for Thursday");
        System.out.println (" The temperature for Thursday is " + thursTemp + "°C");
    } else if (choice == 5) {
        System.out.println (" You have chosen to see the temperature for Friday");
        System.out.println (" The temperature for Friday is " + friTemp + "°C");
    } else if (choice == 6) {
        System.out.println (" You have chosen to see the temperature for Saturday");
        System.out.println (" The temperature for Saturday is " + satTemp + "°C");
    } else if (choice == 7) {
        System.out.println (" You have chosen to see the temperature for Sunday");
        System.out.println (" The temperature for Sunday is " + sunTemp + "°C");
    } else {
        System.out.println ("Oops something went wrong, please try again");
        day ();
    }

}
----------------------------------------

public static void day () {
    System.out.println ("You have chosen to see the temperature for a specified day");
    System.out.println ("Please choose a day below");
    System.out.println (" 1. Monday");
    System.out.println (" 2. Tuesday");
    System.out.println (" 3. Wednesday");
    System.out.println (" 4. Thursday");
    System.out.println (" 5. Friday");
    System.out.println (" 6. Saturday");
    System.out.println (" 7. Sunday ");
    choice = keyboard.nextInt ();
    switch (choice) {
        case 1 :
            System.out.println (" You have chosen to see the temperature for Monday");
            System.out.println (" The temperature for Monday is " + monTemp + "°C");
            break;
        case 2 :
            System.out.println (" You have chosen to see the temperature for Tuesday");
            System.out.println (" The temperature for Tuesday " + tuesTemp + "°C");
            break;
        case 3 :
            System.out.println (" You have chosen to see the temperature for Wednesday");
            System.out.println (" The temperature for Wednesday is " + wedTemp + "°C");
            break;
        case 4 :
            System.out.println (" You have chosen to see the temperature for Thursday");
            System.out.println (" The temperature for Thursday is " + thursTemp + "°C");
            break;
        case 5 :
            System.out.println (" You have chosen to see the temperature for Friday");
            System.out.println (" The temperature for Friday is " + friTemp + "°C");
            break;
        case 6 :
            System.out.println (" You have chosen to see the temperature for Saturday");
            System.out.println (" The temperature for Saturday is " + satTemp + "°C");
            break;
        case 7 :
            System.out.println (" You have chosen to see the temperature for Sunday");
            System.out.println (" The temperature for Sunday is " + sunTemp + "°C");
            break;
        default :
            System.out.println ("Oops something went wrong, please try again");
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28285507_28285675_79_98
28285507_28285675_83_91
Title: Is there a way to bind the content of a ListProperty in JavaFX? 
----------------------------------------

private Worker < Void > createTask () {
    Service < Void > service = new Service < Void > () {
        @Override
        protected Task < Void > createTask () {
            return new Task < Void > () {
                @Override
                public Void call () throws Exception {
                    Thread.sleep (1000 + RNG.nextInt (2000));
                    return null;
                }}

            ;
        }}

    ;
    service.setExecutor (exec);
    service.start ();
    return service;
}
----------------------------------------

protected Task < Void > createTask () {
    return new Task < Void > () {
        @Override
        public Void call () throws Exception {
            Thread.sleep (1000 + RNG.nextInt (2000));
            return null;
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28286467_28297499_8_18
28286467_30932913_9_27
Title: Connection to a JDBC MySQL database 
----------------------------------------

public static void main (String [] args) {
    try {
        String host = "xxx";
        String uName = "xxx";
        String uPass = "xxx";
        Class.forName ("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection (host, uName, uPass);
    } catch (SQLException err) {
        System.out.println (err.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        Class.forName ("com.mysql.jdbc.Driver");
        String host = "jdbc:mysql://localhost/XXX";
        String uName = "xxx";
        String uPass = "xxx";
        Connection con = DriverManager.getConnection (host, uName, uPass);
    } catch (SQLException err) {
        System.out.println (err.getMessage ());
    } catch (ClassNotFoundException e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28287398_28287949_15_41
28287398_28288527_18_50
Title: What is the preferred way of getting the frame rate of a JavaFX application? 
----------------------------------------

public void start (Stage primaryStage) {
    Label label = new Label ();
    AnimationTimer frameRateMeter = new AnimationTimer () {
        @Override
        public void handle (long now) {
            long oldFrameTime = frameTimes [frameTimeIndex];
            frameTimes [frameTimeIndex] = now;
            frameTimeIndex = (frameTimeIndex + 1) % frameTimes.length;
            if (frameTimeIndex == 0) {
                arrayFilled = true;
            }
            if (arrayFilled) {
                long elapsedNanos = now - oldFrameTime;
                long elapsedNanosPerFrame = elapsedNanos / frameTimes.length;
                double frameRate = 1_000_000_000.0 / elapsedNanosPerFrame;
                label.setText (String.format ("Current frame rate: %.3f", frameRate));
            }
        }}

    ;
    frameRateMeter.start ();
    primaryStage.setScene (new Scene (new StackPane (label), 250, 150));
    primaryStage.show ();
}
----------------------------------------

public void start (Stage stage) {
    VBox root = new VBox (20);
    Label label1 = new Label ();
    Label label2 = new Label ();
    root.getChildren ().addAll (label1, label2);
    Scene scene = new Scene (root, 200, 100);
    try {
        System.setProperty ("prism.verbose", "true");
        System.setProperty ("prism.dirtyopts", "false");
        System.setProperty ("javafx.animation.pulse", "10");
    } catch (AccessControlException e) {
    }
    scene.setOnKeyPressed ((e) -> {
        label2.setText (label1.getText ());
    });
    stage.setScene (scene);
    stage.show ();
    tracker = PerformanceTracker.getSceneTracker (scene);
    AnimationTimer frameRateMeter = new AnimationTimer () {
        @Override
        public void handle (long now) {
            label1.setText (String.format ("Current frame rate: %.3f fps", getFPS ()));
        }}

    ;
    frameRateMeter.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28287398_28287949_21_34
28287398_28288856_12_23
Title: What is the preferred way of getting the frame rate of a JavaFX application? 
----------------------------------------

public void handle (long now) {
    long oldFrameTime = frameTimes [frameTimeIndex];
    frameTimes [frameTimeIndex] = now;
    frameTimeIndex = (frameTimeIndex + 1) % frameTimes.length;
    if (frameTimeIndex == 0) {
        arrayFilled = true;
    }
    if (arrayFilled) {
        long elapsedNanos = now - oldFrameTime;
        long elapsedNanosPerFrame = elapsedNanos / frameTimes.length;
        double frameRate = 1_000_000_000.0 / elapsedNanosPerFrame;
        label.setText (String.format ("Current frame rate: %.3f", frameRate));
    }
}
----------------------------------------

public void handle (long now) {
    if (lastUpdate > 0) {
        long nanosElapsed = now - lastUpdate;
        double frameRate = 1000000000.0 / nanosElapsed;
        index %= frameRates.length;
        frameRates [index ++] = frameRate;
    }
    lastUpdate = now;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_28292794_13_31
28292359_41772522_29_47
Title: Creating a Time class in Java 
----------------------------------------

public String toString () {
    String s = "";
    if (hour < 10 && minute < 10) s = "0" + hour + "0" + minute;
    else if (hour < 10 && minute > 10) s = "0" + hour + minute;
    else if (hour > 10 && minute < 10) s = hour + "0" + minute;
    else if (hour > 10 && minute > 10) s = hour + "" + minute;
    else if (hour == 0) s = "0" + hour + minute;
    else if (minute == 0) s = hour + "0" + minute;

    return s;
}
----------------------------------------

public String toString () {
    String s = "";
    if (hour < 10 && minute < 10) s = "0" + hour + "0" + minute;
    else if (hour < 10 && minute > 10) s = "0" + hour + minute;
    else if (hour > 10 && minute < 10) s = hour + "0" + minute;
    else if (hour > 10 && minute > 10) s = hour + "" + minute;
    else if (hour == 0) s = "0" + hour + minute;
    else if (minute == 0) s = hour + "0" + minute;

    return s;
}
----------------------------------------
