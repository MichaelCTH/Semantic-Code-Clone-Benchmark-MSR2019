$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24970176_24970232_5_17
24970176_24970251_1_17
Title: "JOptionPane handling ok cancel and x button" 
----------------------------------------

public static void main (String args []) {
    int n = JOptionPane.showOptionDialog (new JFrame (), "Message", "Title", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object [] {"Yes", "No"}, JOptionPane.YES_OPTION);
    if (n == JOptionPane.YES_OPTION) {
        System.out.println ("Yes");
    } else if (n == JOptionPane.NO_OPTION) {
        System.out.println ("No");
    } else if (n == JOptionPane.CLOSED_OPTION) {
        System.out.println ("Closed by hitting the cross");
    }

}
----------------------------------------

public static void main (final String [] args) {
    int value = 0;
    while (true) {
        try {
            value = Integer.parseInt (JOptionPane.showInputDialog (null, "Enter value?", null));
            if (value <= 0) {
                System.out.println ("value cannot be 0 or negative");
            } else {
                System.out.println ("value is positive");
                break;
            }
        } catch (NumberFormatException e) {
            System.out.println ("*** Please enter an integer ***");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24971765_24972102_26_48
24971765_24973265_1_25
Title: Java AES decrypt different results after saved and decrypted again 
----------------------------------------

public String encrypt (String plainText) throws Exception {
    if (salt == null) salt = generateSalt ();

    byte [] saltBytes = salt.getBytes ("UTF-8");
    SecretKeyFactory factory = SecretKeyFactory.getInstance ("PBKDF2WithHmacSHA1");
    PBEKeySpec spec = new PBEKeySpec (password.toCharArray (), saltBytes, pswdIterations, keySize);
    SecretKey secretKey = factory.generateSecret (spec);
    SecretKeySpec secret = new SecretKeySpec (secretKey.getEncoded (), "AES");
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    cipher.init (Cipher.ENCRYPT_MODE, secret, new IvParameterSpec (ivBytes));
    byte [] encryptedTextBytes = cipher.doFinal (plainText.getBytes ("UTF-8"));
    return new Base64 ().encodeAsString (encryptedTextBytes);
}
----------------------------------------

public String encrypt (String plainText) throws Exception {
    byte [] saltBytes = generateSalt (saltLength);
    SecretKeyFactory factory = SecretKeyFactory.getInstance ("PBKDF2WithHmacSHA1");
    PBEKeySpec spec = new PBEKeySpec (password.toCharArray (), saltBytes, pswdIterations, keySize);
    SecretKey secretKey = factory.generateSecret (spec);
    SecretKeySpec secret = new SecretKeySpec (secretKey.getEncoded (), "AES");
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    cipher.init (Cipher.ENCRYPT_MODE, secret);
    AlgorithmParameters params = cipher.getParameters ();
    byte [] ivBytes = params.getParameterSpec (IvParameterSpec.class).getIV ();
    byte [] encryptedTextBytes = cipher.doFinal (plainText.getBytes ("UTF-8"));
    byte [] buffer = new byte [saltBytes.length + ivBytes.length + encryptedTextBytes.length];
    System.arraycopy (saltBytes, 0, buffer, 0, saltBytes.length);
    System.arraycopy (ivBytes, 0, buffer, saltBytes.length, ivBytes.length);
    System.arraycopy (encryptedTextBytes, 0, buffer, saltBytes.length + ivBytes.length, encryptedTextBytes.length);
    return new Base64 ().encodeToString (buffer);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24971765_24972102_51_80
24971765_24973265_27_58
Title: Java AES decrypt different results after saved and decrypted again 
----------------------------------------

public String decrypt (String encryptedText) throws Exception {
    byte [] saltBytes = salt.getBytes ("UTF-8");
    byte [] encryptedTextBytes = new Base64 ().decodeBase64 (encryptedText);
    SecretKeyFactory factory = SecretKeyFactory.getInstance ("PBKDF2WithHmacSHA1");
    PBEKeySpec spec = new PBEKeySpec (password.toCharArray (), saltBytes, pswdIterations, keySize);
    SecretKey secretKey = factory.generateSecret (spec);
    SecretKeySpec secret = new SecretKeySpec (secretKey.getEncoded (), "AES");
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    cipher.init (Cipher.DECRYPT_MODE, secret, new IvParameterSpec (ivBytes));
    byte [] decryptedTextBytes = null;
    try {
        decryptedTextBytes = cipher.doFinal (encryptedTextBytes);
    } catch (IllegalBlockSizeException e) {
        e.printStackTrace ();
    } catch (BadPaddingException e) {
        e.printStackTrace ();
    }
    return new String (decryptedTextBytes);
}
----------------------------------------

public String decrypt (String encryptedText) throws Exception {
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    ByteBuffer buffer = ByteBuffer.wrap (new Base64 ().decode (encryptedText));
    byte [] saltBytes = new byte [saltLength];
    buffer.get (saltBytes, 0, saltBytes.length);
    byte [] ivBytes = new byte [cipher.getBlockSize ()];
    buffer.get (ivBytes, 0, ivBytes.length);
    byte [] encryptedTextBytes = new byte [buffer.capacity () - saltBytes.length - ivBytes.length];
    buffer.get (encryptedTextBytes);
    SecretKeyFactory factory = SecretKeyFactory.getInstance ("PBKDF2WithHmacSHA1");
    PBEKeySpec spec = new PBEKeySpec (password.toCharArray (), saltBytes, pswdIterations, keySize);
    SecretKey secretKey = factory.generateSecret (spec);
    SecretKeySpec secret = new SecretKeySpec (secretKey.getEncoded (), "AES");
    cipher.init (Cipher.DECRYPT_MODE, secret, new IvParameterSpec (ivBytes));
    byte [] decryptedTextBytes = null;
    try {
        decryptedTextBytes = cipher.doFinal (encryptedTextBytes);
    } catch (IllegalBlockSizeException e) {
        e.printStackTrace ();
    } catch (BadPaddingException e) {
        e.printStackTrace ();
    }
    return new String (decryptedTextBytes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24975167_24975351_50_65
24975167_24975468_3_18
Title: "Java how to use compareTo to sort an Arraylist" 
----------------------------------------

public static void main (String [] args) {
    List < Player > list = new ArrayList < Player > ();
    Player p1 = new Player (1, 92, "Zlatan");
    Player p2 = new Player (2, 92, "Hazard");
    Player p3 = new Player (1, 82, "Klose");
    list.add (p1);
    list.add (p2);
    list.add (p3);
    Collections.sort (list, new PlayerComparatorByRating ());
    System.out.println (list);
    Collections.sort (list, new PlayerComparatorByName ());
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Players > list = new ArrayList < Players > ();
    Players p1 = new Players (1, 92, "Zlatan");
    Players p2 = new Players (2, 92, "Hazard");
    Players p3 = new Players (1, 82, "Klose");
    list.add (p1);
    list.add (p2);
    list.add (p3);
    PlayerComparator comparator = new PlayerComparator ();
    System.out.println (list);
    Collections.sort (list, comparator);
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24977080_24977198_1_17
24977080_24977246_1_18
Title: Error returning boolean in java 
----------------------------------------

public boolean playAgain () {
    char va;
    while (true) {
        IO.outputln ("Want to play again? (y/n)");
        va = IO.inputCharacter ();
        if ((va == 'y') || (va == 'Y')) {
            return true;
        } else if ((va == 'n') || (va == 'N')) {
            return false;
        }

    }
}
----------------------------------------

public boolean playAgain () {
    char va;
    boolean t = true;
    boolean ry;
    while (t = true) {
        IO.outputln ("Want to play again? (y/n)");
        va = IO.inputCharacter ();
        if ((va == 'y') || (va == 'Y')) {
            ry = true;
            t = false;
        } else if ((va == 'n') || (va == 'N')) {
            ry = false;
            t = false;
        }

    }
    return ry;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2498015_2498160_1_14
2498015_2498197_1_11
Title: Problem at JUnit test with generics 
----------------------------------------

public static < T > T getField (Class < T > fieldType, Object obj, Class < ? > c, String fieldName) {
    try {
        Field field = c.getDeclaredField (fieldName);
        field.setAccessible (true);
        Object value = field.get (obj);
        return fieldType.cast (value);
    } catch (Exception e) {
        e.printStackTrace ();
        fail ();
        return null;
    }
}
----------------------------------------

public static < T > T getField (Object obj, Class < T > fieldClass, String fieldName) {
    try {
        Class < ? > declaringClass = obj.getClass ();
        Field field = declaringClass.getDeclaredField (fieldName);
        field.setAccessible (true);
        return fieldClass.cast (field.get (obj));
    } catch (Exception e) {
        throw new AssertionFailedError ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24986982_25874968_1_30
24986982_32596611_1_43
Title: issues with codingbat maxMirror exercise 
----------------------------------------

public int maxMirror (int [] nums) {
    int maxMirror = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int mirror = 0;
        int index = lastIndexOf (nums, nums [i]);
        if (index != - 1) {
            mirror ++;
            for (int j = i + 1;
            j < nums.length; j ++) {
                if (index >= 0 && existsInReverse (nums, index, nums [j])) {
                    mirror ++;
                    index --;
                    continue;
                } else break;

            }
            if (mirror > maxMirror) maxMirror = mirror;

        }
    }
    return maxMirror;
}
----------------------------------------

public int maxMirror (int [] nums) {
    int maxlen = 0;
    for (int front = 0;
    front < nums.length; front ++) {
        for (int back = nums.length - 1;
        back >= front; back --) {
            int matchlen = 0;
            Boolean match = (nums [front] == nums [back]);
            while (match) {
                matchlen ++;
                int front_index = front + matchlen;
                int back_index = back - matchlen;
                match = (front_index < nums.length) && (back_index >= 0) && (nums [front_index] == nums [back_index]);
            }
            if (matchlen > maxlen) maxlen = matchlen;

        }
    }
    return maxlen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24986982_25874968_1_30
24986982_51092884_1_24
Title: issues with codingbat maxMirror exercise 
----------------------------------------

public int maxMirror (int [] nums) {
    int maxMirror = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        int mirror = 0;
        int index = lastIndexOf (nums, nums [i]);
        if (index != - 1) {
            mirror ++;
            for (int j = i + 1;
            j < nums.length; j ++) {
                if (index >= 0 && existsInReverse (nums, index, nums [j])) {
                    mirror ++;
                    index --;
                    continue;
                } else break;

            }
            if (mirror > maxMirror) maxMirror = mirror;

        }
    }
    return maxMirror;
}
----------------------------------------

public static int maxMirror (int [] nums) {
    final int len = nums.length;
    int max = 0;
    if (len == 0) return max;

    for (int i = 0;
    i < len; i ++) {
        int counter = 0;
        for (int j = (len - 1);
        j > i; j --) {
            if (nums [i + counter] != nums [j]) {
                break;
            }
            counter ++;
        }
        max = Math.max (max, counter);
    }
    if (max == 1) max = 0;

    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24986982_32596611_1_43
24986982_51092884_1_24
Title: issues with codingbat maxMirror exercise 
----------------------------------------

public int maxMirror (int [] nums) {
    int maxlen = 0;
    for (int front = 0;
    front < nums.length; front ++) {
        for (int back = nums.length - 1;
        back >= front; back --) {
            int matchlen = 0;
            Boolean match = (nums [front] == nums [back]);
            while (match) {
                matchlen ++;
                int front_index = front + matchlen;
                int back_index = back - matchlen;
                match = (front_index < nums.length) && (back_index >= 0) && (nums [front_index] == nums [back_index]);
            }
            if (matchlen > maxlen) maxlen = matchlen;

        }
    }
    return maxlen;
}
----------------------------------------

public static int maxMirror (int [] nums) {
    final int len = nums.length;
    int max = 0;
    if (len == 0) return max;

    for (int i = 0;
    i < len; i ++) {
        int counter = 0;
        for (int j = (len - 1);
        j > i; j --) {
            if (nums [i + counter] != nums [j]) {
                break;
            }
            counter ++;
        }
        max = Math.max (max, counter);
    }
    if (max == 1) max = 0;

    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24989527_24989649_1_14
24989527_24989679_12_25
Title: How to make an action command for same buttons 
----------------------------------------

@Override
public void actionPerformed (ActionEvent evt) {
    String actionCommand = evt.getActionCommand ();
    switch (actionCommand) {
        case "down" :
            break;
        case "up" :
    }
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    int value1000 = model.updateValue (delta);
    if (value1000 > 0) {
        numberField.setText (value1000 + "");
    }
    if (value1000 == 0) {
        numberField.setText (value1000 + "");
        setEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25004779_25005501_116_125
25004779_25005501_132_147
Title: "How can I display live changing text data while a program is running?" 
----------------------------------------

public void run () {
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel ();
    frame.setContentPane (panel);
    panel.add (textArea_3);
    panel.add (textArea_4);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    Random rnd = new Random ();
    while (true) {
        calculateSignal (rnd.nextDouble (), rnd.nextDouble ());
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25016055_25017238_20_27
25016055_25017238_48_55
Title: Manipulating adjacent matrix 
----------------------------------------

public static void printAdjacentMatrix (int matrix [] []) {
    for (int row = 0;
    row < matrix.length; row ++) {
        for (int column = 0;
        column < matrix [row].length; column ++) {
            System.out.print (matrix [row] [column] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

private static void printAdjacentMatrix (String [] [] newMatrix) {
    for (int row = 0;
    row < newMatrix.length; row ++) {
        for (int column = 0;
        column < newMatrix [row].length; column ++) {
            System.out.print (newMatrix [row] [column] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25022578_25024344_1_40
25022578_25151302_1_19
Title: Highlight differences between images 
----------------------------------------

public static BufferedImage getDifferenceImage (BufferedImage img1, BufferedImage img2) {
    int width1 = img1.getWidth ();
    int width2 = img2.getWidth ();
    int height1 = img1.getHeight ();
    int height2 = img2.getHeight ();
    if ((width1 != width2) || (height1 != height2)) {
        System.err.println ("Error: Images dimensions mismatch");
        System.exit (1);
    }
    BufferedImage outImg = new BufferedImage (width1, height1, BufferedImage.TYPE_INT_RGB);
    int diff;
    int result;
    for (int i = 0;
    i < height1; i ++) {
        for (int j = 0;
        j < width1; j ++) {
            int rgb1 = img1.getRGB (j, i);
            int rgb2 = img2.getRGB (j, i);
            int r1 = (rgb1>> 16) & 0xff;
            int g1 = (rgb1>> 8) & 0xff;
            int b1 = (rgb1) & 0xff;
            int r2 = (rgb2>> 16) & 0xff;
            int g2 = (rgb2>> 8) & 0xff;
            int b2 = (rgb2) & 0xff;
            diff = Math.abs (r1 - r2);
            diff += Math.abs (g1 - g2);
            diff += Math.abs (b1 - b2);
            diff /= 3;
            result = (diff << 16) | (diff << 8) | diff;
            outImg.setRGB (j, i, result);
        }
    }
    return outImg;
}
----------------------------------------

public static BufferedImage getDifferenceImage (BufferedImage img1, BufferedImage img2) {
    final int w = img1.getWidth (), h = img1.getHeight (), highlight = Color.MAGENTA.getRGB ();
    final int [] p1 = img1.getRGB (0, 0, w, h, null, 0, w);
    final int [] p2 = img2.getRGB (0, 0, w, h, null, 0, w);
    for (int i = 0;
    i < p1.length; i ++) {
        if (p1 [i] != p2 [i]) {
            p1 [i] = highlight;
        }
    }
    final BufferedImage out = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    out.setRGB (0, 0, w, h, p1, 0, w);
    return out;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25029272_25029329_1_16
25029272_25029352_1_16
Title: Error: missing return value in Java 
----------------------------------------

private static boolean isPrime (int n) {
    boolean flag = true;
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        for (int i = 2;
        i < divisor; i ++) {
            if (isFactor (n, divisor)) {
                flag = false;
            }
        }
    }
    return flag;
}
----------------------------------------

private static boolean isPrime (int n) {
    boolean prime = true;
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        for (int i = 2;
        i < divisor; i ++) {
            if (isFactor (n, divisor)) {
                prime = false;
            }
        }
    }
    return prime;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25029272_25029329_1_16
25029272_25029401_1_14
Title: Error: missing return value in Java 
----------------------------------------

private static boolean isPrime (int n) {
    boolean flag = true;
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        for (int i = 2;
        i < divisor; i ++) {
            if (isFactor (n, divisor)) {
                flag = false;
            }
        }
    }
    return flag;
}
----------------------------------------

private static boolean isPrime (int n) {
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        if (isFactor (n, divisor)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25029272_25029352_1_16
25029272_25029401_1_14
Title: Error: missing return value in Java 
----------------------------------------

private static boolean isPrime (int n) {
    boolean prime = true;
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        for (int i = 2;
        i < divisor; i ++) {
            if (isFactor (n, divisor)) {
                prime = false;
            }
        }
    }
    return prime;
}
----------------------------------------

private static boolean isPrime (int n) {
    for (int divisor = 2;
    divisor <= n; divisor ++) {
        if (isFactor (n, divisor)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25029772_25029889_1_19
25029772_25030010_1_14
Title: Palindrome tester 
----------------------------------------

public static boolean iterativePalindromeChecker (String str) {
    int length = str.length ();
    int i, begin, end, middle;
    begin = 0;
    end = length - 1;
    middle = (begin + end) / 2;
    for (i = begin; i <= middle; i ++) {
        if (str.charAt (begin) == str.charAt (end)) {
            begin ++;
            end --;
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean iterativePalindromeChecker (String str) {
    int begin = 0;
    int end = str.length () - 1;
    while (begin < end) {
        if (str.charAt (begin) != str.charAt (end)) {
            return false;
        }
        begin ++;
        end --;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25037925_25038355_1_24
25037925_25038456_7_22
Title: Replacing an existing element by another element in Set in Java 
----------------------------------------

public static void main (String [] args) {
    Set < String > set = new LinkedHashSet < String > ();
    set.add ("A");
    set.add ("B");
    set.add ("C");
    set.add ("D");
    System.out.println (set);
    List < String > list = new ArrayList < String > ();
    list.addAll (0, set);
    System.out.println (list);
    if (list.contains ("C")) {
        int i = list.indexOf ("C");
        list.add (i, "E");
        list.remove ("C");
    }
    set.removeAll (set);
    set.addAll (list);
    System.out.println (set);
}
----------------------------------------

public static void main (String [] args) {
    @SuppressWarnings ("unchecked")
    Set < String > set = new ListOrderedSet ();
    set.add ("A");
    set.add ("B");
    set.add ("C");
    set.add ("D");
    System.out.println (set);
    int indexToRemove = ((ListOrderedSet) set).indexOf ("C");
    if (indexToRemove != - 1) {
        set.remove ("C");
        ((ListOrderedSet) set).add (indexToRemove, "E");
    }
    System.out.println (set);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25057365_25057601_1_10
25057365_27181379_5_19
Title: Java text to ASCII converter with a loop 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Write some text here");
    Scanner scanner = new Scanner (System.in).useDelimiter ("\\n");
    String myChars = scanner.next ();
    char [] charArray = myChars.toCharArray ();
    for (char character : charArray) {
        System.out.println ((int) character);
    }
    scanner.close ();
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Write some text here");
    Scanner scanner = new Scanner (System.in).useDelimiter ("\\n");
    String myChars = scanner.next ();
    int lenght = myChars.length ();
    int i = - 1;
    int j = 0;
    do {
        String convert = myChars.substring (i ++, j ++);
        int ascii = (int) convert;
        System.out.print (ascii);
    } while (j < lenght);
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25086868_25096332_27_47
25086868_25096332_3_21
Title: How to send images through sockets in java? 
----------------------------------------

public static void main (String [] args) throws Exception {
    ServerSocket serverSocket = new ServerSocket (13085);
    Socket socket = serverSocket.accept ();
    InputStream inputStream = socket.getInputStream ();
    System.out.println ("Reading: " + System.currentTimeMillis ());
    byte [] sizeAr = new byte [4];
    inputStream.read (sizeAr);
    int size = ByteBuffer.wrap (sizeAr).asIntBuffer ().get ();
    byte [] imageAr = new byte [size];
    inputStream.read (imageAr);
    BufferedImage image = ImageIO.read (new ByteArrayInputStream (imageAr));
    System.out.println ("Received " + image.getHeight () + "x" + image.getWidth () + ": " + System.currentTimeMillis ());
    ImageIO.write (image, "jpg", new File ("C:\\Users\\Jakub\\Pictures\\test2.jpg"));
    serverSocket.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Socket socket = new Socket ("localhost", 13085);
    OutputStream outputStream = socket.getOutputStream ();
    BufferedImage image = ImageIO.read (new File ("C:\\Users\\Jakub\\Pictures\\test.jpg"));
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream ();
    ImageIO.write (image, "jpg", byteArrayOutputStream);
    byte [] size = ByteBuffer.allocate (4).putInt (byteArrayOutputStream.size ()).array ();
    outputStream.write (size);
    outputStream.write (byteArrayOutputStream.toByteArray ());
    outputStream.flush ();
    System.out.println ("Flushed: " + System.currentTimeMillis ());
    Thread.sleep (120000);
    System.out.println ("Closing: " + System.currentTimeMillis ());
    socket.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25089866_26955613_1_13
25089866_28247342_1_15
Title: How to change the text color of SlidingTabLayout? 
----------------------------------------

@Override
public void onPageSelected (int position) {
    if (mScrollState == ViewPager.SCROLL_STATE_IDLE) {
        mTabStrip.onViewPagerPageChanged (position, 0f);
        scrollToTab (position, 0);
    }
    for (int i = 0;
    i < mTabStrip.getChildCount (); i ++) {
        mTabStrip.getChildAt (i).setSelected (position == i);
    }
    if (mViewPagerPageChangeListener != null) {
        mViewPagerPageChangeListener.onPageSelected (position);
    }
}
----------------------------------------

@Override
public void onPageSelected (int position) {
    if (mScrollState == ViewPager.SCROLL_STATE_IDLE) {
        mTabStrip.onViewPagerPageChanged (position, 0f);
        scrollToTab (position, 0);
    }
    mTabStrip.getChildAt (mCurrentTabIndex).setSelected (false);
    mTabStrip.getChildAt (position).setSelected (true);
    mCurrentTabIndex = position;
    if (mViewPagerPageChangeListener != null) {
        mViewPagerPageChangeListener.onPageSelected (position);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25090933_25091198_15_23
25090933_25091198_38_48
Title: Change JButton color and move JTextArea Caret Simultaneously 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    super.actionPerformed (e);
    if (cur) {
        btn.getModel ().setPressed (true);
        textToType.setCaretPosition (caretPosition ++);
    } else {
        btn.getModel ().setPressed (false);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (highlight) {
        btn.getModel ().setPressed (true);
        btn.setBackground (Color.GREEN);
        btn.setOpaque (true);
    } else {
        btn.getModel ().setPressed (false);
        btn.setBackground (null);
        btn.setOpaque (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25091218_39385941_3_17
25091218_43970614_2_39
Title: Print triangle (Half Pyramid) pattern using Java 
----------------------------------------

public static void main (String [] args) {
    int i, j;
    int num = 7;
    for (i = 0; i < num; i ++) {
        for (j = 0; j < i; j ++) {
            if (isConditionMatch (num, i, j)) {
                System.out.print ("0");
            } else {
                System.out.print ("1");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int space, rows = 11, k = 0;
    for (int i = 1;
    i <= rows; i ++) {
        for (space = 1; space <= (rows - i); space ++) {
            System.out.print ("  ");
        }
        while (k != (2 * i - 1)) {
            if (k % 2 == 0) {
                System.out.print ("1 ");
            }
            if (k % 2 != 0) {
                System.out.print ("0 ");
            } else {
                System.out.print ("");
            }
            k ++;
        }
        k = 0;
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25096875_25097319_25_47
25096875_25100030_41_69
Title: How do you make a visual grid in Java 
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2D = (Graphics2D) g;
    g2D.setColor (Color.lightGray);
    int p = 0;
    int c = 16;
    int len = c * n;
    for (int i = 0;
    i <= n; i ++) {
        g2D.drawLine (0, p, len, p);
        g2D.drawLine (p, 0, p, len);
        p += c;
    }
    int i = 10;
    int j = 20;
    g2D.setColor (Color.GREEN);
    int x = i * c;
    int y = j * c;
    g2D.fillOval (x, y, c, c);
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2D = (Graphics2D) g;
    g2D.setColor (Color.lightGray);
    int p = 0;
    int c = 16;
    int len = c * n;
    for (int i = 0;
    i <= n; i ++) {
        g2D.drawLine (0, p, len, p);
        g2D.drawLine (p, 0, p, len);
        p += c;
    }
    g2D.setColor (Color.GREEN);
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            if (cells [i] [j]) {
                int x = i * c;
                int y = j * c;
                g2D.fillOval (x, y, c, c);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25096875_25097319_3_12
25096875_25100030_8_17
Title: How do you make a visual grid in Java 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setTitle ("Grid Panel Example");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JApplet applet = new MyGrid ();
    applet.init ();
    frame.getContentPane ().add (applet);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setTitle ("Grid Panel Example");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JApplet applet = new MyGrid ();
    applet.init ();
    frame.getContentPane ().add (applet);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25114626_25119879_294_308
25114626_25119879_316_328
Title: Exception: java.lang.ArrayStoreException 
----------------------------------------

public boolean processData (final short [] data, final int offset, final int numShorts) {
    int numSamplesRequired = channels * frameSize;
    if (numShorts != numSamplesRequired) {
        throw new IllegalArgumentException ("SpeexEncoder requires " + numSamplesRequired + " samples to process a Frame, not " + numShorts);
    }
    for (int i = 0;
    i < numShorts; i ++) {
        rawData [i] = data [offset + i];
    }
    return processData (rawData, numShorts);
}
----------------------------------------

public boolean processData (final float [] data, final int numSamples) {
    int numSamplesRequired = channels * frameSize;
    if (numSamples != numSamplesRequired) {
        throw new IllegalArgumentException ("SpeexEncoder requires " + numSamplesRequired + " samples to process a Frame, not " + numSamples);
    }
    if (channels == 2) {
        Stereo.encode (bits, data, frameSize);
    }
    encoder.encode (bits, data);
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25130557_25130926_2_30
25130557_25131007_1_19
Title: Factory pattern to create Exceptions dynamically 
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }

    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

public static void throwException (final String key) throws Throwable {
    ExceptionMapping exceptionMapping = exceptionMappings.getExceptionMappings ().get (key);
    if (exceptionMapping != null) {
        try {
            Class < Throwable > exceptionClass = (Class < Throwable >) Class.forName (exceptionMapping.getClassName ());
            try {
                throw exceptionClass.cast (exceptionClass.newInstance ());
            } catch (InstantiationException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25130557_25130926_2_30
25130557_25131379_1_16
Title: Factory pattern to create Exceptions dynamically 
----------------------------------------

public static void throwException (String className) throws CheckedException, UncheckedException {
    Class < ? > exceptionClass;
    try {
        exceptionClass = Class.forName (className);
    } catch (ClassNotFoundException e) {
        throw new IllegalArgumentException (e);
    }
    try {
        if (CheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (CheckedException.class).newInstance ();
        } else if (UncheckedException.class.isAssignableFrom (exceptionClass)) {
            throw exceptionClass.asSubclass (UncheckedException.class).newInstance ();
        } else {
            throw new IllegalArgumentException ("Not a valid exception type: " + exceptionClass.getName ());
        }

    } catch (InstantiationException | IllegalAccessException e) {
        throw new IllegalStateException (e);
    }
}
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25130557_25131007_1_19
25130557_25131379_1_16
Title: Factory pattern to create Exceptions dynamically 
----------------------------------------

public static void throwException (final String key) throws Throwable {
    ExceptionMapping exceptionMapping = exceptionMappings.getExceptionMappings ().get (key);
    if (exceptionMapping != null) {
        try {
            Class < Throwable > exceptionClass = (Class < Throwable >) Class.forName (exceptionMapping.getClassName ());
            try {
                throw exceptionClass.cast (exceptionClass.newInstance ());
            } catch (InstantiationException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

static void throwException (final String exClassName) throws CheckedException, UncheckedException {
    Class < ? > clazz;
    try {
        clazz = Class.forName (exClassName);
    } catch (ClassNotFoundException cnfe) {
        throw new InternalError (exClassName, cnfe);
    }
    if (CheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (CheckedException.class));
    } else if (UncheckedException.class.isAssignableFrom (clazz)) {
        throw newException (clazz.asSubclass (UncheckedException.class));
    } else {
        throw new InternalError (exClassName + " is not a valid exception");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25147732_25147883_23_98
25147732_25148717_78_86
Title: "GridBagLayout how can I stop my screen from stretching when I'm placing my components?" 
----------------------------------------

public static void main (String [] args) {
    vframe = new JFrame ("MES Banking App");
    vpanel = new JPanel ();
    titlelabel = new JLabel ("Verification Page");
    namelabel = new JLabel ("Name: ");
    namefield = new JTextField (20);
    birthdaylabel = new JLabel ("Birth date: ");
    dayDD = new JLabel ("Day:");
    daysArray = new String [] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"};
    BDday = new JComboBox (daysArray);
    monthDD = new JLabel ("Month:");
    monthsArray = new String [] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"};
    BDmonth = new JComboBox (monthsArray);
    vpanel.setLayout (new GridBagLayout ());
    grid = new GridBagConstraints ();
    grid.fill = GridBagConstraints.CENTER;
    grid.insets = new Insets (5, 5, 5, 5);
    grid.weightx = 1.0;
    grid.weighty = 1.0;
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridx = 0;
    grid.gridy = 0;
    grid.gridwidth = 5;
    grid.gridheight = 1;
    vpanel.add (titlelabel, grid);
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridwidth = 1;
    grid.gridx = 0;
    grid.gridy = 1;
    vpanel.add (namelabel, grid);
    grid.gridx = 1;
    grid.gridy = 1;
    grid.gridwidth = 4;
    vpanel.add (namefield, grid);
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridx = 0;
    grid.gridy = 2;
    grid.gridwidth = 1;
    vpanel.add (birthdaylabel, grid);
    grid.gridx = 1;
    grid.gridy = 2;
    vpanel.add (dayDD, grid);
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridx = 2;
    grid.gridy = 2;
    vpanel.add (BDday, grid);
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridx = 3;
    grid.gridy = 2;
    vpanel.add (monthDD, grid);
    grid.fill = GridBagConstraints.HORIZONTAL;
    grid.gridx = 4;
    grid.gridy = 2;
    vpanel.add (BDmonth, grid);
    vframe.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    vframe.getContentPane ().add (vpanel);
    vframe.pack ();
    vframe.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            GridBagBankingApp ex = new GridBagBankingApp ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25149967_25150078_3_41
25149967_25150473_15_50
Title: Android program to GET values from server exits unexpectedly 
----------------------------------------

protected String doInBackground (Object...args) {
    try {
        HttpClient httpclient = new DefaultHttpClient ();
        HttpPost httppost = new HttpPost ("http://000.000.4.49/categories.php");
        httppost.setEntity (new UrlEncodedFormEntity (nameValuePairs));
        HttpResponse response = httpclient.execute (httppost);
        HttpEntity entity = response.getEntity ();
        is = entity.getContent ();
    } catch (Exception e) {
        Toast.makeText (getBaseContext (), e.toString (), Toast.LENGTH_LONG).show ();
    }
    try {
        BufferedReader reader = new BufferedReader (new InputStreamReader (is, "UTF-8"));
        sb = new StringBuilder ();
        String line = null;
        while ((line = reader.readLine ()) != null) {
            sb.append (line + "\n");
        }
        is.close ();
        result = sb.toString ();
    } catch (Exception e) {
        Toast.makeText (getBaseContext (), e.toString (), Toast.LENGTH_LONG).show ();
    }
    return some_data;
}
----------------------------------------

protected String doInBackground (Object...params) {
    String data = "";
    String url = (String) params [0];
    ArrayList < NameValuePair > args = (ArrayList < NameValuePair >) params [1];
    InputStream is = null;
    try {
        HttpClient httpclient = new DefaultHttpClient ();
        HttpPost httppost = new HttpPost (url);
        httppost.setEntity (new UrlEncodedFormEntity (args));
        HttpResponse response = httpclient.execute (httppost);
        HttpEntity entity = response.getEntity ();
        is = entity.getContent ();
    } catch (Exception e) {
        Log.e ("PHPRequestRetriever", "Error in http connection " + e.toString ());
        exception = e;
    }
    try {
        BufferedReader reader = new BufferedReader (new InputStreamReader (is, "UTF-8"), 8);
        StringBuilder sb = new StringBuilder ();
        String line = null;
        while ((line = reader.readLine ()) != null) {
            sb.append (line + "\n");
        }
        data = sb.toString ();
    } catch (Exception e) {
        Log.e ("log_tag", "Error converting result " + e.toString ());
        exception = e;
    } finally {
        is.close ();
    }
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25151300_25151809_14_21
25151300_25151809_23_46
Title: Java 2D Game Programming -SpriteSheet Animations 
----------------------------------------

public Animation (int speed, BufferedImage...args) {
    this.speed = speed;
    images = new BufferedImage [args.length];
    for (int i = 0;
    i < args.length; i ++) {
        images [i] = args [i];
    }
    frames = args.length;
}
----------------------------------------

public Animation (int speed, boolean flip, BufferedImage...args) {
    if (flip) {
        this.speed = speed;
        images = new BufferedImage [(args.length * 2) - 2];
        for (int i = 0;
        i < args.length; i ++) {
            images [i] = args [i];
        }
        BufferedImage [] temp = new BufferedImage [args.length - 2];
        for (int i = args.length - 2;
        i > 0; i --) {
            temp [args.length - i - 2] = images [i];
        }
        for (int i = args.length;
        i < images.length; i ++) {
            images [i] = temp [i - args.length];
        }
        frames = images.length;
    } else {
        this.speed = speed;
        images = new BufferedImage [args.length];
        for (int i = 0;
        i < args.length; i ++) {
            images [i] = args [i];
        }
        frames = args.length;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25153419_25153668_29_37
25153419_25154822_23_37
Title: Generating all possible combinations with a dynamic size d? 
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i < c (10, 3); i ++) {
        int [] res = getCombo (10, 3, i);
        System.out.print (i + " : ");
        for (int j : res) System.out.print (j + " ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int K = Integer.parseInt (br.readLine ());
    int N = Integer.parseInt (br.readLine ());
    StringTokenizer tok = new StringTokenizer (br.readLine ());
    int [] A = new int [N];
    for (int i = 0;
    i < N; ++ i) {
        A [i] = Integer.parseInt (tok.nextToken ());
    }
    printCombinations (K, A);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2515640_11_18
2515552_2515745_15_23
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += moc.action;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            moc.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (final ActionEvent evt) {
    updater.updateProposition (holder, action);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            panelUpdater.updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2515640_11_18
2515552_2516048_2_14
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += moc.action;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            moc.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    JComponent c = (JComponent) evt.getSoource ();
    int prop = (Integer) c.getclientProperty ("PROPOSITION");
    int act = (Integer) c.getclientProperty ("ACTION");
    SomeClass obj = c.getclientProperty ("UPDATE");
    prop += act;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            obj.updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2515640_11_18
2515552_2518452_6_13
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += moc.action;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            moc.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += action;
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2515745_15_23
2515552_2516048_2_14
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (final ActionEvent evt) {
    updater.updateProposition (holder, action);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            panelUpdater.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    JComponent c = (JComponent) evt.getSoource ();
    int prop = (Integer) c.getclientProperty ("PROPOSITION");
    int act = (Integer) c.getclientProperty ("ACTION");
    SomeClass obj = c.getclientProperty ("UPDATE");
    prop += act;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            obj.updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2515745_15_23
2515552_2518452_6_13
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (final ActionEvent evt) {
    updater.updateProposition (holder, action);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            panelUpdater.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += action;
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515552_2516048_2_14
2515552_2518452_6_13
Title: Can addition of an ActionListener be short? Can I add arguments to the actionPerformed? 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    JComponent c = (JComponent) evt.getSoource ();
    int prop = (Integer) c.getclientProperty ("PROPOSITION");
    int act = (Integer) c.getclientProperty ("ACTION");
    SomeClass obj = c.getclientProperty ("UPDATE");
    prop += act;
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            obj.updatePropositionPanel ();
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    proposition += action;
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            updatePropositionPanel ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2515858_2515876_1_16
2515858_47982124_3_33
Title: "Count Occurence of Needle String in Haystack String most optimally?" 
----------------------------------------

public static void main (String [] args) {
    String needle = "ABC";
    String haystack = "ABCDSGDABCSAGAABCCCCAAABAABC";
    int numberOfOccurences = 0;
    int index = haystack.indexOf (needle);
    while (index != - 1) {
        numberOfOccurences ++;
        haystack = haystack.substring (index + needle.length ());
        index = haystack.indexOf (needle);
    }
    System.out.println ("" + numberOfOccurences);
}
----------------------------------------

public static void main (String [] args) {
    String s = "AVBVDABCHJHDFABCJKHKHF", ned = "ABC";
    int nedIndex = - 1, count = 0, totalNed = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        if (i > ned.length () - 1) nedIndex ++;
        else nedIndex = i;

        if (s.charAt (i) == ned.charAt (nedIndex)) count ++;
        else {
            nedIndex = 0;
            count = 0;
            if (s.charAt (i) == ned.charAt (nedIndex)) count ++;
            else nedIndex = - 1;

        }
        if (count == ned.length ()) {
            nedIndex = - 1;
            count = 0;
            totalNed ++;
            System.out.println (totalNed + " needle found at index=" + (i - (ned.length () - 1)));
        }
    }
    System.out.print ("Total Ned=" + totalNed);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25170708_25170839_20_40
25170708_25171071_21_29
Title: Scroll Bars For Multiple JTextPanes (Java) 
----------------------------------------

void init () {
    panel = new JPanel (new GridLayout (2, 1));
    textPane = new JTextPane ();
    JScrollPane scroll1 = new JScrollPane (textPane);
    panel.add (scroll1);
    textPane_1 = new JTextPane ();
    JScrollPane scroll2 = new JScrollPane (textPane_1);
    panel.add (scroll2);
    getContentPane ().add (panel, BorderLayout.CENTER);
}
----------------------------------------

void init () {
    textPane = new JTextPane ();
    textPane_1 = new JTextPane ();
    JScrollPane scroll1 = new JScrollPane (textPane);
    scroll1.setViewportView (textPane);
    JScrollPane scroll2 = new JScrollPane (textPane_1);
    add (scroll1, BorderLayout.NORTH);
    add (scroll2, BorderLayout.SOUTH);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25170708_25170839_42_51
25170708_25171071_31_48
Title: Scroll Bars For Multiple JTextPanes (Java) 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            MyWindow window = new MyWindow ();
            window.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                ex.printStackTrace ();
            }
            Window frame = new Window ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25174506_25174700_20_47
25174506_25174786_47_80
Title: How do I avoid repetitiveness? 
----------------------------------------

String createFormula () {
    initiateIons ();
    String [] pieces1 = calculatePieces (compound1);
    int charge1 = Integer.parseInt (pieces1 [1]);
    int possitive1 = Integer.parseInt (pieces1 [3]);
    String [] pieces2 = calculatePieces (compound2);
    int charge2 = Integer.parseInt (pieces2 [1]);
    int possitive2 = Integer.parseInt (pieces2 [3]);
    if ((possitive1 == 1) & (possitive2 == 1)) {
        return pieces1 [2] + pieces2 [2];
    } else if (possitive1 == 1) {
        return pieces1 [2] + possitive2 + pieces2 [2];
    } else if (possitive2 == 1) {
        return pieces1 [2] + pieces2 [2] + possitive1;
    }

    if (possitive1 == 0) {
        possitive1 = - (charge1);
    }
    if (possitive2 == 0) {
        possitive2 = - (charge2);
    }
    return pieces1 [2] + possitive2 + pieces2 [2] + possitive1;
}
----------------------------------------

String createFormula () {
    Symbol symbol1 = new Symbol (map.get (compound1));
    Symbol symbol2 = new Symbol (map.get (compound2));
    int possitive1 = Math.abs (symbol1.charge);
    int possitive2 = Math.abs (symbol1.charge);
    if ((possitive1 == 1) & (possitive2 == 1)) {
        return symbol1.letter + symbol1.letter;
    } else if (possitive1 == 1) {
        return symbol1.letter + possitive2 + symbol2.letter;
    } else if (possitive2 == 1) {
        return symbol1.letter + symbol2.letter + possitive1;
    }

    return symbol1.letter + possitive2 + symbol2.letter + possitive1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25184589_25184834_5_35
25184589_25185160_3_23
Title: How to count occurance of element in array? 
----------------------------------------

public static void main (String args []) throws IOException {
    int flag = 0;
    String str = "muhammed";
    char [] Array = str.toCharArray ();
    for (int i = 0;
    i < 8; i ++) {
        flag = 0;
        for (int k = 0;
        k < i; k ++) {
            if (Array [k] == Array [i]) {
                flag = 1;
                break;
            }
        }
        int count = 1;
        for (int j = i + 1;
        j < 8; j ++) {
            if (Array [i] == (Array [j])) {
                count ++;
            }
        }
        if (flag != 1) System.out.println ("" + Array [i] + ":" + count);

    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    String str = "muhammed";
    char [] Array = str.toCharArray ();
    for (int i = 0;
    i < 8; i ++) {
        if (Array [i] != ' ') {
            int count = 1;
            for (int j = i + 1;
            j < 8; j ++) {
                if (Array [i] == (Array [j])) {
                    count ++;
                    Array [j] = ' ';
                }
            }
            System.out.println ("" + Array [i] + ":" + count);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25187446_25187918_15_27
25187446_25298212_26_38
Title: "If a class is loaded multiple times do its static-members get initialized multiple times?" 
----------------------------------------

public static void main (String [] args) {
    CustomClassLoader loader = new CustomClassLoader ();
    try {
        Class < ? > c = loader.findClass ("sample.Sample");
        Object o = c.newInstance ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    } catch (InstantiationException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String...argv) throws ClassNotFoundException {
    Class < Foo > fooClass = loadClass ();
    initializeClass (fooClass);
    URLClassLoader myClassLoader = ((URLClassLoader) InitializeClassMultipleTimes.class.getClassLoader ());
    URL [] urls = myClassLoader.getURLs ();
    for (int i = 0;
    i < 2; i ++) {
        URLClassLoader newClassLoader = new URLClassLoader (urls, null);
        System.out.format ("%nLoading class using another class loader%n", Foo.class.getSimpleName ());
        Class < ? > fooClassAgain = Class.forName (fooClass.getName (), false, newClassLoader);
        initializeClass (fooClassAgain);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25195533_25195581_1_32
25195533_25207166_35_74
Title: Incorrect implementation of QuickSort 
----------------------------------------

public static int partition (Vector < Integer > container, int left, int right) {
    int i = left - 1;
    int j = right + 1;
    int pivot = container.get (left);
    while (true) {
        do {
            i ++;
        } while (container.get (i) < pivot);
        do {
            j --;
        } while (container.get (j) > pivot);
        if (i < j) {
            int tmp = container.get (i);
            container.set (i, container.get (j));
            container.set (j, tmp);
        } else {
            break;
        }
    }
    return j;
}
----------------------------------------

public static int partition (Vector < Integer > container, int left, int right) {
    int i = left, j = right;
    int tmp;
    int pivot = container.get (left);
    i ++;
    while (i <= j) {
        while (container.get (i) < pivot) i ++;

        while (container.get (j) > pivot) j --;

        if (i <= j) {
            tmp = container.get (i);
            container.set (i, container.get (j));
            container.set (j, tmp);
            i ++;
            j --;
        }
    }
    tmp = container.get (left);
    container.set (left, container.get (i - 1));
    container.set (i - 1, tmp);
    return i - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_25286486_2_38
25198726_26743626_2_19
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int [] leftSums = new int [A.length];
    for (int i = 0;
    i < leftSums.length; i ++) {
        leftSums [i] = 0;
    }
    int sum = 0;
    for (int i = 0;
    i < A.length; i ++) {
        sum += A [i];
        leftSums [i] = sum;
    }
    final int total = sum;
    int minDiff = Integer.MAX_VALUE;
    int currDiff = 0;
    for (int i = 0;
    i < leftSums.length; i ++) {
        currDiff = Math.abs (leftSums [i] - (total - leftSums [i]));
        if (currDiff < minDiff) {
            minDiff = currDiff;
        }
    }
    return minDiff;
}
----------------------------------------

public int solution (int [] A) {
    final int size = A.length;
    long sumMin = (int) A [0];
    long sumMax = 0;
    for (int i = 1;
    i < size; i ++) {
        sumMax += (int) A [i];
    }
    int minDif = (int) Math.abs (sumMax - sumMin);
    for (int i = 1;
    i < size; i ++) {
        int dif = (int) Math.abs (sumMax - sumMin);
        if (dif < minDif) {
            minDif = dif;
        }
        sumMin += A [i];
        sumMax -= A [i];
    }
    return minDif;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_25286486_2_38
25198726_27542124_1_17
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int [] leftSums = new int [A.length];
    for (int i = 0;
    i < leftSums.length; i ++) {
        leftSums [i] = 0;
    }
    int sum = 0;
    for (int i = 0;
    i < A.length; i ++) {
        sum += A [i];
        leftSums [i] = sum;
    }
    final int total = sum;
    int minDiff = Integer.MAX_VALUE;
    int currDiff = 0;
    for (int i = 0;
    i < leftSums.length; i ++) {
        currDiff = Math.abs (leftSums [i] - (total - leftSums [i]));
        if (currDiff < minDiff) {
            minDiff = currDiff;
        }
    }
    return minDiff;
}
----------------------------------------

public int solution (int [] A) {
    int sumMin = A [0];
    int sumMax = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumMax += A [i];
    }
    int minDif = Math.abs (sumMin - sumMax);
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumMin += A [i];
        sumMax -= A [i];
        minDif = Math.min (minDif, Math.abs (sumMin - sumMax));
    }
    return minDif;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_25286486_2_38
25198726_27641072_2_23
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int [] leftSums = new int [A.length];
    for (int i = 0;
    i < leftSums.length; i ++) {
        leftSums [i] = 0;
    }
    int sum = 0;
    for (int i = 0;
    i < A.length; i ++) {
        sum += A [i];
        leftSums [i] = sum;
    }
    final int total = sum;
    int minDiff = Integer.MAX_VALUE;
    int currDiff = 0;
    for (int i = 0;
    i < leftSums.length; i ++) {
        currDiff = Math.abs (leftSums [i] - (total - leftSums [i]));
        if (currDiff < minDiff) {
            minDiff = currDiff;
        }
    }
    return minDiff;
}
----------------------------------------

public int solution (int [] A) {
    int sumPre = A [0];
    int sumPost = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumPost += A [i];
    }
    int difMin = Math.abs (sumPost - sumPre);
    int tempSub = 0;
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumPre += A [i];
        sumPost -= A [i];
        tempSub = Math.abs (sumPost - sumPre);
        if (tempSub < difMin) {
            difMin = tempSub;
        }
    }
    return difMin;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_25286486_2_38
25198726_30416528_1_22
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int [] leftSums = new int [A.length];
    for (int i = 0;
    i < leftSums.length; i ++) {
        leftSums [i] = 0;
    }
    int sum = 0;
    for (int i = 0;
    i < A.length; i ++) {
        sum += A [i];
        leftSums [i] = sum;
    }
    final int total = sum;
    int minDiff = Integer.MAX_VALUE;
    int currDiff = 0;
    for (int i = 0;
    i < leftSums.length; i ++) {
        currDiff = Math.abs (leftSums [i] - (total - leftSums [i]));
        if (currDiff < minDiff) {
            minDiff = currDiff;
        }
    }
    return minDiff;
}
----------------------------------------

int solution (int A [], int N) {
    int sum, i;
    sum = 0;
    for (i = 0; i < N; i ++) {
        sum += A [i];
        A [i] = sum;
    }
    int min_diff = abs (sum - A [0] * 2);
    for (i = 0; i < N - 1; i ++) {
        int tmp;
        tmp = abs (sum - A [i] * 2);
        if (tmp < min_diff) min_diff = tmp;

    }
    return min_diff;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_26743626_2_19
25198726_27542124_1_17
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    final int size = A.length;
    long sumMin = (int) A [0];
    long sumMax = 0;
    for (int i = 1;
    i < size; i ++) {
        sumMax += (int) A [i];
    }
    int minDif = (int) Math.abs (sumMax - sumMin);
    for (int i = 1;
    i < size; i ++) {
        int dif = (int) Math.abs (sumMax - sumMin);
        if (dif < minDif) {
            minDif = dif;
        }
        sumMin += A [i];
        sumMax -= A [i];
    }
    return minDif;
}
----------------------------------------

public int solution (int [] A) {
    int sumMin = A [0];
    int sumMax = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumMax += A [i];
    }
    int minDif = Math.abs (sumMin - sumMax);
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumMin += A [i];
        sumMax -= A [i];
        minDif = Math.min (minDif, Math.abs (sumMin - sumMax));
    }
    return minDif;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_26743626_2_19
25198726_27641072_2_23
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    final int size = A.length;
    long sumMin = (int) A [0];
    long sumMax = 0;
    for (int i = 1;
    i < size; i ++) {
        sumMax += (int) A [i];
    }
    int minDif = (int) Math.abs (sumMax - sumMin);
    for (int i = 1;
    i < size; i ++) {
        int dif = (int) Math.abs (sumMax - sumMin);
        if (dif < minDif) {
            minDif = dif;
        }
        sumMin += A [i];
        sumMax -= A [i];
    }
    return minDif;
}
----------------------------------------

public int solution (int [] A) {
    int sumPre = A [0];
    int sumPost = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumPost += A [i];
    }
    int difMin = Math.abs (sumPost - sumPre);
    int tempSub = 0;
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumPre += A [i];
        sumPost -= A [i];
        tempSub = Math.abs (sumPost - sumPre);
        if (tempSub < difMin) {
            difMin = tempSub;
        }
    }
    return difMin;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_26743626_2_19
25198726_30416528_1_22
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    final int size = A.length;
    long sumMin = (int) A [0];
    long sumMax = 0;
    for (int i = 1;
    i < size; i ++) {
        sumMax += (int) A [i];
    }
    int minDif = (int) Math.abs (sumMax - sumMin);
    for (int i = 1;
    i < size; i ++) {
        int dif = (int) Math.abs (sumMax - sumMin);
        if (dif < minDif) {
            minDif = dif;
        }
        sumMin += A [i];
        sumMax -= A [i];
    }
    return minDif;
}
----------------------------------------

int solution (int A [], int N) {
    int sum, i;
    sum = 0;
    for (i = 0; i < N; i ++) {
        sum += A [i];
        A [i] = sum;
    }
    int min_diff = abs (sum - A [0] * 2);
    for (i = 0; i < N - 1; i ++) {
        int tmp;
        tmp = abs (sum - A [i] * 2);
        if (tmp < min_diff) min_diff = tmp;

    }
    return min_diff;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_27542124_1_17
25198726_30416528_1_22
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int sumMin = A [0];
    int sumMax = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumMax += A [i];
    }
    int minDif = Math.abs (sumMin - sumMax);
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumMin += A [i];
        sumMax -= A [i];
        minDif = Math.min (minDif, Math.abs (sumMin - sumMax));
    }
    return minDif;
}
----------------------------------------

int solution (int A [], int N) {
    int sum, i;
    sum = 0;
    for (i = 0; i < N; i ++) {
        sum += A [i];
        A [i] = sum;
    }
    int min_diff = abs (sum - A [0] * 2);
    for (i = 0; i < N - 1; i ++) {
        int tmp;
        tmp = abs (sum - A [i] * 2);
        if (tmp < min_diff) min_diff = tmp;

    }
    return min_diff;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25198726_27641072_2_23
25198726_30416528_1_22
Title: Tape-Equilibrium Codility Training program 
----------------------------------------

public int solution (int [] A) {
    int sumPre = A [0];
    int sumPost = 0;
    for (int i = 1;
    i < A.length; i ++) {
        sumPost += A [i];
    }
    int difMin = Math.abs (sumPost - sumPre);
    int tempSub = 0;
    for (int i = 1;
    i < A.length - 1; i ++) {
        sumPre += A [i];
        sumPost -= A [i];
        tempSub = Math.abs (sumPost - sumPre);
        if (tempSub < difMin) {
            difMin = tempSub;
        }
    }
    return difMin;
}
----------------------------------------

int solution (int A [], int N) {
    int sum, i;
    sum = 0;
    for (i = 0; i < N; i ++) {
        sum += A [i];
        A [i] = sum;
    }
    int min_diff = abs (sum - A [0] * 2);
    for (i = 0; i < N - 1; i ++) {
        int tmp;
        tmp = abs (sum - A [i] * 2);
        if (tmp < min_diff) min_diff = tmp;

    }
    return min_diff;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_26680622_7_23
25204481_35256610_5_20
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a number that consist of 5 digits: ");
    int num = scan.nextInt ();
    int digit1 = num / 10000;
    int digit2 = ((num % 10000) / 1000);
    int digit3 = ((num % 1000) / 100);
    int digit4 = ((num % 100) / 10);
    int digit5 = (num % 10);
    System.out.print (digit1 + "\t");
    System.out.print (digit2 + "\t");
    System.out.print (digit3 + "\t");
    System.out.print (digit4 + "\t");
    System.out.println (digit5 + "\t");
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int nr, nr1, nr2, nr3, nr4, nr5;
    System.out.print ("Enter a number with 5 digits: ");
    nr = in.nextInt ();
    nr1 = nr / 10000;
    nr2 = (nr % 10000) / 1000;
    nr3 = ((nr % 10000) % 1000) / 100;
    nr4 = (((nr % 10000) % 1000) % 100) / 10;
    nr5 = (((nr % 10000) % 1000) % 100) % 10;
    System.out.printf ("%d%s%d%s%d%s%d%s%d%n", nr1, " ", nr2, " ", nr3, " ", nr4, " ", nr5);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_26680622_7_23
25204481_35269214_4_21
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a number that consist of 5 digits: ");
    int num = scan.nextInt ();
    int digit1 = num / 10000;
    int digit2 = ((num % 10000) / 1000);
    int digit3 = ((num % 1000) / 100);
    int digit4 = ((num % 100) / 10);
    int digit5 = (num % 10);
    System.out.print (digit1 + "\t");
    System.out.print (digit2 + "\t");
    System.out.print (digit3 + "\t");
    System.out.print (digit4 + "\t");
    System.out.println (digit5 + "\t");
}
----------------------------------------

public static void main (String args []) throws Exception {
    System.out.println ("Enter number:");
    Scanner sc = new Scanner (System.in);
    int number = sc.nextInt ();
    System.out.println ("You have entered:" + number);
    String str = String.valueOf (number);
    int length = str.length ();
    if (length > 0) {
        int [] digits = new int [length];
        for (int i = 0;
        i < length; i ++) {
            digits [i] = Integer.parseInt (String.valueOf (str.charAt (i)));
        }
        for (int i = 0;
        i < digits.length; i ++) {
            System.out.println ("Digits:" + digits [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_26680622_7_23
25204481_51288077_4_20
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a number that consist of 5 digits: ");
    int num = scan.nextInt ();
    int digit1 = num / 10000;
    int digit2 = ((num % 10000) / 1000);
    int digit3 = ((num % 1000) / 100);
    int digit4 = ((num % 100) / 10);
    int digit5 = (num % 10);
    System.out.print (digit1 + "\t");
    System.out.print (digit2 + "\t");
    System.out.print (digit3 + "\t");
    System.out.print (digit4 + "\t");
    System.out.println (digit5 + "\t");
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int digit;
    System.out.print ("Enter a positive number: ");
    digit = input.nextInt ();
    int power = 1;
    while (power <= digit) {
        power *= 10;
    }
    power /= 10;
    while (power > 0) {
        System.out.println (digit / power);
        digit %= power;
        power /= 10;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_35256610_5_20
25204481_35269214_4_21
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int nr, nr1, nr2, nr3, nr4, nr5;
    System.out.print ("Enter a number with 5 digits: ");
    nr = in.nextInt ();
    nr1 = nr / 10000;
    nr2 = (nr % 10000) / 1000;
    nr3 = ((nr % 10000) % 1000) / 100;
    nr4 = (((nr % 10000) % 1000) % 100) / 10;
    nr5 = (((nr % 10000) % 1000) % 100) % 10;
    System.out.printf ("%d%s%d%s%d%s%d%s%d%n", nr1, " ", nr2, " ", nr3, " ", nr4, " ", nr5);
}
----------------------------------------

public static void main (String args []) throws Exception {
    System.out.println ("Enter number:");
    Scanner sc = new Scanner (System.in);
    int number = sc.nextInt ();
    System.out.println ("You have entered:" + number);
    String str = String.valueOf (number);
    int length = str.length ();
    if (length > 0) {
        int [] digits = new int [length];
        for (int i = 0;
        i < length; i ++) {
            digits [i] = Integer.parseInt (String.valueOf (str.charAt (i)));
        }
        for (int i = 0;
        i < digits.length; i ++) {
            System.out.println ("Digits:" + digits [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_35256610_5_20
25204481_51288077_4_20
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int nr, nr1, nr2, nr3, nr4, nr5;
    System.out.print ("Enter a number with 5 digits: ");
    nr = in.nextInt ();
    nr1 = nr / 10000;
    nr2 = (nr % 10000) / 1000;
    nr3 = ((nr % 10000) % 1000) / 100;
    nr4 = (((nr % 10000) % 1000) % 100) / 10;
    nr5 = (((nr % 10000) % 1000) % 100) % 10;
    System.out.printf ("%d%s%d%s%d%s%d%s%d%n", nr1, " ", nr2, " ", nr3, " ", nr4, " ", nr5);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int digit;
    System.out.print ("Enter a positive number: ");
    digit = input.nextInt ();
    int power = 1;
    while (power <= digit) {
        power *= 10;
    }
    power /= 10;
    while (power > 0) {
        System.out.println (digit / power);
        digit %= power;
        power /= 10;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25204481_35269214_4_21
25204481_51288077_4_20
Title: Separating the Digits in an Integer - exercise from Deitel's Java book 
----------------------------------------

public static void main (String args []) throws Exception {
    System.out.println ("Enter number:");
    Scanner sc = new Scanner (System.in);
    int number = sc.nextInt ();
    System.out.println ("You have entered:" + number);
    String str = String.valueOf (number);
    int length = str.length ();
    if (length > 0) {
        int [] digits = new int [length];
        for (int i = 0;
        i < length; i ++) {
            digits [i] = Integer.parseInt (String.valueOf (str.charAt (i)));
        }
        for (int i = 0;
        i < digits.length; i ++) {
            System.out.println ("Digits:" + digits [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int digit;
    System.out.print ("Enter a positive number: ");
    digit = input.nextInt ();
    int power = 1;
    while (power <= digit) {
        power *= 10;
    }
    power /= 10;
    while (power > 0) {
        System.out.println (digit / power);
        digit %= power;
        power /= 10;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25215564_25216060_1_10
25215564_25341602_1_12
Title: How to read a line from InputStream without buffering the input? 
----------------------------------------

public static String readLine (InputStream inputStream) throws IOException {
    InputStreamReader inputStreamReader = new InputStreamReader (inputStream, "UTF-8");
    StringBuilder stringBuilder = new StringBuilder ();
    int c;
    for (c = reader.read (); c != '\n' && c != - 1; c = reader.read ()) {
        stringBuilder.append ((char) c);
    }
    if (c == - 1 && stringBuilder.length () == 0) return null;

    return stringBuilder.toString ();
}
----------------------------------------

public static String readLine (InputStream inputStream) throws IOException {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream ();
    int c;
    for (c = inputStream.read (); c != '\n' && c != - 1; c = inputStream.read ()) {
        byteArrayOutputStream.write (c);
    }
    if (c == - 1 && byteArrayOutputStream.size () == 0) {
        return null;
    }
    String line = byteArrayOutputStream.toString ("UTF-8");
    return line;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2521721_2521726_3_13
2521721_2521731_3_19
Title: Why can't I use 'continue' inside a switch statement in Java? 
----------------------------------------

public static void main (String [] args) {
    int a = 98;
    switch (a) {
        default :
            {
                System.out.println ("default");
                break;
            } case 'b' :
            {
                System.out.println (a);
                break;
            } case 'a' :
            {
                System.out.println (a);
            }}
    System.out.println ("Switch Completed");
}
----------------------------------------

public static void main (String [] args) {
    int a = 98;
    switch (a) {
        default :
            System.out.println ("default");
            break;
        case 'b' :
            System.out.println (a);
            break;
        case 'a' :
            System.out.println (a);
            break;
    }
    System.out.println ("Switch Completed");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2521721_2521726_3_13
2521721_2521752_2_16
Title: Why can't I use 'continue' inside a switch statement in Java? 
----------------------------------------

public static void main (String [] args) {
    int a = 98;
    switch (a) {
        default :
            {
                System.out.println ("default");
                break;
            } case 'b' :
            {
                System.out.println (a);
                break;
            } case 'a' :
            {
                System.out.println (a);
            }}
    System.out.println ("Switch Completed");
}
----------------------------------------

public static void main (String [] args) {
    loop : for (int i = 0;
    i < 10; i ++) {
        switch (i) {
            case 1 :
            case 3 :
            case 5 :
            case 7 :
            case 9 :
                continue loop;
        }
        System.out.println (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2521721_2521731_3_19
2521721_2521752_2_16
Title: Why can't I use 'continue' inside a switch statement in Java? 
----------------------------------------

public static void main (String [] args) {
    int a = 98;
    switch (a) {
        default :
            System.out.println ("default");
            break;
        case 'b' :
            System.out.println (a);
            break;
        case 'a' :
            System.out.println (a);
            break;
    }
    System.out.println ("Switch Completed");
}
----------------------------------------

public static void main (String [] args) {
    loop : for (int i = 0;
    i < 10; i ++) {
        switch (i) {
            case 1 :
            case 3 :
            case 5 :
            case 7 :
            case 9 :
                continue loop;
        }
        System.out.println (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25226832_25226898_2_23
25226832_49689819_2_11
Title: Count frequency of character from a String without using Collection? 
----------------------------------------

public static void main (String [] args) {
    String str = "aasbkllzzzs";
    int [] freq = new int [128];
    for (char ch : str.toCharArray ()) {
        freq [ch] ++;
    }
    System.out.println ("Frequencies : ");
    for (int i = 0;
    i < freq.length; i ++) {
        if (freq [i] != 0) {
            System.out.println ("Char : " + (char) i + ", Count : " + freq [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "I am an Indian";
    int [] i = new int [128];
    for (int j = 0;
    j < s.length (); j ++) {
        i [(int) s.charAt (j)] ++;
    }
    for (int k = (int) 'A';
    k < (int) 'A' + 58; k ++) {
        System.out.println ((char) k + " " + i [k]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25231149_25231245_22_43
25231149_45310132_5_20
Title: Can I use Callable threads without ExecutorService? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    ExecutorService execService = Executors.newFixedThreadPool (THREAD_COUNT);
    CompletionService < Integer > completionService = new ExecutorCompletionService < > (execService);
    for (int i = 0;
    i < THREAD_COUNT; i ++) {
        completionService.submit (new WordLengthCallable ());
    }
    execService.shutdown ();
    try {
        while (! execService.isTerminated ()) {
            int result = completionService.take ().get ().intValue ();
            System.out.println ("Result is: " + result);
        }
    } catch (ExecutionException e) {
        e.printStackTrace ();
    }
    Thread.sleep (1000);
    System.out.println ("done!");
}
----------------------------------------

public static void main (String [] args) {
    try {
        Callable < String > c = () -> {
            System.out.println (Thread.currentThread ().getName ());
            return "true";
        };
        FutureTask < String > ft = new FutureTask < String > (c);
        Thread t = new Thread (ft);
        t.start ();
        String result = ft.get ();
        System.out.println (result);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25236408_25236499_41_52
25236408_25236720_41_53
Title: "Disabling remaining Buttons On Click of one button" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getActionCommand ().equals ("Primary")) {
        secondaryButton.setVisible (false);
        PrimaryWorker worker = new PrimaryWorker (secondaryButton);
        worker.execute ();
    } else if (e.getActionCommand ().equals ("Secondary")) {
        primaryButton.setVisible (false);
        SecondaryWorker secondaryWorker = new SecondaryWorker (primaryButton);
        secondaryWorker.execute ();
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getActionCommand ().equals ("Primary")) {
        secondaryButton.setVisible (false);
        primaryButton.setEnabled (false);
        run_btn_1 ();
    } else if (e.getActionCommand ().equals ("Secondary")) {
        primaryButton.setVisible (false);
        secondaryButton.setEnabled (false);
        run_btn_2 ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25243547_25250874_163_180
25243547_25250874_188_218
Title: LoadException with FXML created with Scene Builder 2.0 
----------------------------------------

public void onChanged (Change < ? extends String > c) {
    if (projectsView == null) {
        return;
    }
    while (c.next ()) {
        if (c.wasAdded () || c.wasReplaced ()) {
            for (String p : c.getAddedSubList ()) {
                projectsView.add (p);
            }
        }
        if (c.wasRemoved () || c.wasReplaced ()) {
            for (String p : c.getRemoved ()) {
                projectsView.remove (p);
            }
        }
    }
    FXCollections.sort (projectsView);
}
----------------------------------------

public void onChanged (Change < ? extends String > c) {
    if (table == null) {
        return;
    }
    while (c.next ()) {
        if (c.wasAdded () || c.wasReplaced ()) {
            for (String p : c.getAddedSubList ()) {
                table.getItems ().add (model.getIssue (p));
            }
        }
        if (c.wasRemoved () || c.wasReplaced ()) {
            for (String p : c.getRemoved ()) {
                ObservableIssue removed = null;
                for (ObservableIssue t : table.getItems ()) {
                    if (t.getId ().equals (p)) {
                        removed = t;
                        break;
                    }
                }
                if (removed != null) {
                    table.getItems ().remove (removed);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25243992_25244817_114_126
25243992_25244817_135_178
Title: Broken logic causing if statement not to work 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    numberToGuess = 1 + random.nextInt (100);
    countLabel.setText ("# of guesses: 0");
    alertLabel.setForeground (Color.BLACK);
    alertLabel.setText ("Awaiting Input");
    guessField.setText ("");
    cheat.setText (String.valueOf (numberToGuess));
    guessCount = 0;
    lastDist = 0;
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int guess;
    try {
        guess = Integer.parseInt (guessField.getText ());
    } catch (NumberFormatException e) {
        alertLabel.setText ("That is not a number!");
        return;
    }
    if (guess < GUESS_MIN || guess > GUESS_MAX) {
        alertLabel.setText ("That number is out of range!");
        lastDist = distance (guess);
        guessCount ++;
        return;
    }
    if (guessCount == 0) {
        if (guess > numberToGuess) {
            alertLabel.setText ("Too high. ");
        } else if (guess < numberToGuess) {
            alertLabel.setText ("Too low. ");
        }

        lastDist = distance (guess);
        guessCount ++;
        return;
    }
    if (guess == numberToGuess) {
        alertLabel.setText ("Correct!");
        alertLabel.setForeground (Color.GREEN);
        return;
    }
    int dist = distance (guess);
    if (dist < lastDist) {
        alertLabel.setForeground (Color.RED);
        alertLabel.setText (" Getting warmer");
    } else if (dist > lastDist) {
        alertLabel.setForeground (Color.BLUE);
        alertLabel.setText ("Getting colder");
    } else {
        alertLabel.setForeground (Color.BLACK);
        alertLabel.setText ("Why did you enter the same number?");
    }

    lastDist = dist;
    cheat2.setText (String.valueOf (guess));
    guessCount ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25259252_25862320_15_31
25259252_25862320_1_14
Title: How to embed JComponent in html element in JTextPane 
----------------------------------------

private boolean insertComponent (int position, String id, Component c, AttributeSet inputAttributes) {
    try {
        String toInsert = "<span id='" + id + "'>&nbsp;</span>";
        int pushDepth, popDepth;
        pushDepth = isEOL (position - 1) ? 1 : 0;
        popDepth = pushDepth;
        editorKit.insertHTML (htmlDoc, position, toInsert, popDepth, pushDepth, Tag.SPAN);
        htmlDoc.setCharacterAttributes (position, 1, inputAttributes, false);
        htmlDoc.insertString (position + 1, " ", null);
        htmlDoc.remove (position + 1, 1);
        return true;
    } catch (IOException | BadLocationException ex) {
        Logger.getLogger (Editeur.class.getName ()).log (Level.SEVERE, null, ex);
    }
    return false;
}
----------------------------------------

protected void insertComponent (Component c, long id) {
    if (this.getSelectedText () != null && this.getSelectedText ().length () > 0) {
        try {
            htmlDoc.remove (this.getSelectionStart (), this.getSelectedText ().length ());
        } catch (BadLocationException ex) {
            Logger.getLogger (Editeur.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
    int position = getSelectionStart ();
    MutableAttributeSet inputAttributes = new SimpleAttributeSet ();
    StyleConstants.setComponent (inputAttributes, c);
    inputAttributes.addAttribute (COMPONENT_ID_ATTRIBUTE, id);
    insertComponent (position, id, c, inputAttributes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25263085_25263242_3_17
25263085_25263505_1_23
Title: Incrementing different variables on different conditions 
----------------------------------------

public static void main (String [] args) {
    HashMap < String, Integer > map = new HashMap < String, Integer > ();
    map.put ("counter5", 1);
    map.put ("counter4", 1);
    map.put ("counter2", 1);
    map.put ("counter1", 1);
    int diff = 2;
    compute (map, diff);
    diff = 2;
    compute (map, diff);
    diff = 1;
    compute (map, diff);
}
----------------------------------------

public static void main (String [] args) {
    int [] aaa = new int [] {10, 2, 4, 5, 7, 8, 3, 34, 4, 4, 545, 5, 3, 4, 4, 5, 5, 5, 10, 3, 4, 45, 6, 2, 7};
    Map < Integer, Integer > all_counts = new LinkedHashMap < Integer, Integer > ();
    for (int key : aaa) {
        if (all_counts.containsKey (key)) {
            Integer count = all_counts.get (key);
            count ++;
            all_counts.put (key, count);
        } else {
            all_counts.put (key, 1);
        }
    }
    for (Map.Entry < Integer, Integer > entry : all_counts.entrySet ()) {
        System.out.println (entry.getKey () + "-->" + entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25267344_25274468_12_30
25267344_25274468_37_49
Title: Running External Program in Eclipse 
----------------------------------------

public void run () {
    BufferedWriter stdin = new BufferedWriter (new OutputStreamWriter (proc.getOutputStream ()));
    BufferedReader myStdin = new BufferedReader (new InputStreamReader (System.in));
    String line = null;
    try {
        do {
            line = myStdin.readLine ();
            stdin.write (String.format ("%s%n", line));
            stdin.flush ();
        } while (! "exit".equalsIgnoreCase (line));
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    BufferedReader stdout = new BufferedReader (new InputStreamReader (proc.getInputStream ()));
    String line;
    try {
        while (null != (line = stdout.readLine ())) {
            System.out.printf ("[stdout] %s%n", line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25267344_25274468_12_30
25267344_25274468_54_66
Title: Running External Program in Eclipse 
----------------------------------------

public void run () {
    BufferedWriter stdin = new BufferedWriter (new OutputStreamWriter (proc.getOutputStream ()));
    BufferedReader myStdin = new BufferedReader (new InputStreamReader (System.in));
    String line = null;
    try {
        do {
            line = myStdin.readLine ();
            stdin.write (String.format ("%s%n", line));
            stdin.flush ();
        } while (! "exit".equalsIgnoreCase (line));
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    BufferedReader stderr = new BufferedReader (new InputStreamReader (proc.getErrorStream ()));
    String line;
    try {
        while (null != (line = stderr.readLine ())) {
            System.err.printf ("[stderr] %s%n", line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25280863_25280909_22_31
25280863_25281102_11_19
Title: Inheritance super variables 
----------------------------------------

public Employee (String username, String name, String surname, String pswd, int id, int hpw, String date, int rSold, float hPay) {
    super (id, name, surname);
    this.username = username;
    this.password = pswd;
    this.hpw = hpw;
    this.date = date;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------

public Employee (String username, String name, String surname, String password, int id, int hpw, String date, int rSold, float hPay) {
    super (id, name, surname);
    this.username = username;
    this.password = password;
    this.hpw = hpw;
    this.date = date;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25280863_25280909_22_31
25280863_25281518_12_20
Title: Inheritance super variables 
----------------------------------------

public Employee (String username, String name, String surname, String pswd, int id, int hpw, String date, int rSold, float hPay) {
    super (id, name, surname);
    this.username = username;
    this.password = pswd;
    this.hpw = hpw;
    this.date = date;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------

public Employee (String u, String n, String s, String p, int i, int h, String d, int rSold, float hPay) {
    super (id, name, surname);
    this.username = u;
    this.password = p;
    this.hpw = h;
    this.date = d;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25280863_25281102_11_19
25280863_25281518_12_20
Title: Inheritance super variables 
----------------------------------------

public Employee (String username, String name, String surname, String password, int id, int hpw, String date, int rSold, float hPay) {
    super (id, name, surname);
    this.username = username;
    this.password = password;
    this.hpw = hpw;
    this.date = date;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------

public Employee (String u, String n, String s, String p, int i, int h, String d, int rSold, float hPay) {
    super (id, name, surname);
    this.username = u;
    this.password = p;
    this.hpw = h;
    this.date = d;
    this.recordSold = rSold;
    this.hourPay = hPay;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2528344_23565776_7_24
2528344_2531617_14_22
Title: JList - deselect when clicking an already selected item 
----------------------------------------

public void setSelectionInterval (int index0, int index1) {
    if (! mGestureStarted) {
        if (isSelectedIndex (index0)) {
            super.removeSelectionInterval (index0, index1);
        } else {
            if (getSelectionMode () == SINGLE_SELECTION) {
                super.setSelectionInterval (index0, index1);
            } else {
                super.addSelectionInterval (index0, index1);
            }
        }
    }
    mGestureStarted = getValueIsAdjusting ();
}
----------------------------------------

public void setSelectionInterval (int index0, int index1) {
    if (index0 == index1) {
        if (isSelectedIndex (index0)) {
            removeSelectionInterval (index0, index0);
            return;
        }
    }
    super.setSelectionInterval (index0, index1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2528344_23565776_7_24
2528344_31336378_5_21
Title: JList - deselect when clicking an already selected item 
----------------------------------------

public void setSelectionInterval (int index0, int index1) {
    if (! mGestureStarted) {
        if (isSelectedIndex (index0)) {
            super.removeSelectionInterval (index0, index1);
        } else {
            if (getSelectionMode () == SINGLE_SELECTION) {
                super.setSelectionInterval (index0, index1);
            } else {
                super.addSelectionInterval (index0, index1);
            }
        }
    }
    mGestureStarted = getValueIsAdjusting ();
}
----------------------------------------

public void setSelectionInterval (int startIndex, int endIndex) {
    if (startIndex == endIndex) {
        if (multipleItemsAreCurrentlySelected ()) {
            clearSelection ();
        }
        if (isSelectedIndex (startIndex)) {
            clearSelection ();
        } else {
            super.setSelectionInterval (startIndex, endIndex);
        }
    } else {
        super.setSelectionInterval (startIndex, endIndex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2528344_2531617_14_22
2528344_31336378_5_21
Title: JList - deselect when clicking an already selected item 
----------------------------------------

public void setSelectionInterval (int index0, int index1) {
    if (index0 == index1) {
        if (isSelectedIndex (index0)) {
            removeSelectionInterval (index0, index0);
            return;
        }
    }
    super.setSelectionInterval (index0, index1);
}
----------------------------------------

public void setSelectionInterval (int startIndex, int endIndex) {
    if (startIndex == endIndex) {
        if (multipleItemsAreCurrentlySelected ()) {
            clearSelection ();
        }
        if (isSelectedIndex (startIndex)) {
            clearSelection ();
        } else {
            super.setSelectionInterval (startIndex, endIndex);
        }
    } else {
        super.setSelectionInterval (startIndex, endIndex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25286690_47611807_5_43
25286690_49410606_7_34
Title: Shortest and Longest word in a sentence in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter any sentence : ");
    String line = sc.nextLine ();
    sc.close ();
    int shortestWordLength = 0;
    int longestWordLength = 0;
    String shortestWord = "";
    String longestWord = "";
    int tempLength = 0;
    String [] eachWordArray = line.split (" ");
    boolean firstTime = false;
    for (String eachWord : eachWordArray) {
        tempLength = eachWord.length ();
        if (firstTime == false) {
            firstTime = true;
            shortestWordLength = tempLength;
            shortestWord = eachWord;
            longestWordLength = tempLength;
            longestWord = eachWord;
        }
        if (tempLength > 0) {
            if (tempLength < shortestWordLength) {
                shortestWordLength = tempLength;
                shortestWord = eachWord;
            } else if (tempLength > longestWordLength) {
                longestWordLength = tempLength;
                longestWord = eachWord;
            }

        }
    }
    System.out.println ("shortestWordLength = " + shortestWordLength + " shortestWord = " + shortestWord);
    System.out.println ("longestWordLength = " + longestWordLength + " longestWord = " + longestWord);
}
----------------------------------------

public static void main () {
    Scanner in = new Scanner (System.in);
    String z = " ", lw = "";
    int q = 0, o = 0;
    System.out.println ("Enter string");
    String str = in.nextLine () + " ";
    int l = str.length ();
    for (int i = 1;
    i < l; i ++) {
        char ch = str.charAt (i);
        if (ch != ' ') z = z + ch;
        else {
            q = z.length ();
            if (q > o) lw = z;

            o = q;
            z = "";
        }
    }
    System.out.println ("lw= " + lw);
    System.out.println ("length=" + q);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25297857_25298113_1_38
25297857_25298609_1_14
Title: Merging two sorted lists when recursion isn't an option - Java 
----------------------------------------

public MyList < E > mergeSort (Collection < ? extends E > list1) {
    List < E > list2 = new ArrayList < E > (this);
    this.clear ();
    Iterator < ? extends E > it1 = list1.iterator ();
    Iterator < ? extends E > it2 = list2.iterator ();
    if (it1.hasNext () && it2.hasNext ()) {
        E value1 = it1.next (), value2 = it2.next ();
        do {
            if (value1.compareTo (value2) <= 0) {
                this.add (value1);
                if (it1.hasNext ()) {
                    value1 = it1.next ();
                } else {
                    this.add (value2);
                    break;
                }
            } else {
                this.add (value2);
                if (it2.hasNext ()) {
                    value2 = it2.next ();
                } else {
                    this.add (value1);
                    break;
                }
            }
        } while (true);
    }
    while (it1.hasNext ()) {
        this.add (it1.next ());
    }
    while (it2.hasNext ()) {
        this.add (it2.next ());
    }
    return this;
}
----------------------------------------

public List < Integer > mergeSort (List < Integer > otherList) {
    List < Integer > list1 = new ArrayList < > ();
    list1.addAll (otherList);
    Collections.sort (list1, new Comparator < Integer > () {
        @Override
        public int compare (Integer o1, Integer o2) {
            return o1.compareTo (o2);
        }}

    );
    return list1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25316058_25316121_1_10
25316058_25316202_3_24
Title: Preventing the JVM from writing to System.out or reading from System.in 
----------------------------------------

public static void main (String [] args) {
    try {
        System.in.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.err.close ();
    System.out.close ();
    System.out.println ("Must not print !");
}
----------------------------------------

public static void main (String [] args) {
    InputStream standardIn = System.in;
    PrintStream standardOut = System.out;
    PrintStream standardErr = System.err;
    System.setIn (new ByteArrayInputStream (new byte [0]));
    System.setOut (new PrintStream (new ByteArrayOutputStream ()));
    System.setErr (new PrintStream (new ByteArrayOutputStream ()));
    System.out.println ("Hello World");
    System.setIn (standardIn);
    System.setOut (standardOut);
    System.setErr (standardErr);
    System.out.println ("Finally we got the Hello");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25316761_25324000_1_15
25316761_25371716_1_29
Title: Duplicate entry 'string1-string2' for key 'PRIMARY' 
----------------------------------------

@Override
public void savehl7Address (HL7Address addr) {
    if (addr.use () != null && addr.use ().getId () == null) {
        this.em.persist (addr.use ());
        return;
    }
    if ((Integer) addr.getId () == null) {
        System.out.println ("[[[[[[[[[[[[ about to persist address ]]]]]]]]]]]]]]]]]]]]");
        this.em.persist (addr);
    } else {
        System.out.println ("]]]]]]]]]]]]]]]]]] about to merge address [[[[[[[[[[[[[[[[[[[[[");
        this.em.merge (addr);
    }
}
----------------------------------------

@Override
public void savehl7Address (HL7Address addr) {
    HL7GeneralCode code = addr.use ();
    if (code != null && code.getId () == null) {
        throw new IllegalStateException ("Cannot persist an adress using a non persistent HL7GeneralCode");
    }
    addr.setUse (null);
    code.getAddresses ().remove (addr);
    code = em.merge (code);
    addr.setUse (code);
    code.getAddresses ().add (addr);
    if ((Integer) addr.getId () == null) {
        System.out.println ("[[[[[[[[[[[[ about to persist address ]]]]]]]]]]]]]]]]]]]]");
        em.persist (addr);
    } else {
        System.out.println ("]]]]]]]]]]]]]]]]]] about to merge address [[[[[[[[[[[[[[[[[[[[[");
        addr = em.merge (addr);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25317554_25318596_28_45
25317554_25319954_226_239
Title: Putting JLabel on JScrollPane from another class in Java 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    String names = "names";
    String dateBirth = "date";
    String bio = "bio";
    JLabel lbl = new JLabel (names);
    int top = familyTree.getPanel ().getComponentCount () * labelHeight;
    if (top + labelHeight > familyTree.getPanel ().getHeight ()) {
        familyTree.getPanel ().setPreferredSize (new Dimension (familyTree.getPanel ().getWidth (), top + labelHeight));
        familyTree.getScrollPane ().revalidate ();
    }
    familyTree.getPanel ().add (lbl);
    lbl.setBounds (10, top, 100, labelHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    JFileChooser chooser = new JFileChooser (new File (System.getProperty ("user.home") + "\\Desktop"));
    chooser.setDialogTitle ("Select Location");
    chooser.setFileSelectionMode (JFileChooser.APPROVE_OPTION);
    chooser.setAcceptAllFileFilterUsed (false);
    if (chooser.showSaveDialog (null) == JFileChooser.APPROVE_OPTION) {
        fileID = chooser.getSelectedFile ().getPath ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25317554_25319954_196_257
25317554_25319954_60_107
Title: Putting JLabel on JScrollPane from another class in Java 
----------------------------------------

private void initialize () {
    setBackground (new Color (135, 206, 250));
    setLayout (new MigLayout ("", "[][][grow]", "[][][][grow][][][]"));
    JLabel labelNames = new JLabel ("Name and Surname:");
    add (labelNames, "cell 1 1,alignx trailing");
    textFieldNames = new JTextField ();
    add (textFieldNames, "cell 2 1,growx");
    textFieldNames.setColumns (10);
    labelDateOfBirth = new JLabel ("Date of birth:");
    add (labelDateOfBirth, "cell 1 2,alignx center,aligny center");
    textFieldDateOfBirth = new JTextField ();
    add (textFieldDateOfBirth, "cell 2 2,growx");
    textFieldDateOfBirth.setColumns (10);
    labelShortBio = new JLabel ("Bio:");
    add (labelShortBio, "cell 1 3,alignx center,aligny center");
    textAreaBio = new JTextArea ();
    add (textAreaBio, "cell 2 3,grow");
    labelSelectPicture = new JLabel ("Select picture:");
    add (labelSelectPicture, "cell 1 4,alignx center,aligny center");
    selectPictureButton = new JButton ("...");
    selectPictureButton.setBackground (new Color (30, 144, 255));
    selectPictureButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent arg0) {
            JFileChooser chooser = new JFileChooser (new File (System.getProperty ("user.home") + "\\Desktop"));
            chooser.setDialogTitle ("Select Location");
            chooser.setFileSelectionMode (JFileChooser.APPROVE_OPTION);
            chooser.setAcceptAllFileFilterUsed (false);
            if (chooser.showSaveDialog (null) == JFileChooser.APPROVE_OPTION) {
                fileID = chooser.getSelectedFile ().getPath ();
            }
        }}

    );
    add (selectPictureButton, "cell 2 4");
    buttonAdd = new JButton ("Add");
    buttonAdd.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent arg0) {
            String names = textFieldNames.getText ();
            String dateBirth = textFieldDateOfBirth.getText ();
            String bio = textAreaBio.getText ();
            data = new Data (names, dateBirth, bio, fileID);
            fireActionPerformed ();
        }}

    );
    buttonAdd.setBackground (new Color (30, 144, 255));
    add (buttonAdd, "cell 2 6,grow");
}
----------------------------------------

private void initialize () {
    frame = new JFrame ();
    frame.setTitle ("New family tree");
    frame.getContentPane ().setBackground (new Color (135, 206, 250));
    frame.setBounds (100, 100, 906, 569);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel ();
    panel.setBackground (new Color (30, 144, 255));
    frame.getContentPane ().add (panel, BorderLayout.EAST);
    panel.setLayout (new MigLayout ("", "[]", "[][][][][][][][]"));
    JButton newPersonButton = new JButton ("New Person");
    newPersonButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent arg0) {
            Data data = NewPerson.createPerson (frame);
            if (data != null) {
                JLabel lblHomer = new JLabel (data.names);
                panel_1.add (lblHomer, "cell 7 5");
                panel_1.revalidate ();
            }
        }}

    );
    panel.add (newPersonButton, "cell 0 5");
    JButton btnNewButton_1 = new JButton ("New button");
    panel.add (btnNewButton_1, "cell 0 6");
    tabbedPane = new JTabbedPane (JTabbedPane.TOP);
    frame.getContentPane ().add (tabbedPane, BorderLayout.CENTER);
    scrollPane = new JScrollPane ();
    tabbedPane.addTab ("Tree", null, scrollPane, null);
    panel_1 = new JPanel ();
    scrollPane.setViewportView (panel_1);
    panel_1.setLayout (new MigLayout ("", "[][][][][][][][]", "[][][][][][]"));
    JScrollPane scrollPane_1 = new JScrollPane ();
    tabbedPane.addTab ("Info", null, scrollPane_1, null);
    frame.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2531873_26423614_29_44
2531873_26423614_9_25
Title: How thread-safe is enum in java? 
----------------------------------------

public void run () {
    System.out.println ("B started");
    RoleEnum role;
    role = RoleEnum.fromIntegerValue (1);
    role.setBuildFromClass (Integer.class);
    System.out.println ("B called fromIntegerValue&setBuildFromClass and Start to sleep");
    try {
        Thread.sleep (20000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("B waked up!");
    System.out.println ("Thread B: " + role.getBuildFromClass ());
}
----------------------------------------

public void run () {
    System.out.println ("A started");
    RoleEnum role;
    role = RoleEnum.fromIntegerValue (1);
    System.out.println ("A called fromIntegerValue");
    role.setBuildFromClass (String.class);
    System.out.println ("A called setBuildFromClass and start to sleep");
    try {
        Thread.sleep (10000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Thread A: " + role.getBuildFromClass ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25326638_25327709_93_108
25326638_25327722_1_36
Title: Choosing file path not seen on JTextField in Ubuntu on Eclipse 
----------------------------------------

public static void main (String [] args) {
    installLnF ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            xailabsPanel frame = new xailabsPanel ();
            frame.setDefaultCloseOperation (xailabsPanel.EXIT_ON_CLOSE);
            frame.setTitle ("xailabsPanel");
            ((JPanel) frame.getContentPane ()).setBorder (BorderFactory.createEmptyBorder (20, 20, 20, 20));
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    JFrame window = new JFrame ();
    JTextField tf = new JTextField ();
    window.setSize (100, 100);
    window.add (tf);
    window.setLocationRelativeTo (null);
    JFileChooser fc = new JFileChooser ();
    fc.showOpenDialog (null);
    File f = fc.getSelectedFile ();
    tf.setText (f.getAbsolutePath ());
    window.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2532905_2532952_1_21
2532905_2533174_1_13
Title: String replace in Java ME double space 
----------------------------------------

public static String replace (String _text, String _searchStr, String _replacementStr) {
    StringBuffer sb = new StringBuffer ();
    int searchStringPos = _text.indexOf (_searchStr);
    int startPos = 0;
    int searchStringLength = _searchStr.length ();
    while (searchStringPos != - 1) {
        sb.append (_text.substring (startPos, searchStringPos)).append (_replacementStr);
        startPos = searchStringPos + searchStringLength;
        searchStringPos = _text.indexOf (_searchStr, startPos);
    }
    sb.append (_text.substring (startPos, _text.length ()));
    return sb.toString ();
}
----------------------------------------

private String replace (String needle, String replacement, String haystack) {
    String result = "";
    int index = haystack.indexOf (needle);
    if (index == 0) {
        result = replacement + haystack.substring (needle.length ());
        return replace (needle, replacement, result);
    } else if (index > 0) {
        result = haystack.substring (0, index) + replacement + haystack.substring (index + needle.length ());
        return replace (needle, replacement, result);
    } else {
        return haystack;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25339537_35875429_1_15
25339537_50550674_1_17
Title: Codility - function alteration 
----------------------------------------

public static bool solution (int [] A, int K) {
    int n = A.Length;
    for (int i = 0;
    i < A.Length - 1; i ++) {
        if (A [i] + 1 < A [i + 1]) return false;

    }
    if (A [0] == 1 || A [n - 1] != K) return false;
    else return true;

}
----------------------------------------

public boolean solution (int [] A, int k) {
    int n = A.length;
    for (int i = 0;
    i < n - 1; i ++) {
        if (! (A [i] == A [i + 1]) && ! (A [i] == A [i + 1] - 1)) {
            System.out.println (A [i] + "-->" + A [i + 1]);
            return false;
        }
    }
    if (A [0] != 1 || A [n - 1] != k) {
        return false;
    } else {
        return true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25346512_25352198_11_20
25346512_36932225_11_47
Title: Read Multiple Objects JSON with Java 
----------------------------------------

public static void main (String x []) {
    String FileName = "C:\\Users\\Prasad\\Desktop\\JSONExample.txt";
    try {
        ArrayList < JSONObject > jsons = ReadJSON (new File (FileName), "UTF-8");
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < JSONObject > json = new ArrayList < JSONObject > ();
    JSONObject obj;
    String fileName = "C:\\Users\\aawad\\workspace\\kura_juno\\data_logger\\log\\Apr_28_2016\\test.txt ";
    String line = null;
    try {
        FileReader fileReader = new FileReader (fileName);
        BufferedReader bufferedReader = new BufferedReader (fileReader);
        while ((line = bufferedReader.readLine ()) != null) {
            obj = (JSONObject) new JSONParser ().parse (line);
            json.add (obj);
            System.out.println ((String) obj.get ("Sensor_ID") + ":" + (String) obj.get ("Date"));
        }
        bufferedReader.close ();
    } catch (FileNotFoundException ex) {
        System.out.println ("Unable to open file '" + fileName + "'");
    } catch (IOException ex) {
        System.out.println ("Error reading file '" + fileName + "'");
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25346512_25352198_11_20
25346512_44626709_1_23
Title: Read Multiple Objects JSON with Java 
----------------------------------------

public static void main (String x []) {
    String FileName = "C:\\Users\\Prasad\\Desktop\\JSONExample.txt";
    try {
        ArrayList < JSONObject > jsons = ReadJSON (new File (FileName), "UTF-8");
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException, JSchException, SftpException, InterruptedException, ParseException {
    JSONParser parser = new JSONParser ();
    Object obj = parser.parse (new FileReader ("c:\\netapp1.txt"));
    Map < Object, Object > shareList = new HashMap < Object, Object > ();
    JSONObject jsonObject = (JSONObject) obj;
    JSONArray array = (JSONArray) jsonObject.get ("dataLevels");
    Iterator < Object > iterator = array.iterator ();
    while (iterator.hasNext ()) {
        Object it = iterator.next ();
        JSONObject data = (JSONObject) it;
        shareList.put (data.get ("name"), data.get ("type"));
    }
    Iterator it = shareList.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry value = (Map.Entry) it.next ();
        System.out.println ("Name: " + value.getKey () + " and type: " + value.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25346512_36932225_11_47
25346512_44626709_1_23
Title: Read Multiple Objects JSON with Java 
----------------------------------------

public static void main (String [] args) {
    ArrayList < JSONObject > json = new ArrayList < JSONObject > ();
    JSONObject obj;
    String fileName = "C:\\Users\\aawad\\workspace\\kura_juno\\data_logger\\log\\Apr_28_2016\\test.txt ";
    String line = null;
    try {
        FileReader fileReader = new FileReader (fileName);
        BufferedReader bufferedReader = new BufferedReader (fileReader);
        while ((line = bufferedReader.readLine ()) != null) {
            obj = (JSONObject) new JSONParser ().parse (line);
            json.add (obj);
            System.out.println ((String) obj.get ("Sensor_ID") + ":" + (String) obj.get ("Date"));
        }
        bufferedReader.close ();
    } catch (FileNotFoundException ex) {
        System.out.println ("Unable to open file '" + fileName + "'");
    } catch (IOException ex) {
        System.out.println ("Error reading file '" + fileName + "'");
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException, JSchException, SftpException, InterruptedException, ParseException {
    JSONParser parser = new JSONParser ();
    Object obj = parser.parse (new FileReader ("c:\\netapp1.txt"));
    Map < Object, Object > shareList = new HashMap < Object, Object > ();
    JSONObject jsonObject = (JSONObject) obj;
    JSONArray array = (JSONArray) jsonObject.get ("dataLevels");
    Iterator < Object > iterator = array.iterator ();
    while (iterator.hasNext ()) {
        Object it = iterator.next ();
        JSONObject data = (JSONObject) it;
        shareList.put (data.get ("name"), data.get ("type"));
    }
    Iterator it = shareList.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry value = (Map.Entry) it.next ();
        System.out.println ("Name: " + value.getKey () + " and type: " + value.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2535132_11531860_1_24
2535132_2653799_4_16
Title: How do you validate the format and values of EditTextPreference entered in Android 2.1? 
----------------------------------------

@Override
public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    addPreferencesFromResource (R.xml.preferences);
    Your_Pref = (EditTextPreference) getPreferenceScreen ().findPreference ("Your_Pref");
    Your_Pref.setOnPreferenceChangeListener (new OnPreferenceChangeListener () {
        @Override
        public boolean onPreferenceChange (Preference preference, Object newValue) {
            Boolean rtnval = true;
            if (Your_Test) {
                final AlertDialog.Builder builder = new AlertDialog.Builder (getActivity ());
                builder.setTitle ("Invalid Input");
                builder.setMessage ("Something's gone wrong...");
                builder.setPositiveButton (android.R.string.ok, null);
                builder.show ();
                rtnval = false;
            }
            return rtnval;
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    addPreferencesFromResource (R.xml.preferences);
    findPreference ("mail_preference_key").setOnPreferenceChangeListener (new Preference.OnPreferenceChangeListener () {
        @Override
        public boolean onPreferenceChange (Preference preference, Object newValue) {
            return Pattern.matches ("mailPattern", (String) newValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2535550_14089714_4_18
2535550_2535768_49_72
Title: Super class reference to a sub class object? 
----------------------------------------

public static void main (String args []) {
    A a = new B ();
    a.msg ();
    ((B) a).msg ("Custom Message");
    System.out.println (a.getClass ());
    if (a instanceof B) {
        System.out.println ("a is instance of B");
    }
    if (a instanceof A) {
        System.out.println ("a is instance of A also");
    }
}
----------------------------------------

public static void main (String args []) {
    Triangle t = new Triangle (3, 2);
    Circle c = new Circle (3);
    Rectangle r = new Rectangle (2, 3);
    System.out.println (t.getArea ());
    System.out.println (c.getArea ());
    System.out.println (r.getArea ());
    Shape s [] = new Shape [3];
    s [0] = new Triangle (3, 2);
    s [1] = new Circle (3);
    s [2] = new Rectangle (2, 3);
    for (Shape shape : s) {
        System.out.println (shape.getArea ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25355587_25355707_39_115
25355587_25355708_1_68
Title: ActionListener for Buttons 
----------------------------------------

public void launchJFrame () {
    alert.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            JOptionPane.showMessageDialog (null, "There's a bug on you!", "Hey!", JOptionPane.ERROR_MESSAGE);
        }}

    );
    yesNo.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            int val = JOptionPane.showConfirmDialog (null, "Choose yes or no", "Your Call...", JOptionPane.YES_NO_OPTION);
            if (val != JOptionPane.CLOSED_OPTION) {
                if (val == 0) {
                    txt.setText ("Yes");
                } else {
                    txt.setText ("No");
                }
            }
        }}

    );
    color.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Object [] options = {"Red", "Green"};
            int sel = JOptionPane.showOptionDialog (null, "Choose a Color!", "Warning", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options [0]);
            if (sel != JOptionPane.CLOSED_OPTION) {
                txt.setText ("Color Selected: " + options [sel]);
            }
        }}

    );
    vals.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Object [] selections = {"First", "Second", "Third"};
            Object val = JOptionPane.showInputDialog (null, "Choose one", "Input", JOptionPane.INFORMATION_MESSAGE, null, selections, selections [0]);
            if (val != null) {
                txt.setText (val.toString ());
            }
        }}

    );
    input.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            String val = JOptionPane.showInputDialog ("How mant fingers do you see?");
            txt.setText (val);
        }}

    );
}
----------------------------------------

public void launchJFrame () {
    alert.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
        }}

    );
    yesNo.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            int val = JOptionPane.showConfirmDialog (null, "Choose yes or no", "Your Call...", JOptionPane.YES_NO_OPTION);
            if (val != JOptionPane.CLOSED_OPTION) {
                if (val == 0) {
                    txt.setText ("Yes");
                } else {
                    txt.setText ("No");
                }
            }
        }}

    );
    color.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Object [] options = {"Red", "Green"};
            int sel = JOptionPane.showOptionDialog (null, "Choose a Color!", "Warning", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options [0]);
            if (sel != JOptionPane.CLOSED_OPTION) {
                txt.setText ("Color Selected: " + options [sel]);
            }
        }}

    );
    vals.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Object [] selections = {"First", "Second", "Third"};
            Object val = JOptionPane.showInputDialog (null, "Choose one", "Input", JOptionPane.INFORMATION_MESSAGE, null, selections, selections [0]);
            if (val != null) {
                txt.setText (val.toString ());
            }
        }}

    );
    input.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            String val = JOptionPane.showInputDialog ("How mant fingers do you see?");
            txt.setText (val);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25355587_25355707_52_67
25355587_25355708_10_23
Title: ActionListener for Buttons 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int val = JOptionPane.showConfirmDialog (null, "Choose yes or no", "Your Call...", JOptionPane.YES_NO_OPTION);
    if (val != JOptionPane.CLOSED_OPTION) {
        if (val == 0) {
            txt.setText ("Yes");
        } else {
            txt.setText ("No");
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int val = JOptionPane.showConfirmDialog (null, "Choose yes or no", "Your Call...", JOptionPane.YES_NO_OPTION);
    if (val != JOptionPane.CLOSED_OPTION) {
        if (val == 0) {
            txt.setText ("Yes");
        } else {
            txt.setText ("No");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25357115_25357259_118_144
25357115_25357259_239_250
Title: "Syntax error on tokens AnnotationName expected instead - error on query" 
----------------------------------------

public void done (List < ParseUser > userlistname, ParseException e) {
    if (e == null) {
        for (int i = 0;
        i < userlistname.size (); i ++) {
            names.add (userlistname.get (i).get ("Name").toString ());
        }
        usersListView = (ListView) getActivity ().findViewById (R.id.userlistname);
        namesArrayAdapter = new ArrayAdapter < String > (getActivity ().getApplicationContext (), R.layout.user_list_item, names);
        usersListView.setAdapter (namesArrayAdapter);
        usersListView.setOnItemClickListener (new AdapterView.OnItemClickListener () {
            @Override
            public void onItemClick (AdapterView < ? > a, View v, int i, long l) {
                openConversation (names, i);
            }}

        );
    } else {
        Toast.makeText (getActivity ().getApplicationContext (), "Error loading user list", Toast.LENGTH_LONG).show ();
    }
}
----------------------------------------

public void done (List < ParseUser > user, ParseException e) {
    if (e == null) {
        Intent intent = new Intent (getActivity ().getApplicationContext (), MessagingActivity.class);
        intent.putExtra ("RECIPIENT_ID", user.get (0).getObjectId ());
        startActivity (intent);
    } else {
        Toast.makeText (getActivity ().getApplicationContext (), "Error finding that user", Toast.LENGTH_SHORT).show ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25357115_25357259_118_144
25357115_25357259_92_113
Title: "Syntax error on tokens AnnotationName expected instead - error on query" 
----------------------------------------

public void done (List < ParseUser > userlistname, ParseException e) {
    if (e == null) {
        for (int i = 0;
        i < userlistname.size (); i ++) {
            names.add (userlistname.get (i).get ("Name").toString ());
        }
        usersListView = (ListView) getActivity ().findViewById (R.id.userlistname);
        namesArrayAdapter = new ArrayAdapter < String > (getActivity ().getApplicationContext (), R.layout.user_list_item, names);
        usersListView.setAdapter (namesArrayAdapter);
        usersListView.setOnItemClickListener (new AdapterView.OnItemClickListener () {
            @Override
            public void onItemClick (AdapterView < ? > a, View v, int i, long l) {
                openConversation (names, i);
            }}

        );
    } else {
        Toast.makeText (getActivity ().getApplicationContext (), "Error loading user list", Toast.LENGTH_LONG).show ();
    }
}
----------------------------------------

public void done (List < ParseObject > object, ParseException e) {
    ParseFile image = object.getParseFile ("ProfilePicture");
    ParseImageView imageView = (ParseImageView) getView ().findViewById (R.id.profilePictureResult);
    imageView.setPlaceholder (getResources ().getDrawable (R.drawable.profile_pict));
    imageView.setParseFile (image);
    imageView.loadInBackground (new GetDataCallback () {
        @Override
        public void done (byte [] data, ParseException e) {
            Log.i ("ParseImageView", "Fetched! Data length: " + data.length + ", or exception: " + e.getMessage ());
        }}

    );
}
----------------------------------------
