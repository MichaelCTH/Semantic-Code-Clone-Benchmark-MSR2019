$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26660306_26660466_1_15
26660306_26660539_1_11
Title: Finding where the first vowel in a word occurs 
----------------------------------------

public static int indexOfFirstVowel (String word) {
    int i;
    for (i = 0; i < word.length (); i ++) {
        switch (word.charAt (i)) {
            case 'a' :
            case 'e' :
            case 'i' :
            case 'o' :
            case 'u' :
            case 'y' :
                return i;
        }
    }
    return - 1;
}
----------------------------------------

public static int indexOfFirstVowel (String aString) {
    for (int i = 0;
    i < aString.length (); i ++) {
        char c = aString.charAt (i);
        if ((c > 64) & ((0x110411101104111L & (1L << (c - 65))) > 0)) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_26093254_32_43
2666758_31313456_177_197
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public static void main (String args []) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Application application = new Application ();
            application.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            FixedRow2Tables frame = new FixedRow2Tables ();
            frame.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosing (WindowEvent e) {
                    System.exit (0);
                }}

            );
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_26093254_32_43
2666758_8082598_90_105
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public static void main (String args []) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Application application = new Application ();
            application.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            FixedRow2Tables frame = new FixedRow2Tables ();
            frame.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosing (WindowEvent e) {
                    System.exit (0);
                }}

            );
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_2667302_1_11
2666758_8082598_62_76
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public void columnMarginChanged (ChangeEvent event) {
    final TableColumnModel eventModel = (DefaultTableColumnModel) event.getSource ();
    final TableColumnModel thisModel = getTable ().getColumnModel ();
    final int columnCount = eventModel.getColumnCount ();
    for (int i = 0;
    i < columnCount; i ++) {
        thisModel.getColumn (i).setWidth (eventModel.getColumn (i).getWidth ());
    }
    repaint ();
}
----------------------------------------

public void columnMarginChanged (ChangeEvent e) {
    final TableColumnModel tableColumnModel = table.getColumnModel ();
    TableColumnModel footerColumnModel = footerTable.getColumnModel ();
    for (int i = 0;
    i < tableColumnModel.getColumnCount (); i ++) {
        int w = tableColumnModel.getColumn (i).getWidth ();
        footerColumnModel.getColumn (i).setMinWidth (w);
        footerColumnModel.getColumn (i).setMaxWidth (w);
    }
    footerTable.doLayout ();
    footerTable.repaint ();
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_31313456_139_175
2666758_8082598_25_88
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public FixedRow2Tables () {
    super ("Fixed Row Example");
    Object [] [] mainData = new Object [] [] {{"a", "", "", "", "", ""}, {"", "b", "", "", "", ""}, {"", "", "c", "", "", ""}, {"", "", "", "d", "", ""}, {"", "", "", "", "e", ""}, {"", "", "", "", "", "f"}, {"a", "b", "c", "d", "e", "f"}, {"a", "b", "c", "d", "e", "f"}, {"a", "b", "c", "d", "e", "f"}, {"a", "b", "c", "d", "e", "f"}, {"a", "b", "c", "d", "e", "f"}};
    Object [] [] summaryData = {{"fixed1", "", "", "", "", ""}, {"fixed2", "b", "c", "d", "e", "f"}};
    columnNames = new String [] {"Ala", "Bardzo", "Chciala", "Dostac", "Eskimoska", "Franciszki Genowefy Pigwy"};
    table = new JTable (mainData, columnNames);
    table.setAutoResizeMode (JTable.AUTO_RESIZE_OFF);
    table.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
    fixedTable = new FixedFooterTable (summaryData, columnNames);
    fixedTable.setTableHeader (null);
    final JScrollPane scroll = new JScrollPane (table);
    final JScrollPane fixedscroll = new JScrollPane (fixedTable);
    Dimension preferredSize = fixedTable.getPreferredSize ();
    fixedscroll.setPreferredSize (preferredSize);
    fixedTable.bindTableModels (table);
    fixedTable.bindViews (scroll, fixedscroll);
    getContentPane ().add (scroll, BorderLayout.CENTER);
    getContentPane ().add (fixedscroll, BorderLayout.SOUTH);
}
----------------------------------------

public FixedRow2Tables () {
    super ("Fixed Row Example");
    Object [] [] mainData = new Object [] [] {{"a", "", "", "", "", ""}, {"", "b", "", "", "", ""}, {"", "", "c", "", "", ""}, {"", "", "", "d", "", ""}, {"", "", "", "", "e", ""}, {"", "", "", "", "", "f"}};
    Object [] [] summaryData = {{"fixed1", "", "", "", "", ""}, {"fixed2", "", "", "", "", ""}};
    column = new Object [] {"A", "B", "C", "D", "E", "F"};
    table = new JTable (mainData, column);
    table.setAutoResizeMode (JTable.AUTO_RESIZE_OFF);
    table.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
    footerTable = new JTable (summaryData, column);
    footerTable.setAutoResizeMode (JTable.AUTO_RESIZE_OFF);
    footerTable.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
    footerTable.setTableHeader (null);
    table.getColumnModel ().addColumnModelListener (new TableColumnModelListener () {
        @Override
        public void columnSelectionChanged (ListSelectionEvent e) {
        }@Override
        public void columnRemoved (TableColumnModelEvent e) {
        }@Override
        public void columnMoved (TableColumnModelEvent e) {
        }@Override
        public void columnMarginChanged (ChangeEvent e) {
            final TableColumnModel tableColumnModel = table.getColumnModel ();
            TableColumnModel footerColumnModel = footerTable.getColumnModel ();
            for (int i = 0;
            i < tableColumnModel.getColumnCount (); i ++) {
                int w = tableColumnModel.getColumn (i).getWidth ();
                footerColumnModel.getColumn (i).setMinWidth (w);
                footerColumnModel.getColumn (i).setMaxWidth (w);
            }
            footerTable.doLayout ();
            footerTable.repaint ();
            repaint ();
        }@Override
        public void columnAdded (TableColumnModelEvent e) {
        }}

    );
    JScrollPane scroll = new JScrollPane (table);
    scroll.setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    scroll.setPreferredSize (new Dimension (400, 100));
    getContentPane ().add (scroll, BorderLayout.CENTER);
    getContentPane ().add (footerTable, BorderLayout.SOUTH);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_31313456_177_197
2666758_8082598_90_105
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            FixedRow2Tables frame = new FixedRow2Tables ();
            frame.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosing (WindowEvent e) {
                    System.exit (0);
                }}

            );
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            FixedRow2Tables frame = new FixedRow2Tables ();
            frame.addWindowListener (new WindowAdapter () {
                @Override
                public void windowClosing (WindowEvent e) {
                    System.exit (0);
                }}

            );
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2666758_31313456_182_195
2666758_8082598_93_103
Title: Issue with resizing columns in a double JTable 
----------------------------------------

public void run () {
    FixedRow2Tables frame = new FixedRow2Tables ();
    frame.addWindowListener (new WindowAdapter () {
        @Override
        public void windowClosing (WindowEvent e) {
            System.exit (0);
        }}

    );
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    FixedRow2Tables frame = new FixedRow2Tables ();
    frame.addWindowListener (new WindowAdapter () {
        @Override
        public void windowClosing (WindowEvent e) {
            System.exit (0);
        }}

    );
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26674192_26674608_56_78
26674192_26674608_85_99
Title: How to save a in-application edited txt file in java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser chooser = new JFileChooser ();
    chooser.showOpenDialog (null);
    File f = chooser.getSelectedFile ();
    filename.append (f.getAbsolutePath ());
    try {
        FileReader reader = new FileReader (filename.toString ());
        BufferedReader br = new BufferedReader (reader);
        display.read (br, null);
        br.close ();
        display.requestFocus ();
    } catch (Exception error) {
        System.err.println ("Could'nt read a file");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String textToSet = display.getText ();
    try {
        PrintWriter writer = new PrintWriter (filename.toString (), "UTF-8");
        writer.write (textToSet);
        writer.close ();
    } catch (FileNotFoundException | UnsupportedEncodingException exc) {
        System.err.println ("Could'nt write to the file");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26681281_26681384_1_18
26681281_26681489_1_22
Title: Comparing a string array index to a string 
----------------------------------------

public static void isGuessCorrect (String guess, String wordInPlay, String [] hangmanScores) {
    char [] letterGuessedAgainst = wordInPlay.toCharArray ();
    char ch = guess.charAt (0);
    System.out.println ("My guess is: " + ch);
    boolean found = false;
    for (char letter : letterGuessedAgainst) {
        if (letter == ch) {
            found = true;
            break;
        }
    }
    if (found) {
        System.out.printf ("%s contains guess %c%n", wordInPlay, ch);
    } else {
        System.out.printf ("%s does not contain guess %c%n", wordInPlay, ch);
    }
}
----------------------------------------

public static void isGuessCorrect (String guess, String wordInPlay, String [] hangmanScores) {
    char [] letterGuessedAgainst = wordInPlay.toCharArray ();
    for (int i = 0;
    i < letterGuessedAgainst.length; i ++) {
        System.out.print (letterGuessedAgainst [i]);
    }
    System.out.println ("Letter guessed against is: " + letterGuessedAgainst [1]);
    System.out.println ("My guess is: " + guess.charAt (0));
    for (int i = 0;
    i < letterGuessedAgainst.length; i ++) {
        if (letterGuessedAgainst [i] == guess.charAt (0)) {
            System.out.println ("they're equal");
        } else {
            System.out.println ("they're not");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
266818_266873_1_15
266818_269347_1_18
Title: Problem matching Java String against array 
----------------------------------------

public int countPacks (String flavour, List packets) {
    int counter = 0;
    for (Iterator iter = packets.iterator ();
    iter.hasNext ();) {
        Map packet = (Map) iter.next ();
        if (packet.get ("flavour").toString ().equalsIgnoreCase (flavour)) {
            counter ++;
        } else {
            System.out.println ("You have not entered a correct flavour");
        }
    }
    return counter;
}
----------------------------------------

public int countPacks (String flavour) {
    int count = 0;
    for (int index = 0;
    index < packets.size (); ++ index) {
        String packet = packets.get (index);
        if (packet.equals (flavour)) {
            ++ count;
        }
    }
    if (count == 0) {
        System.out.println ("You have not entered a correct flavour");
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26682075_26682185_1_12
26682075_26683553_1_15
Title: How do you best convert a recursive function to an iterative one? 
----------------------------------------

public static void foo (int number) {
    Deque < Integer > stack = new ArrayDeque < Integer > ();
    while (number > 0) {
        stack.push (number);
        number = number / 2;
    }
    while (! stack.isEmpty ()) {
        Integer myInt = stack.pop ();
    }
}
----------------------------------------

public static void foo (int number) {
    if (number > 0) {
        char [] chars = new char [32];
        int charPos = 32;
        char [] digits = {'0', '1'};
        do {
            chars [-- charPos] = digits [number % 2];
            number /= 2;
        } while (number > 0);
        System.out.print (new String (chars, charPos, 32 - charPos));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26684809_26684989_5_31
26684809_26685199_5_16
Title: Printing text with spacing recursively 
----------------------------------------

public static void recurse (int n, boolean loop, int add) {
    String temp = "";
    String out = "";
    for (int i = 0;
    i < n; i ++) {
        temp += " ";
    }
    if (add > 0) {
        out = temp + "This was written by call number ";
    } else {
        out = temp + "This ALSO written by call number ";
    }
    if (n == 1 && ! loop) {
        System.out.println (out + n + ".");
        return;
    } else if (n == 1) {
        recurse (n + add, false, add);
    } else if (n == 5) {
        add = add - 2 * add;
        recurse (n + add, false, add);
    } else {
        System.out.println (out + n + ".");
        recurse (n + add, false, add);
    }

}
----------------------------------------

public static void recurse (int n) {
    if (n == 5) return;

    String temp = "";
    for (int i = 0;
    i < n; i ++) temp += " ";

    if (n != 1) {
        System.out.println (temp + "This was written by call number " + n + ".");
    }
    recurse (n + 1);
    temp = " ";
    for (int i = 0;
    i < n; i ++) temp += " ";

    System.out.println (temp + "This ALSO was written by call number " + n + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26684809_26684989_5_31
26684809_26694236_7_20
Title: Printing text with spacing recursively 
----------------------------------------

public static void recurse (int n, boolean loop, int add) {
    String temp = "";
    String out = "";
    for (int i = 0;
    i < n; i ++) {
        temp += " ";
    }
    if (add > 0) {
        out = temp + "This was written by call number ";
    } else {
        out = temp + "This ALSO written by call number ";
    }
    if (n == 1 && ! loop) {
        System.out.println (out + n + ".");
        return;
    } else if (n == 1) {
        recurse (n + add, false, add);
    } else if (n == 5) {
        add = add - 2 * add;
        recurse (n + add, false, add);
    } else {
        System.out.println (out + n + ".");
        recurse (n + add, false, add);
    }

}
----------------------------------------

public static void recurse (int n, int max) {
    String temp = "";
    for (int i = 0;
    i < n; i ++) {
        temp += " ";
    }
    if (n == max) {
        return;
    }
    if (n != 1) {
        System.out.println (temp + "This was written by call number " + n + ".");
    }
    recurse (n + 1, max);
    System.out.println (temp + "This ALSO was written by call number " + n + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26684809_26685199_5_16
26684809_26694236_7_20
Title: Printing text with spacing recursively 
----------------------------------------

public static void recurse (int n) {
    if (n == 5) return;

    String temp = "";
    for (int i = 0;
    i < n; i ++) temp += " ";

    if (n != 1) {
        System.out.println (temp + "This was written by call number " + n + ".");
    }
    recurse (n + 1);
    temp = " ";
    for (int i = 0;
    i < n; i ++) temp += " ";

    System.out.println (temp + "This ALSO was written by call number " + n + ".");
}
----------------------------------------

public static void recurse (int n, int max) {
    String temp = "";
    for (int i = 0;
    i < n; i ++) {
        temp += " ";
    }
    if (n == max) {
        return;
    }
    if (n != 1) {
        System.out.println (temp + "This was written by call number " + n + ".");
    }
    recurse (n + 1, max);
    System.out.println (temp + "This ALSO was written by call number " + n + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26688279_26688402_5_15
26688279_26688542_10_21
Title: How can I check if a file contains a certain number that the user has input? (java) 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("What number would you like to check for?");
    String number = myScanner.nextLine ();
    if (isFound (number)) {
        System.out.println ("The number " + number + " is there");
    } else {
        System.out.println ("The number " + number + " doesn't exist");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File f = new File ("trombones.txt");
    f.createNewFile ();
    Scanner myScanner = new Scanner (System.in);
    boolean numExiste = menu (new Scanner (f), myScanner);
    while (! (numExiste)) {
        numExiste = menu (new Scanner (f), myScanner);
    }
    myScanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26688480_26688848_1_12
26688480_26688864_11_22
Title: using for loops to compute a sequence 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int x = input.nextInt ();
    double product = 1, sum = 0;
    for (int i = 1;
    i <= x; i ++) {
        product *= i;
        sum += 1.0 / product;
        System.out.print ("" + i + "/" + (int) product + "+");
    }
    System.out.print ("=" + sum);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    Number num = new Number ();
    int number;
    System.out.println ("Enter the limit:-");
    number = sc.nextInt ();
    double sum = 0;
    for (int lo = 1;
    lo <= number; lo ++) {
        sum += (double) lo / (double) (num.fact (lo));
    }
    System.out.println ("The sum is:- " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26689929_26691276_1_24
26689929_36996864_1_12
Title: Power function using recursion 
----------------------------------------

public static double pow (int a, int n) {
    if (n == 0) {
        return 1.0;
    }
    if (n < 0) {
        if (a == 0) {
            throw new IllegalArgumentException ("It's impossible to raise 0 to the power of a negative number");
        }
        return 1 / pow (a, - n);
    } else {
        double powerOfHalfN = pow (a, n / 2);
        if (n % 2 == 1) {
            return a * powerOfHalfN * powerOfHalfN;
        } else {
            return powerOfHalfN * powerOfHalfN;
        }
    }
}
----------------------------------------

public static double pow (int base, int exponent) {
    if (exponent == 0) {
        return 1;
    }
    if (exponent < 0) {
        return 1 / pow (base, - exponent);
    } else {
        double results = base * pow (base, exponent - 1);
        return results;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26695573_26695974_5_21
26695573_26696128_5_22
Title: Get the lowest number from an Array 
----------------------------------------

public static void main (String [] arguments) {
    HashMap < String, Integer > namez = new HashMap < String, Integer > ();
    namez.put ("Alex", 341);
    namez.put ("Clair", 273);
    namez.put ("Sarah", 278);
    namez.put ("Andy", 329);
    namez.put ("Anna", 445);
    namez.put ("Bob", 402);
    Integer min = Collections.min (namez.values ());
    namez.containsValue (min);
    for (Entry < String, Integer > entry : namez.entrySet ()) {
        if (entry.getValue () == min) {
            System.out.println (entry.getKey () + ": " + entry.getValue ());
            String key = entry.getKey ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    TreeMap < Integer, String > timeToNameMapping = new TreeMap < Integer, String > ();
    timeToNameMapping.put (341, "Alex");
    timeToNameMapping.put (273, "Clair");
    timeToNameMapping.put (278, "Sarah");
    timeToNameMapping.put (329, "Andy");
    timeToNameMapping.put (445, "Anna");
    timeToNameMapping.put (402, "Bob");
    List < Integer > times = new ArrayList < > (timeToNameMapping.keySet ());
    System.out.println ("First: " + timeToNameMapping.get (times.get (0)));
    System.out.println ("Second: " + timeToNameMapping.get (times.get (1)));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26695579_26703012_9_53
26695579_26720457_5_13
Title: Java 2D array assigning randomly 
----------------------------------------

public static void main (String [] args) {
    int [] [] numbers = new int [5] [5];
    Scanner scanner = new Scanner (System.in);
    System.out.println ("How much do you want to fill? Enter a decimal.");
    double populatePercentage = scanner.nextDouble ();
    System.out.println ("What number do you want to fill with?");
    int fillNumber = scanner.nextInt ();
    int fillTimes = numberOfTimesToFill (25, populatePercentage);
    int count = 0;
    Random rand = new Random ();
    for (int i = 0;
    i < 5; i ++) {
        for (int j = 0;
        j < 5; j ++) {
            if (count < fillTimes) {
                numbers [i] [j] = fillNumber;
                count ++;
            } else {
                int randomNumber = rand.nextInt (51);
                while (randomNumber == fillNumber) {
                    randomNumber = rand.nextInt (51);
                }
                numbers [i] [j] = randomNumber;
            }
        }
    }
    printArray (numbers);
}
----------------------------------------

public static void main (String [] args) {
    int [] [] Matrix = new int [5] [5];
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter the number you want to fill the array to 25%: ");
    int number = scanner.nextInt ();
    int percentage = 25;
    generateMatrix (Matrix, number, percentage);
    printMatrix (Matrix);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26695951_26696170_1_12
26695951_26696389_4_14
Title: "Procedure Method text surrounded" 
----------------------------------------

public static void main (String [] args) {
    String ttc;
    char ch;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the text to center: ");
    ttc = sc.nextLine ();
    System.out.println ("Enter the border character : ");
    ch = sc.next ().charAt (0);
    System.out.println ();
    textbox (ttc, ch);
}
----------------------------------------

public static void main (String [] args) {
    String inputString;
    char character;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the text: ");
    inputString = sc.nextLine ();
    System.out.println ("Enter the character : ");
    character = sc.next ().charAt (0);
    sc.close ();
    drawTextbox (character, inputString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26697536_26697758_5_27
26697536_26697771_5_26
Title: "Would anyone mind helping me trouble shoot my code i am trying to import a class i made and get"" cannot resolve error""" 
----------------------------------------

public static void main (String [] args) throws Exception {
    java.io.File file = new java.io.File ("Java violinOutput.txt");
    PrintWriter output = new PrintWriter (file);
    ViolinGonzalezAP3 outerClassObj = new ViolinGonzalezAP3 ();
    ViolinGonzalezAP3.Violin [] violinAmount = new ViolinGonzalezAP3.Violin [10];
    for (int i = 0;
    i < violinAmount.length; i ++) {
        violinAmount [i] = outerClassObj.new Violin ();
        System.out.println (violinAmount [i].getNumberOfViolins () + " Violin");
        output.println (violinAmount [i].getNumberOfViolins () + " object:");
        violinAmount [i].tuneOff ();
        output.println ("The violin is now tunning...");
        violinAmount [i].tuneOn ();
        output.println ("The violin is now playing...");
        violinAmount [i].startPlaying ();
        output.println ("String numbers is " + violinAmount [i].getNumberOfStrings () + " with String names are " + Arrays.toString (violinAmount [i].notes ()));
        output.println ("The violin is now stopped");
        violinAmount [i].stopPlaying ();
    }
    output.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    java.io.File file = new java.io.File ("Java violinOutput.txt");
    PrintWriter output = new PrintWriter (file);
    ViolinGonzalezAP3 vg = new ViolinGonzalezAP3 ();
    ViolinGonzalezAP3.Violin [] violinAmount = new ViolinGonzalezAP3.Violin [10];
    for (int i = 0;
    i < violinAmount.length; i ++) {
        violinAmount [i] = vg.new Violin ();
        System.out.println (violinAmount [i].getNumberOfViolins () + " Violin");
        output.println (violinAmount [i].getNumberOfViolins () + " object:");
        violinAmount [i].tuneOff ();
        output.println ("The violin is now tunning...");
        violinAmount [i].tuneOn ();
        output.println ("The violin is now playing...");
        violinAmount [i].startPlaying ();
        output.println ("String numbers is " + violinAmount [i].getNumberOfStrings () + " with String names are " + Arrays.toString (violinAmount [i].notes ()));
        output.println ("The violin is now stopped");
        violinAmount [i].stopPlaying ();
    }
    output.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26697830_26697966_1_21
26697830_26697977_1_14
Title: Addition of more than 30 digits 
----------------------------------------

public static void sum (int [] num1, int [] num2) {
    int num1len = num1.length;
    int num2len = num2.length;
    int [] sum = new int [num1len > num2len ? num1len : num2len];
    for (int i = sum.length - 1;
    i > 0; i --) {
        if (num1len > 0) sum [i] += num1 [-- num1len];

        if (num2len > 0) sum [i] += num2 [-- num2len];

        if (sum [i] >= 10) {
            sum [i] = sum [i] % 10;
            sum [i - 1] ++;
        }
    }
    for (int i = 0;
    i < sum.length; i ++) System.out.print (sum [i]);

}
----------------------------------------

public static void sum (int [] num1, int [] num2) {
    int [] sum = new int [num1.length > num2.length ? num1.length : num2.length];
    for (int i = num1.length - 1, j = num2.length - 1, k = sum.length - 1;
    i > 0 || j > 0; i --, j --, k --) {
        sum [k] += num1 [i] + num2 [j];
        if (sum [k] >= 10) {
            sum [k] = sum [k] % 10;
            sum [k - 1] ++;
        }
    }
    for (int i = 0;
    i < sum.length; i ++) System.out.print (sum [i]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26699089_26699314_30_88
26699089_35142903_46_84
Title: Infix to Postfix using Stacks Java 
----------------------------------------

public static String convertToPostfix (String infix) {
    Stack < Character > stack = new Stack < Character > ();
    StringBuffer postfix = new StringBuffer (infix.length ());
    char c;
    for (int i = 0;
    i < infix.length (); i ++) {
        c = infix.charAt (i);
        if (! isOperator (c)) {
            postfix.append (c);
        } else {
            if (c == ')') {
                while (! stack.isEmpty () && stack.peek () != '(') {
                    postfix.append (stack.pop ());
                }
                if (! stack.isEmpty ()) {
                    stack.pop ();
                }
            } else {
                if (! stack.isEmpty () && ! isLowerPrecedence (c, stack.peek ())) {
                    stack.push (c);
                } else {
                    while (! stack.isEmpty () && isLowerPrecedence (c, stack.peek ())) {
                        Character pop = stack.pop ();
                        if (c != '(') {
                            postfix.append (pop);
                        } else {
                            c = pop;
                        }
                    }
                    stack.push (c);
                }
            }
        }
    }
    while (! stack.isEmpty ()) {
        postfix.append (stack.pop ());
    }
    return postfix.toString ();
}
----------------------------------------

public static String convertToPostfix (String infix) {
    Stack < Character > stack = new Stack < Character > ();
    StringBuffer postfix = new StringBuffer (infix.length ());
    char c;
    for (int i = 0;
    i < infix.length (); i ++) {
        c = infix.charAt (i);
        if (isOperand (c)) {
            postfix.append (c);
        } else if (c == '(') {
            stack.push (c);
        } else if (c == ')') {
            while (! stack.isEmpty () && stack.peek () != '(') {
                postfix.append (stack.pop ());
            }
            if (! stack.isEmpty () && stack.peek () != '(') return null;
            else if (! stack.isEmpty ()) stack.pop ();

        } else if (isOperator (c)) {
            if (! stack.isEmpty () && getPrecedence (c) <= getPrecedence (stack.peek ())) {
                postfix.append (stack.pop ());
            }
            stack.push (c);
        }

    }
    while (! stack.isEmpty ()) {
        postfix.append (stack.pop ());
    }
    return postfix.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26699253_26699299_1_11
26699253_26699368_1_11
Title: How is a parameter change handled during recursion in Java? 
----------------------------------------

private static int minimumTotal (List < List < Integer > > triangle, int rowIndex, int colIndex) {
    if (rowIndex >= triangle.size ()) {
        return 0;
    }
    List < Integer > row = triangle.get (rowIndex);
    int sum1 = row.get (colIndex) + minimumTotal (triangle, rowIndex + 1, colIndex);
    int sum2 = row.get (colIndex) + minimumTotal (triangle, rowIndex + 1, colIndex + 1);
    return Math.min (sum1, sum2);
}
----------------------------------------

private static int minimumTotal (List < List < Integer > > triangle, int index, int from) {
    if (from >= triangle.size ()) {
        return 0;
    }
    List < Integer > row = triangle.get (from);
    int sum1 = row.get (index) + minimumTotal (triangle, index, from + 1);
    int sum2 = row.get (index) + minimumTotal (triangle, index + 1, from + 1);
    return Math.min (sum1, sum2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26700843_26701033_12_31
26700843_26701623_1_46
Title: New to string so how to manage this title applier 
----------------------------------------

public static void main (String args []) throws IOException {
    String male [] = {"Elroy", "Fred", "Graham"};
    String fem [] = {"Amy", "Buffy", "Cathy"};
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    while (true) {
        System.out.println ("Enter name:-");
        String st = br.readLine ();
        if (st.equals ("") == false) {
            StringTokenizer str = new StringTokenizer (st);
            String tok = str.nextToken ();
            if (search (male, tok) == true) System.out.println ("Mr." + st);

            if (search (fem, tok) == true) System.out.println ("Ms." + st);

        } else break;

    }
    System.out.println ("Program terminates.");
}
----------------------------------------

public static void main (String [] args) {
    String name;
    String [] males = {"Elroy", "Fred ", " Graham"};
    String [] females = {"Amy", "Buffy", "Cathy"};
    Scanner scan = null;
    do {
        System.out.print ("Enter a name: ");
        scan = new Scanner (System.in);
        name = scan.nextLine ();
        boolean found = false;
        for (String temp : males) {
            if (name.startsWith (temp)) {
                System.out.println ("Mr. " + name + "\n");
                found = true;
                break;
            }
        }
        if (found) {
            continue;
        }
        for (String temp : females) {
            if (name.startsWith (temp)) {
                System.out.println ("Ms. " + name + "\n");
                found = true;
                break;
            }
        }
        if (name.length () > 0 && ! found) {
            System.out.println ("Unknown name entered.\n");
        }
    } while (name.length () > 0);
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
267025_14396304_13_39
267025_14396304_41_49
Title: Read XLSX file in Java 
----------------------------------------

private void parseComments (String tmpFile, Workbook workbook) {
    try {
        FileInputStream fin = new FileInputStream (tmpFile);
        final ZipInputStream zin = new ZipInputStream (fin);
        InputStream in = getInputStream (zin);
        while (true) {
            ZipEntry entry = zin.getNextEntry ();
            if (entry == null) break;

            String name = entry.getName ();
            if (name.endsWith (".xml")) {
                if (name.contains (COMMENTS)) {
                    parseComments (in, workbook);
                }
            }
            zin.closeEntry ();
        }
        in.close ();
        zin.close ();
        fin.close ();
    } catch (FileNotFoundException e) {
        System.out.println (e);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private void parseComments (InputStream in, Workbook workbook) {
    try {
        DefaultHandler handler = getCommentHandler (workbook);
        SAXParser saxParser = getSAXParser ();
        saxParser.parse (in, handler);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26703332_26703422_6_22
26703332_26703928_4_29
Title: Extract substring from a long string using starting string and ending string? 
----------------------------------------

public static void main (String args []) {
    String line = "Home address H.NO- 12 SECTOR- 12 GAUTAM BUDH NAGAR NOIDA- 121212, UTTAR PRADESH INDIA +911112121212 Last Updated: 12-JUN-12 Semester/Term-time Accommodation Type: Hall of residence (private provider) Semester/Term-time address A121A SOME APPARTMENT SOME LANE CITY COUNTY OX3 7FJ +91 1212121212 Last Updated: 12-SEP-12 Mobile Telephone Number : 01212121212";
    String pattern = "Home address (.*) Last Updated:";
    Pattern r = Pattern.compile (pattern);
    Matcher m = r.matcher (line);
    if (m.find ()) {
        System.out.println ("Found value: " + m.group (0));
    } else {
        System.out.println ("NO MATCH");
    }
}
----------------------------------------

public static void main (String [] args) {
    final String input = "Home address H.NO- 12 SECTOR- 12 GAUTAM BUDH NAGAR " + "NOIDA- 121212, UTTAR PRADESH INDIA +911112121212 " + "Last Updated: 12-JUN-12 Semester/Term-time " + "Accommodation Type: Hall of residence (private " + "provider) Semester/Term-time address A121A SOME " + "APPARTMENT SOME LANE CITY COUNTY OX3 7FJ +91 " + "1212121212 Last Updated: 12-SEP-12 Mobile Telephone " + "Number : 01212121212";
    final String regex = "Home address (.+?) \\+\\d+ Last Updated: " + "\\S+ Semester/Term-time Accommodation Type: (.+?) " + "Semester/Term-time address (.+?) \\+\\d\\d \\d+ " + "Last Updated.+ Number : (\\d+)";
    Pattern pattern = Pattern.compile (regex);
    Matcher matcher = pattern.matcher (input);
    if (matcher.find ()) {
        System.out.println ("Found: " + matcher.group ());
        for (int i = 1;
        i <= matcher.groupCount (); i ++) {
            System.out.println ("   Match " + i + ": " + matcher.group (i));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26707438_26707591_1_17
26707438_26707669_59_74
Title: ; expected error in method header 
----------------------------------------

public static void displayOutput (double cost, double discount, double Discounted_cost, double tax, double Total_cost) {
    double cost = computeSubTotal (cost);
    double discount = computeDiscount (cost, discount);
    double Discounted_cost = computePriceAfterDiscount (cost, discount);
    double tax = computeTax (Discounted_cost);
    double Total_cost = computeTotal (Discounted_cost, tax);
    System.out.printf ("\nTotal before discount and tax: $%.2f\n ", cost);
    System.out.printf ("\nCalculated discount: $%.2f\n", discount);
    System.out.printf ("\nTotal after special discount: $%.2f\n", Discounted_cost);
    System.out.printf ("\nTax: $%.2f\n", tax);
    System.out.printf ("\nTotal cost: $%.2f\n", Total_cost);
}
----------------------------------------

public static void displayOutput (Scanner scan) {
    double cost = computeSubTotal (scan);
    double discount = computeDiscount (cost);
    double Discounted_cost = computePriceAfterDiscount (cost, discount);
    double tax = computeTax (Discounted_cost);
    double Total_cost = computeTotal (Discounted_cost, tax);
    System.out.printf ("Total before discount and tax: $%.2f%n", cost);
    System.out.printf ("Calculated discount: $%.2f%n", discount);
    System.out.printf ("Total after special discount: $%.2f%n", Discounted_cost);
    System.out.printf ("Tax: $%.2f%n", tax);
    System.out.printf ("Total cost: $%.2f%n", Total_cost);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26708394_26708546_1_19
26708394_26708616_5_24
Title: Finding index where string 2 starts in string 1 
----------------------------------------

public int indexOf (final String source, final String find) {
    for (int sourcePos = 0;
    sourcePos < source.length () - find.length (); sourcePos ++) {
        boolean found = true;
        for (int findPos = 0;
        findPos < find.length (); findPos ++) {
            if (source.charAt (sourcePos) != find.charAt (findPos)) {
                found = false;
                break;
            }
        }
        if (found) {
            return sourcePos;
        }
    }
    return - 1;
}
----------------------------------------

static int indexOf (String str, String toFind) {
    int len = (str != null) ? str.length () : 0;
    int len2 = (toFind != null) ? toFind.length () : 0;
    for (int i = 0;
    i < len; i ++) {
        int t = 0;
        while (str.charAt (i) == toFind.charAt (t) && i < len && t < len2) {
            t ++;
            i ++;
        }
        i -= t;
        if (t == len2) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26708463_26708575_9_26
26708463_26708596_9_29
Title: Java loop StackoverflowError - Any possibility to continue the previous loop when the same function is recurred again? 
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            exec_path = "spl";
        }
        switch (exec_path) {
            case "spl" :
                spl_case ();
                System.out.println ("call action key word now");
                exec_path = "normal";
                break;
            case "normal" :
                System.out.println ("normal print");
                break;
        }
    }
}
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            exec_path = "spl";
        }
        switch (exec_path) {
            case "spl" :
                spl_case ();
                break;
            case "normal" :
                System.out.println ("normal print");
                break;
            case "call_action_path" :
                System.out.println ("call action key word now");
                break;
        }
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26708463_26708575_9_26
26708463_26709164_9_30
Title: Java loop StackoverflowError - Any possibility to continue the previous loop when the same function is recurred again? 
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            exec_path = "spl";
        }
        switch (exec_path) {
            case "spl" :
                spl_case ();
                System.out.println ("call action key word now");
                exec_path = "normal";
                break;
            case "normal" :
                System.out.println ("normal print");
                break;
        }
    }
}
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            tree ("spl");
        }
        tree (exec_path);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26708463_26708596_9_29
26708463_26709164_9_30
Title: Java loop StackoverflowError - Any possibility to continue the previous loop when the same function is recurred again? 
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            exec_path = "spl";
        }
        switch (exec_path) {
            case "spl" :
                spl_case ();
                break;
            case "normal" :
                System.out.println ("normal print");
                break;
            case "call_action_path" :
                System.out.println ("call action key word now");
                break;
        }
        return;
    }
}
----------------------------------------

public static void exec_script (String exec_path) {
    for (int i = 0;
    i < 10; i ++) {
        if (i == 4) {
            tree ("spl");
        }
        tree (exec_path);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26708843_26709091_2_18
26708843_26709279_3_29
Title: Array matching with if method in java 
----------------------------------------

public static void main (String [] args) {
    Scanner user_input = new Scanner (System.in);
    String [] female_names = {"Amy", "Buffy", "Cathy"};
    String [] male_names = {"Elory", "Fred", "Graham"};
    System.out.println ("Enter a name:\n");
    String first_name;
    first_name = user_input.next ();
    String last_name;
    last_name = user_input.next ();
    if (Arrays.asList (female_names).contains (first_name)) {
        System.out.print ("MS. ");
    } else if (Arrays.asList (male_names).contains (first_name)) {
        System.out.print ("MR. ");
    }

    System.out.println (first_name + " " + last_name);
}
----------------------------------------

public static void main (String [] args) {
    Scanner user_input = new Scanner (System.in);
    System.out.println ("Enter a name:\n");
    String first_name = user_input.next ();
    String last_name = user_input.next ();
    Map < String, String > salutations = new HashMap < String, String > ();
    salutations.put ("Amy".toLowerCase (), "MS");
    salutations.put ("Buffy".toLowerCase (), "MS");
    salutations.put ("Cathy".toLowerCase (), "MS");
    salutations.put ("Elory".toLowerCase (), "MR");
    salutations.put ("Fred".toLowerCase (), "MR");
    salutations.put ("Graham".toLowerCase (), "MR");
    String salutation = null;
    if (first_name != null) {
        salutation = salutations.get (first_name.toLowerCase ());
    }
    if (salutation != null) {
        System.out.println (String.format ("%s. %s %s", salutation, first_name, last_name));
    } else {
        System.out.println (first_name + " " + last_name);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26724431_26724858_1_24
26724431_26724915_1_30
Title: multiple variable for if else statement 
----------------------------------------

String selectionOne () {
    String input;
    do {
        System.out.print ("Please enter a number between 1 and 5, A for Addition, S for subtraction, M for multiplication, or D for division: ");
        try {
            input = readInput.nextLine ();
            if (input.equals ("A") || input.equals ("S") || input.equals ("M") || input.equals ("D")) {
                System.out.println ("Thank you");
                break;
            } else if (Integer.parseInt (input) >= 1 && Integer.parseInt (input) <= 5) {
                System.out.println ("Thank you");
                break;
            } else {
                System.out.println ("Sorry, you have not entered the correct number, please try again.");
            }

            continue;
        } catch (final NumberFormatException e) {
            System.out.println ("You have entered an invalid choice. Try again.");
            continue;
        }
    } while (true);
    return input;
}
----------------------------------------

char selectionOne () {
    String input;
    do {
        input = readInput.next ();
        if (input.length () == 1) {
            char val = input.charAt (0);
            if (Character.isDigit (val)) {
                int digit = Integer.parseInt (input);
                if (digit >= 1 && digit <= 5) {
                    System.out.print ("Thank you");
                    return val;
                } else {
                    System.out.println ("Sorry, you have not entered the correct number, please try again.");
                }
            } else {
                if (val == 'A' || val == 'S' || val == 'M' || val == 'D') {
                    System.out.print ("Thank you");
                    return val;
                } else {
                    System.out.println ("Sorry, you have not entered the correct character, please try again.");
                }
            }
        } else {
            System.out.println ("Sorry, you have not entered the correct input format, please try again.");
        }
    } while (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26734197_26751642_5_37
26734197_26763746_37_44
Title: Sorting on list of objects with more than one column using java 
----------------------------------------

public int compare (Object o1, Object o2) {
    if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (0) > ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (0)) {
        return 1;
    } else if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (0) < ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (0)) {
        return - 1;
    } else {
        if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (1) > ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (1)) {
            return 1;
        } else if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (1) < ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (1)) {
            return - 1;
        } else {
            if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (2) > ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (2)) {
                return 1;
            } else if (((List < Integer >) (((Map.Entry) (o1)).getValue ())).get (2) > ((List < Integer >) (((Map.Entry) (o2)).getValue ())).get (2)) {
                return - 1;
            } else {
                return 0;
            }

        }

    }

}
----------------------------------------

public int compare (Map.Entry < String, List < Integer > > o1, Map.Entry < String, List < Integer > > o2) {
    int comparison = Integer.compare (o1.getValue ().get (0), o2.getValue ().get (0));
    if (comparison != 0) return comparison;

    comparison = Integer.compare (o1.getValue ().get (1), o2.getValue ().get (1));
    if (comparison != 0) return comparison;

    return Integer.compare (o1.getValue ().get (2), o2.getValue ().get (2));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26740716_26740927_1_23
26740716_26740928_3_25
Title: Printing Stars based on input from Command Prompt 
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");

    sopl ("");
}
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= len; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");

        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26740716_26740927_1_23
26740716_26741179_3_29
Title: Printing Stars based on input from Command Prompt 
----------------------------------------

public static void main (String [] args) {
    int len = args.length;
    if (len == 0) {
        sopl ("\n\tUsage: java echo <args:String[]>");
        System.exit (0);
    }
    sop ("\n\t");
    for (int i = 0;
    i < len; i ++) {
        sop (args [i] + " ");
    }
    sop ("\n\t");
    while (len > 0) sop (args [args.length - len --] + " ");

    sopl ("");
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter no of rows to be printed");
    int row = Integer.parseInt (args [0]);
    int len = args.length;
    if (len <= 0) {
        System.out.println (" ERROR: Please input a value of 1-5");
        System.exit (0);
    }
    int j;
    for (int i = 0;
    i <= row; i ++) {
        for (j = 0; j <= i; j ++) System.out.print ("*");

        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26742647_26742804_1_26
26742647_26755624_1_29
Title: Character animation using image array 
----------------------------------------

public void paintHero (Graphics g) {
    offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    heroFrame ++;
    if (heroFrame == 16) heroFrame = 0;

    if (hero.getMoveX () == 0 && hero.getMoveY () == 0) heroCurrent = heroSprites [heroFrame];
    else {
        if (hero.isMovingUp ()) heroCurrent = heroSprites [4 + heroFrame / 4];
        else if (hero.isMovingDown ()) heroCurrent = heroSprites [0 + heroFrame / 4];
        else if (hero.isMovingLeft ()) heroCurrent = heroSprites [8 + heroFrame / 4];
        else if (hero.isMovingRight ()) heroCurrent = heroSprites [12 + heroFrame / 4];
        else heroCurrent = heroSprites [heroFrame];

    }
}
----------------------------------------

public void paintHero (Graphics g) {
    offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    if (hero.getMoveX () == 0 && hero.getMoveY () == 0) heroFrame = 0;
    else {
        heroFrame ++;
        if (heroFrame == 16) heroFrame = 0;

    }
    if (hero.isMovingUp ()) {
        heroCurrent = heroSprites [4 + heroFrame / 4];
        offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    }
    if (hero.isMovingDown ()) {
        heroCurrent = heroSprites [0 + heroFrame / 4];
        offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    }
    if (hero.isMovingLeft ()) {
        heroCurrent = heroSprites [8 + heroFrame / 4];
        offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    }
    if (hero.isMovingRight ()) {
        heroCurrent = heroSprites [12 + heroFrame / 4];
        offG.drawImage (heroCurrent, hero.getHeroX (), hero.getHeroY (), this);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26744524_26744671_1_16
26744524_26744755_1_23
Title: Why sum doesn't work here? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Testing Scanner, write something: ");
    while (scan.hasNext ()) {
        System.out.println ("Testing Scanner, write something: ");
        String testi = scan.nextLine ();
        testi = testi.toUpperCase ();
        char [] ascii1 = testi.toCharArray ();
        int sum = 0;
        for (char ch : ascii1) {
            sum += ch;
        }
        System.out.println ("Sum: " + sum);
    }
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Testing Scanner, write something: ");
    String testi = scan.nextLine ();
    testi = testi.toUpperCase ();
    char [] ascii1 = testi.toCharArray ();
    int a = 0;
    for (char ch : ascii1) {
        a += (int) ch;
    }
    System.out.println ("The sum is " + a);
    System.out.println ("Testing Scanner, write something: ");
    String testi2 = scan.nextLine ();
    testi2 = testi2.toUpperCase ();
    char [] ascii2 = testi2.toCharArray ();
    for (char ch : ascii2) {
        System.out.println ((int) ch + "  ");
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26748026_26748946_1_11
26748026_41734518_11_30
Title: Check if integer has repeating digits. No string methods or arrays 
----------------------------------------

private static boolean hasDistinctDigits (int number) {
    int numMask = 0;
    int numDigits = (int) Math.ceil (Math.log10 (number + 1));
    for (int digitIdx = 0;
    digitIdx < numDigits; digitIdx ++) {
        int curDigit = (int) (number / Math.pow (10, digitIdx)) % 10;
        int digitMask = (int) Math.pow (2, curDigit);
        if ((numMask & digitMask) > 0) return false;

        numMask = numMask | digitMask;
    }
    return true;
}
----------------------------------------

public static boolean hasDistinctDigits (int input) {
    int result = 0;
    String inputString = String.valueOf (input);
    for (int i = 0;
    i < inputString.length (); i ++) {
        int currentChar = inputString.charAt (i) - '1';
        if ((result & (1 << currentChar)) > 0) {
            return false;
        }
        result = result | (1 << currentChar);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26749516_35188618_23_32
26749516_46797537_5_14
Title: Printing Pascals Triangle (recursive) (JAVA) 
----------------------------------------

public static int pascal (int i, int j) {
    if (j == 0) {
        return 1;
    } else if (j == i) {
        return 1;
    } else {
        return pascal (i - 1, j - 1) + pascal (i - 1, j);
    }

}
----------------------------------------

static int pascal (int start, int end) {
    if (start >= end) return 0;

    int number = 1;
    System.out.format ("%" + (end - start) * 2 + "s", "");
    pascal2 (start, number, 0);
    System.out.println ();
    return pascal (start + 1, end);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26749709_26749763_1_11
26749709_26750210_1_27
Title: Recursive Substrings out of bounds error 
----------------------------------------

public static void subStrings (String s) {
    int i = s.toLowerCase ().indexOf ('a');
    if (i >= 0) {
        System.out.println (s.substring (0, i));
        if (i + 1 < s.length ()) {
            subStrings (s.substring (i + 1));
        }
    }
}
----------------------------------------

void subStrings (String s) {
    if (s == null || s.length () == 0 || s.charAt (0) == 'A' || s.charAt (0) == 'a') {
        System.out.println ("Cannot shorten substring.");
        return;
    }
    if (s.length () != 1) {
        String subString = "";
        int i = 0;
        while (s.charAt (i) != 'A' && s.charAt (i) != 'a' && i < s.length () - 1) {
            subString += s.charAt (i);
            i ++;
        }
        if (subString.equals ("")) subStrings (s.substring (i));
        else {
            System.out.println (subString);
            subStrings (s.substring (0, i));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26761568_26761590_1_25
26761568_26761775_3_19
Title: Type mismsatch can not convert from float to Boolean 
----------------------------------------

public static void main (String [] args) {
    String x;
    float radius;
    Scanner input = new Scanner (System.in);
    while (true) {
        System.out.println ("Welcome to the round object calculator.\n This program will calculate the area of a circle or the volume of a Sphere. \nEnter C for circle, S for sphere, or X t exit");
        x = input.nextLine ();
        if (x.equalsIgnoreCase ("c")) {
            System.out.print ("Enter radius of circle: ");
            radius = input.nextFloat ();
            System.out.println ("Circle perimeter is : " + 2.0 * Math.PI * radius);
            System.out.println ("Circle Area is : " + Math.PI * Math.pow (radius, 2));
        } else if (x.equalsIgnoreCase ("s")) {
            System.out.print ("Enter radius of sphere: ");
            radius = input.nextFloat ();
            System.out.println ("Sphere volume is : " + (4.0 / 3.0) * Math.PI * Math.pow (radius, 3));
            System.out.println ("Sphere Surface Area is : " + 4.0 * Math.PI * Math.pow (radius, 3));
        } else if (x.equalsIgnoreCase ("x")) {
            break;
        }

        input.nextLine ();
    }
}
----------------------------------------

public static void main (String argv []) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Welcome to the round object calculator.\n This program will calculate the area       of a circle or the volume of a Sphere. \nEnter C for circle, S for sphere, or X t exit");
    try {
        while (true) {
            System.out.print ("Enter radius of sphere: ");
            float radius = input.nextFloat ();
            System.out.println ("Sphere volume is : " + (4.0 / 3.0) * Math.PI * Math.pow (radius, 3));
            System.out.println ("Sphere Surface Area is : " + 4.0 * Math.PI * Math.pow (radius, 3));
        }
    } catch (InputMismatchException e) {
    }
    System.out.println ("End program");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26762148_26762510_1_29
26762148_26762712_1_29
Title: How to refactor code in order to avoid label in a Java loop? 
----------------------------------------

private List < myList > sortLinks (SegmentType s, Set < myList > LinkSet) {
    List < myList > LinkList = new LinkedList < myList > ();
    String dep = s.getDep ().toString ();
    for (int index = 0;
    ! LinkSet.isEmpty (); index ++) {
        boolean dependencyFound = false;
        for (Iterator < myList > iterator = LinkSet.iterator ();
        iterator.hasNext ();) {
            myList link = iterator.next ();
            if (link.getLegDep ().toString ().equals (dep)) {
                iterator.remove ();
                link.setLine (s.getLineCode ());
                link.setNb (s.getNb ());
                link.setSuff (s.getSuff ());
                link.setIndex (index);
                linkList.add (link);
                dep = link.getDest ().toString ();
                dependencyFound = true;
                break;
            }
        }
        if (! dependencyFound) {
            return Collections.emptyList ();
        }
    }
    return linkList;
}
----------------------------------------

private List < myList > sortLinks (SegmentType s, Set < myList > LinkSet) {
    List < myList > LinkList = new LinkedList < myList > ();
    String dep = s.getDep ().toString ();
    for (int index = 0;
    ! LinkSet.isEmpty (); index ++) {
        for (Iterator < myList > iterator = LinkSet.iterator ();
        iterator.hasNext ();) {
            myList link = iterator.next ();
            boolean toContinue = false;
            if (link.getLegDep ().toString ().equals (dep)) {
                iterator.remove ();
                link.setLine (s.getLineCode ());
                link.setNb (s.getNb ());
                link.setSuff (s.getSuff ());
                link.setIndex (index);
                linkList.add (link);
                dep = link.getDest ().toString ();
                toContinue = true;
                break;
            }
        }
        if (toContinue) {
            continue;
        }
        return Collections.emptyList ();
    }
    return linkList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26773663_26773990_5_45
26773663_26774120_3_59
Title: How to Display stored information in an Array in java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter no. of Student");
    int numberOfStudents = sc.nextInt ();
    Student [] studentDetails = new Student [numberOfStudents];
    for (int i = 0;
    i < numberOfStudents; i ++) {
        Student newStudent = new Student ();
        System.out.println ("enter f name");
        newStudent.setfName (sc.next ());
        System.out.println ("enter l name");
        newStudent.setlName (sc.next ());
        System.out.println ("enter Reg no");
        newStudent.setStuID (sc.next ());
        System.out.println ("enter Prj 1 marks");
        newStudent.setProjM1 (sc.nextInt ());
        System.out.println ("enter ICT 1 Marks ");
        newStudent.setIctM1 (sc.nextInt ());
        System.out.println ("enter Active P 1");
        newStudent.setActP1 (sc.nextInt ());
        System.out.println ("enter Code Assg");
        newStudent.setCodeAsM (sc.nextInt ());
        System.out.println ("enter ICT 2 Marks");
        newStudent.setIctM2 (sc.nextInt ());
        System.out.println ("enter Active P Marks");
        newStudent.setActP2 (sc.nextInt ());
        System.out.println ("enter ICT 3 Marks");
        newStudent.setIctM3 (sc.nextInt ());
        System.out.println ("enter Active P 3");
        newStudent.setActP3 (sc.nextInt ());
        studentDetails [i] = newStudent;
        System.out.println (newStudent);
    }
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    Student student = null;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter no. of Student");
    int x = sc.nextInt ();
    Student [] studentDetails = new Student [x];
    for (int i = 0;
    i < x; i ++) {
        student = new Student ("", "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        System.out.println ("enter f name");
        student.setfName (sc.nextLine ());
        System.out.println ("enter l name");
        student.setlName (sc.nextLine ());
        System.out.println ("enter Reg no");
        student.setStuID (sc.nextLine ());
        System.out.println ("enter Prj 1 marks");
        student.setProjM1 (sc.nextInt ());
        System.out.println ("enter ICT 1 Marks ");
        student.setIctM1 (sc.nextInt ());
        System.out.println ("enter Active P 1");
        student.setActP1 (sc.nextInt ());
        System.out.println ("enter Code Assg");
        student.setCodeAsM (sc.nextInt ());
        System.out.println ("enter ICT 2 Marks");
        student.setIctM1 (sc.nextInt ());
        System.out.println ("enter Active P Marks");
        student.setActP1 (sc.nextInt ());
        System.out.println ("enter ICT 3 Marks");
        student.setIctM3 (sc.nextInt ());
        System.out.println ("enter Active P 3");
        student.setActP1 (sc.nextInt ());
        student = new Student (student.getfName (), student.getlName (), student.getStuID (), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        studentDetails [i] = student;
        System.out.println (Student.toString (studentDetails));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2677843_2677929_1_14
2677843_2678150_1_13
Title: Is there any appreciable difference between if and if-else? 
----------------------------------------

public boolean foo (int input) {
    if (input > 10) {
        return true;
    } else if (input == 0) {
        return true;
    } else {
        return false;
    }

    return false;
}
----------------------------------------

public boolean foo (int input) {
    final boolean toBeReturned;
    if (input > 10) {
        doStuff ();
        toBeReturned = true;
    } else if (input == 0) {
        doOtherStuff ();
        toBeReturned = true;
    } else {
        toBeReturned = false;
    }

    return toBeReturned;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26793175_26793394_6_42
26793175_26793440_1_16
Title: How do you prompt a user for an input in java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int bob;
    int userChoice;
    String input;
    bob = (int) Math.floor (Math.random () * 2);
    System.out.println (bob);
    System.out.println ("Enter heads or tails?");
    input = in.nextLine ();
    System.out.println ("You entered " + input);
    if (bob == 0) {
        System.out.println ("Computer flipped heads");
    } else {
        System.out.println ("Computer flipped tails");
    }
    if (input.equals ("Heads")) {
        userChoice = 0;
    } else {
        userChoice = 1;
    }
    if (userChoice == bob) {
        System.out.println ("You win!");
    } else {
        System.out.println ("Sorry you lost!");
    }
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Random rd = new Random ();
    int bob = rd.nextInt (2);
    String userChoice;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please enter a number");
    userChoice = sc.nextLine ();
    System.out.println ("You entered " + userChoice + " and bob is " + bob);
    int uc = Integer.parseInt (userChoice);
    if (uc == bob) {
        System.out.println ("Hehe");
    } else {
        System.out.println ("Sorry");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26798670_26799488_82_100
26798670_26800862_94_106
Title: Drawing a spiral in Java 
----------------------------------------

public static void main (String...args) {
    final JFrame frame = new JFrame ("spiral");
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (Exception e) {
    }
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    final Spiral spiral = new Spiral ();
    frame.setContentPane (spiral);
    frame.pack ();
    frame.setVisible (true);
    (new Thread (spiral)).start ();
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setSize (800, 800);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    Slugs panel = new Slugs (frame.getWidth (), frame.getHeight ());
    frame.getContentPane ().add (panel);
    frame.setVisible (true);
    frame.setResizable (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26800445_26800646_1_39
26800445_26800649_1_28
Title: My string name is repeating along loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter your number:");
    int num = in.nextInt ();
    in.nextLine ();
    System.out.println ("Enter name");
    String [] result = new String [num];
    for (int i = 0;
    i < num; i ++) {
        String name = in.nextLine ();
        String str1 = name.replace (new String (Character.toChars (97)), "").replace (new String (Character.toChars (101)), "").replace (new String (Character.toChars (103)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (113)), "").replace (new String (Character.toChars (117)), "").replace (new String (Character.toChars (119)), "").replace (new String (Character.toChars (67)), "").replace (new String (Character.toChars (71)), "").replace (new String (Character.toChars (73)), "").replace (new String (Character.toChars (79)), "").replace (new String (Character.toChars (81)), "").replace (new String (Character.toChars (83)), "").replace (new String (Character.toChars (87)), "").replace (new String (Character.toChars (89)), "");
        result [i] = str1;
    }
    System.out.println ("PRIME ASCII ARE REMOVED:");
    for (int i = 0;
    i < num; i ++) {
        System.out.println (result [i]);
    }
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter your number:");
    int num = in.nextInt ();
    in.nextLine ();
    System.out.println ("Enter name");
    String [] names = new String [num];
    for (int i = 0;
    i < num; i ++) {
        String name = in.nextLine ();
        String str1 = name.replace (new String (Character.toChars (97)), "").replace (new String (Character.toChars (101)), "").replace (new String (Character.toChars (103)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (113)), "").replace (new String (Character.toChars (117)), "").replace (new String (Character.toChars (119)), "").replace (new String (Character.toChars (67)), "").replace (new String (Character.toChars (71)), "").replace (new String (Character.toChars (73)), "").replace (new String (Character.toChars (79)), "").replace (new String (Character.toChars (81)), "").replace (new String (Character.toChars (83)), "").replace (new String (Character.toChars (87)), "").replace (new String (Character.toChars (89)), "");
        names [i] = str1;
    }
    System.out.println ("PRIME ASCII ARE REMOVED:");
    for (String removedName : names) {
        System.out.println (removedName);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26800445_26800646_1_39
26800445_26800769_11_36
Title: My string name is repeating along loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter your number:");
    int num = in.nextInt ();
    in.nextLine ();
    System.out.println ("Enter name");
    String [] result = new String [num];
    for (int i = 0;
    i < num; i ++) {
        String name = in.nextLine ();
        String str1 = name.replace (new String (Character.toChars (97)), "").replace (new String (Character.toChars (101)), "").replace (new String (Character.toChars (103)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (113)), "").replace (new String (Character.toChars (117)), "").replace (new String (Character.toChars (119)), "").replace (new String (Character.toChars (67)), "").replace (new String (Character.toChars (71)), "").replace (new String (Character.toChars (73)), "").replace (new String (Character.toChars (79)), "").replace (new String (Character.toChars (81)), "").replace (new String (Character.toChars (83)), "").replace (new String (Character.toChars (87)), "").replace (new String (Character.toChars (89)), "");
        result [i] = str1;
    }
    System.out.println ("PRIME ASCII ARE REMOVED:");
    for (int i = 0;
    i < num; i ++) {
        System.out.println (result [i]);
    }
    in.close ();
}
----------------------------------------

public static void main (String args []) throws IOException {
    int n;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter no. of values");
    n = sc.nextInt ();
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int i = 1;
    String arr [] = new String [n];
    while (i <= n) {
        System.out.println ("Enter the word:-");
        String st = br.readLine ();
        arr [i - 1] = st;
        i ++;
    }
    for (i = 0; i < n; i ++) {
        String str = arr [i];
        for (int j = 0;
        j < str.length (); j ++) {
            int num = (int) str.charAt (j);
            if (chkprim (num) == false) System.out.print (str.charAt (j));

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26800445_26800649_1_28
26800445_26800769_11_36
Title: My string name is repeating along loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter your number:");
    int num = in.nextInt ();
    in.nextLine ();
    System.out.println ("Enter name");
    String [] names = new String [num];
    for (int i = 0;
    i < num; i ++) {
        String name = in.nextLine ();
        String str1 = name.replace (new String (Character.toChars (97)), "").replace (new String (Character.toChars (101)), "").replace (new String (Character.toChars (103)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (107)), "").replace (new String (Character.toChars (113)), "").replace (new String (Character.toChars (117)), "").replace (new String (Character.toChars (119)), "").replace (new String (Character.toChars (67)), "").replace (new String (Character.toChars (71)), "").replace (new String (Character.toChars (73)), "").replace (new String (Character.toChars (79)), "").replace (new String (Character.toChars (81)), "").replace (new String (Character.toChars (83)), "").replace (new String (Character.toChars (87)), "").replace (new String (Character.toChars (89)), "");
        names [i] = str1;
    }
    System.out.println ("PRIME ASCII ARE REMOVED:");
    for (String removedName : names) {
        System.out.println (removedName);
    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    int n;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter no. of values");
    n = sc.nextInt ();
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int i = 1;
    String arr [] = new String [n];
    while (i <= n) {
        System.out.println ("Enter the word:-");
        String st = br.readLine ();
        arr [i - 1] = st;
        i ++;
    }
    for (i = 0; i < n; i ++) {
        String str = arr [i];
        for (int j = 0;
        j < str.length (); j ++) {
            int num = (int) str.charAt (j);
            if (chkprim (num) == false) System.out.print (str.charAt (j));

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26801798_26801928_5_15
26801798_26801963_1_10
Title: "(Java) Trying to print ""abc"" 5 times with a return statement" 
----------------------------------------

public static String printStrings (String a, int numOfTimes) {
    StringBuilder sb = new StringBuilder ("");
    for (int i = 1;
    i <= numOfTimes; i ++) {
        sb.append (a);
        sb.append (" ");
    }
    sb.replace (sb.length () - 1, sb.length (), "");
    System.out.println (sb.length ());
    return sb.toString ();
}
----------------------------------------

public static String printStrings (String a, int count) {
    String result = "";
    for (int i = 0;
    i < count; i ++) {
        result = result + a;
        if (i != (count - 1)) result = result + " ";

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26803380_26805320_1_26
26803380_38752208_7_37
Title: How to combine scatter chart with line chart to show line of regression? JavaFX 
----------------------------------------

@Override
public void start (Stage stage) {
    final LineChart < Number, Number > sc = new LineChart < > (new NumberAxis (), new NumberAxis ());
    XYChart.Series series1 = new XYChart.Series ();
    series1.setName ("Equities");
    series1.getData ().add (new XYChart.Data (4.2, 193.2));
    series1.getData ().add (new XYChart.Data (2.8, 33.6));
    series1.getData ().add (new XYChart.Data (6.8, 23.6));
    XYChart.Series series2 = new XYChart.Series ();
    series2.setName ("Mutual funds");
    series2.getData ().add (new XYChart.Data (5.2, 229.2));
    series2.getData ().add (new XYChart.Data (2.4, 37.6));
    series2.getData ().add (new XYChart.Data (6.4, 15.6));
    sc.setAnimated (false);
    sc.setCreateSymbols (true);
    sc.getData ().addAll (series1, series2);
    Scene scene = new Scene (sc, 500, 400);
    scene.getStylesheets ().add (getClass ().getResource ("root.css").toExternalForm ());
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) throws Exception {
    NumberAxis xAxis = new NumberAxis ();
    NumberAxis yAxis = new NumberAxis ();
    final ScatterChart < Number, Number > sc = new ScatterChart < > (xAxis, yAxis);
    final LineChart < Number, Number > lc = new LineChart < > (xAxis, yAxis);
    XYChart.Series series1 = new XYChart.Series ();
    series1.setName ("Equities");
    series1.getData ().add (new XYChart.Data (4.2, 193.2));
    series1.getData ().add (new XYChart.Data (2.8, 33.6));
    XYChart.Series series2 = new XYChart.Series ();
    series2.setName ("Mutual funds");
    series2.getData ().add (new XYChart.Data (5.2, 229.2));
    series2.getData ().add (new XYChart.Data (2.4, 37.6));
    sc.getData ().addAll (series1);
    lc.getData ().addAll (series2);
    Pane pane = new Pane ();
    pane.getChildren ().add (sc);
    pane.getChildren ().add (lc);
    lc.setOpacity (0.5);
    Scene scene = new Scene (pane, 800, 600);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26809635_26809750_1_11
26809635_26809915_1_17
Title: A Sorted Integer List 
----------------------------------------

public void add (int value) {
    if (numElements == list.length) {
        System.out.println ("Can't add, list is full");
    } else {
        list [numElements] = value;
        numElements ++;
        Arrays.sort (list);
    }
}
----------------------------------------

public void add (int value) {
    if (numElements == list.length) {
        System.out.println ("Can't add, list is full");
    } else {
        int insertionPoint = Arrays.binarySearch (list, 0, numElements);
        if (insertionPoint < 0) {
            insertionPoint = - (insertionPoint + 1);
        }
        System.arrayCopy (list, insertionPoint, list, insertionPoint + 1, numElements - insertionPoint);
        list [insertionPoint] = value;
        numElements += 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26810691_26810750_4_18
26810691_26810919_1_19
Title: how to write java program that read 5 numbers and calculate how many numbers has value from 0-9 
----------------------------------------

public static void main (String [] args) {
    Scanner variable = new Scanner (System.in);
    int i = 0, counter = 0, n = 0;
    for (i = 0; i < 5; i ++) {
        n = variable.nextInt ();
        if ((0 <= n) && (n <= 9)) counter ++;

    }
    System.out.println ("the number of values enterd from 0-9 is    " + counter);
}
----------------------------------------

public static void main (String [] args) {
    Scanner variable = new Scanner (System.in);
    int counter = 0;
    for (int i = 0;
    i < 5; i ++) {
        int n = variable.nextInt ();
        if (0 <= n && n <= 9) {
            counter ++;
        }
    }
    variable.close ();
    System.out.println ("the number of values enterd from 0-9 is: " + counter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26813249_26813323_5_45
26813249_26813369_1_39
Title: "So I have this code here it calculates the vowels in a given phrase. I'm trying to get it to repeat if the user says yes" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int answer = 0;
    System.out.println ("Count Vowels \n============");
    do {
        if (answer == 1) {
            System.out.println ("You have chosen to count the vowels in another phrase");
        }
        System.out.println ("Type a sentence and this program will tell you\n\nhow many vowels there are (excluding 'y'):");
        String string1;
        string1 = input.nextLine ();
        string1 = string1.toLowerCase ();
        int vowels = 0;
        int i = 0;
        for (String Vowels : string1.split (" ")) {
            for (i = 0; i < Vowels.length (); i ++) {
                int letter = Vowels.charAt (i);
                if (letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u') {
                    vowels ++;
                }
            }
            System.out.println (Vowels.substring (0, 1).toUpperCase () + Vowels.substring (1) + " has " + vowels + " vowels");
            vowels = 1;
        }
        System.out.println ("Would you like to check another phrase in the Vowel Counter? If so type 1 if not type 2 and press enter");
        answer = input.nextInt ();
    } while (answer == 1);
    System.out.println ("Have a nice day");
}
----------------------------------------

public static void main (String...args) {
    int answer = 0;
    Scanner input = null;
    do {
        input = new Scanner (System.in);
        System.out.print ("Type a sentence and this program will tell you\nhow many vowels there are (excluding 'y'):");
        String sentence = input.nextLine ();
        int vowels = 0;
        String temp = sentence.toUpperCase ();
        for (int i = 0;
        i < sentence.length (); i ++) {
            switch ((char) temp.charAt (i)) {
                case 'A' :
                case 'E' :
                case 'I' :
                case 'O' :
                case 'U' :
                    vowels ++;
            }
        }
        System.out.println ("The sentence: \"" + sentence + "\" has " + vowels + " vowels");
        System.out.print ("Would you like to check another phrase in the Vowel Counter? if so Press 1 if not press any other key... ");
        String tempNum = input.next ();
        try {
            answer = Integer.parseInt (tempNum);
        } catch (NumberFormatException e) {
            answer = 0;
        }
        System.out.println ();
    } while (answer == 1);
    input.close ();
    System.out.println ("Have a nice day");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26826988_26829618_1_28
26826988_26831560_31_68
Title: How to delay the Drag-Start to combine move and Drag-And-Drop dynamically 
----------------------------------------

@Override
public void start (Stage primaryStage) {
    Pane mainPane = new Pane ();
    Rectangle rect = new Rectangle (0, 0, 30, 30);
    rect.setFill (Color.RED);
    mainPane.getChildren ().add (rect);
    Scene scene = new Scene (mainPane, 500, 500);
    primaryStage.setScene (scene);
    primaryStage.show ();
    rect.setOnDragDetected (event -> {
        Node on = (Node) event.getSource ();
        Dragboard db = on.startDragAndDrop (TransferMode.ANY);
        db.setContent (makeClipboardContent (event, on, null));
        event.consume ();
    });
    mainPane.setOnDragOver (e -> {
        e.acceptTransferModes (TransferMode.ANY);
    });
    mainPane.setOnDragExited (e -> {
        rect.setLayoutX (e.getSceneX () - rect.getWidth () / 2d);
        rect.setLayoutY (e.getSceneY () - rect.getHeight () / 2d);
    });
}
----------------------------------------

public void start (Stage primaryStage) {
    Pane mainPane = new Pane ();
    Scene scene = new Scene (mainPane, 500, 500);
    primaryStage.setScene (scene);
    primaryStage.show ();
    Rectangle area = new Rectangle (0, 0, 500, 500);
    Rectangle rect = new Rectangle (0, 0, 30, 30);
    rect.setFill (Color.RED);
    mainPane.getChildren ().add (rect);
    rect.setOnMouseDragged (event -> {
        System.out.println ("Move");
        event.setDragDetect (false);
        Node on = (Node) event.getTarget ();
        if (lastXY == null) {
            lastXY = new Point2D (event.getSceneX (), event.getSceneY ());
        }
        double dx = event.getSceneX () - lastXY.getX ();
        double dy = event.getSceneY () - lastXY.getY ();
        on.setTranslateX (on.getTranslateX () + dx);
        on.setTranslateY (on.getTranslateY () + dy);
        lastXY = new Point2D (event.getSceneX (), event.getSceneY ());
        if (! area.intersects (event.getSceneX (), event.getSceneY (), 1, 1)) event.setDragDetect (true);

        event.consume ();
    });
    rect.setOnDragDetected (event -> {
        System.out.println ("Drag:" + event);
        Node on = (Node) event.getTarget ();
        Dragboard db = on.startDragAndDrop (TransferMode.COPY);
        db.setContent (makeClipboardContent (event, on, "red rectangle"));
        event.consume ();
    });
    rect.setOnMouseReleased (d -> lastXY = null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835440_26835600_33_63
26835440_26835673_194_202
Title: Displaying a count using JLabel? 
----------------------------------------

public void paintComponent (Graphics g) {
    Graphics2D g2 = (Graphics2D) g;
    Random rand = new Random ();
    for (int i = 0;
    i < 10; i ++) {
        if (! truckOrCar [i]) {
            x = rand.nextInt (420);
            y = rand.nextInt (545);
            Vehicle car = new Car (x, y);
            car.draw (g2);
            ccount += 1;
        } else {
            x = rand.nextInt (420);
            y = rand.nextInt (545);
            Vehicle truck = new Truck (x, y);
            truck.draw (g2);
            tcount += 1;
        }
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    Graphics2D g2 = (Graphics2D) g;
    for (Car car : cars) {
        car.draw (g2);
    }
    for (Truck truck : trucks) {
        truck.draw (g2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835440_26835673_141_170
26835440_26835673_90_118
Title: Displaying a count using JLabel? 
----------------------------------------

public void draw (Graphics g2) {
    Rectangle body = new Rectangle (xLeft + 22, yTop + 10, 60, 20);
    Rectangle topCab = new Rectangle (xLeft, yTop + 10, 20, 10);
    Rectangle bottomCab = new Rectangle (xLeft, yTop + 20, 20, 10);
    Ellipse2D.Double frontTire = new Ellipse2D.Double (xLeft + 6, yTop + 30, 10, 10);
    Ellipse2D.Double midTire = new Ellipse2D.Double (xLeft + 25, yTop + 30, 10, 10);
    Ellipse2D.Double mid2Tire = new Ellipse2D.Double (xLeft + 35, yTop + 30, 10, 10);
    Ellipse2D.Double backTire = new Ellipse2D.Double (xLeft + 55, yTop + 30, 10, 10);
    Ellipse2D.Double back2Tire = new Ellipse2D.Double (xLeft + 65, yTop + 30, 10, 10);
    ((Graphics2D) g2).setColor (color);
    ((Graphics2D) g2).fill (body);
    ((Graphics2D) g2).fill (bottomCab);
    ((Graphics2D) g2).fill (frontTire);
    ((Graphics2D) g2).fill (midTire);
    ((Graphics2D) g2).fill (mid2Tire);
    ((Graphics2D) g2).fill (backTire);
    ((Graphics2D) g2).fill (back2Tire);
    ((Graphics2D) g2).draw (body);
    ((Graphics2D) g2).draw (topCab);
    ((Graphics2D) g2).draw (bottomCab);
    ((Graphics2D) g2).draw (frontTire);
    ((Graphics2D) g2).draw (midTire);
    ((Graphics2D) g2).draw (mid2Tire);
    ((Graphics2D) g2).draw (backTire);
    ((Graphics2D) g2).draw (back2Tire);
}
----------------------------------------

public void draw (Graphics g2) {
    Rectangle body = new Rectangle (xLeft, yTop + 10, 60, 10);
    Ellipse2D.Double frontTire = new Ellipse2D.Double (xLeft + 10, yTop + 20, 10, 10);
    Ellipse2D.Double rearTire = new Ellipse2D.Double (xLeft + 40, yTop + 20, 10, 10);
    Point2D.Double r1 = new Point2D.Double (xLeft + 10, yTop + 10);
    Point2D.Double r2 = new Point2D.Double (xLeft + 20, yTop);
    Point2D.Double r3 = new Point2D.Double (xLeft + 40, yTop);
    Point2D.Double r4 = new Point2D.Double (xLeft + 50, yTop + 10);
    Line2D.Double frontWindshield = new Line2D.Double (r1, r2);
    Line2D.Double roofTop = new Line2D.Double (r2, r3);
    Line2D.Double rearWindshield = new Line2D.Double (r3, r4);
    ((Graphics2D) g2).setColor (color);
    ((Graphics2D) g2).fill (body);
    ((Graphics2D) g2).fill (frontTire);
    ((Graphics2D) g2).fill (rearTire);
    ((Graphics2D) g2).draw (body);
    ((Graphics2D) g2).draw (frontTire);
    ((Graphics2D) g2).draw (rearTire);
    ((Graphics2D) g2).draw (frontWindshield);
    ((Graphics2D) g2).draw (rearWindshield);
    ((Graphics2D) g2).draw (roofTop);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835454_26835476_1_12
26835454_26835480_1_19
Title: Resetting a variable to zero while in a loop 
----------------------------------------

public static String getNumberString (String s) {
    String word = s;
    String word1 = word.replaceAll ("[AEIOUaeiou]", "@");
    int c = 0;
    String word2 = word1;
    for (c = 0; c <= word.length (); c ++) {
        word2 = word2.replaceFirst ("@", Integer.toString (c % 10));
    }
    return word2;
}
----------------------------------------

public static String getNumberString (String s) {
    String word = s;
    String word1 = word.replaceAll ("[AEIOUaeiou]", "@");
    int c = 0;
    String word2 = word1;
    for (int i = 0;
    i <= word.length (); i ++) {
        word2 = word2.replaceFirst ("@", Integer.toString (c));
        if (c == 9) {
            c = 0;
        } else {
            c ++;
        }
    }
    return word2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835454_26835476_1_12
26835454_26835509_1_19
Title: Resetting a variable to zero while in a loop 
----------------------------------------

public static String getNumberString (String s) {
    String word = s;
    String word1 = word.replaceAll ("[AEIOUaeiou]", "@");
    int c = 0;
    String word2 = word1;
    for (c = 0; c <= word.length (); c ++) {
        word2 = word2.replaceFirst ("@", Integer.toString (c % 10));
    }
    return word2;
}
----------------------------------------

public static String getNumberString (String str) {
    int count = 0;
    StringBuilder sb = new StringBuilder ();
    if (str != null) {
        for (char ch : str.toCharArray ()) {
            switch (Character.toLowerCase (ch)) {
                case 'a' :
                case 'e' :
                case 'i' :
                case 'o' :
                case 'u' :
                    sb.append (count);
                    ++ count;
                    count %= 10;
                    break;
                default :
                    sb.append (ch);
            }
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835454_26835480_1_19
26835454_26835509_1_19
Title: Resetting a variable to zero while in a loop 
----------------------------------------

public static String getNumberString (String s) {
    String word = s;
    String word1 = word.replaceAll ("[AEIOUaeiou]", "@");
    int c = 0;
    String word2 = word1;
    for (int i = 0;
    i <= word.length (); i ++) {
        word2 = word2.replaceFirst ("@", Integer.toString (c));
        if (c == 9) {
            c = 0;
        } else {
            c ++;
        }
    }
    return word2;
}
----------------------------------------

public static String getNumberString (String str) {
    int count = 0;
    StringBuilder sb = new StringBuilder ();
    if (str != null) {
        for (char ch : str.toCharArray ()) {
            switch (Character.toLowerCase (ch)) {
                case 'a' :
                case 'e' :
                case 'i' :
                case 'o' :
                case 'u' :
                    sb.append (count);
                    ++ count;
                    count %= 10;
                    break;
                default :
                    sb.append (ch);
            }
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26835552_26835653_13_22
26835552_26835669_11_19
Title: "How can I use a while loop to continuously ask for input and stop the program if the user types in ""quit""?" 
----------------------------------------

public static void next () {
    Scanner kb = new Scanner (System.in);
    System.out.print ("Enter an expression, or quit to exit: ");
    String expression = kb.nextLine ();
    if (expression.equals ("quit")) {
        System.exit (0);
    } else {
        next3 (expression);
    }
}
----------------------------------------

public static void next () {
    Scanner kb = new Scanner (System.in);
    System.out.print ("Enter an expression, or quit to exit: ");
    while (kb.hasNext ()) {
        String expression = kb.nextLine ();
        next3 (expression);
        System.out.print ("Enter an expression, or quit to exit: ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26839649_26839811_1_17
26839649_26839877_2_21
Title: Why isn't my program returning the value of my expression? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Welcome to the AP Computer Science calculator!!");
    System.out.println ();
    System.out.println ("Please use the following format in your expressions: (double)(space)(+,-,*,/...)(space)(double)");
    System.out.println ("or: (symbol)(space)(double)");
    System.out.println ();
    String input = MethodToReadInput ();
    while (input != null) {
        MethodtoEvaluateInput (input);
        input = MethodToReadInput ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    System.out.println ("Welcome to the AP Computer Science calculator!!");
    System.out.println ();
    System.out.println ("Please use the following format in your expressions: (double)(space)(+,-,*,/...)(space)(double)");
    System.out.println ("or: (symbol)(space)(double)");
    System.out.println ();
    String expression = "";
    do {
        Scanner kb = new Scanner (System.in);
        System.out.print ("Enter an expression, or quit to exit: ");
        expression = kb.nextLine ();
        if (expression.equalsIgnoreCase ("quit")) System.out.println ("Goodbye!");
        else MethodtoEvaluateInput (expression);

    } while (! expression.equalsIgnoreCase ("quit"));
    inRn.close ();
    inSw.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_202_220
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_225_241
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_247_265
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_271_288
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_294_311
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_181_197
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma = "Foto_Plataforma_" + hora_final + ".jpg";
    localPlataforma = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Plataforma_" + hora_final + ".jpg";
    File arquivo = new File (localPlataforma);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_225_241
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_247_265
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_271_288
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_294_311
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_202_220
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoPlataforma2 = "Foto_Plataforma2_" + hora_final + ".jpg";
    localPlataforma2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/" + nomeArquivoPlataforma2 + ".jpg";
    File arquivo = new File (localPlataforma2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PLATAFORMA2);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_247_265
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_271_288
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_294_311
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_225_241
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoHorimetro = "Foto_Horimetro_" + hora_final + ".jpg";
    localHorimetro = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Horimetro_" + hora_final + ".jpg";
    File arquivo = new File (localHorimetro);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_HORIMETRO);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_247_265
26843289_26844127_271_288
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_247_265
26843289_26844127_294_311
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_247_265
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_247_265
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_247_265
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema = "Foto_Problema_" + hora_final + ".jpg";
    localProblema = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema_" + hora_final + ".jpg";
    File arquivo = new File (localProblema);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_271_288
26843289_26844127_294_311
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_271_288
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_271_288
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_271_288
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoProblema2 = "Foto_Problema2_" + hora_final + ".jpg";
    localProblema2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_Problema2_" + hora_final + ".jpg";
    File arquivo = new File (localProblema2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_PROBLEMA2);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_294_311
26843289_26844127_317_335
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_294_311
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_294_311
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa = "Foto_CausaProblema_" + hora_final + ".jpg";
    localCausa = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema_" + hora_final + ".jpg";
    File arquivo = new File (localCausa);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_317_335
26843289_26844127_354_371
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------

public void onClick (View view) {
    Manutencao manutencao = helper.getManutencao ();
    ManutencaoDAO dao = new ManutencaoDAO (ManutencaoConclusaoActivity.this);
    if (manutencao.getId () == null) {
        dao.cadastrar (manutencao);
    } else {
        dao.alterar (manutencao);
    }
    dao.close ();
    finish ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26843289_26844127_317_335
26843289_26844127_378_435
Title: Sending photos by ftp 
----------------------------------------

public void onClick (View v) {
    nomeArquivoCausa2 = "Foto_CausaProblema2_" + hora_final + ".jpg";
    localCausa2 = STORAGE_SERVICE + "/extSdCard/" + "/RCBManutencoes/Foto_CausaProblema2_" + hora_final + ".jpg";
    File arquivo = new File (localCausa2);
    Uri localFoto = Uri.fromFile (arquivo);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    intent.putExtra (MediaStore.EXTRA_OUTPUT, localFoto);
    startActivityForResult (intent, TAKE_CAUSA2);
}
----------------------------------------

public void onClick (View v) {
    dialog = ProgressDialog.show (ManutencaoConclusaoActivity.this, "Conectando com o servidor ", "Enviando arquivo, por favor, aguarde...", false, true);
    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder ().permitAll ().build ();
    StrictMode.setThreadPolicy (policy);
    Connection connection = null;
    PreparedStatement preparedStatement = null;
    connection = JdbcConnection.getConnection ();
    String query = "INSERT INTO ManutencaoTablet ( " + "cliente, maquina, horimetro, descricao_problema, causa_problema, " + "descricao_peca, numero_peca, quantidade, tipo, retorno, tecnico, hora_final)" + "VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
    try {
        preparedStatement = connection.prepareStatement (query);
        preparedStatement.setString (1, helper.getManutencao ().getCliente ());
        preparedStatement.setString (2, helper.getManutencao ().getMaquina ());
        preparedStatement.setString (3, helper.getManutencao ().getHorimetro ());
        preparedStatement.setString (4, helper.getManutencao ().getDescricao_problema ());
        preparedStatement.setString (5, helper.getManutencao ().getCausa_problema ());
        preparedStatement.setString (6, helper.getManutencao ().getDescricao_peca ());
        preparedStatement.setString (7, helper.getManutencao ().getNumero_peca ());
        preparedStatement.setString (8, helper.getManutencao ().getQuantidade ());
        preparedStatement.setString (9, helper.getManutencao ().getTipo ());
        preparedStatement.setString (10, helper.getManutencao ().getRetorno ());
        preparedStatement.setString (11, helper.getManutencao ().getTecnico ());
        preparedStatement.setString (12, helper.getManutencao ().getHora_final ());
        preparedStatement.executeBatch ();
        preparedStatement.executeUpdate ();
        preparedStatement.close ();
        connection.close ();
        Log.i (TAG, "INSERÇÃO REALIZADAAAA!!");
    } catch (SQLException e) {
        e.printStackTrace ();
    } finally {
        if (connection != null) {
            try {
                connection.close ();
            } catch (SQLException e) {
                e.printStackTrace ();
            }
        }
    }
    new Thread (ManutencaoConclusaoActivity.this).start ();
}
----------------------------------------
