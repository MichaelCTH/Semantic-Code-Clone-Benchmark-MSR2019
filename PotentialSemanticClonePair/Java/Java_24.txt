$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17525757_19339053_5_17
17525757_22947867_1_20
Title: Recursion - Reverse LinkedList with void function return type 
----------------------------------------

private static ListElement reverse (ListElement previous, ListElement current) {
    ListElement newHead = null;
    if (current.getNext () != null) {
        newHead = reverse (current, current.getNext ());
    } else {
        newHead = current;
        newHead.setNext (previous);
    }
    current.setNext (previous);
    return newHead;
}
----------------------------------------

public void reverse (Node previous, Node current) {
    if (current.next != null) {
        reverse (current, current.next);
    } else this.head = current;

    if (previous == null) {
        current.next = null;
        this.tail = current;
    } else {
        current.next = previous;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1752607_1754823_23_35
1752607_29881484_38_67
Title: How to intentionally cause a custom java compiler warning message? 
----------------------------------------

public boolean process (Set < ? extends TypeElement > annotations, RoundEnvironment roundEnv) {
    if (! roundEnv.processingOver ()) {
        for (TypeElement te : annotations) {
            final Set < ? extends Element > elts = roundEnv.getElementsAnnotatedWith (te);
            for (Element elt : elts) {
                env.getMessager ().printMessage (Kind.WARNING, String.format ("%s : thou shalt not hack %s", roundEnv.getRootElements (), elt), elt);
            }
        }
    }
    return true;
}
----------------------------------------

public boolean process (Set < ? extends TypeElement > annotations, RoundEnvironment roundEnv) {
    Elements elementUtils = processingEnv.getElementUtils ();
    boolean processMarker = annotations.contains (elementUtils.getTypeElement (Marker.class.getName ()));
    if (! processMarker) return false;

    for (Element e : roundEnv.getElementsAnnotatedWith (Marker.class)) {
        ElementKind kind = e.getKind ();
        if (kind != ElementKind.INTERFACE) {
            causeError (String.format ("target of @Marker %s is not an interface", e), e);
            continue;
        }
        if (kind == ElementKind.ANNOTATION_TYPE) {
            causeError (String.format ("target of @Marker %s is an annotation", e), e);
            continue;
        }
        ensureNoMethodsDeclared (e, e);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17531042_22182447_27_52
17531042_28032084_1_19
Title: Karatsuba Algorithm without BigInteger usage 
----------------------------------------

private static long karatsuba (long i, long j) {
    if (i < 10 || j < 10) {
        return i * j;
    }
    double n = Long.toString (i).length ();
    long a = (long) (i / Math.pow (10, Math.floor (n / 2d)));
    long b = (long) (i % Math.pow (10, Math.floor (n / 2d)));
    long c = (long) (j / Math.pow (10, Math.floor (n / 2d)));
    long d = (long) (j % Math.pow (10, Math.floor (n / 2d)));
    long first = karatsuba (a, c);
    long second = karatsuba (b, d);
    long third = karatsuba (a + b, c + d);
    return (long) ((first * Math.pow (10, Math.floor (n / 2d) * 2)) + ((third - second - first) * Math.pow (10, Math.floor (n / 2))) + second);
}
----------------------------------------

public static long karatsuba (long i, long j) {
    if (i < 10 || j < 10) {
        return i * j;
    }
    double n = Math.round (getCount (i));
    if (n % 2 == 1) {
        n ++;
    }
    long a = (long) (i / Math.pow (10, Math.round (n / 2)));
    long b = (long) (i % Math.pow (10, Math.round (n / 2)));
    long c = (long) (j / Math.pow (10, Math.round (n / 2)));
    long d = (long) (j % Math.pow (10, Math.round (n / 2)));
    long first = karatsuba (a, c);
    long second = karatsuba (b, d);
    long third = karatsuba (a + b, c + d);
    return ((long) ((first * Math.pow (10, n)) + ((third - first - second) * Math.pow (10, Math.round (n / 2))) + second));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17531042_22182447_27_52
17531042_49353592_36_57
Title: Karatsuba Algorithm without BigInteger usage 
----------------------------------------

private static long karatsuba (long i, long j) {
    if (i < 10 || j < 10) {
        return i * j;
    }
    double n = Long.toString (i).length ();
    long a = (long) (i / Math.pow (10, Math.floor (n / 2d)));
    long b = (long) (i % Math.pow (10, Math.floor (n / 2d)));
    long c = (long) (j / Math.pow (10, Math.floor (n / 2d)));
    long d = (long) (j % Math.pow (10, Math.floor (n / 2d)));
    long first = karatsuba (a, c);
    long second = karatsuba (b, d);
    long third = karatsuba (a + b, c + d);
    return (long) ((first * Math.pow (10, Math.floor (n / 2d) * 2)) + ((third - second - first) * Math.pow (10, Math.floor (n / 2))) + second);
}
----------------------------------------

private static BigInteger karatsuba (BigInteger x, BigInteger y) {
    if (x.compareTo (BigInteger.valueOf (10)) < 0 && y.compareTo (BigInteger.valueOf (10)) < 0) return x.multiply (y);

    int n = Math.max (x.toString ().length (), y.toString ().length ());
    int m = n / 2 + n % 2;
    BigInteger [] a_b = x.divideAndRemainder (BigInteger.valueOf (10).pow (m));
    BigInteger a = a_b [0];
    BigInteger b = a_b [1];
    BigInteger [] c_d = y.divideAndRemainder (BigInteger.valueOf (10).pow (m));
    BigInteger c = c_d [0];
    BigInteger d = c_d [1];
    BigInteger step1 = karatsuba (a, c);
    BigInteger step2 = karatsuba (b, d);
    BigInteger step3 = karatsuba (a.add (b), c.add (d));
    BigInteger step4 = step3.subtract (step2).subtract (step1);
    BigInteger step5 = step1.multiply (BigInteger.valueOf (10).pow (m * 2)).add (step2).add (step4.multiply (BigInteger.valueOf (10).pow (m)));
    return step5;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17531042_22182447_3_24
17531042_49353592_26_34
Title: Karatsuba Algorithm without BigInteger usage 
----------------------------------------

public static void main (String [] args) {
    long ans = karatsuba (234, 6788);
    System.out.println ("actual    " + ans);
    System.out.println ("expected  " + 234 * 6788);
    long ans0 = karatsuba (68, 156);
    System.out.println ("actual    " + ans0);
    System.out.println ("expected  " + 68 * 156);
    long ans1 = karatsuba (1234, 5678);
    System.out.println ("actual    " + ans1);
    System.out.println ("expected  " + 1234 * 5678);
    long ans2 = karatsuba (122, 456);
    System.out.println ("actual    " + ans2);
    System.out.println ("expected  " + 122 * 456);
    long ans3 = karatsuba (102456, 102465);
    System.out.println ("actual    " + ans3);
    System.out.println ("expected  " + 102456l * 102465l);
}
----------------------------------------

public static void main (String [] args) {
    BigInteger x, y;
    try (Scanner s = new Scanner (System.in)) {
        x = s.nextBigInteger ();
        y = s.nextBigInteger ();
    }
    BigInteger result = karatsuba (x, y);
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17531042_28032084_1_19
17531042_49353592_36_57
Title: Karatsuba Algorithm without BigInteger usage 
----------------------------------------

public static long karatsuba (long i, long j) {
    if (i < 10 || j < 10) {
        return i * j;
    }
    double n = Math.round (getCount (i));
    if (n % 2 == 1) {
        n ++;
    }
    long a = (long) (i / Math.pow (10, Math.round (n / 2)));
    long b = (long) (i % Math.pow (10, Math.round (n / 2)));
    long c = (long) (j / Math.pow (10, Math.round (n / 2)));
    long d = (long) (j % Math.pow (10, Math.round (n / 2)));
    long first = karatsuba (a, c);
    long second = karatsuba (b, d);
    long third = karatsuba (a + b, c + d);
    return ((long) ((first * Math.pow (10, n)) + ((third - first - second) * Math.pow (10, Math.round (n / 2))) + second));
}
----------------------------------------

private static BigInteger karatsuba (BigInteger x, BigInteger y) {
    if (x.compareTo (BigInteger.valueOf (10)) < 0 && y.compareTo (BigInteger.valueOf (10)) < 0) return x.multiply (y);

    int n = Math.max (x.toString ().length (), y.toString ().length ());
    int m = n / 2 + n % 2;
    BigInteger [] a_b = x.divideAndRemainder (BigInteger.valueOf (10).pow (m));
    BigInteger a = a_b [0];
    BigInteger b = a_b [1];
    BigInteger [] c_d = y.divideAndRemainder (BigInteger.valueOf (10).pow (m));
    BigInteger c = c_d [0];
    BigInteger d = c_d [1];
    BigInteger step1 = karatsuba (a, c);
    BigInteger step2 = karatsuba (b, d);
    BigInteger step3 = karatsuba (a.add (b), c.add (d));
    BigInteger step4 = step3.subtract (step2).subtract (step1);
    BigInteger step5 = step1.multiply (BigInteger.valueOf (10).pow (m * 2)).add (step2).add (step4.multiply (BigInteger.valueOf (10).pow (m)));
    return step5;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17539724_17539826_1_10
17539724_17541897_10_27
Title: Validating Date - Bean validation annotation - With a specific format 
----------------------------------------

boolean isValid (String date) {
    SimpleDateFormat df = new SimpleDateFormat ("yyyy-MM-dd'_'HH:mm:ss");
    df.setLenient (false);
    try {
        df.parse (date);
    } catch (ParseException e) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean isValid (String date, ConstraintValidatorContext constraintValidatorContext) {
    if (date == null) {
        return true;
    }
    DateFormat dateFormat = new SimpleDateFormat (format);
    dateFormat.setLenient (false);
    try {
        dateFormat.parse (date);
        return true;
    } catch (ParseException e) {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17554023_17555377_1_70
17554023_17558823_1_21
Title: Java implementation of Wil Shipley's `IsEmpty` method for defensive coding 
----------------------------------------

public static boolean isEmpty (final Object o) {
    if (o == null) {
        return true;
    } else if (o instanceof Object []) {
        return ((Object []) o).length <= 0;
    } else if (o instanceof boolean []) {
        return ((boolean []) o).length <= 0;
    } else if (o instanceof byte []) {
        return ((byte []) o).length <= 0;
    } else if (o instanceof short []) {
        return ((short []) o).length <= 0;
    } else if (o instanceof char []) {
        return ((char []) o).length <= 0;
    } else if (o instanceof int []) {
        return ((int []) o).length <= 0;
    } else if (o instanceof long []) {
        return ((long []) o).length <= 0;
    } else if (o instanceof float []) {
        return ((float []) o).length <= 0;
    } else if (o instanceof double []) {
        return ((double []) o).length <= 0;
    } else if (o instanceof CharSequence) {
        return ((CharSequence) o).length () <= 0;
    } else if (o instanceof Collection) {
        return ((Collection) o).isEmpty ();
    } else if (o instanceof Map) {
        return ((Map) o).isEmpty ();
    } else if (o instanceof Enumeration) {
        return ! ((Enumeration) o).hasMoreElements ();
    } else if (o instanceof Dictionary) {
        return ((Dictionary) o).isEmpty ();
    } else if (o instanceof Iterable) {
        return ! ((Iterable) o).iterator ().hasNext ();
    }

    final Number length = retrieveNumberFromMethod (o, "length");
    if (length != null) {
        return length.shortValue () <= 0;
    }
    final Number size = retrieveNumberFromMethod (o, "size");
    if (size != null) {
        return size.shortValue () <= 0;
    }
    final Boolean isEmpty = retrieveBooleanFromMethod (o, "isEmpty");
    if (isEmpty != null) {
        return isEmpty;
    }
    return false;
}
----------------------------------------

public static boolean isEmpty (Object o) {
    if (o != null) {
        Class < ? extends Object > c = o.getClass ();
        try {
            Method m = c.getMethod ("size", (Class []) null);
            Integer result = (Integer) m.invoke (o, (Object []) null);
            if (result.intValue () > 0) {
                return false;
            }
        } catch (NoSuchMethodException e) {
        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | SecurityException e) {
            e.printStackTrace ();
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17577908_17580110_15_34
17577908_17580110_46_56
Title: Java: why is this code not working? Infinite loop? 
----------------------------------------

public void run () {
    t = new Thread (r);
    t.start ();
    try {
        Thread.sleep (5000);
    } catch (Exception e) {
    }
    t.interrupt ();
    ro.keyPress (KeyEvent.VK_ENTER);
    ro.keyRelease (KeyEvent.VK_ENTER);
    System.out.println ("number of entered lines " + r.getCount () + "\n");
}
----------------------------------------

public void run () {
    try {
        String line;
        System.out.println ("you have 5 second to detect a 2048 length character, then your system will broken");
        while ((line = br.readLine ()) != null) {
            if (! Thread.currentThread ().isInterrupted ()) {
                count ++;
                lines.add (line);
            } else {
                break;
            }
        }
    } catch (Exception ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17581738_17581846_1_13
17581738_17581880_1_25
Title: Check if a point projected on a line segment is not outside it 
----------------------------------------

public static boolean check (double x1, double y1, double x2, double y2, double x, double y) {
    if (x1 == x2) {
        return y1 < y2 ? (y1 <= y && y <= y2) : (y2 <= y && y <= y1);
    }
    double m = (y2 - y1) / (x2 - x1);
    double r1 = x1 + m * y1;
    double r2 = x2 + m * y2;
    double r = x + m * y;
    return r1 < r2 ? (r1 <= r && r <= r2) : (r2 <= r && r <= r1);
}
----------------------------------------

public static boolean check (double x, double y, double x1, double y1, double x2, double y2) {
    double dx1 = x - x1, dx2 = x2 - x1, dy1 = y - y1, dy2 = y2 - y1;
    double dotp = dx1 * dx2 + dy1 * dy2;
    double theta = Math.acos (dotp / (Math.sqrt (dx1 * dx1 + dy1 * dy1) * Math.sqrt (dx2 * dx2 + dy2 * dy2)));
    theta = Math.abs (theta);
    if (theta > (Math.PI / 2)) return false;

    dx1 = x - x2;
    dx2 = x1 - x2;
    dy1 = y - y2;
    dy2 = y1 - y2;
    dotp = dx1 * dx2 + dy1 * dy2;
    theta = Math.acos (dotp / (Math.sqrt (dx1 * dx1 + dy1 * dy1) * Math.sqrt (dx2 * dx2 + dy2 * dy2)));
    theta = Math.abs (theta);
    if (theta > (Math.PI / 2)) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589231_1_13
17588872_17589245_7_16
Title: Simulating String.split using StringTokenizer 
----------------------------------------

private static String [] split (String delim, String line) {
    String current = line;
    int index = line.indexOf (delim);
    Vector vector = new Vector ();
    while (index != - 1) {
        vector.add (current.substring (0, index));
        current = current.substring (index + 1);
        index = current.indexOf (delim);
    }
    vector.add (current);
    return (String []) vector.toArray (new String [vector.size ()]);
}
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim);
    String [] v = new String [tokens.countTokens ()];
    int i = 0;
    while (tokens.hasMoreTokens ()) {
        v [i] = tokens.nextToken ();
        i ++;
    }
    return v;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589231_1_13
17588872_17589307_1_18
Title: Simulating String.split using StringTokenizer 
----------------------------------------

private static String [] split (String delim, String line) {
    String current = line;
    int index = line.indexOf (delim);
    Vector vector = new Vector ();
    while (index != - 1) {
        vector.add (current.substring (0, index));
        current = current.substring (index + 1);
        index = current.indexOf (delim);
    }
    vector.add (current);
    return (String []) vector.toArray (new String [vector.size ()]);
}
----------------------------------------

public static String [] split (String line, String delim) {
    Vector v = new Vector ();
    final String EMPTY_STRING = "";
    StringTokenizer st = new StringTokenizer (line, delim, true);
    while (st.hasMoreTokens ()) {
        String token = st.nextToken ();
        if (token.equals (delim)) {
            if (v.isEmpty () || v.size () > 0 && ! EMPTY_STRING.equals (v.get (v.size () - 1))) {
                v.add (EMPTY_STRING);
            }
        } else {
            v.add (token);
        }
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589231_1_13
17588872_17589445_1_19
Title: Simulating String.split using StringTokenizer 
----------------------------------------

private static String [] split (String delim, String line) {
    String current = line;
    int index = line.indexOf (delim);
    Vector vector = new Vector ();
    while (index != - 1) {
        vector.add (current.substring (0, index));
        current = current.substring (index + 1);
        index = current.indexOf (delim);
    }
    vector.add (current);
    return (String []) vector.toArray (new String [vector.size ()]);
}
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim, true);
    String previous = delim;
    Vector v = new Vector ();
    while (tokens.hasMoreTokens ()) {
        String token = tokens.nextToken ();
        if (! delim.equals (token)) {
            v.add (token);
        } else if (previous.equals (delim)) {
            v.add ("");
        }

        previous = token;
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589245_7_16
17588872_17589307_1_18
Title: Simulating String.split using StringTokenizer 
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim);
    String [] v = new String [tokens.countTokens ()];
    int i = 0;
    while (tokens.hasMoreTokens ()) {
        v [i] = tokens.nextToken ();
        i ++;
    }
    return v;
}
----------------------------------------

public static String [] split (String line, String delim) {
    Vector v = new Vector ();
    final String EMPTY_STRING = "";
    StringTokenizer st = new StringTokenizer (line, delim, true);
    while (st.hasMoreTokens ()) {
        String token = st.nextToken ();
        if (token.equals (delim)) {
            if (v.isEmpty () || v.size () > 0 && ! EMPTY_STRING.equals (v.get (v.size () - 1))) {
                v.add (EMPTY_STRING);
            }
        } else {
            v.add (token);
        }
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589245_7_16
17588872_17589445_1_19
Title: Simulating String.split using StringTokenizer 
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim);
    String [] v = new String [tokens.countTokens ()];
    int i = 0;
    while (tokens.hasMoreTokens ()) {
        v [i] = tokens.nextToken ();
        i ++;
    }
    return v;
}
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim, true);
    String previous = delim;
    Vector v = new Vector ();
    while (tokens.hasMoreTokens ()) {
        String token = tokens.nextToken ();
        if (! delim.equals (token)) {
            v.add (token);
        } else if (previous.equals (delim)) {
            v.add ("");
        }

        previous = token;
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17588872_17589307_1_18
17588872_17589445_1_19
Title: Simulating String.split using StringTokenizer 
----------------------------------------

public static String [] split (String line, String delim) {
    Vector v = new Vector ();
    final String EMPTY_STRING = "";
    StringTokenizer st = new StringTokenizer (line, delim, true);
    while (st.hasMoreTokens ()) {
        String token = st.nextToken ();
        if (token.equals (delim)) {
            if (v.isEmpty () || v.size () > 0 && ! EMPTY_STRING.equals (v.get (v.size () - 1))) {
                v.add (EMPTY_STRING);
            }
        } else {
            v.add (token);
        }
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------

private static String [] split (String delim, String line) {
    StringTokenizer tokens = new StringTokenizer (line, delim, true);
    String previous = delim;
    Vector v = new Vector ();
    while (tokens.hasMoreTokens ()) {
        String token = tokens.nextToken ();
        if (! delim.equals (token)) {
            v.add (token);
        } else if (previous.equals (delim)) {
            v.add ("");
        }

        previous = token;
    }
    return (String []) v.toArray (new String [v.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17599339_17599409_1_28
17599339_51281261_27_43
Title: Apache Http Digest Authentication using Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    HttpClient client = new HttpClient ();
    client.getState ().setCredentials (new AuthScope ("myhost", 80, "myrealm"), new UsernamePasswordCredentials ("username", "password"));
    List authPrefs = new ArrayList (3);
    authPrefs.add (AuthPolicy.BASIC);
    authPrefs.add (AuthPolicy.NTLM);
    authPrefs.add (AuthPolicy.DIGEST);
    client.getParams ().setParameter (AuthPolicy.AUTH_SCHEME_PRIORITY, authrefs);
    GetMethod httpget = new GetMethod ("http://myhost/protected/auth-required.html");
    try {
        int status = client.executeMethod (httpget);
        System.out.println (httpget.getStatusLine ());
        System.out.println (httpget.getResponseBodyAsString ());
    } finally {
        httpget.releaseConnection ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    setup ();
    if (target == null) {
        System.out.println ("Setup was unsuccesfull");
        return;
    }
    Header challengeHaeder = getAuthChallengeHaeder ();
    if (challengeHaeder == null) {
        System.out.println ("Setup was unsuccesfull");
        return;
    }
    getWithDigestAuth (challengeHaeder, "/", "/schema");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17602432_17620353_6_15
17602432_18005711_9_17
Title: Jersey and @FormParam not working when charset is specified in the Content-Type 
----------------------------------------

public void filter (ContainerRequestContext requestContext) throws IOException {
    MultivaluedMap < String, String > headers = requestContext.getHeaders ();
    List < String > contentTypes = headers.remove (HttpHeaders.CONTENT_TYPE);
    if (contentTypes != null && ! contentTypes.isEmpty ()) {
        String contentType = contentTypes.get (0);
        String sanitizedContentType = contentType.replaceFirst (";.*", "");
        headers.add (HttpHeaders.CONTENT_TYPE, sanitizedContentType);
    }
}
----------------------------------------

public void filter (ContainerRequestContext requestContext) throws IOException {
    MultivaluedMap < String, String > headers = requestContext.getHeaders ();
    List < String > contentTypes = headers.remove (HttpHeaders.CONTENT_TYPE);
    if (contentTypes != null && ! contentTypes.isEmpty ()) {
        String contentType = contentTypes.get (0);
        String sanitizedContentType = contentType.replaceFirst ("; charset=UTF-8", "");
        headers.add (HttpHeaders.CONTENT_TYPE, sanitizedContentType);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
176051_176068_1_21
176051_176157_1_22
Title: Java: Serializing beginner problem :-( 
----------------------------------------

public static Message [] getStoredMails () {
    try {
        ObjectInputStream in = new ObjectInputStream (new FileInputStream ("mail.ser"));
        Message [] array = (Message []) in.readObject ();
        System.out.println ("Size: " + array.length);
        in.close ();
        return array;
    } catch (IOException ex) {
        ex.printStackTrace ();
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace ();
    }
    return null;
}
----------------------------------------

public static Message [] getStoredMails () {
    try {
        ObjectInputStream in = new ObjectInputStream (new FileInputStream ("mail.ser"));
        Message [] array = (Message []) in.readObject ();
        System.out.println ("Size: " + array.length);
        in.close ();
        return array;
    } catch (IOException ex) {
        ex.printStackTrace ();
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17607974_17608074_49_63
17607974_17608943_2_13
Title: Determining the type of objects in a collection or array 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > listOfInt = new ArrayList < Integer > ();
    System.out.println (guessElementType (listOfInt));
    listOfInt.add (42);
    System.out.println (guessElementType (listOfInt));
    ArrayList < C1 > listOfC1 = new ArrayList < C1 > ();
    listOfC1.add (new C3A ());
    System.out.println (guessElementType (listOfC1));
    listOfC1.add (new C3B ());
    System.out.println (guessElementType (listOfC1));
    listOfC1.add (new C1 ());
    System.out.println (guessElementType (listOfC1));
}
----------------------------------------

public static void main (String [] args) {
    int arr [] [] = {{2, 3}, {4, 0}};
    char [] [] arr1 = {{'a', 'c'}, {'b', 'd'}};
    ArrayList < Integer > arr2 = new ArrayList < Integer > ();
    arr2.add (4);
    ArrayList < Point > arr3 = new ArrayList < Point > ();
    arr3.add (new Point ());
    System.out.println (arr.getClass ().getSimpleName ());
    System.out.println (arr1.getClass ().getSimpleName ());
    System.out.println (arr2.get (0).getClass ().getSimpleName ());
    System.out.println (arr3.get (0).getClass ().getSimpleName ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17621160_17622050_68_97
17621160_37227037_12_34
Title: How to delete a file through JFileChooser? 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    JFileChooser jf = (JFileChooser) ae.getSource ();
    try {
        selectedFiles = jf.getSelectedFiles ();
        if (selectedFiles != null) {
            if (askConfirm () == JOptionPane.YES_OPTION) {
                for (File f : selectedFiles) java.nio.file.Files.delete (f.toPath ());

                jf.rescanCurrentDirectory ();
            }
        }
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent actionEvent) {
    JFileChooser jFileChooser = (JFileChooser) actionEvent.getSource ();
    try {
        File selectedFile = jFileChooser.getSelectedFile ();
        if (selectedFile != null) {
            int selectedAnswer = JOptionPane.showConfirmDialog (null, "Are you sure want to permanently delete this file?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (selectedAnswer == JOptionPane.YES_OPTION) {
                Files.delete (selectedFile.toPath ());
                jFileChooser.rescanCurrentDirectory ();
            }
        }
    } catch (Exception exception) {
        exception.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_17624210_34_44
17623876_23817780_37_73
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    MyMatrix matrix = new MyMatrix ();
    Double [] [] result = multiplicar (matrix.A, matrix.B);
    for (int i = 0;
    i < 2; i ++) {
        for (int j = 0;
        j < 2; j ++) System.out.print (result [i] [j] + " ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] [] multiplicand = new double [] [] {{3, - 1, 2}, {2, 0, 1}, {1, 2, 1}};
    double [] [] multiplier = new double [] [] {{2, - 1, 1}, {0, - 2, 3}, {3, 0, 1}};
    System.out.println ("#1\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, 0}, {- 1, 3, 1}, {2, - 2, 1}};
    multiplier = new double [] [] {{2}, {- 1}, {1}};
    System.out.println ("#2\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, - 1}, {0, 1, 0}};
    multiplier = new double [] [] {{1, 1, 0, 0}, {0, 2, 1, 1}, {1, 1, 2, 2}};
    System.out.println ("#3\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_17624210_34_44
17623876_32272924_5_94
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    MyMatrix matrix = new MyMatrix ();
    Double [] [] result = multiplicar (matrix.A, matrix.B);
    for (int i = 0;
    i < 2; i ++) {
        for (int j = 0;
        j < 2; j ++) System.out.print (result [i] [j] + " ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, j, k;
    int [] [] a = new int [3] [3];
    int [] [] b = new int [3] [3];
    int [] [] c = new int [3] [3];
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter size of array a");
    int rowa = sc.nextInt ();
    int cola = sc.nextInt ();
    System.out.println ("Enter size of array b");
    int rowb = sc.nextInt ();
    int colb = sc.nextInt ();
    System.out.println ("Enter elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            a [i] [j] = sc.nextInt ();
        }
        System.out.println ();
    }
    System.out.println ("Enter elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            b [i] [j] = sc.nextInt ();
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            System.out.print (a [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (b [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            c [i] [j] = 0;
            for (k = 0; k < cola; ++ k) {
                c [i] [j] += a [i] [k] * b [k] [j];
            }
        }
    }
    System.out.println ("result of multiplication of array a and b is ");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (c [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_17624210_34_44
17623876_35987122_6_28
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    MyMatrix matrix = new MyMatrix ();
    Double [] [] result = multiplicar (matrix.A, matrix.B);
    for (int i = 0;
    i < 2; i ++) {
        for (int j = 0;
        j < 2; j ++) System.out.print (result [i] [j] + " ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] [] A = {{4.00, 3.00}, {2.00, 1.00}};
    double [] [] B = {{- 0.500, 1.500}, {1.000, - 2.0000}};
    double [] [] C = multMatrix (A, B);
    printMatrix (A);
    printMatrix (B);
    printMatrix (C);
    double a [] [] = {{1, 2, - 2, 0}, {- 3, 4, 7, 2}, {6, 0, 3, 1}};
    double b [] [] = {{- 1, 3}, {0, 9}, {1, - 11}, {4, - 5}};
    double [] [] c = multMatrix (a, b);
    printMatrix (a);
    printMatrix (b);
    printMatrix (c);
    double [] [] a1 = readMatrix ();
    double [] [] b1 = readMatrix ();
    double [] [] c1 = new double [a1.length] [b1 [0].length];
    mults (a1, b1, c1, a1.length, a1 [0].length, b1.length, b1 [0].length);
    printMatrix (c1);
    printMatrixE (c1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_17624210_5_32
17623876_17624415_1_19
Title: Matrix multiplication using arrays 
----------------------------------------

public static Double [] [] multiplicar (Double [] [] A, Double [] [] B) {
    int aRows = A.length;
    int aColumns = A [0].length;
    int bRows = B.length;
    int bColumns = B [0].length;
    if (aColumns != bRows) {
        throw new IllegalArgumentException ("A:Rows: " + aColumns + " did not match B:Columns " + bRows + ".");
    }
    Double [] [] C = new Double [aRows] [bColumns];
    for (int i = 0;
    i < aRows; i ++) {
        for (int j = 0;
        j < bColumns; j ++) {
            C [i] [j] = 0.00000;
        }
    }
    for (int i = 0;
    i < aRows; i ++) {
        for (int j = 0;
        j < bColumns; j ++) {
            for (int k = 0;
            k < aColumns; k ++) {
                C [i] [j] += A [i] [k] * B [k] [j];
            }
        }
    }
    return C;
}
----------------------------------------

public static Double [] [] multiplicar (Double A [] [], Double B [] []) {
    Double [] [] C = new Double [2] [2];
    int i, j, k;
    for (i = 0; i < 2; i ++) {
        for (j = 0; j < 2; j ++) {
            C [i] [j] = 0.00000;
        }
    }
    for (i = 0; i < 2; i ++) {
        for (j = 0; j < 2; j ++) {
            for (k = 0; k < 2; k ++) {
                C [i] [j] += (A [i] [k] * B [k] [j]);
            }
        }
    }
    return C;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_23817780_37_73
17623876_32272924_5_94
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    double [] [] multiplicand = new double [] [] {{3, - 1, 2}, {2, 0, 1}, {1, 2, 1}};
    double [] [] multiplier = new double [] [] {{2, - 1, 1}, {0, - 2, 3}, {3, 0, 1}};
    System.out.println ("#1\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, 0}, {- 1, 3, 1}, {2, - 2, 1}};
    multiplier = new double [] [] {{2}, {- 1}, {1}};
    System.out.println ("#2\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, - 1}, {0, 1, 0}};
    multiplier = new double [] [] {{1, 1, 0, 0}, {0, 2, 1, 1}, {1, 1, 2, 2}};
    System.out.println ("#3\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
}
----------------------------------------

public static void main (String [] args) {
    int i, j, k;
    int [] [] a = new int [3] [3];
    int [] [] b = new int [3] [3];
    int [] [] c = new int [3] [3];
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter size of array a");
    int rowa = sc.nextInt ();
    int cola = sc.nextInt ();
    System.out.println ("Enter size of array b");
    int rowb = sc.nextInt ();
    int colb = sc.nextInt ();
    System.out.println ("Enter elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            a [i] [j] = sc.nextInt ();
        }
        System.out.println ();
    }
    System.out.println ("Enter elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            b [i] [j] = sc.nextInt ();
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            System.out.print (a [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (b [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            c [i] [j] = 0;
            for (k = 0; k < cola; ++ k) {
                c [i] [j] += a [i] [k] * b [k] [j];
            }
        }
    }
    System.out.println ("result of multiplication of array a and b is ");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (c [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_23817780_37_73
17623876_35987122_6_28
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    double [] [] multiplicand = new double [] [] {{3, - 1, 2}, {2, 0, 1}, {1, 2, 1}};
    double [] [] multiplier = new double [] [] {{2, - 1, 1}, {0, - 2, 3}, {3, 0, 1}};
    System.out.println ("#1\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, 0}, {- 1, 3, 1}, {2, - 2, 1}};
    multiplier = new double [] [] {{2}, {- 1}, {1}};
    System.out.println ("#2\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
    multiplicand = new double [] [] {{1, 2, - 1}, {0, 1, 0}};
    multiplier = new double [] [] {{1, 1, 0, 0}, {0, 2, 1, 1}, {1, 1, 2, 2}};
    System.out.println ("#3\n" + toString (multiplyByMatrix (multiplicand, multiplier)));
}
----------------------------------------

public static void main (String [] args) {
    double [] [] A = {{4.00, 3.00}, {2.00, 1.00}};
    double [] [] B = {{- 0.500, 1.500}, {1.000, - 2.0000}};
    double [] [] C = multMatrix (A, B);
    printMatrix (A);
    printMatrix (B);
    printMatrix (C);
    double a [] [] = {{1, 2, - 2, 0}, {- 3, 4, 7, 2}, {6, 0, 3, 1}};
    double b [] [] = {{- 1, 3}, {0, 9}, {1, - 11}, {4, - 5}};
    double [] [] c = multMatrix (a, b);
    printMatrix (a);
    printMatrix (b);
    printMatrix (c);
    double [] [] a1 = readMatrix ();
    double [] [] b1 = readMatrix ();
    double [] [] c1 = new double [a1.length] [b1 [0].length];
    mults (a1, b1, c1, a1.length, a1 [0].length, b1.length, b1 [0].length);
    printMatrix (c1);
    printMatrixE (c1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17623876_32272924_5_94
17623876_35987122_6_28
Title: Matrix multiplication using arrays 
----------------------------------------

public static void main (String [] args) {
    int i, j, k;
    int [] [] a = new int [3] [3];
    int [] [] b = new int [3] [3];
    int [] [] c = new int [3] [3];
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter size of array a");
    int rowa = sc.nextInt ();
    int cola = sc.nextInt ();
    System.out.println ("Enter size of array b");
    int rowb = sc.nextInt ();
    int colb = sc.nextInt ();
    System.out.println ("Enter elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            a [i] [j] = sc.nextInt ();
        }
        System.out.println ();
    }
    System.out.println ("Enter elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            b [i] [j] = sc.nextInt ();
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array a");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < cola; ++ j) {
            System.out.print (a [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    System.out.println ("the elements of array b");
    for (i = 0; i < rowb; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (b [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            c [i] [j] = 0;
            for (k = 0; k < cola; ++ k) {
                c [i] [j] += a [i] [k] * b [k] [j];
            }
        }
    }
    System.out.println ("result of multiplication of array a and b is ");
    for (i = 0; i < rowa; ++ i) {
        for (j = 0; j < colb; ++ j) {
            System.out.print (c [i] [j]);
            System.out.print ("\t");
        }
        System.out.println ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    double [] [] A = {{4.00, 3.00}, {2.00, 1.00}};
    double [] [] B = {{- 0.500, 1.500}, {1.000, - 2.0000}};
    double [] [] C = multMatrix (A, B);
    printMatrix (A);
    printMatrix (B);
    printMatrix (C);
    double a [] [] = {{1, 2, - 2, 0}, {- 3, 4, 7, 2}, {6, 0, 3, 1}};
    double b [] [] = {{- 1, 3}, {0, 9}, {1, - 11}, {4, - 5}};
    double [] [] c = multMatrix (a, b);
    printMatrix (a);
    printMatrix (b);
    printMatrix (c);
    double [] [] a1 = readMatrix ();
    double [] [] b1 = readMatrix ();
    double [] [] c1 = new double [a1.length] [b1 [0].length];
    mults (a1, b1, c1, a1.length, a1 [0].length, b1.length, b1 [0].length);
    printMatrix (c1);
    printMatrixE (c1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17630727_26924441_7_34
17630727_39263178_3_17
Title: Counting repeated elements in an integer array 
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] arr = {1, 2, 3, 4, 5, 1, 2, 8};
    int [] result = new int [10];
    int counter = 0, count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        boolean isDistinct = false;
        for (int j = 0;
        j < i; j ++) {
            if (arr [i] == arr [j]) {
                isDistinct = true;
                break;
            }
        }
        if (! isDistinct) {
            result [counter ++] = arr [i];
        }
    }
    for (int i = 0;
    i < counter; i ++) {
        count = 0;
        for (int j = 0;
        j < arr.length; j ++) {
            if (result [i] == arr [j]) {
                count ++;
            }
        }
        System.out.println (result [i] + " = " + count);
    }
}
----------------------------------------

public static void main (String [] args) {
    int num [] = {1, 3, 2, 4, 1, 2, 4, 6, 7, 5};
    Arrays.sort (num);
    for (int j = 1;
    j < num.length; j ++) {
        if (num [j] == num [j - 1]) {
            System.out.println (num [j]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17630727_26924441_7_34
17630727_45055700_7_22
Title: Counting repeated elements in an integer array 
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] arr = {1, 2, 3, 4, 5, 1, 2, 8};
    int [] result = new int [10];
    int counter = 0, count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        boolean isDistinct = false;
        for (int j = 0;
        j < i; j ++) {
            if (arr [i] == arr [j]) {
                isDistinct = true;
                break;
            }
        }
        if (! isDistinct) {
            result [counter ++] = arr [i];
        }
    }
    for (int i = 0;
    i < counter; i ++) {
        count = 0;
        for (int j = 0;
        j < arr.length; j ++) {
            if (result [i] == arr [j]) {
                count ++;
            }
        }
        System.out.println (result [i] + " = " + count);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter array size: ");
    int size = input.nextInt ();
    int [] array = new int [size];
    System.out.println ("Enter array elements: ");
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = input.nextInt ();
    }
    Sim s = new Sim ();
    s.find (array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17630727_39263178_3_17
17630727_45055700_7_22
Title: Counting repeated elements in an integer array 
----------------------------------------

public static void main (String [] args) {
    int num [] = {1, 3, 2, 4, 1, 2, 4, 6, 7, 5};
    Arrays.sort (num);
    for (int j = 1;
    j < num.length; j ++) {
        if (num [j] == num [j - 1]) {
            System.out.println (num [j]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter array size: ");
    int size = input.nextInt ();
    int [] array = new int [size];
    System.out.println ("Enter array elements: ");
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = input.nextInt ();
    }
    Sim s = new Sim ();
    s.find (array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17631358_17631426_1_11
17631358_17631618_1_14
Title: "If I have an array of dates how do I parse the months from each of those dates?" 
----------------------------------------

public int [] getMonth () {
    String [] date = getDate ();
    DateTimeFormatter df = DateTimeFormat.forPattern ("MM.dd.yy hh:mm");
    DateTime result [] = new DateTime [date.length];
    int i = 0;
    for (Date d : date) {
        result [i] = df.parse (d).month ().getAsText ();
        i ++;
    }
    return result;
}
----------------------------------------

public int [] getMonth () throws ParseException {
    String [] date = getDate ();
    int [] month = new int [date.length];
    DateFormat df = new SimpleDateFormat ("MM.dd.yy hh:mm");
    Date [] result = new Date [date.length];
    for (int i = 0;
    i < date.length; i ++) {
        Calendar cal = Calendar.getInstance ();
        result [i] = df.parse (date [i]);
        cal.setTime (result [i]);
        month [i] = cal.get (Calendar.MONTH);
    }
    return month;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17635869_17636224_170_184
17635869_17636224_232_258
Title: Selected Cell in a JTable Does Not Refresh 
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    if (value instanceof Integer) {
        int progress = (int) value;
        System.out.println ("cellProgress = " + progress);
        setValue (progress);
    }
    if (isSelected) {
        setBackground (table.getSelectionBackground ());
        setOpaque (true);
    } else {
        setBackground (table.getBackground ());
        setOpaque (false);
    }
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    removeAll ();
    if (value instanceof Task) {
        Task task = (Task) value;
        if (task.isDone ()) {
            try {
                label.setText (task.get ());
            } catch (Exception ex) {
                label.setText (ex.getMessage ());
            }
            add (label);
        } else if (task.isRunning ()) {
            label.setText ("Working");
            add (label);
        } else {
            add (start);
        }

    }
    if (isSelected) {
        setBackground (table.getSelectionBackground ());
        setOpaque (true);
    } else {
        setBackground (table.getBackground ());
        setOpaque (false);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17640754_23529010_1_34
17640754_32342172_1_17
Title: Zipping streams using JDK8 with lambda (java.util.stream.Streams.zip) 
----------------------------------------

public static < A, B, C > Stream < C > zip (Stream < ? extends A > a, Stream < ? extends B > b, BiFunction < ? super A, ? super B, ? extends C > zipper) {
    Objects.requireNonNull (zipper);
    Spliterator < ? extends A > aSpliterator = Objects.requireNonNull (a).spliterator ();
    Spliterator < ? extends B > bSpliterator = Objects.requireNonNull (b).spliterator ();
    int characteristics = aSpliterator.characteristics () & bSpliterator.characteristics () & ~ (Spliterator.DISTINCT | Spliterator.SORTED);
    long zipSize = ((characteristics & Spliterator.SIZED) != 0) ? Math.min (aSpliterator.getExactSizeIfKnown (), bSpliterator.getExactSizeIfKnown ()) : - 1;
    Iterator < A > aIterator = Spliterators.iterator (aSpliterator);
    Iterator < B > bIterator = Spliterators.iterator (bSpliterator);
    Iterator < C > cIterator = new Iterator < C > () {
        @Override
        public boolean hasNext () {
            return aIterator.hasNext () && bIterator.hasNext ();
        }@Override
        public C next () {
            return zipper.apply (aIterator.next (), bIterator.next ());
        }}

    ;
    Spliterator < C > split = Spliterators.spliterator (cIterator, zipSize, characteristics);
    return (a.isParallel () || b.isParallel ()) ? StreamSupport.stream (split, true) : StreamSupport.stream (split, false);
}
----------------------------------------

public static < A, B, C > Stream < C > zip (Stream < A > streamA, Stream < B > streamB, BiFunction < A, B, C > zipper) {
    final Iterator < A > iteratorA = streamA.iterator ();
    final Iterator < B > iteratorB = streamB.iterator ();
    final Iterator < C > iteratorC = new Iterator < C > () {
        @Override
        public boolean hasNext () {
            return iteratorA.hasNext () && iteratorB.hasNext ();
        }@Override
        public C next () {
            return zipper.apply (iteratorA.next (), iteratorB.next ());
        }}

    ;
    final boolean parallel = streamA.isParallel () || streamB.isParallel ();
    return iteratorToFiniteStream (iteratorC, parallel);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17640754_23529010_1_34
17640754_46230233_1_10
Title: Zipping streams using JDK8 with lambda (java.util.stream.Streams.zip) 
----------------------------------------

public static < A, B, C > Stream < C > zip (Stream < ? extends A > a, Stream < ? extends B > b, BiFunction < ? super A, ? super B, ? extends C > zipper) {
    Objects.requireNonNull (zipper);
    Spliterator < ? extends A > aSpliterator = Objects.requireNonNull (a).spliterator ();
    Spliterator < ? extends B > bSpliterator = Objects.requireNonNull (b).spliterator ();
    int characteristics = aSpliterator.characteristics () & bSpliterator.characteristics () & ~ (Spliterator.DISTINCT | Spliterator.SORTED);
    long zipSize = ((characteristics & Spliterator.SIZED) != 0) ? Math.min (aSpliterator.getExactSizeIfKnown (), bSpliterator.getExactSizeIfKnown ()) : - 1;
    Iterator < A > aIterator = Spliterators.iterator (aSpliterator);
    Iterator < B > bIterator = Spliterators.iterator (bSpliterator);
    Iterator < C > cIterator = new Iterator < C > () {
        @Override
        public boolean hasNext () {
            return aIterator.hasNext () && bIterator.hasNext ();
        }@Override
        public C next () {
            return zipper.apply (aIterator.next (), bIterator.next ());
        }}

    ;
    Spliterator < C > split = Spliterators.spliterator (cIterator, zipSize, characteristics);
    return (a.isParallel () || b.isParallel ()) ? StreamSupport.stream (split, true) : StreamSupport.stream (split, false);
}
----------------------------------------

public static < L, R, T > Stream < T > zip (Stream < L > leftStream, Stream < R > rightStream, BiFunction < L, R, T > combiner) {
    Spliterator < L > lefts = leftStream.spliterator ();
    Spliterator < R > rights = rightStream.spliterator ();
    return StreamSupport.stream (new AbstractSpliterator < T > (Long.min (lefts.estimateSize (), rights.estimateSize ()), lefts.characteristics () & rights.characteristics ()) {
        @Override
        public boolean tryAdvance (Consumer < ? super T > action) {
            return lefts.tryAdvance (left -> rights.tryAdvance (right -> action.accept (combiner.apply (left, right))));
        }}

    , leftStream.isParallel () || rightStream.isParallel ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17640754_32342172_1_17
17640754_46230233_1_10
Title: Zipping streams using JDK8 with lambda (java.util.stream.Streams.zip) 
----------------------------------------

public static < A, B, C > Stream < C > zip (Stream < A > streamA, Stream < B > streamB, BiFunction < A, B, C > zipper) {
    final Iterator < A > iteratorA = streamA.iterator ();
    final Iterator < B > iteratorB = streamB.iterator ();
    final Iterator < C > iteratorC = new Iterator < C > () {
        @Override
        public boolean hasNext () {
            return iteratorA.hasNext () && iteratorB.hasNext ();
        }@Override
        public C next () {
            return zipper.apply (iteratorA.next (), iteratorB.next ());
        }}

    ;
    final boolean parallel = streamA.isParallel () || streamB.isParallel ();
    return iteratorToFiniteStream (iteratorC, parallel);
}
----------------------------------------

public static < L, R, T > Stream < T > zip (Stream < L > leftStream, Stream < R > rightStream, BiFunction < L, R, T > combiner) {
    Spliterator < L > lefts = leftStream.spliterator ();
    Spliterator < R > rights = rightStream.spliterator ();
    return StreamSupport.stream (new AbstractSpliterator < T > (Long.min (lefts.estimateSize (), rights.estimateSize ()), lefts.characteristics () & rights.characteristics ()) {
        @Override
        public boolean tryAdvance (Consumer < ? super T > action) {
            return lefts.tryAdvance (left -> rights.tryAdvance (right -> action.accept (combiner.apply (left, right))));
        }}

    , leftStream.isParallel () || rightStream.isParallel ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17642512_17642560_1_18
17642512_17642617_3_15
Title: Remove array duplicates 
----------------------------------------

public static char [] removeDups (char [] str) {
    boolean bin_hash [] = new boolean [256];
    int ip_ind = 0, res_ind = 0;
    char temp;
    char a [] = new char [str.length];
    while (ip_ind < str.length) {
        temp = str [ip_ind];
        if (bin_hash [temp] == false) {
            bin_hash [temp] = true;
            a [res_ind] = str [ip_ind];
            res_ind ++;
        }
        ip_ind ++;
    }
    return a;
}
----------------------------------------

public static String removeDups (CharSequence str) {
    StringBuilder b = new StringBuilder (str);
    HashSet < Character > s = new HashSet < Character > ();
    for (int idx = 0;
    idx < b.size (); idx ++) if (mySet.contains (b.charAt (idx))) b.deleteCharAt (idx --);
    else s.add (ch);

    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17642512_17642566_3_20
17642512_17642617_3_15
Title: Remove array duplicates 
----------------------------------------

public static char [] removeDups (char [] str) {
    char result [] = new char [str.length];
    boolean bin_hash [] = new boolean [256];
    int ip_ind = 0, res_ind = 0;
    char temp;
    while (ip_ind < str.length) {
        temp = str [ip_ind];
        if (bin_hash [temp] == false) {
            bin_hash [temp] = true;
            result [res_ind] = str [ip_ind];
            res_ind ++;
        }
        ip_ind ++;
    }
    return result;
}
----------------------------------------

public static String removeDups (CharSequence str) {
    StringBuilder b = new StringBuilder (str);
    HashSet < Character > s = new HashSet < Character > ();
    for (int idx = 0;
    idx < b.size (); idx ++) if (mySet.contains (b.charAt (idx))) b.deleteCharAt (idx --);
    else s.add (ch);

    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17654476_17655017_61_71
17654476_17655017_75_83
Title: Get DefaultTableModel from JTable 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (table.getColumnCount () > 0) {
        TableColumn colToDelete = table.getColumnModel ().getColumn (table.getColumnCount () - 1);
        table.removeColumn (colToDelete);
        table.validate ();
        colDeleted.push (colToDelete);
        addButton.setEnabled (true);
    } else {
        deleteButton.setEnabled (false);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (colDeleted.size () > 0) {
        table.addColumn (colDeleted.pop ());
        table.validate ();
        deleteButton.setEnabled (true);
    } else {
        addButton.setEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17654635_17654908_1_26
17654635_17673621_5_38
Title: Why don't I see the output of the following program when I run it in Netbeans? 
----------------------------------------

public static void main (String [] args) {
    Class myClass2 = null;
    try {
        myClass2 = Class.forName ("Book");
    } catch (ClassNotFoundException e) {
        System.out.println ("Error: " + e);
    }
    if (myClass2 != null) {
        try {
            Book book1 = (Book) myClass2.newInstance ();
            book1.setAuthor ("Khan");
            System.out.println (book1.getAuthor ());
            book1.setTitle ("Second Book");
            book1.setIsbn ("kh_s_b");
            book1.printBookDetails ();
        } catch (IllegalAccessException e1) {
            System.out.println ("Error1 " + e1);
        } catch (InstantiationException e2) {
            System.out.println ("Error2 " + e2);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Class myClass2 = null;
    try {
        myClass2 = Class.forName ("java7thirdeditionpart1.Book");
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    }
    if (myClass2 != null) {
        try {
            Book book1 = (Book) myClass2.newInstance ();
            book1.setAuthor ("Khan");
            book1.setTitle ("Second Book");
            book1.setIsbn ("kh_s_b");
            book1.printBookDetails ();
            book1 = (Book) myClass2.newInstance ();
            book1.setAuthor ("Ajmal");
            book1.setTitle ("First Book");
            book1.setIsbn ("aj_f_b");
            book1.printBookDetails ();
        } catch (IllegalAccessException e1) {
            e1.printStackTrace ();
        } catch (InstantiationException e2) {
            e2.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17664427_17664730_1_11
17664427_17665114_1_12
Title: Very specific Java generics issue - how to return the same type that was passed into a method? 
----------------------------------------

public static List < ? extends Entity > getEntities (Class < ? extends Entity > t) {
    ArrayList < Entity > list = new ArrayList < Entity > ();
    for (Entity e : entities) {
        if (e.getClass () == t) {
            list.add (e);
        }
    }
    return Collections.unmodifiableList (list);
}
----------------------------------------

public < E extends Entity > List < E > getEntities (Class < E > type) {
    List < E > list = new ArrayList < > ();
    for (Entity e : entities) {
        if (type.isInstance (e)) {
            list.add (type.cast (e));
        }
    }
    return Collections.unmodifiableList (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17672147_17672251_35_45
17672147_17737561_15_26
Title: Java Generics Inferred Types 
----------------------------------------

public < B > Monad < State < S, ? >, B > bind (final Function < ? super A, Monad < State < S, ? >, B > > p_function) {
    return new State < S, B > (new Function < S, Pair < S, B > > () {
        public Pair < S, B > apply (S state) {
            Pair < S, A > run = run (state);
            State < S, B > applied = (State < S, B >) p_function.apply (run.second ());
            return applied.run (run.first ());
        }}

    );
}
----------------------------------------

public < B > Monad < State < S, ? >, B > bind (final Function < ? super A, ? extends Monad < State < S, ? >, B > > p_function) {
    return new State < S, B > (new Function < S, Pair < S, B > > () {
        public Pair < S, B > apply (S state) {
            Pair < S, A > run = run (state);
            State < S, B > applied = (State < S, B >) p_function.apply (run.second ());
            return applied.run (run.first ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17672147_17672251_3_14
17672147_17737561_28_39
Title: Java Generics Inferred Types 
----------------------------------------

public static < A, B, C, M > Function < A, Monad < M, C > > compose (final Function < ? super A, Monad < M, B > > p_first, final Function < ? super B, Monad < M, C > > p_second) {
    return new Function < A, Monad < M, C > > () {
        @Override
        public Monad < M, C > apply (A arg) {
            Monad < M, B > monadOfB = p_first.apply (arg);
            return monadOfB.bind (p_second);
        }}

    ;
}
----------------------------------------

public static < A, B, C, M > Function < A, Monad < M, C > > compose (final Function < ? super A, ? extends Monad < M, B > > p_first, final Function < ? super B, ? extends Monad < M, C > > p_second) {
    return new Function < A, Monad < M, C > > () {
        @Override
        public Monad < M, C > apply (A arg) {
            Monad < M, B > monadOfB = p_first.apply (arg);
            return monadOfB.< C > bind (p_second);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17691162_17691245_5_17
17691162_17691280_4_17
Title: How to Read Strings from Scanner in console Application JAVA? 
----------------------------------------

public static void main (String args []) {
    Scanner scanner = new Scanner (System.in);
    int eid, sid;
    String ename;
    System.out.println ("Enter Employeeid:");
    eid = scanner.nextInt ();
    scanner.nextLine ();
    System.out.println ("Enter EmployeeName:");
    ename = scanner.nextLine ();
    System.out.println ("Enter SupervisiorId:");
    sid = (scanner.nextInt ());
}
----------------------------------------

public static void main (String args []) {
    Scanner scanner = new Scanner (System.in);
    int eid, sid;
    String ename;
    System.out.println ("Enter Employeeid:");
    eid = (scanner.nextInt ());
    System.out.println ("Enter EmployeeName:");
    ename = (scanner.next ());
    System.out.println ("Enter SupervisiorId:");
    if (scanner.nextLine () != null && scanner.nextLine () != "") {
        sid = scanner.nextInt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17738583_17738684_1_12
17738583_17738853_1_11
Title: Splitting a string into integer values using split 
----------------------------------------

public GradeApplication (String nme, int ID, String hw, String lbs, String tsts, double proj, double disc) {
    name = nme;
    id = ID;
    homework = hw;
    labs = lbs;
    tests = tsts;
    project = proj;
    discussion = disc;
}
----------------------------------------

public GradeApplication (String nme, int ID, String hw, String lbs, String tsts, double proj, double disc) {
    name = nme;
    id = ID;
    homework = hw;
    labs = lbs;
    tests = tsts;
    project = proj;
    discussion = disc;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17738624_17738672_1_21
17738624_17738927_5_27
Title: Validating User Input For a Continuing an Application 
----------------------------------------

public static String getValidContinueCode (Scanner sc, String prompt) {
    String choice = "";
    boolean isValid = false;
    while (! isValid) {
        System.out.print (prompt);
        choice = sc.next ();
        if (choice.equalsIgnoreCase ("y")) {
            isValid = true;
        } else if (choice.equalsIgnoreCase ("n")) {
            isValid = true;
        } else {
            System.out.println ("Please enter y or n");
        }

    }
    return choice;
}
----------------------------------------

public static void getValidContinueCode (Scanner sc, String code) {
    code = "enter a letter";
    boolean status = true;
    while (status) {
        System.out.println (code);
        String check = sc.next ();
        if (check.equalsIgnoreCase ("y")) {
            sc = new Scanner (System.in);
            code = "ok";
            status = true;
        } else if (check.equalsIgnoreCase ("n")) {
            sc = new Scanner (System.in);
            code = "exit";
            System.out.println ("exit");
            status = false;
        } else {
            code = "retry";
            status = true;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17745981_17747788_37_69
17745981_17747788_75_88
Title: Removing the selected image in java 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    JFileChooser chooser = new JFileChooser ();
    chooser.setMultiSelectionEnabled (true);
    chooser.addChoosableFileFilter (new FileNameExtensionFilter ("Images", "jpg", "png", "gif", "bmp"));
    chooser.setAcceptAllFileFilterUsed (false);
    chooser.setCurrentDirectory (new File (System.getProperty ("user.home")));
    int option = chooser.showOpenDialog (ImageCreation.this);
    if (option == JFileChooser.APPROVE_OPTION) {
        filename = chooser.getSelectedFile ().toString ();
        try {
            img = ImageIO.read (new File (filename));
            imgLbl = new JLabel ();
            imgLbl.setIcon (new ImageIcon (img));
            imgLbl.setBounds (150, 50, img.getWidth (), img.getHeight ());
            add (imgLbl);
            imgLbl.addMouseListener (new MouseAdapter () {
                @Override
                public void mouseClicked (MouseEvent e) {
                    if (e.getComponent () instanceof JLabel) lastFocused = (JLabel) e.getComponent ();

                }}

            );
            imgLbl.repaint ();
        } catch (IOException e) {
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (lastFocused == null) JOptionPane.showMessageDialog (null, "You Must Select an Label to remove it");

    if (lastFocused != null) {
        Container scollPane = lastFocused;
        System.out.println (scollPane);
        Container parent = scollPane.getParent ();
        System.out.println (parent);
        parent.remove (scollPane);
    }
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17771542_17771567_33_42
17771542_17771567_51_59
Title: java sending keystrokes using robot class 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17771542_17771567_33_42
17771542_17771567_74_84
Title: java sending keystrokes using robot class 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17771542_17771567_51_59
17771542_17771567_74_84
Title: java sending keystrokes using robot class 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17778323_17778343_4_29
17778323_17778378_1_16
Title: Adding the first ten odd numbers - incorrect output 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int i = 0;
    int sum = 0;
    int input;
    int inputCount = 0;
    while (i < 10) {
        System.out.println ("New number?");
        input = scan.nextInt ();
        inputCount ++;
        if (input % 2 == 1) {
            sum += input;
            i ++;
        }
    }
    System.out.println ("sum: " + sum);
    System.out.println ("Number of odds:" + i);
    System.out.println ("Numbe of inputs: " + inputCount);
    System.out.println ("Average cos I miss typing sout tab:" + (inputCount / sum));
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    int odd, sum = 0;
    System.out.println ("enter numbers");
    int i = 0;
    while (i < 10) {
        odd = keyboard.nextInt ();
        if (odd % 2 != 0) {
            sum = sum + odd;
            i ++;
        }
    }
    System.out.println ("The sum of first 10 odd numbers is " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17781509_17781586_1_13
17781509_17781622_1_10
Title: null pointer exception in string array with assigning null during initialization 
----------------------------------------

public static void main (String str []) {
    String str1 = "This is my first page";
    StringTokenizer str2 = new StringTokenizer (str1);
    int i = 0;
    List < String > d = new ArrayList < String > ();
    while (str2.hasMoreTokens ()) {
        d.add (str2.nextToken ());
    }
    System.out.println (d);
}
----------------------------------------

public static void main (String str []) {
    String str1 = "This is my first page";
    StringTokenizer str2 = new StringTokenizer (str1);
    int i = 0;
    String d [] = new String [str2.countTokens ()];
    while (str2.hasMoreTokens ()) {
        d [i] = str2.nextToken ();
        System.out.println (d [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17783523_17798590_5_15
17783523_17846565_4_25
Title: Deserialize List to unmodifiable collection with gson 
----------------------------------------

public < T > TypeAdapter < T > create (Gson gson, TypeToken < T > typeToken) {
    Type type = typeToken.getType ();
    if (typeToken.getRawType () != List.class || ! (type instanceof ParameterizedType)) {
        return null;
    }
    Type elementType = ((ParameterizedType) type).getActualTypeArguments () [0];
    TypeAdapter < ? > elementAdapter = gson.getAdapter (TypeToken.get (elementType));
    return new UnmodifiableListTypeAdapter (elementAdapter);
}
----------------------------------------

public < T > TypeAdapter < T > create (final Gson gson, final TypeToken < T > tokenType) {
    final TypeAdapter < T > delegate = gson.getDelegateAdapter (this, tokenType);
    return new TypeAdapter < T > () {
        @Override
        public void write (JsonWriter out, T value) throws IOException {
            delegate.write (out, value);
        }@Override
        public T read (JsonReader arg0) throws IOException {
            T t = delegate.read (arg0);
            if (List.class.isAssignableFrom (tokenType.getRawType ())) {
                List < ? > list = (List < ? >) t;
                return (T) Collections.unmodifiableList (list);
            }
            return t;
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17783525_17783668_1_14
17783525_17784005_65_79
Title: triple buffer heavy flickering 
----------------------------------------

public void draw () {
    BufferStrategy bs = getBufferStrategy ();
    if (bs == null) {
        createBufferStrategy (3);
        return;
    }
    Graphics g = bs.getDrawGraphics ();
    g.drawImage (image, 0, 0, getWidth (), getHeight (), null);
    g.fillOval (20, 20, 20, 20);
    g.dispose ();
    bs.show ();
}
----------------------------------------

public void draw () {
    BufferStrategy bs = getBufferStrategy ();
    if (bs == null) {
        createBufferStrategy (3);
        return;
    }
    Graphics g = bs.getDrawGraphics ();
    g.setColor (Color.RED);
    g.fillRect (0, 0, getWidth (), getHeight ());
    g.setColor (Color.BLACK);
    g.fillOval (x, y, 20, 20);
    g.dispose ();
    bs.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17786258_17786796_1_21
17786258_17787916_1_13
Title: Date output issue 
----------------------------------------

public static void main (String [] args) {
    Date now = new Date ();
    DateFormat currentDate = DateFormat.getDateInstance ();
    int count1 = 10;
    int count2 = 15;
    Calendar c = Calendar.getInstance ();
    c.setTime (now);
    c.add (Calendar.DATE, count1);
    Date addedDate1 = c.getTime ();
    c.setTime (addedDate1);
    c.add (Calendar.DATE, count2);
    Date addedDate2 = c.getTime ();
    System.out.println (currentDate.format (addedDate1));
    System.out.println (currentDate.format (addedDate2));
}
----------------------------------------

public static void main (String [] args) {
    DateTime now = new DateTime ();
    DateTimeFormatter fmt = ISODateTimeFormat.dateTime ();
    int count1 = 10;
    int count2 = 15;
    DateTime addedDate1 = now.plusDays (count1);
    DateTime addedDate2 = addedDate1.plusDays (count2);
    System.out.println (fmt.print (addedDate1));
    System.out.println (fmt.print (addedDate2));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17791543_17791640_34_44
17791543_17807043_5_15
Title: xml annotation which can stop an attribute to being converted into an xml string 
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Customer.class);
    Unmarshaller unmarshaller = jc.createUnmarshaller ();
    File xml = new File ("input.xml");
    Customer customer = (Customer) unmarshaller.unmarshal (xml);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.marshal (customer, System.out);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Root.class);
    Root root = new Root ();
    root.setFoo ("FOO");
    root.setBar ("BAR");
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.marshal (root, System.out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17805145_19244704_11_20
17805145_19244704_41_60
Title: ios slider data to java server using tcp socket 
----------------------------------------

public void run () {
    try {
        ServerSocket server = new ServerSocket (9876);
        while (true) {
            new SocketConnection (server.accept ()).start ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        byte array [] = new byte [1024];
        while (true) {
            do {
                int readed = input.read (array);
                System.out.println ("readed == " + readed + " " + new String (array).trim ());
                String sendString = new String ("Hello Ukraine!".getBytes (), Charset.forName ("UTF-8"));
                output.write (sendString);
                output.flush ();
            } while (input.available () != 0);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17853541_17853621_1_15
17853541_17853765_1_12
Title: Java - how to convert a XML string into an XML file? 
----------------------------------------

public static void stringToDom (String xmlSource) throws SAXException, ParserConfigurationException, IOException {
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder builder = factory.newDocumentBuilder ();
    Document doc = builder.parse (new InputSource (new StringReader (xmlSource)));
    TransformerFactory transformerFactory = TransformerFactory.newInstance ();
    Transformer transformer = transformerFactory.newTransformer ();
    DOMSource source = new DOMSource (doc);
    StreamResult result = new StreamResult (new File ("my-file.xml"));
    transformer.transform (source, result);
}
----------------------------------------

public static void stringToDom (String xmlSource) throws SAXException, ParserConfigurationException, IOException, TransformerException {
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder builder = factory.newDocumentBuilder ();
    Document doc = builder.parse (new InputSource (new StringReader (xmlSource)));
    TransformerFactory tFactory = TransformerFactory.newInstance ();
    Transformer transformer = tFactory.newTransformer ();
    DOMSource source = new DOMSource (doc);
    StreamResult result = new StreamResult (new File ("c:/temp/test.xml"));
    transformer.transform (source, result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17854528_17854563_1_10
17854528_32033927_1_11
Title: ActionBar up button transition effect 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    if (item.getItemId () == android.R.id.home) {
        finish ();
        overridePendingTransition (R.animator.anim_left, R.animator.anim_right);
        return true;
    }
    return false;
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case android.R.id.home :
            onBackPressed ();
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_21_31
17856844_17857314_25_39
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void b () {
    System.out.println ("B: I am  going to sleep. A, please wake me up.");
    notifyAll ();
    try {
        wait ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("B: Thank you A for waking me up!");
}
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("B: I am  going to sleep. A, please wake me up.");
            synchronized (MyClass.this) {
                System.out.println ("B: Thank you A for waking me up!");
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_21_31
17856844_17857315_30_56
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void b () {
    System.out.println ("B: I am  going to sleep. A, please wake me up.");
    notifyAll ();
    try {
        wait ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("B: Thank you A for waking me up!");
}
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            synchronized (MyClass.this) {
                System.out.println ("B: I am  going to sleep. A, please wake me up.");
                try {
                    MyClass.this.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
                System.out.println ("B: Thank you A for waking me up!");
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_21_31
17856844_18014147_28_39
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void b () {
    System.out.println ("B: I am  going to sleep. A, please wake me up.");
    notifyAll ();
    try {
        wait ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("B: Thank you A for waking me up!");
}
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println ("B: I am  going to sleep. A, please wake me up.");
            try {
                latch.await ();
            } catch (InterruptedException e) {
            }
            System.out.println ("B: Thank you A for waking me up!");
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_7_19
17856844_17857314_1_23
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void a () {
    System.out.println ("A: I am going to sleep");
    try {
        Thread.sleep (5000);
        wait ();
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        notifyAll ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("A: I am going to sleep");
            synchronized (MyClass.this) {
                try {
                    Thread.sleep (1000);
                    System.out.println ("A: I slept one full day. Feels great.");
                    System.out.println ("A: Hey B, wake up!");
                    MyClass.this.notifyAll ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_7_19
17856844_17857315_1_28
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void a () {
    System.out.println ("A: I am going to sleep");
    try {
        Thread.sleep (5000);
        wait ();
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        notifyAll ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                System.out.println ("A: I am going to sleep");
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            synchronized (MyClass.this) {
                System.out.println ("A: I slept one full day. Feels great.");
                System.out.println ("A: Hey B, wake up!");
                MyClass.this.notifyAll ();
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857211_7_19
17856844_18014147_11_26
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void a () {
    System.out.println ("A: I am going to sleep");
    try {
        Thread.sleep (5000);
        wait ();
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        notifyAll ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println ("A: I am going to sleep");
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            latch.countDown ();
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_1_23
17856844_17857315_1_28
Title: Notify threads running in different objects 
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("A: I am going to sleep");
            synchronized (MyClass.this) {
                try {
                    Thread.sleep (1000);
                    System.out.println ("A: I slept one full day. Feels great.");
                    System.out.println ("A: Hey B, wake up!");
                    MyClass.this.notifyAll ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }}

    ).start ();
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                System.out.println ("A: I am going to sleep");
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            synchronized (MyClass.this) {
                System.out.println ("A: I slept one full day. Feels great.");
                System.out.println ("A: Hey B, wake up!");
                MyClass.this.notifyAll ();
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_1_23
17856844_18014147_11_26
Title: Notify threads running in different objects 
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("A: I am going to sleep");
            synchronized (MyClass.this) {
                try {
                    Thread.sleep (1000);
                    System.out.println ("A: I slept one full day. Feels great.");
                    System.out.println ("A: Hey B, wake up!");
                    MyClass.this.notifyAll ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }}

    ).start ();
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println ("A: I am going to sleep");
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            latch.countDown ();
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_25_39
17856844_17857315_30_56
Title: Notify threads running in different objects 
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("B: I am  going to sleep. A, please wake me up.");
            synchronized (MyClass.this) {
                System.out.println ("B: Thank you A for waking me up!");
            }
        }}

    ).start ();
}
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            synchronized (MyClass.this) {
                System.out.println ("B: I am  going to sleep. A, please wake me up.");
                try {
                    MyClass.this.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
                System.out.println ("B: Thank you A for waking me up!");
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_25_39
17856844_18014147_28_39
Title: Notify threads running in different objects 
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public synchronized void run () {
            System.out.println ("B: I am  going to sleep. A, please wake me up.");
            synchronized (MyClass.this) {
                System.out.println ("B: Thank you A for waking me up!");
            }
        }}

    ).start ();
}
----------------------------------------

public void b () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println ("B: I am  going to sleep. A, please wake me up.");
            try {
                latch.await ();
            } catch (InterruptedException e) {
            }
            System.out.println ("B: Thank you A for waking me up!");
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_5_19
17856844_17857315_36_53
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void run () {
    System.out.println ("A: I am going to sleep");
    synchronized (MyClass.this) {
        try {
            Thread.sleep (1000);
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            MyClass.this.notifyAll ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    synchronized (MyClass.this) {
        System.out.println ("B: I am  going to sleep. A, please wake me up.");
        try {
            MyClass.this.wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        System.out.println ("B: Thank you A for waking me up!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_5_19
17856844_17857315_7_25
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void run () {
    System.out.println ("A: I am going to sleep");
    synchronized (MyClass.this) {
        try {
            Thread.sleep (1000);
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            MyClass.this.notifyAll ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("A: I am going to sleep");
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    synchronized (MyClass.this) {
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        MyClass.this.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857314_5_19
17856844_18014147_14_24
Title: Notify threads running in different objects 
----------------------------------------

public synchronized void run () {
    System.out.println ("A: I am going to sleep");
    synchronized (MyClass.this) {
        try {
            Thread.sleep (1000);
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            MyClass.this.notifyAll ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    System.out.println ("A: I am going to sleep");
    System.out.println ("A: I slept one full day. Feels great.");
    System.out.println ("A: Hey B, wake up!");
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    latch.countDown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857315_1_28
17856844_18014147_11_26
Title: Notify threads running in different objects 
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                System.out.println ("A: I am going to sleep");
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            synchronized (MyClass.this) {
                System.out.println ("A: I slept one full day. Feels great.");
                System.out.println ("A: Hey B, wake up!");
                MyClass.this.notifyAll ();
            }
        }}

    ).start ();
}
----------------------------------------

public void a () {
    new Thread (new Runnable () {
        @Override
        public void run () {
            System.out.println ("A: I am going to sleep");
            System.out.println ("A: I slept one full day. Feels great.");
            System.out.println ("A: Hey B, wake up!");
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            latch.countDown ();
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857315_36_53
17856844_17857315_7_25
Title: Notify threads running in different objects 
----------------------------------------

public void run () {
    synchronized (MyClass.this) {
        System.out.println ("B: I am  going to sleep. A, please wake me up.");
        try {
            MyClass.this.wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        System.out.println ("B: Thank you A for waking me up!");
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("A: I am going to sleep");
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    synchronized (MyClass.this) {
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        MyClass.this.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857315_36_53
17856844_18014147_14_24
Title: Notify threads running in different objects 
----------------------------------------

public void run () {
    synchronized (MyClass.this) {
        System.out.println ("B: I am  going to sleep. A, please wake me up.");
        try {
            MyClass.this.wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        System.out.println ("B: Thank you A for waking me up!");
    }
}
----------------------------------------

public void run () {
    System.out.println ("A: I am going to sleep");
    System.out.println ("A: I slept one full day. Feels great.");
    System.out.println ("A: Hey B, wake up!");
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    latch.countDown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17856844_17857315_7_25
17856844_18014147_14_24
Title: Notify threads running in different objects 
----------------------------------------

public void run () {
    try {
        System.out.println ("A: I am going to sleep");
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    synchronized (MyClass.this) {
        System.out.println ("A: I slept one full day. Feels great.");
        System.out.println ("A: Hey B, wake up!");
        MyClass.this.notifyAll ();
    }
}
----------------------------------------

public void run () {
    System.out.println ("A: I am going to sleep");
    System.out.println ("A: I slept one full day. Feels great.");
    System.out.println ("A: Hey B, wake up!");
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    latch.countDown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17871437_17871854_5_59
17871437_37374562_1_44
Title: java calculator loop not working properly 
----------------------------------------

public static void main (String [] args) {
    double Answer;
    String op;
    double num1;
    double num2;
    String again;
    boolean yesorno = true;
    Scanner input = new Scanner (System.in);
    while (yesorno) {
        System.out.print ("What opperation would you like to preform? +,-,*,/, :");
        op = input.nextLine ();
        System.out.print ("What is the first number? : ");
        num1 = input.nextDouble ();
        System.out.print ("And the seccond number? : ");
        num2 = input.nextDouble ();
        if (op.equals ("+")) {
            Answer = (num1 + num2);
            System.out.println (Answer);
        } else if (op.equals ("-")) {
            Answer = num1 - num2;
            System.out.println (Answer);
        } else if (op.equals ("*")) {
            Answer = num1 * num2;
            System.out.println (Answer);
        } else if (op.equals ("/")) {
            Answer = num1 / num2;
            System.out.println (Answer);
        }

        System.out.println ("Would you like to do any more math?");
        again = input.nextLine ();
        again = input.nextLine ();
        if (again.equals ("yes")) {
            yesorno = true;
        } else if (again.equals ("no")) {
            yesorno = false;
            System.out.print ("have a good day!");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    boolean status = true;
    while (status) {
        String answer = "";
        String choise = "";
        System.out.println ("\"WELCOME TO JAVA CALCULATOR\"");
        Scanner scn = new Scanner (System.in);
        Scanner cal = new Scanner (System.in);
        Scanner cho = new Scanner (System.in);
        System.out.println ("Enter the numers one by one that you want to calculate..");
        int numA = scn.nextInt ();
        int numB = scn.nextInt ();
        int result = 0;
        System.out.println ("What you want to calculate...?");
        answer = cal.nextLine ();
        if (answer.equals ("+")) {
            result = numA + numB;
        }
        if (answer.equals ("-")) {
            result = numA - numB;
        }
        if (answer.equals ("*")) {
            result = numA * numB;
        }
        if (answer.equals ("/")) {
            result = numA / numB;
        }
        System.out.println ("The result of " + numA + " and " + numB + " is : " + result);
        System.out.println ("Do you want to continue.....(y) or (n)?");
        choise = cho.nextLine ();
        if (choise.equalsIgnoreCase ("y")) {
            System.out.println ("Welcome back.....:)\n\"Make By Saikat Halder\"");
            status = true;
        }
        if (choise.equalsIgnoreCase ("n")) {
            System.out.println ("Good bye....Thanks for useing java Calculator......:)");
            System.exit (0);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17875728_19238983_1_29
17875728_53511537_1_26
Title: Conversion IPv6 to long and long to IPv6 
----------------------------------------

public static BigInteger ipv6ToNumber (String addr) {
    int startIndex = addr.indexOf ("::");
    if (startIndex != - 1) {
        String firstStr = addr.substring (0, startIndex);
        String secondStr = addr.substring (startIndex + 2, addr.length ());
        BigInteger first = ipv6ToNumber (firstStr);
        int x = countChar (addr, ':');
        first = first.shiftLeft (16 * (7 - x)).add (ipv6ToNumber (secondStr));
        return first;
    }
    String [] strArr = addr.split (":");
    BigInteger retValue = BigInteger.valueOf (0);
    for (int i = 0;
    i < strArr.length; i ++) {
        BigInteger bi = new BigInteger (strArr [i], 16);
        retValue = retValue.shiftLeft (16).add (bi);
    }
    return retValue;
}
----------------------------------------

public static BigInteger ipv6ToNumber (String addr) {
    int startIndex = addr.indexOf ("::");
    if (startIndex != - 1) {
        String firstStr = addr.substring (0, startIndex);
        String secondStr = addr.substring (startIndex + 2, addr.length ());
        BigInteger first = new BigInteger ("0");
        BigInteger second = new BigInteger ("0");
        if (! firstStr.equals ("")) {
            int x = countChar (addr, ':');
            first = ipv6ToNumber (firstStr).shiftLeft (16 * (7 - x));
        }
        if (! secondStr.equals ("")) {
            second = ipv6ToNumber (secondStr);
        }
        first = first.add (second);
        return first;
    }
    String [] strArr = addr.split (":");
    BigInteger retValue = BigInteger.valueOf (0);
    for (int i = 0;
    i < strArr.length; i ++) {
        BigInteger bi = new BigInteger (strArr [i], 16);
        retValue = retValue.shiftLeft (16).add (bi);
    }
    return retValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17875728_19238983_46_59
17875728_53511537_28_41
Title: Conversion IPv6 to long and long to IPv6 
----------------------------------------

public static int countChar (String str, char reg) {
    char [] ch = str.toCharArray ();
    int count = 0;
    for (int i = 0;
    i < ch.length; ++ i) {
        if (ch [i] == reg) {
            if (ch [i + 1] == reg) {
                ++ i;
                continue;
            }
            ++ count;
        }
    }
    return count;
}
----------------------------------------

public static int countChar (String str, char reg) {
    char [] ch = str.toCharArray ();
    int count = 0;
    for (int i = 0;
    i < ch.length; ++ i) {
        if (ch [i] == reg) {
            if (ch [i + 1] == reg) {
                ++ i;
                break;
            }
            ++ count;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17914011_17914168_2_25
17914011_17914263_1_21
Title: I'm having an issue with the delimiters in this java code? 
----------------------------------------

public static void main (String [] args) throws IOException {
    File myFile = new File ("temps.txt");
    BufferedReader input = new BufferedReader (new FileReader (myFile));
    String line;
    while ((line = input.readLine ()) != null) {
        StringTokenizer tok = new StringTokenizer (line, ",");
        System.out.println ("Input the maximum temperature.");
        try {
            int maxTemp = Integer.parseInt (tok.nextToken ());
        } catch (NumberFormatException e) {
            e.printStackTrace ();
            System.out.println ("You did not input a valid integer.");
            break;
        }
        System.out.println ("Input the minimum temperature.");
        try {
            int minTemp = Integer.parseInt (tok.nextToken ());
        } catch (NumberFormatException e) {
            e.printStackTrace ();
            System.out.println ("You did not input a valid integer.");
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    File myFile = new File ("C:/temps.txt");
    Scanner input = new Scanner (myFile);
    String linrread = null;
    try {
        while ((linrread = input.nextLine ()) != null) {
            System.out.println ("linrread ." + linrread);
            if (linrread.indexOf (",") != - 1) {
                String [] split = linrread.split (",");
                String date = split [0];
                String temp = split [1];
                System.out.println ("date :" + date + " temp: " + temp);
            }
        }
    } catch (NoSuchElementException t) {
        t.printStackTrace ();
        System.out.println ("Reached end of the file.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17920015_17925507_1_13
17920015_32562027_1_13
Title: How can convert local xml file to org.ksoap2.serialization.SoapObject? 
----------------------------------------

public void call (String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException {
    if (localFileAvailable) {
        InputStream is = new FileInputStream (fileWithXml);
        parseResponse (envelope, is);
        is.close ();
    } else {
        super.call (soapAction, envelope);
    }
}
----------------------------------------

@Override
public void call (String soapAction, SoapEnvelope envelope) throws IOException, XmlPullParserException {
    if (getFileInputStream () != null) {
        parseResponse (envelope, getFileInputStream ());
        envelope.bodyOut = envelope.bodyIn;
        envelope.headerOut = envelope.headerIn;
        getFileInputStream ().close ();
    }
    super.call (soapAction, envelope);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17929112_17929796_16_24
17929112_19153633_18_59
Title: Chain of Responsibility with Thread Pools 
----------------------------------------

public void handleRequest (String record) {
    if (next != null) {
        threadPool.execute (new Runnable () {
            public void run () {
                next.handleRequest (record);
            }}

        );
    }
}
----------------------------------------

public void handleRequest (String record) {
    System.out.println ("Adding new record to Queue : " + record);
    inbound.add (record);
    System.out.println ("Queue Size : " + inbound.size ());
    if (inbound.size () >= 10) {
        System.out.println ("Processing the batch.");
        for (int i = 0;
        i < 10; i ++) {
            tasks.add (new MiddleWorker (inbound.poll ()));
        }
        System.out.println ("Processing @ Middle Stage. " + record);
        List < Future < String > > results = null;
        try {
            results = executor.invokeAll (tasks, 60, TimeUnit.SECONDS);
            tasks.clear ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        for (Future < String > f : results) {
            try {
                String answer = f.get ();
                System.out.println ("Outbound : " + answer);
                if (next != null) {
                    next.handleRequest (answer);
                }
            } catch (InterruptedException e) {
                e.printStackTrace ();
            } catch (ExecutionException e) {
                e.printStackTrace ();
            }
        }
        results.clear ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17934661_17934695_37_48
17934661_17934719_57_68
Title: Why isn't mouselistener working? 
----------------------------------------

public void eventDispatched (AWTEvent awtEvent) {
    MouseEvent mouseEvent = (MouseEvent) awtEvent;
    Component component = (Component) awtEvent.getSource ();
    Point location = component.getLocationOnScreen ();
    Point test2Location = Test2.this.getLocationOnScreen ();
    int x = mouseEvent.getX () + location.x - test2Location.x;
    int y = mouseEvent.getY () + location.y - test2Location.y;
    System.out.printf ("%20s [%03d, %03d]%n", "From AWTEvent:", x, y);
}
----------------------------------------

public void eventDispatched (AWTEvent event) {
    if (event instanceof MouseEvent) {
        MouseEvent e = (MouseEvent) event;
        System.out.println ("Local point = " + e.getPoint ());
        Point p = e.getPoint ();
        Window window = SwingUtilities.getWindowAncestor (e.getComponent ());
        if (window != e.getSource () && window != null) {
            p = SwingUtilities.convertPoint (e.getComponent (), e.getPoint (), window);
        }
        System.out.println ("Global point = " + p);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17943667_46884434_25_57
17943667_46884434_59_68
Title: Get the client bound IP address with an Axis2 Server with multi NIC 
----------------------------------------

public Socket createSocket (String host, int port, InetAddress localAddress, int localPort, HttpConnectionParams params) throws IOException, UnknownHostException, ConnectTimeoutException {
    logger.debug ("createSocket(String host, int port, InetAddress localAddress, int localPort,HttpConnectionParams params)");
    if (params == null) {
        throw new IllegalArgumentException ("Parameters may not be null");
    }
    int timeout = params.getConnectionTimeout ();
    SocketFactory socketfactory = ctx.getSocketFactory ();
    if (timeout == 0) {
        if (this.localAddress != null) {
            return socketfactory.createSocket (host, port, this.localAddress, localPort);
        } else {
            return socketfactory.createSocket (host, port, localAddress, localPort);
        }
    } else {
        Socket socket = socketfactory.createSocket ();
        if (this.localAddress != null) {
            SocketAddress localaddr = new InetSocketAddress (this.localAddress, localPort);
            SocketAddress remoteaddr = new InetSocketAddress (host, port);
            socket.bind (localaddr);
            socket.connect (remoteaddr, timeout);
            return socket;
        } else {
            SocketAddress localaddr = new InetSocketAddress (localAddress, localPort);
            SocketAddress remoteaddr = new InetSocketAddress (host, port);
            socket.bind (localaddr);
            socket.connect (remoteaddr, timeout);
            return socket;
        }
    }
}
----------------------------------------

public Socket createSocket (String host, int port) throws IOException, UnknownHostException {
    if (localAddress != null) {
        logger.debug ("createSocket(String host, int port) localAddress not null");
        return createSocket (host, port, localAddress, 0);
    } else {
        logger.debug ("createSocket(String host, int port)");
        return ctx.getSocketFactory ().createSocket (host, port);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1795402_42408656_1_22
1795402_43608531_1_23
Title: JAVA: check a string if there is a special character in it 
----------------------------------------

public boolean isValidName (String name) {
    String specialCharacters = " !#$%&'()*+,-./:;<=>?@[]^_`{|}~0123456789";
    String str2 [] = name.split ("");
    int count = 0;
    for (int i = 0;
    i < str2.length; i ++) {
        if (specialCharacters.contains (str2 [i])) {
            count ++;
        }
    }
    if (name != null && count == 0) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------

public static boolean isValidName (String inputString) {
    String specialCharacters = " !#$%&'()*+,-./:;<=>?@[]^_`{|}~0123456789";
    String [] strlCharactersArray = new String [inputString.length ()];
    for (int i = 0;
    i < inputString.length (); i ++) {
        strlCharactersArray [i] = Character.toString (inputString.charAt (i));
    }
    int count = 0;
    for (int i = 0;
    i < strlCharactersArray.length; i ++) {
        if (specialCharacters.contains (strlCharactersArray [i])) {
            count ++;
        }
    }
    if (inputString != null && count == 0) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17956890_17957126_1_16
17956890_17957470_1_16
Title: Project9.java uses unchecked or unsafe operations 
----------------------------------------

private static int indexOfSmallest (int startIndex, Comparable < InventoryItem > [] a, int numberUsed) {
    Comparable < InventoryItem > min = a [startIndex];
    int indexOfMin = startIndex;
    int index;
    for (index = startIndex + 1; index < numberUsed; index ++) {
        if (a [index].compareTo ((InventoryItem) min) < 0) {
            min = a [index];
            indexOfMin = index;
        }
    }
    return indexOfMin;
}
----------------------------------------

private static int indexOfSmallest (int startIndex, InventoryItem [] a, int numberUsed) {
    InventoryItem min = a [startIndex];
    int indexOfMin = startIndex;
    int index;
    for (index = startIndex + 1; index < numberUsed; index ++) {
        if (a [index].compareTo (min) < 0) {
            min = a [index];
            indexOfMin = index;
        }
    }
    return indexOfMin;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17963004_17963085_1_13
17963004_51698295_5_16
Title: return an array of prime numbers 
----------------------------------------

public static boolean isPrime (int n) {
    if (n < 2) return false;

    int maxIteration = Math.ceil (Math.sqrt (n));
    for (int i = 2;
    i < maxIteration; i ++) {
        if (n % i == 0) return false;

    }
    return true;
}
----------------------------------------

public static boolean isPrime (double p) {
    if (p < 2) return false;

    if (known_primes.contains (p)) return true;

    for (double i = 3;
    i <= Math.sqrt (p); i += 2) {
        if (! isPrime (i)) continue;

        if (p % i == 0) return false;

    }
    known_primes.add (p);
    Collections.sort (known_primes);
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17967531_18041383_15_56
17967531_18041419_315_355
Title: Jackson API: partially update a string 
----------------------------------------

protected void serializeFields (UnknownPart bean, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
    final BeanPropertyWriter [] props;
    if (_filteredProps != null && provider.getSerializationView () != null) {
        props = _filteredProps;
    } else {
        props = _props;
    }
    int i = 0;
    try {
        for (final int len = props.length;
        i < len; ++ i) {
            BeanPropertyWriter prop = props [i];
            if (prop != null) {
                prop.serializeAsField (bean, jgen, provider);
                bean.tree.remove (prop.getName ());
            }
        }
        if (_anyGetterWriter != null) {
            _anyGetterWriter.getAndSerialize (bean, jgen, provider);
        }
        Iterator < Entry < String, JsonNode > > it = bean.tree.getFields ();
        while (it.hasNext ()) {
            Entry < String, JsonNode > e = it.next ();
            jgen.writeFieldName (e.getKey ());
            jgen.writeObject (e.getValue ());
        }
    } catch (Exception e) {
        String name = (i == props.length) ? "[anySetter]" : props [i].getName ();
        wrapAndThrow (provider, e, bean, name);
    } catch (StackOverflowError e) {
        JsonMappingException mapE = new JsonMappingException ("Infinite recursion (StackOverflowError)", e);
        String name = (i == props.length) ? "[anySetter]" : props [i].getName ();
        mapE.prependPath (new JsonMappingException.Reference (bean, name));
        throw mapE;
    }
}
----------------------------------------

protected void serializeFields (UnknownPart bean, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {
    final BeanPropertyWriter [] props;
    if (_filteredProps != null && provider.getSerializationView () != null) {
        props = _filteredProps;
    } else {
        props = _props;
    }
    int i = 0;
    try {
        for (final int len = props.length;
        i < len; ++ i) {
            BeanPropertyWriter prop = props [i];
            if (prop != null) {
                prop.serializeAsField (bean, jgen, provider);
                bean.tree.remove (prop.getName ());
            }
        }
        if (_anyGetterWriter != null) {
            _anyGetterWriter.getAndSerialize (bean, jgen, provider);
        }
        Iterator < Entry < String, JsonNode > > it = bean.tree.getFields ();
        while (it.hasNext ()) {
            Entry < String, JsonNode > e = it.next ();
            jgen.writeFieldName (e.getKey ());
            jgen.writeObject (e.getValue ());
        }
    } catch (Exception e) {
        String name = (i == props.length) ? "[anySetter]" : props [i].getName ();
        wrapAndThrow (provider, e, bean, name);
    } catch (StackOverflowError e) {
        JsonMappingException mapE = new JsonMappingException ("Infinite recursion (StackOverflowError)", e);
        String name = (i == props.length) ? "[anySetter]" : props [i].getName ();
        mapE.prependPath (new JsonMappingException.Reference (bean, name));
        throw mapE;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17968803_43884469_3_14
17968803_52147976_5_19
Title: ThreadLocal & Memory Leak 
----------------------------------------

public static void main (String [] args) {
    new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 100000; i ++) {
                TestClass t = new TestClass (i);
                t.printId ();
                t = null;
            }
        }}

    ).start ();
}
----------------------------------------

public static void main (String [] args) {
    for (long i = 0;
    i < total; i ++) {
        if (i % 10000 == 0) {
            try {
                Thread.sleep (100);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        ThreadLocal < Element > tl = new ThreadLocal < > ();
        tl.set (new Element (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17973964_17974063_1_11
17973964_32549971_4_21
Title: How to compare two Strings in java without considering spaces? 
----------------------------------------

public static void main (String [] args) {
    String a = "VIJAY KAKADE";
    String b = "VIJAY    KAKADE";
    a = a.replace (" ", "");
    b = b.replace (" ", "");
    if (a.equalsIgnoreCase (b)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
}
----------------------------------------

public static void main (String [] args) {
    String a = "VIJAY KAKADE";
    String b = "VIJAY    KAKADE";
    System.out.print (String.format ("'%s' and '%s' matching: ", a, b));
    if (equalToIgnoringWhiteSpace (a).matches (b)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    String c = "VIJAYKAKADE";
    System.out.print (String.format ("'%s' and '%s' matching: ", a, c));
    if (equalToIgnoringWhiteSpace (a).matches (c)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17985808_17988175_37_50
17985808_33862653_37_50
Title: Search text file and display results in a JPanel 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Bible Search");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17985808_17988175_60_122
17985808_33862653_63_107
Title: Search text file and display results in a JPanel 
----------------------------------------

public TestPane () {
    setLayout (new BorderLayout ());
    JPanel searchPane = new JPanel (new GridBagLayout ());
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.insets = new Insets (2, 2, 2, 2);
    searchPane.add (new JLabel ("Find: "), gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    findText = new JTextField (20);
    searchPane.add (findText, gbc);
    add (searchPane, BorderLayout.NORTH);
    ta = new JTextArea (20, 40);
    ta.setWrapStyleWord (true);
    ta.setLineWrap (true);
    ta.setEditable (false);
    add (new JScrollPane (ta));
    loadFile ();
    keyTimer = new Timer (250, new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            String find = findText.getText ();
            Document document = ta.getDocument ();
            try {
                for (int index = 0;
                index + find.length () < document.getLength (); index ++) {
                    String match = document.getText (index, find.length ());
                    if (find.equals (match)) {
                        javax.swing.text.DefaultHighlighter.DefaultHighlightPainter highlightPainter = new javax.swing.text.DefaultHighlighter.DefaultHighlightPainter (Color.YELLOW);
                        ta.getHighlighter ().addHighlight (index, index + find.length (), highlightPainter);
                    }
                }
            } catch (BadLocationException exp) {
                exp.printStackTrace ();
            }
        }}

    );
    keyTimer.setRepeats (false);
    findText.getDocument ().addDocumentListener (new DocumentListener () {
        @Override
        public void insertUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }@Override
        public void removeUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }@Override
        public void changedUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }}

    );
}
----------------------------------------

public TestPane () {
    setLayout (new BorderLayout ());
    JPanel searchPane = new JPanel (new GridBagLayout ());
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.insets = new Insets (2, 2, 2, 2);
    searchPane.add (new JLabel ("Find: "), gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    findText = new JTextField (20);
    searchPane.add (findText, gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.NONE;
    gbc.weightx = 0;
    search = new JButton ("Search");
    searchPane.add (search, gbc);
    add (searchPane, BorderLayout.NORTH);
    model = new DefaultListModel < > ();
    list = new JList (model);
    list.setCellRenderer (new HighlightListCellRenderer ());
    add (new JScrollPane (list));
    ActionHandler handler = new ActionHandler ();
    search.addActionListener (handler);
    findText.addActionListener (handler);
    try (BufferedReader reader = new BufferedReader (new InputStreamReader (getClass ().getResourceAsStream ("/Script.txt")))) {
        String text = null;
        while ((text = reader.readLine ()) != null) {
            model.addElement (text);
        }
    } catch (IOException exp) {
        exp.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17992753_17993761_5_14
17992753_18534629_8_25
Title: Can not convert json string to object 
----------------------------------------

public static void main (String [] args) {
    String text = "[{\"location\":\"Boston\"},{\"value\":\"5\"},{\"coverage\":\"15\"},{\"validPeriod\":\"08/05/2013\"},{\"description\":\"test description\"}]";
    try {
        JSONArray jsonArray = new JSONArray (text);
        System.out.println (jsonArray.toString ());
    } catch (JSONException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        JSONArray jsonArr = new JSONArray (str);
        System.out.println ("JSON ARRAY IS : ");
        System.out.println (jsonArr.toString ());
        for (int i = 0;
        i < jsonArr.length (); i ++) {
            JSONObject jsonObj = jsonArr.getJSONObject (i);
            System.out.println ();
            System.out.println (i + " JSON OBJECT IS : ");
            System.out.println (jsonObj.toString ());
        }
    } catch (org.json.JSONException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17999747_17999959_6_19
17999747_18000053_12_40
Title: "Java Convert a table of two Strings to a MAP<String ArrayList<String>>" 
----------------------------------------

public static void main (String [] args) {
    String insertStr = "Hello";
    ohm.put (insertStr, al1);
    if (ohm.containsKey (insertStr)) {
        ohm.get (insertStr).add ("MOM");
        ohm.get (insertStr).add ("World");
        ohm.get (insertStr).add ("DAD");
        System.out.println (ohm.get (insertStr));
    }
}
----------------------------------------

public static void main (String [] args) {
    Map < String, List < String > > dataMap = new HashMap < String, List < String > > ();
    for (String s : data) {
        String [] splitData = s.split (" ");
        String key = splitData [0];
        String newValue = splitData [1];
        List < String > values = dataMap.get (key);
        if (values == null) {
            values = new ArrayList < > ();
        }
        values.add (newValue);
        dataMap.put (key, values);
    }
    for (String key : dataMap.keySet ()) {
        System.out.print (key + ", { ");
        for (String value : dataMap.get (key)) {
            System.out.print (value + " ");
        }
        System.out.println ("}");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17999747_17999959_6_19
17999747_18000064_10_25
Title: "Java Convert a table of two Strings to a MAP<String ArrayList<String>>" 
----------------------------------------

public static void main (String [] args) {
    String insertStr = "Hello";
    ohm.put (insertStr, al1);
    if (ohm.containsKey (insertStr)) {
        ohm.get (insertStr).add ("MOM");
        ohm.get (insertStr).add ("World");
        ohm.get (insertStr).add ("DAD");
        System.out.println (ohm.get (insertStr));
    }
}
----------------------------------------

public static void main (String [] args) {
    for (String row : table) {
        String [] splitString = row.split (" ");
        if (map.containsKey (splitString [0])) {
            map.get (splitString [0]).add (splitString [1]);
        } else {
            ArrayList < String > newList = new ArrayList < String > ();
            newList.add (splitString [1]);
            map.put (splitString [0], newList);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17999747_18000053_12_40
17999747_18000064_10_25
Title: "Java Convert a table of two Strings to a MAP<String ArrayList<String>>" 
----------------------------------------

public static void main (String [] args) {
    Map < String, List < String > > dataMap = new HashMap < String, List < String > > ();
    for (String s : data) {
        String [] splitData = s.split (" ");
        String key = splitData [0];
        String newValue = splitData [1];
        List < String > values = dataMap.get (key);
        if (values == null) {
            values = new ArrayList < > ();
        }
        values.add (newValue);
        dataMap.put (key, values);
    }
    for (String key : dataMap.keySet ()) {
        System.out.print (key + ", { ");
        for (String value : dataMap.get (key)) {
            System.out.print (value + " ");
        }
        System.out.println ("}");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (String row : table) {
        String [] splitString = row.split (" ");
        if (map.containsKey (splitString [0])) {
            map.get (splitString [0]).add (splitString [1]);
        } else {
            ArrayList < String > newList = new ArrayList < String > ();
            newList.add (splitString [1]);
            map.put (splitString [0], newList);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1799990_1800142_20_29
1799990_30617002_1_11
Title: Java Program Fibonacci Sequence 
----------------------------------------

private static BigInteger fib (int place) {
    BigInteger a = new BigInteger ("0");
    BigInteger b = new BigInteger ("1");
    while (place -- > 1) {
        BigInteger t = b;
        b = a.add (b);
        a = t;
    }
    return b;
}
----------------------------------------

public int fib (int ithNumber) {
    int prev = 0;
    int current = 1;
    int newValue;
    for (int i = 1;
    i < ithNumber; i ++) {
        newValue = current + prev;
        prev = current;
        current = newValue;
    }
    return current;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001256_1_16
18001177_18001272_1_13
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < myString.length; i ++) {
        if (i = 0) {
            sb.append ("(" + myString [i])
        } else if (i = myString.length - 1) {
            sb.append (myString [i] + ")");
        } else {
            sb.append (myString [i])
        }

        sb.append ("(" + myString [i] + " AND " + myString [i + 1] + ")");
    }
    System.out.println (sb);
}
----------------------------------------

public void addString (string [] myString) {
    StringBuilder sb = new StringBuilder ();
    sb.Append ("(");
    for (int i = 0;
    i < myString.length; i ++) {
        sb.Append (myString [i] + " AND ");
    }
    string result = sb.ToString ().Substring (0, sb.ToString ().LastIndexOf ("AND"));
    result += ")";
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001256_1_16
18001177_18001290_1_16
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < myString.length; i ++) {
        if (i = 0) {
            sb.append ("(" + myString [i])
        } else if (i = myString.length - 1) {
            sb.append (myString [i] + ")");
        } else {
            sb.append (myString [i])
        }

        sb.append ("(" + myString [i] + " AND " + myString [i + 1] + ")");
    }
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    for (int i = 0;
    i < myString.length;) {
        sb.append (myString [i] + " AND ");
        i ++;
    }
    sb = sb.substring (0, sb.length () - 5);
    sb.append (")");
    System.out.println (sb);
}
----------------------------------------
