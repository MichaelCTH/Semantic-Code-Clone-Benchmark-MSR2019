$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43458314_43458864_3_14
43458314_43458868_37_51
Title: How to get a variable of an object used as a wildcard 
----------------------------------------

public static void main (String [] args) {
    Paper paper = new Paper ();
    paper.setName ("name");
    Tape tape = new Tape ();
    tape.setName ("name");
    Generic < Paper > gen1 = new Generic (paper);
    Generic < Tape > gen2 = new Generic (tape);
    System.out.println (gen1.compare (gen2));
}
----------------------------------------

public static void main (String args []) {
    Tape MyTape = new Tape ();
    MyTape.name = "hello world";
    Paper MyPaper = new Paper ();
    MyPaper.name = "hello world";
    Files < Tape > MyFiles1 = new Files < Tape > (MyTape);
    Files < Paper > MyFiles2 = new Files < Paper > (MyPaper);
    System.out.println (MyFiles1.compareName (MyFiles2));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43464279_43464341_1_10
43464279_43464489_1_11
Title: RecyclerVIew onItemClickListener Not working 
----------------------------------------

@Override
public void onBindViewHolder (RecyclerViewAdapter.ItemViewHolder holder, int position) {
    holder.name.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (final ViewHolder holder, int position) {
    final String element = mDataset [position];
    holder.itemView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43466795_43467658_68_76
43466795_43467658_78_87
Title: Can this be achieved on Mac OSX? 
----------------------------------------

public static Rectangle getScreenBounds (Component comp, boolean acceptDefault) {
    Rectangle bounds = getScreenBounds (comp);
    if ((bounds == null || (bounds.x == 0 && bounds.y == 0 && bounds.width == 0 && bounds.height == 0)) && acceptDefault) {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment ();
        GraphicsDevice gd = ge.getDefaultScreenDevice ();
        bounds = gd.getDefaultConfiguration ().getBounds ();
    }
    return bounds;
}
----------------------------------------

public static Rectangle getScreenBounds (Component comp) {
    Rectangle bounds = new Rectangle (0, 0, 0, 0);
    GraphicsDevice gd = getGraphicsDevice (comp);
    if (gd != null) {
        GraphicsConfiguration gc = gd.getDefaultConfiguration ();
        bounds = gc.getBounds ();
    }
    return bounds;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43475224_43475524_15_44
43475224_43476596_25_44
Title: "When the list view is clicked the application crashes! Why?" 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_contact_info);
    ContactInfoFamily_Name = (TextView) findViewById (R.id.ContactInfoFamilyName);
    ContactInfoFirst_Name = (TextView) findViewById (R.id.ContactInfoFirstName);
    ContactInfoHouse_Number_ = (TextView) findViewById (R.id.ContactInfoHouseNumber);
    ContactInfoStreet_Name = (TextView) findViewById (R.id.ContactInfoStreetName);
    ContactInfoTown_ = (TextView) findViewById (R.id.ContactInfoTown);
    ContactInfoCounty_ = (TextView) findViewById (R.id.ContactInfoCounty);
    ContactInfoPost_Code = (TextView) findViewById (R.id.ContactInfoPostCode);
    ContactInfoPhone_Number = (TextView) findViewById (R.id.ContactInfoPhone);
    Intent intent = getIntent ();
    Bundle cBundle = intent.getExtras ();
    Contact ContactInfo = (Contact) cBundle.getSerializable ("ParseContactID");
    ContactInfoFamily_Name.setText (ContactInfo.getID ());
    ContactInfoFirst_Name.setText (getIntent ().getExtras ().getString ("FirstNameKey"));
    ContactInfoHouse_Number_.setText (getIntent ().getExtras ().getString ("HouseNumberKey"));
    ContactInfoStreet_Name.setText (getIntent ().getExtras ().getString ("StreetNameKey"));
    ContactInfoTown_.setText (getIntent ().getExtras ().getString ("TownKey"));
    ContactInfoCounty_.setText (getIntent ().getExtras ().getString ("CountyKey"));
    ContactInfoPost_Code.setText (getIntent ().getExtras ().getString ("TownKey"));
    ContactInfoPhone_Number.setText (getIntent ().getExtras ().getString ("PhoneNumberKey"));
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_contact_info);
    Intent intent = getIntent ();
    Bundle cBundle = intent.getExtras ();
    Contact ContactInfo = (Contact) cBundle.getSerializable ("ParseContactID");
    ContactInfoFamily_Name.setText (ContactInfo.getID ());
    ContactInfoFirst_Name.setText (getIntent ().getExtras ().getString ("FirstNameKey"));
    ContactInfoHouse_Number_.setText (getIntent ().getExtras ().getString ("HouseNumberKey"));
    ContactInfoStreet_Name.setText (getIntent ().getExtras ().getString ("StreetNameKey"));
    ContactInfoTown_.setText (getIntent ().getExtras ().getString ("TownKey"));
    ContactInfoCounty_.setText (getIntent ().getExtras ().getString ("CountyKey"));
    ContactInfoPost_Code.setText (getIntent ().getExtras ().getString ("TownKey"));
    ContactInfoPhone_Number.setText (getIntent ().getExtras ().getString ("PhoneNumberKey"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43479643_43479725_1_14
43479643_43479835_1_12
Title: Recursive function responding different value 
----------------------------------------

static int recSum (int n) {
    int sum = 0;
    while (n != 0) {
        sum += n % 10;
        n = n / 10;
    }
    if (sum > 9) {
        return recSum (sum);
    } else {
        return sum;
    }
}
----------------------------------------

static int recSum (int n) {
    int sum = 0;
    sum = sum + (n % 10);
    n = n / 10;
    if (n != 0) {
        return sum + recSum (n);
    } else {
        return sum;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43479689_43479785_1_12
43479689_43480412_1_14
Title: Insert element at specific position is not happening 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int [] insertArr = {10, 30, 20, 40, 60, 50, 90, 70, 80};
    Arrays.sort (insertArr);
    System.out.println ("At what position you want to insert");
    int pos = in.nextInt ();
    System.out.println ("What element you want to insert");
    int key = in.nextInt ();
    insertPosition (insertArr, pos, key);
    Arrays.stream (insertArr).forEach (System.out :: println);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int [] insertArr = {10, 30, 20, 40, 60, 50, 90, 70, 80};
    Arrays.sort (insertArr);
    int arrLength = insertArr.length;
    System.out.println ("At what position you want to insert");
    int pos = in.nextInt ();
    System.out.println ("What element you want to insert");
    int key = in.nextInt ();
    insertPosition (insertArr, arrLength, pos, key);
    for (int num : insertArr) {
        System.out.println (num);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43482720_43483118_1_19
43482720_43483452_1_17
Title: Find the largest index occurrence of a number using binary search 
----------------------------------------

public static int bsearch (int [] arr, int key, int lo, int hi) {
    while (lo <= hi) {
        int mid = (lo + hi) / 2;
        if (arr [mid] == key) {
            System.out.println ("The value " + key + " is found at " + mid);
            int higherResult = bsearch (arr, key, mid + 1, hi);
            if (higherResult < 0) {
                return mid;
            }
            return higherResult;
        }
        if (arr [mid] < key) {
            lo = mid + 1;
        } else {
            hi = mid - 1;
        }
    }
    return - 1;
}
----------------------------------------

public static int bsearch (int [] arr, int key) {
    int lo = 0, hi = arr.length - 1;
    while (lo < hi) {
        int mid = (lo + hi) / 2;
        if (arr [mid] <= key) lo = mid + 1;

        if (arr [mid] > key) hi = mid;

    }
    if (arr [lo] == key) {
        return lo;
    } else {
        return lo - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4348293_4348411_10_32
4348293_5570543_8_54
Title: Tab component consuming mouse so tabs won't change 
----------------------------------------

public void run () {
    JTabbedPane jTabbedPane = new JTabbedPane ();
    jTabbedPane.addTab ("Red", new JLabel ("Roses"));
    jTabbedPane.addTab ("Blue", new JLabel ("Skies"));
    jTabbedPane.addTab ("Green", new JLabel ("Grass"));
    for (int i = 0;
    i < jTabbedPane.getTabCount (); i ++) {
        JLabel tabComponent = (JLabel) jTabbedPane.getComponent (i);
        tabComponent.addMouseMotionListener (new MouseMotionAdapter () {
            @Override
            public void mouseDragged (MouseEvent e) {
                System.out.println ("dragging");
            }}

        );
    }
    JFrame jFrame = new JFrame ("Testing");
    jFrame.add (jTabbedPane);
    jFrame.setSize (400, 500);
    jFrame.setVisible (true);
    jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------

public void run () {
    final JTabbedPane jTabbedPane = new JTabbedPane ();
    jTabbedPane.addTab ("Red", new JLabel ("Roses"));
    jTabbedPane.addTab ("Blue", new JLabel ("Skies"));
    jTabbedPane.addTab ("Green", new JLabel ("Grass"));
    for (int i = 0;
    i < jTabbedPane.getTabCount (); i ++) {
        final JLabel tabComponent = new JLabel (jTabbedPane.getTitleAt (i));
        tabComponent.addMouseMotionListener (new MouseMotionAdapter () {
            @Override
            public void mouseDragged (MouseEvent e) {
                System.out.println ("tabComponent dragging");
            }}

        );
        jTabbedPane.setTabPlacement (JTabbedPane.LEFT);
        tabComponent.addMouseListener (new MouseAdapter () {
            @Override
            public void mousePressed (MouseEvent e) {
                int x = tabComponent.getLocationOnScreen ().x - jTabbedPane.getLocationOnScreen ().x;
                int y = tabComponent.getLocationOnScreen ().y - jTabbedPane.getLocationOnScreen ().y;
                MouseEvent me = new MouseEvent ((JLabel) e.getSource (), e.getID (), e.getWhen (), e.getModifiers (), x, y, e.getLocationOnScreen ().x, e.getLocationOnScreen ().y, e.getClickCount (), e.isPopupTrigger (), e.getButton ());
                jTabbedPane.getMouseListeners () [0].mousePressed (me);
                System.out.println ("tabComponent mousePressed e=" + e);
            }}

        );
        jTabbedPane.setTabComponentAt (i, tabComponent);
    }
    JFrame jFrame = new JFrame ("Testing");
    jFrame.add (jTabbedPane);
    jFrame.setSize (400, 500);
    jFrame.setVisible (true);
    jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4348293_4348411_7_34
4348293_5570543_3_56
Title: Tab component consuming mouse so tabs won't change 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JTabbedPane jTabbedPane = new JTabbedPane ();
            jTabbedPane.addTab ("Red", new JLabel ("Roses"));
            jTabbedPane.addTab ("Blue", new JLabel ("Skies"));
            jTabbedPane.addTab ("Green", new JLabel ("Grass"));
            for (int i = 0;
            i < jTabbedPane.getTabCount (); i ++) {
                JLabel tabComponent = (JLabel) jTabbedPane.getComponent (i);
                tabComponent.addMouseMotionListener (new MouseMotionAdapter () {
                    @Override
                    public void mouseDragged (MouseEvent e) {
                        System.out.println ("dragging");
                    }}

                );
            }
            JFrame jFrame = new JFrame ("Testing");
            jFrame.add (jTabbedPane);
            jFrame.setSize (400, 500);
            jFrame.setVisible (true);
            jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            final JTabbedPane jTabbedPane = new JTabbedPane ();
            jTabbedPane.addTab ("Red", new JLabel ("Roses"));
            jTabbedPane.addTab ("Blue", new JLabel ("Skies"));
            jTabbedPane.addTab ("Green", new JLabel ("Grass"));
            for (int i = 0;
            i < jTabbedPane.getTabCount (); i ++) {
                final JLabel tabComponent = new JLabel (jTabbedPane.getTitleAt (i));
                tabComponent.addMouseMotionListener (new MouseMotionAdapter () {
                    @Override
                    public void mouseDragged (MouseEvent e) {
                        System.out.println ("tabComponent dragging");
                    }}

                );
                jTabbedPane.setTabPlacement (JTabbedPane.LEFT);
                tabComponent.addMouseListener (new MouseAdapter () {
                    @Override
                    public void mousePressed (MouseEvent e) {
                        int x = tabComponent.getLocationOnScreen ().x - jTabbedPane.getLocationOnScreen ().x;
                        int y = tabComponent.getLocationOnScreen ().y - jTabbedPane.getLocationOnScreen ().y;
                        MouseEvent me = new MouseEvent ((JLabel) e.getSource (), e.getID (), e.getWhen (), e.getModifiers (), x, y, e.getLocationOnScreen ().x, e.getLocationOnScreen ().y, e.getClickCount (), e.isPopupTrigger (), e.getButton ());
                        jTabbedPane.getMouseListeners () [0].mousePressed (me);
                        System.out.println ("tabComponent mousePressed e=" + e);
                    }}

                );
                jTabbedPane.setTabComponentAt (i, tabComponent);
            }
            JFrame jFrame = new JFrame ("Testing");
            jFrame.add (jTabbedPane);
            jFrame.setSize (400, 500);
            jFrame.setVisible (true);
            jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43484993_43485010_36_45
43484993_43485055_13_21
Title: How do I set background colour and drawString without cancelling the other out in Java? 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setRenderingHint (RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    g.setFont (FONT);
    g.setColor (color);
    g.drawString ("Hello", 300, 600);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g;
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font font = new Font ("Serif", Font.PLAIN, 500);
    g.setFont (font);
    g.setColor (Color.red);
    g.drawString ("Hello", 300, 900);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43486250_43534056_21_30
43486250_43534056_32_41
Title: Easy way of chaining QueryDSL for restful get 
----------------------------------------

private BooleanExpression eq (String inputString, BooleanExpression expression, StringPath path) {
    if (inputString != null) {
        if (expression == null) {
            expression = path.eq (inputString);
        } else {
            expression.and (path.eq (inputString));
        }
    }
    return expression;
}
----------------------------------------

private BooleanExpression eq (Long inputLong, BooleanExpression expression, NumberPath path) {
    if (inputLong != null) {
        if (expression == null) {
            expression = path.eq (inputLong);
        } else {
            expression.and (path.eq (inputLong));
        }
    }
    return expression;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43486875_43619663_1_25
43486875_43660822_1_17
Title: TomEE / Angular - How to redirect unknown paths from TomEE to Angular Frontend? 
----------------------------------------

@Override
public void doFilter (final ServletRequest servletRequest, final ServletResponse servletResponse, final FilterChain filterChain) throws IOException, ServletException {
    if (HttpServletRequest.class.isInstance (servletRequest)) {
        final HttpServletRequest req = HttpServletRequest.class.cast (servletRequest);
        final String path = req.getRequestURI ().substring (req.getContextPath ().length ());
        for (String resource : frontendResources) {
            if (path.startsWith (resource)) {
                filterChain.doFilter (new HttpServletRequestWrapper (req) {
                    @Override
                    public String getPathInfo () {
                        return "";
                    }@Override
                    public String getServletPath () {
                        return "/index.html";
                    }}

                , servletResponse);
                return;
            }
        }
    }
    filterChain.doFilter (servletRequest, servletResponse);
}
----------------------------------------

@Override
public void doFilter (final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException {
    final HttpServletRequest httpRequest = (HttpServletRequest) request;
    final String pattern = "(^\/pathToMyApp\/$)|(^\/pathToMyApp\/rest\/.*)|(^\/pathToMyApp\/.*\..*)";
    final String baseUri = "/pathToMyApp/";
    if (! httpRequest.getRequestURI ().matches (pattern)) {
        logger.warning ("--------------------------------------------------------------");
        logger.warning ("requestUri: " + httpRequest.getRequestURI ());
        logger.warning ("uri doesn't match regex, redirecting to root");
        HttpServletResponse resp = (HttpServletResponse) response;
        resp.sendRedirect (baseUri);
        logger.warning ("--------------------------------------------------------------");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43490243_43490362_1_17
43490243_43490400_1_20
Title: How to exit while cycle with recursive method inside it? 
----------------------------------------

public static Element findElement (Element current, String nameOfElement) {
    Element searchedElement = null;
    List children = current.getChildren ();
    Iterator iterator = children.iterator ();
    while (iterator.hasNext ()) {
        Element child = (Element) iterator.next ();
        if (child.getName ().equals (nameOfElement)) {
            searchedElement = child;
            System.out.println ("!!!");
            break;
        }
        searchedElement = findElement (child, nameOfElement);
    }
    return searchedElement;
}
----------------------------------------

public static Element findElement (Element current, String nameOfElement) {
    Element searchedElement = null;
    List children = current.getChildren ();
    Iterator iterator = children.iterator ();
    while (iterator.hasNext ()) {
        Element child = (Element) iterator.next ();
        if (child.getName ().equals (nameOfElement)) {
            searchedElement = child;
            System.out.println ("!!!");
            break;
        }
        searchElement = findElement (child, nameOfElement);
        if (searchElement != null) return searchElement;

    }
    return searchedElement;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43491576_43491735_1_20
43491576_43491825_1_20
Title: Sort in Java with data from a database 
----------------------------------------

public Jugador [] buscarDiez () {
    Jugador [] listDiez = new Jugador [9];
    try {
        orden = conexion.createStatement ();
        String sql = "SELECT user, score FROM player ORDER BY score LIMIT 9";
        rs = orden.executeQuery (sql);
        int i = 0;
        Jugador dier;
        while (rs.next ()) {
            dier = new Jugador ();
            diez.setUser (rs.getString ("user"));
            diez.setScore (rs.getInt ("score"));
            listDiez [i] = diez;
            i ++;
        }
    }
    return listDiez;
}
----------------------------------------

public Jugador [] buscarDiez () {
    Jugador [] diez = new Jugador [9];
    try {
        orden = conexion.createStatement ();
        String sql = "SELECT user, score FROM player ORDER BY score LIMIT 9";
        rs = orden.executeQuery (sql);
        int i = 0;
        while (rs.next ()) {
            diez [i] = new Jugador ();
            diez [i].setUser (rs.getString ("user"));
            diez [i].setScore (rs.getInt ("score"));
            i = i + 1;
        }
    }
    return diez;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43501835_43501907_1_17
43501835_43501929_1_12
Title: "Trying to calculate average but I get the error: java.lang.IndexOutOfBoundsException: Index: 1 Size: 1" 
----------------------------------------

public int berekenGemiddeldeScore () {
    int result = 0;
    int i = 0;
    if (deelnemers.size () == 1) {
        return deelnemers.get (0).getScore ();
    }
    while (i < deelnemers.size ()) {
        result += deelnemers.get (i).getScore ();
        i ++;
    }
    return result / deelnemers.size ();
}
----------------------------------------

public int berekenGemiddeldeScore () {
    if (deelnemers.size () == 0) {
        return 0;
    }
    int result = 0;
    for (Score score : deelnemers) {
        result += score.getScore ();
    }
    return result / deelnemers.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4350356_23538961_1_17
4350356_51999191_1_24
Title: Detect if Java application was run as a Windows admin 
----------------------------------------

public static boolean isAdmin () {
    Preferences prefs = Preferences.systemRoot ();
    PrintStream systemErr = System.err;
    synchronized (systemErr) {
        System.setErr (null);
        try {
            prefs.put ("foo", "bar");
            prefs.remove ("foo");
            prefs.flush ();
            return true;
        } catch (Exception e) {
            return false;
        } finally {
            System.setErr (systemErr);
        }
    }
}
----------------------------------------

public static boolean isAdmin () {
    try {
        ProcessBuilder processBuilder = new ProcessBuilder ("cmd.exe");
        Process process = processBuilder.start ();
        PrintStream printStream = new PrintStream (process.getOutputStream (), true);
        Scanner scanner = new Scanner (process.getInputStream ());
        printStream.println ("@echo off");
        printStream.println ("><![CDATA[nul 2>&1 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"");
        printStream.println ("echo %errorlevel%");
        boolean printedErrorlevel = false;
        while (true) {
            String nextLine = scanner.nextLine ();
            if (printedErrorlevel) {
                int errorlevel = Integer.parseInt (nextLine);
                return errorlevel == 0;
            } else if (nextLine.equals ("echo %errorlevel%")) {
                printedErrorlevel = true;
            }

        }
    } catch (IOException e) {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43523056_43523448_1_13
43523056_43533809_1_16
Title: Hibernate5 update only collection many to many relationship 
----------------------------------------

@Override
@Transactional (rollbackFor = StockException.class)
public void addCategoriesToStock (List < Category > categories, Stock stock) throws StockException {
    stock = sessionFactory.getCurrentSession ().get (Stock.class, stock.getCodStock ());
    stock.setCategories (categories);
    for (Category cat : categories) {
        cat.getStocks ().add (stock);
    }
    sessionFactory.getCurrentSession ().merge (stock);
    sessionFactory.getCurrentSession ().flush ();
}
----------------------------------------

@Override
@Transactional (rollbackFor = StockException.class)
public void removeCategoriesToStock (Set < Integer > categoryCodes, Integer codStock) throws StockException {
    Stock stock = sessionFactory.getCurrentSession ().get (Stock.class, codStock);
    if (categoryCodes != null) {
        for (Integer codCategory : categoryCodes) {
            Category category = sessionFactory.getCurrentSession ().get (Category.class, codCategory);
            category.remove (stock);
            stock.remove (category);
        }
    }
    sessionFactory.getCurrentSession ().merge (stock);
    sessionFactory.getCurrentSession ().flush ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43523107_43524135_3_30
43523107_43546848_4_48
Title: how to shift characters to left or right for this specific case? a unique algorithm(fix my algorithm please) 
----------------------------------------

public static void main (String [] args) {
    char [] key = {'M', 'O', 'N', 'C', 'L', 'E', 'T', 'A', 'B', 'D', 'F', 'G', 'H', 'I', 'J', 'K', 'P', 'Q', 'R', 'S', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    char [] old = null;
    char [] [] neww = null;
    String msg = "Fish are birds without wings and birds are fish without fins";
    msg = msg.replace (' ', 'X');
    System.out.println (msg);
    old = msg.toCharArray ();
    neww = new char [msg.length () / 2] [2];
    for (int i = 0;
    i < msg.length () / 2; i = i + 2) {
        {
            neww [i] [0] = old [i];
            neww [i] [1] = old [i + 1];
        }}
    for (int j = 0;
    j < neww.length; j ++) {
        for (int k = 0;
        k < 2; k ++) {
            System.out.print (neww [j] [k] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    char [] key = {'M', 'O', 'N', 'C', 'L', 'E', 'T', 'A', 'B', 'D', 'F', 'G', 'H', 'I', 'J', 'K', 'P', 'Q', 'R', 'S', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    char [] old = null;
    char [] [] neww = null;
    char [] [] ans = null;
    String msg = "Fish are birds without wings and birds are fish without fins";
    msg = msg.toUpperCase ();
    msg = msg.replace (' ', 'X');
    System.out.println (msg);
    old = msg.toCharArray ();
    neww = new char [msg.length () / 2] [2];
    ans = new char [msg.length () / 2] [2];
    for (int i = 0, j = 0;
    i < msg.length (); i = i + 2, j += 1) {
        neww [j] [0] = old [i];
        neww [j] [1] = old [i + 1];
    }
    for (int j = 0;
    j < neww.length; j ++) {
        System.out.print (neww [j] [0] + "" + neww [j] [1] + " ");
    }
    System.out.println ();
    List < Character > cList = new ArrayList < Character > ();
    for (char c : key) {
        cList.add (c);
    }
    for (int j = 0;
    j < neww.length; j ++) {
        int x = (cList.indexOf (neww [j] [1]) + 1) == 26 ? 0 : (cList.indexOf (neww [j] [1]) + 1);
        int y = (cList.indexOf (neww [j] [0]) - 1) == - 1 ? 25 : (cList.indexOf (neww [j] [0]) - 1);
        ans [j] [0] = cList.get (x);
        ans [j] [1] = cList.get (y);
    }
    for (int j = 0;
    j < ans.length; j ++) {
        System.out.print (ans [j] [0] + "" + ans [j] [1] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43529027_43529257_1_20
43529027_43529367_1_25
Title: Java - Turn a string of letters into equivalent words 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Please enter the details of your order");
    String myString = scan.nextLine ();
    char [] myChars = myString.toCharArray ();
    Map < Character, String > map = new HashMap < > ();
    map.put ('a', "apple");
    map.put ('s', "spinache");
    map.put ('d', "dog");
    map.put ('f', "fish");
    map.put ('g', "goat");
    for (int i = 0;
    i < myChars.length; i ++) {
        System.out.print (map.get (myChars [i]) + " ");
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Please enter the details of your order");
    String myList = scan.nextLine ();
    for (int i = 0;
    i < myList.length (); i ++) {
        switch (myList.charAt (i)) {
            case 'a' :
                System.out.println ("Apple");
                break;
            case 's' :
                System.out.println ("Spinach");
                break;
            case 'd' :
                System.out.println ("Dog");
                break;
            case 'f' :
                System.out.println ("Fish");
                break;
            case 'g' :
                System.out.println ("Goat");
                break;
            default :
                System.out.println ("Nothing..");
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43529747_43529968_9_19
43529747_43530607_8_42
Title: Compile Errors Java: Boolean Array Method 
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variable = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variable ++;
        }
    }
    return (variable > (guess.length - variable));
}
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int consecutiveFalseCount = 1;
    int consecutiveTrueCount = 1;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x] == true) {
            if (x != 0 && x < guess.length) {
                if (guess [x - 1] == true) {
                    consecutiveTrueCount = consecutiveTrueCount + 1;
                } else {
                    consecutiveTrueCount = 1;
                }
            }
        } else {
            if (x != 0 && x < guess.length - 1) {
                if (guess [x - 1] == false) {
                    consecutiveFalseCount = consecutiveFalseCount + 1;
                } else {
                    consecutiveFalseCount = 1;
                }
            }
        }
    }
    System.out.println ("Consecutive True count: " + consecutiveTrueCount);
    System.out.println ("Consecutive False count: " + consecutiveFalseCount);
    if (consecutiveTrueCount > consecutiveFalseCount) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43532261_43545950_47_66
43532261_43545950_83_92
Title: Clean way to simplify a binary expression tree 
----------------------------------------

public String repr () {
    String result = "(" + left.repr ();
    switch (operator) {
        case PLUS :
            result += " + ";
            break;
        case MINUS :
            result += " - ";
            break;
        case MUL :
            result += " * ";
            break;
        case DIV :
            result += " / ";
            break;
    }
    result += right.repr () + ")";
    return result;
}
----------------------------------------

public String repr () {
    String result = "";
    switch (operator) {
        case NEGATE :
            result = "-";
            break;
    }
    result += operand.repr ();
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43534441_43534542_14_51
43534441_43534622_1_14
Title: Java: Boolean not returning false to Main method 
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int consecutiveVariableTrue = 0, maxConsecutiveVariableTrue = 0;
    int consecutiveVariableFalse = 0, maxConsecutiveVariableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x] == true) {
            consecutiveVariableTrue ++;
            if (maxConsecutiveVariableTrue < consecutiveVariableTrue) maxConsecutiveVariableTrue = consecutiveVariableTrue;

        } else {
            consecutiveVariableTrue = 0;
        }
    }
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x] == false) {
            consecutiveVariableFalse ++;
            if (maxConsecutiveVariableFalse < consecutiveVariableFalse) maxConsecutiveVariableFalse = consecutiveVariableFalse;

        } else {
            consecutiveVariableFalse = 0;
        }
    }
    if (maxConsecutiveVariableTrue >= maxConsecutiveVariableFalse) {
        return true;
    }
    return false;
}
----------------------------------------

public static boolean longerTF (boolean [] guess) {
    int variableTrue = 0;
    int variableFalse = 0;
    for (int x = 0;
    x < guess.length; x ++) {
        if (guess [x]) {
            variableTrue ++;
        } else {
            variableFalse ++;
        }
    }
    return variableTrue >= variableFalse;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43540858_43540982_1_17
43540858_43541306_1_15
Title: "Writing to File Stream Closed error Java" 
----------------------------------------

public void writeGridToFile () throws IOException {
    FileWriter fw = new FileWriter ("D:/GridArrayFile.txt");
    BufferedWriter bw = new BufferedWriter (fw);
    try {
        for (int i = 0;
        i < 100; i ++) {
            bw.write (GridArray [i]);
        }
    } catch (IOException e) {
        e.printStackTrace ();
        System.out.println ("Error");
    } finally {
        bw.close ();
        System.out.println ("Finished");
    }
}
----------------------------------------

public void writeGridToFile () throws IOException {
    try (BufferedWriter bw = new BufferedWriter (new FileWriter ("D:/GridArrayFile.txt"))) {
        for (int i = 0;
        i < 100; i ++) {
            bw.write (Integer.toString (GridArray [i]));
        }
        bw.flush ();
    } catch (IOException e) {
        e.printStackTrace ();
        System.out.println ("Error");
    } finally {
        System.out.println ("Finished");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43549086_43549442_23_38
43549086_43549442_51_67
Title: illegalMonitorException while printing odd even numbers using 2 different threads 
----------------------------------------

public void run () {
    while (num.get () < 100) {
        try {
            synchronized (num) {
                if (num.get () % 2 == 0) {
                    num.wait ();
                }
                System.out.println (num);
                num.getAndIncrement ();
                num.notifyAll ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (num.get () <= 100) {
        try {
            synchronized (num) {
                if (num.get () % 2 != 0) {
                    num.wait ();
                }
                System.out.println (num);
                num.getAndIncrement ();
                num.notifyAll ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43559366_43559472_5_15
43559366_43559615_1_11
Title: Remove Even Elements after their Addition in an ArrayList and return modified ArrayList 
----------------------------------------

public static int processArray (ArrayList < Integer > array) {
    int sum = 0;
    for (int i = 0;
    i < array.size (); i ++) {
        if (array.get (i) % 2 == 0) {
            sum += array.get (i);
            array.remove (i);
        }
    }
    return sum;
}
----------------------------------------

public static ArrayList < Integer > processArray (ArrayList < Integer > array) {
    for (int i = 0;
    i < array.size () - 1; i ++) {
        if (array.get (i) % 2 == 0 && array.get (i + 1) % 2 == 0) {
            int sum = array.get (i) + array.get (i + 1);
            array.set (i, sum);
            array.remove (i + 1);
            i --;
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43560879_43641615_111_125
43560879_43641615_138_148
Title: Telnet vbs into Java 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    boolean ok = false;
    if (! textFieldwriteip.getText ().isEmpty ()) {
        if (chckbxmntmCO.isSelected ()) {
            ok = connect ("192.168.0.254");
        } else {
            if (chckbxmntmCPE.isSelected ()) {
                ok = connect3 ("192.168.0.254");
            }
        }
        if (ok) JOptionPane.showMessageDialog (null, "Configuration Set");

    } else {
        JOptionPane.showMessageDialog (null, "Write the wanted IP-adress for your modem");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    boolean ok = false;
    if (! textFieldwriteip.getText ().isEmpty ()) {
        ok = connect2 (textFieldwriteip.getText ());
        if (ok) JOptionPane.showMessageDialog (null, "Configuration Saved");

        if (ok) txtInfo.setText ("Press APPLY to save configuration");

    } else {
        JOptionPane.showMessageDialog (null, "Write the wanted IP-adress for your modem");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43561312_43561434_9_19
43561312_43561464_6_18
Title: i have this assignment on java i am not sure if i am doing this right 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    for (int i = 1;
    i <= 3; i ++, System.out.println ()) {
        System.out.println ("For Employee Number: " + i);
        System.out.println ("Enter Base Pay:");
        basePay = in.nextDouble ();
        System.out.println ("Enter Hours Worked:");
        hoursWorked = in.nextInt ();
        salaryCalculation ();
    }
}
----------------------------------------

public static void main (String [] args) {
    float x;
    int y;
    x = 7.5f;
    y = 35;
    salaryCalculation (x, y);
    x = 8.2f;
    y = 47;
    salaryCalculation (x, y);
    x = 10.0f;
    y = 73;
    salaryCalculation (x, y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43568000_43568109_5_47
43568000_43568153_1_29
Title: How to validate these inputs? 
----------------------------------------

public static void main (String [] args) {
    Calculate cal = new Calculate ();
    Scanner input = new Scanner (System.in);
    int number1 = 0;
    int number2 = 0;
    boolean numberTaken = false;
    while (! numberTaken) {
        System.out.print ("Enter number1 : ");
        String ip = input.next ();
        try {
            number1 = Integer.parseInt (ip);
            numberTaken = true;
        } catch (Exception e) {
            System.out.println ("Wrong Number!");
        }
    }
    numberTaken = false;
    while (! numberTaken) {
        System.out.print ("Enter number2 : ");
        String ip = input.next ();
        try {
            number2 = Integer.parseInt (ip);
            numberTaken = true;
        } catch (Exception e) {
            System.out.println ("Wrong Number!");
        }
    }
    cal.setNumbers (number1, number2);
    cal.result ();
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Calculate cal = new Calculate ();
    Scanner input = new Scanner (System.in);
    int number1 = 0;
    int number2 = 0;
    boolean isNumber = false;
    do {
        try {
            System.out.println ("enter number1 please : ");
            if (input.hasNextLine ()) {
                number1 = verifyAndGetNumber (input.nextLine ());
            }
            System.out.println ("enter number2 please : ");
            if (input.hasNextLine ()) {
                number2 = verifyAndGetNumber (input.nextLine ());
            }
            isNumber = true;
        } catch (Exception e) {
            System.out.println (e.getMessage ());
        }
    } while (! isNumber);
    cal.setNumbers (number1, number2);
    cal.result ();
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43568666_43568894_3_35
43568666_43569113_9_24
Title: Java: How to read multiple scanner values for one int 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    int radius = 0;
    int height = 0;
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    int [] numbers;
    if (items.length % 2 == 0) {
        numbers = new int [items.length];
        for (int i = 0;
        i < items.length; i ++) {
            numbers [i] = Integer.parseInt (items [i]);
        }
        for (int i = 0, j = - 1;
        i < numbers.length / 2; i ++) {
            radius = numbers [++ j];
            height = numbers [++ j];
            System.out.println ("radius: " + radius + " height: " + height);
        }
    } else {
        System.out.println ("Incorrect input provided");
    }
    keyboard.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    Crate [] numbers = new Crate [items.length];
    for (int i = 0;
    i < items.length; i ++) {
        numbers [i].radius = Integer.parseInt (items [i * 2]);
        numbers [i].height = Integer.parseInt (items [i * 2 + 1]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43568666_43568894_3_35
43568666_43570130_19_51
Title: Java: How to read multiple scanner values for one int 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    int radius = 0;
    int height = 0;
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    int [] numbers;
    if (items.length % 2 == 0) {
        numbers = new int [items.length];
        for (int i = 0;
        i < items.length; i ++) {
            numbers [i] = Integer.parseInt (items [i]);
        }
        for (int i = 0, j = - 1;
        i < numbers.length / 2; i ++) {
            radius = numbers [++ j];
            height = numbers [++ j];
            System.out.println ("radius: " + radius + " height: " + height);
        }
    } else {
        System.out.println ("Incorrect input provided");
    }
    keyboard.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    Integer [] integers = processItems (items);
    InputPair [] values = new InputPair [integers.length];
    System.out.println (Arrays.toString (items));
    System.out.println ("items length:  " + items.length);
    System.out.println (Arrays.toString (integers));
    System.out.println ("items length:  " + integers.length);
    if (integers.length % 2 == 0) {
        for (int i = 0;
        i < integers.length / 2; i ++) {
            System.out.print ("Index:  " + i + " ");
            try {
                values [i] = new InputPair ();
                values [i].radius = integers [i * 2];
                values [i].height = integers [i * 2 + 1];
                values [i].printValues ();
            } catch (NullPointerException ne) {
                System.out.println ("Error NullPointerException");
            }
        }
    } else {
        System.out.println ("The number of values bust be an even number. ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43568666_43569113_9_24
43568666_43570130_19_51
Title: Java: How to read multiple scanner values for one int 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    Crate [] numbers = new Crate [items.length];
    for (int i = 0;
    i < items.length; i ++) {
        numbers [i].radius = Integer.parseInt (items [i * 2]);
        numbers [i].height = Integer.parseInt (items [i * 2 + 1]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter values ");
    String input = keyboard.nextLine ();
    String [] items = input.split (" ");
    Integer [] integers = processItems (items);
    InputPair [] values = new InputPair [integers.length];
    System.out.println (Arrays.toString (items));
    System.out.println ("items length:  " + items.length);
    System.out.println (Arrays.toString (integers));
    System.out.println ("items length:  " + integers.length);
    if (integers.length % 2 == 0) {
        for (int i = 0;
        i < integers.length / 2; i ++) {
            System.out.print ("Index:  " + i + " ");
            try {
                values [i] = new InputPair ();
                values [i].radius = integers [i * 2];
                values [i].height = integers [i * 2 + 1];
                values [i].printValues ();
            } catch (NullPointerException ne) {
                System.out.println ("Error NullPointerException");
            }
        }
    } else {
        System.out.println ("The number of values bust be an even number. ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571710_1_11
43571606_43571712_1_14
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571710_1_11
43571606_43571716_3_13
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {1, 2, 3, 4, 5};
    for (int i = 1;
    i < 5; i ++) {
        arr [i] = factorial (i);
    }
    for (int i = 1;
    i < 5; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571710_1_11
43571606_43571727_4_17
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [6];
    for (int i = 1;
    i < 6; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571712_1_14
43571606_43571716_3_13
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {1, 2, 3, 4, 5};
    for (int i = 1;
    i < 5; i ++) {
        arr [i] = factorial (i);
    }
    for (int i = 1;
    i < 5; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571712_1_14
43571606_43571727_4_17
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i + 1; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [6];
    for (int i = 1;
    i < 6; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43571606_43571716_3_13
43571606_43571727_4_17
Title: java for loop storing factorial in array 
----------------------------------------

public static void main (String [] args) {
    int arr [] = {1, 2, 3, 4, 5};
    for (int i = 1;
    i < 5; i ++) {
        arr [i] = factorial (i);
    }
    for (int i = 1;
    i < 5; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int factorialA [] = new int [6];
    for (int i = 1;
    i < 6; i ++) {
        int factorial = 1;
        for (int j = 1;
        j <= i; j ++) {
            factorial = factorial * j;
        }
        factorialA [i] = factorial;
    }
    System.out.println (factorialA [3]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4357297_4357318_104_116
4357297_4357331_92_100
Title: Use of Vectors in java 
----------------------------------------

public boolean equals (Object o) {
    Prefix p = (Prefix) o;
    for (int i = 0;
    i < pref.size (); i ++) {
        if (! pref.elementAt (i).equals (p.pref.elementAt (i))) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public boolean equals (final Object o) {
    final Prefix p = (Prefix) o;
    for (int i = 0;
    i < this.pref.size (); i ++) {
        if (! this.pref.elementAt (i).equals (p.pref.elementAt (i))) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4357297_4357318_126_149
4357297_4357331_109_128
Title: Use of Vectors in java 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new FileReader ("../alice30.txt"));
    PrintWriter out = new PrintWriter (new FileWriter ("../output/markov_java_out.txt"));
    BufferedReader random_reader = new BufferedReader (new FileReader ("../random_num.txt"));
    String s;
    s = random_reader.readLine ();
    while (s != null) {
        int element = Integer.parseInt (s.trim ());
        random_num.addElement (new Integer (element));
        s = random_reader.readLine ();
    }
    Chain chain = new Chain ();
    int nwords = MAXGEN;
    chain.build (in);
    in.close ();
    chain.generate (nwords, out, random_num);
    out.close ();
}
----------------------------------------

public static void main (final String [] args) throws IOException {
    final BufferedReader in = new BufferedReader (new FileReader ("../alice30.txt"));
    final PrintWriter out = new PrintWriter (new FileWriter ("../output/markov_java_out.txt"));
    final BufferedReader random_reader = new BufferedReader (new FileReader ("../random_num.txt"));
    String s;
    s = random_reader.readLine ();
    while (s != null) {
        final int element = Integer.parseInt (s.trim ());
        random_num.add (new Integer (element));
        s = random_reader.readLine ();
    }
    final Chain chain = new Chain ();
    final int nwords = MAXGEN;
    chain.build (in);
    in.close ();
    chain.generate (nwords, out, random_num);
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4357297_4357318_32_43
4357297_4357331_31_40
Title: Use of Vectors in java 
----------------------------------------

void add (String word) {
    Vector suf = (Vector) statetab.get (prefix);
    if (suf == null) {
        suf = new Vector ();
        statetab.put (new Prefix (prefix), suf);
    }
    suf.addElement (word);
    prefix.pref.removeElementAt (0);
    prefix.pref.addElement (word);
}
----------------------------------------

void add (final String word) {
    Vector < String > suf = this.statetab.get (this.prefix);
    if (suf == null) {
        suf = new Vector < String > ();
        this.statetab.put (new Prefix (this.prefix), suf);
    }
    suf.addElement (word);
    this.prefix.pref.removeElementAt (0);
    this.prefix.pref.addElement (word);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4357297_4357318_46_67
4357297_4357331_43_60
Title: Use of Vectors in java 
----------------------------------------

void generate (int nwords, PrintWriter out, Vector random_num) {
    prefix = new Prefix (NPREF, NONWORD);
    for (int i = 0;
    i < nwords; i ++) {
        Vector s = (Vector) statetab.get (prefix);
        if (s == null) {
            System.err.println ("Markov: internal error: no state");
            System.exit (1);
        }
        int r = ((Integer) random_num.get (i) % s.size ());
        String suf = (String) s.elementAt (r);
        if (suf.equals (NONWORD)) {
            break;
        }
        out.println (suf);
        prefix.pref.removeElementAt (0);
        prefix.pref.addElement (suf);
    }
}
----------------------------------------

void generate (final int nwords, final PrintWriter out, final List < Integer > random_num) {
    this.prefix = new Prefix (NPREF, NONWORD);
    for (int i = 0;
    i < nwords; i ++) {
        final Vector < String > s = this.statetab.get (this.prefix);
        if (s == null) {
            System.err.println ("Markov: internal error: no state");
            System.exit (1);
        }
        final int r = (random_num.get (i) % s.size ());
        final String suf = (String) s.elementAt (r);
        if (suf.equals (NONWORD)) {
            break;
        }
        out.println (suf);
        this.prefix.pref.removeElementAt (0);
        this.prefix.pref.addElement (suf);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43576295_43577380_32_46
43576295_43577380_52_70
Title: How to calculate a total depending on what a user seletcs in the combobox? 
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("Intel Core i3")) {
        _processorPrice = 0;
    } else if (e.getItem ().equals ("Intel Core i5")) {
        _processorPrice = 50;
    } else if (e.getItem ().equals ("Intel Core i7")) {
        _processorPrice = 150;
    }

}
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("4GB")) {
        _memoryPrice = 0;
    } else if (e.getItem ().equals ("8GB")) {
        _memoryPrice = 50;
    } else if (e.getItem ().equals ("16GB")) {
        _memoryPrice = 100;
    } else if (e.getItem ().equals ("32GB")) {
        _memoryPrice = 150;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43576295_43577380_32_46
43576295_43577380_76_90
Title: How to calculate a total depending on what a user seletcs in the combobox? 
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("Intel Core i3")) {
        _processorPrice = 0;
    } else if (e.getItem ().equals ("Intel Core i5")) {
        _processorPrice = 50;
    } else if (e.getItem ().equals ("Intel Core i7")) {
        _processorPrice = 150;
    }

}
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("1TB")) {
        _diskPrice = 0;
    } else if (e.getItem ().equals ("2TB")) {
        _diskPrice = 50;
    } else if (e.getItem ().equals ("512GB SSD")) {
        _diskPrice = 150;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43576295_43577380_52_70
43576295_43577380_76_90
Title: How to calculate a total depending on what a user seletcs in the combobox? 
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("4GB")) {
        _memoryPrice = 0;
    } else if (e.getItem ().equals ("8GB")) {
        _memoryPrice = 50;
    } else if (e.getItem ().equals ("16GB")) {
        _memoryPrice = 100;
    } else if (e.getItem ().equals ("32GB")) {
        _memoryPrice = 150;
    }

}
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    if (e.getItem ().equals ("1TB")) {
        _diskPrice = 0;
    } else if (e.getItem ().equals ("2TB")) {
        _diskPrice = 50;
    } else if (e.getItem ().equals ("512GB SSD")) {
        _diskPrice = 150;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43576901_43577021_1_19
43576901_43577051_1_23
Title: Get second number from this line of text too 
----------------------------------------

public static String extractNumber1 (final String line) {
    String str = "cows 40 1,600,077.17 1,000.00 23 70";
    if (str == null || str.isEmpty ()) return "";

    StringBuilder sb = new StringBuilder ();
    int found = 0;
    for (char c : str.toCharArray ()) {
        if (Character.isDigit (c)) {
            sb.append (c);
            found ++;
        }
        if (found == 2) {
            break;
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String extractNumber1 (final String line) {
    String str = "cows 40 1,600,077.17 1,000.00 23 70";
    if (str == null || str.isEmpty ()) return "";

    String [] parts = str.split (" ");
    StringBuilder sb = new StringBuilder ();
    int found = 0;
    int i = 0;
    while (i < parts.length && found < 2) {
        try {
            long x = Long.parseLong (parts [i]);
            found ++;
            sb.append (parts [i]);
        } catch (Exception e) {
        } finally {
            i ++;
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43599066_43599436_3_34
43599066_43599807_3_22
Title: Prime Number Correction (2 Arrays) 
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [100];
    int num = 0;
    int [] result = new int [100];
    for (int i = 1;
    i <= array.length; i ++) {
        int counter = 0;
        for (num = i; num >= 1; num --) {
            if (i % num == 0) {
                counter = counter + 1;
            }
        }
        if (counter == 2) {
            result [i] = i;
        }
    }
    for (int j = 2;
    j <= array.length; j ++) {
        if (result [j] != 0) {
            System.out.println (result [j]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [100];
    int [] result = new int [array.length];
    int aLength = array.length;
    for (int i = 2;
    i < aLength; i ++) {
        if (isPrime (i)) {
            result [i] = i;
            System.out.println (i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43614449_43614540_1_11
43614449_43615206_1_10
Title: "I want to write a generic function where for these valid date format MM/dd/yyyy M/dd/yyyy or M/d/yyyy function return true" 
----------------------------------------

public static boolean isValidDateFormat (String value, String...formats) {
    for (String format : formats) {
        SimpleDateFormat sdf = new SimpleDateFormat (format);
        Date date = sdf.parse (value);
        if (value != null && value.equals (sdf.format (date))) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean isValidDateFormat (String value) {
    String [] sa = value.split ("/");
    if (sa [2].length () != 4) return false;

    try {
        LocalDate.of (Integer.parseInt (sa [2]), Integer.parseInt (sa [0]), Integer.parseInt (sa [1]));
    } catch (DateTimeException e) {
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43615781_43615986_1_19
43615781_43618345_1_17
Title: my program is not printing the expected output 
----------------------------------------

private static String extract_Digits_Stack (String inputString) {
    String [] arrString = new StringBuilder (inputString).reverse ().toString ().split ("");
    Stack < String > stack = new Stack < String > ();
    for (String input : arrString) {
        stack.push (input);
    }
    StringBuilder builder = new StringBuilder ();
    builder.append ("your digits are: ");
    for (int i = 0;
    i < inputString.length (); i ++) {
        if (i == inputString.length () - 1) builder.append (" and ");

        builder.append (stack.pop ());
        if (i < inputString.length () - 2) builder.append (",");

    }
    return builder.toString ();
}
----------------------------------------

private static String extract_Digits_Stack (String inputString) {
    String [] arrString = inputString.split ("");
    Stack < String > stack = new Stack < String > ();
    for (String input : arrString) {
        stack.push (input);
    }
    StringBuilder builder = new StringBuilder ();
    builder.append ("The digits are: ");
    while (! stack.empty ()) {
        builder.append (stack.pop () + ",");
    }
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43620487_44145738_1_18
43620487_44145914_1_30
Title: Why is Arrays.binarySearch not improving the performance compared to walking the array? 
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("input.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    scanner.close ();
    final int rounds = 400;
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final int transmitterRange = 73381;
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < rounds; i ++) {
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds..");
}
----------------------------------------

static void test_02 () throws FileNotFoundException {
    final File file = new File ("43620487.txt");
    final Scanner scanner = new Scanner (file);
    int [] houseLocations = new int [73382];
    for (int counter = 0;
    counter < 73382; counter ++) {
        houseLocations [counter] = scanner.nextInt ();
    }
    final int [] uniqueHouseLocationsSorted = uniqueHouseLocationsSorted (houseLocations);
    final Random random = new Random (0);
    long sum = 0;
    for (int i = 0;
    i < 100; i ++) {
        final int transmitterRange = random.nextInt (70000) + 1;
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
        sum += minNumOfTransmitters;
    }
    final long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 4000; i ++) {
        final int transmitterRange = random.nextInt (70000) + 1;
        final int minNumOfTransmitters = minNumOfTransmitters (uniqueHouseLocationsSorted, transmitterRange);
        sum += minNumOfTransmitters;
    }
    final long end = System.currentTimeMillis ();
    System.out.println ("Took: " + (end - start) + " milliseconds. Sum = " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43620487_44262738_1_14
43620487_44316717_1_22
Title: Why is Arrays.binarySearch not improving the performance compared to walking the array? 
----------------------------------------

public static int [] uniqueHouseLocationsSorted (final int [] houseLocations) {
    final Set < Integer > integers = new TreeSet < > ();
    for (int houseLocation : houseLocations) {
        integers.add (houseLocation);
    }
    int [] unique = new int [integers.size ()];
    int i = 0;
    for (Integer loc : integers) {
        unique [i] = loc;
        i ++;
    }
    return unique;
}
----------------------------------------

public static int [] uniqueHouseLocationsSorted (final int [] houseLocations) {
    int size = houseLocations.length;
    if (size == 0) return null;

    Arrays.sort (houseLocations);
    final int [] houseLocationsUnique = new int [size];
    int previous = houseLocationsUnique [0] = houseLocations [0];
    int innerCounter = 1;
    for (int i = 1;
    i < size; i ++) {
        int houseLocation = houseLocations [i];
        if (houseLocation == previous) continue;

        previous = houseLocationsUnique [innerCounter ++] = houseLocation;
    }
    return Arrays.copyOf (houseLocationsUnique, innerCounter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43631509_43649907_107_121
43631509_43649907_77_91
Title: I need to convert a part of HTML page and part of data from java to a single PDF for production.How it can be achieved? 
----------------------------------------

public void handleEvent (Event event) {
    PdfDocumentEvent docEvent = (PdfDocumentEvent) event;
    PdfDocument pdf = docEvent.getDocument ();
    PdfPage page = docEvent.getPage ();
    int pageNumber = pdf.getPageNumber (page);
    Rectangle pageSize = page.getPageSize ();
    PdfCanvas pdfCanvas = new PdfCanvas (page.getLastContentStream (), page.getResources (), pdf);
    Canvas canvas = new Canvas (pdfCanvas, pdf, pageSize);
    Paragraph p = new Paragraph ().add ("Page ").add (String.valueOf (pageNumber)).add (" of");
    canvas.showTextAligned (p, x, y, TextAlignment.RIGHT);
    pdfCanvas.addXObject (placeholder, x + space, y - descent);
    pdfCanvas.release ();
}
----------------------------------------

public void handleEvent (Event event) {
    PdfDocumentEvent docEvent = (PdfDocumentEvent) event;
    PdfDocument pdf = docEvent.getDocument ();
    PdfPage page = docEvent.getPage ();
    Rectangle pageSize = page.getPageSize ();
    PdfCanvas pdfCanvas = new PdfCanvas (page.getLastContentStream (), page.getResources (), pdf);
    Canvas canvas = new Canvas (pdfCanvas, pdf, pageSize);
    canvas.setFontSize (18f);
    canvas.showTextAligned (header, pageSize.getWidth () / 2, pageSize.getTop () - 30, TextAlignment.CENTER);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4363665_16650314_5_25
4363665_44499371_4_15
Title: Hashmap implementation to count the occurences of each character 
----------------------------------------

public static void main (String [] args) {
    String str = "ramakoteswararao";
    char [] char_array = str.toCharArray ();
    System.out.println ("The Given String is : " + str);
    Map < Character, Integer > charCounter = new TreeMap < Character, Integer > ();
    for (char i : char_array) {
        charCounter.put (i, charCounter.get (i) == null ? 1 : charCounter.get (i) + 1);
    }
    for (Character key : charCounter.keySet ()) {
        System.out.println ("occurrence of '" + key + "' is  " + charCounter.get (key));
    }
}
----------------------------------------

public static void main (String [] args) {
    TreeMap < String, Integer > mp = new TreeMap ();
    String s = "rain rain go away";
    String [] arr = s.split (" ");
    int length = arr.length;
    for (int i = 0;
    i < length; i ++) {
        String h = arr [i];
        mp.put (h, mp.get (h) == null ? 1 : mp.get (h) + 1);
    }
    System.out.println (mp.get ("go"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4363665_16650314_5_25
4363665_48496980_4_24
Title: Hashmap implementation to count the occurences of each character 
----------------------------------------

public static void main (String [] args) {
    String str = "ramakoteswararao";
    char [] char_array = str.toCharArray ();
    System.out.println ("The Given String is : " + str);
    Map < Character, Integer > charCounter = new TreeMap < Character, Integer > ();
    for (char i : char_array) {
        charCounter.put (i, charCounter.get (i) == null ? 1 : charCounter.get (i) + 1);
    }
    for (Character key : charCounter.keySet ()) {
        System.out.println ("occurrence of '" + key + "' is  " + charCounter.get (key));
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "STACKOVERFLOW";
    char [] char_array = str.toCharArray ();
    System.out.println ("The Given String is : " + str);
    Map < Character, Integer > charCounter = new TreeMap < Character, Integer > ();
    for (char i : char_array) {
        charCounter.put (i, charCounter.get (i) == null ? 1 : charCounter.get (i) + 1);
    }
    for (Character key : charCounter.keySet ()) {
        System.out.println ("occurrence of '" + key + "' is  " + charCounter.get (key));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4363665_44499371_4_15
4363665_48496980_4_24
Title: Hashmap implementation to count the occurences of each character 
----------------------------------------

public static void main (String [] args) {
    TreeMap < String, Integer > mp = new TreeMap ();
    String s = "rain rain go away";
    String [] arr = s.split (" ");
    int length = arr.length;
    for (int i = 0;
    i < length; i ++) {
        String h = arr [i];
        mp.put (h, mp.get (h) == null ? 1 : mp.get (h) + 1);
    }
    System.out.println (mp.get ("go"));
}
----------------------------------------

public static void main (String [] args) {
    String str = "STACKOVERFLOW";
    char [] char_array = str.toCharArray ();
    System.out.println ("The Given String is : " + str);
    Map < Character, Integer > charCounter = new TreeMap < Character, Integer > ();
    for (char i : char_array) {
        charCounter.put (i, charCounter.get (i) == null ? 1 : charCounter.get (i) + 1);
    }
    for (Character key : charCounter.keySet ()) {
        System.out.println ("occurrence of '" + key + "' is  " + charCounter.get (key));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43637475_43637507_15_27
43637475_43637783_3_15
Title: setOnClickListener shows error 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_signup);
    getSupportActionBar ().setTitle ("Sign up");
    EditText edittext = (EditText) findViewById (R.id.etfn);
    Button button = (Button) findViewById (R.id.breg);
    button.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_signup);
    getSupportActionBar ().setTitle ("Sign up");
    EditText edittext = (EditText) findViewById (R.id.etfn);
    Button button = (Button) findViewById (R.id.breg);
    button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43637475_43637507_15_27
43637475_43641188_4_16
Title: setOnClickListener shows error 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_signup);
    getSupportActionBar ().setTitle ("Sign up");
    EditText edittext = (EditText) findViewById (R.id.etfn);
    Button button = (Button) findViewById (R.id.breg);
    button.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_signup);
    getSupportActionBar ().setTitle ("Sign up");
    EditText edittext = (EditText) findViewById (R.id.etfn);
    Button button = (Button) findViewById (R.id.breg);
    button.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43647060_43655674_6_57
43647060_43660637_8_59
Title: When the loop comes to a continue statement at the end it doesn't restart from the top 
----------------------------------------

public static void main (String [] args) {
    double money = 1000;
    System.out.println ("Welcom To Craps You Start With 1000$!!!");
    int play = 1;
    char yesNo;
    while (money > 0 && play == 1) {
        System.out.print ("Please Enter The Amount You Want To Bet: ");
        double bet = kin.nextDouble ();
        while ((bet <= money || bet > 0)) {
            do {
                if (money < bet || bet < 0) {
                    System.out.print ("Sorry Invalid Bet; Please Enter A Legitimant Bet: ");
                    bet = kin.nextDouble ();
                }
            } while (bet > money || bet < 0);
            money -= bet;
            System.out.println ("You Have Bet $" + bet + " And Have " + money + " Left");
            int die1 = (1 + (int) (6 * Math.random ()));
            int die2 = (1 + (int) (3 * Math.random ()));
            int sum = die1 + die2;
            System.out.println ("You Rolled " + die1 + " and " + die2 + " totaling " + sum);
            System.out.print ("Do You Want To Play Again(y) Or Not(n): ");
            yesNo = kin.next ().charAt (0);
            int loopBreak = 0;
            do {
                if (yesNo == 'y') {
                    System.out.println ("Restarting...");
                    loopBreak ++;
                    continue;
                } else if (yesNo == 'n') {
                    System.out.println ("Thank You For Playing");
                    play --;
                    break;
                } else {
                    System.out.println ("Please Enter 'y' Or 'n': ");
                }

            } while (loopBreak == 0);
            if (play == 0 || loopBreak == 1) {
                break;
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    double money = 1000;
    System.out.println ("Welcom To Craps You Start With 1000$!!!");
    int play = 1;
    char yesNo;
    start : while (money > 0 && play == 1) {
        System.out.print ("Please Enter The Amount You Want To Bet: ");
        double bet = kin.nextDouble ();
        while ((bet <= money || bet > 0)) {
            do {
                if (money < bet || bet < 0) {
                    System.out.print ("Sorry Invalid Bet; Please Enter A Legitimant Bet: ");
                    bet = kin.nextDouble ();
                }
            } while (bet > money || bet < 0);
            money -= bet;
            System.out.println ("You Have Bet $" + bet + " And Have " + money + " Left");
            int die1 = (1 + (int) (6 * Math.random ()));
            int die2 = (1 + (int) (3 * Math.random ()));
            int sum = die1 + die2;
            System.out.println ("You Rolled " + die1 + " and " + die2 + " totaling " + sum);
            System.out.print ("Do You Want To Play Again(y) Or Not(n)");
            yesNo = kin.next ().charAt (0);
            int loopBreak = 0;
            do {
                if (yesNo == 'y') {
                    System.out.println ("Restarting...");
                    loopBreak += 1;
                    continue start;
                } else if (yesNo == 'n') {
                    System.out.println ("Thank You For Playing");
                    play -= 1;
                    break;
                } else {
                    System.out.println ("Please Enter 'y' Or 'n'");
                }

            } while (loopBreak == 0);
            if (play == 0) {
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43650478_43650546_1_12
43650478_43650900_1_11
Title: Dividing a string into groups of four 
----------------------------------------

public static void main (String args []) {
    String str = "AbrAcadAbRa";
    int length = 4;
    String subString = "";
    for (int i = 0;
    i < str.length () - length + 1; i ++) {
        subString = str.substring (i, i + length);
        System.out.println (subString);
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "AbrAcadAbRa";
    int len = str.length ();
    int length = 4;
    String subString = "";
    for (int j = 0;
    j < len - 3; j ++) {
        subString = str.substring (j, j + 4);
        System.out.println (subString);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43650478_43650546_1_12
43650478_43651208_5_19
Title: Dividing a string into groups of four 
----------------------------------------

public static void main (String args []) {
    String str = "AbrAcadAbRa";
    int length = 4;
    String subString = "";
    for (int i = 0;
    i < str.length () - length + 1; i ++) {
        subString = str.substring (i, i + length);
        System.out.println (subString);
    }
}
----------------------------------------

public static void main (String args []) {
    String str = "AbrAcadAbRa";
    String newstr = str;
    String sub;
    int length = 4;
    for (int i = 0;
    i < str.length () - 3; i ++) {
        sub = newstr.substring (0, length);
        newstr = newstr.substring (1, newstr.length ());
        System.out.println (sub);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43650478_43650900_1_11
43650478_43651208_5_19
Title: Dividing a string into groups of four 
----------------------------------------

public static void main (String [] args) {
    String str = "AbrAcadAbRa";
    int len = str.length ();
    int length = 4;
    String subString = "";
    for (int j = 0;
    j < len - 3; j ++) {
        subString = str.substring (j, j + 4);
        System.out.println (subString);
    }
}
----------------------------------------

public static void main (String args []) {
    String str = "AbrAcadAbRa";
    String newstr = str;
    String sub;
    int length = 4;
    for (int i = 0;
    i < str.length () - 3; i ++) {
        sub = newstr.substring (0, length);
        newstr = newstr.substring (1, newstr.length ());
        System.out.println (sub);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43661454_43661870_1_15
43661454_43662116_1_12
Title: Returning the index of the n-th highest value of an unsorted list 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {1, 4, 2, 3};
    int [] sorted = sortedCopy (arr);
    int choice = randomNumGenerator.nextInt (100) + 1;
    if (choice <= intelligence) {
        System.out.println (findIndex (arr, sorted [3]));
    } else if (choice <= intelligence * 2) {
        System.out.println (findIndex (arr, sorted [2]));
    } else if (choice <= intelligence * 3) {
        System.out.println (findIndex (arr, sorted [1]));
    } else {
        System.out.println (findIndex (arr, sorted [0]));
    }

}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = new int [] {5, 9, 1, 4};
    int n = 2;
    for (int i = 0;
    i < n - 1; ++ i) {
        int maxIndex = findMaxIndex (numbers);
        numbers [maxIndex] = Integer.MIN_VALUE;
    }
    int maxIndex = findMaxIndex (numbers);
    System.out.println (maxIndex + " -> " + numbers [maxIndex]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43662311_43662731_4_14
43662311_43662848_2_12
Title: How to do inter thread communication inside static synchronized block 
----------------------------------------

synchronized static void printTest (int n) {
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println (n * i);
    }
    try {
        Test.class.notify ();
    } catch (Exception ignored) {
    }
}
----------------------------------------

synchronized static void printTest (int n) {
    for (int i = 1;
    i <= 10; i ++) {
        if (Thread.interrupted ()) break;

        System.out.println (n * i);
        try {
            Thread.sleep (400);
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_10090258_1_13
4367260_17148317_3_19
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    int len = str.length ();
    int i, j;
    j = len - 1;
    for (i = 0; i <= (len - 1) / 2; i ++) {
        if (str.charAt (i) != str.charAt (j)) return false;

        j --;
    }
    return true;
}
----------------------------------------

public static String isPalindrome (String pal) {
    if (pal.length () == 1) {
        return pal;
    } else {
        String tmp = "";
        tmp = tmp + pal.charAt (pal.length () - 1) + isPalindrome (pal.substring (0, pal.length () - 1));
        return tmp;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_10090258_1_13
4367260_38534574_1_14
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    int len = str.length ();
    int i, j;
    j = len - 1;
    for (i = 0; i <= (len - 1) / 2; i ++) {
        if (str.charAt (i) != str.charAt (j)) return false;

        j --;
    }
    return true;
}
----------------------------------------

private static boolean isPalindrome (String str, int left, int right) {
    if (left >= right) {
        return true;
    } else {
        if (str.charAt (left) == str.charAt (right)) {
            return isPalindrome (str, ++ left, -- right);
        } else {
            return false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_10090258_1_13
4367260_40877623_1_31
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    int len = str.length ();
    int i, j;
    j = len - 1;
    for (i = 0; i <= (len - 1) / 2; i ++) {
        if (str.charAt (i) != str.charAt (j)) return false;

        j --;
    }
    return true;
}
----------------------------------------

static boolean isPalindrome (String sentence) {
    int length = sentence.length ();
    if (length >= 1) return true;
    else {
        char first = Character.toLowerCase (sentence.charAt (0));
        char last = Character.toLowerCase (sentence.charAt (length - 1));
        if (Character.isLetter (first) && Character.isLetter (last)) {
            if (first == last) {
                String shorter = sentence.substring (1, length - 1);
                return isPalindrome (shorter);
            } else {
                return false;
            }
        } else if (! Character.isLetter (last)) {
            String shorter = sentence.substring (0, length - 1);
            return isPalindrome (shorter);
        } else {
            String shorter = sentence.substring (1);
            return isPalindrome (shorter);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_10090258_1_13
4367260_51968249_13_25
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    int len = str.length ();
    int i, j;
    j = len - 1;
    for (i = 0; i <= (len - 1) / 2; i ++) {
        if (str.charAt (i) != str.charAt (j)) return false;

        j --;
    }
    return true;
}
----------------------------------------

public static boolean isPalindrome (String s) {
    int low = 0;
    int high = s.length () - 1;
    while (low < high) {
        if (s.charAt (low) != s.charAt (high)) return false;

        isPalindrome (s.substring (low ++, high --));
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_17148317_3_19
4367260_38534574_1_14
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static String isPalindrome (String pal) {
    if (pal.length () == 1) {
        return pal;
    } else {
        String tmp = "";
        tmp = tmp + pal.charAt (pal.length () - 1) + isPalindrome (pal.substring (0, pal.length () - 1));
        return tmp;
    }
}
----------------------------------------

private static boolean isPalindrome (String str, int left, int right) {
    if (left >= right) {
        return true;
    } else {
        if (str.charAt (left) == str.charAt (right)) {
            return isPalindrome (str, ++ left, -- right);
        } else {
            return false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_17148317_3_19
4367260_40877623_1_31
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static String isPalindrome (String pal) {
    if (pal.length () == 1) {
        return pal;
    } else {
        String tmp = "";
        tmp = tmp + pal.charAt (pal.length () - 1) + isPalindrome (pal.substring (0, pal.length () - 1));
        return tmp;
    }
}
----------------------------------------

static boolean isPalindrome (String sentence) {
    int length = sentence.length ();
    if (length >= 1) return true;
    else {
        char first = Character.toLowerCase (sentence.charAt (0));
        char last = Character.toLowerCase (sentence.charAt (length - 1));
        if (Character.isLetter (first) && Character.isLetter (last)) {
            if (first == last) {
                String shorter = sentence.substring (1, length - 1);
                return isPalindrome (shorter);
            } else {
                return false;
            }
        } else if (! Character.isLetter (last)) {
            String shorter = sentence.substring (0, length - 1);
            return isPalindrome (shorter);
        } else {
            String shorter = sentence.substring (1);
            return isPalindrome (shorter);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_17148317_3_19
4367260_51968249_13_25
Title: Creating a recursive method for Palindrome 
----------------------------------------

public static String isPalindrome (String pal) {
    if (pal.length () == 1) {
        return pal;
    } else {
        String tmp = "";
        tmp = tmp + pal.charAt (pal.length () - 1) + isPalindrome (pal.substring (0, pal.length () - 1));
        return tmp;
    }
}
----------------------------------------

public static boolean isPalindrome (String s) {
    int low = 0;
    int high = s.length () - 1;
    while (low < high) {
        if (s.charAt (low) != s.charAt (high)) return false;

        isPalindrome (s.substring (low ++, high --));
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_38534574_1_14
4367260_40877623_1_31
Title: Creating a recursive method for Palindrome 
----------------------------------------

private static boolean isPalindrome (String str, int left, int right) {
    if (left >= right) {
        return true;
    } else {
        if (str.charAt (left) == str.charAt (right)) {
            return isPalindrome (str, ++ left, -- right);
        } else {
            return false;
        }
    }
}
----------------------------------------

static boolean isPalindrome (String sentence) {
    int length = sentence.length ();
    if (length >= 1) return true;
    else {
        char first = Character.toLowerCase (sentence.charAt (0));
        char last = Character.toLowerCase (sentence.charAt (length - 1));
        if (Character.isLetter (first) && Character.isLetter (last)) {
            if (first == last) {
                String shorter = sentence.substring (1, length - 1);
                return isPalindrome (shorter);
            } else {
                return false;
            }
        } else if (! Character.isLetter (last)) {
            String shorter = sentence.substring (0, length - 1);
            return isPalindrome (shorter);
        } else {
            String shorter = sentence.substring (1);
            return isPalindrome (shorter);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_38534574_1_14
4367260_51968249_13_25
Title: Creating a recursive method for Palindrome 
----------------------------------------

private static boolean isPalindrome (String str, int left, int right) {
    if (left >= right) {
        return true;
    } else {
        if (str.charAt (left) == str.charAt (right)) {
            return isPalindrome (str, ++ left, -- right);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String s) {
    int low = 0;
    int high = s.length () - 1;
    while (low < high) {
        if (s.charAt (low) != s.charAt (high)) return false;

        isPalindrome (s.substring (low ++, high --));
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4367260_40877623_1_31
4367260_51968249_13_25
Title: Creating a recursive method for Palindrome 
----------------------------------------

static boolean isPalindrome (String sentence) {
    int length = sentence.length ();
    if (length >= 1) return true;
    else {
        char first = Character.toLowerCase (sentence.charAt (0));
        char last = Character.toLowerCase (sentence.charAt (length - 1));
        if (Character.isLetter (first) && Character.isLetter (last)) {
            if (first == last) {
                String shorter = sentence.substring (1, length - 1);
                return isPalindrome (shorter);
            } else {
                return false;
            }
        } else if (! Character.isLetter (last)) {
            String shorter = sentence.substring (0, length - 1);
            return isPalindrome (shorter);
        } else {
            String shorter = sentence.substring (1);
            return isPalindrome (shorter);
        }

    }
}
----------------------------------------

public static boolean isPalindrome (String s) {
    int low = 0;
    int high = s.length () - 1;
    while (low < high) {
        if (s.charAt (low) != s.charAt (high)) return false;

        isPalindrome (s.substring (low ++, high --));
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43672670_43672781_1_13
43672670_43673040_1_13
Title: How do I add an item from a class to an ArrayList? 
----------------------------------------

public ArrayList < String > getTicketDates () {
    ArrayList < String > theDateArray = new ArrayList < > ();
    int i;
    String date = Ticket.getDate ();
    for (i = 0; i < tickets.size (); i ++) {
        if (tickets.get (i).getPurchased () == false) {
            theDateArray.add (date);
        }
    }
    return theDateArray;
}
----------------------------------------

public ArrayList < String > getTicketDates () {
    ArrayList < String > theDateArray = new ArrayList < > ();
    for (Ticket ticket : tickets) {
        if (! ticket.getPurchased ()) {
            theDateArray.add (ticket.getDate ());
        }
    }
    return theDateArray;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43678835_43678909_1_27
43678835_43678913_33_61
Title: Images within listview repeating on scroll 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
        convertView.setTag (holder);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43678835_43678909_1_27
43678835_43678948_1_26
Title: Images within listview repeating on scroll 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
        convertView.setTag (holder);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        convertView.setTag (holder);
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43678835_43678913_33_61
43678835_43678948_1_26
Title: Images within listview repeating on scroll 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View mView;
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.list_item, null);
        holder = new ViewHolder ();
        convertView.setTag (holder);
        holder.pic_name = (TextView) convertView.findViewById (R.id.pic_name);
        holder.profile_pic = (ImageView) convertView.findViewById (R.id.profile_pic);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    RowItem row_pos = rowItems.get (position);
    holder.profile_pic.setImageResource (row_pos.getProfile_pic_id ());
    holder.pic_name.setText (row_pos.getPic_name ());
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43702586_43702629_1_17
43702586_43702654_1_19
Title: Java - Finding the average of an array while excluding a particular value. 
----------------------------------------

public static double averageTemperature (int [] temperatures) {
    double sum = 0.0;
    double avg = 0.0;
    int validEntries = 0;
    for (int i = 0;
    i < temperatures.length; i ++) {
        if (temperatures [i] != - 999) {
            sum += temperatures [i];
            ++ validEntries;
        }
    }
    avg = sum / validEntries;
    return avg;
}
----------------------------------------

public static double averageTemperature (int [] temperatures) {
    double sum = 0.0;
    double avg = 0.0;
    for (int i = 0;
    i < temperatures.length; i ++) {
        if (temperatures [i] == - 999) {
            continue;
        } else {
            sum += temperatures [i];
        }
    }
    avg = sum / temperatures.length;
    return avg;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43704233_43704888_1_14
43704233_43705041_1_13
Title: How to get all the possible matches of two lists? 
----------------------------------------

public Set < Object [] > allocateRooms (List < Lecture > lectures, List < ClassRoom > classRooms) {
    Set < Object [] > returnSet = new LinkedHashSet < > ();
    for (Lecture l : lectures) {
        for (ClassRoom c : classRooms) {
            Object [] n = new Object [2];
            n [0] = c;
            n [1] = l;
            returnSet.add (n);
        }
    }
    return returnSet;
}
----------------------------------------

public Set < Map < Lecture, ClassRoom > > allocateRooms (List < Lecture > lectures, List < ClassRoom > classRooms) {
    Set < Map < Lecture, ClassRoom > > returnSet = new LinkedHashSet < > ();
    for (Lecture l : lectures) {
        for (ClassRoom c : classRooms) {
            Map < Lecture, ClassRoom > n = new HashMap < > ();
            n.put (l, c);
        }
    }
    return returnSet;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43704233_43704888_1_14
43704233_43705211_1_19
Title: How to get all the possible matches of two lists? 
----------------------------------------

public Set < Object [] > allocateRooms (List < Lecture > lectures, List < ClassRoom > classRooms) {
    Set < Object [] > returnSet = new LinkedHashSet < > ();
    for (Lecture l : lectures) {
        for (ClassRoom c : classRooms) {
            Object [] n = new Object [2];
            n [0] = c;
            n [1] = l;
            returnSet.add (n);
        }
    }
    return returnSet;
}
----------------------------------------

public Set < Map < Lecture, ClassRoom > > allocateRooms (List < Lecture > lectures, List < ClassRoom > classRooms) {
    List < ClassRoom > sortedClassRooms = classRooms.stream ().sorted (Comparator.comparingInt (a -> a.getId ())).collect (Collectors.toList ());
    List < Lecture > sortedLectures = lectures.stream ().sorted (Comparator.comparingInt (a -> a.getId ())).collect (Collectors.toList ());
    Set < Map < Lecture, ClassRoom > > returnSet = new LinkedHashSet < > ();
    for (Lecture l : sortedLectures) {
        for (ClassRoom c : sortedClassRooms) {
            Map < Lecture, ClassRoom > n = new HashMap < > ();
            n.put (l, c);
        }
    }
    return returnSet;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43707626_43707843_1_10
43707626_43707850_2_17
Title: Method to check whether a number is prime or composite 
----------------------------------------

private static boolean isPrimeNum (int n) {
    if (n == 2 || n == 3) return true;

    if (n % 2 == 0 || n % 3 == 0) return false;

    for (int i = 5;
    i <= Math.sqrt (n); i = i + 2) {
        if (n % i == 0) return false;

    }
    return true;
}
----------------------------------------

public boolean isPrimeNum (int n) {
    boolean isPrime = true;
    for (int i = 2;
    i < n; i ++) {
        if (n % i == 0) {
            isPrime = false;
            break;
        }
    }
    if (isPrime) {
        System.out.println ("its a prime number");
        return true;
    }
    System.out.println ("its a composite number");
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43708992_43709273_1_11
43708992_43709292_1_10
Title: Transpose a 2d Array with varying dimensions in Java 
----------------------------------------

public static int [] [] transpose (int myArray [] []) {
    int newArray [] [] = new int [myArray [0].length] [myArray.length];
    for (int i = 0;
    i < myArray [0].length; i ++) {
        for (int j = 0;
        j < myArray.length; j ++) {
            int temp = myArray [j] [i];
            newArray [i] [j] = temp;
        }
    }
    return newArray;
}
----------------------------------------

public static int [] [] transpose (int myArray [] []) {
    int newArray [] [] = new int [myArray [0].length] [myArray.length];
    for (int i = 0;
    i < newArray.length; i ++) {
        for (int j = 0;
        j < newArray [i].length; j ++) {
            newArray [i] [j] = myArray [j] [i];
        }
    }
    return newArray;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43710316_43716115_52_62
43710316_43716115_74_112
Title: Error due to parsing JSON string response in android 
----------------------------------------

protected String doInBackground (URL...params) {
    URL builtUrl = params [0];
    resultString = "no result";
    try {
        resultString = NetworkUtils.getResponseFromUrl (builtUrl);
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return resultString;
}
----------------------------------------

protected String doInBackground (String...params) {
    JSONObject itemsObj, thumbnailsObject, defaultObject, obj, snippetObj;
    String title, thumbnailUrl, description, videoId;
    try {
        itemsObj = new JSONObject (resultString);
        JSONArray itemsArray = itemsObj.getJSONArray ("items");
        if (itemsArray.length () > 0) titles.clear ();

        for (int i = 0;
        i < itemsArray.length (); i ++) {
            obj = itemsArray.getJSONObject (i);
            snippetObj = obj.getJSONObject ("snippet");
            title = snippetObj.getString ("title");
            thumbnailsObject = snippetObj.getJSONObject ("thumbnails");
            defaultObject = thumbnailsObject.getJSONObject ("default");
            thumbnailUrl = defaultObject.getString ("url");
            description = snippetObj.getString ("description");
            videoId = (obj.getJSONObject ("id")).getString ("videoId");
            titles.add (new Video (title, thumbnailUrl, description, videoId));
            adapter.notifyDataSetChanged ();
            Log.i ("ayusch", "length of array = " + i);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43711833_43711980_1_27
43711833_43712052_1_24
Title: Print all Digrams and their frequencies in a string 
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    String str = scan.nextLine ();
    ArrayList < String > repetition = new ArrayList < String > ();
    ArrayList < String > digrams = new ArrayList < String > ();
    String digram;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        digram = str.substring (i, i + 2);
        if (repetition.contains (digram) || digram.contains (" ") || digram.length () < 2) continue;

        int occurances = (str.length () - str.replace (digram, "").length ()) / 2;
        occurances += (str.replaceFirst (".*?(" + digram.charAt (0) + "+).*", "$1").length () - 1) / 2;
        digrams.add (digram + ":" + occurances);
        repetition.add (digram);
    }
    Collections.sort (digrams, (s1, s2) -> s1.substring (3, 4).compareTo (s2.substring (3, 4)));
    System.out.println (digrams);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43711833_43711980_1_27
43711833_43725672_7_72
Title: Print all Digrams and their frequencies in a string 
----------------------------------------

public static void main (String args []) {
    int ci, i, j, k, l = 0;
    String str, str1, result, subString;
    char c1, c2, ch;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    str = scan.nextLine ();
    i = str.length ();
    for (c1 = 'A'; c1 <= 'z'; c1 ++) {
        for (c2 = 'A'; c2 <= 'z'; c2 ++) {
            result = new String (new char [] {c1, c2});
            k = 0;
            for (j = 0; j < i - 1; j ++) {
                subString = str.substring (j, j + 2);
                if (result.equals (subString)) {
                    k ++;
                }
            }
            if (k > 0) {
                System.out.println ("" + result + ": " + k);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Insert The Sentence");
    String [] sentence = in.nextLine ().split (" ");
    ArrayList < String > allDigrams = new ArrayList < String > ();
    for (int i = 0;
    i < sentence.length; i ++) {
        for (int j = 0;
        j < sentence [i].length (); j ++) {
            String oneDigram = "";
            if (j < sentence [i].length () - 1) {
                oneDigram += sentence [i].charAt (j);
                oneDigram += sentence [i].charAt (j + 1);
                allDigrams.add (oneDigram);
            }
        }
    }
    ArrayList < Integer > frequency = new ArrayList < Integer > ();
    ArrayList < String > digrams = new ArrayList < String > ();
    int freqIndex = 0;
    while (allDigrams.size () > 0) {
        frequency.add (freqIndex, 0);
        for (int j = 0;
        j < allDigrams.size (); j ++) {
            if (allDigrams.get (0).equalsIgnoreCase (allDigrams.get (j))) {
                frequency.set (freqIndex, frequency.get (freqIndex) + 1);
            }
        }
        String dig = allDigrams.get (0);
        while (allDigrams.contains (dig)) {
            allDigrams.remove (dig);
        }
        digrams.add (dig);
        freqIndex ++;
    }
    for (int i = 0;
    i < frequency.size (); i ++) {
        for (int j = 0;
        j < frequency.size () - i - 1; j ++) {
            if (frequency.get (j) < frequency.get (j + 1) || ((frequency.get (j) == frequency.get (j + 1)) && (digrams.get (j).charAt (0) > digrams.get (j + 1).charAt (0))) || ((digrams.get (j).charAt (0) == digrams.get (j + 1).charAt (0)) && (digrams.get (j).charAt (1) > digrams.get (j + 1).charAt (1)))) {
                int swap = frequency.get (j);
                String swapS = digrams.get (j);
                frequency.set (j, frequency.get (j + 1));
                frequency.set (j + 1, swap);
                digrams.set (j, digrams.get (j + 1));
                digrams.set (j + 1, swapS);
            }
        }
    }
    String sortedResult = "";
    for (int i = 0;
    i < frequency.size (); i ++) {
        sortedResult += digrams.get (i) + ":" + frequency.get (i) + " ";
    }
    System.out.println (sortedResult);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43711833_43712052_1_24
43711833_43725672_7_72
Title: Print all Digrams and their frequencies in a string 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter a String : ");
    String str = scan.nextLine ();
    ArrayList < String > repetition = new ArrayList < String > ();
    ArrayList < String > digrams = new ArrayList < String > ();
    String digram;
    for (int i = 0;
    i < str.length () - 1; i ++) {
        digram = str.substring (i, i + 2);
        if (repetition.contains (digram) || digram.contains (" ") || digram.length () < 2) continue;

        int occurances = (str.length () - str.replace (digram, "").length ()) / 2;
        occurances += (str.replaceFirst (".*?(" + digram.charAt (0) + "+).*", "$1").length () - 1) / 2;
        digrams.add (digram + ":" + occurances);
        repetition.add (digram);
    }
    Collections.sort (digrams, (s1, s2) -> s1.substring (3, 4).compareTo (s2.substring (3, 4)));
    System.out.println (digrams);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Insert The Sentence");
    String [] sentence = in.nextLine ().split (" ");
    ArrayList < String > allDigrams = new ArrayList < String > ();
    for (int i = 0;
    i < sentence.length; i ++) {
        for (int j = 0;
        j < sentence [i].length (); j ++) {
            String oneDigram = "";
            if (j < sentence [i].length () - 1) {
                oneDigram += sentence [i].charAt (j);
                oneDigram += sentence [i].charAt (j + 1);
                allDigrams.add (oneDigram);
            }
        }
    }
    ArrayList < Integer > frequency = new ArrayList < Integer > ();
    ArrayList < String > digrams = new ArrayList < String > ();
    int freqIndex = 0;
    while (allDigrams.size () > 0) {
        frequency.add (freqIndex, 0);
        for (int j = 0;
        j < allDigrams.size (); j ++) {
            if (allDigrams.get (0).equalsIgnoreCase (allDigrams.get (j))) {
                frequency.set (freqIndex, frequency.get (freqIndex) + 1);
            }
        }
        String dig = allDigrams.get (0);
        while (allDigrams.contains (dig)) {
            allDigrams.remove (dig);
        }
        digrams.add (dig);
        freqIndex ++;
    }
    for (int i = 0;
    i < frequency.size (); i ++) {
        for (int j = 0;
        j < frequency.size () - i - 1; j ++) {
            if (frequency.get (j) < frequency.get (j + 1) || ((frequency.get (j) == frequency.get (j + 1)) && (digrams.get (j).charAt (0) > digrams.get (j + 1).charAt (0))) || ((digrams.get (j).charAt (0) == digrams.get (j + 1).charAt (0)) && (digrams.get (j).charAt (1) > digrams.get (j + 1).charAt (1)))) {
                int swap = frequency.get (j);
                String swapS = digrams.get (j);
                frequency.set (j, frequency.get (j + 1));
                frequency.set (j + 1, swap);
                digrams.set (j, digrams.get (j + 1));
                digrams.set (j + 1, swapS);
            }
        }
    }
    String sortedResult = "";
    for (int i = 0;
    i < frequency.size (); i ++) {
        sortedResult += digrams.get (i) + ":" + frequency.get (i) + " ";
    }
    System.out.println (sortedResult);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43716058_43716121_19_29
43716058_43718572_9_20
Title: Adding elements to an arraylist on an event hundler 
----------------------------------------

public void handle (MouseEvent mouseEvent) {
    if (mouseEvent.getEventType () == MouseEvent.MOUSE_PRESSED) {
        path.getElements ().add (new MoveTo (mouseEvent.getX (), mouseEvent.getY ()));
    } else if (mouseEvent.getEventType () == MouseEvent.MOUSE_DRAGGED) {
        path.getElements ().add (new LineTo (mouseEvent.getX (), mouseEvent.getY ()));
    }

    if (mouseEvent.getEventType () == mouseEvent.MOUSE_RELEASED) {
        paths.add (path);
    }
}
----------------------------------------

public void handle (MouseEvent event) {
    Path path = new Path ();
    paths.add (path);
    path.getElements ().add (new MoveTo (event.getX (), event.getY ()));
    scene.setOnMouseDragged (new EventHandler < MouseEvent > () {
        public void handle (MouseEvent event) {
            path.getElements ().add (new LineTo (event.getX (), event.getY ()));
        }}

    );
    root.getChildren ().add (path);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43716058_43716121_5_15
43716058_43718572_4_24
Title: Adding elements to an arraylist on an event hundler 
----------------------------------------

public void start (Stage stage) {
    Group root = new Group ();
    Scene scene = new Scene (root, 300, 250);
    scene.setOnMouseDragged (mouseHandler);
    scene.setOnMousePressed (mouseHandler);
    scene.setOnMouseReleased (mouseHandler);
    for (int i = 0;
    i < paths.size (); i ++) root.getChildren ().add (paths.get (i));

    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    Pane root = new Pane ();
    Scene scene = new Scene (root, 300, 250);
    scene.setOnMousePressed (new EventHandler < MouseEvent > () {
        public void handle (MouseEvent event) {
            Path path = new Path ();
            paths.add (path);
            path.getElements ().add (new MoveTo (event.getX (), event.getY ()));
            scene.setOnMouseDragged (new EventHandler < MouseEvent > () {
                public void handle (MouseEvent event) {
                    path.getElements ().add (new LineTo (event.getX (), event.getY ()));
                }}

            );
            root.getChildren ().add (path);
        }}

    );
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43720914_43721012_131_148
43720914_43721107_8_19
Title: Fill objects with random color 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = random.nextInt (getWidth () - CIRC_WIDTH);
    int y = random.nextInt (getHeight () - CIRC_WIDTH);
    Shape shape = new Ellipse2D.Double (x, y, CIRC_WIDTH, CIRC_WIDTH);
    float hue = random.nextFloat ();
    float saturation = (float) (0.8 + random.nextFloat () * 0.2);
    float brightness = (float) (0.8 + random.nextFloat () * 0.2);
    Color color = Color.getHSBColor (hue, saturation, brightness);
    shapeColorMap.put (shape, color);
    count ++;
    putValue (NAME, "Random Circle: " + count);
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Random r = new Random ();
    int highX = getWidth () - 100;
    int highY = getHeight () - 100;
    circles [count] = new Ellipse2D.Double (r.nextInt (highX), r.nextInt (highY), 100, 100);
    circlesColors [count] = new Color (r.nextInt (256), r.nextInt (256), r.nextInt (256));
    count ++;
    button.setText (count.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43726780_43727238_1_18
43726780_43739070_1_19
Title: Unable to check int array inside a lambda expression 
----------------------------------------

public static void main (String args []) throws UnsupportedEncodingException, IOException {
    final int [] score = {0};
    final AtomicInteger post = new AtomicInteger (0);
    try (Stream < String > stream = Files.lines (Paths.get ("e:\\in.txt")).sequential ()) {
        File file = new File ("e:\\out.txt");
        FileOutputStream fos = new FileOutputStream (file);
        PrintStream ps = new PrintStream (fos);
        System.setOut (ps);
        stream.forEach (line -> {
            if (score [0] == 1) {
                post.incrementAndGet ();
            }
        });
        System.out.println ("postive=" + post.get ());
    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    long pos, neu, neg;
    try (FileOutputStream fos = new FileOutputStream ("e:\\out.txt"); PrintStream ps = new PrintStream (fos)) {
        try (Stream < String > stream = Files.lines (Paths.get ("e:\\in.txt"))) {
            Map < Integer, Long > m = stream.map (line -> analysis.parse (line).getCode ()).collect (Collectors.groupingBy (Function.identity (), Collectors.counting ()));
            pos = m.get (+ 1);
            neu = m.get (0);
            neg = m.get (- 1);
        }
        ps.println ("pos=" + pos);
        ps.println ("neu=" + neu);
        ps.println ("neg=" + neg);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43729533_43729617_1_26
43729533_43730000_6_20
Title: Reversing the words in a sentence using Stack 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    Stack < String > stack = new Stack < > ();
    while (true) {
        System.out.printf ("Enter a word or 'end' to quit: ");
        String next = scanner.nextLine ();
        if (next == null || next.length () == 0) {
            System.out.println ("Invalid! Try again...");
            return;
        }
        if (next.equalsIgnoreCase ("end")) {
            break;
        }
        stack.push (next);
    }
    System.out.println ("You entered (in reverse):");
    while (! stack.isEmpty ()) {
        System.out.println (stack.pop ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String input = "";
    Stack stack = new Stack ();
    while (true) {
        System.out.printf ("Enter a word or 'end' to quit: ");
        input = in.next ();
        if (input.equalsIgnoreCase ("end")) {
            break;
        }
        if (! input.equals ("")) stack.push (input);

    }
    System.out.println ("You entered (in reverse): ");
    while (! stack.isEmpty ()) System.out.println (stack.pop ());

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43761138_43761827_26_34
43761138_43761827_44_52
Title: How to properly switch scenes/change root node of scene in JavaFX without FXML? 
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("I'm A") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("This is B") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43761138_43761827_26_34
43761138_43761827_62_70
Title: How to properly switch scenes/change root node of scene in JavaFX without FXML? 
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("I'm A") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("Greeting from C") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43761138_43761827_44_52
43761138_43761827_62_70
Title: How to properly switch scenes/change root node of scene in JavaFX without FXML? 
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("This is B") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------

void createGUI () {
    getChildren ().add (new Button ("Greeting from C") {
        @Override
        public void fire () {
            callNext ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43784213_43784965_1_40
43784213_43785269_50_65
Title: Number Search (Most effecient) 
----------------------------------------

public static void main (String args []) throws IOException {
    int numTests = 1000000;
    long averageTries = 0;
    int maxAttempts = 0;
    int minAttempts = Integer.MAX_VALUE;
    for (int i = 0;
    i < numTests; i ++) {
        int numAttempts = 0;
        int answer = (int) (Math.random () * 1000) + 1;
        int lower = 1;
        int upper = 1000;
        int myGuess;
        do {
            myGuess = (int) (((lower + upper) / 2) + (Math.random () * 14));
            numAttempts ++;
            if (myGuess > answer) {
                upper = myGuess;
            } else if (myGuess < answer) {
                lower = myGuess;
                upper += (lower + upper) / 2;
                answer += (int) (Math.random () * 200) + 1;
            }

        } while (myGuess != answer);
        averageTries += numAttempts;
        if (numAttempts > maxAttempts) {
            maxAttempts = numAttempts;
        }
        if (numAttempts < minAttempts) {
            minAttempts = numAttempts;
        }
    }
    System.out.println ("Average attempts (of " + numTests + " tests): " + (averageTries / numTests));
    System.out.println ("Most attempts in one run: " + maxAttempts);
    System.out.println ("Least attempts in one run: " + minAttempts);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > steps = new ArrayList < > ();
    int iterations = 10;
    for (int i = 0;
    i < iterations; ++ i) {
        steps.add (doGuess ());
    }
    IntSummaryStatistics stats = steps.stream ().collect (IntSummaryStatistics :: new, IntSummaryStatistics :: accept, IntSummaryStatistics :: combine);
    System.out.println (stats);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786374_6_22
43785090_43786420_1_26
Title: Storing bits in array of int 
----------------------------------------

public static Integer [] inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    int elements = 1;
    int result = 0;
    final List < Integer > binaryList = new ArrayList < Integer > ();
    while (number != 0) {
        elements ++;
        result = number % 2;
        number /= 2;
        binaryList.add (new Integer (result));
    }
    final Integer [] binary = new Integer [binaryList.size ()];
    binaryList.toArray (binary);
    return binary;
}
----------------------------------------

public static int [] inBinary (int number) {
    int [] binary = new int [Integer.SIZE];
    for (int i = Integer.SIZE - 1;
    0 <= i; i --) {
        binary [i] = number % 2;
        number = number>> 1;
    }
    int startIndex = 0;
    while (binary [startIndex] != 1) {
        startIndex ++;
    }
    int [] result = new int [Integer.SIZE - startIndex];
    for (int i = 0;
    i < Integer.SIZE - startIndex; i ++) {
        result [i] = binary [startIndex + i];
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786374_6_22
43785090_43786713_1_23
Title: Storing bits in array of int 
----------------------------------------

public static Integer [] inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    int elements = 1;
    int result = 0;
    final List < Integer > binaryList = new ArrayList < Integer > ();
    while (number != 0) {
        elements ++;
        result = number % 2;
        number /= 2;
        binaryList.add (new Integer (result));
    }
    final Integer [] binary = new Integer [binaryList.size ()];
    binaryList.toArray (binary);
    return binary;
}
----------------------------------------

public static void inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    List < Integer > binaryDigitsList = new ArrayList < Integer > ();
    while (number != 0) {
        int digit = number % 2;
        binaryDigitsList.add (digit);
        number = number / 2;
    }
    int [] binaryArr = new int [binaryDigitsList.size ()];
    for (int k = binaryDigitsList.size () - 1, index = 0;
    k >= 0; k --) {
        binaryArr [index] = binaryDigitsList.get (k);
        index ++;
    }
    for (int index = 0;
    index < binaryArr.length; index ++) System.out.println ("BinaryArray[" + index + "] = " + binaryArr [index]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786374_6_22
43785090_43787850_19_37
Title: Storing bits in array of int 
----------------------------------------

public static Integer [] inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    int elements = 1;
    int result = 0;
    final List < Integer > binaryList = new ArrayList < Integer > ();
    while (number != 0) {
        elements ++;
        result = number % 2;
        number /= 2;
        binaryList.add (new Integer (result));
    }
    final Integer [] binary = new Integer [binaryList.size ()];
    binaryList.toArray (binary);
    return binary;
}
----------------------------------------

public static void inBinary (int number) {
    int binary [] = new int [1];
    int index = 0;
    while (number > 0) {
        binary = (int []) resizeArray (binary, index + 1);
        binary [index ++] = number % 2;
        number = number / 2;
    }
    for (int i = index - 1;
    i >= 0; i --) {
        System.out.print (binary [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786420_1_26
43785090_43786713_1_23
Title: Storing bits in array of int 
----------------------------------------

public static int [] inBinary (int number) {
    int [] binary = new int [Integer.SIZE];
    for (int i = Integer.SIZE - 1;
    0 <= i; i --) {
        binary [i] = number % 2;
        number = number>> 1;
    }
    int startIndex = 0;
    while (binary [startIndex] != 1) {
        startIndex ++;
    }
    int [] result = new int [Integer.SIZE - startIndex];
    for (int i = 0;
    i < Integer.SIZE - startIndex; i ++) {
        result [i] = binary [startIndex + i];
    }
    return result;
}
----------------------------------------

public static void inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    List < Integer > binaryDigitsList = new ArrayList < Integer > ();
    while (number != 0) {
        int digit = number % 2;
        binaryDigitsList.add (digit);
        number = number / 2;
    }
    int [] binaryArr = new int [binaryDigitsList.size ()];
    for (int k = binaryDigitsList.size () - 1, index = 0;
    k >= 0; k --) {
        binaryArr [index] = binaryDigitsList.get (k);
        index ++;
    }
    for (int index = 0;
    index < binaryArr.length; index ++) System.out.println ("BinaryArray[" + index + "] = " + binaryArr [index]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786420_1_26
43785090_43787850_19_37
Title: Storing bits in array of int 
----------------------------------------

public static int [] inBinary (int number) {
    int [] binary = new int [Integer.SIZE];
    for (int i = Integer.SIZE - 1;
    0 <= i; i --) {
        binary [i] = number % 2;
        number = number>> 1;
    }
    int startIndex = 0;
    while (binary [startIndex] != 1) {
        startIndex ++;
    }
    int [] result = new int [Integer.SIZE - startIndex];
    for (int i = 0;
    i < Integer.SIZE - startIndex; i ++) {
        result [i] = binary [startIndex + i];
    }
    return result;
}
----------------------------------------

public static void inBinary (int number) {
    int binary [] = new int [1];
    int index = 0;
    while (number > 0) {
        binary = (int []) resizeArray (binary, index + 1);
        binary [index ++] = number % 2;
        number = number / 2;
    }
    for (int i = index - 1;
    i >= 0; i --) {
        System.out.print (binary [i]);
    }
}
----------------------------------------
