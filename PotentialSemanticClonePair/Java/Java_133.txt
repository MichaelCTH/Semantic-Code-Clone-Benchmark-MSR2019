$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7667284_7667387_10_21
7667284_7667408_1_15
Title: Added JButton control to JApplet and the JButton fills the whole screen 
----------------------------------------

public void init () {
    button1 = new JButton ("Calculate");
    textBox1 = new JTextField ("number");
    textBox1.setFont (new Font ("Courier", Font.PLAIN, 12));
    JPanel myPanel = new JPanel ();
    myPanel.add (new JLabel ("Enter a number: "));
    myPanel.add (textBox1);
    myPanel.add (button1);
    myPanel.setBackground (Color.gray);
    getContentPane ().add (myPanel, BorderLayout.CENTER);
}
----------------------------------------

public void init () {
    setLayout (new FlowLayout ());
    button1 = new JButton ("Calculate");
    textBox1 = new JTextField ("number");
    textBox1.setFont (new Font ("Courier", Font.PLAIN, 12));
    textBox1.setSize (100, 36);
    button1.setSize (100, 36);
    JPanel contentPanel = new JPanel ();
    contentPanel.add (button1);
    contentPanel.add (textBox1);
    getContentPane ().add (contentPanel);
    c.setBackground (Color.gray);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7671048_7671130_1_24
7671048_7671353_6_42
Title: Efficient code to do array matching in Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    int arrayOne [] = {1, 50, 100, 50, 100, 22, 23, 26};
    int arrayTwo [] = {1, 45, 22, 23, 52, 90, 100, 99};
    TreeMap < Integer, Integer > map = new TreeMap < Integer, Integer > ();
    for (int i = 0;
    i < arrayTwo.length; i ++) if (! map.containsKey (arrayTwo [i])) map.put (arrayTwo [i], i);

    int arrayThree [] = new int [arrayOne.length];
    for (int i = 0;
    i < arrayThree.length; i ++) {
        int v = arrayOne [i];
        Integer h = map.higherKey (v - 1);
        Integer l = map.lowerKey (v);
        arrayThree [i] = map.get (l != null && (h == null || v - l < h - v) ? l : h);
    }
    System.out.println (Arrays.toString (arrayThree));
}
----------------------------------------

public static void main (String [] args) {
    int arrayOne [] = {1, 50, 100, 50, 100, 22, 23, 26};
    int arrayTwo [] = {1, 45, 22, 23, 52, 90, 100, 99};
    int arrayThree [] = new int [arrayTwo.length];
    ValueIndexPair [] arr = new ValueIndexPair [arrayTwo.length];
    for (int i = 0;
    i < arrayTwo.length; i ++) {
        arr [i] = new ValueIndexPair (arrayTwo [i], i);
    }
    Arrays.sort (arr);
    ValueIndexPair temp = new ValueIndexPair (0, 0);
    for (int i = 0;
    i < arrayOne.length; i ++) {
        temp.setValue (arrayOne [i]);
        int index = Arrays.binarySearch (arr, temp);
        if (index >= 0) {
            arrayThree [i] = arr [index].getIndex ();
        } else {
            index = index * - 1 - 1;
            if (index == 0) {
                arrayThree [i] = arr [0].getIndex ();
            } else if (index == arrayTwo.length) {
                arrayThree [i] = arr [arrayTwo.length - 1].getIndex ();
            } else {
                int v1 = arr [index - 1].getValue ();
                int v2 = arr [index].getValue ();
                if (arrayOne [i] - v1 > v2 - arrayOne [i]) {
                    arrayThree [i] = arr [index].getIndex ();
                } else {
                    arrayThree [i] = arr [index - 1].getIndex ();
                }
            }

        }
    }
    for (int i = 0;
    i < arrayThree.length; i ++) {
        System.out.println (arrayThree [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7671048_7671130_1_24
7671048_7672330_1_35
Title: Efficient code to do array matching in Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    int arrayOne [] = {1, 50, 100, 50, 100, 22, 23, 26};
    int arrayTwo [] = {1, 45, 22, 23, 52, 90, 100, 99};
    TreeMap < Integer, Integer > map = new TreeMap < Integer, Integer > ();
    for (int i = 0;
    i < arrayTwo.length; i ++) if (! map.containsKey (arrayTwo [i])) map.put (arrayTwo [i], i);

    int arrayThree [] = new int [arrayOne.length];
    for (int i = 0;
    i < arrayThree.length; i ++) {
        int v = arrayOne [i];
        Integer h = map.higherKey (v - 1);
        Integer l = map.lowerKey (v);
        arrayThree [i] = map.get (l != null && (h == null || v - l < h - v) ? l : h);
    }
    System.out.println (Arrays.toString (arrayThree));
}
----------------------------------------

public static void main (String [] args) {
    int arrayOne [] = {0, 11, 12, 6, 7, 3};
    int arrayTwo [] = {1, 10};
    Arrays.sort (arrayTwo);
    int arrayThree [] = new int [arrayOne.length];
    for (int i = 0;
    i < arrayOne.length; i ++) {
        int index = Arrays.binarySearch (arrayTwo, arrayOne [i]);
        if (index >= 0) {
            arrayThree [i] = index;
        } else {
            int ind = Math.abs (index + 1);
            if (ind == arrayTwo.length) {
                arrayThree [i] = arrayTwo.length - 1;
            } else if (ind == 0) {
                arrayThree [i] = 0;
            } else {
                arrayThree [i] = Math.abs (arrayTwo [ind - 1] - arrayOne [i]) <= Math.abs (arrayTwo [ind] - arrayOne [i]) ? ind - 1 : ind;
            }

        }
    }
    System.err.println (Arrays.toString (arrayThree));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7671048_7671353_6_42
7671048_7672330_1_35
Title: Efficient code to do array matching in Java 
----------------------------------------

public static void main (String [] args) {
    int arrayOne [] = {1, 50, 100, 50, 100, 22, 23, 26};
    int arrayTwo [] = {1, 45, 22, 23, 52, 90, 100, 99};
    int arrayThree [] = new int [arrayTwo.length];
    ValueIndexPair [] arr = new ValueIndexPair [arrayTwo.length];
    for (int i = 0;
    i < arrayTwo.length; i ++) {
        arr [i] = new ValueIndexPair (arrayTwo [i], i);
    }
    Arrays.sort (arr);
    ValueIndexPair temp = new ValueIndexPair (0, 0);
    for (int i = 0;
    i < arrayOne.length; i ++) {
        temp.setValue (arrayOne [i]);
        int index = Arrays.binarySearch (arr, temp);
        if (index >= 0) {
            arrayThree [i] = arr [index].getIndex ();
        } else {
            index = index * - 1 - 1;
            if (index == 0) {
                arrayThree [i] = arr [0].getIndex ();
            } else if (index == arrayTwo.length) {
                arrayThree [i] = arr [arrayTwo.length - 1].getIndex ();
            } else {
                int v1 = arr [index - 1].getValue ();
                int v2 = arr [index].getValue ();
                if (arrayOne [i] - v1 > v2 - arrayOne [i]) {
                    arrayThree [i] = arr [index].getIndex ();
                } else {
                    arrayThree [i] = arr [index - 1].getIndex ();
                }
            }

        }
    }
    for (int i = 0;
    i < arrayThree.length; i ++) {
        System.out.println (arrayThree [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int arrayOne [] = {0, 11, 12, 6, 7, 3};
    int arrayTwo [] = {1, 10};
    Arrays.sort (arrayTwo);
    int arrayThree [] = new int [arrayOne.length];
    for (int i = 0;
    i < arrayOne.length; i ++) {
        int index = Arrays.binarySearch (arrayTwo, arrayOne [i]);
        if (index >= 0) {
            arrayThree [i] = index;
        } else {
            int ind = Math.abs (index + 1);
            if (ind == arrayTwo.length) {
                arrayThree [i] = arrayTwo.length - 1;
            } else if (ind == 0) {
                arrayThree [i] = 0;
            } else {
                arrayThree [i] = Math.abs (arrayTwo [ind - 1] - arrayOne [i]) <= Math.abs (arrayTwo [ind] - arrayOne [i]) ? ind - 1 : ind;
            }

        }
    }
    System.err.println (Arrays.toString (arrayThree));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7689990_7690010_20_29
7689990_7690010_31_42
Title: Are there any problems with creating large static resource files? 
----------------------------------------

public static void setLanguage (int language) {
    switch (language) {
        case ENGLISH :
            setLanguage ("en.lang");
            break;
        case GERMAN :
            setLanguage ("de.lang");
            break;
    }
}
----------------------------------------

private static void setLanguage (String path) {
    language = new Properties ();
    try {
        InputStream fi = LanguageFactory.class.getResourceAsStream ((PREFIX + path));
        language.load (fi);
        fi.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7696660_7711132_42_54
7696660_7711132_64_77
Title: Launch the video recorder from BlackBerry app 
----------------------------------------

public void run () {
    try {
        VideoRecorderThread newRecorderThread = new VideoRecorderThread ();
        newRecorderThread.start ();
        _recorderThread = newRecorderThread;
    } catch (Exception e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        if (_recorderThread != null) {
            _recorderThread.stop ();
        }
    } catch (Exception e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7696660_7711132_42_54
7696660_7711132_89_128
Title: Launch the video recorder from BlackBerry app 
----------------------------------------

public void run () {
    try {
        VideoRecorderThread newRecorderThread = new VideoRecorderThread ();
        newRecorderThread.start ();
        _recorderThread = newRecorderThread;
    } catch (Exception e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        _player = javax.microedition.media.Manager.createPlayer ("capture://video?encoding=video/3gpp");
        _player.addPlayerListener (this);
        _player.realize ();
        VideoControl videoControl = (VideoControl) _player.getControl ("VideoControl");
        _recordControl = (RecordControl) _player.getControl ("RecordControl");
        Field videoField = (Field) videoControl.initDisplayMode (VideoControl.USE_GUI_PRIMITIVE, "net.rim.device.api.ui.Field");
        try {
            videoControl.setDisplaySize (Display.getWidth (), Display.getHeight ());
        } catch (MediaException me) {
        }
        add (videoField);
        _recordControl.setRecordLocation ("file:///store/home/user/VideoRecordingTest.3gpp");
        _recordControl.startRecord ();
        _player.start ();
    } catch (IOException e) {
        Dialog.alert (e.toString ());
    } catch (MediaException e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7696660_7711132_64_77
7696660_7711132_89_128
Title: Launch the video recorder from BlackBerry app 
----------------------------------------

public void run () {
    try {
        if (_recorderThread != null) {
            _recorderThread.stop ();
        }
    } catch (Exception e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        _player = javax.microedition.media.Manager.createPlayer ("capture://video?encoding=video/3gpp");
        _player.addPlayerListener (this);
        _player.realize ();
        VideoControl videoControl = (VideoControl) _player.getControl ("VideoControl");
        _recordControl = (RecordControl) _player.getControl ("RecordControl");
        Field videoField = (Field) videoControl.initDisplayMode (VideoControl.USE_GUI_PRIMITIVE, "net.rim.device.api.ui.Field");
        try {
            videoControl.setDisplaySize (Display.getWidth (), Display.getHeight ());
        } catch (MediaException me) {
        }
        add (videoField);
        _recordControl.setRecordLocation ("file:///store/home/user/VideoRecordingTest.3gpp");
        _recordControl.startRecord ();
        _player.start ();
    } catch (IOException e) {
        Dialog.alert (e.toString ());
    } catch (MediaException e) {
        Dialog.alert (e.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701097_7701161_15_36
7701097_7701684_57_65
Title: Java Graphics.fillPolygon: How to also render right and bottom edges? 
----------------------------------------

public static void main (String [] args) {
    BufferedImage img = new BufferedImage (WIDTH, WIDTH, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g2 = img.createGraphics ();
    int [] xPoints = {WIDTH / 3, (2 * WIDTH) / 3, WIDTH / 3};
    int [] yPoints = {0, WIDTH / 2, WIDTH};
    g2.setColor (Color.black);
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2.fillPolygon (xPoints, yPoints, xPoints.length);
    g2.dispose ();
    ImageIcon icon = new ImageIcon (img);
    JLabel label = new JLabel (icon);
    label.setBorder (BorderFactory.createLineBorder (Color.black));
    JPanel panel = new JPanel ();
    panel.add (label);
    JOptionPane.showMessageDialog (null, panel);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            display ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_328_341
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_346_358
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_364_374
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_379_491
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_517_552
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_312_323
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb1Int = Integer.parseInt (cb1.getSelectedItem ().toString ());
    int cb2Int = Integer.parseInt (cb2.getSelectedItem ().toString ());
    int cb3Int = Integer.parseInt (cb3.getSelectedItem ().toString ());
    int cb4Int = Integer.parseInt (cb4.getSelectedItem ().toString ());
    int cb5Int = Integer.parseInt (cb5.getSelectedItem ().toString ());
    int cb6Int = Integer.parseInt (cb6.getSelectedItem ().toString ());
    txt2.setText (String.valueOf (cb1Int + cb2Int + cb3Int + cb4Int + cb5Int + cb6Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_328_341
7701847_7702311_346_358
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_328_341
7701847_7702311_364_374
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_328_341
7701847_7702311_379_491
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_328_341
7701847_7702311_517_552
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_328_341
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb7Int = Integer.parseInt (cb7.getSelectedItem ().toString ());
    int cb8Int = Integer.parseInt (cb8.getSelectedItem ().toString ());
    int cb9Int = Integer.parseInt (cb9.getSelectedItem ().toString ());
    int cb10Int = Integer.parseInt (cb10.getSelectedItem ().toString ());
    int cb11Int = Integer.parseInt (cb11.getSelectedItem ().toString ());
    int cb12Int = Integer.parseInt (cb12.getSelectedItem ().toString ());
    txt3.setText (String.valueOf (cb7Int + cb8Int + cb9Int + cb10Int + cb11Int + cb12Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_346_358
7701847_7702311_364_374
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_346_358
7701847_7702311_379_491
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_346_358
7701847_7702311_517_552
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_346_358
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb13Int = Integer.parseInt (cb13.getSelectedItem ().toString ());
    int cb14Int = Integer.parseInt (cb14.getSelectedItem ().toString ());
    int cb15Int = Integer.parseInt (cb15.getSelectedItem ().toString ());
    int cb16Int = Integer.parseInt (cb16.getSelectedItem ().toString ());
    int cb17Int = Integer.parseInt (cb17.getSelectedItem ().toString ());
    int cb18Int = Integer.parseInt (cb18.getSelectedItem ().toString ());
    txt4.setText (String.valueOf (cb13Int + cb14Int + cb15Int + cb16Int + cb17Int + cb18Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_364_374
7701847_7702311_379_491
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_364_374
7701847_7702311_517_552
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_364_374
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int cb19Int = Integer.parseInt (cb19.getSelectedItem ().toString ());
    int cb20Int = Integer.parseInt (cb20.getSelectedItem ().toString ());
    int cb21Int = Integer.parseInt (cb21.getSelectedItem ().toString ());
    int cb22Int = Integer.parseInt (cb22.getSelectedItem ().toString ());
    int cb23Int = Integer.parseInt (cb23.getSelectedItem ().toString ());
    int cb24Int = Integer.parseInt (cb24.getSelectedItem ().toString ());
    txt5.setText (String.valueOf (cb19Int + cb20Int + cb21Int + cb22Int + cb23Int + cb24Int));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_379_491
7701847_7702311_517_552
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_379_491
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String prelim, midterm, prefinal, finals, total;
    double a, b, c, d, tg;
    prelim = txt2.getText ();
    midterm = txt3.getText ();
    prefinal = txt4.getText ();
    finals = txt5.getText ();
    a = Double.parseDouble (prelim);
    b = Double.parseDouble (midterm);
    c = Double.parseDouble (prefinal);
    d = Double.parseDouble (finals);
    tg = (a + b + c + d) / 4;
    total = Double.toString (tg);
    finalg.setText (total);
    JFrame f3 = new JFrame ("STUDENT  FINAL RATING");
    f3.getContentPane ().setLayout (null);
    f3.setSize (350, 300);
    f2.hide ();
    f3.show ();
    f3.getContentPane ().add (label1);
    f3.getContentPane ().add (label2);
    f3.getContentPane ().add (finalg);
    finalg.setEditable (false);
    f3.getContentPane ().add (finalr);
    finalr.setEditable (false);
    f3.getContentPane ().add (finalb);
    label1.setBounds (70, 20, 150, 70);
    label2.setBounds (90, 70, 200, 70);
    finalg.setBounds (205, 40, 50, 30);
    finalr.setBounds (140, 140, 50, 40);
    finalb.setBounds (130, 200, 70, 30);
    grade = Double.parseDouble (finalg.getText ());
    if (grade >= 99.50 && grade < 101) equiv = 1.00;
    else if (grade < 99.50 && grade >= 98.50) equiv = 1.10;
    else if (grade < 98.50 && grade >= 97.50) equiv = 1.20;
    else if (grade < 97.50 && grade >= 96.50) equiv = 1.30;
    else if (grade < 96.50 && grade >= 95.50) equiv = 1.40;
    else if (grade < 95.50 && grade >= 94.50) equiv = 1.50;
    else if (grade < 94.50 && grade >= 93.50) equiv = 1.60;
    else if (grade < 93.50 && grade >= 92.50) equiv = 1.70;
    else if (grade < 92.50 && grade >= 91.50) equiv = 1.80;
    else if (grade < 91.50 && grade >= 90.50) equiv = 1.90;
    else if (grade < 90.50 && grade >= 89.50) equiv = 2.00;
    else if (grade < 89.50 && grade >= 88.50) equiv = 2.10;
    else if (grade < 88.50 && grade >= 87.50) equiv = 2.20;
    else if (grade < 87.50 && grade >= 86.50) equiv = 2.30;
    else if (grade < 86.50 && grade >= 85.50) equiv = 2.40;
    else if (grade < 85.50 && grade >= 84.50) equiv = 2.50;
    else if (grade < 84.50 && grade >= 83.50) equiv = 2.60;
    else if (grade < 83.50 && grade >= 82.50) equiv = 2.70;
    else if (grade < 82.50 && grade >= 81.50) equiv = 2.80;
    else if (grade < 81.50 && grade >= 80.50) equiv = 2.90;
    else if (grade < 80.50 && grade >= 79.50) equiv = 3.00;
    else if (grade < 79.50 && grade >= 78.50) equiv = 3.10;
    else if (grade < 78.50 && grade >= 77.50) equiv = 3.20;
    else if (grade < 77.50 && grade >= 76.50) equiv = 3.30;
    else if (grade < 76.50 && grade >= 75.50) equiv = 3.40;
    else if (grade < 75.50 && grade >= 74.50) equiv = 3.50;
    else equiv = 5.0;

    finalr.setText ("" + equiv);
    finalr.setEditable (false);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7701847_7702311_517_552
7701847_7702311_92_297
Title: "GRADING SYSTEM using JComboBox for the entry of grades; Jlabel JTextFirldJFrame; JButton for events; all in JFrame" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    cb1.setSelectedItem (Integer.valueOf (0));
    cb2.setSelectedItem (Integer.valueOf (0));
    cb3.setSelectedItem (Integer.valueOf (0));
    cb4.setSelectedItem (Integer.valueOf (0));
    cb5.setSelectedItem (Integer.valueOf (0));
    cb6.setSelectedItem (Integer.valueOf (0));
    cb7.setSelectedItem (Integer.valueOf (0));
    cb8.setSelectedItem (Integer.valueOf (0));
    cb9.setSelectedItem (Integer.valueOf (0));
    cb10.setSelectedItem (Integer.valueOf (0));
    cb11.setSelectedItem (Integer.valueOf (0));
    cb12.setSelectedItem (Integer.valueOf (0));
    cb13.setSelectedItem (Integer.valueOf (0));
    cb14.setSelectedItem (Integer.valueOf (0));
    cb15.setSelectedItem (Integer.valueOf (0));
    cb16.setSelectedItem (Integer.valueOf (0));
    cb17.setSelectedItem (Integer.valueOf (0));
    cb18.setSelectedItem (Integer.valueOf (0));
    cb19.setSelectedItem (Integer.valueOf (0));
    cb20.setSelectedItem (Integer.valueOf (0));
    cb21.setSelectedItem (Integer.valueOf (0));
    cb22.setSelectedItem (Integer.valueOf (0));
    cb23.setSelectedItem (Integer.valueOf (0));
    cb24.setSelectedItem (Integer.valueOf (0));
    txt2.setText (" ");
    txt3.setText (" ");
    txt4.setText (" ");
    txt5.setText (" ");
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String x;
    x = txt1.getText ();
    f2.setTitle (x);
    f2.getContentPane ().setLayout (null);
    f2.setSize (830, 600);
    f1.hide ();
    f2.show ();
    f2.getContentPane ().add (Lb2);
    f2.getContentPane ().add (Lb3);
    f2.getContentPane ().add (Lb4);
    f2.getContentPane ().add (Lb5);
    f2.getContentPane ().add (Lb6);
    f2.getContentPane ().add (Lb7);
    f2.getContentPane ().add (Lb8);
    f2.getContentPane ().add (Lb9);
    f2.getContentPane ().add (Lb10);
    f2.getContentPane ().add (Lb11);
    f2.getContentPane ().add (Lb12);
    f2.getContentPane ().add (Lb13);
    f2.getContentPane ().add (jcompute);
    f2.getContentPane ().add (jclear);
    f2.getContentPane ().add (jexit);
    Lb2.setBounds (30, 120, 90, 70);
    Lb3.setBounds (30, 170, 110, 70);
    Lb4.setBounds (30, 220, 90, 70);
    Lb5.setBounds (30, 270, 120, 70);
    Lb6.setBounds (30, 320, 100, 70);
    Lb7.setBounds (30, 370, 110, 70);
    Lb8.setBounds (280, 20, 230, 20);
    Lb9.setBounds (30, 420, 80, 70);
    Lb10.setBounds (190, 60, 100, 100);
    Lb11.setBounds (315, 60, 100, 100);
    Lb12.setBounds (440, 60, 100, 100);
    Lb13.setBounds (570, 60, 100, 100);
    jcompute.setBounds (660, 160, 120, 60);
    jclear.setBounds (660, 260, 120, 60);
    jexit.setBounds (660, 360, 120, 60);
    f2.getContentPane ().add (cb1);
    f2.getContentPane ().add (cb2);
    f2.getContentPane ().add (cb3);
    f2.getContentPane ().add (cb4);
    f2.getContentPane ().add (cb5);
    f2.getContentPane ().add (cb6);
    f2.getContentPane ().add (Btn3);
    f2.getContentPane ().add (txt2);
    txt2.setEditable (false);
    cb1.setBounds (190, 140, 50, 30);
    cb2.setBounds (190, 190, 50, 30);
    cb3.setBounds (190, 240, 50, 30);
    cb4.setBounds (190, 290, 50, 30);
    cb5.setBounds (190, 340, 50, 30);
    cb6.setBounds (190, 390, 50, 30);
    Btn3.setBounds (170, 490, 95, 40);
    txt2.setBounds (190, 440, 55, 35);
    int numbers_to_add_max = 10;
    for (int i = 0;
    i <= numbers_to_add_max; i ++) {
        cb2.addItem (new Integer (i));
        cb4.addItem (new Integer (i));
        cb5.addItem (new Integer (i));
    }
    int numbers = 20;
    for (int i = 0;
    i <= numbers; i ++) {
        cb1.addItem (new Integer (i));
        cb3.addItem (new Integer (i));
    }
    int numbers_to_add = 30;
    for (int i = 0;
    i <= numbers_to_add; i ++) {
        cb6.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb7);
    f2.getContentPane ().add (cb8);
    f2.getContentPane ().add (cb9);
    f2.getContentPane ().add (cb10);
    f2.getContentPane ().add (cb11);
    f2.getContentPane ().add (cb12);
    f2.getContentPane ().add (Btn4);
    f2.getContentPane ().add (txt3);
    txt3.setEditable (false);
    cb7.setBounds (315, 140, 50, 30);
    cb8.setBounds (315, 190, 50, 30);
    cb9.setBounds (315, 240, 50, 30);
    cb10.setBounds (315, 290, 50, 30);
    cb11.setBounds (315, 340, 50, 30);
    cb12.setBounds (315, 390, 50, 30);
    Btn4.setBounds (295, 490, 95, 40);
    txt3.setBounds (315, 440, 55, 35);
    int nu = 10;
    for (int i = 0;
    i <= nu; i ++) {
        cb8.addItem (new Integer (i));
        cb10.addItem (new Integer (i));
        cb11.addItem (new Integer (i));
    }
    int num = 20;
    for (int i = 0;
    i <= num; i ++) {
        cb7.addItem (new Integer (i));
        cb9.addItem (new Integer (i));
    }
    int numb = 30;
    for (int i = 0;
    i <= numb; i ++) {
        cb12.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb13);
    f2.getContentPane ().add (cb14);
    f2.getContentPane ().add (cb15);
    f2.getContentPane ().add (cb16);
    f2.getContentPane ().add (cb17);
    f2.getContentPane ().add (cb18);
    f2.getContentPane ().add (Btn5);
    f2.getContentPane ().add (txt4);
    txt4.setEditable (false);
    cb13.setBounds (440, 140, 50, 30);
    cb14.setBounds (440, 190, 50, 30);
    cb15.setBounds (440, 240, 50, 30);
    cb16.setBounds (440, 290, 50, 30);
    cb17.setBounds (440, 340, 50, 30);
    cb18.setBounds (440, 390, 50, 30);
    Btn5.setBounds (420, 490, 95, 40);
    txt4.setBounds (440, 440, 55, 35);
    int toaddmax = 10;
    for (int i = 0;
    i <= toaddmax; i ++) {
        cb14.addItem (new Integer (i));
        cb16.addItem (new Integer (i));
        cb17.addItem (new Integer (i));
    }
    int numbersadd = 20;
    for (int i = 0;
    i <= numbersadd; i ++) {
        cb13.addItem (new Integer (i));
        cb15.addItem (new Integer (i));
    }
    int numbers_toadd = 30;
    for (int i = 0;
    i <= numbers_toadd; i ++) {
        cb18.addItem (new Integer (i));
    }
    f2.getContentPane ().add (cb19);
    f2.getContentPane ().add (cb20);
    f2.getContentPane ().add (cb21);
    f2.getContentPane ().add (cb22);
    f2.getContentPane ().add (cb23);
    f2.getContentPane ().add (cb24);
    f2.getContentPane ().add (Btn6);
    f2.getContentPane ().add (txt5);
    txt5.setEditable (false);
    cb19.setBounds (565, 140, 50, 30);
    cb20.setBounds (565, 190, 50, 30);
    cb21.setBounds (565, 240, 50, 30);
    cb22.setBounds (565, 290, 50, 30);
    cb23.setBounds (565, 340, 50, 30);
    cb24.setBounds (565, 390, 50, 30);
    Btn6.setBounds (545, 490, 95, 40);
    txt5.setBounds (565, 440, 55, 35);
    int add_max = 10;
    for (int i = 0;
    i <= add_max; i ++) {
        cb20.addItem (new Integer (i));
        cb22.addItem (new Integer (i));
        cb23.addItem (new Integer (i));
    }
    int number = 20;
    for (int i = 0;
    i <= number; i ++) {
        cb19.addItem (new Integer (i));
        cb21.addItem (new Integer (i));
    }
    int to_add = 30;
    for (int i = 0;
    i <= to_add; i ++) {
        cb24.addItem (new Integer (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7704673_48565035_3_23
7704673_7705016_3_31
Title: Code for finding pythagorean triplets 
----------------------------------------

public static void main (long n) {
    long h = 1, p = 1, b1;
    double b;
    while (h <= n) {
        while (p < h) {
            b = Math.sqrt ((h * h) - (p * p));
            if (b % 1 == 0) {
                b1 = (long) b;
                System.out.println (b1 + "," + p + "," + h);
                break;
            }
            p ++;
        }
        h ++;
        p = 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    int m = 1, n = 0, a = 0, b = 0, c = 0, sum = 0;
    int product = 0;
    for (m = 2; m < 100; m ++) {
        for (n = 1; n < 100; n ++) {
            while (m > n) {
                a = (m * m) - (n * n);
                b = (2 * m) * n;
                c = (m * m) + (n * n);
                sum = a + b + c;
                if (sum == 1000) {
                    product = a * b * c;
                    System.out.print ("a :" + a + "b :" + b + "c : " + c);
                    System.out.println ("Product is" + product);
                    break;
                }
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7706666_7707415_43_61
7706666_7707415_9_37
Title: ArrayBlockingQueue and add vs put vs capacity 
----------------------------------------

public void run () {
    while (true) {
        try {
            Integer i = myQueue.take ();
            System.out.println ("Took a off the queue! value: " + i + " size: " + myQueue.size ());
            Thread.sleep (100);
        } catch (InterruptedException ex) {
            Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------

public void run () {
    int i = 0;
    while (true) {
        try {
            myQueue.add (i);
            System.out.println ("Added to queue! value: " + i + " size: " + myQueue.size ());
            i ++;
        } catch (Exception e) {
            System.out.println ("add() threw exception, size: " + myQueue.size ());
            try {
                Thread.sleep (1000);
            } catch (InterruptedException ex) {
                Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7721447_22834698_12_31
7721447_7723065_21_49
Title: Creating PDF from TIFF image using iText 
----------------------------------------

public static void main (String [] args) throws Exception {
    RandomAccessFile aFile = new RandomAccessFile ("/myfolder/origin.tif", "r");
    FileChannel inChannel = aFile.getChannel ();
    FileChannelRandomAccessSource fcra = new FileChannelRandomAccessSource (inChannel);
    Document document = new Document ();
    PdfWriter.getInstance (document, new FileOutputStream ("/myfolder/destination.pdf"));
    document.open ();
    RandomAccessFileOrArray rafa = new RandomAccessFileOrArray (fcra);
    int pages = TiffImage.getNumberOfPages (rafa);
    Image image;
    for (int i = 1;
    i <= pages; i ++) {
        image = TiffImage.getTiffImage (rafa, i);
        Rectangle pageSize = new Rectangle (image.getWidth (), image.getHeight ());
        document.setPageSize (pageSize);
        document.newPage ();
        document.add (image);
    }
    document.close ();
    aFile.close ();
}
----------------------------------------

public static void main (String [] args) throws DocumentException, IOException {
    String imgeFilename = "/home/saurabh/Downloads/image.tif";
    Document document = new Document ();
    PdfWriter writer = PdfWriter.getInstance (document, new FileOutputStream ("/home/saurabh/Desktop/out" + Math.random () + ".pdf"));
    writer.setStrictImageSequence (true);
    document.open ();
    document.add (new Paragraph ("Multipages tiff file"));
    Image image;
    RandomAccessFileOrArray ra = new RandomAccessFileOrArray (imgeFilename);
    int pages = TiffImage.getNumberOfPages (ra);
    for (int i = 1;
    i <= pages; i ++) {
        image = TiffImage.getTiffImage (ra, i);
        Rectangle pageSize = new Rectangle (image.getWidth (), image.getHeight ());
        document.setPageSize (pageSize);
        document.add (image);
        document.newPage ();
    }
    document.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
772914_772973_2_9
772914_773023_4_18
Title: "Java - local class and generics why compiler warning?" 
----------------------------------------

Iterator < E > foo () {
    class InIterator < F > implements Iterator < F > {
        @Override
        public boolean hasNext () {
            return false;
        }@Override
        public E next () {
            return null;
        }@Override
        public void remove () {
        }}

    return new InIterator < E > ();
}
----------------------------------------

Iterator < E > foo () {
    class InIterator implements Iterator < E > {
        public boolean hasNext () {
            return false;
        } public E next () {
            return null;
        } public void remove () {
        }}

    return new InIterator ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
772914_773023_4_18
772914_773258_3_10
Title: "Java - local class and generics why compiler warning?" 
----------------------------------------

Iterator < E > foo () {
    class InIterator implements Iterator < E > {
        public boolean hasNext () {
            return false;
        } public E next () {
            return null;
        } public void remove () {
        }}

    return new InIterator ();
}
----------------------------------------

Iterator < E > foo () {
    class InIterator < Z > implements Iterator < E > {
        @Override
        public boolean hasNext () {
            return false;
        }@Override
        public E next () {
            return bar;
        }@Override
        public void remove () {
        }}

    return new InIterator < Void > ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7733556_7733617_7_25
7733556_7733623_3_13
Title: java array list 
----------------------------------------

public static void main (String [] args) {
    Console c = System.console ();
    List < String > myArr = new ArrayList < String > ();
    if (null == c) {
    }
    String entry = c.readLine ("Enter the bits: ");
    for (int i = 0;
    i < entry.length (); i ++) {
        String bit = entry.substring (i, i + 1);
        if ("1".equals (bit)) myArr.add ("10");
        else myArr.add ("01");

    }
    for (String element : myArr) System.out.print (s);

}
----------------------------------------

public static void main (String [] args) {
    String user = "1010";
    StringBuilder sb = new StringBuilder ();
    for (char c : user.toCharArray ()) {
        if (c == '1') sb.append ("10");
        else sb.append ("01");

    }
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7743203_7743412_3_9
7743203_7746901_7_13
Title: Deadlock in Java code with Semaphore and acquire(int) 
----------------------------------------

public void run () {
    try {
        while (! s.tryAcquire (r, 1, TimeUnit.MILLISECONDS)) {
        }
        System.out.println (c + "_" + r);
        s.release (r + 1);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("acquire " + r);
        s.acquire (r);
        System.out.println (c + "_" + r);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7764671_30888132_1_11
7764671_39824663_1_11
Title: Java JDBC connection status 
----------------------------------------

public static boolean isDbConnected () {
    final String CHECK_SQL_QUERY = "SELECT 1";
    boolean isConnected = false;
    try {
        final PreparedStatement statement = db.prepareStatement (CHECK_SQL_QUERY);
        isConnected = true;
    } catch (SQLException | NullPointerException e) {
    }
    return isConnected;
}
----------------------------------------

public boolean isDbConnected (con Connection) {
    try {
        if (! con.isClosed () || con != null) {
            return true;
        }
    } catch (SQLException e) {
        return false;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7768102_7768229_14_30
7768102_7768229_33_54
Title: Socket and TCP in java 
----------------------------------------

public void run () {
    try {
        ServerSocket serverSocket = new ServerSocket (12345);
        Socket clientSocket = serverSocket.accept ();
        long startTime = System.currentTimeMillis ();
        byte [] buffer = new byte [BUFFER_SIZE];
        int read;
        int totalRead = 0;
        InputStream clientInputStream = clientSocket.getInputStream ();
        while ((read = clientInputStream.read (buffer)) != - 1) {
            totalRead += read;
        }
        long endTime = System.currentTimeMillis ();
        System.out.println (totalRead + " bytes read in " + (endTime - startTime) + " ms.");
    } catch (IOException e) {
    }
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
        Socket socket = new Socket ("localhost", 12345);
        FileInputStream fileInputStream = new FileInputStream (largeFile);
        OutputStream socketOutputStream = socket.getOutputStream ();
        long startTime = System.currentTimeMillis ();
        byte [] buffer = new byte [BUFFER_SIZE];
        int read;
        int readTotal = 0;
        while ((read = fileInputStream.read (buffer)) != - 1) {
            socketOutputStream.write (buffer, 0, read);
            readTotal += read;
        }
        socketOutputStream.close ();
        fileInputStream.close ();
        socket.close ();
        long endTime = System.currentTimeMillis ();
        System.out.println (readTotal + " bytes written in " + (endTime - startTime) + " ms.");
    } catch (Exception e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7771634_7771669_3_9
7771634_7772218_1_10
Title: Sort list on base of multiple criteria 
----------------------------------------

public int compare (T a, T b) {
    for (int i = cmps.length;
    -- i >= 0;) {
        int delta = cmps [i].compare (a, b);
        if (delta != 0) {
            return delta;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Customer c1, Customer c2) {
    int i = c1.getPriority ().compareTo (c2.getPriority ());
    if (i != 0) return i;

    i = c1.getNumber ().compareTo (c2.getNumber ());
    if (i != 0) return i;

    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7775622_7775822_21_29
7775622_7775822_41_52
Title: Java: Scheduled Tasks 
----------------------------------------

public void run () {
    System.out.println ("First task: counting to 5");
    for (int i = 1;
    i <= 5; i ++) {
        sleep (1000);
        System.out.println (i);
    }
    System.out.println ("All done! Submitting followup task.");
    executorService.submit (followup);
}
----------------------------------------

public void run () {
    invocationCount ++;
    if (invocationCount == 1) {
        System.out.println ("Followup task: resubmit while invocationCount < 20");
    }
    System.out.println ("invocationCount = " + invocationCount);
    if (invocationCount < 20) {
        executorService.schedule (this, 250, TimeUnit.MILLISECONDS);
    } else {
        executorService.shutdown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7775790_7776145_41_57
7775790_7776145_69_92
Title: "Create an Object pass the Object to another Object's constructor call wait() on Object then notify() in Java" 
----------------------------------------

public void run () {
    try {
        final ServerSocket srvsocket = new ServerSocket (port);
        log.info (String.format ("Server started @ %s\n", srvsocket));
        while (! Thread.currentThread ().isInterrupted ()) {
            Socket newclient = srvsocket.accept ();
            new Thread (new ClientHandler (newclient)).start ();
        }
    } catch (Exception e) {
        log.severe (e.getMessage ());
    }
    log.info ("server stopped");
}
----------------------------------------

final public void run () {
    log.info (String.format ("new client @ %s\n", socket.getRemoteSocketAddress ()));
    try {
        final InputStream in = socket.getInputStream ();
        final OutputStream out = socket.getOutputStream ();
        for (;;) {
        }
    } catch (Exception e) {
        log.severe (e.getMessage ());
    } finally {
        try {
            socket.close ();
        } catch (Exception e) {
            log.severe (e.getMessage ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7781148_7782392_111_129
7781148_7782392_155_171
Title: Displaying and manipulating updated image 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon saveIcon = new ImageIcon ("save-icon.png");
    int askSave = JOptionPane.showConfirmDialog (null, "Save current image?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, saveIcon);
    if (askSave == JOptionPane.YES_OPTION) {
        saveImage ();
        Picture p = new Picture ();
        imageLabel.setIcon (new ImageIcon (image));
        frame.setSize (width (), height ());
    } else {
        Picture p = new Picture ();
        imageLabel.setIcon (new ImageIcon (image));
        frame.setSize (width (), height ());
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7781148_7782392_111_129
7781148_7782392_92_104
Title: Displaying and manipulating updated image 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon saveIcon = new ImageIcon ("save-icon.png");
    int askSave = JOptionPane.showConfirmDialog (null, "Save current image?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, saveIcon);
    if (askSave == JOptionPane.YES_OPTION) {
        saveImage ();
        Picture p = new Picture ();
        imageLabel.setIcon (new ImageIcon (image));
        frame.setSize (width (), height ());
    } else {
        Picture p = new Picture ();
        imageLabel.setIcon (new ImageIcon (image));
        frame.setSize (width (), height ());
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon saveIcon = new ImageIcon ("save-icon.png");
    int askSave = JOptionPane.showConfirmDialog (null, "Save current image?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, saveIcon);
    if (askSave == JOptionPane.YES_OPTION) {
        saveImage ();
        System.exit (0);
    } else {
        System.exit (0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7781148_7782392_155_171
7781148_7782392_92_104
Title: Displaying and manipulating updated image 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon widthIcon = new ImageIcon ("LR-arrows.png");
    String scaleWidth = (String) JOptionPane.showInputDialog (null, "What should the new width be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    ImageIcon heightIcon = new ImageIcon ("UD-arrows.png");
    String scaleHeight = (String) JOptionPane.showInputDialog (null, "What should the new height be?", "", JOptionPane.QUESTION_MESSAGE, widthIcon, null, null);
    double x = Double.parseDouble (scaleWidth);
    double y = Double.parseDouble (scaleHeight);
    int newWidth = (int) x;
    int newHeight = (int) y;
    frame.setSize (newWidth, newHeight);
    scale (newWidth, newHeight);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ImageIcon saveIcon = new ImageIcon ("save-icon.png");
    int askSave = JOptionPane.showConfirmDialog (null, "Save current image?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, saveIcon);
    if (askSave == JOptionPane.YES_OPTION) {
        saveImage ();
        System.exit (0);
    } else {
        System.exit (0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7790919_7790939_32_45
7790919_7790939_50_59
Title: Getting java to display more than 1 .add() 
----------------------------------------

public void paintComponent (Graphics g) {
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Color gridColor = new Color (0, 84, 12);
    g2.setColor (gridColor);
    int i;
    int i2;
    for (i = 50; i <= Map.mapWidth; i += 51) {
        g2.drawLine (0, i, Map.mapWidth, i);
    }
    for (i2 = 50; i2 <= Map.mapHeight; i2 += 51) {
        g2.drawLine (i2, 0, i2, Map.mapHeight);
    }
}
----------------------------------------

public void paintComponent (Graphics g2) {
    Graphics2D g22 = (Graphics2D) g2;
    g22.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Color gridColor = new Color (0, 84, 12);
    g22.setColor (gridColor);
    int i22;
    for (i22 = 50; i22 <= 6000; i22 += 53) {
        g22.drawLine (0, i22, Map.mapWidth, i22 + 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7796558_11533424_10_32
7796558_11533424_13_30
Title: JavaFX 2.0+ WebView /WebEngine render web page to an image 
----------------------------------------

public void run () {
    Platform.runLater (new Runnable () {
        @Override
        public void run () {
            browser = new FXBrowser ();
            jfxPanel.setScene (browser.getScene ());
            jFrame.setSize ((int) browser.getWebView ().getWidth (), (int) browser.getWebView ().getHeight ());
            browser.getWebEngine ().getLoadWorker ().stateProperty ().addListener (new ChangeListener () {
                @Override
                public void changed (ObservableValue observable, Object oldValue, Object newValue) {
                    State oldState = (State) oldValue;
                    State newState = (State) newValue;
                    if (State.SUCCEEDED == newValue) {
                        captureView ();
                    }
                }}

            );
        }}

    );
}
----------------------------------------

public void run () {
    browser = new FXBrowser ();
    jfxPanel.setScene (browser.getScene ());
    jFrame.setSize ((int) browser.getWebView ().getWidth (), (int) browser.getWebView ().getHeight ());
    browser.getWebEngine ().getLoadWorker ().stateProperty ().addListener (new ChangeListener () {
        @Override
        public void changed (ObservableValue observable, Object oldValue, Object newValue) {
            State oldState = (State) oldValue;
            State newState = (State) newValue;
            if (State.SUCCEEDED == newValue) {
                captureView ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7809216_7814057_1_18
7809216_8411705_1_23
Title: Dom4j xmlns attribute 
----------------------------------------

public static String toXml () {
    Document document = DocumentHelper.createDocument ();
    Element documentRoot = document.addElement ("ResponseMessage", getXmlNamespace ());
    documentRoot.addAttribute (QName.get ("schemaLocation", "xsi", "xsi-ns"), "schema.xsd").addAttribute ("id", "4711");
    Element header = documentRoot.addElement ("Header");
    Element body = documentRoot.addElement ("Body", getXmlNamespace ());
    body.addElement ("StatusMessage", getXmlNamespace ()).addText ("status");
    return document.asXML ();
}
----------------------------------------

public static String toXml () {
    Document d = DocumentHelper.createDocument ();
    Namespace rootNs = new Namespace ("", DEFAULT_NAMESPACE);
    Namespace xsiNs = new Namespace ("xsi", XSI_NAMESPACE);
    QName rootQName = QName.get (rootElement, rootNs);
    Element root = d.addElement (rootElement);
    root.setQName (rootQName);
    root.add (xsiNs);
    root.addAttribute ("xsi:schemaLocation", SCHEMA_LOC).addAttribute ("id", super.getId ());
    Element header = documentRoot.addElement ("Header");
    Element body = documentRoot.addElement ("Body", getXmlNamespace ());
    body.addElement ("StatusMessage", getXmlNamespace ()).addText ("status");
    return document.asXML ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7809838_7809933_9_20
7809838_7810287_34_43
Title: JPanel drawing with a specific color 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Rectangle rect;
    if (colors != null) {
        for (int i = 0;
        i < colors.size (); i ++) {
            rect = circles.elementAt (i);
            g.setColor (colors [(i % color_n)]);
            g.fillOval (rect.x, rect.y, rect.width, rect.height);
        }
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Rectangle rect;
    for (int i = 0;
    i < circles.size (); i ++) {
        rect = circles.get (i).rectangle;
        g.setColor (circles.get (i).color);
        g.fillOval (rect.x, rect.y, rect.width, rect.height);
        System.out.println ("Drawing...");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7816585_7816604_21_32
7816585_7824786_138_155
Title: Program freezes during Thread.sleep() and with Timer 
----------------------------------------

public static void main (String [] args) {
    TimerTime frame = new TimerTime ();
    frame.setDefaultCloseOperation (EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
    int time = 1000;
    javax.swing.Timer timer = new javax.swing.Timer (time, frame);
    timer.setInitialDelay (1);
    timer.start ();
}
----------------------------------------

public static void main (String s []) {
    JFrame f = new JFrame ("See Through Image");
    f.addWindowListener (new WindowAdapter () {
        public void windowClosing (WindowEvent e) {
            System.exit (0);
        }}

    );
    URL imageSrc1 = null;
    URL imageSrc2 = null;
    try {
        imageSrc1 = ((new File (imageFileName1)).toURI ()).toURL ();
        imageSrc2 = ((new File (imageFileName2)).toURI ()).toURL ();
    } catch (MalformedURLException e) {
    }
    MorphImageApplet sta = new MorphImageApplet (imageSrc1, imageSrc2);
    sta.buildUI ();
    f.add ("Center", sta);
    f.pack ();
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7818752_7820254_21_51
7818752_7820338_19_65
Title: Can not click on tab when mouse listener has been added 
----------------------------------------

public JTabbedPaneDemo () {
    ImageIcon icon = new ImageIcon ("java-swing-tutorial.JPG");
    jtbExample = new JTabbedPane ();
    JPanel jplInnerPanel1 = createInnerPanel ("Tab 1 Contains Tooltip and Icon");
    jtbExample.addTab ("One", icon, jplInnerPanel1, "Tab 1");
    jtbExample.setSelectedIndex (0);
    JPanel jplInnerPanel2 = createInnerPanel ("Tab 2 Contains Icon only");
    jtbExample.addTab ("Two", icon, jplInnerPanel2);
    JPanel jplInnerPanel3 = createInnerPanel ("Tab 3 Contains Tooltip and Icon");
    jtbExample.addTab ("Three", icon, jplInnerPanel3, "Tab 3");
    JPanel jplInnerPanel4 = createInnerPanel ("Tab 4 Contains Text only");
    jtbExample.addTab ("Four", jplInnerPanel4);
    menu.add (new JMenuItem ("Item 1"));
    menu.add (new JMenuItem ("Item 2"));
    JLabel tab4Label = new JLabel ();
    tab4Label.setText ("Four");
    jtbExample.setTabComponentAt (3, tab4Label);
    tab4Label.addMouseListener (new TabbedMouseListener (3));
    setLayout (new GridLayout (1, 1));
    add (jtbExample);
}
----------------------------------------

public JTabbedPaneDemo () {
    Icon icon = UIManager.getIcon ("html.pendingImage");
    final JTabbedPane jtb = new JTabbedPane ();
    JPanel jplInnerPanel1 = createInnerPanel ("Tab 1: Tooltip and Icon");
    jtb.addTab ("One", icon, jplInnerPanel1, "Tab 1");
    jtb.setSelectedIndex (0);
    JPanel jplInnerPanel2 = createInnerPanel ("Tab 2: Icon only");
    jtb.addTab ("Two", icon, jplInnerPanel2);
    JPanel jplInnerPanel3 = createInnerPanel ("Tab 3: Tooltip and Icon");
    jtb.addTab ("Three", icon, jplInnerPanel3, "Tab 3");
    JPanel jplInnerPanel4 = createInnerPanel ("Tab 4: Text only");
    jtb.addTab ("Four", jplInnerPanel4);
    menu.add (new JMenuItem ("Item 1"));
    menu.add (new JMenuItem ("Item 2"));
    JLabel tab4Label = new JLabel ();
    tab4Label.setText ("Four");
    jtb.setTabComponentAt (3, tab4Label);
    tab4Label.addMouseListener (new MouseAdapter () {
        @Override
        public void mouseReleased (MouseEvent e) {
            maybeShowPopup (e);
        }@Override
        public void mousePressed (MouseEvent e) {
            maybeShowPopup (e);
        } private void maybeShowPopup (MouseEvent e) {
            jtb.getModel ().setSelectedIndex (3);
            if (e.isPopupTrigger ()) {
                menu.show (e.getComponent (), e.getX (), e.getY ());
            }
        }}

    );
    setLayout (new GridLayout ());
    add (jtb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7818752_7820254_94_105
7818752_7820338_76_89
Title: Can not click on tab when mouse listener has been added 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("TabbedPane Source Demo");
    frame.addWindowListener (new WindowAdapter () {
        public void windowClosing (WindowEvent e) {
            System.exit (0);
        }}

    );
    frame.getContentPane ().add (new JTabbedPaneDemo (), BorderLayout.CENTER);
    frame.setSize (400, 125);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new JFrame ("TabbedPane Source Demo");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.add (new JTabbedPaneDemo ());
            frame.pack ();
            frame.setSize (400, 125);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7830951_26374485_1_12
7830951_36253340_1_26
Title: How can I load Computer Directory images in JAVAFX 
----------------------------------------

public void start (Stage primaryStage) {
    primaryStage.setTitle ("Hello World");
    StackPane root = new StackPane ();
    Scene scene = new Scene (root, 300, 250);
    java.io.FileInputStream fis = new FileInputStream ("/System/Library/CoreServices/loginwindow.app/Contents/Resources/LogOut.png");
    ImageView iv = new ImageView (new Image (fis));
    root.getChildren ().add (iv);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) throws Exception {
    Pane pane = new HBox (10);
    pane.setPadding (new Insets (5, 5, 5, 5));
    Image image = new Image ("/Content/vortex.jpg");
    ImageView imageView = new ImageView (image);
    imageView.setFitHeight (100);
    imageView.setFitWidth (100);
    pane.getChildren ().add (imageView);
    pane.getChildren ().add (new ImageView (image));
    ImageView imageView2 = new ImageView (image);
    imageView2.setRotate (45);
    pane.getChildren ().add (imageView2);
    Scene scene = new Scene (pane, 200, 200);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7830951_36253340_1_26
7830951_8088561_1_13
Title: How can I load Computer Directory images in JAVAFX 
----------------------------------------

@Override
public void start (Stage primaryStage) throws Exception {
    Pane pane = new HBox (10);
    pane.setPadding (new Insets (5, 5, 5, 5));
    Image image = new Image ("/Content/vortex.jpg");
    ImageView imageView = new ImageView (image);
    imageView.setFitHeight (100);
    imageView.setFitWidth (100);
    pane.getChildren ().add (imageView);
    pane.getChildren ().add (new ImageView (image));
    ImageView imageView2 = new ImageView (image);
    imageView2.setRotate (45);
    pane.getChildren ().add (imageView2);
    Scene scene = new Scene (pane, 200, 200);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    primaryStage.setTitle ("Hello World");
    StackPane root = new StackPane ();
    Scene scene = new Scene (root, 300, 250);
    File file = new File ("/System/Library/CoreServices/loginwindow.app/Contents/Resources/LogOut.png");
    Image image = new Image (file.toURI ().toString ());
    ImageView iv = new ImageView (image);
    root.getChildren ().add (iv);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7863362_19032324_7_30
7863362_7863418_1_31
Title: Get the longest substring from a string which is passed in Java 
----------------------------------------

public static String getLongestSubstring (String s) {
    int length = 1;
    String longestString = "";
    for (int i = 0;
    i < s.length (); i ++) {
        StringBuilder str = new StringBuilder ();
        str.append (s.charAt (i));
        for (int j = i + 1;
        j < s.length (); j ++) {
            if (s.charAt (i) == s.charAt (j)) {
                str.append (s.charAt (j));
            } else {
                break;
            }
        }
        if (length < str.length ()) {
            length = str.length ();
            longestString = str.toString ();
        }
    }
    return longestString;
}
----------------------------------------

public String getLongestSubstring (String s) {
    if (s.length () == 0) return null;

    char currentChar = s.charAt (0);
    String longestString = "" + currentChar;
    String runningString = "" + currentChar;
    int currentLongestLength = 1;
    for (int i = 1;
    i < s.length (); i ++) {
        if (s.charAt (i) == currentChar) {
            runningString = runningString + currentChar;
            if (runningString.length () > longestString.length ()) {
                currentLongestLength ++;
                longestString = runningString;
            }
        } else {
            runningString = "" + s.charAt (i);
        }
    }
    return longestString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7881925_25318215_7_24
7881925_7881957_55_74
Title: Custom ListCellRenderer will not change background color 
----------------------------------------

public Component getListCellRendererComponent (JList < ? extends MyObject > list, MyObject value, int index, boolean isSelected, boolean cellHasFocus) {
    JLabel label = new JLabel ();
    label.setOpaque (true);
    label.setText (value.getName ());
    if (isSelected) {
        label.setForeground (list.getSelectionForeground ());
        label.setBackground (list.getSelectionBackground ());
    } else {
        label.setForeground (list.getForeground ());
        label.setBackground (list.getBackground ());
    }
    return label;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    if (value instanceof File) {
        File file = (File) value;
        setText (file.getName ());
        setIcon (FileSystemView.getFileSystemView ().getSystemIcon (file));
        if (isSelected) {
            setBackground (Color.red);
            setForeground (Color.blue);
        } else {
            setBackground (list.getBackground ());
            setForeground (list.getForeground ());
        }
        setFont (list.getFont ());
        setOpaque (true);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7884480_7884521_160_180
7884480_7884521_209_248
Title: How can I make a suggestion List in my Autocomplete application? 
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (e.getKeyCode () == KeyEvent.VK_ESCAPE) {
        hideSuggestionWindowToBack ();
    } else if (e.getKeyCode () == KeyEvent.VK_ENTER) {
        int selectedIndex = suggestionWidget.getSelectedIndex ();
        if (selectedIndex == - 1) {
            onSearchClick ();
        } else {
            onSuggestionSelected (selectedIndex);
        }
    }

}
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (suggestionWidgetModel.isEmpty ()) {
        return;
    }
    if (e.getKeyCode () == KeyEvent.VK_DOWN) {
        final Point location = word.getLocationOnScreen ();
        javaWindow.setLocation (location.x, location.y + word.getHeight ());
        showSuggestionWindowToBack ();
        int currentSelectedItemIndex = suggestionWidget.getSelectedIndex ();
        if (currentSelectedItemIndex == - 1 || currentSelectedItemIndex == suggestionWidgetModel.size () - 1) {
            suggestionWidget.setSelectedIndex (0);
        } else if (currentSelectedItemIndex < suggestionWidgetModel.size () - 1) {
            suggestionWidget.setSelectedIndex (currentSelectedItemIndex + 1);
        }

    } else if (e.getKeyCode () == KeyEvent.VK_UP) {
        int currentSelectedItemIndex = suggestionWidget.getSelectedIndex ();
        if (currentSelectedItemIndex == - 1 || currentSelectedItemIndex == suggestionWidgetModel.size () + 1) {
            suggestionWidget.setSelectedIndex (0);
        } else if (currentSelectedItemIndex < suggestionWidgetModel.size () + 1) {
            suggestionWidget.setSelectedIndex (currentSelectedItemIndex - 1);
        }

    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7884480_7884521_160_180
7884480_7884521_292_329
Title: How can I make a suggestion List in my Autocomplete application? 
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (e.getKeyCode () == KeyEvent.VK_ESCAPE) {
        hideSuggestionWindowToBack ();
    } else if (e.getKeyCode () == KeyEvent.VK_ENTER) {
        int selectedIndex = suggestionWidget.getSelectedIndex ();
        if (selectedIndex == - 1) {
            onSearchClick ();
        } else {
            onSuggestionSelected (selectedIndex);
        }
    }

}
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (speechPartAndDefinitionWidgetModel.isEmpty ()) {
        return;
    }
    if (e.getKeyCode () == KeyEvent.VK_DOWN) {
        int currentSelectedItemIndex = speechPartAndDefinitionWidget.getSelectedIndex ();
        if (currentSelectedItemIndex == - 1 || currentSelectedItemIndex == speechPartAndDefinitionWidgetModel.size () - 1) {
            speechPartAndDefinitionWidget.setSelectedIndex (0);
        } else if (currentSelectedItemIndex < speechPartAndDefinitionWidgetModel.size () - 1) {
            speechPartAndDefinitionWidget.setSelectedIndex (currentSelectedItemIndex + 1);
            onTranslate ();
        }

    } else if (e.getKeyCode () == KeyEvent.VK_UP) {
        int currentSelectedItemIndex = speechPartAndDefinitionWidget.getSelectedIndex ();
        if (currentSelectedItemIndex == - 1 || currentSelectedItemIndex == speechPartAndDefinitionWidgetModel.size () + 1) {
            speechPartAndDefinitionWidget.setSelectedIndex (0);
        } else if (currentSelectedItemIndex < speechPartAndDefinitionWidgetModel.size () + 1) {
            speechPartAndDefinitionWidget.setSelectedIndex (currentSelectedItemIndex - 1);
        }

    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7884480_7884521_491_542
7884480_7884521_499_534
Title: How can I make a suggestion List in my Autocomplete application? 
----------------------------------------

public void run () {
    try {
        final List < Suggestion > suggestions = suggestor.getSuggestions (toComplete);
        SwingUtilities.invokeLater (new Runnable () {
            public void run () {
                speechPartAndDefinitionWidgetModel.clear ();
                translatedWidgetModel.clear ();
                suggestionWidgetModel.clear ();
                try {
                    for (Suggestion suggestion : suggestions) {
                        suggestionWidgetModel.addElement (suggestion.getCaption ());
                    }
                    if (! suggestions.isEmpty ()) {
                        suggestionWidget.setSelectedIndex (0);
                        if (javaWindow == null) {
                            javaWindow = new JavaWindow (suggestionWidget);
                        } else {
                            final Point location = word.getLocationOnScreen ();
                            javaWindow.setLocation (location.x, location.y + word.getHeight ());
                        }
                        showSuggestionWindowToBack ();
                    } else {
                        hideSuggestionWindowToBack ();
                    }
                } catch (Exception exception) {
                    exception.printStackTrace ();
                }
            }}

        );
    } catch (SQLException e) {
        onSqlError (e);
    }
}
----------------------------------------

public void run () {
    speechPartAndDefinitionWidgetModel.clear ();
    translatedWidgetModel.clear ();
    suggestionWidgetModel.clear ();
    try {
        for (Suggestion suggestion : suggestions) {
            suggestionWidgetModel.addElement (suggestion.getCaption ());
        }
        if (! suggestions.isEmpty ()) {
            suggestionWidget.setSelectedIndex (0);
            if (javaWindow == null) {
                javaWindow = new JavaWindow (suggestionWidget);
            } else {
                final Point location = word.getLocationOnScreen ();
                javaWindow.setLocation (location.x, location.y + word.getHeight ());
            }
            showSuggestionWindowToBack ();
        } else {
            hideSuggestionWindowToBack ();
        }
    } catch (Exception exception) {
        exception.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7896280_25964657_10_78
7896280_7898685_1_18
Title: Converting from HSV (HSB in Java) to RGB without using java.awt.Color (disallowed on Google App Engine) 
----------------------------------------

public static String hsvToRgb (float H, float S, float V) {
    float R, G, B;
    H /= 360f;
    S /= 100f;
    V /= 100f;
    if (S == 0) {
        R = V * 255;
        G = V * 255;
        B = V * 255;
    } else {
        float var_h = H * 6;
        if (var_h == 6) var_h = 0;

        int var_i = (int) Math.floor ((double) var_h);
        float var_1 = V * (1 - S);
        float var_2 = V * (1 - S * (var_h - var_i));
        float var_3 = V * (1 - S * (1 - (var_h - var_i)));
        float var_r;
        float var_g;
        float var_b;
        if (var_i == 0) {
            var_r = V;
            var_g = var_3;
            var_b = var_1;
        } else if (var_i == 1) {
            var_r = var_2;
            var_g = V;
            var_b = var_1;
        } else if (var_i == 2) {
            var_r = var_1;
            var_g = V;
            var_b = var_3;
        } else if (var_i == 3) {
            var_r = var_1;
            var_g = var_2;
            var_b = V;
        } else if (var_i == 4) {
            var_r = var_3;
            var_g = var_1;
            var_b = V;
        } else {
            var_r = V;
            var_g = var_1;
            var_b = var_2;
        }

        R = var_r * 255;
        G = var_g * 255;
        B = var_b * 255;
    }
    String rs = Integer.toHexString ((int) (R));
    String gs = Integer.toHexString ((int) (G));
    String bs = Integer.toHexString ((int) (B));
    if (rs.length () == 1) rs = "0" + rs;

    if (gs.length () == 1) gs = "0" + gs;

    if (bs.length () == 1) bs = "0" + bs;

    return "#" + rs + gs + bs;
}
----------------------------------------

public static String hsvToRgb (float hue, float saturation, float value) {
    int h = (int) (hue * 6);
    float f = hue * 6 - h;
    float p = value * (1 - saturation);
    float q = value * (1 - f * saturation);
    float t = value * (1 - (1 - f) * saturation);
    switch (h) {
        case 0 :
            return rgbToString (value, t, p);
        case 1 :
            return rgbToString (q, value, p);
        case 2 :
            return rgbToString (p, value, t);
        case 3 :
            return rgbToString (p, q, value);
        case 4 :
            return rgbToString (t, p, value);
        case 5 :
            return rgbToString (value, p, q);
        default :
            throw new RuntimeException ("Something went wrong when converting from HSV to RGB. Input was " + hue + ", " + saturation + ", " + value);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7896280_25964657_10_78
7896280_7901693_1_42
Title: Converting from HSV (HSB in Java) to RGB without using java.awt.Color (disallowed on Google App Engine) 
----------------------------------------

public static String hsvToRgb (float H, float S, float V) {
    float R, G, B;
    H /= 360f;
    S /= 100f;
    V /= 100f;
    if (S == 0) {
        R = V * 255;
        G = V * 255;
        B = V * 255;
    } else {
        float var_h = H * 6;
        if (var_h == 6) var_h = 0;

        int var_i = (int) Math.floor ((double) var_h);
        float var_1 = V * (1 - S);
        float var_2 = V * (1 - S * (var_h - var_i));
        float var_3 = V * (1 - S * (1 - (var_h - var_i)));
        float var_r;
        float var_g;
        float var_b;
        if (var_i == 0) {
            var_r = V;
            var_g = var_3;
            var_b = var_1;
        } else if (var_i == 1) {
            var_r = var_2;
            var_g = V;
            var_b = var_1;
        } else if (var_i == 2) {
            var_r = var_1;
            var_g = V;
            var_b = var_3;
        } else if (var_i == 3) {
            var_r = var_1;
            var_g = var_2;
            var_b = V;
        } else if (var_i == 4) {
            var_r = var_3;
            var_g = var_1;
            var_b = V;
        } else {
            var_r = V;
            var_g = var_1;
            var_b = var_2;
        }

        R = var_r * 255;
        G = var_g * 255;
        B = var_b * 255;
    }
    String rs = Integer.toHexString ((int) (R));
    String gs = Integer.toHexString ((int) (G));
    String bs = Integer.toHexString ((int) (B));
    if (rs.length () == 1) rs = "0" + rs;

    if (gs.length () == 1) gs = "0" + gs;

    if (bs.length () == 1) bs = "0" + bs;

    return "#" + rs + gs + bs;
}
----------------------------------------

public static String hsvToRgb (float hue, float saturation, float value) {
    float r, g, b;
    int h = (int) (hue * 6);
    float f = hue * 6 - h;
    float p = value * (1 - saturation);
    float q = value * (1 - f * saturation);
    float t = value * (1 - (1 - f) * saturation);
    if (h == 0) {
        r = value;
        g = t;
        b = p;
    } else if (h == 1) {
        r = q;
        g = value;
        b = p;
    } else if (h == 2) {
        r = p;
        g = value;
        b = t;
    } else if (h == 3) {
        r = p;
        g = q;
        b = value;
    } else if (h == 4) {
        r = t;
        g = p;
        b = value;
    } else if (h <= 6) {
        r = value;
        g = p;
        b = q;
    } else {
        throw new RuntimeException ("Something went wrong when converting from HSV to RGB. Input was " + hue + ", " + saturation + ", " + value);
    }

    String rs = Integer.toHexString ((int) (r * 255));
    String gs = Integer.toHexString ((int) (g * 255));
    String bs = Integer.toHexString ((int) (b * 255));
    return rs + gs + bs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7896280_7898685_1_18
7896280_7901693_1_42
Title: Converting from HSV (HSB in Java) to RGB without using java.awt.Color (disallowed on Google App Engine) 
----------------------------------------

public static String hsvToRgb (float hue, float saturation, float value) {
    int h = (int) (hue * 6);
    float f = hue * 6 - h;
    float p = value * (1 - saturation);
    float q = value * (1 - f * saturation);
    float t = value * (1 - (1 - f) * saturation);
    switch (h) {
        case 0 :
            return rgbToString (value, t, p);
        case 1 :
            return rgbToString (q, value, p);
        case 2 :
            return rgbToString (p, value, t);
        case 3 :
            return rgbToString (p, q, value);
        case 4 :
            return rgbToString (t, p, value);
        case 5 :
            return rgbToString (value, p, q);
        default :
            throw new RuntimeException ("Something went wrong when converting from HSV to RGB. Input was " + hue + ", " + saturation + ", " + value);
    }
}
----------------------------------------

public static String hsvToRgb (float hue, float saturation, float value) {
    float r, g, b;
    int h = (int) (hue * 6);
    float f = hue * 6 - h;
    float p = value * (1 - saturation);
    float q = value * (1 - f * saturation);
    float t = value * (1 - (1 - f) * saturation);
    if (h == 0) {
        r = value;
        g = t;
        b = p;
    } else if (h == 1) {
        r = q;
        g = value;
        b = p;
    } else if (h == 2) {
        r = p;
        g = value;
        b = t;
    } else if (h == 3) {
        r = p;
        g = q;
        b = value;
    } else if (h == 4) {
        r = t;
        g = p;
        b = value;
    } else if (h <= 6) {
        r = value;
        g = p;
        b = q;
    } else {
        throw new RuntimeException ("Something went wrong when converting from HSV to RGB. Input was " + hue + ", " + saturation + ", " + value);
    }

    String rs = Integer.toHexString ((int) (r * 255));
    String gs = Integer.toHexString ((int) (g * 255));
    String bs = Integer.toHexString ((int) (b * 255));
    return rs + gs + bs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7913938_7914121_5_28
7913938_7914356_5_31
Title: Java swing: how to align menu items in rows and columns? 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new JFrame ("Menu test");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setSize (new Dimension (600, 400));
            JMenuBar menuBar = new JMenuBar ();
            JMenu menu = new JMenu ("Test");
            JPopupMenu popupMenu = menu.getPopupMenu ();
            popupMenu.setLayout (new GridLayout (5, 5));
            for (int r = 0;
            r < 5; r ++) {
                for (int c = 0;
                c < 5; c ++) {
                    popupMenu.add (new JMenuItem ("(" + (r + 1) + ", " + (c + 1) + ")"));
                }
            }
            menuBar.add (menu);
            frame.setJMenuBar (menuBar);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String...args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JMenuBar menuBar = new JMenuBar ();
            JMenu menu = new JMenu ("A regular menu");
            menu.add (new JMenuItem ("Menu item"));
            JMenu gridMenu = new JMenu ("Menu with grid");
            gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
            gridMenu.add ("Top left");
            gridMenu.add ("Top right");
            gridMenu.add ("Bottom left");
            gridMenu.add ("Bottom right");
            menu.add (gridMenu);
            menuBar.add (menu);
            JFrame frame = new JFrame ("Menus");
            frame.setJMenuBar (menuBar);
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7913938_7914121_8_26
7913938_7914356_7_29
Title: Java swing: how to align menu items in rows and columns? 
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("Menu test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (new Dimension (600, 400));
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("Test");
    JPopupMenu popupMenu = menu.getPopupMenu ();
    popupMenu.setLayout (new GridLayout (5, 5));
    for (int r = 0;
    r < 5; r ++) {
        for (int c = 0;
        c < 5; c ++) {
            popupMenu.add (new JMenuItem ("(" + (r + 1) + ", " + (c + 1) + ")"));
        }
    }
    menuBar.add (menu);
    frame.setJMenuBar (menuBar);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    JMenuBar menuBar = new JMenuBar ();
    JMenu menu = new JMenu ("A regular menu");
    menu.add (new JMenuItem ("Menu item"));
    JMenu gridMenu = new JMenu ("Menu with grid");
    gridMenu.getPopupMenu ().setLayout (new GridLayout (2, 2));
    gridMenu.add ("Top left");
    gridMenu.add ("Top right");
    gridMenu.add ("Bottom left");
    gridMenu.add ("Bottom right");
    menu.add (gridMenu);
    menuBar.add (menu);
    JFrame frame = new JFrame ("Menus");
    frame.setJMenuBar (menuBar);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7924895_7955605_14_27
7924895_7955605_29_36
Title: How can I read from a Winzip self-extracting (exe) zip file in Java? 
----------------------------------------

public int read () throws IOException {
    while (ip < ZIP_LOCAL.length) {
        int c = super.read ();
        if (c == ZIP_LOCAL [ip]) {
            ip ++;
        } else ip = 0;

    }
    if (op < ZIP_LOCAL.length) return ZIP_LOCAL [op ++];
    else return super.read ();

}
----------------------------------------

public int read (byte [] b, int off, int len) throws IOException {
    if (op == ZIP_LOCAL.length) return super.read (b, off, len);

    int l = 0;
    while (l < Math.min (len, ZIP_LOCAL.length)) {
        b [l ++] = (byte) read ();
    }
    return l;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7926496_14435467_50_59
7926496_31086377_2_53
Title: "Java Thread - i want to generate numbers in sequence eg: 1234...so on (there will be 2 threads only )" 
----------------------------------------

public static void main (String [] args) {
    FirstThreadClass ftc = new FirstThreadClass (new NumberGenerator ());
    SecondThreadClass stc = new SecondThreadClass (new NumberGenerator ());
    for (int k = 0;
    k < 10; k ++) {
        ftc.run ();
        stc.run ();
    }
}
----------------------------------------

public static void main (String [] args) {
    final NumberValue number = new NumberValue ();
    final Object lockObject = new Object ();
    new Thread () {
        private NumberValue n = number;
        @Override
        public void run () {
            synchronized (lockObject) {
                while (n.getValue () < n.getEndPoint ()) {
                    while (n.isToggle ()) {
                        try {
                            lockObject.wait ();
                        } catch (Exception e) {
                            e.printStackTrace ();
                        }
                    }
                    n.incrementValue ();
                    System.out.println (getName () + " printing " + n.getValue ());
                    n.setToggle (true);
                    lockObject.notifyAll ();
                }
            }
        }}

    .start ();
    new Thread () {
        private NumberValue n = number;
        @Override
        public void run () {
            synchronized (lockObject) {
                while (n.getValue () < n.getEndPoint ()) {
                    while (! n.isToggle ()) {
                        try {
                            lockObject.wait ();
                        } catch (Exception e) {
                            e.printStackTrace ();
                        }
                    }
                    n.incrementValue ();
                    System.out.println (getName () + " printing " + n.getValue ());
                    n.setToggle (false);
                    lockObject.notifyAll ();
                }
            }
        }}

    .start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7926496_20854210_28_39
7926496_31086377_10_27
Title: "Java Thread - i want to generate numbers in sequence eg: 1234...so on (there will be 2 threads only )" 
----------------------------------------

public void run () {
    for (int i = initialValue;
    i <= maxValue; i = i + stepSize) {
        try {
            result = i;
            cyclicBarrier.await ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (BrokenBarrierException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    synchronized (lockObject) {
        while (n.getValue () < n.getEndPoint ()) {
            while (n.isToggle ()) {
                try {
                    lockObject.wait ();
                } catch (Exception e) {
                    e.printStackTrace ();
                }
            }
            n.incrementValue ();
            System.out.println (getName () + " printing " + n.getValue ());
            n.setToggle (true);
            lockObject.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7926496_20854210_28_39
7926496_31086377_34_51
Title: "Java Thread - i want to generate numbers in sequence eg: 1234...so on (there will be 2 threads only )" 
----------------------------------------

public void run () {
    for (int i = initialValue;
    i <= maxValue; i = i + stepSize) {
        try {
            result = i;
            cyclicBarrier.await ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (BrokenBarrierException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    synchronized (lockObject) {
        while (n.getValue () < n.getEndPoint ()) {
            while (! n.isToggle ()) {
                try {
                    lockObject.wait ();
                } catch (Exception e) {
                    e.printStackTrace ();
                }
            }
            n.incrementValue ();
            System.out.println (getName () + " printing " + n.getValue ());
            n.setToggle (false);
            lockObject.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7934519_22745971_1_12
7934519_42010421_3_22
Title: A better algorithm to find the next palindrome of a number string 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter number of tests: ");
    int t = sc.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        System.out.println ("Enter number: ");
        String numberToProcess = sc.next ();
        nextSmallestPalindrom (numberToProcess);
    }
}
----------------------------------------

public static void main (String [] args) {
    int number1 = 45312;
    int number2 = 12345;
    int number3 = 12945;
    int number4 = 4531;
    int number5 = 1459;
    int number6 = 1997;
    System.out.print ("For the number " + number1);
    getNextPalindrome (number1);
    System.out.print ("For the number " + number2);
    getNextPalindrome (number2);
    System.out.print ("For the number " + number3);
    getNextPalindrome (number3);
    System.out.print ("For the number " + number4);
    getNextPalindrome (number4);
    System.out.print ("For the number " + number5);
    getNextPalindrome (number5);
    System.out.print ("For the number " + number6);
    getNextPalindrome (number6);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7939802_14104463_4_27
7939802_48922753_4_25
Title: How can I print to the same line? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    System.out.print ("Start[          ]");
    System.out.flush ();
    System.out.print ("\b\b\b\b\b\b\b\b\b\b\b");
    System.out.flush ();
    Thread.sleep (500);
    for (int i = 0;
    i < 10; i ++) {
        System.out.print (".");
        System.out.flush ();
        Thread.sleep (100);
    }
    System.out.print ("] Done\n");
    System.out.flush ();
}
----------------------------------------

public static void main (String...args) {
    new Thread (() -> {
        int i = 0;
        while (i ++ < 100) {
            System.out.print ("[");
            int j = 0;
            while (j ++ < i) {
                System.out.print ("#");
            }
            while (j ++ < 100) {
                System.out.print (" ");
            }
            System.out.print ("] : " + i + "%");
            try {
                Thread.sleep (1000l);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            System.out.print ("\r");
        }
    }).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7943584_7943910_1_27
7943584_8130028_70_90
Title: Update JLabel every X seconds from ArrayList<List> - Java 
----------------------------------------

private void printWords () {
    JFrame frame = new JFrame ("Run Text File");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JLabel textLabel = new JLabel ("", SwingConstants.CENTER);
    textLabel.setPreferredSize (new Dimension (300, 100));
    frame.getContentPane ().add (textLabel, BorderLayout.CENTER);
    frame.pack ();
    frame.setVisible (true);
    for (int i = 0;
    i < words.size (); i ++) {
        Word w = words.get (i);
        System.out.println (w.name);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        textLabel.setTest (w.name);
    }
}
----------------------------------------

private void printWords () {
    final Timer timer = new Timer (100, null);
    ActionListener listener = new ActionListener () {
        private Iterator < Word > w = words.iterator ();
        @Override
        public void actionPerformed (ActionEvent e) {
            if (w.hasNext ()) {
                _textField.setText (w.next ().getName ());
            } else {
                timer.stop ();
            }
        }}

    ;
    timer.addActionListener (listener);
    timer.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7945037_7946075_113_151
7945037_7946075_59_72
Title: Printing binary tree to standard output Java 
----------------------------------------

static void printTree (final Map < Tree, Integer > offsets, final List < Tree > trees) {
    if (trees.isEmpty ()) return;

    final List < Tree > children = new ArrayList < Tree > ();
    int linePos = 0;
    for (int i = 0;
    i < trees.size (); ++ i) {
        final Tree t = trees.get (i);
        int offset = offsets.get (t);
        final char [] lead = new char [Math.max (offset - linePos, 0)];
        Arrays.fill (lead, ' ');
        System.out.print (new String (lead));
        linePos += Math.max (offset, 0);
        if (t.getColor () == RED) {
            System.out.print (t.getValue ());
            linePos += t.getValue ().length ();
        } else {
            System.out.print ("<" + t.getValue () + "><![CDATA[");
            linePos += t.getValue ().length () + 2;
        }
        if (t.getLeft () != null) children.add (t.getLeft ());

        if (t.getRight () != null) children.add (t.getRight ());

    }
    System.out.println ("");
    printTree (offsets, children);
}
----------------------------------------

static void printTree (final Tree t) {
    final Map < Tree, Integer > widths = new HashMap < Tree, Integer > ();
    final Map < Tree, Integer > offsets = new HashMap < Tree, Integer > ();
    setWidths (widths, t);
    setOffsets (offsets, widths, t, widths.get (t) / 2);
    final List < Tree > root = new ArrayList < Tree > ();
    root.add (t);
    printTree (offsets, root);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7945235_21684614_12_51
7945235_28875095_13_52
Title: How can I create a PostgreSQL database in Java? 
----------------------------------------

public static void main (String args []) {
    try {
        Connection c = null;
        Statement stmt = null;
        try {
            Class.forName ("org.postgresql.Driver");
            c = DriverManager.getConnection ("jdbc:postgresql://localhost:5432/kanwar", "postgres", "osm");
        } catch (Exception e) {
            e.printStackTrace ();
            System.err.println (e.getClass ().getName () + ": " + e.getMessage ());
            System.exit (0);
        }
        System.out.println ("Opened database successfully");
        try {
            stmt = c.createStatement ();
        } catch (SQLException ex) {
            Logger.getLogger (Database.class.getName ()).log (Level.SEVERE, null, ex);
        }
        String sql = "CREATE TABLE MY_TABLE " + "(ID INT NOT NULL," + "NAME TEXT       NOT NULL," + "AGE             INT                  NOT NULL)";
        stmt.executeUpdate (sql);
        stmt.close ();
        c.close ();
    } catch (SQLException ex) {
        Logger.getLogger (Database.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (Exception e) {
        System.err.println (e.getClass ().getName () + ": " + e.getMessage ());
        System.exit (0);
    }
    System.out.println ("Table Created Successfully");
}
----------------------------------------

public static void main (String [] args) {
    Connection conn = null;
    Statement stmt = null;
    try {
        Class.forName ("com.mysql.jdbc.Driver");
        System.out.println ("Connecting to database...");
        conn = DriverManager.getConnection (DB_URL, USER, PASS);
        System.out.println ("Creating database...");
        stmt = conn.createStatement ();
        String sql = "CREATE DATABASE STUDENTS";
        stmt.executeUpdate (sql);
        System.out.println ("Database created successfully...");
    } catch (SQLException se) {
        se.printStackTrace ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        try {
            if (stmt != null) stmt.close ();

        } catch (SQLException se2) {
        }
        try {
            if (conn != null) conn.close ();

        } catch (SQLException se) {
            se.printStackTrace ();
        }
    }
    System.out.println ("Goodbye!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7960916_7966989_22_58
7960916_7966989_38_53
Title: Servlet 3 Async task on Tomcat 7 
----------------------------------------

public void run () {
    List < AsyncContext > watchers = (List < AsyncContext >) servletCtx.getAttribute ("watchers");
    Queue < String > messages = (Queue < String >) appScope.getAttribute ("messages");
    Executor messageExecutor = Executors.newCachedThreadPool ();
    final Executor watcherExecutor = Executors.newCachedThreadPool ();
    while (true) {
        if (! messages.isEmpty ()) {
            System.out.println ("notEmpty");
            String message = messages.poll ();
            messageExecutor.execute (new Runnable () {
                @Override
                public void run () {
                    for (final AsyncContext aCtx : watchers) {
                        watcherExecutor.execute (new Runnable () {
                            @Override
                            public void run () {
                                try {
                                    aCtx.getResponse ().getWriter ().print ("brrrrr");
                                } catch (IOException e) {
                                    e.printStackTrace ();
                                }
                            }}

                        );
                    }
                }}

            );
        }
    }
}
----------------------------------------

public void run () {
    for (final AsyncContext aCtx : watchers) {
        watcherExecutor.execute (new Runnable () {
            @Override
            public void run () {
                try {
                    aCtx.getResponse ().getWriter ().print ("brrrrr");
                } catch (IOException e) {
                    e.printStackTrace ();
                }
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7962010_7962039_1_18
7962010_7962076_1_18
Title: While loop 'ignores' input? 
----------------------------------------

public static boolean playAgain (Scanner in) {
    System.out.print ("Play again?: ");
    String again = in.next ();
    while (! again.equalsIgnoreCase ("y") && ! again.equalsIgnoreCase ("n")) {
        System.out.print ("Invalid response.  Please enter \"y\" or \"n\": ");
        again = in.next ();
    }
    if (again.equalsIgnoreCase ("y")) {
        playerScore = 0;
        aiScore = 0;
        return true;
    }
    return false;
}
----------------------------------------

public static void playAgain (Scanner in) {
    System.out.print ("Play again?: ");
    while (true) {
        String again = in.next ();
        if (again.equalsIgnoreCase ("y")) {
            playerScore = 0;
            aiScore = 0;
            playAgain = true;
            break;
        } else if (again.equalsIgnoreCase ("n")) {
            playAgain = false;
            break;
        } else {
            System.out.print ("Invalid input! Please enter y or n");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_37195401_3_19
7970857_46650637_5_38
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String args []) {
    int a [] = {1, 2,};
    int temp;
    for (int i = 0;
    i < a.length - 1; i ++) {
        temp = a [i];
        a [i] = a [i + 1];
        a [i + 1] = temp;
    }
    for (int p : a) System.out.print (p);

}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int array [] = new int [5];
    int array1 [] = new int [5];
    int i, temp;
    for (i = 0; i < 5; i ++) {
        System.out.printf ("Enter array[%d]: \n", i);
        array [i] = input.nextInt ();
    }
    System.out.println ("\nEntered datas are: \n");
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array [i]);
    }
    temp = array [4];
    System.out.println ("\nAfter Shifting: \n");
    for (i = 3; i >= 0; i --) {
        array1 [i + 1] = array [i];
        array1 [0] = temp;
    }
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array1 [i]);
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_37195401_3_19
7970857_48369997_3_11
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String args []) {
    int a [] = {1, 2,};
    int temp;
    for (int i = 0;
    i < a.length - 1; i ++) {
        temp = a [i];
        a [i] = a [i + 1];
        a [i + 1] = temp;
    }
    for (int p : a) System.out.print (p);

}
----------------------------------------

public static void main (String [] args) {
    int [] x = {1, 2, 3, 4, 5, 6};
    Test1 test = new Test1 ();
    x = test.shiftArray (x, 2);
    for (int i = 0;
    i < x.length; i ++) {
        System.out.print (x [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_37195401_3_19
7970857_52675841_4_24
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String args []) {
    int a [] = {1, 2,};
    int temp;
    for (int i = 0;
    i < a.length - 1; i ++) {
        temp = a [i];
        a [i] = a [i + 1];
        a [i + 1] = temp;
    }
    for (int p : a) System.out.print (p);

}
----------------------------------------

public static void main (String [] args) {
    String [] nd = scanner.nextLine ().split (" ");
    int n = Integer.parseInt (nd [0]);
    int d = Integer.parseInt (nd [1]);
    int [] a = new int [n];
    for (int i = 0;
    i < n; i ++) {
        a [i] = scanner.nextInt ();
    }
    Solution s = new Solution ();
    for (int j = 0;
    j < d; j ++) {
        s.rotate (a, n);
    }
    for (int i : a) {
        System.out.print (i + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_46650637_5_38
7970857_48369997_3_11
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int array [] = new int [5];
    int array1 [] = new int [5];
    int i, temp;
    for (i = 0; i < 5; i ++) {
        System.out.printf ("Enter array[%d]: \n", i);
        array [i] = input.nextInt ();
    }
    System.out.println ("\nEntered datas are: \n");
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array [i]);
    }
    temp = array [4];
    System.out.println ("\nAfter Shifting: \n");
    for (i = 3; i >= 0; i --) {
        array1 [i + 1] = array [i];
        array1 [0] = temp;
    }
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array1 [i]);
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    int [] x = {1, 2, 3, 4, 5, 6};
    Test1 test = new Test1 ();
    x = test.shiftArray (x, 2);
    for (int i = 0;
    i < x.length; i ++) {
        System.out.print (x [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_46650637_5_38
7970857_52675841_4_24
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int array [] = new int [5];
    int array1 [] = new int [5];
    int i, temp;
    for (i = 0; i < 5; i ++) {
        System.out.printf ("Enter array[%d]: \n", i);
        array [i] = input.nextInt ();
    }
    System.out.println ("\nEntered datas are: \n");
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array [i]);
    }
    temp = array [4];
    System.out.println ("\nAfter Shifting: \n");
    for (i = 3; i >= 0; i --) {
        array1 [i + 1] = array [i];
        array1 [0] = temp;
    }
    for (i = 0; i < 5; i ++) {
        System.out.printf ("array[%d] = %d\n", i, array1 [i]);
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    String [] nd = scanner.nextLine ().split (" ");
    int n = Integer.parseInt (nd [0]);
    int d = Integer.parseInt (nd [1]);
    int [] a = new int [n];
    for (int i = 0;
    i < n; i ++) {
        a [i] = scanner.nextInt ();
    }
    Solution s = new Solution ();
    for (int j = 0;
    j < d; j ++) {
        s.rotate (a, n);
    }
    for (int i : a) {
        System.out.print (i + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7970857_48369997_3_11
7970857_52675841_4_24
Title: "Java Shifting Elements in an Array" 
----------------------------------------

public static void main (String [] args) {
    int [] x = {1, 2, 3, 4, 5, 6};
    Test1 test = new Test1 ();
    x = test.shiftArray (x, 2);
    for (int i = 0;
    i < x.length; i ++) {
        System.out.print (x [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] nd = scanner.nextLine ().split (" ");
    int n = Integer.parseInt (nd [0]);
    int d = Integer.parseInt (nd [1]);
    int [] a = new int [n];
    for (int i = 0;
    i < n; i ++) {
        a [i] = scanner.nextInt ();
    }
    Solution s = new Solution ();
    for (int j = 0;
    j < d; j ++) {
        s.rotate (a, n);
    }
    for (int i : a) {
        System.out.print (i + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7972594_8234175_1_29
7972594_8248275_1_17
Title: Questions about properly closing/committing database transactions and executing queries 
----------------------------------------

public void updateMethod () {
    Connection con = null;
    PreparedStatement stmt = null;
    int updateCount = null;
    try {
        con = BoneCPConnection.getConnectionPool ().getConnection ();
        stmt = con.prepareStatement ("update example set id = ?");
        stmt.setInt (1, 1);
        updateCount = stmt.executeUpdate (query);
        con.commit ();
    } catch (Exception e) {
        if (con != null) {
            con.rollback ();
        }
    } finally {
        try {
            if (stmt != null) {
                stmt.close ();
            }
            if (con != null) {
                con.close ();
            }
        } catch (Exception e) {
            con = null;
        }
    }
}
----------------------------------------

public void updateMethod () {
    int updateCount = 0;
    String query = "update example set id = ?";
    try (Connection con = BoneCPConnection.getConnectionPool ().getConnection (); PreparedStatement stmt = con.prepareStatement (query)) {
        stmt.setInt (1, 1);
        updateCount = stmt.executeUpdate ();
        System.out.println ("Result: " + updateCount);
    } catch (Exception e) {
        System.out.println ("Issue with updateMethod");
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7984003_33915953_7_16
7984003_7995857_71_83
Title: Pretty printing a method in ASM Bytecode 
----------------------------------------

public MethodVisitor visitMethod (int access, String name, String desc, String signature, String [] exceptions) {
    MethodVisitor mv = cv.visitMethod (access, name, desc, signature, exceptions);
    Printer p = new Textifier (Opcodes.ASM5) {
        @Override
        public void visitMethodEnd () {
            print (new PrintWriter (System.out));
        }}

    ;
    return new TraceMethodVisitor (mv, p);
}
----------------------------------------

public MethodVisitor visitMethod (int access, String name, String desc, String signature, String [] exceptions) {
    if (methodName.equals (name)) {
        if (methodDescriptor == null) return new MaxVisitFilterMethodVisitor (super.visitMethod (access, name, desc, signature, exceptions));

        if (methodDescriptor.equals (desc)) return new MaxVisitFilterMethodVisitor (super.visitMethod (access, name, desc, signature, exceptions));

    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7989582_7989620_4_15
7989582_7989645_4_22
Title: Why do I keep getting .class expected here? None of the usual problems are the culprit 
----------------------------------------

public static void main (String [] args) {
    double [] dataset = new double [10];
    for (int i = 0;
    i <= 9; i ++) {
        Scanner input = new Scanner (System.in);
        System.out.println ("Enter a number: ");
        dataset [i] = input.nextDouble ();
    }
    System.out.println ("Average is " + avgarray (dataset));
    System.out.println ("Deviation is " + devequasion (dataset));
}
----------------------------------------

public static void main (String [] args) {
    double dataset [] = new double [10];
    for (int i = 0;
    i <= 9; i ++) {
        Scanner input = new Scanner (System.in);
        System.out.println ("Enter a number");
        dataset [i] = input.nextDouble ();
    }
    avgarray (dataset);
    System.out.println ("Average is " + avgarray (dataset));
    devequasion (dataset);
    System.out.println ("Deviation is " + devequasion (dataset));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7998523_8025052_139_155
7998523_8025052_55_75
Title: Just trying to write data to a serial port from a Java Applet? 
----------------------------------------

public void run () {
    try {
        byte [] buff = new byte [1];
        while (serport.read (buff, 0, buff.length) > 0) {
            System.out.print (new String (buff));
        }
    } catch (Exception exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------

public Object run () {
    try {
        portIdentifier = new WinjcomIdentifier (0);
        try {
            selectComport (com_port);
            new Thread (new PortReader ()).start ();
            try {
                System.out.println (com_port + ": " + send_message);
                typeSendBytes (send_message);
            } catch (Exception e) {
                System.out.println ("Couldn't send data to " + com_port);
            }
        } catch (IOException e) {
            System.out.println ("Couldn't connect to " + com_port);
        }
    } catch (Exception e) {
        System.out.println (e);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8005157_8005211_14_41
8005157_8005229_13_41
Title: How do I allow my method to read my main 
----------------------------------------

public static void getNumericGrade (String letter) {
    double grade = 0;
    int spacer = 0;
    String first = letter.substring (0, 1);
    String second = letter.substring (1, 2);
    if (first.equalsIgnoreCase ("a")) grade = 4.0;
    else if (first.equalsIgnoreCase ("b")) grade = 3.0;
    else if (first.equalsIgnoreCase ("c")) grade = 2.0;
    else if (first.equalsIgnoreCase ("d")) grade = 1.0;
    else if (first.equalsIgnoreCase ("f")) grade = 0;
    else grade = 9;

    if (second.equalsIgnoreCase ("+")) grade += 0.3;
    else if (second.equalsIgnoreCase ("-")) grade -= 0.3;
    else grade += 9;

    System.out.println (grade + "");
}
----------------------------------------

public static void getNumericGrade () {
    if (letter.length () <= 0) return;

    int spacer = 0;
    String first = letter.substring (0, 1);
    String second = letter.substring (1, 2);
    if (first.equalsIgnoreCase ("a")) grade = 4.0;
    else if (first.equalsIgnoreCase ("b")) grade = 3.0;
    else if (first.equalsIgnoreCase ("c")) grade = 2.0;
    else if (first.equalsIgnoreCase ("d")) grade = 1.0;
    else if (first.equalsIgnoreCase ("f")) grade = 0;
    else grade = 9;

    if (second.equalsIgnoreCase ("+")) grade += 0.3;
    else if (second.equalsIgnoreCase ("-")) grade -= 0.3;
    else grade += 9;

    System.out.println (grade);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8006760_8006838_6_14
8006760_8006847_6_15
Title: How do I extract the middle name from the full name? 
----------------------------------------

public static String getMiddleName () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter your full name: ");
    String fullName = input.nextLine ();
    int firstSpace = fullName.indexOf (" ");
    int lastSpace = fullName.lastIndexOf (" ");
    String middleName = fullName.substring (firstSpace, lastSpace);
    return middleName;
}
----------------------------------------

public static String getMiddleName () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter your full name: ");
    String fullName = input.nextLine ();
    int firstSpace = fullName.indexOf (" ");
    int lastSpace = fullName.lastIndexOf (" ");
    String middleName = fullName.substring (firstSpace, lastSpace);
    return middleName;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_20061206_1_13
8018986_26150163_1_10
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int a, int b) {
    int p = 0;
    if ((a & 1) > 0) {
        p = b;
    }
    if (a > 1) p = p + multiply (a>> 1, b << 1);

    return p;
}
----------------------------------------

public static int multiply (int x, int y) {
    if (y == 0 || x == 0) {
        return 0;
    }
    if (x == 1) {
        return y;
    } else {
        return multiply (x>> 1, y << 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_20061206_1_13
8018986_8019040_12_24
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int a, int b) {
    int p = 0;
    if ((a & 1) > 0) {
        p = b;
    }
    if (a > 1) p = p + multiply (a>> 1, b << 1);

    return p;
}
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        System.out.println (x + " : " + y);
        return sum + y;
    }
    if (x % 2 == 0) {
        System.out.println (x + " : " + y);
    } else {
        System.out.println (x + " : " + y);
        sum = sum + y;
    }
    return multiply (x / 2, y * 2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_20061206_1_13
8018986_8019045_10_21
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int a, int b) {
    int p = 0;
    if ((a & 1) > 0) {
        p = b;
    }
    if (a > 1) p = p + multiply (a>> 1, b << 1);

    return p;
}
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        return y;
    }
    int temp = multiply (x / 2, y * 2);
    if (x % 2 != 0) {
        temp += y;
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_26150163_1_10
8018986_8019040_12_24
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int x, int y) {
    if (y == 0 || x == 0) {
        return 0;
    }
    if (x == 1) {
        return y;
    } else {
        return multiply (x>> 1, y << 1);
    }
}
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        System.out.println (x + " : " + y);
        return sum + y;
    }
    if (x % 2 == 0) {
        System.out.println (x + " : " + y);
    } else {
        System.out.println (x + " : " + y);
        sum = sum + y;
    }
    return multiply (x / 2, y * 2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_26150163_1_10
8018986_8019045_10_21
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int x, int y) {
    if (y == 0 || x == 0) {
        return 0;
    }
    if (x == 1) {
        return y;
    } else {
        return multiply (x>> 1, y << 1);
    }
}
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        return y;
    }
    int temp = multiply (x / 2, y * 2);
    if (x % 2 != 0) {
        temp += y;
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8018986_8019040_12_24
8018986_8019045_10_21
Title: Binary multiplication -  Peasant algorithm 
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        System.out.println (x + " : " + y);
        return sum + y;
    }
    if (x % 2 == 0) {
        System.out.println (x + " : " + y);
    } else {
        System.out.println (x + " : " + y);
        sum = sum + y;
    }
    return multiply (x / 2, y * 2);
}
----------------------------------------

public static int multiply (int x, int y) {
    if (x == 1) {
        return y;
    }
    int temp = multiply (x / 2, y * 2);
    if (x % 2 != 0) {
        temp += y;
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8021928_8022022_18_32
8021928_8022168_18_30
Title: return issue for method 
----------------------------------------

public static double futureInvestmentValue (double amount, double interest, int years) {
    double monthlyInterest = interest / 1200;
    double temp = 0;
    double count = 1;
    while (count < years) temp = amount * (Math.pow (1 + monthlyInterest, years * 12));

    amount = temp;
    System.out.print ((count + 1) + " " + temp);
    return amount;
}
----------------------------------------

public static double futureInvestmentValue (double amount, double interest, int years) {
    double monthlyInterest = interest / 1200;
    double temp;
    double count = 1;
    while (count < years) {
        temp = amount * (Math.pow (1 + monthlyInterest, years * 12));
        System.out.print ((count + 1) + " " + temp);
    }
    return amount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8021928_8022022_4_16
8021928_8022168_4_16
Title: return issue for method 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the amount invested: ");
    double amount = input.nextDouble ();
    System.out.print ("Enter the annual interest rate: ");
    double interest = input.nextDouble ();
    int years = 30;
    System.out.print (futureInvestmentValue (amount, interest, years));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the amount invested: ");
    double amount = input.nextDouble ();
    System.out.print ("Enter the annual interest rate: ");
    double interest = input.nextDouble ();
    int years = 30;
    System.out.print (futureInvestmentValue (amount, interest, years));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8024794_8024910_5_31
8024794_8025022_1_26
Title: Formatting binary output from an array in Java 
----------------------------------------

public static void main (String [] args) {
    int groupsOf = 4;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number in decimal format: ");
    int myInt = input.nextInt ();
    int bitCount = Integer.SIZE - Integer.numberOfLeadingZeros (myInt);
    int zerosNeeded = groupsOf - (bitCount % groupsOf);
    StringBuilder tempSB = new StringBuilder ();
    StringBuilder resultSB = new StringBuilder ();
    while (zerosNeeded > 0 && zerosNeeded != groupsOf) {
        tempSB.append (0);
        zerosNeeded --;
    }
    tempSB.append (Integer.toBinaryString (myInt));
    for (int i = 0;
    i < tempSB.length (); i ++) {
        if (i % groupsOf == 0) {
            resultSB.append (" ");
        }
        resultSB.append (tempSB.charAt (i));
    }
    System.out.println (resultSB.toString ().trim ());
}
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader bf = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter the decimal value: ");
    String input = bf.readLine ();
    int i = Integer.parseInt (input);
    String bin = null;
    String result = null;
    if ((Integer.toBinaryString (i).length () % 2) != 0) {
        bin = "0".concat (Integer.toBinaryString (i));
        result = (bin.substring (0, bin.length () / 2)).concat (" ").concat (bin.substring (bin.length () / 2, bin.length ()));
    } else {
        bin = Integer.toBinaryString (i);
        result = (bin.substring (0, bin.length () / 2)).concat (" ").concat (bin.substring (bin.length () / 2, bin.length ()));
    }
    System.out.println ("Binary: " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8031150_8040557_19_33
8031150_8040557_8_16
Title: How can I pass messages to another thread without using a blocking queue? 
----------------------------------------

public void run () {
    try {
        int count = 0;
        long sum = 0;
        while (count < maxi) {
            sum += queue.poll (1, TimeUnit.SECONDS);
            count ++;
        }
        System.out.println ("done");
        System.out.println ("expected sum: " + ((long) maxi) * (maxi - 1) / 2);
        System.out.println ("actual sum:   " + sum);
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < maxi; i ++) {
            queue.offer (i, 1, TimeUnit.SECONDS);
        }
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8031816_14175252_1_28
8031816_18807668_3_47
Title: Dynamic Programming - making change 
----------------------------------------

public static int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int i = 0;
    i < m; ++ i) {
        for (int j = 1;
        j < n; j ++) {
            table [i] [j] = inf;
        }
    }
    for (int denomPosition = 1;
    denomPosition < m; denomPosition ++) {
        for (int currentAmount = 1;
        currentAmount < n; currentAmount ++) {
            if (denom [denomPosition - 1] <= currentAmount) {
                actualAmount = table [denomPosition] [currentAmount - denom [denomPosition - 1]];
            } else {
                actualAmount = inf;
            }
            table [denomPosition] [currentAmount] = Math.min (table [denomPosition - 1] [currentAmount], 1 + actualAmount);
        }
    }
    return table [m - 1] [n - 1];
}
----------------------------------------

public int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int j = 1;
    j < n; j ++) table [0] [j] = inf;

    for (int i = 1;
    i < m; i ++) {
        for (int j = 1;
        j < n; j ++) {
            if (j - denom [i - 1] >= 0) table [i] [j] = Math.min (table [i - 1] [j], 1 + table [i] [j - denom [i - 1]]);
            else table [i] [j] = table [i - 1] [j];

        }
    }
    System.out.println ("----------------Displaying the 2-D Matrix(denominations and amount)----------------");
    for (int i = 0;
    i < m; i ++) {
        System.out.println ("   ");
        for (int j = 0;
        j < n; j ++) {
            System.out.print ("  " + table [i] [j]);
        }
        System.out.println ("   ");
    }
    return table [m - 1] [n - 1];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8031816_14175252_1_28
8031816_8031966_1_24
Title: Dynamic Programming - making change 
----------------------------------------

public static int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int i = 0;
    i < m; ++ i) {
        for (int j = 1;
        j < n; j ++) {
            table [i] [j] = inf;
        }
    }
    for (int denomPosition = 1;
    denomPosition < m; denomPosition ++) {
        for (int currentAmount = 1;
        currentAmount < n; currentAmount ++) {
            if (denom [denomPosition - 1] <= currentAmount) {
                actualAmount = table [denomPosition] [currentAmount - denom [denomPosition - 1]];
            } else {
                actualAmount = inf;
            }
            table [denomPosition] [currentAmount] = Math.min (table [denomPosition - 1] [currentAmount], 1 + actualAmount);
        }
    }
    return table [m - 1] [n - 1];
}
----------------------------------------

public int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int j = 1;
    j < n; j ++) table [0] [j] = inf;

    for (int denomPosition = 1;
    denomPosition < m; denomPosition ++) {
        for (int currentAmount = 1;
        currentAmount < n; currentAmount ++) {
            if (currentAmount - denom [denomPosition - 1] >= 0) actualAmount = table [denomPosition] [currentAmount - denom [denomPosition - 1]];
            else actualAmount = inf;

            table [denomPosition] [currentAmount] = Math.min (table [denomPosition - 1] [currentAmount], 1 + actualAmount);
        }
    }
    return table [m - 1] [n - 1];
}
----------------------------------------
