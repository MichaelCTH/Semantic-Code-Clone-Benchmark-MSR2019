$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001256_1_16
18001177_18001393_1_12
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < myString.length; i ++) {
        if (i = 0) {
            sb.append ("(" + myString [i])
        } else if (i = myString.length - 1) {
            sb.append (myString [i] + ")");
        } else {
            sb.append (myString [i])
        }

        sb.append ("(" + myString [i] + " AND " + myString [i + 1] + ")");
    }
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ("(");
    for (int i = 0;
    i < myString.length - 1; i ++) {
        sb.append (myString [i] + " AND ");
    }
    if (myString.length == 0) sb.append (")");
    else sb.append (myString [myString.length - 1]);

    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001256_1_16
18001177_18001496_1_21
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < myString.length; i ++) {
        if (i = 0) {
            sb.append ("(" + myString [i])
        } else if (i = myString.length - 1) {
            sb.append (myString [i] + ")");
        } else {
            sb.append (myString [i])
        }

        sb.append ("(" + myString [i] + " AND " + myString [i + 1] + ")");
    }
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001272_1_13
18001177_18001290_1_16
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (string [] myString) {
    StringBuilder sb = new StringBuilder ();
    sb.Append ("(");
    for (int i = 0;
    i < myString.length; i ++) {
        sb.Append (myString [i] + " AND ");
    }
    string result = sb.ToString ().Substring (0, sb.ToString ().LastIndexOf ("AND"));
    result += ")";
    System.out.println (result);
}
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    for (int i = 0;
    i < myString.length;) {
        sb.append (myString [i] + " AND ");
        i ++;
    }
    sb = sb.substring (0, sb.length () - 5);
    sb.append (")");
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001272_1_13
18001177_18001393_1_12
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (string [] myString) {
    StringBuilder sb = new StringBuilder ();
    sb.Append ("(");
    for (int i = 0;
    i < myString.length; i ++) {
        sb.Append (myString [i] + " AND ");
    }
    string result = sb.ToString ().Substring (0, sb.ToString ().LastIndexOf ("AND"));
    result += ")";
    System.out.println (result);
}
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ("(");
    for (int i = 0;
    i < myString.length - 1; i ++) {
        sb.append (myString [i] + " AND ");
    }
    if (myString.length == 0) sb.append (")");
    else sb.append (myString [myString.length - 1]);

    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001272_1_13
18001177_18001496_1_21
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (string [] myString) {
    StringBuilder sb = new StringBuilder ();
    sb.Append ("(");
    for (int i = 0;
    i < myString.length; i ++) {
        sb.Append (myString [i] + " AND ");
    }
    string result = sb.ToString ().Substring (0, sb.ToString ().LastIndexOf ("AND"));
    result += ")";
    System.out.println (result);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001290_1_16
18001177_18001393_1_12
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    for (int i = 0;
    i < myString.length;) {
        sb.append (myString [i] + " AND ");
        i ++;
    }
    sb = sb.substring (0, sb.length () - 5);
    sb.append (")");
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ("(");
    for (int i = 0;
    i < myString.length - 1; i ++) {
        sb.append (myString [i] + " AND ");
    }
    if (myString.length == 0) sb.append (")");
    else sb.append (myString [myString.length - 1]);

    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001290_1_16
18001177_18001496_1_21
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    for (int i = 0;
    i < myString.length;) {
        sb.append (myString [i] + " AND ");
        i ++;
    }
    sb = sb.substring (0, sb.length () - 5);
    sb.append (")");
    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18001177_18001393_1_12
18001177_18001496_1_21
Title: How can I append a word in between an array of strings? 
----------------------------------------

public void addString (String...myString) {
    StringBuilder sb = new StringBuilder ("(");
    for (int i = 0;
    i < myString.length - 1; i ++) {
        sb.append (myString [i] + " AND ");
    }
    if (myString.length == 0) sb.append (")");
    else sb.append (myString [myString.length - 1]);

    System.out.println (sb);
}
----------------------------------------

public void addString (String...myString) {
    String separator = " AND ";
    StringBuilder sb = new StringBuilder ();
    sb.append ('(');
    boolean needSeparator = false;
    for (String string : myString) {
        if (needSeparator) {
            sb.append (separator);
        } else {
            needSeparator = true;
        }
        sb.append (string);
    }
    sb.append (')');
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18003206_18003252_1_16
18003206_18003391_1_19
Title: Get user input of positive integers in java 
----------------------------------------

public int readPositiveInt () {
    int num = 0;
    int attempt = 0;
    int maxAttempt = 3;
    while (true && attempt < maxAttempt) {
        num = TextIO.getInt ();
        if (num > 0) break;

        System.out.println ("Integer isn't positive. Try again");
        ++ attempt;
    }
    return num;
}
----------------------------------------

public int readPositiveInt (String message) {
    int num = 0;
    boolean exitLoop = false;
    while (! exitLoop) {
        System.out.println (message);
        num = TextIO.getInt ();
        if (num > 0) {
            exitLoop = true;
        } else {
            System.out.println ("Integer isn't positive. Try again");
        }
    }
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18005437_18005875_1_11
18005437_36871220_1_18
Title: Checking an array for descending order 
----------------------------------------

protected boolean isSorted (boolean ascending) {
    for (int i = 1;
    i < data.length; i ++) {
        if (data [i - 1] == data [i]) {
            continue;
        }
        if ((data [i - 1] > data [i]) == ascending) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isSorted (ArrayList < Integer > list) {
    boolean sorted = true;
    for (int i = 1;
    i < list.size (); i ++) {
        if (list.get (i - 1) >= (list.get (i))) {
            sorted = true;
        } else {
            return false;
        }
    }
    return sorted;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18006210_24614657_32_63
18006210_45187744_37_60
Title: Setting a custom cookie in the HTTP headers inside a SOAP Message handler 
----------------------------------------

public boolean handleMessage (SOAPMessageContext soapMessageContext) {
    if ((Boolean) soapMessageContext.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY)) {
        Map < String, List < String > > headers = (Map < String, List < String > >) soapMessageContext.get (MessageContext.HTTP_REQUEST_HEADERS);
        if (headers == null) {
            headers = new HashMap < String, List < String > > ();
            soapMessageContext.put (MessageContext.HTTP_REQUEST_HEADERS, headers);
        }
        List < String > cookie = headers.get ("Cookie");
        if (cookie == null) {
            cookie = new ArrayList < String > ();
            headers.put ("Cookie", cookie);
        }
        cookie.add (sessionCookie);
    } else {
        Map < String, List < String > > map = (Map < String, List < String > >) soapMessageContext.get (MessageContext.HTTP_RESPONSE_HEADERS);
        List < String > contentType = getHTTPHeader (map, "Set-Cookie");
        if (contentType != null) {
            StringBuffer strBuf = new StringBuffer ();
            for (String type : contentType) {
                strBuf.append (type);
            }
            sessionCookie = strBuf.toString ();
        }
    }
    return true;
}
----------------------------------------

public boolean handleMessage (SOAPMessageContext mc) {
    System.out.println ("Setting this before call");
    if (Boolean.TRUE.equals (mc.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY))) {
        HandlerUtils.printMessageContext ("Client SOAPHandler", mc);
        SOAPMessage sm = mc.getMessage ();
        Map < String, List < String > > headers = (Map < String, List < String > >) mc.get (MessageContext.HTTP_REQUEST_HEADERS);
        if (headers == null) {
            headers = new HashMap < String, List < String > > ();
            mc.put (MessageContext.HTTP_REQUEST_HEADERS, headers);
        }
        List < String > cookie = headers.get ("Cookie");
        if (cookie == null) {
            cookie = new ArrayList < String > ();
            headers.put ("Cookie", cookie);
        }
        cookie.add ("JSESSIONID=DBE5B99503B8F4B7EF76F4959D223B3B");
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_20312440_16_32
18029698_33052808_23_36
Title: Synchronized block not working 
----------------------------------------

public void run () {
    synchronized (this) {
        String t_name = new String ("");
        t_name = Thread.currentThread ().getName ().toString ();
        for (int i = 0;
        i < count; i ++) if (t_name.equals ("Thread-0".toString ())) System.out.print ("A");
        else if (t_name.equals ("Thread-1".toString ())) System.out.print ("B");
        else if (t_name.equals ("Thread-2".toString ())) System.out.print ("C");

        System.out.print ("\n");
    }
}
----------------------------------------

public void run () {
    synchronized (sBuffer) {
        System.out.println (this.getName ());
        for (int i = 0;
        i < 10; i ++) {
            System.out.print (sBuffer + ":" + i + " ");
            try {
                Thread.sleep (500);
            } catch (InterruptedException e) {
                System.out.println (e);
            }
        }
        System.out.println ();
        char c = this.sBuffer.charAt (0);
        this.sBuffer.setCharAt (0, ++ c);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_20312440_16_32
18029698_37075842_7_16
Title: Synchronized block not working 
----------------------------------------

public void run () {
    synchronized (this) {
        String t_name = new String ("");
        t_name = Thread.currentThread ().getName ().toString ();
        for (int i = 0;
        i < count; i ++) if (t_name.equals ("Thread-0".toString ())) System.out.print ("A");
        else if (t_name.equals ("Thread-1".toString ())) System.out.print ("B");
        else if (t_name.equals ("Thread-2".toString ())) System.out.print ("C");

        System.out.print ("\n");
    }
}
----------------------------------------

public void run () {
    synchronized (this) {
        for (int i = 1;
        i <= 100; i ++) {
            System.out.println (i);
        }
        char c = s.charAt (0);
        c ++;
        s.setCharAt (0, c);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_20312440_2_11
18029698_33052808_13_21
Title: Synchronized block not working 
----------------------------------------

public static void main (String [] arg) {
    MultiThreading a = new MultiThreading (20);
    Thread t0 = new Thread (a);
    Thread t1 = new Thread (a);
    Thread t2 = new Thread (a);
    t0.start ();
    t1.start ();
    t2.start ();
}
----------------------------------------

public static void main (String [] args) {
    StringBuffer ch = new StringBuffer ("A");
    Thread t1 = new ThreadSyncronization (ch, "first");
    Thread t2 = new ThreadSyncronization (ch, "second");
    Thread t3 = new ThreadSyncronization (ch, "third");
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_20312440_2_11
18029698_37075842_22_31
Title: Synchronized block not working 
----------------------------------------

public static void main (String [] arg) {
    MultiThreading a = new MultiThreading (20);
    Thread t0 = new Thread (a);
    Thread t1 = new Thread (a);
    Thread t2 = new Thread (a);
    t0.start ();
    t1.start ();
    t2.start ();
}
----------------------------------------

public static void main (String [] args) {
    StringBuffer s = new StringBuffer ("A");
    TestSunchronizedBlocksUsingRunnable instance1 = new TestSunchronizedBlocksUsingRunnable (s);
    Thread thread1 = new Thread (instance1);
    Thread thread2 = new Thread (instance1);
    Thread thread3 = new Thread (instance1);
    thread1.start ();
    thread2.start ();
    thread3.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_33052808_13_21
18029698_37075842_22_31
Title: Synchronized block not working 
----------------------------------------

public static void main (String [] args) {
    StringBuffer ch = new StringBuffer ("A");
    Thread t1 = new ThreadSyncronization (ch, "first");
    Thread t2 = new ThreadSyncronization (ch, "second");
    Thread t3 = new ThreadSyncronization (ch, "third");
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) {
    StringBuffer s = new StringBuffer ("A");
    TestSunchronizedBlocksUsingRunnable instance1 = new TestSunchronizedBlocksUsingRunnable (s);
    Thread thread1 = new Thread (instance1);
    Thread thread2 = new Thread (instance1);
    Thread thread3 = new Thread (instance1);
    thread1.start ();
    thread2.start ();
    thread3.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18029698_33052808_23_36
18029698_37075842_7_16
Title: Synchronized block not working 
----------------------------------------

public void run () {
    synchronized (sBuffer) {
        System.out.println (this.getName ());
        for (int i = 0;
        i < 10; i ++) {
            System.out.print (sBuffer + ":" + i + " ");
            try {
                Thread.sleep (500);
            } catch (InterruptedException e) {
                System.out.println (e);
            }
        }
        System.out.println ();
        char c = this.sBuffer.charAt (0);
        this.sBuffer.setCharAt (0, ++ c);
    }
}
----------------------------------------

public void run () {
    synchronized (this) {
        for (int i = 1;
        i <= 100; i ++) {
            System.out.println (i);
        }
        char c = s.charAt (0);
        c ++;
        s.setCharAt (0, c);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18031758_18031808_1_15
18031758_18032121_13_29
Title: Appending indexes to multidimensional arrays in java 
----------------------------------------

public static void main (String args []) {
    String suits [] = new String [] {"Clubs", "Diamonds", "Spades", "Hearts"};
    String faces [] = new String [] {"Ace", "King", "Queen", "Jack"};
    String deck [] [] = new String [suits.length * faces.length] [2];
    int i = 0;
    for (String suit : suits) {
        for (String face : faces) {
            deck [i] [0] = suit;
            deck [i] [1] = face;
            i ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] suits = new String [] {"Clubs", "Diamonds", "Spades", "Hearts"};
    String [] faces = new String [] {"Ace", "King", "Queen", "Jack"};
    Card [] [] deck = new Card [suits.length] [faces.length];
    int a = 0;
    int b = 0;
    for (String x : suits) {
        b = 0;
        for (String y : faces) {
            deck [a] [b] = new Card (x, y);
            b ++;
        }
        a ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18031841_30512981_101_110
18031841_30512981_90_99
Title: Pre-allocating drive space for file storage 
----------------------------------------

private static int getDescriptor (FileDescriptor descriptor) {
    try {
        final Field field = descriptor.getClass ().getDeclaredField ("fd");
        field.setAccessible (true);
        return (int) field.get (descriptor);
    } catch (final Exception e) {
        throw new UnsupportedOperationException ("unsupported FileDescriptor implementation", e);
    }
}
----------------------------------------

private static int getDescriptor (FileChannel channel) {
    try {
        final Field field = channel.getClass ().getDeclaredField ("fd");
        field.setAccessible (true);
        return getDescriptor ((FileDescriptor) field.get (channel));
    } catch (final Exception e) {
        throw new UnsupportedOperationException ("unsupported FileChannel implementation", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1803369_1803519_6_40
1803369_1803711_6_21
Title: Using a returned string to call a method? 
----------------------------------------

public static void main (String [] args) {
    List < String > myStringList = new ArrayList < String > ();
    myStringList.add (0, "foo");
    myStringList.add (1, "printStr");
    myStringList.add (2, "otherMethod");
    myStringList.add (3, "stackoverflow");
    int index = 3;
    String methodName = myStringList.get (index);
    try {
        Class < ? > c = Class.forName ("DemoReflection");
        Object obj = c.newInstance ();
        Method method = c.getDeclaredMethod (methodName, null);
        method.invoke (obj, null);
    } catch (SecurityException e) {
        e.printStackTrace ();
    } catch (NoSuchMethodException e) {
        e.printStackTrace ();
    } catch (IllegalArgumentException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    } catch (InvocationTargetException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    } catch (InstantiationException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    List < Action > actions = new ArrayList < Action > ();
    actions.add (new Action () {
        public void execute () {
            System.out.println ("Action 0");
        }}

    );
    actions.add (new Action () {
        public void execute () {
            System.out.println ("Action 1");
        }}

    );
    actions.get (0).execute ();
    actions.get (1).execute ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18038533_18038588_1_18
18038533_18038645_6_30
Title: Using while loop in java 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter an integer: ");
    Scanner entry = new Scanner (System.in);
    int input1 = entry.nextInt ();
    int total = input1;
    while (input1 > 0) {
        System.out.println (total + "\nEnter another interger:  ");
        input1 = entry.nextInt ();
        total += input1;
    }
}
----------------------------------------

public static void main (String [] args) {
    int total = 0, input = 0;
    System.out.print ("Enter an integer: ");
    Scanner entry = new Scanner (System.in);
    while ((input = entry.nextInt ()) > 0) {
        total += input;
        System.out.print ("Total: " + total + "\nEnter an integer: ");
    }
    System.out.println ("Total: " + total);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18039386_18043203_30_39
18039386_18043203_48_56
Title: Taking a screenshot of a specified applet or program in Java? 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18039386_18043203_30_39
18039386_18043203_71_81
Title: Taking a screenshot of a specified applet or program in Java? 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18039386_18043203_48_56
18039386_18043203_71_81
Title: Taking a screenshot of a specified applet or program in Java? 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18039721_18039748_61_120
18039721_18047727_1_23
Title: Draw a sprite onto the map not to the screen 
----------------------------------------

public void render () {
    camera.translate (vecCamera);
    Gdx.gl.glClearColor (1, 1, 1, 1);
    Gdx.gl.glClear (GL10.GL_COLOR_BUFFER_BIT);
    camera.update ();
    camera.translate (vecCamera.cpy ().mul (- 1));
    float moveSensitivity = 0.9f;
    Vector2 vecInputSprite = new Vector2 ();
    if (Gdx.input.isKeyPressed (Keys.UP)) vecInputSprite.y += moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.DOWN)) vecInputSprite.y -= moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.LEFT)) vecInputSprite.x -= moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.RIGHT)) vecInputSprite.x += moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.N)) vecSprite.set (new Vector2 ());

    Vector2 vecInputCamera = new Vector2 ();
    if (Gdx.input.isKeyPressed (Keys.W)) vecInputCamera.y += moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.S)) vecInputCamera.y -= moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.A)) vecInputCamera.x -= moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.D)) vecInputCamera.x += moveSensitivity;

    if (Gdx.input.isKeyPressed (Keys.R)) {
        vecCamera.set (new Vector2 ());
        lockToSprite = false;
    }
    if (vecInputCamera.len2 () != 0) lockToSprite = false;
    else if (Gdx.input.isKeyPressed (Keys.L)) lockToSprite = true;

    if (lockToSprite) {
        vecCamera.set (vecSprite);
    } else {
        vecCamera.add (vecInputCamera);
    }
    vecSprite.add (vecInputSprite);
    batch.setProjectionMatrix (camera.combined);
    batch.begin ();
    background.draw (batch);
    sprite.setPosition (vecSprite.x, vecSprite.y);
    sprite.draw (batch);
    batch.end ();
}
----------------------------------------

@Override
public void render (float delta) {
    translateCamera ();
    Gdx.gl.glClearColor (0, 0, 0, 1);
    Gdx.gl.glClear (GL10.GL_COLOR_BUFFER_BIT);
    camera.update ();
    renderer.setView (camera);
    renderer.render (bgLayers);
    batch.setProjectionMatrix (camera.combined);
    batch.begin ();
    splayerSprite.draw (batch);
    batch.end ();
    renderer.render (fgLayers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18043685_18214546_17_38
18043685_18214546_42_63
Title: NPE in Drag and Drop 
----------------------------------------

public void handle (DragEvent event) {
    boolean accept = true;
    final Dragboard dragboard = event.getDragboard ();
    if (dragboard.hasString ()) {
        try {
            int incomingIndex = Integer.parseInt (dragboard.getString ());
            int myIndex = bp.getParent ().getChildrenUnmodifiable ().indexOf (bp);
            if (incomingIndex == myIndex) {
                accept = false;
            }
        } catch (java.lang.NumberFormatException e) {
            accept = false;
        }
    } else {
        accept = false;
    }
    if (accept) {
        event.acceptTransferModes (TransferMode.MOVE);
    }
}
----------------------------------------

public void handle (DragEvent event) {
    boolean success = false;
    final Dragboard dragboard = event.getDragboard ();
    if (dragboard.hasString ()) {
        try {
            int incomingIndex = Integer.parseInt (dragboard.getString ());
            final Pane parent = (Pane) bp.getParent ();
            final ObservableList < Node > children = parent.getChildren ();
            int myIndex = children.indexOf (bp);
            final int laterIndex = Math.max (incomingIndex, myIndex);
            Node removedLater = children.remove (laterIndex);
            final int earlierIndex = Math.min (incomingIndex, myIndex);
            Node removedEarlier = children.remove (earlierIndex);
            children.add (earlierIndex, removedLater);
            children.add (laterIndex, removedEarlier);
            success = true;
        } catch (java.lang.NumberFormatException e) {
        }
    }
    event.setDropCompleted (success);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18053914_18054242_13_19
18053914_18055412_10_18
Title: Faster way to find out if a number starts with 2? 
----------------------------------------

public void divide () {
    for (int i = 200_000_000;
    i < 400_000_000; i += 999961) {
        int x = i;
        while (x > 10) x /= 10;

        digit = x;
    }
}
----------------------------------------

public void divide () {
    for (int x = START;
    x < END; x ++) {
        int i = x;
        while (i > 10) {
            i = i / 10;
        }
        result = i;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18058247_18058520_14_26
18058247_18058624_17_32
Title: Java Swing Password 
----------------------------------------

public void init () {
    setVisible (true);
    setLayout (new FlowLayout ());
    setSize (WIDTH, HEIGHT);
    setLayout (new FlowLayout ());
    add (passwordLabel);
    passwordLabel.setFont (bigFont);
    add (input);
    add (enter);
    enter.addActionListener (this);
}
----------------------------------------

public void init () {
    JFrame frame = new JFrame ();
    frame.setVisible (true);
    frame.setLayout (new FlowLayout ());
    frame.setBackground (Color.red);
    frame.setSize (WIDTH, HEIGHT);
    frame.setLayout (new FlowLayout ());
    frame.add (passwordLabel);
    passwordLabel.setFont (bigFont);
    frame.add (input);
    frame.add (enter);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    enter.addActionListener (new Action ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18058247_18058520_29_40
18058247_18058624_35_53
Title: Java Swing Password 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String inputPassword = input.getText ();
    String passWord = "Rosebud";
    if (inputPassword.equals (passWord)) {
        JOptionPane.showMessageDialog (null, "Your password is correct,\nYou may proceed.", "Password Correct", JOptionPane.PLAIN_MESSAGE);
    } else {
        JOptionPane.showMessageDialog (null, "Sorry, you have entered an incorrect password,\nMake sure your CAPS are not locked.", "Password Incorrect", JOptionPane.ERROR_MESSAGE);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String inputPassword = input.getText ();
    String passWord = "Rosebud";
    if (inputPassword.equals (passWord)) {
        JOptionPane.showMessageDialog (null, "               Your password is               correct,\n                     You may proceed.", "Password Correct", JOptionPane.PLAIN_MESSAGE);
    } else {
        JOptionPane.showMessageDialog (null, "Sorry, you have entered an incorrect password,\n       Make sure your CAPS are not locked.", "Password Incorrect", JOptionPane.ERROR_MESSAGE);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18064724_11_65
18062961_18066795_3_24
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public static void main (String args []) {
    JTable table = new JTable () {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            Runnable runnable = new Runnable () {
                private Object caller;
                public void setCaller (Object caller) {
                    this.caller = caller;
                }@Override
                public void run () {
                    System.out.println ("Hello World!");
                    try {
                        Class clazz = this.getClass ().getEnclosingClass ();
                        Method method = clazz.getDeclaredMethod ("changeSelection", new Class [] {Integer.TYPE, Integer.TYPE, Boolean.TYPE, Boolean.TYPE});
                        method.invoke (caller, 1, 1, true, true);
                    } catch (SecurityException e) {
                        e.printStackTrace ();
                    } catch (NoSuchMethodException e) {
                        e.printStackTrace ();
                    } catch (IllegalArgumentException e) {
                        e.printStackTrace ();
                    } catch (IllegalAccessException e) {
                        e.printStackTrace ();
                    } catch (InvocationTargetException e) {
                        e.printStackTrace ();
                    }
                }}

            ;
            Method method;
            try {
                method = runnable.getClass ().getDeclaredMethod ("setCaller", new Class [] {Object.class});
                method.invoke (runnable, this);
            } catch (SecurityException e1) {
                e1.printStackTrace ();
            } catch (NoSuchMethodException e1) {
                e1.printStackTrace ();
            } catch (IllegalArgumentException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            } catch (InvocationTargetException e) {
                e.printStackTrace ();
            }
            SwingUtilities.invokeLater (runnable);
        }}

    ;
    table.changeSelection (1, 1, true, true);
}
----------------------------------------

public static void main (String args []) {
    class Foo extends JTable {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    Foo.super.changeSelection (row, column, toggle, extend);
                }}

            );
        }}

    JTable table = new Foo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18064724_11_65
18062961_43858776_3_25
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public static void main (String args []) {
    JTable table = new JTable () {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            Runnable runnable = new Runnable () {
                private Object caller;
                public void setCaller (Object caller) {
                    this.caller = caller;
                }@Override
                public void run () {
                    System.out.println ("Hello World!");
                    try {
                        Class clazz = this.getClass ().getEnclosingClass ();
                        Method method = clazz.getDeclaredMethod ("changeSelection", new Class [] {Integer.TYPE, Integer.TYPE, Boolean.TYPE, Boolean.TYPE});
                        method.invoke (caller, 1, 1, true, true);
                    } catch (SecurityException e) {
                        e.printStackTrace ();
                    } catch (NoSuchMethodException e) {
                        e.printStackTrace ();
                    } catch (IllegalArgumentException e) {
                        e.printStackTrace ();
                    } catch (IllegalAccessException e) {
                        e.printStackTrace ();
                    } catch (InvocationTargetException e) {
                        e.printStackTrace ();
                    }
                }}

            ;
            Method method;
            try {
                method = runnable.getClass ().getDeclaredMethod ("setCaller", new Class [] {Object.class});
                method.invoke (runnable, this);
            } catch (SecurityException e1) {
                e1.printStackTrace ();
            } catch (NoSuchMethodException e1) {
                e1.printStackTrace ();
            } catch (IllegalArgumentException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            } catch (InvocationTargetException e) {
                e.printStackTrace ();
            }
            SwingUtilities.invokeLater (runnable);
        }}

    ;
    table.changeSelection (1, 1, true, true);
}
----------------------------------------

public static void main (String args []) {
    class Foo extends JTable {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            final Foo outer = this;
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    outer.changeSelection (row, column, toggle, extend);
                }}

            );
        }}

    JTable table = new Foo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18064724_16_61
18062961_18066795_8_19
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    Runnable runnable = new Runnable () {
        private Object caller;
        public void setCaller (Object caller) {
            this.caller = caller;
        }@Override
        public void run () {
            System.out.println ("Hello World!");
            try {
                Class clazz = this.getClass ().getEnclosingClass ();
                Method method = clazz.getDeclaredMethod ("changeSelection", new Class [] {Integer.TYPE, Integer.TYPE, Boolean.TYPE, Boolean.TYPE});
                method.invoke (caller, 1, 1, true, true);
            } catch (SecurityException e) {
                e.printStackTrace ();
            } catch (NoSuchMethodException e) {
                e.printStackTrace ();
            } catch (IllegalArgumentException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            } catch (InvocationTargetException e) {
                e.printStackTrace ();
            }
        }}

    ;
    Method method;
    try {
        method = runnable.getClass ().getDeclaredMethod ("setCaller", new Class [] {Object.class});
        method.invoke (runnable, this);
    } catch (SecurityException e1) {
        e1.printStackTrace ();
    } catch (NoSuchMethodException e1) {
        e1.printStackTrace ();
    } catch (IllegalArgumentException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    } catch (InvocationTargetException e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (runnable);
}
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            Foo.super.changeSelection (row, column, toggle, extend);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18064724_16_61
18062961_43858776_8_20
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    Runnable runnable = new Runnable () {
        private Object caller;
        public void setCaller (Object caller) {
            this.caller = caller;
        }@Override
        public void run () {
            System.out.println ("Hello World!");
            try {
                Class clazz = this.getClass ().getEnclosingClass ();
                Method method = clazz.getDeclaredMethod ("changeSelection", new Class [] {Integer.TYPE, Integer.TYPE, Boolean.TYPE, Boolean.TYPE});
                method.invoke (caller, 1, 1, true, true);
            } catch (SecurityException e) {
                e.printStackTrace ();
            } catch (NoSuchMethodException e) {
                e.printStackTrace ();
            } catch (IllegalArgumentException e) {
                e.printStackTrace ();
            } catch (IllegalAccessException e) {
                e.printStackTrace ();
            } catch (InvocationTargetException e) {
                e.printStackTrace ();
            }
        }}

    ;
    Method method;
    try {
        method = runnable.getClass ().getDeclaredMethod ("setCaller", new Class [] {Object.class});
        method.invoke (runnable, this);
    } catch (SecurityException e1) {
        e1.printStackTrace ();
    } catch (NoSuchMethodException e1) {
        e1.printStackTrace ();
    } catch (IllegalArgumentException e) {
        e.printStackTrace ();
    } catch (IllegalAccessException e) {
        e.printStackTrace ();
    } catch (InvocationTargetException e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (runnable);
}
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    final Foo outer = this;
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            outer.changeSelection (row, column, toggle, extend);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18066795_3_24
18062961_43858776_3_25
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public static void main (String args []) {
    class Foo extends JTable {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    Foo.super.changeSelection (row, column, toggle, extend);
                }}

            );
        }}

    JTable table = new Foo ();
}
----------------------------------------

public static void main (String args []) {
    class Foo extends JTable {
        @Override
        public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
            final Foo outer = this;
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    outer.changeSelection (row, column, toggle, extend);
                }}

            );
        }}

    JTable table = new Foo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18062961_18066795_8_19
18062961_43858776_8_20
Title: Access outer anonymous class from inner anonymous class 
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            Foo.super.changeSelection (row, column, toggle, extend);
        }}

    );
}
----------------------------------------

public void changeSelection (final int row, final int column, final boolean toggle, final boolean extend) {
    final Foo outer = this;
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            outer.changeSelection (row, column, toggle, extend);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18070234_18070300_9_26
18070234_18070405_10_26
Title: Trouble bubble sorting (recursion) an array of integers in Java 
----------------------------------------

public static void bubbleSort (int [] arr, int n) {
    int index = n - 1;
    System.out.println ("Round number: " + n);
    System.out.println (Arrays.toString (arr));
    while (index >= 1) {
        if (arr [index] < arr [index - 1]) {
            swap (arr, index, index - 1);
            index = n;
        }
        index --;
    }
    if (n > 1) bubbleSort (arr, n - 1);

}
----------------------------------------

public static void bubbleSort (int [] arr, int n) {
    int index = 0;
    System.out.println ("Round number: " + n);
    System.out.println (Arrays.toString (arr));
    while (index < n - 1) {
        if (arr [index] > arr [index + 1]) {
            swap (arr, index, index + 1);
        }
        index ++;
    }
    if (n > 1) {
        bubbleSort (arr, n - 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18076187_18076397_4_22
18076187_18076640_1_19
Title: Prime Number function only printing 2 and 3 
----------------------------------------

public static void main (String args []) {
    int flag = 0;
    System.out.println ();
    for (int i = 2;
    i <= 100; i ++) {
        flag = 0;
        for (int j = 2;
        j <= 10; j ++) {
            if (i % j != 0) {
                flag ++;
            }
        }
        if (flag == 9 || flag == 8) {
            System.out.print (i + " ");
            flag = 0;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    System.out.println ();
    for (int i = 2;
    i <= 100; i ++) {
        int flag = 0;
        for (int j = 2;
        j <= i; j ++) {
            if (i % j == 0) {
                flag ++;
            }
        }
        if (flag == 1) {
            System.out.print (i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18081773_18082271_26_39
18081773_18082271_44_57
Title: Using Interrupt method 
----------------------------------------

public void run () {
    try {
        lock.lockInterruptibly ();
        try {
            System.out.print ("Startl ");
            delay (6000);
            System.out.print ("End1 ");
        } finally {
            lock.unlock ();
        }
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    try {
        lock.lockInterruptibly ();
        try {
            System.out.print ("Start2 ");
            delay (2000);
            System.out.print ("End2 ");
        } finally {
            lock.unlock ();
        }
    } catch (InterruptedException ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18099320_18099357_1_10
18099320_18099551_1_10
Title: The local variable might not have been initialized - Detect unchecked exception throw within a method 
----------------------------------------

public void method () {
    Object o = null;
    try {
        o = new Object ();
    } catch (Exception e) {
        handleError ();
    }
    if (o != null) doSomething (o);

}
----------------------------------------

public void method () {
    Object o;
    try {
        o = new Object ();
        doSomething (o);
    } catch (Exception e) {
        handleError ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18102740_18104933_18_28
18102740_18104933_35_45
Title: Only numbers and one decimal point allow on jtextfield in java 
----------------------------------------

public AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (2);
    format.setMaximumFractionDigits (2);
    format.setRoundingMode (RoundingMode.HALF_UP);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    return formatter;
}
----------------------------------------

public AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (2);
    format.setMaximumFractionDigits (2);
    format.setRoundingMode (RoundingMode.HALF_UP);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    return formatter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18106545_18185207_119_140
18106545_18185207_59_68
Title: Move from bottom animation JDialog 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (secondClick == 0) {
        FontMetrics fm = panel.getFontMetrics (messageSMS.getFont ());
        int sizeMessage = fm.stringWidth (messageSMS.getText ());
        int decallage = (sizeMessage / 90) * 15;
        height = dialog.getHeight () + decallage - fm.getHeight () * 3;
        panel.setPreferredSize (new Dimension (panel.getWidth (), panel.getHeight () + decallage - fm.getHeight () * 3));
        messageSMS.setText ("<html><P ALIGN=\"JUSTIFY\"><![CDATA[" + messageFull);
        dialog.setLocation (dialog.getX (), dialog.getY () - decallage + fm.getHeight () * 3);
        close.setBounds (close.getX (), close.getY () + decallage - fm.getHeight () * 3, close.getWidth (), close.getHeight ());
        send.setBounds (send.getX (), send.getY () + decallage - fm.getHeight () * 3, send.getWidth (), send.getHeight ());
        reply.setBounds (reply.getX (), reply.getY () + decallage - fm.getHeight () * 3, reply.getWidth (), reply.getHeight ());
        panel.remove (plus);
        scrollPaneTextArea.setBounds (scrollPaneTextArea.getX (), scrollPaneTextArea.getY () + decallage - fm.getHeight () * 3, scrollPaneTextArea.getWidth (), scrollPaneTextArea.getHeight ());
        messageSMS.setBounds (messageSMS.getX (), messageSMS.getY (), messageSMS.getWidth (), decallage);
        dialog.pack ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    height -= 5;
    if (height == 0) {
        timer.stop ();
        dialog.dispose ();
    }
    dialog.setLocation (screenRect.width - dialog.getWidth (), screenRect.height - height);
    dialog.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18106545_18185207_119_140
18106545_18185207_93_112
Title: Move from bottom animation JDialog 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (secondClick == 0) {
        FontMetrics fm = panel.getFontMetrics (messageSMS.getFont ());
        int sizeMessage = fm.stringWidth (messageSMS.getText ());
        int decallage = (sizeMessage / 90) * 15;
        height = dialog.getHeight () + decallage - fm.getHeight () * 3;
        panel.setPreferredSize (new Dimension (panel.getWidth (), panel.getHeight () + decallage - fm.getHeight () * 3));
        messageSMS.setText ("<html><P ALIGN=\"JUSTIFY\"><![CDATA[" + messageFull);
        dialog.setLocation (dialog.getX (), dialog.getY () - decallage + fm.getHeight () * 3);
        close.setBounds (close.getX (), close.getY () + decallage - fm.getHeight () * 3, close.getWidth (), close.getHeight ());
        send.setBounds (send.getX (), send.getY () + decallage - fm.getHeight () * 3, send.getWidth (), send.getHeight ());
        reply.setBounds (reply.getX (), reply.getY () + decallage - fm.getHeight () * 3, reply.getWidth (), reply.getHeight ());
        panel.remove (plus);
        scrollPaneTextArea.setBounds (scrollPaneTextArea.getX (), scrollPaneTextArea.getY () + decallage - fm.getHeight () * 3, scrollPaneTextArea.getWidth (), scrollPaneTextArea.getHeight ());
        messageSMS.setBounds (messageSMS.getX (), messageSMS.getY (), messageSMS.getWidth (), decallage);
        dialog.pack ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (secondClick == 0) {
        textArea.setColumns (20);
        textArea.setLineWrap (true);
        textArea.setRows (5);
        textArea.setWrapStyleWord (true);
        scrollPaneTextArea.setBounds ((panel.getWidth () - 280) / 2, messageSMS.getY () + messageSMS.getHeight (), 280, 90);
        panel.add (scrollPaneTextArea);
        height = dialog.getHeight () + scrollPaneTextArea.getHeight ();
        panel.setPreferredSize (new Dimension (panel.getWidth (), panel.getHeight () + scrollPaneTextArea.getHeight ()));
        dialog.setLocation (dialog.getX (), dialog.getY () - scrollPaneTextArea.getHeight ());
        plus.setBounds (plus.getX (), plus.getY () + scrollPaneTextArea.getHeight (), plus.getWidth (), plus.getHeight ());
        close.setBounds (close.getX (), close.getY () + scrollPaneTextArea.getHeight (), close.getWidth (), close.getHeight ());
        send.setBounds (0, close.getY (), close.getWidth (), close.getHeight ());
        panel.remove (reply);
        panel.add (send);
        dialog.pack ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18106545_18185207_59_68
18106545_18185207_93_112
Title: Move from bottom animation JDialog 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    height -= 5;
    if (height == 0) {
        timer.stop ();
        dialog.dispose ();
    }
    dialog.setLocation (screenRect.width - dialog.getWidth (), screenRect.height - height);
    dialog.repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (secondClick == 0) {
        textArea.setColumns (20);
        textArea.setLineWrap (true);
        textArea.setRows (5);
        textArea.setWrapStyleWord (true);
        scrollPaneTextArea.setBounds ((panel.getWidth () - 280) / 2, messageSMS.getY () + messageSMS.getHeight (), 280, 90);
        panel.add (scrollPaneTextArea);
        height = dialog.getHeight () + scrollPaneTextArea.getHeight ();
        panel.setPreferredSize (new Dimension (panel.getWidth (), panel.getHeight () + scrollPaneTextArea.getHeight ()));
        dialog.setLocation (dialog.getX (), dialog.getY () - scrollPaneTextArea.getHeight ());
        plus.setBounds (plus.getX (), plus.getY () + scrollPaneTextArea.getHeight (), plus.getWidth (), plus.getHeight ());
        close.setBounds (close.getX (), close.getY () + scrollPaneTextArea.getHeight (), close.getWidth (), close.getHeight ());
        send.setBounds (0, close.getY (), close.getWidth (), close.getHeight ());
        panel.remove (reply);
        panel.add (send);
        dialog.pack ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18111857_18111964_1_15
18111857_18112085_1_19
Title: "How can I write a function boolean succeeds(char a char b String s)? using s.equals("""") s.charAt(0) s.substring(1)" 
----------------------------------------

public boolean succeeds (char a, char b, String s) {
    boolean sawFirst = false;
    for (int i = 0;
    i < s.length (); i ++) {
        if (! sawA) {
            if (s.charAt (i) == b) sawFirst = true;

        } else {
            if (s.charAt (i) != a) return false;
            else sawFirst = false;

        }
    }
    return true;
}
----------------------------------------

public boolean succeeds (char a, char b, String s) {
    int state = 0;
    for (int n = 0;
    n < s.length (); ++ n) {
        if (state == 0) {
            if (s.charAt (n) == b) state = 1;

        } else if (state == 1) {
            if (s.charAt (n) == a) state = 0;
            else return false;

        }

    }
    return (state == 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18116019_18116121_11_25
18116019_18117962_5_24
Title: Return an array of Pairs which have the same length as the input array of Strings. (Java) 
----------------------------------------

public static Couple [] create (String [] source) {
    Couple [] couples = new Couple [source.length];
    for (int i = 0;
    i < source.length; i ++) {
        String entry = source [i];
        if (entry != null) {
            couples [i] = new Couple (entry.charAt (0), entry.length ());
        } else {
        }
    }
    return couples;
}
----------------------------------------

public static String [] create (String [] source) {
    String [] temp = new String [source.length];
    for (int i = 0;
    i < source.length; i ++) {
        if (source [i].length () > 0) {
            String newString = "[" + source [i].charAt (0) + "," + source.length + "]";
            temp [i] = newString;
        } else {
            String newString = "[" + " " + "," + 0 + "]";
            temp [i] = newString;
        }
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18142517_18142569_2_23
18142517_18142582_3_24
Title: What are the errors of this Java code? 
----------------------------------------

public static Object copy (Object oldObj) {
    Object obj = null;
    try {
        ByteArrayOutputStream bos = new ByteArrayOutputStream ();
        ObjectOutputStream out = new ObjectOutputStream (bos);
        out.writeObject (oldObj);
        out.flush ();
        out.close ();
        ByteArrayInputStream bis = new ByteArrayInputStream (bos.toByteArray ());
        ObjectInputStream in = new ObjectInputStream (bis);
        obj = in.readObject ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException cnfe) {
        cnfe.printStackTrace ();
    }
    return obj;
}
----------------------------------------

public static Object copy (Object oldObj) {
    Object obj = null;
    try {
        ByteArrayOutputStream bos = new ByteArrayOutputStream ();
        ObjectOutputStream out = new ObjectOutputStream (bos);
        out.writeObject (oldObj);
        out.flush ();
        out.close ();
        ByteArrayInputStream bis = new ByteArrayInputStream (bos.toByteArray ());
        ObjectInputStream in = new ObjectInputStream (bis);
        obj = in.readObject ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException cnfe) {
        cnfe.printStackTrace ();
    }
    return obj;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18142517_18142582_3_24
18142517_18142605_14_36
Title: What are the errors of this Java code? 
----------------------------------------

public static Object copy (Object oldObj) {
    Object obj = null;
    try {
        ByteArrayOutputStream bos = new ByteArrayOutputStream ();
        ObjectOutputStream out = new ObjectOutputStream (bos);
        out.writeObject (oldObj);
        out.flush ();
        out.close ();
        ByteArrayInputStream bis = new ByteArrayInputStream (bos.toByteArray ());
        ObjectInputStream in = new ObjectInputStream (bis);
        obj = in.readObject ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException cnfe) {
        cnfe.printStackTrace ();
    }
    return obj;
}
----------------------------------------

public static Object copy (Object oldObj) {
    Object obj = null;
    try {
        ByteArrayOutputStream bos = new ByteArrayOutputStream ();
        ObjectOutputStream out = new ObjectOutputStream (bos);
        out.writeObject (oldObj);
        out.flush ();
        out.close ();
        ByteArrayInputStream bis = new ByteArrayInputStream (bos.toByteArray ());
        ObjectInputStream in = new ObjectInputStream (bis);
        obj = in.readObject ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException cnfe) {
        cnfe.printStackTrace ();
    }
    return obj;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18144504_26712591_1_34
18144504_33983557_3_13
Title: Ways to convert String to char in java without built-in libs 
----------------------------------------

public static void main (String [] args) {
    try {
        String s = "hello world";
        StringReader reader = new StringReader (s);
        char [] cc = new char [1];
        cc [0] = (char) reader.read ();
        char [] tmpCC = null;
        int readChar = 0;
        int lenConcatenator = cc.length;
        while ((readChar = reader.read ()) != - 1) {
            ++ lenConcatenator;
            tmpCC = new char [cc.length];
            System.arraycopy (cc, 0, tmpCC, 0, cc.length);
            cc = new char [lenConcatenator];
            System.arraycopy (tmpCC, 0, cc, 0, tmpCC.length);
            cc [lenConcatenator - 1] = (char) readChar;
        }
        System.out.println (cc);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    char ch [] = sc.nextLine ().toCharArray ();
    char temp;
    for (int i = 0, j = ch.length - 1;
    i < j; i ++, j --) {
        temp = ch [i];
        ch [i] = ch [j];
        ch [j] = temp;
    }
    System.out.println (new String (ch));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_18157396_1_18
18157378_25581557_4_24
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

public static void main (String [] args) {
    String s = "einstein";
    String temp = "";
    boolean isDuplicate = false;
    for (int i = 0;
    i < s.length (); i ++) {
        isDuplicate = false;
        char comparisonChar = s.charAt (i);
        for (int j = i + 1;
        j < s.length (); j ++) {
            char nextChar = s.charAt (j);
            if (comparisonChar == nextChar) isDuplicate = true;

        }
        if (! isDuplicate) temp = temp + comparisonChar;

    }
    System.out.println (temp);
}
----------------------------------------

public static void main (String args []) {
    String a = "stackoverflow";
    char c [] = a.toCharArray ();
    int l = a.length ();
    String b = "";
    for (int i = 0;
    i < l; i ++) {
        if (b.contains ("" + c [i])) {
        } else {
            b = b + "" + c [i];
        }
    }
    System.out.println (b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_18157396_1_18
18157378_26195621_3_18
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

public static void main (String [] args) {
    String s = "einstein";
    String temp = "";
    boolean isDuplicate = false;
    for (int i = 0;
    i < s.length (); i ++) {
        isDuplicate = false;
        char comparisonChar = s.charAt (i);
        for (int j = i + 1;
        j < s.length (); j ++) {
            char nextChar = s.charAt (j);
            if (comparisonChar == nextChar) isDuplicate = true;

        }
        if (! isDuplicate) temp = temp + comparisonChar;

    }
    System.out.println (temp);
}
----------------------------------------

void main (String s) {
    int count = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        int ind1 = s.indexOf (c, i);
        int ind2 = s.indexOf (c, i + 1);
        if (ind2 - ind1 == 1) {
            System.out.print (c + " ");
            count ++;
        }
    }
    System.out.println ("\n Number of counts = " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_18157396_1_18
18157378_50839168_1_15
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

public static void main (String [] args) {
    String s = "einstein";
    String temp = "";
    boolean isDuplicate = false;
    for (int i = 0;
    i < s.length (); i ++) {
        isDuplicate = false;
        char comparisonChar = s.charAt (i);
        for (int j = i + 1;
        j < s.length (); j ++) {
            char nextChar = s.charAt (j);
            if (comparisonChar == nextChar) isDuplicate = true;

        }
        if (! isDuplicate) temp = temp + comparisonChar;

    }
    System.out.println (temp);
}
----------------------------------------

public static void main (String [] args) {
    String stringWithDuplicates = "sathishssathish";
    char [] charecters = stringWithDuplicates.toCharArray ();
    boolean [] duplicateFound = new boolean [130];
    StringBuilder sb = new StringBuilder ();
    for (char c : charecters) {
        if (! duplicateFound [c]) {
            duplicateFound [c] = true;
            sb.append (c);
        }
    }
    System.out.println ("SubString.main()" + sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_25581557_4_24
18157378_26195621_3_18
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

public static void main (String args []) {
    String a = "stackoverflow";
    char c [] = a.toCharArray ();
    int l = a.length ();
    String b = "";
    for (int i = 0;
    i < l; i ++) {
        if (b.contains ("" + c [i])) {
        } else {
            b = b + "" + c [i];
        }
    }
    System.out.println (b);
}
----------------------------------------

void main (String s) {
    int count = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        int ind1 = s.indexOf (c, i);
        int ind2 = s.indexOf (c, i + 1);
        if (ind2 - ind1 == 1) {
            System.out.print (c + " ");
            count ++;
        }
    }
    System.out.println ("\n Number of counts = " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_25581557_4_24
18157378_50839168_1_15
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

public static void main (String args []) {
    String a = "stackoverflow";
    char c [] = a.toCharArray ();
    int l = a.length ();
    String b = "";
    for (int i = 0;
    i < l; i ++) {
        if (b.contains ("" + c [i])) {
        } else {
            b = b + "" + c [i];
        }
    }
    System.out.println (b);
}
----------------------------------------

public static void main (String [] args) {
    String stringWithDuplicates = "sathishssathish";
    char [] charecters = stringWithDuplicates.toCharArray ();
    boolean [] duplicateFound = new boolean [130];
    StringBuilder sb = new StringBuilder ();
    for (char c : charecters) {
        if (! duplicateFound [c]) {
            duplicateFound [c] = true;
            sb.append (c);
        }
    }
    System.out.println ("SubString.main()" + sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18157378_26195621_3_18
18157378_50839168_1_15
Title: Removing duplicate characters in a String (user inputted keyword) 
----------------------------------------

void main (String s) {
    int count = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        int ind1 = s.indexOf (c, i);
        int ind2 = s.indexOf (c, i + 1);
        if (ind2 - ind1 == 1) {
            System.out.print (c + " ");
            count ++;
        }
    }
    System.out.println ("\n Number of counts = " + count);
}
----------------------------------------

public static void main (String [] args) {
    String stringWithDuplicates = "sathishssathish";
    char [] charecters = stringWithDuplicates.toCharArray ();
    boolean [] duplicateFound = new boolean [130];
    StringBuilder sb = new StringBuilder ();
    for (char c : charecters) {
        if (! duplicateFound [c]) {
            duplicateFound [c] = true;
            sb.append (c);
        }
    }
    System.out.println ("SubString.main()" + sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18158550_18158641_14_40
18158550_18158845_31_47
Title: Zoom box for area around mouse location on screen 
----------------------------------------

public void run () {
    final int size = 256;
    final BufferedImage bi = new BufferedImage (size, size, BufferedImage.TYPE_INT_RGB);
    final JLabel gui = new JLabel (new ImageIcon (bi));
    ActionListener zoomListener = new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            PointerInfo pi = MouseInfo.getPointerInfo ();
            Point p = pi.getLocation ();
            BufferedImage temp = robot.createScreenCapture (new Rectangle (p.x - (size / 4), p.y - (size / 4), (size / 2), (size / 2)));
            Graphics g = bi.getGraphics ();
            g.drawImage (temp, 0, 0, size, size, null);
            g.dispose ();
            gui.repaint ();
        }}

    ;
    Timer t = new Timer (40, zoomListener);
    t.start ();
    JOptionPane.showMessageDialog (null, gui);
    t.stop ();
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    TestPane pane = new TestPane ();
    ZoomPane zoomPane = new ZoomPane (pane);
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (pane);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18158550_18158845_130_142
18158550_18158845_164_173
Title: Zoom box for area around mouse location on screen 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    if (buffer != null) {
        AffineTransform at = g2d.getTransform ();
        g2d.setTransform (AffineTransform.getScaleInstance (zoomLevel, zoomLevel));
        g2d.drawImage (buffer, 0, 0, this);
        g2d.setTransform (at);
    }
    g2d.setColor (Color.RED);
    g2d.drawRect (0, 0, getWidth () - 1, getHeight () - 1);
    g2d.dispose ();
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (img != null) {
        Graphics2D g2d = (Graphics2D) g.create ();
        int x = (getWidth () - img.getWidth ()) / 2;
        int y = (getHeight () - img.getHeight ()) / 2;
        g2d.drawImage (img, x, y, this);
        g2d.dispose ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18199566_18200060_166_175
18199566_18200060_218_242
Title: I need help not using brute force when using JFrames and DrawWindows 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (isPainted ()) {
        Graphics2D g2d = (Graphics2D) g.create ();
        int x = (getWidth () - RADIUS) / 2;
        int y = (getHeight () - RADIUS) / 2;
        g2d.drawOval (x, y, RADIUS - 1, RADIUS - 1);
        g2d.dispose ();
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (isPainted ()) {
        Graphics2D g2d = (Graphics2D) g.create ();
        int x1 = 0;
        int y1 = 0;
        int x2 = 0;
        int y2 = 0;
        switch (side) {
            case Left :
                x2 = getWidth () - 1;
                y2 = getHeight () - 1;
                break;
            case Right :
                x1 = getWidth () - 1;
                y1 = 0;
                y2 = getHeight () - 1;
                break;
        }
        g2d.drawLine (x1, y1, x2, y2);
        g2d.dispose ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18208069_18208208_1_17
18208069_18208261_1_11
Title: Specific java method return null pointer exception 
----------------------------------------

private boolean isNeighbor (ArrayList < Customer > collection, Customer node, DirectedSparseGraph < Customer, Transaction > network) throws SQLException {
    if (network == null) {
        throw new IllegalArgumentException ("Network may not be null.");
    }
    if (collection == null) {
        return false;
    }
    for (Customer customer : collection) {
        if (network.isSuccessor (customer, node)) {
            return true;
        }
    }
    return false;
}
----------------------------------------

private boolean isNeighbor (ArrayList < Customer > collection, Customer node, DirectedSparseGraph < Customer, Transaction > network) throws SQLException {
    if (null == collection || collection.size () == 0) {
        return false;
    } else {
        for (Customer customer : collection) {
            if (network.isSuccessor (customer, node)) return true;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18208982_18209065_10_37
18208982_18232672_41_64
Title: Must issue a STARTTLS command 
----------------------------------------

protected Session createSession () {
    Properties props = null;
    try {
        props = new Properties (System.getProperties ());
    } catch (SecurityException ex) {
        props = new Properties ();
    }
    if (getSMTPHost () != null) {
        props.put ("mail.smtp.host", getSMTPHost ());
    }
    if (useStartTLS) {
        props.put ("mail.smtp.starttls.enable", "true");
    }
    Authenticator auth = null;
    if (getSMTPPassword () != null && getSMTPUsername () != null) {
        props.put ("mail.smtp.auth", "true");
        auth = new Authenticator () {
            protected PasswordAuthentication getPasswordAuthentication () {
                return new PasswordAuthentication (getSMTPUsername (), getSMTPPassword ());
            }}

        ;
    }
    Session session = Session.getInstance (props, auth);
    if (getSMTPDebug ()) {
        session.setDebug (true);
    }
    return session;
}
----------------------------------------

protected Session createSession () {
    Properties props = new Properties ();
    props.put ("mail.smtps.host", getSMTPHost ());
    props.put ("mail.smtps.auth", "true");
    Authenticator auth = null;
    if (getSMTPPassword () != null && getSMTPUsername () != null) {
        auth = new Authenticator () {
            protected PasswordAuthentication getPasswordAuthentication () {
                return new PasswordAuthentication (getSMTPUsername (), getSMTPPassword ());
            }}

        ;
    }
    session = Session.getInstance (props, auth);
    if (getSMTPDebug ()) {
        session.setDebug (getSMTPDebug ());
    }
    return session;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18231809_18232058_8_17
18231809_38518054_13_26
Title: How to check whether a string is palindrome or not? 
----------------------------------------

public static String palindromeChecker (String word) {
    int length = word.length ();
    String reverse = "";
    for (int i = length - 1;
    i >= 0; i --) reverse = reverse + word.charAt (i);

    if (word.equals (reverse)) return "Palindrome";
    else return "Not a Palindrome";

}
----------------------------------------

public String palindromeChecker () {
    String reverse = "";
    int length = word.length ();
    for (int i = length - 1;
    i >= 0; i --) reverse = reverse + word.charAt (i);

    if (word.equals (reverse)) return "Palindrome";
    else return "Not a Palindrome";

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1825623_1825693_19_30
1825623_1825693_51_61
Title: Java - How to know when thread is waiting? 
----------------------------------------

public void run () {
    while (true) {
        printThreadStatus ();
        try {
            sleep (3000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            sleep (3000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18261404_18261511_1_19
18261404_18261567_1_19
Title: Get return statements in a java method 
----------------------------------------

Object onEvent () {
    List < String > list = new ArrayList < String > ();
    if (condition) {
        list.add ("a");
    }
    if (condition2) {
        list.add ("b");
    }
    if (condition3) {
        list.add ("c");
    }
    return list.toArray ();
}
----------------------------------------

Object onEvent (List < Object > rets) {
    String ret = "";
    rets.add ("a");
    rets.add ("b");
    rets.add ("c");
    if (condition) {
        ret = "a";
    }
    if (condition2) {
        ret = "b";
    }
    if (condition3) {
        ret = "c";
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1826379_1826600_9_17
1826379_1826789_15_44
Title: How to call a web service (described by a wsdl) from java 
----------------------------------------

public static void main (String [] args) {
    try {
        service = new PrimeNumbers ();
        PrimeClient client = new PrimeClient ();
        client.doTest (args);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        String UrlString = "Your WSDL URL";
        String nameSpaceUri = "urn:Foo";
        String serviceName = "MyHelloService";
        String portName = "HelloIFPort";
        System.out.println ("UrlString = " + UrlString);
        URL helloWsdlUrl = new URL (UrlString);
        ServiceFactory serviceFactory = ServiceFactory.newInstance ();
        Service helloService = serviceFactory.createService (helloWsdlUrl, new QName (nameSpaceUri, serviceName));
        dynamicproxy.HelloIF myProxy = (dynamicproxy.HelloIF) helloService.getPort (new QName (nameSpaceUri, portName), dynamicproxy.HelloIF.class);
        System.out.println (myProxy.sayHello ("Buzz"));
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18265864_18265920_1_16
18265864_43686287_5_19
Title: Can if statements be nested in a while loop? 
----------------------------------------

public static void main (String [] args) {
    String endProgram = "exit";
    String userInput;
    java.util.Scanner input = new java.util.Scanner (System.in);
    do {
        userInput = input.nextLine ();
        if (! userInput.equalsIgnoreCase (endProgram)) {
            System.out.printf ("You entered the following:" + userInput);
        }
    } while (! userInput.equalsIgnoreCase (endProgram));
}
----------------------------------------

public static void main (String [] args) {
    int a = 0;
    while (a <= 100) {
        if (a % 2 == 0) {
            System.out.println ("The no is EVEN : " + a);
        } else {
            System.out.println ("The num is ODD : " + a);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18266262_18266330_1_22
18266262_18266697_1_13
Title: How to remove multiple special characters from a String without any inbuilt functions like replaceAll() for jdk 1.4 below 
----------------------------------------

static public String replaceAll (String str, String replace, char replacement) {
    String T = "";
    int flag = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        char a = str.charAt (i);
        for (int j = 0;
        j < replace.length (); j ++) {
            if (a == replace.charAt (j)) flag = 1;

        }
        if (flag == 1) {
            T += replacement;
            flag = 0;
        } else T += a;

    }
    return T;
}
----------------------------------------

public static String replaceAll (String str, String replace, String replacement) {
    char [] strArray = str.toCharArray ();
    StringBuffer sb = new StringBuffer ();
    for (int i = 0;
    i < strArray.length; i ++) {
        if (strArray [i] == replace.toCharArray () [0]) {
            sb.append (replacement);
        } else {
            sb.append (strArray [i]);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18270799_18271032_26_38
18270799_18271032_45_52
Title: Adding items to an already existing jlist from another class 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    list.clearSelection ();
    DefaultListModel model = (DefaultListModel) list.getModel ();
    model.removeAllElements ();
    for (int x = 0;
    x < 9; x ++) {
        model.addElement ("" + (x + xX));
        xX ++;
    }
    list.setModel (model);
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    list.clearSelection ();
    listModel.removeAllElements ();
    for (int x = 0;
    x < 9; x ++) {
        listModel.addElement ("" + (x + xX));
        xX ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18274995_18335287_6_19
18274995_18369076_22_66
Title: NullpointerException when trying to read XLSX file 
----------------------------------------

public static void main (String arg []) {
    try {
        File existingXlsx = new File ("c:/Java/__Work/apache_POI/poi-3.9-bin/test-data/test2.xlsx");
        System.out.println ("File Exists: " + existingXlsx.exists ());
        Workbook workbook = WorkbookFactory.create (existingXlsx);
        System.out.println ("A1: " + workbook.getSheetAt (0).getRow (0).getCell (0).getStringCellValue ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    File file = new File ("test2.xlsx");
    FileInputStream fs;
    try {
        fs = new FileInputStream (file);
        OPCPackage xlsx = OPCPackage.open (fs);
        XSSFExcelExtractor xe = new XSSFExcelExtractor (xlsx);
        System.out.println (xe.getText ());
    } catch (FileNotFoundException e1) {
        e1.printStackTrace ();
    } catch (XmlException e) {
        e.printStackTrace ();
    } catch (OpenXML4JException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    File existingXlsx = new File ("test2.xlsx");
    System.out.println ("File Exists: " + existingXlsx.exists ());
    try {
        Workbook workbook = new XSSFWorkbook (new FileInputStream (existingXlsx));
        Sheet worksheet = workbook.getSheet ("Filter criteria");
        Row row1 = worksheet.getRow (0);
        Cell cellA1 = row1.getCell ((short) 0);
        String a1Val = cellA1.getStringCellValue ();
        System.out.println ("A1: " + a1Val);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18279302_18279545_30_46
18279302_18279586_10_19
Title: How do I perform a JAVA callback between classes? 
----------------------------------------

public void run () {
    System.out.println ("Starting Server Thread...");
    if (serverInterface == null) {
        System.out.println ("Server Thread error: callback null");
    }
    try {
        mainSocket = new ServerSocket (serverPort);
        while (true) {
            serverInterface.newServerConnection (mainSocket.accept ());
        }
    } catch (IOException ex) {
        Logger.getLogger (Server.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

public void run () {
    try {
        mainSocket = new ServerSocket (serverPort);
        while (true) {
            callback.execute (mainSocket.accept ());
        }
    } catch (IOException ex) {
        Logger.getLogger (Server.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18281956_26936626_29_42
18281956_35518830_1_16
Title: Java Code for Project Euler #12 
----------------------------------------

private static long getNumberOfDivisors (long nr) {
    int divisors = 0;
    int i;
    int sqrt = (int) Math.sqrt (nr);
    for (i = 1; i <= sqrt; i ++) {
        if (nr % i == 0) {
            divisors += 2;
        }
    }
    if (sqrt * sqrt == nr) {
        divisors --;
    }
    return divisors;
}
----------------------------------------

public static long getNumberOfDivisors (long n) {
    int ret = 1;
    long factor = 2;
    while (factor <= n) {
        int temp = 1;
        while (n % factor == 0) {
            n /= factor;
            temp ++;
        }
        ret *= temp;
        factor ++;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_12_27
18282060_18282123_32_40
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
            if (entry.getKey ().equals (Integer.valueOf (10))) {
                try {
                    writeLatch.countDown ();
                    readLatch.await ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        writeLatch.await ();
        map.put (150, 150);
        readLatch.countDown ();
    } catch (InterruptedException e) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_12_27
18282060_18282826_8_16
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
            if (entry.getKey ().equals (Integer.valueOf (10))) {
                try {
                    writeLatch.countDown ();
                    readLatch.await ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        while (! Thread.interrupted ()) {
            Map < String, String > tryit = test.getMap ();
        }
    } catch (ConcurrentModificationException e) {
        System.out.println ("GOT IT!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_12_27
18282060_18283267_26_31
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
            if (entry.getKey ().equals (Integer.valueOf (10))) {
                try {
                    writeLatch.countDown ();
                    readLatch.await ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("get: %d\n", i);
        }
        Map < K, String > m2 = new HashMap < > (map);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_1_42
18282060_18282826_6_35
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public static void main (String [] args) {
    final Map < Integer, Integer > map = new HashMap < > ();
    final CountDownLatch readLatch = new CountDownLatch (1);
    final CountDownLatch writeLatch = new CountDownLatch (1);
    for (int i = 0;
    i < 100; i ++) {
        map.put (i, i);
    }
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
                    if (entry.getKey ().equals (Integer.valueOf (10))) {
                        try {
                            writeLatch.countDown ();
                            readLatch.await ();
                        } catch (InterruptedException e) {
                            Thread.currentThread ().interrupt ();
                        }
                    }
                }
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    ).start ();
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                writeLatch.await ();
                map.put (150, 150);
                readLatch.countDown ();
            } catch (InterruptedException e) {
                Thread.currentThread ().interrupt ();
            }
        }}

    ).start ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Runnable getter = new Runnable () {
        @Override
        public void run () {
            try {
                while (! Thread.interrupted ()) {
                    Map < String, String > tryit = test.getMap ();
                }
            } catch (ConcurrentModificationException e) {
                System.out.println ("GOT IT!");
            }
        }}

    ;
    Runnable putter = new Runnable () {
        @Override
        public void run () {
            while (! Thread.interrupted ()) {
                char c = (char) rand.nextInt ();
                test.putMap (String.valueOf (c), "whatever");
            }
        }}

    ;
    Thread g = new Thread (getter);
    Thread p = new Thread (putter);
    g.start ();
    p.start ();
    g.join ();
    p.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_1_42
18282060_18283267_24_39
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public static void main (String [] args) {
    final Map < Integer, Integer > map = new HashMap < > ();
    final CountDownLatch readLatch = new CountDownLatch (1);
    final CountDownLatch writeLatch = new CountDownLatch (1);
    for (int i = 0;
    i < 100; i ++) {
        map.put (i, i);
    }
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                for (Map.Entry < Integer, Integer > entry : map.entrySet ()) {
                    if (entry.getKey ().equals (Integer.valueOf (10))) {
                        try {
                            writeLatch.countDown ();
                            readLatch.await ();
                        } catch (InterruptedException e) {
                            Thread.currentThread ().interrupt ();
                        }
                    }
                }
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    ).start ();
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                writeLatch.await ();
                map.put (150, 150);
                readLatch.countDown ();
            } catch (InterruptedException e) {
                Thread.currentThread ().interrupt ();
            }
        }}

    ).start ();
}
----------------------------------------

public static void main (String [] args) {
    Runnable get = new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            ; i ++) {
                if (i % 1000 == 0) {
                    System.out.printf ("get: %d\n", i);
                }
                Map < K, String > m2 = new HashMap < > (map);
            }
        }}

    new Thread (get).start ();
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("put: %d\n", i);
        }
        String s = Integer.toString (1000 + i);
        map.put (new K (s), s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_32_40
18282060_18282826_8_16
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        writeLatch.await ();
        map.put (150, 150);
        readLatch.countDown ();
    } catch (InterruptedException e) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------

public void run () {
    try {
        while (! Thread.interrupted ()) {
            Map < String, String > tryit = test.getMap ();
        }
    } catch (ConcurrentModificationException e) {
        System.out.println ("GOT IT!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282123_32_40
18282060_18283267_26_31
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        writeLatch.await ();
        map.put (150, 150);
        readLatch.countDown ();
    } catch (InterruptedException e) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("get: %d\n", i);
        }
        Map < K, String > m2 = new HashMap < > (map);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282826_6_35
18282060_18283267_24_39
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Runnable getter = new Runnable () {
        @Override
        public void run () {
            try {
                while (! Thread.interrupted ()) {
                    Map < String, String > tryit = test.getMap ();
                }
            } catch (ConcurrentModificationException e) {
                System.out.println ("GOT IT!");
            }
        }}

    ;
    Runnable putter = new Runnable () {
        @Override
        public void run () {
            while (! Thread.interrupted ()) {
                char c = (char) rand.nextInt ();
                test.putMap (String.valueOf (c), "whatever");
            }
        }}

    ;
    Thread g = new Thread (getter);
    Thread p = new Thread (putter);
    g.start ();
    p.start ();
    g.join ();
    p.interrupt ();
}
----------------------------------------

public static void main (String [] args) {
    Runnable get = new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            ; i ++) {
                if (i % 1000 == 0) {
                    System.out.printf ("get: %d\n", i);
                }
                Map < K, String > m2 = new HashMap < > (map);
            }
        }}

    new Thread (get).start ();
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("put: %d\n", i);
        }
        String s = Integer.toString (1000 + i);
        map.put (new K (s), s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18282060_18282826_8_16
18282060_18283267_26_31
Title: Trying to recreate java.util.ConcurrentModificationException 
----------------------------------------

public void run () {
    try {
        while (! Thread.interrupted ()) {
            Map < String, String > tryit = test.getMap ();
        }
    } catch (ConcurrentModificationException e) {
        System.out.println ("GOT IT!");
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    ; i ++) {
        if (i % 1000 == 0) {
            System.out.printf ("get: %d\n", i);
        }
        Map < K, String > m2 = new HashMap < > (map);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18288397_18289711_27_44
18288397_18289990_2_14
Title: Longest String Palindrome Using string.reverse 
----------------------------------------

public static void main (String [] args) {
    String str = "abbzbasddeeaaaccffertrecca";
    char ch [] = str.toCharArray ();
    int cache [] [] = new int [ch.length] [ch.length];
    for (int row [] : cache) {
        Arrays.fill (row, - 1);
    }
    maxPalindrome (ch, 0, ch.length - 1, cache);
    for (int i = 0;
    i < cache.length; ++ i) {
        for (int j = 0;
        j < cache.length; ++ j) {
            if (cache [i] [j] > 0) {
                System.out.println (str.substring (i, j + 1) + " " + cache [i] [j]);
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int big = 0;
    String pstr = "";
    StringBuilder str = new StringBuilder ("aabbccabbabhhakllkjiooijpawan-nawap");
    for (int i = 0;
    i < str.length () - 1; i ++) for (int j = i + 1;
    j < str.length (); j ++) {
        if (str.charAt (i) == str.charAt (j) && pldrm (str.subSequence (i, j + 1).toString ()) && big < (j - i)) {
            pstr = str.subSequence (i, j + 1).toString ();
            big = j - i;
        }
    }

    System.out.println (pstr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18296360_18296393_1_11
18296360_20277314_10_32
Title: Fibonacci sequence in Java using for statements 
----------------------------------------

static void fibonacci () {
    int ptr1 = 1, ptr2 = 1;
    int temp = 0;
    System.out.print (ptr1 + " " + ptr2 + " ");
    for (int i = 0;
    i < 10; i ++) {
        System.out.print (ptr1 + ptr2 + " ");
        temp = ptr1;
        ptr1 = ptr2;
        ptr2 = temp + ptr2;
    }
}
----------------------------------------

public void fibonacci () {
    int numb1 = 1;
    int numb2 = 1;
    int temp = 0;
    @SuppressWarnings ("resource")
    Scanner input = new Scanner (System.in);
    System.out.println ("How Many Terms? (Up To 45)");
    int x = input.nextInt ();
    x = x - 2;
    System.out.println (numb1);
    System.out.println (numb2);
    for (int i = 0;
    i < x; i ++) {
        System.out.println (numb1 + numb2 + " ");
        temp = numb1;
        numb1 = numb2;
        numb2 = temp + numb2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18296360_25581112_5_18
18296360_45395034_3_11
Title: Fibonacci sequence in Java using for statements 
----------------------------------------

public static void main (String a []) {
    int febCount = 15;
    int [] feb = new int [febCount];
    feb [0] = 0;
    feb [1] = 1;
    for (int i = 2;
    i < febCount; i ++) {
        feb [i] = feb [i - 1] + feb [i - 2];
    }
    for (int i = 0;
    i < febCount; i ++) {
        System.out.print (feb [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 0, c = 0, b = 1;
    for (int i = 0;
    i < 10; i ++) {
        System.out.print (c + " ");
        a = c + b;
        c = b;
        b = a;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18303831_18303958_31_39
18303831_18311073_25_43
Title: Adding column with header and data to the MyTableModel 
----------------------------------------

public static void main (String [] args) {
    java.awt.EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame window = new JFrame ("3-column demo");
            window.setPreferredSize (new Dimension (600, 400));
            window.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            JTable table = new JTable (new ThreeColumnModel ());
            window.add (new JScrollPane (table));
            window.pack ();
            window.setLocationRelativeTo (null);
            window.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18326920_18329199_11_68
18326920_18350320_9_64
Title: java serialization and deserializaion 
----------------------------------------

public static void main (String [] args) {
    if (args == null || args.length == 0) {
        throw new RuntimeException ("Please specify the file name!!!");
    }
    String filepath = args [0];
    Scanner in = new Scanner (System.in);
    System.out.println ("Please input your comments ....");
    System.out.println ("Type quit to finish the input! Please type exact quit to quit!!!");
    System.out.println ("Type save to write to the file you specified. ");
    StringBuilder sb = new StringBuilder ();
    while (true) {
        String input = in.nextLine ();
        if ("quit".equalsIgnoreCase (input) || "save".equalsIgnoreCase (input)) {
            System.out.println ("Thanks for using the program!!!");
            System.out.println ("Your input is stored in " + filepath);
            break;
        }
        sb.append (input);
        sb.append (NEW_LINE);
    }
    FileWriter fw = null;
    BufferedWriter bw = null;
    try {
        fw = new FileWriter (filepath, true);
        bw = new BufferedWriter (fw);
        bw.write (sb.toString (), 0, sb.toString ().length ());
        bw.flush ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        if (fw != null) {
            try {
                fw.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
        if (bw != null) {
            try {
                bw.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        File myFile = new File (args [0]);
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        if (myFile.exists ()) {
            AppendingObjectOutputStream AOOS = new AppendingObjectOutputStream (new FileOutputStream (myFile, true));
            System.out.println ("Enter text and press ^Z or ^D to end.");
            String str;
            while ((str = br.readLine ()) != null) {
                AOOS.writeObject (str);
            }
            br.close ();
            AOOS.flush ();
        } else {
            ObjectOutputStream OOS = new ObjectOutputStream (new FileOutputStream (myFile, true));
            System.out.println ("Enter text and press ^Z or ^D to end.");
            String str;
            while ((str = br.readLine ()) != null) {
                OOS.writeObject (str);
            }
            br.close ();
            OOS.flush ();
        }
    } catch (IOException i) {
        i.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18330738_18331004_1_22
18330738_18331013_1_24
Title: error in parsing file -- runtime error 
----------------------------------------

public void parseFields () {
    String delimiter = ",\n";
    int rows = records.size ();
    data = new String [rows] [];
    int row = 0;
    for (String record : records) {
        StringTokenizer tokens = new StringTokenizer (record, delimiter);
        int cols = tokens.countTokens ();
        data [row] = new String [cols];
        int col = 0;
        while (tokens.hasMoreTokens ()) {
            data [row] [col] = tokens.nextToken ().trim ();
            col ++;
        }
        row ++;
    }
}
----------------------------------------

public void parseFields () {
    String delimiter = ",\n";
    int rows = records.size ();
    data = new String [rows] [];
    int row = 0;
    for (String record : records) {
        StringTokenizer tokens = new StringTokenizer (record, delimiter);
        int cols = tokens.countTokens ();
        data [row] = new String [cols];
        int col = 0;
        while (tokens.hasMoreTokens ()) {
            data [row] [col] = tokens.nextToken ().trim ();
            col ++;
        }
        row ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18330738_18331013_1_24
18330738_18331014_1_22
Title: error in parsing file -- runtime error 
----------------------------------------

public void parseFields () {
    String delimiter = ",\n";
    int rows = records.size ();
    data = new String [rows] [];
    int row = 0;
    for (String record : records) {
        StringTokenizer tokens = new StringTokenizer (record, delimiter);
        int cols = tokens.countTokens ();
        data [row] = new String [cols];
        int col = 0;
        while (tokens.hasMoreTokens ()) {
            data [row] [col] = tokens.nextToken ().trim ();
            col ++;
        }
        row ++;
    }
}
----------------------------------------

public void parseFields () {
    String delimiter = ",\n";
    int rows = records.size ();
    data = new String [rows] [];
    int row = 0;
    for (String record : records) {
        StringTokenizer tokens = new StringTokenizer (record, delimiter);
        int cols = tokens.countTokens ();
        data [row] = new String [cols];
        int col = 0;
        while (tokens.hasMoreTokens ()) {
            data [row] [col] = tokens.nextToken ().trim ();
            col ++;
        }
        row ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18336683_18336954_1_12
18336683_18336980_2_9
Title: "Logical error: Max always ""0""?" 
----------------------------------------

public static void main (String [] args) {
    int i;
    int mynum [] = new int [5];
    int max = Integer.MIN_VALUE;
    for (i = 0; i < mynum.length; i ++) {
        int num = Integer.parseInt (JOptionPane.showInputDialog (null, "Value"));
        if (num > max) max = num;

    }
    JOptionPane.showMessageDialog (null, "Maximum number is: " + max);
}
----------------------------------------

public static void main (String [] args) {
    int max = Integer.MIN_VALUE;
    for (int i = 0;
    i < 5; i ++) {
        int newNum = Integer.parseInt (JOptionPane.showInputDialog (null, " Value "));
        if (newNum > max) max = newNum;

    }
    JOptionPane.showMessageDialog (null, "Maximum value is " + max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18347446_18347470_4_16
18347446_18347472_1_13
Title: Scanner not working? 
----------------------------------------

public static void main (String [] args) {
    String kirill;
    String kirill2 = "Java";
    Scanner input = new Scanner (System.in);
    kirill = input.next ();
    if (kirill.equals (kirill2)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    System.out.println (kirill);
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner kirill = new Scanner (System.in);
    String input = kirill.nextLine ();
    System.out.println (input);
    String kirill2 = "Java";
    if (input.equals (kirill2)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    System.out.println (kirill);
    kirill.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18347446_18347470_4_16
18347446_18347549_4_14
Title: Scanner not working? 
----------------------------------------

public static void main (String [] args) {
    String kirill;
    String kirill2 = "Java";
    Scanner input = new Scanner (System.in);
    kirill = input.next ();
    if (kirill.equals (kirill2)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    System.out.println (kirill);
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String text = "Java";
    String input = scan.nextLine ();
    if (input.equals (text)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18347446_18347472_1_13
18347446_18347549_4_14
Title: Scanner not working? 
----------------------------------------

public static void main (String [] args) {
    Scanner kirill = new Scanner (System.in);
    String input = kirill.nextLine ();
    System.out.println (input);
    String kirill2 = "Java";
    if (input.equals (kirill2)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    System.out.println (kirill);
    kirill.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String text = "Java";
    String input = scan.nextLine ();
    if (input.equals (text)) {
        System.out.println ("yes");
    } else {
        System.out.println ("no");
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18348641_18348694_1_23
18348641_18349016_1_30
Title: Return elements of the array that form a sum 
----------------------------------------

public static int [] isSum (int [] a, int val, int count, int index, int [] arr) {
    int [] res = new int [2];
    if (count == 0 && val == 0) {
        return arr;
    } else if (index >= a.length || count == 0) {
        return res;
    } else {
        res [0] = arr [0];
        res [1] = arr [1];
        if (count == 1) {
            arr [1] = index;
        } else {
            arr [0] = index;
        }
        int [] s1 = isSum (a, val - a [index], count - 1, index + 1, arr);
        int [] s2 = isSum (a, val, count, index + 1, res);
        res = (s1 [1] != 0 ? s1 : s2);
    }

    return res;
}
----------------------------------------

public static int [] isSum (int [] a, int val, int count, int index) {
    int [] results = new int [2];
    results [0] = - 1;
    results [1] = - 1;
    if (count == 0 && val == 0) {
        results [0] = 0;
        results [1] = 0;
        return results;
    }
    if (index >= a.length) return results;
    else {
        if (isSum (a, val - a [index], count - 1, index + 1) == results) {
            if (isSum (a, val, count, index + 1) == results) {
                return results;
            } else {
                results [0] = val;
                results [1] = a [index + 1];
                return results;
            }
        } else {
            results [0] = val - a [index];
            results [1] = a [index + 1];
            return results;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
18374626_18382098_277_307
18374626_18382098_351_385
Title: "JavaFx 2 - TableView  return selected item" 
----------------------------------------

public void updateItem (T item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        setGraphic (checkBox);
        if (ov instanceof BooleanProperty) {
            checkBox.selectedProperty ().unbindBidirectional ((BooleanProperty) ov);
        }
        ov = getTableColumn ().getCellObservableValue (getIndex ());
        if (ov instanceof BooleanProperty) {
            checkBox.selectedProperty ().bindBidirectional ((BooleanProperty) ov);
        }
    }
}
----------------------------------------

public void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        if (isEditing ()) {
            if (textField != null) {
                textField.setText (getString ());
            }
            setText (null);
            setGraphic (textField);
        } else {
            setText (getString ());
            setGraphic (null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_1837766_1_15
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_24720884_1_15
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i + 1;
        j < nums.length; j ++) if (nums [j] == 0 && nums [i] != 0) {
            t = nums [i];
            nums [i] = nums [j];
            nums [j] = t;
        }

    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_24720914_1_20
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    int k = 0;
    int narr [] = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) if (nums [i] == 0) {
        narr [k] = nums [i];
        k = k + 1;
    }

    for (int i = 0;
    i < nums.length; i ++) if (nums [i] != 0) {
        narr [k] = nums [i];
        k = k + 1;
    }

    return narr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_39078161_1_24
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    for (int j = 0;
    j < nums.length; j ++) {
        for (int i = 0;
        i < nums.length; i ++) {
            if (i > 0 && nums [i] == 0) {
                if (nums [i - 1] != 0) {
                    int temp = nums [i];
                    nums [i] = nums [i - 1];
                    nums [i - 1] = temp;
                }
            }
            continue;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_41390353_1_23
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    ArrayList < Integer > zeroPlaces = new ArrayList < Integer > ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 0) {
            zeroPlaces.add (i);
        }
    }
    int [] ret = nums;
    for (int i = 0;
    i < zeroPlaces.size (); i ++) {
        int temp = ret [i];
        ret [i] = ret [zeroPlaces.get (i)];
        ret [zeroPlaces.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837741_1_19
1837698_49193124_1_12
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int [] result = new int [nums.length];
    int zeroesPos = 0;
    int othersPos = result.length - 1;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            result [zeroesPos] = 0;
            ++ zeroesPos;
        } else {
            result [othersPos] = nums [i];
            -- othersPos;
        }
    }
    return result;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    Arrays.sort (nums);
    Integer [] t = Arrays.stream (nums).boxed ().toArray (Integer [] :: new);
    for (int i = nums.length - 1;
    i >= 0; -- i) {
        if (nums [i] < 0) {
            Arrays.sort (t, Collections.reverseOrder ());
            int [] newNums = Arrays.stream (t).mapToInt (Integer :: intValue).toArray ();
            return newNums;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837766_1_15
1837698_24720884_1_15
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        for (int j = i + 1;
        j < nums.length; j ++) if (nums [j] == 0 && nums [i] != 0) {
            t = nums [i];
            nums [i] = nums [j];
            nums [j] = t;
        }

    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1837698_1837766_1_15
1837698_24720914_1_20
Title: javabat question 
----------------------------------------

public int [] zeroFront (int [] nums) {
    if (nums == null) {
        return null;
    }
    int zerosPos = 0;
    for (int i = 0;
    i < nums.length; ++ i) {
        if (nums [i] == 0) {
            num [i] = num [zerosPos];
            num [zerosPos] = 0;
            ++ zerosPos;
        }
    }
    return num;
}
----------------------------------------

public int [] zeroFront (int [] nums) {
    int k = 0;
    int narr [] = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) if (nums [i] == 0) {
        narr [k] = nums [i];
        k = k + 1;
    }

    for (int i = 0;
    i < nums.length; i ++) if (nums [i] != 0) {
        narr [k] = nums [i];
        k = k + 1;
    }

    return narr;
}
----------------------------------------
