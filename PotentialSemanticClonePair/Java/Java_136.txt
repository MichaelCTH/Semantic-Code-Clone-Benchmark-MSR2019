$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8976057_8976169_8_22
8976057_8976213_1_9
Title: Is this java class thread safe? 
----------------------------------------

public void add (int i) {
    lock.lock ();
    try {
        if (sum != 0) {
            multiplication.await ();
        }
        sum += i;
        addition.signal ();
    } finally {
        lock.unlock ();
    }
}
----------------------------------------

public void add (int i) {
    synchronized (this) {
        while (! b) {
            try {
                wait ();
            } catch (InterruptedException e) {
            }
        }
        sum += i;
        b = true;
        notify ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8987285_8987822_26_44
8987285_8987904_6_29
Title: Multiple ListCellRenderer 
----------------------------------------

public static void main (String [] args) {
    list (new DefaultListCellRenderer () {
        public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
            c.setBackground (Color.RED);
            return c;
        }}

    , "One", "Two", "Three");
    list (new DefaultListCellRenderer () {
        public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
            c.setBackground (Color.BLUE);
            return c;
        }}

    , "North", "South", "EAST");
}
----------------------------------------

public static void main (String [] args) {
    final String [] fruits = {"Apple", "Pear", "Banana", "Grapefruit"};
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JList fruitList1 = new JList (fruits);
            fruitList1.setCellRenderer (new MultiColumnCellRenderer ());
            JList fruitList2 = new JList (fruits);
            fruitList2.setCellRenderer (new MultiColumnCellRenderer2 ());
            JPanel gui = new JPanel (new GridLayout (1, 0, 2, 2));
            gui.add (fruitList1);
            gui.add (fruitList2);
            JOptionPane.showMessageDialog (null, gui);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8987285_8987822_26_44
8987285_8994201_11_23
Title: Multiple ListCellRenderer 
----------------------------------------

public static void main (String [] args) {
    list (new DefaultListCellRenderer () {
        public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
            c.setBackground (Color.RED);
            return c;
        }}

    , "One", "Two", "Three");
    list (new DefaultListCellRenderer () {
        public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
            c.setBackground (Color.BLUE);
            return c;
        }}

    , "North", "South", "EAST");
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JPanel gui = new JPanel (new GridLayout (1, 0, 2, 2));
            gui.add (createList (Color.red));
            gui.add (createList (Color.green));
            JOptionPane.showMessageDialog (null, gui);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8987285_8987904_6_29
8987285_8994201_11_23
Title: Multiple ListCellRenderer 
----------------------------------------

public static void main (String [] args) {
    final String [] fruits = {"Apple", "Pear", "Banana", "Grapefruit"};
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JList fruitList1 = new JList (fruits);
            fruitList1.setCellRenderer (new MultiColumnCellRenderer ());
            JList fruitList2 = new JList (fruits);
            fruitList2.setCellRenderer (new MultiColumnCellRenderer2 ());
            JPanel gui = new JPanel (new GridLayout (1, 0, 2, 2));
            gui.add (fruitList1);
            gui.add (fruitList2);
            JOptionPane.showMessageDialog (null, gui);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JPanel gui = new JPanel (new GridLayout (1, 0, 2, 2));
            gui.add (createList (Color.red));
            gui.add (createList (Color.green));
            JOptionPane.showMessageDialog (null, gui);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8987778_8987868_1_20
8987778_8987915_13_30
Title: How do I print out the value of this boolean? (Java) 
----------------------------------------

public boolean isLeapYear (int year) {
    if (year % 4 != 0) {
        isLeapYear = false;
        System.out.println ("false");
    } else if ((year % 4 == 0) && (year % 100 == 0)) {
        isLeapYear = false;
        System.out.println ("false");
    } else if ((year % 4 == 0) && (year % 100 == 0) && (year % 400 == 0)) {
        isLeapYear = true;
        System.out.println ("true");
    } else {
        isLeapYear = false;
        System.out.println ("false");
    }

    return isLeapYear;
}
----------------------------------------

public static boolean isLeapYear (int year) {
    if (year % 4 != 0) isLeapYear = false;
    else if ((year % 4 == 0) && (year % 100 == 0)) isLeapYear = false;
    else if ((year % 4 == 0) && (year % 100 == 0) && (year % 400 == 0)) isLeapYear = true;
    else isLeapYear = false;

    System.out.println (isLeapYear);
    return isLeapYear;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8995797_8995879_1_12
8995797_8995883_1_10
Title: JAVA : How can I represent a 2D character array as a String using a toString ?  
----------------------------------------

public String toString () {
    StringBuilder builder = new StringBuilder ();
    for (int i = 0;
    i < getHeight (); i ++) {
        for (int j = 0;
        j < getWidth (); j ++) {
            builder.append (grid [i] [j]);
        }
    }
    return builder.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < this.grid.length; i ++) {
        for (int j = 0;
        j < this.grid [i].length; j ++) {
            sb.append (grid [i] [j]);
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8995797_8995879_1_12
8995797_8995893_1_13
Title: JAVA : How can I represent a 2D character array as a String using a toString ?  
----------------------------------------

public String toString () {
    StringBuilder builder = new StringBuilder ();
    for (int i = 0;
    i < getHeight (); i ++) {
        for (int j = 0;
        j < getWidth (); j ++) {
            builder.append (grid [i] [j]);
        }
    }
    return builder.toString ();
}
----------------------------------------

public String toString () {
    String result = "";
    for (int i = 0;
    x < grid.length; i ++) {
        for (int y = 0;
        y < grid [x].length; y ++) {
            result += grid [x] [y];
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8995797_8995883_1_10
8995797_8995893_1_13
Title: JAVA : How can I represent a 2D character array as a String using a toString ?  
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < this.grid.length; i ++) {
        for (int j = 0;
        j < this.grid [i].length; j ++) {
            sb.append (grid [i] [j]);
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    String result = "";
    for (int i = 0;
    x < grid.length; i ++) {
        for (int y = 0;
        y < grid [x].length; y ++) {
            result += grid [x] [y];
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9008150_29834792_33_56
9008150_32488412_29_46
Title: Shifting a Java BitSet 
----------------------------------------

public static BitSet shiftRight (BitSet bits, int n) {
    if (n < 0) throw new IllegalArgumentException ("'n' must be >= 0");

    if (n >= 64) throw new IllegalArgumentException ("'n' must be < 64");

    long [] words = bits.toLongArray ();
    if (words [words.length - 1]>>> (64 - n) > 0) {
        long [] tmp = new long [words.length + 1];
        System.arraycopy (words, 0, tmp, 0, words.length);
        words = tmp;
    }
    for (int i = words.length - 1;
    i > 0; i --) {
        words [i] <<= n;
        words [i] |= words [i - 1]>>> (64 - n);
    }
    words [0] <<= n;
    return BitSet.valueOf (words);
}
----------------------------------------

public void shiftRight (int n) {
    if (n < 0) throw new IllegalArgumentException ("'n' must be >= 0");

    if (n >= 64) throw new IllegalArgumentException ("'n' must be < 64");

    if (words.length > 0) {
        ensureCapacity (n);
        for (int i = words.length - 1;
        i > 0; i --) {
            words [i] <<= n;
            words [i] |= words [i - 1]>>> (64 - n);
        }
        words [0] <<= n;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9015624_9016551_106_113
9015624_9016676_108_116
Title: return to calling method or get results of the selection of a JCheckBox 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == selectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (true);
            setVisible (true);
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == selectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (true);
            setVisible (true);
        }
    }
    notifyObservers ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9015624_9016551_106_113
9015624_9016676_124_131
Title: return to calling method or get results of the selection of a JCheckBox 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == selectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (true);
            setVisible (true);
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == deselectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (false);
        }
    }
    notifyObservers ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9015624_9016676_108_116
9015624_9016676_124_131
Title: return to calling method or get results of the selection of a JCheckBox 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == selectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (true);
            setVisible (true);
        }
    }
    notifyObservers ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == deselectall) {
        for (int i = 0;
        i < num; i ++) {
            b [i].setSelected (false);
        }
    }
    notifyObservers ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9027417_9027454_104_117
9027417_9027454_119_132
Title: I do not know what else to do sql/java 
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9027417_9027454_104_117
9027417_9027454_88_101
Title: I do not know what else to do sql/java 
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9027417_9027454_119_132
9027417_9027454_88_101
Title: I do not know what else to do sql/java 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9042345_9042358_1_13
9042345_9042425_1_14
Title: Can't find the error in my code for number 4 of project euler 
----------------------------------------

public static void checkPalindrome (int n, int a, int b) {
    String s = "" + n;
    boolean palindrome = true;
    int j = s.length () - 1;
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) != s.charAt (j)) palindrome = false;

    }
    if (palindrome) System.out.println (n + ", " + a + ", " + b);

}
----------------------------------------

public static void checkPalindrome (int n, int a, int b) {
    String s = "" + n;
    boolean palindrome = false;
    int j = s.length () - 1;
    for (int i = 0;
    i <= j; i ++) {
        if (s.charAt (i) != s.charAt (j)) break;

        j --;
    }
    if (palindrome) System.out.println (n + ", " + a + ", " + b);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
905781_36149973_130_152
905781_36149973_50_101
Title: how to read and write data and accepting connection using socket channel 
----------------------------------------

public void run () {
    try {
        SocketChannel client = SocketChannel.open (new InetSocketAddress (serverHost, serverPort));
        String request = "hello - from client [" + Thread.currentThread ().getName () + "}";
        byte [] bs = request.getBytes (StandardCharsets.UTF_8);
        ByteBuffer buffer = ByteBuffer.wrap (bs);
        while (buffer.hasRemaining ()) {
            client.write (buffer);
        }
        ByteBuffer inBuf = ByteBuffer.allocate (1024);
        while (client.read (inBuf) > 0) {
            System.out.printf ("[%s]:\t%s\n", Thread.currentThread ().getName (), new String (inBuf.array (), StandardCharsets.UTF_8));
        }
        client.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        server = ServerSocketChannel.open ();
        server.socket ().bind (new InetSocketAddress (serverHost, serverPort));
        server.configureBlocking (false);
        Selector selector = Selector.open ();
        server.register (selector, SelectionKey.OP_ACCEPT);
        while (true) {
            selector.select ();
            Set < SelectionKey > readyKeys = selector.selectedKeys ();
            Iterator < SelectionKey > iterator = readyKeys.iterator ();
            while (iterator.hasNext ()) {
                SelectionKey key = (SelectionKey) iterator.next ();
                iterator.remove ();
                if (key.isAcceptable ()) {
                    SocketChannel client = server.accept ();
                    System.out.printf ("[%s]:\t%s\n", Thread.currentThread ().getName (), "accept connection");
                    client.configureBlocking (false);
                    client.register (selector, SelectionKey.OP_READ);
                } else if (key.isReadable ()) {
                    SocketChannel client = (SocketChannel) key.channel ();
                    ByteBuffer inBuf = ByteBuffer.allocate (1024);
                    while (client.read (inBuf) > 0) {
                        System.out.printf ("[%s]:\t%s\n", Thread.currentThread ().getName (), new String (inBuf.array (), StandardCharsets.UTF_8));
                    }
                    client.register (selector, SelectionKey.OP_WRITE);
                } else if (key.isWritable ()) {
                    SocketChannel client = (SocketChannel) key.channel ();
                    String response = "hi - from non-blocking server";
                    byte [] bs = response.getBytes (StandardCharsets.UTF_8);
                    ByteBuffer buffer = ByteBuffer.wrap (bs);
                    client.write (buffer);
                    client.register (selector, SelectionKey.OP_READ);
                }

            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9058624_9058675_1_23
9058624_9058700_1_23
Title: Adding code to a preexisting method 
----------------------------------------

public boolean makeAppointment (int time, Appointment appointment) {
    if (! validTime (time)) {
        return false;
    }
    int startTime = time - START_OF_DAY;
    if (appointments [startTime] != null) {
        return false;
    }
    int duration = appointment.getDuration ();
    if (appointmentOverlaps (time, duration)) {
        return false;
    }
    for (int i = 0;
    i < duration; i ++) {
        appointments [startTime + i] = appointment;
    }
    return true;
}
----------------------------------------

public boolean makeAppointment (int time, Appointment appointment) {
    if (validTime (time)) {
        int startTime = time - START_OF_DAY;
        int duration = appointment.getDuration ();
        if (checkMultihourAppointment (startTime, duration)) {
            for (int i = 0;
            i < duration; i ++) {
                appointments [startTime + i] = appointment;
            }
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9071389_9072475_40_80
9071389_9072475_49_59
Title: setting JTextPane to content type HTML and using string builders 
----------------------------------------

public void run () {
    try {
        Thread.sleep (1500);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            jta.setText (null);
            HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
            try {
                doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething.toString ());
            } catch (BadLocationException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
    try {
        Thread.sleep (1500);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
            try {
                doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething1.toString ());
            } catch (BadLocationException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
}
----------------------------------------

public void run () {
    jta.setText (null);
    HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
    try {
        doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething.toString ());
    } catch (BadLocationException ex) {
        Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9071389_9072475_40_80
9071389_9072475_69_78
Title: setting JTextPane to content type HTML and using string builders 
----------------------------------------

public void run () {
    try {
        Thread.sleep (1500);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            jta.setText (null);
            HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
            try {
                doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething.toString ());
            } catch (BadLocationException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
    try {
        Thread.sleep (1500);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
            try {
                doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething1.toString ());
            } catch (BadLocationException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
}
----------------------------------------

public void run () {
    HTMLDocument doc = (HTMLDocument) jta.getStyledDocument ();
    try {
        doc.insertAfterEnd (doc.getCharacterElement (doc.getLength ()), buildSomething1.toString ());
    } catch (BadLocationException ex) {
        Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger (MyTextPane.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9073491_9073648_29_47
9073491_9073653_10_36
Title: "How do I move the circle to the ""WEST"" border layout frame?" 
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new Lab2MoveBallListener (canvas));
}
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Lab2Panel.this.remove (canvas);
            Lab2Panel.this.add (canvas, BorderLayout.WEST);
            Lab2Panel.this.repaint ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9073491_9073648_29_47
9073491_9073951_13_35
Title: "How do I move the circle to the ""WEST"" border layout frame?" 
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new Lab2MoveBallListener (canvas));
}
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new Lab2MoveBallListener (canvas));
    rightButton.addActionListener (new Lab2MoveBallListener (canvas));
    upButton.addActionListener (new Lab2MoveBallListener (canvas));
    downButton.addActionListener (new Lab2MoveBallListener (canvas));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9073491_9073653_10_36
9073491_9073951_13_35
Title: "How do I move the circle to the ""WEST"" border layout frame?" 
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Lab2Panel.this.remove (canvas);
            Lab2Panel.this.add (canvas, BorderLayout.WEST);
            Lab2Panel.this.repaint ();
        }}

    );
}
----------------------------------------

Lab2Panel () {
    setLayout (new BorderLayout ());
    JButton leftButton = new JButton ("left");
    JButton rightButton = new JButton ("right");
    JButton upButton = new JButton ("up");
    JButton downButton = new JButton ("down");
    panel.add (leftButton);
    panel.add (rightButton);
    panel.add (upButton);
    panel.add (downButton);
    this.add (canvas, BorderLayout.CENTER);
    this.add (panel, BorderLayout.SOUTH);
    leftButton.addActionListener (new Lab2MoveBallListener (canvas));
    rightButton.addActionListener (new Lab2MoveBallListener (canvas));
    upButton.addActionListener (new Lab2MoveBallListener (canvas));
    downButton.addActionListener (new Lab2MoveBallListener (canvas));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9084094_9084581_9_30
9084094_9084636_1_14
Title: Java: Turning Strings into a tree 
----------------------------------------

public static void main (String [] args) {
    List < String > folders = new ArrayList < String > ();
    folders.add ("folder a/folder b/file 1");
    folders.add ("folder a/folder b/file 2");
    folders.add ("folder a/folder c");
    Collections.sort (folders);
    Map < Integer, String > map = new HashMap < Integer, String > ();
    for (String path : folders) {
        String [] parsedPath = path.split ("/");
        boolean newBranch = false;
        for (int i = 0;
        i < parsedPath.length; i ++) {
            newBranch |= ! parsedPath [i].equals (map.get (i));
            if (newBranch) {
                map.put (i, parsedPath [i]);
                print (i, parsedPath [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > listOfPaths = new ArrayList < String > ();
    listOfPaths.add ("folder a/folder b/file 1");
    listOfPaths.add ("folder a/folder b/file 2");
    listOfPaths.add ("folder a/folder c");
    TreeMap structure = new TreeMap ();
    for (String path : listOfPaths) {
        String [] tmp = path.split ("/", 2);
        put (structure, tmp [0], tmp [1]);
    }
    print (structure, "");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9088255_9100324_147_180
9088255_9100324_182_246
Title: Converting PHP mcrypt based security to a Java base (modified cryptastic) 
----------------------------------------

public byte [] generateKey (String password, String salt, int blockIterations, int keyLength) {
    try {
        SHA256Digest digest = new SHA256Digest ();
        int hashLength = digest.getDigestSize ();
        long keyBlocks = (long) Math.ceil ((double) keyLength / (double) hashLength);
        String derived_key = "";
        for (long block = 1;
        block <= keyBlocks; block ++) {
            byte [] initialHash = hash_hmac (salt + new String (pack (block)), password);
            byte [] compareHash = initialHash;
            for (int i = 1;
            i < blockIterations; i ++) {
                compareHash = hash_hmac (compareHash, password);
                for (int j = 0;
                j < initialHash.length; j ++) {
                    initialHash [j] = (byte) (initialHash [j] ^ compareHash [j]);
                }
            }
            derived_key += new String (initialHash);
        }
        return derived_key.substring (0, keyLength).getBytes (CHARSET);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------

public byte [] generateKey (byte [] password, byte [] salt, int blockIterations, int keyLength) {
    try {
        SHA256Digest digest = new SHA256Digest ();
        int hashLength = digest.getDigestSize ();
        long keyBlocks = (long) Math.ceil ((double) keyLength / (double) hashLength);
        byte [] derived_key = null;
        for (long block = 1;
        block <= keyBlocks; block ++) {
            byte [] packed = pack (block);
            byte [] combined = new byte [salt.length + packed.length];
            for (int i = 0;
            i < salt.length; i ++) {
                combined [i] = salt [i];
            }
            for (int i = salt.length;
            i < combined.length; i ++) {
                combined [i] = packed [i - salt.length];
            }
            byte [] initialHash = hash_hmac (combined, password);
            byte [] compareHash = initialHash;
            for (int i = 1;
            i < blockIterations; i ++) {
                compareHash = hash_hmac (compareHash, password);
                for (int j = 0;
                j < initialHash.length; j ++) {
                    initialHash [j] = (byte) (initialHash [j] ^ compareHash [j]);
                }
            }
            if (derived_key == null) {
                derived_key = initialHash;
            } else {
                byte [] temp = new byte [derived_key.length + initialHash.length];
                for (int i = 0;
                i < derived_key.length; i ++) {
                    temp [i] = derived_key [i];
                }
                for (int i = derived_key.length;
                i < temp.length; i ++) {
                    temp [i] = initialHash [i - derived_key.length];
                }
                derived_key = temp;
            }
        }
        byte [] toReturn = new byte [keyLength];
        for (int i = 0;
        i < toReturn.length; i ++) {
            toReturn [i] = derived_key [i];
        }
        return toReturn;
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9095299_9109771_50_74
9095299_9109771_76_112
Title: Java Generate software configuration 
----------------------------------------

public static String replace (String origStr, String searchStr, String replacementStr) {
    StringBuffer result;
    int origStrLen;
    int searchStrLen;
    int currStart;
    int pIndex;
    result = new StringBuffer ();
    origStrLen = origStr.length ();
    searchStrLen = searchStr.length ();
    currStart = 0;
    pIndex = origStr.indexOf (searchStr, currStart);
    while (pIndex != - 1) {
        result.append (origStr.substring (currStart, pIndex));
        result.append (replacementStr);
        currStart = pIndex + searchStrLen;
        pIndex = origStr.indexOf (searchStr, currStart);
    }
    result.append (origStr.substring (currStart));
    return result.toString ();
}
----------------------------------------

public static String replace (String origStr, String [] searchAndReplacePairs) {
    int i;
    int currIndex;
    String subStr;
    String replaceStr;
    StringBuffer result;
    SearchAndReplacePair [] pairs;
    SearchAndReplacePair nextPair;
    pairs = new SearchAndReplacePair [searchAndReplacePairs.length / 2];
    for (i = 0; i < searchAndReplacePairs.length; i += 2) {
        pairs [i / 2] = new SearchAndReplacePair (origStr, searchAndReplacePairs [i + 0], searchAndReplacePairs [i + 1]);
    }
    result = new StringBuffer ();
    currIndex = 0;
    nextPair = findNextPair (origStr, currIndex, pairs);
    while (nextPair != null) {
        subStr = origStr.substring (currIndex, nextPair.indexOf);
        result.append (subStr);
        result.append (nextPair.replace);
        currIndex = nextPair.indexOf + nextPair.length;
        for (i = 0; i < pairs.length; i ++) {
            pairs [i].findNext (currIndex);
        }
        nextPair = findNextPair (origStr, currIndex, pairs);
    }
    subStr = origStr.substring (currIndex);
    result.append (subStr);
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_10426336_3_15
9105277_27193570_5_25
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] argv) {
    String s = "hello brave new world";
    Stack < String > myStack = new Stack < String > ();
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) myStack.push ((String) st.nextElement ());

    System.out.print ('"' + s + '"' + " backwards by word is:\n\t\"");
    while (! myStack.empty ()) {
        System.out.print (myStack.pop ());
        System.out.print (' ');
    }
    System.out.println ('"');
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the correct Sentence :");
    String str = sc.nextLine ().replaceAll ("\\s+", " ");
    int lastIndex = 0, i = 0;
    for (char chars : str.toCharArray ()) {
        if (chars != ' ') {
            i ++;
        } else {
            myReverse (str.substring (lastIndex, i).toCharArray ());
            lastIndex = i + 1;
            i ++;
        }
    }
    myReverse (str.substring (lastIndex, i).toCharArray ());
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_10426336_3_15
9105277_28814150_3_12
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] argv) {
    String s = "hello brave new world";
    Stack < String > myStack = new Stack < String > ();
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) myStack.push ((String) st.nextElement ());

    System.out.print ('"' + s + '"' + " backwards by word is:\n\t\"");
    while (! myStack.empty ()) {
        System.out.print (myStack.pop ());
        System.out.print (' ');
    }
    System.out.println ('"');
}
----------------------------------------

public static void main (String [] args) {
    String reverse = "";
    String original = new String ("hidaya");
    for (int i = original.length () - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    System.err.println ("Orignal string is: " + original);
    System.out.println ("Reverse string is: " + reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_10426336_3_15
9105277_45533633_4_15
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] argv) {
    String s = "hello brave new world";
    Stack < String > myStack = new Stack < String > ();
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) myStack.push ((String) st.nextElement ());

    System.out.print ('"' + s + '"' + " backwards by word is:\n\t\"");
    while (! myStack.empty ()) {
        System.out.print (myStack.pop ());
        System.out.print (' ');
    }
    System.out.println ('"');
}
----------------------------------------

public static void main () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter words: ");
    String word = new String (input.nextLine ());
    String reverse [] = word.split (" ");
    String Finalword = " ";
    for (int y = reverse.length - 1;
    y >= 0; y --) {
        Finalword += reverse [y] + " ";
    }
    System.out.println (Finalword);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_10426336_3_15
9105277_46529738_5_26
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] argv) {
    String s = "hello brave new world";
    Stack < String > myStack = new Stack < String > ();
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) myStack.push ((String) st.nextElement ());

    System.out.print ('"' + s + '"' + " backwards by word is:\n\t\"");
    while (! myStack.empty ()) {
        System.out.print (myStack.pop ());
        System.out.print (' ');
    }
    System.out.println ('"');
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println (" Please Enter The String \n");
    String st = sc.nextLine ();
    ArrayList < String > List = new ArrayList < String > ();
    StringTokenizer tokens = new StringTokenizer (st);
    while (tokens.hasMoreTokens ()) {
        List.add (tokens.nextToken ());
    }
    Collections.reverse (List);
    Iterator itr = List.iterator ();
    while (itr.hasNext ()) {
        System.out.print (itr.next () + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_10426336_3_15
9105277_9105388_3_13
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] argv) {
    String s = "hello brave new world";
    Stack < String > myStack = new Stack < String > ();
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) myStack.push ((String) st.nextElement ());

    System.out.print ('"' + s + '"' + " backwards by word is:\n\t\"");
    while (! myStack.empty ()) {
        System.out.print (myStack.pop ());
        System.out.print (' ');
    }
    System.out.println ('"');
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "hello brave new world";
    String string2 = "hello brave new world ";
    String string3 = " hello brave new world";
    String string4 = " hello  brave          new world ";
    System.out.println (reverseStringWordByWord (string1));
    System.out.println (reverseStringWordByWord (string2));
    System.out.println (reverseStringWordByWord (string3));
    System.out.println (reverseStringWordByWord (string4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_27193570_5_25
9105277_28814150_3_12
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the correct Sentence :");
    String str = sc.nextLine ().replaceAll ("\\s+", " ");
    int lastIndex = 0, i = 0;
    for (char chars : str.toCharArray ()) {
        if (chars != ' ') {
            i ++;
        } else {
            myReverse (str.substring (lastIndex, i).toCharArray ());
            lastIndex = i + 1;
            i ++;
        }
    }
    myReverse (str.substring (lastIndex, i).toCharArray ());
    System.out.println (sb);
}
----------------------------------------

public static void main (String [] args) {
    String reverse = "";
    String original = new String ("hidaya");
    for (int i = original.length () - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    System.err.println ("Orignal string is: " + original);
    System.out.println ("Reverse string is: " + reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_27193570_5_25
9105277_45533633_4_15
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the correct Sentence :");
    String str = sc.nextLine ().replaceAll ("\\s+", " ");
    int lastIndex = 0, i = 0;
    for (char chars : str.toCharArray ()) {
        if (chars != ' ') {
            i ++;
        } else {
            myReverse (str.substring (lastIndex, i).toCharArray ());
            lastIndex = i + 1;
            i ++;
        }
    }
    myReverse (str.substring (lastIndex, i).toCharArray ());
    System.out.println (sb);
}
----------------------------------------

public static void main () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter words: ");
    String word = new String (input.nextLine ());
    String reverse [] = word.split (" ");
    String Finalword = " ";
    for (int y = reverse.length - 1;
    y >= 0; y --) {
        Finalword += reverse [y] + " ";
    }
    System.out.println (Finalword);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_27193570_5_25
9105277_46529738_5_26
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the correct Sentence :");
    String str = sc.nextLine ().replaceAll ("\\s+", " ");
    int lastIndex = 0, i = 0;
    for (char chars : str.toCharArray ()) {
        if (chars != ' ') {
            i ++;
        } else {
            myReverse (str.substring (lastIndex, i).toCharArray ());
            lastIndex = i + 1;
            i ++;
        }
    }
    myReverse (str.substring (lastIndex, i).toCharArray ());
    System.out.println (sb);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println (" Please Enter The String \n");
    String st = sc.nextLine ();
    ArrayList < String > List = new ArrayList < String > ();
    StringTokenizer tokens = new StringTokenizer (st);
    while (tokens.hasMoreTokens ()) {
        List.add (tokens.nextToken ());
    }
    Collections.reverse (List);
    Iterator itr = List.iterator ();
    while (itr.hasNext ()) {
        System.out.print (itr.next () + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_27193570_5_25
9105277_9105388_3_13
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the correct Sentence :");
    String str = sc.nextLine ().replaceAll ("\\s+", " ");
    int lastIndex = 0, i = 0;
    for (char chars : str.toCharArray ()) {
        if (chars != ' ') {
            i ++;
        } else {
            myReverse (str.substring (lastIndex, i).toCharArray ());
            lastIndex = i + 1;
            i ++;
        }
    }
    myReverse (str.substring (lastIndex, i).toCharArray ());
    System.out.println (sb);
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "hello brave new world";
    String string2 = "hello brave new world ";
    String string3 = " hello brave new world";
    String string4 = " hello  brave          new world ";
    System.out.println (reverseStringWordByWord (string1));
    System.out.println (reverseStringWordByWord (string2));
    System.out.println (reverseStringWordByWord (string3));
    System.out.println (reverseStringWordByWord (string4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_28814150_3_12
9105277_45533633_4_15
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    String reverse = "";
    String original = new String ("hidaya");
    for (int i = original.length () - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    System.err.println ("Orignal string is: " + original);
    System.out.println ("Reverse string is: " + reverse);
}
----------------------------------------

public static void main () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter words: ");
    String word = new String (input.nextLine ());
    String reverse [] = word.split (" ");
    String Finalword = " ";
    for (int y = reverse.length - 1;
    y >= 0; y --) {
        Finalword += reverse [y] + " ";
    }
    System.out.println (Finalword);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_28814150_3_12
9105277_46529738_5_26
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    String reverse = "";
    String original = new String ("hidaya");
    for (int i = original.length () - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    System.err.println ("Orignal string is: " + original);
    System.out.println ("Reverse string is: " + reverse);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println (" Please Enter The String \n");
    String st = sc.nextLine ();
    ArrayList < String > List = new ArrayList < String > ();
    StringTokenizer tokens = new StringTokenizer (st);
    while (tokens.hasMoreTokens ()) {
        List.add (tokens.nextToken ());
    }
    Collections.reverse (List);
    Iterator itr = List.iterator ();
    while (itr.hasNext ()) {
        System.out.print (itr.next () + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_28814150_3_12
9105277_9105388_3_13
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String [] args) {
    String reverse = "";
    String original = new String ("hidaya");
    for (int i = original.length () - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    System.err.println ("Orignal string is: " + original);
    System.out.println ("Reverse string is: " + reverse);
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "hello brave new world";
    String string2 = "hello brave new world ";
    String string3 = " hello brave new world";
    String string4 = " hello  brave          new world ";
    System.out.println (reverseStringWordByWord (string1));
    System.out.println (reverseStringWordByWord (string2));
    System.out.println (reverseStringWordByWord (string3));
    System.out.println (reverseStringWordByWord (string4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_34431145_1_17
9105277_42497643_1_26
Title: Reverse String Word by Word in Java 
----------------------------------------

public static String reverseWordByWord (String sentence) {
    StringBuilder result = new StringBuilder ();
    String [] words = sentence.split ("\\s+");
    for (String word : words) {
        char [] charArray = word.toCharArray ();
        int iEnd = word.length () - 1;
        StringBuilder temp = new StringBuilder ();
        for (int i = iEnd;
        i >= 0; i --) {
            temp.append (charArray [i]);
        }
        result.append (temp);
        result.append (" ");
    }
    return result.toString ().trim ();
}
----------------------------------------

public String reverseWordByWord (String strToReverse) {
    StringBuilder tempBuilder = new StringBuilder ();
    StringBuilder reversedBuilder = new StringBuilder ();
    char [] charArray;
    for (int i = 0;
    i <= strToReverse.length () - 1; i ++) {
        if (strToReverse.charAt (i) != ' ') {
            tempBuilder.append (strToReverse.charAt (i));
        }
        if (strToReverse.charAt (i) == ' ' || i == strToReverse.length () - 1) {
            charArray = new String (tempBuilder).toCharArray ();
            for (int j = charArray.length - 1;
            j >= 0; j --) {
                reversedBuilder.append (charArray [j]);
            }
            if (i != strToReverse.length () - 1) reversedBuilder.append (strToReverse.charAt (i));

            tempBuilder = new StringBuilder ();
        }
    }
    System.out.println ("Word by Word : " + new String (reversedBuilder));
    return new String (reversedBuilder);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_34431145_1_17
9105277_9105743_8_27
Title: Reverse String Word by Word in Java 
----------------------------------------

public static String reverseWordByWord (String sentence) {
    StringBuilder result = new StringBuilder ();
    String [] words = sentence.split ("\\s+");
    for (String word : words) {
        char [] charArray = word.toCharArray ();
        int iEnd = word.length () - 1;
        StringBuilder temp = new StringBuilder ();
        for (int i = iEnd;
        i >= 0; i --) {
            temp.append (charArray [i]);
        }
        result.append (temp);
        result.append (" ");
    }
    return result.toString ().trim ();
}
----------------------------------------

public static String reverseWordByWord (String str) {
    String reverse = "";
    boolean first = true;
    for (String s : str.split (" ")) {
        if (first) {
            first = false;
        } else {
            reverse += " ";
        }
        StringBuilder sb = new StringBuilder ();
        for (int i = s.length () - 1;
        i >= 0; -- i) {
            sb.append (s.charAt (i));
        }
        reverse += sb.toString ();
    }
    while (reverse.length () < str.length ()) {
        reverse += " ";
    }
    return reverse.substring (0, reverse.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_34431145_1_17
9105277_9107464_1_14
Title: Reverse String Word by Word in Java 
----------------------------------------

public static String reverseWordByWord (String sentence) {
    StringBuilder result = new StringBuilder ();
    String [] words = sentence.split ("\\s+");
    for (String word : words) {
        char [] charArray = word.toCharArray ();
        int iEnd = word.length () - 1;
        StringBuilder temp = new StringBuilder ();
        for (int i = iEnd;
        i >= 0; i --) {
            temp.append (charArray [i]);
        }
        result.append (temp);
        result.append (" ");
    }
    return result.toString ().trim ();
}
----------------------------------------

public static String reverseWordByWord (String str) {
    char [] myChars = str.toCharArray ();
    int stringLen = myChars.length;
    int left = 0, right = 0;
    for (int index = 0;
    index < stringLen; index ++) {
        if (chars [index] == ' ') {
            reverse (chars, left, right);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_42497643_1_26
9105277_9105743_8_27
Title: Reverse String Word by Word in Java 
----------------------------------------

public String reverseWordByWord (String strToReverse) {
    StringBuilder tempBuilder = new StringBuilder ();
    StringBuilder reversedBuilder = new StringBuilder ();
    char [] charArray;
    for (int i = 0;
    i <= strToReverse.length () - 1; i ++) {
        if (strToReverse.charAt (i) != ' ') {
            tempBuilder.append (strToReverse.charAt (i));
        }
        if (strToReverse.charAt (i) == ' ' || i == strToReverse.length () - 1) {
            charArray = new String (tempBuilder).toCharArray ();
            for (int j = charArray.length - 1;
            j >= 0; j --) {
                reversedBuilder.append (charArray [j]);
            }
            if (i != strToReverse.length () - 1) reversedBuilder.append (strToReverse.charAt (i));

            tempBuilder = new StringBuilder ();
        }
    }
    System.out.println ("Word by Word : " + new String (reversedBuilder));
    return new String (reversedBuilder);
}
----------------------------------------

public static String reverseWordByWord (String str) {
    String reverse = "";
    boolean first = true;
    for (String s : str.split (" ")) {
        if (first) {
            first = false;
        } else {
            reverse += " ";
        }
        StringBuilder sb = new StringBuilder ();
        for (int i = s.length () - 1;
        i >= 0; -- i) {
            sb.append (s.charAt (i));
        }
        reverse += sb.toString ();
    }
    while (reverse.length () < str.length ()) {
        reverse += " ";
    }
    return reverse.substring (0, reverse.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_42497643_1_26
9105277_9107464_1_14
Title: Reverse String Word by Word in Java 
----------------------------------------

public String reverseWordByWord (String strToReverse) {
    StringBuilder tempBuilder = new StringBuilder ();
    StringBuilder reversedBuilder = new StringBuilder ();
    char [] charArray;
    for (int i = 0;
    i <= strToReverse.length () - 1; i ++) {
        if (strToReverse.charAt (i) != ' ') {
            tempBuilder.append (strToReverse.charAt (i));
        }
        if (strToReverse.charAt (i) == ' ' || i == strToReverse.length () - 1) {
            charArray = new String (tempBuilder).toCharArray ();
            for (int j = charArray.length - 1;
            j >= 0; j --) {
                reversedBuilder.append (charArray [j]);
            }
            if (i != strToReverse.length () - 1) reversedBuilder.append (strToReverse.charAt (i));

            tempBuilder = new StringBuilder ();
        }
    }
    System.out.println ("Word by Word : " + new String (reversedBuilder));
    return new String (reversedBuilder);
}
----------------------------------------

public static String reverseWordByWord (String str) {
    char [] myChars = str.toCharArray ();
    int stringLen = myChars.length;
    int left = 0, right = 0;
    for (int index = 0;
    index < stringLen; index ++) {
        if (chars [index] == ' ') {
            reverse (chars, left, right);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_45533633_4_15
9105277_46529738_5_26
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter words: ");
    String word = new String (input.nextLine ());
    String reverse [] = word.split (" ");
    String Finalword = " ";
    for (int y = reverse.length - 1;
    y >= 0; y --) {
        Finalword += reverse [y] + " ";
    }
    System.out.println (Finalword);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println (" Please Enter The String \n");
    String st = sc.nextLine ();
    ArrayList < String > List = new ArrayList < String > ();
    StringTokenizer tokens = new StringTokenizer (st);
    while (tokens.hasMoreTokens ()) {
        List.add (tokens.nextToken ());
    }
    Collections.reverse (List);
    Iterator itr = List.iterator ();
    while (itr.hasNext ()) {
        System.out.print (itr.next () + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_45533633_4_15
9105277_9105388_3_13
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main () {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter words: ");
    String word = new String (input.nextLine ());
    String reverse [] = word.split (" ");
    String Finalword = " ";
    for (int y = reverse.length - 1;
    y >= 0; y --) {
        Finalword += reverse [y] + " ";
    }
    System.out.println (Finalword);
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "hello brave new world";
    String string2 = "hello brave new world ";
    String string3 = " hello brave new world";
    String string4 = " hello  brave          new world ";
    System.out.println (reverseStringWordByWord (string1));
    System.out.println (reverseStringWordByWord (string2));
    System.out.println (reverseStringWordByWord (string3));
    System.out.println (reverseStringWordByWord (string4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_46529738_5_26
9105277_9105388_3_13
Title: Reverse String Word by Word in Java 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println (" Please Enter The String \n");
    String st = sc.nextLine ();
    ArrayList < String > List = new ArrayList < String > ();
    StringTokenizer tokens = new StringTokenizer (st);
    while (tokens.hasMoreTokens ()) {
        List.add (tokens.nextToken ());
    }
    Collections.reverse (List);
    Iterator itr = List.iterator ();
    while (itr.hasNext ()) {
        System.out.print (itr.next () + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "hello brave new world";
    String string2 = "hello brave new world ";
    String string3 = " hello brave new world";
    String string4 = " hello  brave          new world ";
    System.out.println (reverseStringWordByWord (string1));
    System.out.println (reverseStringWordByWord (string2));
    System.out.println (reverseStringWordByWord (string3));
    System.out.println (reverseStringWordByWord (string4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_9105388_15_32
9105277_9105486_1_15
Title: Reverse String Word by Word in Java 
----------------------------------------

private static String reverseStringWordByWord (String string) {
    StringBuilder sb = new StringBuilder ();
    int length = string.length ();
    for (int i = 0;
    i < length; i ++) {
        char c = string.charAt (i);
        if (c == ' ') {
            sb.append (c);
        } else {
            int j = i;
            while (j < length && string.charAt (j) != ' ') {
                j ++;
            }
            sb.append (reverseString (string.substring (i, j)));
            i = j - 1;
        }
    }
    return sb.toString ();
}
----------------------------------------

public String reverseStringWordByWord (String input) {
    StringBuilder returnValue = new StringBuilder ();
    int insertIndex = 0;
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) != ' ') {
            returnValue.insert (insertIndex, currentChar);
        } else {
            insertIndex = i + 1;
            returnValue.append (currentChar);
        }
    }
    return returnValue.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9105277_9105743_8_27
9105277_9107464_1_14
Title: Reverse String Word by Word in Java 
----------------------------------------

public static String reverseWordByWord (String str) {
    String reverse = "";
    boolean first = true;
    for (String s : str.split (" ")) {
        if (first) {
            first = false;
        } else {
            reverse += " ";
        }
        StringBuilder sb = new StringBuilder ();
        for (int i = s.length () - 1;
        i >= 0; -- i) {
            sb.append (s.charAt (i));
        }
        reverse += sb.toString ();
    }
    while (reverse.length () < str.length ()) {
        reverse += " ";
    }
    return reverse.substring (0, reverse.length ());
}
----------------------------------------

public static String reverseWordByWord (String str) {
    char [] myChars = str.toCharArray ();
    int stringLen = myChars.length;
    int left = 0, right = 0;
    for (int index = 0;
    index < stringLen; index ++) {
        if (chars [index] == ' ') {
            reverse (chars, left, right);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9118727_9124231_9_20
9118727_9133766_9_28
Title: JList - use a vertical scrollbar instead of horizontal with a vertical wrap orientation? 
----------------------------------------

public static void main (final String [] args) {
    final JFrame frame = new JFrame ();
    final Container contentPane = frame.getContentPane ();
    final JList list = new JList (stringList.toArray ());
    final JScrollPane scrollPane = new JScrollPane (list);
    scrollPane.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    scrollPane.setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    contentPane.add (scrollPane);
    frame.setPreferredSize (new Dimension (200, 200));
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (final String [] args) {
    final JFrame frame = new JFrame ();
    final Container contentPane = frame.getContentPane ();
    final JList list = new JList (stringList.toArray ());
    list.setLayoutOrientation (JList.VERTICAL_WRAP);
    final JScrollPane scrollPane = new JScrollPane (list);
    contentPane.add (scrollPane);
    frame.setPreferredSize (new Dimension (800, 400));
    frame.pack ();
    list.addComponentListener (new ComponentAdapter () {
        @Override
        public void componentResized (ComponentEvent e) {
            fixRowCountForVisibleColumns (list);
        }}

    );
    fixRowCountForVisibleColumns (list);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9128535_53332158_23_54
9128535_9135668_3_17
Title: Highlighting Strings in JavaFX TextArea 
----------------------------------------

public void start (Stage stage) throws Exception {
    VBox root = new VBox ();
    root.setSpacing (10);
    root.setPadding (new Insets (10));
    Scene sc = new Scene (root, 600, 600);
    stage.setScene (sc);
    stage.show ();
    final HighlightableTextArea highlightableTextArea = new HighlightableTextArea ();
    highlightableTextArea.setText ("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
    highlightableTextArea.getTextArea ().setWrapText (true);
    highlightableTextArea.getTextArea ().setStyle ("-fx-font-size: 20px;");
    VBox.setVgrow (highlightableTextArea, Priority.ALWAYS);
    Button highlight = new Button ("Highlight");
    TextField stF = new TextField ("40");
    TextField enF = new TextField ("50");
    HBox hb = new HBox (highlight, stF, enF);
    hb.setSpacing (10);
    highlight.setOnAction (e -> {
        highlightableTextArea.highlight (Integer.parseInt (stF.getText ()), Integer.parseInt (enF.getText ()));
    });
    Button remove = new Button ("Remove Highlight");
    remove.setOnAction (e -> highlightableTextArea.removeHighlight ());
    Label lbl = new Label ("Resize the window to see if the highlight is moving with text");
    lbl.setStyle ("-fx-font-size: 17px;-fx-font-style:italic;");
    HBox rb = new HBox (remove, lbl);
    rb.setSpacing (10);
    root.getChildren ().addAll (hb, rb, highlightableTextArea);
}
----------------------------------------

public void start (Stage stage) {
    final TextArea text = new TextArea ("Here is some textz to highlight");
    text.setStyle ("-fx-highlight-fill: lightgray; -fx-highlight-text-fill: firebrick; -fx-font-size: 20px;");
    text.setEditable (false);
    text.addEventFilter (MouseEvent.ANY, new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent t) {
            t.consume ();
        }}

    );
    stage.setScene (new Scene (text));
    stage.show ();
    Platform.runLater (new Runnable () {
        @Override
        public void run () {
            text.selectRange (13, 18);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9132665_48629252_17_28
9132665_48629252_34_46
Title: reverse using of Thread.join() in java 
----------------------------------------

public void run () {
    try {
        t3.join ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Thread 2 =" + i);
    }
}
----------------------------------------

public void run () {
    try {
        t3.join ();
        t2.join ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Thread 1 =" + i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9138027_9474096_117_127
9138027_9474096_23_33
Title: Builder pattern for polymorphic object hierarchy: possible with Java? 
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Child2 > () {
        @Override
        public Child2 build () {
            return new Child2 (this);
        }}

    ;
}
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Parent > () {
        @Override
        public Parent build () {
            return new Parent (this);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9138027_9474096_117_127
9138027_9474096_63_73
Title: Builder pattern for polymorphic object hierarchy: possible with Java? 
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Child2 > () {
        @Override
        public Child2 build () {
            return new Child2 (this);
        }}

    ;
}
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Child1 > () {
        @Override
        public Child1 build () {
            return new Child1 (this);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9138027_9474096_23_33
9138027_9474096_63_73
Title: Builder pattern for polymorphic object hierarchy: possible with Java? 
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Parent > () {
        @Override
        public Parent build () {
            return new Parent (this);
        }}

    ;
}
----------------------------------------

public static Builder < ? > builder () {
    return new Builder < Child1 > () {
        @Override
        public Child1 build () {
            return new Child1 (this);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9139510_11137240_5_40
9139510_17053300_10_23
Title: Fibonacci sequence in an arraylist 
----------------------------------------

public static void main (String [] args) {
    long temp1 = 0;
    long temp2 = 1;
    long temp3;
    int temp4;
    Scanner sc = new Scanner (System.in);
    ArrayList < Integer > list = new ArrayList < Integer > ();
    System.out.println ("Enter Number ");
    int num = sc.nextInt ();
    if (num == 0) list.add (0);
    else if (num == 1) list.add (1);
    else {
        list.add (0);
        list.add (1);
        for (int i = 1;
        i < num; i ++) {
            temp3 = temp1 + temp2;
            temp1 = temp2;
            temp2 = temp3;
            do {
                temp4 = (int) temp3 % 10;
                temp3 = temp3 / 10;
                list.add (temp4);
            } while (temp3 != 0);
        }
    }

    System.out.println ("Fibonacci Series upto " + num);
    System.out.print (list);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList a = new ArrayList ();
    a.add (0);
    a.add (1);
    int currIndex = 1;
    while (currIndex < 50) {
        a.add (((Integer) a.get (currIndex)) + ((Integer) a.get (currIndex - 1)));
        currIndex ++;
        System.out.print (a.get (currIndex) + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9141830_17077977_161_169
9141830_40823167_1_94
Title: Explain the use of a bit vector for determining if all characters are unique 
----------------------------------------

public static boolean isUniqueChars (String str) {
    int checker = 0;
    for (int i = 0;
    i < str.length (); ++ i) {
        int val = str.charAt (i) - 'a';
        if ((checker & (1 << val)) > 0) return false;

        checker |= (1 << val);
    }
    return true;
}
----------------------------------------

public static boolean isUniqueChars (String str) {
    int checker = 0;
    for (int i = 0;
    i < str.length (); ++ i) {
        int characterIndex = str.charAt (i) - 'a';
        int singleBitOnPosition = 1 << characterIndex;
        if ((checker & singleBitOnPosition) > 0) {
            return false;
        }
        checker |= singleBitOnPosition;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9143056_9148943_27_57
9143056_9148943_8_25
Title: "Replicating Directory.GetFiles(String String) in Java" 
----------------------------------------

public static String [] GetFiles (String path, final String searchPattern) {
    ArrayList < String > pattern = new ArrayList < String > (Arrays.asList (searchPattern.split ("/")));
    String filePattern = pattern.remove (pattern.size () - 1);
    pattern.add (0, path);
    path = Path.combine ((String []) pattern.toArray (new String [pattern.size ()]));
    final Pattern regEx = Pattern.compile (filePattern.replace ("*", ".*").replace ("?", ".?"));
    File directory = new File (path);
    File [] matchingFiles = directory.listFiles (new FilenameFilter () {
        @Override
        public boolean accept (File dir, String filename) {
            return new File (dir, filename).isFile () && regEx.matcher (filename).matches ();
        }}

    );
    ArrayList < String > files = new ArrayList < String > ();
    for (File file : matchingFiles) {
        files.add (file.getAbsolutePath ());
    }
    return (String []) files.toArray (new String [files.size ()]);
}
----------------------------------------

public static String [] GetFiles (String path) {
    File directory = new File (path);
    File [] matchingFiles = directory.listFiles (new FilenameFilter () {
        @Override
        public boolean accept (File dir, String filename) {
            return new File (dir, filename).isFile ();
        }}

    );
    ArrayList < String > files = new ArrayList < String > ();
    for (File file : matchingFiles) {
        files.add (file.getAbsolutePath ());
    }
    return (String []) files.toArray (new String [files.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9145242_39234276_4_30
9145242_9145494_1_8
Title: get the figure using nested for loops in Java 
----------------------------------------

public static void main (String [] args) {
    for (int x = 0;
    x < 2; x ++) {
        for (int y = 0;
        y < 2; y ++) {
            System.out.print ("+");
            for (int z = 0;
            z < size; z ++) {
                System.out.print ("=");
            }
        }
        System.out.println ("+");
        for (int i = 0;
        i < size; i ++) {
            for (int j = 0;
            j < 2; j ++) {
                System.out.print ("|");
                for (int k = 0;
                k < size; k ++) {
                    System.out.print (" ");
                }
            }
            System.out.println ("|");
        }
    }
    for (int y = 0;
    y < 2; y ++) {
        System.out.print ("+");
        for (int z = 0;
        z < size; z ++) {
            System.out.print ("=");
        }
    }
    System.out.println ("+");
}
----------------------------------------

public static void main (String [] args) {
    for (int y = 0;
    y < 9; y ++) {
        for (int x = 0;
        x < 9; x ++) {
            System.out.print (getSign (y, x));
        }
        System.out.print ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9145242_39234276_4_30
9145242_9147028_7_46
Title: get the figure using nested for loops in Java 
----------------------------------------

public static void main (String [] args) {
    for (int x = 0;
    x < 2; x ++) {
        for (int y = 0;
        y < 2; y ++) {
            System.out.print ("+");
            for (int z = 0;
            z < size; z ++) {
                System.out.print ("=");
            }
        }
        System.out.println ("+");
        for (int i = 0;
        i < size; i ++) {
            for (int j = 0;
            j < 2; j ++) {
                System.out.print ("|");
                for (int k = 0;
                k < size; k ++) {
                    System.out.print (" ");
                }
            }
            System.out.println ("|");
        }
    }
    for (int y = 0;
    y < 2; y ++) {
        System.out.print ("+");
        for (int z = 0;
        z < size; z ++) {
            System.out.print ("=");
        }
    }
    System.out.println ("+");
}
----------------------------------------

public static void main (String [] args) {
    for (int line = 1;
    line <= 3; line ++) {
        NEWLINE : for (int plus = 1;
        plus <= 3; plus ++) {
            System.out.print ("+");
            if (plus == 3) {
                for (int k = 1;
                k <= 3; k ++) {
                    if (line == 3) {
                        break NEWLINE;
                    }
                    System.out.println ("");
                    System.out.print (" |         |          |");
                    if (k == 3) {
                        System.out.println ();
                        break NEWLINE;
                    }
                }
            }
            for (int eq = 1;
            eq <= 6; eq ++) {
                if (eq % 4 == 0) {
                    break;
                }
                System.out.print ("=");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9145242_9145494_1_8
9145242_9147028_7_46
Title: get the figure using nested for loops in Java 
----------------------------------------

public static void main (String [] args) {
    for (int y = 0;
    y < 9; y ++) {
        for (int x = 0;
        x < 9; x ++) {
            System.out.print (getSign (y, x));
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int line = 1;
    line <= 3; line ++) {
        NEWLINE : for (int plus = 1;
        plus <= 3; plus ++) {
            System.out.print ("+");
            if (plus == 3) {
                for (int k = 1;
                k <= 3; k ++) {
                    if (line == 3) {
                        break NEWLINE;
                    }
                    System.out.println ("");
                    System.out.print (" |         |          |");
                    if (k == 3) {
                        System.out.println ();
                        break NEWLINE;
                    }
                }
            }
            for (int eq = 1;
            eq <= 6; eq ++) {
                if (eq % 4 == 0) {
                    break;
                }
                System.out.print ("=");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9146832_16633148_1_19
9146832_30321047_1_16
Title: How to handle case-insensitive string replacement without using Regex in Java 
----------------------------------------

public String withoutString (String base, String remove) {
    String str = base;
    String str1 = remove;
    String str3 = str;
    int k = str1.length ();
    for (int i = 0;
    i < (str.length () - k + 1); i ++) {
        if (str1.equalsIgnoreCase (str.substring (i, i + k))) {
            String str4 = str.substring (i, i + k);
            str3 = str3.replaceFirst (str4, "");
        }
    }
    return str3;
}
----------------------------------------

public String withoutString (String base, String remove) {
    String b = base.toLowerCase ();
    String r = remove.toLowerCase ();
    if (b.length () < r.length ()) return base;

    if (b.contains (r)) b = b.replaceAll (r, "");

    String temp = "";
    int j = 0;
    for (int i = 0;
    i < base.length (); i ++) if (j < b.length ()) {
        if (base.substring (i, i + 1).equalsIgnoreCase (b.substring (j, j + 1))) {
            temp += base.substring (i, i + 1);
            j ++;
        }
    }

    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9146873_9146905_7_29
9146873_9146908_1_27
Title: Keeping count in a recursive Java method 
----------------------------------------

public static boolean copies (String whole, String part, int check, int count) {
    if (whole.length () < part.length ()) {
        if (count == check) {
            return true;
        } else {
            return false;
        }
    }
    if (whole.substring (0, 3).equals (part)) {
        count ++;
    }
    return copies (whole.substring (1), part, check, count);
}
----------------------------------------

public static boolean copies (String whole, String part, int check, int count) {
    if (whole.length () < part.length ()) {
        if (count == check) {
            return true;
        } else {
            return false;
        }
    }
    if (whole.substring (0, 3).equals (part)) {
        count ++;
    }
    return copies (whole.substring (1), part, check, count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9153156_9164329_1_47
9153156_9318554_1_54
Title: onFling() 2D Animation Issue 
----------------------------------------

public boolean onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
    if (GameWindow.getContext () == null) return false;

    if ((e1.getY () >= GameWindow.getHeight ()) && (e1.getY () <= GameWindow.getBottom ())) {
        try {
            if (Math.abs (e1.getY () - e2.getY ()) > SWIPE_MAX_OFF_PATH) return false;

            if ((e1.getX () - e2.getX () > SWIPE_MIN_DISTANCE) && (Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY)) {
                slappingLeft = true;
                GameWindow.update ();
                if (! running) running = true;

                slappingLeft = false;
            } else if ((e2.getX () - e1.getX () > SWIPE_MIN_DISTANCE) && (Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY)) {
                slappingRight = true;
                GameWindow.update ();
                if (! running) running = true;

                slappingRight = false;
            }

        } catch (Exception e) {
        }
    }
    running = false;
    return false;
}
----------------------------------------

@Override
public boolean onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
    if (GameWindow.getContext () == null) return false;

    if ((e1.getY () >= GameWindow.getHeight ()) && (e1.getY () <= GameWindow.getBottom ())) {
        try {
            if (Math.abs (e1.getY () - e2.getY ()) > SWIPE_MAX_OFF_PATH) return false;

            if ((e1.getX () - e2.getX () > SWIPE_MIN_DISTANCE) && (Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY)) {
                slappingLeft = true;
                SlapLeft ();
                SlapSound ();
                if (voice.nextInt (10) < 3) {
                    Voice.start ();
                }
            } else if ((e2.getX () - e1.getX () > SWIPE_MIN_DISTANCE) && (Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY)) {
                slappingRight = true;
                SlapImage ();
                SlapSound ();
                if (voice.nextInt (10) < 3) {
                    Voice.start ();
                }
            }

        } catch (Exception e) {
        }
    }
    slappingLeft = slappingRight = false;
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9154027_37474825_1_26
9154027_43440117_1_24
Title: Java - Writing a syllable counter based on specifications 
----------------------------------------

protected int countSyllables (String word) {
    int syllables = 0;
    word = word.toLowerCase ();
    if (word.contains ("the ")) {
        syllables ++;
    }
    String [] split = word.split ("e!$|e[?]$|e,|e |e[),]|e$");
    ArrayList < String > tokens = new ArrayList < String > ();
    Pattern tokSplitter = Pattern.compile ("[aeiouy]+");
    for (int i = 0;
    i < split.length; i ++) {
        String s = split [i];
        Matcher m = tokSplitter.matcher (s);
        while (m.find ()) {
            tokens.add (m.group ());
        }
    }
    syllables += tokens.size ();
    return syllables;
}
----------------------------------------

private static int countSyllables (String word) {
    int numSyllables = 0;
    boolean newSyllable = true;
    String vowels = "aeiouy";
    char [] cArray = word.toCharArray ();
    for (int i = 0;
    i < cArray.length; i ++) {
        if (i == cArray.length - 1 && Character.toLowerCase (cArray [i]) == 'e' && newSyllable && numSyllables > 0) {
            numSyllables --;
        }
        if (newSyllable && vowels.indexOf (Character.toLowerCase (cArray [i])) >= 0) {
            newSyllable = false;
            numSyllables ++;
        } else if (vowels.indexOf (Character.toLowerCase (cArray [i])) < 0) {
            newSyllable = true;
        }

    }
    return numSyllables;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9154497_9154530_1_21
9154497_9154791_5_27
Title: Finding maximum number from a loop 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int max = Integer.MIN_VALUE;
    int number = 0;
    int count_max = 0;
    while (true) {
        number = input.nextInt ();
        if (number == 0) {
            break;
        }
        if (max == number) {
            count_max ++;
        }
        if (max < number) {
            max = number;
            count_max = 1;
        }
    }
    System.out.println ("Max Number: " + max);
    System.out.println ("Occurences: " + count_max);
}
----------------------------------------

public static final void main (String [] args) {
    long a = 0, b = 0, c = 0, d = 0;
    System.out.println ("Type some numbers!");
    Scanner sc = new Scanner (System.in);
    String in = sc.nextLine ();
    Scanner ln = new Scanner (in);
    while (ln.hasNextLong ()) {
        a = ln.nextLong ();
        if (a > b) {
            b = a;
            ++ d;
        }
        ++ c;
    }
    System.out.println ("\n   info:");
    System.out.println ("     highest:" + b);
    System.out.println ("     iterations:" + c);
    System.out.println ("     overrides:" + d);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9155105_9155402_1_12
9155105_9156368_1_12
Title: How To Save and Retrieve path image in SQLite android 
----------------------------------------

@Override
protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == IMAGE_CAPTURE && resultCode == Activity.RESULT_OK) {
        DBHelper dbHelper = new DBHelper (this);
        SQLiteDatabase sql = dbHelper.getWritableDatabase ();
        sql.execSQL ("insert statement for inserting path to database");
        sql.close ();
        dbHelper.close ();
    }
}
----------------------------------------

public void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (resultCode == RESULT_OK) {
        switch (requestCode) {
            case SELECT_IMAGE :
                String imagePath = getPath (data.getData ());
                Savingimagepath (imagePath);
                img.setImageDrawable (Drawable.createFromPath (imagePath));
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9165251_9167420_8_43
9165251_9185774_35_86
Title: Execute task in background in JavaFX 
----------------------------------------

public void start (Stage stage) {
    Pane root = new HBox ();
    stage.setScene (new Scene (root, 300, 100));
    for (int i = 0;
    i < 10; i ++) {
        final ProgressIndicator pi = new ProgressIndicator (0);
        root.getChildren ().add (pi);
        new Thread () {
            public void run () {
                for (int i = 0;
                i < 20; i ++) {
                    try {
                        Thread.sleep (new Random ().nextInt (1000));
                    } catch (InterruptedException ex) {
                        ex.printStackTrace ();
                    }
                    final double progress = i * 0.05;
                    Platform.runLater (new Runnable () {
                        public void run () {
                            pi.setProgress (progress);
                        }}

                    );
                }
            }}

        .start ();
    }
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    final Group root = new Group ();
    Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.setResizable (false);
    StackPane waitingPane = new StackPane ();
    final ProgressBar progress = new ProgressBar ();
    Label load = new Label ("loading things...");
    progress.setTranslateY (- 25);
    load.setTranslateY (25);
    waitingPane.getChildren ().addAll (new Rectangle (400, 400, Color.WHITE), load, progress);
    root.getChildren ().add (waitingPane);
    Task < Void > task = new Task < Void > () {
        @Override
        protected Void call () throws Exception {
            for (int i = 0;
            i < 20; i ++) {
                try {
                    Thread.sleep (new Random ().nextInt (1000));
                } catch (InterruptedException ex) {
                    ex.printStackTrace ();
                }
                final double prog = i * 0.05;
                Platform.runLater (new Runnable () {
                    public void run () {
                        progress.setProgress (prog);
                    }}

                );
            }
            return null;
        }}

    ;
    task.stateProperty ().addListener (new ChangeListener < Worker.State > () {
        @Override
        public void changed (ObservableValue < ? extends State > observable, State oldValue, Worker.State newState) {
            if (newState == Worker.State.SUCCEEDED) {
                loadPanels (root);
            }
        }}

    );
    new Thread (task).start ();
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9165251_9185774_52_67
9165251_9185774_96_104
Title: Execute task in background in JavaFX 
----------------------------------------

protected Void call () throws Exception {
    for (int i = 0;
    i < 20; i ++) {
        try {
            Thread.sleep (new Random ().nextInt (1000));
        } catch (InterruptedException ex) {
            ex.printStackTrace ();
        }
        final double prog = i * 0.05;
        Platform.runLater (new Runnable () {
            public void run () {
                progress.setProgress (prog);
            }}

        );
    }
    return null;
}
----------------------------------------

protected Rectangle call () throws InterruptedException {
    updateMessage ("loading rectangle . . .");
    updateProgress (0, 10);
    for (int i = 0;
    i < 10; i ++) {
        Thread.sleep (100);
    }
    updateMessage ("Finish!");
    return new Rectangle ((380) / 3, (380) / 3, colors [counter]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9166543_9168410_77_86
9166543_9168410_94_111
Title: JFrame.setVisible(false) and Robot.createScreenCapture timing 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            capture.doClick ();
            f.setVisible (false);
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getActionCommand ().equals ("CaptureScreen")) {
        Dimension dim = Toolkit.getDefaultToolkit ().getScreenSize ();
        Robot r;
        BufferedImage bI;
        try {
            r = new Robot ();
            Thread.sleep (1000);
            bI = r.createScreenCapture (new Rectangle (dim));
            showPic (bI);
            saveImage (bI);
        } catch (AWTException e1) {
            e1.printStackTrace ();
        } catch (InterruptedException e2) {
            e2.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9168314_9168645_1_25
9168314_9168846_32_53
Title: Java Linked List Sorting 
----------------------------------------

public static Node insertInOrder () {
    Node first = getNode (inFile.next ());
    Node current = first, previous = null;
    Node last = first;
    int count = 0;
    while (inFile.hasNext ()) {
        if (previous != null && ((String) current.value).compareTo ((String) previous.value) > 0) {
            last.next = previous;
            previous = last;
        }
        if (previous != null && ((String) current.value).compareTo ((String) previous.value) < 0) {
            current.next = last;
            last = current;
        }
        previous = current;
        current = getNode (inFile.next ());
    }
    return last;
}
----------------------------------------

public static Node insertInOrder () {
    Node current = getNode (inFile.next ());
    Node first = current, last = current;
    while (inFile.hasNext ()) {
        if (first != null && current.value.compareTo (first.value) < 0) {
            current.next = first;
            first = current;
        } else if (last != null && current.value.compareTo (last.value) > 0) {
            last.next = current;
            last = current;
        } else {
            Node temp = first;
            while (current.value.compareTo (temp.value) < 0) {
                temp = temp.next;
            }
            current.next = temp.next;
            temp.next = current;
        }

        current = getNode (inFile.next ());
    }
    return first;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9171258_9173878_140_148
9171258_9176341_1_12
Title: Colored jcombobox with colored items and focus 
----------------------------------------

public static void main (String args []) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            ColorComboBoxEditorRendererDemo1 cCBERD1 = new ColorComboBoxEditorRendererDemo1 ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    UIManager.put ("ComboBox.background", new ColorUIResource (Color.lightGray));
    UIManager.put ("ComboBox.selectionBackground", new ColorUIResource (Color.magenta));
    UIManager.put ("ComboBox.selectionForeground", new ColorUIResource (Color.yellow));
    javax.swing.SwingUtilities.invokeLater (new Runnable () {
        @SuppressWarnings ("synthetic-access")
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9171258_9173878_93_107
9171258_9176467_25_36
Title: Colored jcombobox with colored items and focus 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    JLabel renderer = (JLabel) defaultRenderer.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (value instanceof Color) {
        renderer.setBackground (Color.white);
        renderer.setForeground ((Color) value);
    }
    if (cellHasFocus || isSelected) {
        renderer.setBorder (new LineBorder (Color.DARK_GRAY));
    } else {
        renderer.setBorder (null);
    }
    renderer.setPreferredSize (preferredSize);
    return renderer;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean hasFocus) {
    Color fgc = Colors.valueOf ((String) value).color;
    if (index < 0) {
        list.setSelectionBackground (selectionBackground);
    }
    JLabel l = (JLabel) super.getListCellRendererComponent (list, value, index, isSelected, hasFocus);
    l.setText ("<html><font color=" + hex (fgc) + "><![CDATA[" + value);
    l.setBackground (isSelected ? selectionBackground : list.getBackground ());
    return l;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9171258_9173878_93_107
9171258_9176467_5_19
Title: Colored jcombobox with colored items and focus 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    JLabel renderer = (JLabel) defaultRenderer.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (value instanceof Color) {
        renderer.setBackground (Color.white);
        renderer.setForeground ((Color) value);
    }
    if (cellHasFocus || isSelected) {
        renderer.setBorder (new LineBorder (Color.DARK_GRAY));
    } else {
        renderer.setBorder (null);
    }
    renderer.setPreferredSize (preferredSize);
    return renderer;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Color fgc = Colors.valueOf ((String) value).color;
    if (index < 0) {
        list.setSelectionForeground (fgc);
        list.setSelectionBackground (selectionBackground);
    }
    JLabel renderer = (JLabel) defaultRenderer.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (index != - 1) {
        renderer.setForeground (fgc);
    }
    return renderer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9171258_9176467_25_36
9171258_9176467_5_19
Title: Colored jcombobox with colored items and focus 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean hasFocus) {
    Color fgc = Colors.valueOf ((String) value).color;
    if (index < 0) {
        list.setSelectionBackground (selectionBackground);
    }
    JLabel l = (JLabel) super.getListCellRendererComponent (list, value, index, isSelected, hasFocus);
    l.setText ("<html><font color=" + hex (fgc) + "><![CDATA[" + value);
    l.setBackground (isSelected ? selectionBackground : list.getBackground ());
    return l;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Color fgc = Colors.valueOf ((String) value).color;
    if (index < 0) {
        list.setSelectionForeground (fgc);
        list.setSelectionBackground (selectionBackground);
    }
    JLabel renderer = (JLabel) defaultRenderer.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (index != - 1) {
        renderer.setForeground (fgc);
    }
    return renderer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9172194_43092021_13_25
9172194_43092021_39_55
Title: Read Data from GPS device 
----------------------------------------

public void run () {
    try {
        ServerSocket serverSocket = new ServerSocket (5094);
        System.out.println ("Waiting for clients to connect...");
        while (true) {
            Socket clientSocket = serverSocket.accept ();
            clientProcessingPool.submit (new ClientTask (clientSocket));
        }
    } catch (IOException e) {
        System.err.println ("Unable to process client request");
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    System.out.println ("Got a client !");
    while (true) {
        try {
            BufferedReader reader = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));
            String clientData = "";
            clientData = reader.readLine ();
            System.out.println ("clientdata::::" + clientData);
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9175976_9176103_3_20
9175976_9176913_1_32
Title: Generate all possible string from a given length 
----------------------------------------

public static void main (String [] args) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c = 'a';
    c <= 'z'; c ++) {
        characters.add (c);
    }
    List < String > allStrings = new ArrayList < String > ();
    for (Character c : characters) {
        for (Character d : characters) {
            for (Character e : characters) {
                for (Character f : characters) {
                    String s = "" + c + d + e + f;
                    allStrings.add (s);
                }
            }
        }
    }
    System.out.println (allStrings.size ());
}
----------------------------------------

public static void main (String...args) {
    long start = System.nanoTime ();
    int letters = 26;
    int count = 6;
    final int combinations = (int) Math.pow (letters, count);
    char [] chars = new char [count];
    Arrays.fill (chars, 'a');
    final int last = count - 1;
    OUTER : while (true) {
        for (chars [last] = 'a'; chars [last] <= 'z'; chars [last] += 2) {
            newComination (chars);
            chars [last] ++;
            newComination (chars);
        }
        UPDATED : {
            for (int i = last - 1;
            i >= 0; i --) {
                if (chars [i] ++ >= 'z') chars [i] = 'a';
                else break UPDATED;

            }
            break OUTER;
        }}
    long time = System.nanoTime () - start;
    System.out.printf ("Took %.3f seconds to generate %,d combinations%n", time / 1e9, combinations);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9181594_52983911_5_45
9181594_9181778_1_12
Title: Reading text from file and storing each word from every line into separate variables 
----------------------------------------

public static void main (String [] args) throws Exception {
    File f = new File ("main.txt");
    StringBuffer txt = new StringBuffer ();
    FileOutputStream fos = new FileOutputStream (f);
    for (int i = 0;
    i < args.length; i ++) {
        txt.append (args [i] + " ");
    }
    fos.write (txt.toString ().getBytes ());
    fos.close ();
    FileInputStream fis = new FileInputStream ("main.txt");
    InputStreamReader input = new InputStreamReader (fis);
    BufferedReader br = new BufferedReader (input);
    String data;
    String result = new String ();
    StringBuffer txt1 = new StringBuffer ();
    StringBuffer txt2 = new StringBuffer ();
    File f1 = new File ("even.txt");
    FileOutputStream fos1 = new FileOutputStream (f1);
    File f2 = new File ("odd.txt");
    FileOutputStream fos2 = new FileOutputStream (f2);
    while ((data = br.readLine ()) != null) {
        result = result.concat (data);
        String [] words = data.split (" ");
        for (int j = 0;
        j < words.length; j ++) {
            if (j % 2 == 0) {
                System.out.println (words [j]);
                txt1.append (words [j] + " ");
            } else {
                System.out.println (words [j]);
                txt2.append (words [j] + " ");
            }
        }
    }
    fos1.write (txt1.toString ().getBytes ());
    fos1.close ();
    fos2.write (txt2.toString ().getBytes ());
    fos2.close ();
    br.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("/path/to/InputFile");
    BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream (file)));
    String line = null;
    while ((line = br.readLine ()) != null) {
        String [] tokens = line.split ("\\s+");
        String var_1 = tokens [0];
        String var_2 = tokens [1];
        String var_3 = tokens [2];
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
918359_918501_4_32
918359_919980_11_26
Title: My python program executes faster than my java version of the same program. What gives? 
----------------------------------------

public static void main (String [] args) {
    long startTime;
    long totalTime;
    int iterations = 10000000;
    Set counts;
    System.out.println ("HashSet:");
    counts = new HashSet ((2 * iterations), 0.75f);
    startTime = System.currentTimeMillis ();
    for (int i = 0;
    i < iterations; i ++) {
        counts.add (i);
    }
    totalTime = System.currentTimeMillis () - startTime;
    System.out.println ("TOTAL TIME = " + (totalTime / 1000f));
    System.out.println (counts.size ());
    counts.clear ();
    System.out.println ("TreeSet:");
    counts = new TreeSet ();
    startTime = System.currentTimeMillis ();
    for (int i = 0;
    i < iterations; i ++) {
        counts.add (i);
    }
    totalTime = System.currentTimeMillis () - startTime;
    System.out.println ("TOTAL TIME = " + (totalTime / 1000f));
    System.out.println (counts.size ());
}
----------------------------------------

public static void main (String [] args) {
    long startTime;
    long totalTime;
    int iterations = 1000000;
    HashSet < Element > counts = new HashSet < Element > ((int) (2 * iterations), 0.75f);
    startTime = System.currentTimeMillis ();
    for (int i = 0;
    i < iterations; ++ i) {
        counts.add (new Element (i));
    }
    totalTime = System.currentTimeMillis () - startTime;
    System.out.println ("TOTAL TIME = " + (totalTime / 1000f));
    System.out.println (counts.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9192371_43166031_123_151
9192371_9209605_96_124
Title: Drag'n drop files from the OS to Java application (Swing) 
----------------------------------------

private static void createAndShowGUI () {
    JFrame.setDefaultLookAndFeelDecorated (true);
    try {
        for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    JFrame frame = new JFrame ("Bill of materials Comparer");
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    ConsolidatorDemo demo = new ConsolidatorDemo ();
    demo.setOpaque (true);
    frame.setContentPane (demo);
    frame.pack ();
    frame.setVisible (true);
    demo.setDefaultButton ();
}
----------------------------------------

private static void createAndShowGUI () {
    JFrame.setDefaultLookAndFeelDecorated (true);
    try {
        for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    JFrame frame = new JFrame ("Consolidator!");
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    ConsolidatorDemo demo = new ConsolidatorDemo ();
    demo.setOpaque (true);
    frame.setContentPane (demo);
    frame.pack ();
    frame.setVisible (true);
    demo.setDefaultButton ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9192371_43166031_166_180
9192371_9209605_139_157
Title: Drag'n drop files from the OS to Java application (Swing) 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (c instanceof JLabel && value instanceof File) {
        JLabel l = (JLabel) c;
        File f = (File) value;
        l.setIcon (FileSystemView.getFileSystemView ().getSystemIcon (f));
        l.setText (f.getName ());
        l.setToolTipText (f.getAbsolutePath ());
    }
    return c;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (c instanceof JLabel && value instanceof File) {
        JLabel l = (JLabel) c;
        File f = (File) value;
        l.setIcon (FileSystemView.getFileSystemView ().getSystemIcon (f));
        l.setText (f.getName ());
        l.setToolTipText (f.getAbsolutePath ());
    }
    return c;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9192371_43166031_201_224
9192371_9209605_178_201
Title: Drag'n drop files from the OS to Java application (Swing) 
----------------------------------------

public boolean importData (TransferHandler.TransferSupport info) {
    if (! info.isDrop ()) {
        return false;
    }
    if (! info.isDataFlavorSupported (DataFlavor.javaFileListFlavor)) {
        displayDropLocation ("List doesn't accept a drop of this type.");
        return false;
    }
    Transferable t = info.getTransferable ();
    List < File > data;
    try {
        data = (List < File >) t.getTransferData (DataFlavor.javaFileListFlavor);
    } catch (Exception e) {
        return false;
    }
    DefaultListModel model = (DefaultListModel) list.getModel ();
    for (Object file : data) {
        model.addElement ((File) file);
    }
    return true;
}
----------------------------------------

public boolean importData (TransferHandler.TransferSupport info) {
    if (! info.isDrop ()) {
        return false;
    }
    if (! info.isDataFlavorSupported (DataFlavor.javaFileListFlavor)) {
        displayDropLocation ("List doesn't accept a drop of this type.");
        return false;
    }
    Transferable t = info.getTransferable ();
    List < File > data;
    try {
        data = (List < File >) t.getTransferData (DataFlavor.javaFileListFlavor);
    } catch (Exception e) {
        return false;
    }
    DefaultListModel model = (DefaultListModel) list.getModel ();
    for (Object file : data) {
        model.addElement ((File) file);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9192371_43166031_40_104
9192371_9209605_26_79
Title: Drag'n drop files from the OS to Java application (Swing) 
----------------------------------------

public ConsolidatorDemo () {
    super (new BorderLayout ());
    fc = new JTextArea ();
    fc.setText ("Rules:\n1. drop old html first.\n2. drop new html.\n3. drop output folder.\n4. click compare button.\n5. Check output in the output.txt file.\nEnd");
    fc.setEditable (false);
    JPanel fcPanel = new JPanel (new BorderLayout ());
    fcPanel.add (fc, BorderLayout.CENTER);
    compare = new JButton ("Compare");
    compare.addActionListener (this);
    JPanel buttonPanel1 = new JPanel (new BorderLayout ());
    buttonPanel1.setBorder (BorderFactory.createEmptyBorder (1, 1, 1, 1));
    buttonPanel1.add (compare, BorderLayout.LINE_END);
    clear = new JButton ("Clear All");
    clear.addActionListener (this);
    JPanel buttonPanel = new JPanel (new BorderLayout ());
    buttonPanel.setBorder (BorderFactory.createEmptyBorder (1, 1, 1, 1));
    buttonPanel.add (clear, BorderLayout.LINE_END);
    JPanel leftUpperPanel = new JPanel (new BorderLayout ());
    leftUpperPanel.setBorder (BorderFactory.createEmptyBorder (3, 3, 3, 3));
    leftUpperPanel.add (fcPanel, BorderLayout.CENTER);
    leftUpperPanel.add (buttonPanel1, BorderLayout.LINE_END);
    leftUpperPanel.add (buttonPanel, BorderLayout.PAGE_END);
    JScrollPane leftLowerPanel = new javax.swing.JScrollPane ();
    leftLowerPanel.setBorder (BorderFactory.createEmptyBorder (3, 3, 3, 3));
    listModel = new DefaultListModel ();
    dropZone = new JList (listModel);
    dropZone.setCellRenderer (new FileCellRenderer ());
    dropZone.setTransferHandler (new ListTransferHandler (dropZone));
    dropZone.setDragEnabled (true);
    dropZone.setDropMode (javax.swing.DropMode.INSERT);
    dropZone.setBorder (new TitledBorder ("Drag and drop files here"));
    leftLowerPanel.setViewportView (new JScrollPane (dropZone));
    childSplitPane = new JSplitPane (JSplitPane.VERTICAL_SPLIT, leftLowerPanel, leftUpperPanel);
    childSplitPane.setDividerLocation (200);
    childSplitPane.setPreferredSize (new Dimension (300, 400));
    add (childSplitPane, BorderLayout.CENTER);
}
----------------------------------------

public ConsolidatorDemo () {
    super (new BorderLayout ());
    fc = new JFileChooser ();
    fc.setMultiSelectionEnabled (true);
    fc.setDragEnabled (true);
    fc.setControlButtonsAreShown (false);
    fc.setFileSelectionMode (JFileChooser.FILES_ONLY);
    JPanel fcPanel = new JPanel (new BorderLayout ());
    fcPanel.add (fc, BorderLayout.CENTER);
    clear = new JButton ("Clear All");
    clear.addActionListener (this);
    JPanel buttonPanel = new JPanel (new BorderLayout ());
    buttonPanel.setBorder (BorderFactory.createEmptyBorder (5, 5, 5, 5));
    buttonPanel.add (clear, BorderLayout.LINE_END);
    JPanel leftUpperPanel = new JPanel (new BorderLayout ());
    leftUpperPanel.setBorder (BorderFactory.createEmptyBorder (5, 5, 5, 5));
    leftUpperPanel.add (fcPanel, BorderLayout.CENTER);
    leftUpperPanel.add (buttonPanel, BorderLayout.PAGE_END);
    JScrollPane leftLowerPanel = new javax.swing.JScrollPane ();
    leftLowerPanel.setBorder (BorderFactory.createEmptyBorder (5, 5, 5, 5));
    listModel = new DefaultListModel ();
    dropZone = new JList (listModel);
    dropZone.setCellRenderer (new FileCellRenderer ());
    dropZone.setTransferHandler (new ListTransferHandler (dropZone));
    dropZone.setDragEnabled (true);
    dropZone.setDropMode (javax.swing.DropMode.INSERT);
    dropZone.setBorder (new TitledBorder ("Selected files/folders"));
    leftLowerPanel.setViewportView (new JScrollPane (dropZone));
    childSplitPane = new JSplitPane (JSplitPane.VERTICAL_SPLIT, leftUpperPanel, leftLowerPanel);
    childSplitPane.setDividerLocation (400);
    childSplitPane.setPreferredSize (new Dimension (480, 650));
    console = new JTextArea ();
    console.setColumns (40);
    console.setLineWrap (true);
    console.setBorder (new TitledBorder ("Console"));
    parentSplitPane = new JSplitPane (JSplitPane.HORIZONTAL_SPLIT, childSplitPane, console);
    parentSplitPane.setDividerLocation (480);
    parentSplitPane.setPreferredSize (new Dimension (800, 650));
    add (parentSplitPane, BorderLayout.CENTER);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9194497_10156770_1_33
9194497_9194671_1_17
Title: Sort all even numbers in ascending order and then sort all odd numbers in descending order in a collection 
----------------------------------------

@Override
public int compare (Integer o1, Integer o2) {
    if (o1 % 2 == 0) {
        if (o2 % 2 == 0) {
            if (o1 < o2) return - 1;
            else return 1;

        } else {
            return - 1;
        }
    } else {
        if (o2 % 2 != 0) {
            if (o1 < o2) return 1;
            else return - 1;

        } else {
            return 1;
        }
    }
}
----------------------------------------

public int compare (int x, int y) {
    if (x & 1 == y & 1) {
        if (x & 1 == 0) {
            return Integer.compare (x, y);
        } else {
            return Integer.compare (y, x);
        }
    }
    if (x & 1 == 0) {
        return - 1;
    }
    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9194497_42751262_8_35
9194497_9195246_1_13
Title: Sort all even numbers in ascending order and then sort all odd numbers in descending order in a collection 
----------------------------------------

public static void main (String [] args) {
    int i, size;
    ArrayList < Integer > listEven = new ArrayList < Integer > ();
    ArrayList < Integer > listOdd = new ArrayList < Integer > ();
    ArrayList < Integer > finalList = new ArrayList < Integer > ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter Array Size : ");
    size = sc.nextInt ();
    int A [] = new int [size];
    for (i = 0; i < size; i ++) {
        A [i] = sc.nextInt ();
    }
    for (i = 0; i < size; i ++) {
        if (A [i] % 2 == 0) {
            listEven.add (A [i]);
        } else if (A [i] % 2 != 0) {
            listOdd.add (A [i]);
        }

    }
    Collections.sort (listEven);
    Collections.sort (listOdd);
    Collections.reverse (listOdd);
    finalList.addAll (listOdd);
    finalList.addAll (listEven);
    System.out.println ("Result is : " + finalList);
}
----------------------------------------

public static void main (String [] args) {
    int [] values = {Integer.MIN_VALUE, 0, Integer.MAX_VALUE - 1, Integer.MIN_VALUE + 1, - 1, 1, Integer.MAX_VALUE};
    for (int i = 0;
    i < values.length; i ++) {
        int value = encode (values [i]);
        assert decode (value) == values [i];
        values [i] = value;
    }
    Arrays.sort (values);
    for (int i = 0;
    i < values.length; i ++) values [i] = decode (values [i]);

    System.out.println (Arrays.toString (values));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9194497_42751262_8_35
9194497_9195617_2_16
Title: Sort all even numbers in ascending order and then sort all odd numbers in descending order in a collection 
----------------------------------------

public static void main (String [] args) {
    int i, size;
    ArrayList < Integer > listEven = new ArrayList < Integer > ();
    ArrayList < Integer > listOdd = new ArrayList < Integer > ();
    ArrayList < Integer > finalList = new ArrayList < Integer > ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter Array Size : ");
    size = sc.nextInt ();
    int A [] = new int [size];
    for (i = 0; i < size; i ++) {
        A [i] = sc.nextInt ();
    }
    for (i = 0; i < size; i ++) {
        if (A [i] % 2 == 0) {
            listEven.add (A [i]);
        } else if (A [i] % 2 != 0) {
            listOdd.add (A [i]);
        }

    }
    Collections.sort (listEven);
    Collections.sort (listOdd);
    Collections.reverse (listOdd);
    finalList.addAll (listOdd);
    finalList.addAll (listEven);
    System.out.println ("Result is : " + finalList);
}
----------------------------------------

public static void main (String [] args) {
    Integer [] intArray = new Integer [] {12, 67, 1, 34, 9, 78, 6, 31};
    Arrays.sort (intArray, new Comparator () {
        @Override
        public int compare (Object obj1, Object obj2) {
            Integer int1 = (Integer) obj1;
            Integer int2 = (Integer) obj2;
            int mod1 = Math.abs (int1 % 2);
            int mod2 = Math.abs (int2 % 2);
            return ((mod1 == mod2) ? ((mod1 == 0) ? int1.compareTo (int2) : int2.compareTo (int1)) : ((mod1 < mod2) ? - 1 : 1));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9194497_9195246_1_13
9194497_9195617_2_16
Title: Sort all even numbers in ascending order and then sort all odd numbers in descending order in a collection 
----------------------------------------

public static void main (String [] args) {
    int [] values = {Integer.MIN_VALUE, 0, Integer.MAX_VALUE - 1, Integer.MIN_VALUE + 1, - 1, 1, Integer.MAX_VALUE};
    for (int i = 0;
    i < values.length; i ++) {
        int value = encode (values [i]);
        assert decode (value) == values [i];
        values [i] = value;
    }
    Arrays.sort (values);
    for (int i = 0;
    i < values.length; i ++) values [i] = decode (values [i]);

    System.out.println (Arrays.toString (values));
}
----------------------------------------

public static void main (String [] args) {
    Integer [] intArray = new Integer [] {12, 67, 1, 34, 9, 78, 6, 31};
    Arrays.sort (intArray, new Comparator () {
        @Override
        public int compare (Object obj1, Object obj2) {
            Integer int1 = (Integer) obj1;
            Integer int2 = (Integer) obj2;
            int mod1 = Math.abs (int1 % 2);
            int mod2 = Math.abs (int2 % 2);
            return ((mod1 == mod2) ? ((mod1 == 0) ? int1.compareTo (int2) : int2.compareTo (int1)) : ((mod1 < mod2) ? - 1 : 1));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9199284_9199509_1_43
9199284_9233526_1_37
Title: Android - Reading XML issues 
----------------------------------------

private static void GetLatestData (String response) {
    try {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance ();
        dbf.setValidating (true);
        dbf.setIgnoringElementContentWhitespace (true);
        DocumentBuilder db = dbf.newDocumentBuilder ();
        DocumentBuilder db = dbf.newDocumentBuilder ();
        Document doc = db.parse (new InputSource (new StringReader (response)));
        doc.getDocumentElement ().normalize ();
        NodeList nodeList = doc.getElementsByTagName ("Table");
        Node node = nodeList.item (0);
        long issueNumber;
        String summary;
        for (int i = 0;
        i < node.getChildNodes ().getLength (); i ++) {
            Node tempNode = node.getChildNodes ().item (i);
            if (tempNode.getNodeName ().equalsIgnoreCase ("IssueID")) {
                issueNumber = (Long.parseLong (tempNode.getTextContent ()));
                Node summaryNode = tempNode.getNextSibling ();
                summary = summaryNode.getTextContent ();
                System.out.println (String.format ("Issue # %d, Summary: %s", issueNumber, summary));
            }
        }
    } catch (Exception exception) {
        exception.printStackTrace ();
    }
}
----------------------------------------

public void GetLatestData (SoapPrimitive xml) throws ParserConfigurationException, SAXException, IOException {
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance ();
    DocumentBuilder db = dbf.newDocumentBuilder ();
    Document doc;
    InputSource is = new InputSource (new StringReader (xml.toString ()));
    doc = db.parse (is);
    creator = new IssueInfoCreator (this, DBVersion);
    creator.open ();
    creator.ClearIssueTable ();
    creator.close ();
    NodeList nodes = doc.getElementsByTagName ("Table");
    for (int i = 0;
    i < nodes.getLength (); i ++) {
        IssueInfo issue = new IssueInfo ();
        Element e = (Element) nodes.item (i);
        issue.setIssueNumber (Long.parseLong (XMLfunctions.getValue (e, "IssueID")));
        issue.setIssueSummary (XMLfunctions.getValue (e, "IssueSummary"));
        issue.setDateReceived (DateFormat.format ("MM/dd/yyyy hh:mm:ss", System.currentTimeMillis ()).toString ());
        if (issue.getIssueNumber () > 0 && issue.getIssueSummary () != null) {
            creator = new IssueInfoCreator (this, DBVersion);
            creator.open ();
            creator.InsertIssue (issue.getIssueNumber (), issue.getDateReceived (), issue.getIssueSummary ());
            creator.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9205572_9205683_1_23
9205572_9205743_1_14
Title: How to handle dates in java 
----------------------------------------

public String getNextMonth (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    if (maxDate) {
        calendar.set (year, monthNo, 1);
    } else {
        calendar.set (year, monthNo, day);
    }
    if (monthNo == 11) {
        calendar.add (calendar.MONTH, 1);
    } else {
        calendar.add (calendar.MONTH, 1);
    }
    int maxD = calendar.getActualMaximum (calendar.DAY_OF_MONTH);
    calendar.set (year, monthNo, maxD);
}
----------------------------------------

public String getNextMonth (boolean maxDate) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (year, monthNo, 1);
    calendar.add (Calendar.MONTH, 1);
    if (maxDate) {
        int maxD = calendar.getActualMaximum (Calendar.DAY_OF_MONTH);
        calendar.set (Calendar.DAY_OF_MONTH, maxD);
    } else {
        calendar.set (Calendar.DAY_OF_MONTH, day);
    }
    String date = (calendar.get (Calendar.YEAR)) + "-" + (calendar.get (Calendar.MONTH) + 1) + "-" + calendar.get (Calendar.DAY_OF_MONTH);
    calendar.clear ();
    return date;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9226954_9894030_118_127
9226954_9894030_130_139
Title: personal schedule planner for students 
----------------------------------------

private String getAcademic (int j) {
    for (i = 0; i < activity.length; i ++) {
        if (! activity [i].over && activity [i].credit == j) {
            activity [i].over = true;
            currentTime += activity [i].timeSlot;
            return activity [i].name;
        }
    }
    return null;
}
----------------------------------------

private String getAcademic () {
    for (i = 0; i < activity.length; i ++) {
        if (activity [i].credit == 1 && activity [i].acad) {
            activity [i].over = true;
            currentTime += activity [i].timeSlot;
            return activity [i].name;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9234527_9234647_1_12
9234527_9234650_1_15
Title: Boolean multidimensional arrays working with nested for loops - making it stop 
----------------------------------------

private boolean bookSeat () {
    boolean isBooked = false;
    for (int row = 0;
    row < 2; row ++) {
        for (int col = 0;
        col < maxCols; col ++) {
            if (seating [row] [col] == false) {
                seating [row] [col] = true;
                return true;
            }
        }
    }
    return false;
}
----------------------------------------

private boolean bookSeat () {
    for (int row = 0;
    row < 2; row ++) {
        for (int col = 0;
        col < maxCols; col ++) {
            if (seating [row] [col] == false) {
                seating [row] [col] = true;
                return true;
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9242430_9242514_1_19
9242430_9242518_1_19
Title: how to compare a character to individual characters in a string? 
----------------------------------------

public void searcher (String s) {
    boolean isValid = false;
    String checker = "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for (int x = 0;
    x < checker.length (); x ++) {
        if (s.charAt (0) == checker.charAt (x)) {
            isValid = true;
            break;
        }
    }
    if (isValid == true) System.out.println ("Answer: " + s + "is a valid identifier\n");
    else System.out.println ("Answer: " + s + "is not a valid identifier\n");

}
----------------------------------------

public void searcher (String s) {
    String testValues = "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    boolean found = false;
    char target = s.charAt (0);
    for (int i = 0;
    i < testValues.length (); i ++) {
        if (target == testValues.charAt (i)) {
            found = true;
            break;
        }
    }
    if (found) System.out.println ("target (" + target + "): FOUND");
    else System.out.println ("target (" + target + "): NOT FOUND");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9245345_9245497_6_22
9245345_9245716_6_18
Title: Synchronization work with conditionals? How can I make this code performant and thread safe? 
----------------------------------------

public void handleDrawRequest (Canvas canvas) {
    if (resource == null) {
        if (lock.tryLock ()) {
            try {
                if (resource == null) resource = loadResource ();

            } finally {
                lock.unlock ();
            }
        } else {
            return;
        }
    }
    drawResourceOn (canvas);
}
----------------------------------------

public void handleDrawRequest (Canvas canvas) {
    if (resource == null) {
        if (loadingResource.compareAndSet (false, true)) {
            loadTheResource ();
        } else {
            return;
        }
    } else {
        drawResourceOn (canvas);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9246326_33939369_1_10
9246326_35173110_1_15
Title: Convert hexadecimal string (hex) to a binary string 
----------------------------------------

static String hexToBin (String s) {
    String preBin = new BigInteger (s, 16).toString (2);
    Integer length = preBin.length ();
    if (length < 8) {
        for (int i = 0;
        i < 8 - length; i ++) {
            preBin = "0" + preBin;
        }
    }
    return preBin;
}
----------------------------------------

public static byte [] hexToBin (String str) {
    int len = str.length ();
    byte [] out = new byte [len / 2];
    int endIndx;
    for (int i = 0;
    i < len; i = i + 2) {
        endIndx = i + 2;
        if (endIndx > len) endIndx = len - 1;

        out [i / 2] = (byte) Integer.parseInt (str.substring (i, endIndx), 16);
    }
    return out;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9249581_9249835_26_35
9249581_9250110_1_18
Title: Java - Listing combinations 
----------------------------------------

public static void main (String [] args) {
    n = 4;
    set = new Vector < String > (4);
    d = new int [6];
    set.add ("a");
    set.add ("b");
    set.add ("c");
    set.add ("d");
    recursion (0);
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 16; ++ i) {
        if ((i & 1) > 0) System.out.print ("A");

        if ((i & 2) > 0) System.out.print ("B");

        if ((i & 4) > 0) System.out.print ("C");

        if ((i & 8) > 0) System.out.print ("D");

        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
925423_20362065_3_36
925423_2087703_1_15
Title: Is it better practice to use String.format over string Concatenation in Java? 
----------------------------------------

public static void main (String [] args) {
    String formatString = "Hi %s; Hi to you %s";
    long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = String.format (formatString, i, + i * 2);
    }
    long end = System.currentTimeMillis ();
    System.out.println ("Format = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = "Hi " + i + "; Hi to you " + i * 2;
    }
    end = System.currentTimeMillis ();
    System.out.println ("Concatenation = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        StringBuilder bldString = new StringBuilder ("Hi ");
        bldString.append (i).append ("Hi to you ").append (i * 2).toString ();
    }
    end = System.currentTimeMillis ();
    System.out.println ("String Builder = " + ((end - start)) + " millisecond");
}
----------------------------------------

public static void main (String [] args) throws Exception {
    long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = "Hi " + i + "; Hi to you " + i * 2;
    }
    long end = System.currentTimeMillis ();
    System.out.println ("Concatenation = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = String.format ("Hi %s; Hi to you %s", i, + i * 2);
    }
    end = System.currentTimeMillis ();
    System.out.println ("Format = " + ((end - start)) + " millisecond");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
925423_20362065_3_36
925423_7578413_1_18
Title: Is it better practice to use String.format over string Concatenation in Java? 
----------------------------------------

public static void main (String [] args) {
    String formatString = "Hi %s; Hi to you %s";
    long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = String.format (formatString, i, + i * 2);
    }
    long end = System.currentTimeMillis ();
    System.out.println ("Format = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = "Hi " + i + "; Hi to you " + i * 2;
    }
    end = System.currentTimeMillis ();
    System.out.println ("Concatenation = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        StringBuilder bldString = new StringBuilder ("Hi ");
        bldString.append (i).append ("Hi to you ").append (i * 2).toString ();
    }
    end = System.currentTimeMillis ();
    System.out.println ("String Builder = " + ((end - start)) + " millisecond");
}
----------------------------------------

public static void main (String [] args) throws Exception {
    long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = String.format ("Hi %s; Hi to you %s", i, + i * 2);
    }
    long end = System.currentTimeMillis ();
    System.out.println ("Format = " + ((end - start)) + " millisecond");
    start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000000; i ++) {
        String s = "Hi " + i + "; Hi to you " + i * 2;
    }
    end = System.currentTimeMillis ();
    System.out.println ("Concatenation = " + ((end - start)) + " millisecond");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9259787_9260231_127_136
9259787_9260231_142_154
Title: Dynamic JTree and SwingUtilities.invokeLater() does nothing 
----------------------------------------

public DefaultMutableTreeNode addObject (Object child) {
    DefaultMutableTreeNode parentNode = null;
    TreePath parentPath = tree.getSelectionPath ();
    if (parentPath == null) {
        parentNode = rootNode;
    } else {
        parentNode = (DefaultMutableTreeNode) (parentPath.getLastPathComponent ());
    }
    return addObject (parentNode, child, true);
}
----------------------------------------

public DefaultMutableTreeNode addObject (DefaultMutableTreeNode parent, Object child, boolean shouldBeVisible) {
    DefaultMutableTreeNode childNode = new DefaultMutableTreeNode (child);
    if (parent == null) {
        parent = rootNode;
    }
    treeModel.insertNodeInto (childNode, parent, parent.getChildCount ());
    if (shouldBeVisible) {
        tree.scrollPathToVisible (new TreePath (childNode.getPath ()));
    }
    return childNode;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9259858_9259937_6_21
9259858_9260356_2_11
Title: Count Chars in a String Java 
----------------------------------------

public static void main (String [] args) {
    String yourString = "UNDERSTAND";
    Map < Character, Integer > count = new TreeMap < Character, Integer > ();
    for (char c : yourString.toCharArray ()) {
        if (count.containsKey (c)) {
            count.put (c, (int) count.get (c) + 1);
        } else {
            count.put (c, 1);
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String s = "a+ab+abc+abcd";
    HashSet < Character > charSet = new HashSet < Character > ();
    for (int i = 0;
    i < s.length (); i ++) {
        charSet.add (s.charAt (i));
    }
    System.out.println ("Distinct Char Count : " + charSet.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9271885_9271895_1_13
9271885_9271942_1_12
Title: Type mismatch: cannot convert from integer to boolean 
----------------------------------------

public boolean clearSelection () {
    boolean i = false;
    if (! this.m_SelectedComps.isEmpty ()) {
        i = true;
        Iterator localIterator = this.m_SelectedComps.iterator ();
        while (localIterator.hasNext ()) ((AnnotComponent) localIterator.next ()).remove ();

        this.m_SelectedComps.clear ();
    }
    return i;
}
----------------------------------------

public boolean clearSelection () {
    int i = 0;
    if (! this.m_SelectedComps.isEmpty ()) {
        i = 1;
        Iterator localIterator = this.m_SelectedComps.iterator ();
        while (localIterator.hasNext ()) ((AnnotComponent) localIterator.next ()).remove ();

        this.m_SelectedComps.clear ();
    }
    return (i != 0);
}
----------------------------------------
