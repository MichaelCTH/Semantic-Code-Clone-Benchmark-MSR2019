$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39579232_39579379_9_20
39579232_39579553_11_25
Title: "Error "";"" expected after variable declaration" 
----------------------------------------

public void calculateroots () {
    if (discriminant >= 0) {
        root = Math.sqrt (discriminant) / (2 * a);
        System.out.println ("Your roots are " + (- 1 * b) + "+" + root + "and" + (- 1 * b) + (- 1 * root) + ".");
    } else {
        root = Math.sqrt (Math.abs (discriminant)) / (2 * a);
        System.out.println ("Your roots are " + (- 1 * b) + "+ i" + root + "and" + (- 1 * b) + "i" + (- 1 * root) + ".");
    }
}
----------------------------------------

public void calculateroots () {
    discriminant = (b * b) - 4 * a * c;
    if (discriminant >= 0) {
        root = Math.sqrt (discriminant) / (2 * a);
        System.out.println ("Your roots are " + (- 1 * b) + "+" + root + "and" + (- 1 * b) + (- 1 * root) + ".");
    } else {
        root = Math.sqrt (Math.abs (discriminant)) / (2 * a);
        System.out.println ("Your roots are " + (- 1 * b) + "+ i" + root + "and" + (- 1 * b) + "i" + (- 1 * root) + ".");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39593171_39594292_16_45
39593171_39595295_5_25
Title: Reverse the String with delimiters also in JAVA 
----------------------------------------

public static String reverse (String input) {
    String specialCharExpression = "!|\\.|,| *";
    StringBuilder result = new StringBuilder ();
    int fragmentStart = 0;
    for (int i = 0;
    i < input.length (); i ++) {
        String currentChar = input.charAt (i) + "";
        if (currentChar.matches (specialCharExpression) || i == input.length () - 1) {
            result.append (new StringBuilder (input.substring (fragmentStart, i)).reverse ().toString ());
            result.append (currentChar);
            fragmentStart = i + 1;
        }
    }
    return result.toString ();
}
----------------------------------------

public static void reverse (char ch []) {
    int l = 0;
    int startIndex = 0;
    int endIndex = 0;
    while (l < ch.length - 1) {
        if (isAlphabet (ch [l])) {
            l ++;
        } else {
            endIndex = l - 1;
            while (startIndex < endIndex) {
                char temp = ch [startIndex];
                ch [startIndex] = ch [endIndex];
                ch [endIndex] = temp;
                endIndex --;
                startIndex ++;
            }
            l ++;
            startIndex = l;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39598715_39599357_1_17
39598715_39599987_1_12
Title: "Dead code warning in try-with-resources but not in translated try-catch-finally" 
----------------------------------------

Object tryWithResources () throws OccasionalException {
    Object value = null;
    try (Resource resource = new Resource ()) {
        occasionallyThrow ();
        value = new Object ();
        resource.someMethod ();
    } catch (CloseException e) {
        if (value == null) {
        } else {
        }
    }
    return value;
}
----------------------------------------

Object tryWithResources () throws OccasionalException {
    Object value = null;
    try (Resource resource = new Resource ()) {
        occasionallyThrow ();
        value = new Object ();
        System.out.println (resource.toString ());
    } catch (CloseException e) {
        catchBlock (value, e);
    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39612658_39613236_32_40
39612658_39613236_61_69
Title: (Undo/Redo || KeyStrokes) not working in JEditorPane 
----------------------------------------

protected void update () {
    if (undoManager.canUndo ()) {
        setEnabled (true);
        putValue (Action.NAME, undoManager.getUndoPresentationName ());
    } else {
        setEnabled (false);
        putValue (Action.NAME, "Undo");
    }
}
----------------------------------------

protected void update () {
    if (undoManager.canRedo ()) {
        setEnabled (true);
        putValue (Action.NAME, undoManager.getRedoPresentationName ());
    } else {
        setEnabled (false);
        putValue (Action.NAME, "Redo");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_107_122
3961443_3962404_131_140
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    for (long bit = 1;
    0 != base; bit <<= 1, base>>>= 1) {
        if (0 < (base & 1)) {
            buffer [count ++] = bit;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_107_122
3961443_3962404_90_98
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    while (base != 0) {
        long mask = base & (- base);
        base &= ~ mask;
        buffer [count ++] = mask;
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_107_122
3961443_3962435_1_16
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------

public static int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_131_140
3961443_3962404_90_98
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    for (long bit = 1;
    0 != base; bit <<= 1, base>>>= 1) {
        if (0 < (base & 1)) {
            buffer [count ++] = bit;
        }
    }
    return count;
}
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    while (base != 0) {
        long mask = base & (- base);
        base &= ~ mask;
        buffer [count ++] = mask;
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_131_140
3961443_3962435_1_16
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    for (long bit = 1;
    0 != base; bit <<= 1, base>>>= 1) {
        if (0 < (base & 1)) {
            buffer [count ++] = bit;
        }
    }
    return count;
}
----------------------------------------

public static int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3961443_3962404_90_98
3961443_3962435_1_16
Title: bit twiddling in java - decomposing long into long[] of bitmasks 
----------------------------------------

protected int decompose (long [] buffer, long base) {
    int count = 0;
    while (base != 0) {
        long mask = base & (- base);
        base &= ~ mask;
        buffer [count ++] = mask;
    }
    return count;
}
----------------------------------------

public static int decompose (long [] buffer, long base) {
    int count = 0;
    if (0 != (base & 1)) {
        buffer [count ++] = 1;
    }
    base>>>= 1;
    for (long bit = 1;
    0 < bit && bit <= base;) {
        if (0 < (base & bit)) {
            buffer [count ++] = (bit <<= 1);
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39616805_39616878_1_10
39616805_39616930_1_10
Title: How to display the results of a for-loop in one dialogwindow? 
----------------------------------------

public void count1 () {
    int min, max;
    min = Integer.parseInt (JOptionPane.showInputDialog ("lowest number"));
    max = Integer.parseInt (JOptionPane.showInputDialog ("highest number"));
    StringBuilder buff = new StringBuilder ();
    for (int i = min;
    i <= max; i += 7) {
        buff.append (i).append (" ");
    }
    JOptionPane.showMessageDialog (null, buff.toString ());
}
----------------------------------------

public void count1 () {
    int min, max;
    StringBuilder elt = new StringBuilder ("");
    min = Integer.parseInt (JOptionPane.showInputDialog ("lowest number"));
    max = Integer.parseInt (JOptionPane.showInputDialog ("highest number"));
    for (int i = min;
    i <= max; i += 7) {
        elt.append (i).append (" ");
    }
    JOptionPane.showMessageDialog (null, elt.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39619284_39786467_30_49
39619284_39786467_58_74
Title: File transfer with Jetty 
----------------------------------------

public void run () {
    System.err.println ("Do get");
    String get = req.getParameter ("UUID");
    try {
        if (checkListForMessage (get) == true) {
            try {
                System.out.print ("eeeeeeeeee");
                byte [] b = serialize (envelopeList.get (index));
                String encoded = new String (Base64.encodeBase64 (b));
                resp.getWriter ().append (encoded);
                envelopeList.remove (index);
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    ctxt.complete ();
}
----------------------------------------

public void run () {
    System.err.println ("Do post");
    try {
        String s = req.getParameter ("key1");
        byte [] decoded = Base64.decodeBase64 (s);
        envelope = (Envelope) deserialize (decoded);
        if (checkListForPair (envelope.userIdentifier, envelope.clientIdentifier) == false) {
            envelopeList.add (envelope);
            resp.getWriter ().append ("Approved");
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    }
    ctxt.complete ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39625133_39625359_1_12
39625133_39625617_6_17
Title: Regular Expression to obtain inner text 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String pattern = "Linux version\\s*(\\d+.\\d+.\\d+-\\w+)\\s+.*";
    String input = "Linux version 3.10.49-g5796782 (d00903065@ubuntu)";
    Pattern p = Pattern.compile (pattern);
    Matcher m = p.matcher (input);
    if (m.find ()) {
        System.out.println ("Linux version is : " + m.group (1));
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String s = "Linux version 3.10.49-g5796782 (d00903065@ubuntu)";
    Pattern pattern = Pattern.compile ("\\w+\\s+\\w+\\s+([a-z-A-Z0-9.-]+)\\s+(?:[()a-zA-Z0-9@)]+)");
    Matcher matcher = pattern.matcher (s);
    if (matcher.find ()) {
        s = matcher.group (1);
    } else {
        s = "no match";
    }
    System.out.println (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39629987_39630059_1_20
39629987_39630959_1_21
Title: Null pointer exception android array 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_second);
    Vocabularies = getResources ().getStringArray (R.array.Vocabularies_array);
    meanings = getResources ().getStringArray (R.array.meanings_array);
    ArrayAdapter < String > adapter = new ArrayAdapter < String > (this, android.R.layout.simple_dropdown_item_1line, Vocabularies);
    AutoCompleteTextView textView = (AutoCompleteTextView) findViewById (R.id.vocabularies);
    textView.setThreshold (2);
    textView.setAdapter (adapter);
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Vocabularies = getResources ().getStringArray (R.array.Vocabularies_array);
    meanings = getResources ().getStringArray (R.array.meanings_array);
    ArrayAdapter < String > adapter = new ArrayAdapter < String > (this, android.R.layout.simple_dropdown_item_1line, Vocabularies);
    AutoCompleteTextView textView = (AutoCompleteTextView) findViewById (R.id.vocabularies);
    textView.setThreshold (2);
    textView.setAdapter (adapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39640246_39640575_42_58
39640246_39640622_15_31
Title: Constructor gets Called TWice 
----------------------------------------

public void input () {
    int no;
    System.out.println ("How many students?");
    Scanner sc = new Scanner (System.in);
    no = sc.nextInt ();
    for (int i = 0;
    i < no; i ++) {
        System.out.println ("Enter name of student" + (i + 1));
        setNames (sc.next ());
        System.out.println ("Enter marks for same student");
        setMarks (sc.nextInt ());
        sd.add (this);
    }
    sc.close ();
}
----------------------------------------

public void input () {
    int no;
    System.out.println ("How many students?");
    no = sc.nextInt ();
    for (int i = 0;
    i < no; i ++) {
        System.out.println ("Enter name of student" + (i + 1));
        String names = sc.next ();
        System.out.println ("Enter marks for same student");
        int marks = sc.nextInt ();
        StudentDetails sDetails = new StudentDetails (names, marks);
        sd.add (sDetails);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39672008_39672052_1_14
39672008_39672200_5_45
Title: trouble with if else statement... important 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Random rn = new Random ();
    int preloadedAnswer = 19;
    boolean win = false;
    for (int i = 0;
    i < 3; i ++) {
        int answer1 = rn.nextInt (30) + 1;
        if (answer1 == preloadedAnswer) win = true;

    }
    if (win) {
        System.out.println ("You win!");
    } else System.out.println ("You loose");

}
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    Random rn = new Random ();
    int ch = 1;
    while (ch == 1) {
        String str = "";
        String str1 = "";
        String str2 = "";
        for (int i = 0;
        i < 3; i ++) {
            int answer1 = rn.nextInt (9) + 1;
            str = str + "-" + answer1;
            str1 = str1 + answer1;
        }
        System.out.println (str);
        str = "";
        for (int i = 0;
        i < 3; i ++) {
            int answer1 = rn.nextInt (9) + 1;
            str = str + "-" + answer1;
            str2 = str2 + answer1;
        }
        System.out.println (str);
        if (Integer.parseInt (str1) == Integer.parseInt (str2)) {
            System.out.println ("Crongrats !! You are the Lucky Winner !!!!");
        } else System.out.println ("Better Luck Next Time");

        System.out.println ("Wanna Try Again ? 1=YES, 0=NO");
        ch = Integer.parseInt (br.readLine ());
    }
    System.out.println ("Thanks for Playing Lottery with us !! Come back soon");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39674287_39674338_1_11
39674287_39674383_1_12
Title: java recursion print opposite 
----------------------------------------

public void recursion (int n, int length) {
    if (n < 0) {
        return;
    } else {
        System.out.print (number_pound (n));
        System.out.print (stars (length - n));
        System.out.println ();
        recursion (n - 1, length);
    }
}
----------------------------------------

public void recursion (int max, int n) {
    if (n < 0) {
        return;
    } else {
        System.out.print (number_pound (n));
        System.out.print (stars (max - n));
        System.out.println ();
        recursion (max, n - 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39675432_39675449_1_20
39675432_39675466_1_15
Title: Field Validation not working 
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    int a, b, c;
    try {
        a = Integer.parseInt (jTextField1.getText ());
    } catch (NumberFormatException e) {
        jLabel2.setText ("Please enter a number in field1");
        return;
    }
    try {
        b = Integer.parseInt (jTextField2.getText ());
    } catch (NumberFormatException e) {
        jLabel2.setText ("Please enter a number in field2");
        return;
    }
    c = a + b;
    jLabel2.setText ("" + c);
}
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    double a, b, c;
    if (jTextField1.getText ().equals ("") || jTextField2.getText ().equals ("")) {
        jLabel2.setText ("Missing Input");
    } else {
        try {
            a = Integer.parseInt (jTextField1.getText ());
            b = Integer.parseInt (jTextField2.getText ());
            c = a + b;
            jLabel2.setText ("" + c);
        } catch (NumberFormatException e) {
            jLabel2.setText ("Enter Valid numbers");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39675432_39675449_1_20
39675432_39675557_1_17
Title: Field Validation not working 
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    int a, b, c;
    try {
        a = Integer.parseInt (jTextField1.getText ());
    } catch (NumberFormatException e) {
        jLabel2.setText ("Please enter a number in field1");
        return;
    }
    try {
        b = Integer.parseInt (jTextField2.getText ());
    } catch (NumberFormatException e) {
        jLabel2.setText ("Please enter a number in field2");
        return;
    }
    c = a + b;
    jLabel2.setText ("" + c);
}
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    int sum = 0;
    int a, b;
    try {
        a = Integer.parseInt (jTextField1.getText ());
        sum += a;
    } catch (NumberFormatException e) {
        System.out.println ("Please correct your text field number 1");
    }
    try {
        b = Integer.parseInt (jTextField2.getText ());
        sum += b;
    } catch (NumberFormatException e) {
        System.out.println ("Please correct your text field number 2");
    }
    jLabel.setText ("" + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39675432_39675466_1_15
39675432_39675557_1_17
Title: Field Validation not working 
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    double a, b, c;
    if (jTextField1.getText ().equals ("") || jTextField2.getText ().equals ("")) {
        jLabel2.setText ("Missing Input");
    } else {
        try {
            a = Integer.parseInt (jTextField1.getText ());
            b = Integer.parseInt (jTextField2.getText ());
            c = a + b;
            jLabel2.setText ("" + c);
        } catch (NumberFormatException e) {
            jLabel2.setText ("Enter Valid numbers");
        }
    }
}
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    int sum = 0;
    int a, b;
    try {
        a = Integer.parseInt (jTextField1.getText ());
        sum += a;
    } catch (NumberFormatException e) {
        System.out.println ("Please correct your text field number 1");
    }
    try {
        b = Integer.parseInt (jTextField2.getText ());
        sum += b;
    } catch (NumberFormatException e) {
        System.out.println ("Please correct your text field number 2");
    }
    jLabel.setText ("" + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3967731_25754196_1_32
3967731_3967988_1_13
Title: How to improve the performance of g.drawImage() method for resizing images 
----------------------------------------

private BufferedImage getScaledImage (BufferedImage src, int w, int h) {
    int original_width = src.getWidth ();
    int original_height = src.getHeight ();
    int bound_width = w;
    int bound_height = h;
    int new_width = original_width;
    int new_height = original_height;
    if (original_width > bound_width) {
        new_width = bound_width;
        new_height = (new_width * original_height) / original_width;
    }
    if (new_height > bound_height) {
        new_height = bound_height;
        new_width = (new_height * original_width) / original_height;
    }
    BufferedImage resizedImg = new BufferedImage (new_width, new_height, BufferedImage.TYPE_INT_RGB);
    Graphics2D g2 = resizedImg.createGraphics ();
    g2.setBackground (Color.WHITE);
    g2.clearRect (0, 0, new_width, new_height);
    g2.drawImage (src, 0, 0, new_width, new_height, null);
    g2.dispose ();
    return resizedImg;
}
----------------------------------------

public static BufferedImage getScaledImage (BufferedImage image, int width, int height) throws IOException {
    int imageWidth = image.getWidth ();
    int imageHeight = image.getHeight ();
    double scaleX = (double) width / imageWidth;
    double scaleY = (double) height / imageHeight;
    AffineTransform scaleTransform = AffineTransform.getScaleInstance (scaleX, scaleY);
    AffineTransformOp bilinearScaleOp = new AffineTransformOp (scaleTransform, AffineTransformOp.TYPE_BILINEAR);
    return bilinearScaleOp.filter (image, new BufferedImage (width, height, image.getType ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39678781_39678972_3_20
39678781_39678979_2_15
Title: Unreachable code + how to go through all combinations 
----------------------------------------

public static void main (String args []) throws IOException {
    for (int a = - 100;
    a < 100; a ++) {
        for (int b = - 100;
        b < 100; b ++) {
            for (int c = - 100;
            c < 100; c ++) {
                if (BigDecimal.valueOf (a).multiply (BigDecimal.valueOf (Math.sqrt (2))).subtract (BigDecimal.valueOf (b)).equals (BigDecimal.valueOf (c).multiply (BigDecimal.valueOf (Math.sqrt (3))))) {
                    System.out.println (a + " " + b + " " + c);
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    final double SQRT2 = Math.sqrt (2);
    final double SQRT3 = Math.sqrt (3);
    for (int a = - 100;
    a <= 100; a ++) {
        for (int b = - 100;
        b <= 100; b ++) {
            for (int c = - 100;
            c <= 100; c ++) {
                if (Double.compare (a * SQRT2 - b, c * SQRT3) == 0) {
                    System.out.println ("a = " + a + "; b = " + b + "; c = " + c);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39678781_39678972_3_20
39678781_39679062_2_12
Title: Unreachable code + how to go through all combinations 
----------------------------------------

public static void main (String args []) throws IOException {
    for (int a = - 100;
    a < 100; a ++) {
        for (int b = - 100;
        b < 100; b ++) {
            for (int c = - 100;
            c < 100; c ++) {
                if (BigDecimal.valueOf (a).multiply (BigDecimal.valueOf (Math.sqrt (2))).subtract (BigDecimal.valueOf (b)).equals (BigDecimal.valueOf (c).multiply (BigDecimal.valueOf (Math.sqrt (3))))) {
                    System.out.println (a + " " + b + " " + c);
                }
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    for (double a = - 100;
    a <= 100; a ++) {
        for (double b = - 100;
        b <= 100; b ++) {
            for (double c = - 100;
            c <= 100; c ++) {
                if (a * Math.sqrt (2) - b == c * Math.sqrt (3)) {
                    System.out.println (a + " * sqrt(2) - " + b + " = " + c + " * sqrt(3)");
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39678781_39678979_2_15
39678781_39679062_2_12
Title: Unreachable code + how to go through all combinations 
----------------------------------------

public static void main (String [] args) {
    final double SQRT2 = Math.sqrt (2);
    final double SQRT3 = Math.sqrt (3);
    for (int a = - 100;
    a <= 100; a ++) {
        for (int b = - 100;
        b <= 100; b ++) {
            for (int c = - 100;
            c <= 100; c ++) {
                if (Double.compare (a * SQRT2 - b, c * SQRT3) == 0) {
                    System.out.println ("a = " + a + "; b = " + b + "; c = " + c);
                }
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    for (double a = - 100;
    a <= 100; a ++) {
        for (double b = - 100;
        b <= 100; b ++) {
            for (double c = - 100;
            c <= 100; c ++) {
                if (a * Math.sqrt (2) - b == c * Math.sqrt (3)) {
                    System.out.println (a + " * sqrt(2) - " + b + " = " + c + " * sqrt(3)");
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39681597_39681786_1_22
39681597_39681823_50_61
Title: Make a custom name generator? 
----------------------------------------

public static int apostropheAdder (StringBuilder s) {
    int position;
    boolean spaceOccured = true;
    int lastSpacePosition = 0;
    for (position = 0; position < s.length (); position ++) {
        if (s.charAt (position) == ' ') {
            spaceOccured = true;
            lastSpacePosition = position;
        }
        if (! spaceOccured) {
            continue;
        }
        if (consonantFinder (s.charAt (position))) {
            if (position == lastSpacePosition) {
                continue;
            }
            spaceOccured = false;
            s.insert (position, "'");
        }
    }
    return position;
}
----------------------------------------

public static StringBuilder apostropheAdder (String a) {
    StringBuilder s = new StringBuilder (a);
    int position;
    for (position = 1; position < s.length (); position ++) {
        if (consonantFinder (s.charAt (position))) {
            s.insert (position, "'");
            position ++;
        }
    }
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39683675_39683944_1_13
39683675_39689056_1_17
Title: how to insert element at last in linked list 
----------------------------------------

public static void insertAtLast (Node head, int element) {
    Node newNode = new Node (0, null);
    newNode.data = element;
    newNode.next = null;
    Node temp = head;
    while (temp.next != null) {
        temp = temp.next;
    }
    temp.next = newNode;
}
----------------------------------------

public void insertAtLast (int element) {
    Node newNode = new Node (element, null);
    if (head == null) {
        head = newNode;
    }
    if (tail == null) {
        tail = newNode;
        return;
    }
    tail.next = newNode;
    tail = newNode;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39694642_39694710_1_17
39694642_39694736_25_40
Title: Removing Sublist from ArrayList 
----------------------------------------

public static void filterList (ArrayList < Integer > list) {
    bool firstInstance = false;
    for (int i = 0;
    i < list.size (); ++ i) {
        if (list.get (i) == 6) if (list.get (i + 1) == 0 && list.get (i + 2) == 6 && ! firstInstance) {
            list.remove (i);
            list.remove (i);
            list.remove (i);
        } else firstInstance = true;

    }
    ListIterator < Integer > iterator = list.listIterator ();
    int elem;
    while (iterator.hasNext ()) {
    }
}
----------------------------------------

public static void filterList (List < Integer > haystack, List < Integer > needle) {
    for (int offset = 0, ixOfNeedle = indexOfSublist (haystack, needle, offset);
    ixOfNeedle >= 0; ixOfNeedle = indexOfSublist (haystack, needle, offset)) {
        offset = ixOfNeedle;
        for (int i = needle.size ();
        i > 0; i --) {
            haystack.remove (ixOfNeedle);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39714997_39715105_6_24
39714997_39715131_2_12
Title: determining how many times each integer appears in the input (array) 
----------------------------------------

public static int [] [] howMany (int [] n) {
    int [] [] a = new int [n.length] [2];
    for (int i = 0;
    i < n.length; i ++) {
        int count = Collections.frequency (asList (n), n [i]);
        a [i] [0] = n [i];
        a [i] [1] = count;
    }
    for (int i = 0;
    i < n.length; i ++) {
        System.out.print (a [i] [0] + " occurs ");
        System.out.println (a [i] [1] + " times");
    }
    return a;
}
----------------------------------------

public static Hashtable < Integer, Integer > howMany (int [] n) {
    Hashtable < Integer, Integer > toRet = new Hashtable < Integer, Integer > ();
    for (int i = 0;
    i < n.length; i ++) {
        if (! toRet.containsKey (n [i])) {
            toRet.put (n [i], 1);
        } else {
            toRet.put (n [i], toRet.get (n [i]) + 1);
        }
    }
    return toRet;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39715801_39715830_5_23
39715801_39715838_1_11
Title: Read 10 numbers and display them without duplicates 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] myArray = new int [10];
    System.out.print ("Enter " + myArray.length + " values: ");
    for (int i = 0;
    i < myArray.length; i ++) {
        myArray [i] = input.nextInt ();
    }
    Set < Integer > set = new HashSet < > ();
    for (int i = 0;
    i < myArray.length; i ++) {
        if (! set.contains (myArray [i])) {
            System.out.println ("myArray[" + i + "] is: " + myArray [i]);
            set.add (myArray [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    LinkedHashSet < Integer > set = new LinkedHashSet < > ();
    for (int i = 0;
    i < 10; i ++) {
        set.add (input.nextInt ());
    }
    Iterator < Integer > ii = set.iterator ();
    while (ii.hasNext ()) System.out.println (ii.next ());

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39715801_39715830_5_23
39715801_39715985_8_27
Title: Read 10 numbers and display them without duplicates 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] myArray = new int [10];
    System.out.print ("Enter " + myArray.length + " values: ");
    for (int i = 0;
    i < myArray.length; i ++) {
        myArray [i] = input.nextInt ();
    }
    Set < Integer > set = new HashSet < > ();
    for (int i = 0;
    i < myArray.length; i ++) {
        if (! set.contains (myArray [i])) {
            System.out.println ("myArray[" + i + "] is: " + myArray [i]);
            set.add (myArray [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Integer [] myArray = new Integer [10];
    System.out.print ("Enter " + myArray.length + " values: ");
    for (int i = 0;
    i < 10; i ++) {
        myArray [i] = input.nextInt ();
    }
    Set < Integer > set = new HashSet < > ();
    set.addAll (Arrays.asList (myArray));
    System.out.println ("Without duplicates");
    for (Integer val : set) System.out.println (val);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39715801_39715838_1_11
39715801_39715985_8_27
Title: Read 10 numbers and display them without duplicates 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    LinkedHashSet < Integer > set = new LinkedHashSet < > ();
    for (int i = 0;
    i < 10; i ++) {
        set.add (input.nextInt ());
    }
    Iterator < Integer > ii = set.iterator ();
    while (ii.hasNext ()) System.out.println (ii.next ());

}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Integer [] myArray = new Integer [10];
    System.out.print ("Enter " + myArray.length + " values: ");
    for (int i = 0;
    i < 10; i ++) {
        myArray [i] = input.nextInt ();
    }
    Set < Integer > set = new HashSet < > ();
    set.addAll (Arrays.asList (myArray));
    System.out.println ("Without duplicates");
    for (Integer val : set) System.out.println (val);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39716017_39716382_3_31
39716017_39716502_1_21
Title: java checkerboard pattern with asterisks 
----------------------------------------

public static void main (String [] args) {
    int length = 15;
    int height = 8;
    for (int i = 0;
    i <= height; i ++) {
        if (i % 2 == 0) {
            System.out.print ("* ");
        } else {
            System.out.print (" ");
        }
        for (int j = 0;
        j <= length; j ++) {
            if (j % 2 == 0) {
                System.out.print (" ");
            } else if (j != length || i % 2 != 0) {
                System.out.print ("* ");
            }

        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int length = 16;
    int height = 8;
    for (int i = 0;
    i <= height; i ++) {
        char first = ' ';
        char second = '*';
        if (i % 2 == 0) {
            first = '*';
            second = ' ';
        }
        for (int j = 0;
        j < length; j ++) {
            if (j % 2 == 0) {
                System.out.print (first);
            } else {
                System.out.print (second);
            }
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39716474_39717100_1_37
39716474_39717167_8_29
Title: How to extract unique fields from an ArrayList of objects? 
----------------------------------------

public static void main (String [] args) throws IOException {
    ArrayList < DbConnection > arrayList = new ArrayList < > ();
    arrayList.add (new DbConnection ("EGPRD", "SYSTEM", "AAA", "dh7y7hdu", "oracle"));
    arrayList.add (new DbConnection ("EGPRD", "SYSTEM", "AAA", "d6f7d6fd", "linux"));
    arrayList.add (new DbConnection ("EGPRD", "ADM", "RDA", "dh7y7hdu", "linux"));
    arrayList.add (new DbConnection ("SOPRD", "DBLINK", "ACT", "fdf7f87e8", "oracle"));
    ArrayList < DbConnection > newList = new ArrayList < > ();
    for (DbConnection dbConnection : arrayList) {
        if (newList.isEmpty ()) {
            newList.add (dbConnection);
        } else {
            boolean existenceStatus = false;
            for (DbConnection newSingleElement : newList) {
                if (newSingleElement.equals (dbConnection)) {
                    existenceStatus = true;
                    break;
                }
            }
            if (! existenceStatus) {
                newList.add (dbConnection);
            }
        }
    }
    for (DbConnection dbConnection : newList) {
        System.out.println (dbConnection.getDbName () + " : " + dbConnection.getSchemaName () + " : " + dbConnection.getApplId () + " : ");
    }
}
----------------------------------------

public static void main (String [] args) {
    DbConnection dc1 = new DbConnection ("EGPRD", "SYSTEM", "AAA", "dh7y7hdu", "oracle");
    DbConnection dc2 = new DbConnection ("EGPRD", "SYSTEM", "AAA", "d6f7d6fd", "linux");
    DbConnection dc3 = new DbConnection ("EGPRD", "ADM", "RDA", "d6f7d6fd", "linux");
    DbConnection dc4 = new DbConnection ("SOPRD", "DBLINK", "ACT", "fdf7f87e8", "oracle");
    List < DbConnection > dcList = new ArrayList (4);
    dcList.add (dc1);
    dcList.add (dc2);
    dcList.add (dc3);
    dcList.add (dc4);
    Map uniqueTable = new Hashtable ();
    for (DbConnection fDc : dcList) {
        uniqueTable.put (fDc.key, fDc);
    }
    for (Iterator it = uniqueTable.keySet ().iterator ();
    it.hasNext ();) {
        DbConnection mDc = (DbConnection) uniqueTable.get (it.next ());
        System.out.println ("1234" + "\t" + mDc.DbName + "\t" + mDc.SchemaName + "\t" + mDc.AppId);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39756185_39756283_1_11
39756185_39756478_10_20
Title: How do I get the value of an ASCII code in Java? 
----------------------------------------

public static int [] stringToBigInt (String s) {
    int [] A = new int [SIZE];
    int j = s.length () - 1;
    for (int i = A.length - 1;
    j >= 0 && i >= 0; -- i) {
        A [i] = s.charAt (j) - '0';
        -- j;
    }
    return A;
}
----------------------------------------

public static int [] stringToBigInt (final String s) {
    int [] A = new int [SIZE];
    int j = s.length () - 1;
    for (int i = A.length - 1;
    j >= 0 && i >= 0; -- i) {
        A [i] = Character.getNumericValue (s.charAt (j));
        -- j;
    }
    return A;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39762373_39765006_11_46
39762373_40024801_12_54
Title: Write into a word file using JAVA 
----------------------------------------

public static void main (String [] args) throws Exception {
    XWPFDocument document = new XWPFDocument ();
    FileOutputStream out = new FileOutputStream (new File ("fontstyle.docx"));
    XWPFParagraph paragraph = document.createParagraph ();
    XWPFRun paragraphOneRunOne = paragraph.createRun ();
    paragraphOneRunOne.setBold (true);
    paragraphOneRunOne.setItalic (true);
    paragraphOneRunOne.setText ("Font Style");
    paragraphOneRunOne.addBreak ();
    XWPFRun paragraphOneRunTwo = paragraph.createRun ();
    paragraphOneRunTwo.setText ("Font Style two");
    paragraphOneRunTwo.setTextPosition (100);
    XWPFRun paragraphOneRunThree = paragraph.createRun ();
    paragraphOneRunThree.setStrike (true);
    paragraphOneRunThree.setFontSize (20);
    paragraphOneRunThree.setSubscript (VerticalAlign.SUBSCRIPT);
    paragraphOneRunThree.setText (" Different Font Styles");
    document.write (out);
    out.close ();
    System.out.println ("fontstyle.docx written successully");
}
----------------------------------------

public static void main (String [] args) throws Exception {
    XWPFDocument docx1 = new XWPFDocument (new FileInputStream ("Test1.docx"));
    XWPFNumbering numberingDocx1 = docx1.getNumbering ();
    List < XWPFParagraph > paragraphListDocx1 = docx1.getParagraphs ();
    XWPFDocument docx2 = new XWPFDocument ();
    if (numberingDocx1 != null) {
        XWPFNumbering numberingDocx2 = docx2.createNumbering ();
        try {
            Field f = numberingDocx1.getClass ().getDeclaredField ("ctNumbering");
            f.setAccessible (true);
            numberingDocx2.setNumbering ((CTNumbering) f.get (numberingDocx1));
        } catch (NoSuchFieldException nsfex) {
        } catch (IllegalAccessException iaex) {
        }
    }
    XWPFParagraph paragraphDocx2 = docx2.createParagraph ();
    XWPFRun run = paragraphDocx2.createRun ();
    run.setText ("This is from Test1.docx:");
    for (XWPFParagraph paragraphDocx1 : paragraphListDocx1) {
        paragraphDocx2 = docx2.createParagraph ();
        docx2.setParagraph (paragraphDocx1, docx2.getPosOfParagraph (paragraphDocx2));
    }
    paragraphDocx2 = docx2.createParagraph ();
    run = paragraphDocx2.createRun ();
    run.setText ("^-- this was from Test1.docx.");
    FileOutputStream out = new FileOutputStream (new File ("Test2.docx"));
    docx2.write (out);
    docx2.close ();
    System.out.println ("Test2.docx written successfully");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39769956_39803652_25_44
39769956_39803652_2_21
Title: create new document from template 
----------------------------------------

public static void main (String [] args) {
    try {
        File f = new File ("C:/Users/Axel Richter/Documents/The Template.dotx");
        System.out.println (f.getAbsolutePath ());
        String file = f.getAbsolutePath ();
        ProcessBuilder pb = new ProcessBuilder ("cmd", "/C", "start", "\"\"", file);
        Process process = pb.start ();
        InputStream in = process.getErrorStream ();
        int c;
        while ((c = in.read ()) != - 1) {
            System.out.print ((char) c);
        }
        in.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        File f = new File ("C:/Users/Axel Richter/Documents/The Template.dotx");
        System.out.println (f.getAbsolutePath ());
        String cmd = "cmd /C start \"\" \"" + f.getAbsolutePath () + "\"";
        Process child = Runtime.getRuntime ().exec (cmd);
        InputStream in = child.getErrorStream ();
        int c;
        while ((c = in.read ()) != - 1) {
            System.out.print ((char) c);
        }
        in.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39770103_46090179_1_10
39770103_51771285_5_15
Title: How to split the string (by matching a set of regular expression) into tokens and print each token in JAVA? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String s = scan.nextLine ();
    StringTokenizer st = new StringTokenizer (s, ("[_\\@!?.', ]"));
    System.out.println (st.countTokens ());
    while (st.hasMoreTokens ()) {
        System.out.println (st.nextToken ());
    }
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String s = scan.nextLine ();
    String [] arr = s.split ("\\s+|\\,+|\\'+|[\\-\\+\\$\\?\\.@&].*");
    for (int i = 0;
    i < arr.length; i ++) {
        System.out.println (arr [i]);
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39773923_39827492_23_32
39773923_39827492_35_43
Title: MapStruct generic Map and map combined list of children objects 
----------------------------------------

default UserDTO map (User user) {
    if (user instanceof FacebookUser) {
        return this.map ((FacebookUser) user);
    } else if (user instanceof TwitterUser) {
        return this.map ((TwitterUser) user);
    } else {
        return this.map ((LocalUser) user);
    }

}
----------------------------------------

default User map (UserDTO userDTO) {
    if (userDTO instanceof FacebookUserDTO) {
        return this.map ((FacebookUserDTO) userDTO);
    } else if (userDTO instanceof TwitterUserDTO) {
        return this.map ((TwitterUserDTO) userDTO);
    } else {
        return this.map ((LocalUserDTO) userDTO);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_39782070_1_46
39781864_39783459_41_83
Title: Reverse right half of a linked list 
----------------------------------------

public static ListNode reverse (ListNode start) {
    int counter = 0;
    ListNode node = start;
    ListNode pre = start;
    ListNode result = start;
    while (node != null) {
        counter += 1;
        node = node.next;
    }
    int end = counter % 2 == 0 ? counter / 2 : (counter - 1) / 2;
    for (int i = 0;
    i < end; i ++) {
        pre = start;
        start = start.next;
    }
    ListNode tlist = null, temp;
    while (start != null) {
        temp = start.next;
        if (tlist == null) {
            tlist = start;
            start.next = null;
        } else {
            start.next = tlist;
            tlist = start;
        }
        start = temp;
    }
    pre.next = tlist;
    return start;
}
----------------------------------------

public static ListNode reverse (ListNode start) {
    int counter = 0;
    ListNode node = start;
    ListNode pre = start;
    ListNode result = start;
    while (node != null) {
        counter += 1;
        node = node.next;
    }
    for (int i = 0;
    i < (counter / 2); i ++) {
        pre = start;
        start = start.next;
    }
    ListNode temp = null;
    ListNode preNext = null;
    while (start != null) {
        temp = start.next;
        start.next = preNext;
        preNext = start;
        start = temp;
    }
    pre.next = preNext;
    return start;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_39782070_1_46
39781864_45523522_38_54
Title: Reverse right half of a linked list 
----------------------------------------

public static ListNode reverse (ListNode start) {
    int counter = 0;
    ListNode node = start;
    ListNode pre = start;
    ListNode result = start;
    while (node != null) {
        counter += 1;
        node = node.next;
    }
    int end = counter % 2 == 0 ? counter / 2 : (counter - 1) / 2;
    for (int i = 0;
    i < end; i ++) {
        pre = start;
        start = start.next;
    }
    ListNode tlist = null, temp;
    while (start != null) {
        temp = start.next;
        if (tlist == null) {
            tlist = start;
            start.next = null;
        } else {
            start.next = tlist;
            tlist = start;
        }
        start = temp;
    }
    pre.next = tlist;
    return start;
}
----------------------------------------

Node reverse (Node node) {
    int count = 0;
    Node doo = node;
    Node mid_pre = node;
    Node mid = node;
    while (doo.next != null) {
        if ((count & 1) == 1) {
            mid = mid.next;
        }
        doo = doo.next;
        count ++;
    }
    mid.next = rev (mid.next);
    return node;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_39783459_11_39
39781864_42642495_3_18
Title: Reverse right half of a linked list 
----------------------------------------

public static void main (String [] args) {
    ListNode node1 = new ListNode (2);
    ListNode node2 = new ListNode (1);
    ListNode node3 = new ListNode (3);
    ListNode node4 = new ListNode (4);
    ListNode node5 = new ListNode (5);
    ListNode node6 = new ListNode (6);
    ListNode node7 = new ListNode (7);
    ListNode node8 = new ListNode (8);
    node1.next = node2;
    node2.next = node3;
    node3.next = node4;
    node4.next = node5;
    node5.next = node6;
    node6.next = node7;
    node7.next = node8;
    ListNode res = reverse (node1);
    ListNode node = node1;
    while (node != null) {
        System.out.println (node.val);
        node = node.next;
    }
}
----------------------------------------

public static void main (String args []) {
    Node head = new Node ("Sameer");
    Node temp = addNode ("Monica", head);
    temp = addNode ("Doug", temp);
    temp = addNode ("Eric", temp);
    temp = addNode ("Charlie", temp);
    temp = addNode ("Dan", temp);
    temp = addNode ("Enrique", temp);
    temp = addNode ("Ankitha", temp);
    addNode ("Chad", temp);
    SolveMidLinkedList (head);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_39783459_11_39
39781864_45523522_64_80
Title: Reverse right half of a linked list 
----------------------------------------

public static void main (String [] args) {
    ListNode node1 = new ListNode (2);
    ListNode node2 = new ListNode (1);
    ListNode node3 = new ListNode (3);
    ListNode node4 = new ListNode (4);
    ListNode node5 = new ListNode (5);
    ListNode node6 = new ListNode (6);
    ListNode node7 = new ListNode (7);
    ListNode node8 = new ListNode (8);
    node1.next = node2;
    node2.next = node3;
    node3.next = node4;
    node4.next = node5;
    node5.next = node6;
    node6.next = node7;
    node7.next = node8;
    ListNode res = reverse (node1);
    ListNode node = node1;
    while (node != null) {
        System.out.println (node.val);
        node = node.next;
    }
}
----------------------------------------

public static void main (String [] args) {
    LinkedList list = new LinkedList ();
    list.head = new Node (1);
    list.head.next = new Node (2);
    list.head.next.next = new Node (3);
    list.head.next.next.next = new Node (4);
    list.head.next.next.next.next = new Node (5);
    list.head.next.next.next.next.next = new Node (6);
    System.out.println ("Given Linked list");
    list.printList (head);
    head = list.reverse (head);
    System.out.println ("");
    System.out.println ("Reversed linked list ");
    list.printList (head);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_39783459_41_83
39781864_45523522_38_54
Title: Reverse right half of a linked list 
----------------------------------------

public static ListNode reverse (ListNode start) {
    int counter = 0;
    ListNode node = start;
    ListNode pre = start;
    ListNode result = start;
    while (node != null) {
        counter += 1;
        node = node.next;
    }
    for (int i = 0;
    i < (counter / 2); i ++) {
        pre = start;
        start = start.next;
    }
    ListNode temp = null;
    ListNode preNext = null;
    while (start != null) {
        temp = start.next;
        start.next = preNext;
        preNext = start;
        start = temp;
    }
    pre.next = preNext;
    return start;
}
----------------------------------------

Node reverse (Node node) {
    int count = 0;
    Node doo = node;
    Node mid_pre = node;
    Node mid = node;
    while (doo.next != null) {
        if ((count & 1) == 1) {
            mid = mid.next;
        }
        doo = doo.next;
        count ++;
    }
    mid.next = rev (mid.next);
    return node;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39781864_42642495_3_18
39781864_45523522_64_80
Title: Reverse right half of a linked list 
----------------------------------------

public static void main (String args []) {
    Node head = new Node ("Sameer");
    Node temp = addNode ("Monica", head);
    temp = addNode ("Doug", temp);
    temp = addNode ("Eric", temp);
    temp = addNode ("Charlie", temp);
    temp = addNode ("Dan", temp);
    temp = addNode ("Enrique", temp);
    temp = addNode ("Ankitha", temp);
    addNode ("Chad", temp);
    SolveMidLinkedList (head);
}
----------------------------------------

public static void main (String [] args) {
    LinkedList list = new LinkedList ();
    list.head = new Node (1);
    list.head.next = new Node (2);
    list.head.next.next = new Node (3);
    list.head.next.next.next = new Node (4);
    list.head.next.next.next.next = new Node (5);
    list.head.next.next.next.next.next = new Node (6);
    System.out.println ("Given Linked list");
    list.printList (head);
    head = list.reverse (head);
    System.out.println ("");
    System.out.println ("Reversed linked list ");
    list.printList (head);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39784817_39785087_1_16
39784817_39787487_1_12
Title: How to solve maximum-Firstminimum in an array? 
----------------------------------------

static int maxDifference (int [] a) {
    int minimum, diff, maximum = - 1;
    if (a.length == 0) {
        return - 1;
    }
    minimum = a [0];
    maximum = a [0];
    for (int i = 1;
    i < a.length; i ++) {
        minimum = Math.min (minimum, a [i]);
        maximum = Math.max (maximum, a [i]);
    }
    diff = maximum - minimum;
    return diff;
}
----------------------------------------

static int maxDifference (int [] a) {
    int min = a [0];
    int max = a [0];
    for (int i = 1;
    i < a.length; i ++) {
        if (min > a [i]) min = a [i];

        if (max < a [i]) max = a [i];

    }
    return (max - min);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3979289_3984916_25_33
3979289_3984916_43_53
Title: Java Thread Wait-Notify 
----------------------------------------

void run () {
    while (something) {
        if (isPaused) {
            synchronized (k) {
                k.wait ();
            }
            isPaused = false;
        }
    }
}
----------------------------------------

void run () {
    while (something) {
        if (isPaused) {
            synchronized (k) {
                k.wait ();
            }
            isPaused = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3979289_3984916_25_33
3979289_3984916_6_18
Title: Java Thread Wait-Notify 
----------------------------------------

void run () {
    while (something) {
        if (isPaused) {
            synchronized (k) {
                k.wait ();
            }
            isPaused = false;
        }
    }
}
----------------------------------------

void run () {
    while (something) {
        b.pause ();
        c.pause ();
        synchronized (k) {
            k.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3979289_3984916_43_53
3979289_3984916_6_18
Title: Java Thread Wait-Notify 
----------------------------------------

void run () {
    while (something) {
        if (isPaused) {
            synchronized (k) {
                k.wait ();
            }
            isPaused = false;
        }
    }
}
----------------------------------------

void run () {
    while (something) {
        b.pause ();
        c.pause ();
        synchronized (k) {
            k.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39797900_39798035_4_17
39797900_39798099_4_16
Title: Password Checker in java with do while 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    double password, reentered;
    do {
        System.out.println ("Enter Your password");
        password = sc.nextDouble ();
        double reentered = sc.nextDouble ();
        if (! password.equals (reentered)) {
            System.out.println ("Passwords do not match. Please retry");
        } else {
            break;
        }
    } while (True);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    double password;
    double reentered;
    do {
        System.out.println ("(Re)Enter Password:");
        password = sc.nextDouble ();
        System.out.println ("Confirm Password:");
        reentered = sc.nextDouble ();
    } while (password != reentered);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39799944_39800083_1_26
39799944_39800162_2_18
Title: Finding missing integers in a sorted array 
----------------------------------------

public static void main (String [] args) {
    int nMin = 5;
    int nMax = 50;
    int x = 20;
    Random r = new Random ();
    Integer [] arr = new Integer [x];
    for (int i = 0;
    i < x; i ++) {
        int val = nMin + r.nextInt (nMax - nMin);
        System.out.println (val);
        arr [i] = val;
    }
    Set < Integer > set = new HashSet < Integer > (Arrays.asList (arr));
    List < Integer > missing = new ArrayList < > ();
    for (int i = nMin;
    i < nMax; i ++) {
        if (! set.contains (i)) {
            missing.add (i);
        }
    }
    System.out.println ("Missing elements count " + missing.size ());
    System.out.println ("Missing elements: " + missing.toString ());
}
----------------------------------------

public static void main (String [] args) {
    int runs = 100;
    int nMin = 0;
    int nMax = 10;
    int x = 10;
    double missingSum = 0;
    for (int run = 0;
    run < runs; run ++) {
        Integer [] arr = randomize (nMin, nMax, x);
        List < Integer > missing = getMissingElements (nMin, nMax, arr);
        missingSum += missing.size ();
    }
    double avg = missingSum / runs;
    System.out.println ("Missing elements avarage count: " + avg);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39804782_39805008_11_37
39804782_39805127_12_38
Title: Using StringBuilder getting null as output 
----------------------------------------

static String decrypt (String cipher) {
    String [] cipher_char_codes = cipher.split ("#");
    StringBuilder message = new StringBuilder ();
    for (String code : cipher_char_codes) {
        int index = Integer.parseInt (code);
        if (index > 26) {
            char [] pair = code.toCharArray ();
            for (int i = 0;
            i < pair.length; i ++) {
                int x = Integer.parseInt ("" + code.charAt (i));
                message.append ((char) ('a' + ((x - 1) % 26)));
            }
        } else {
            message.append ((char) ('a' + ((index - 1) % 26)));
        }
    }
    return message.toString ();
}
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39804782_39805008_11_37
39804782_39809663_14_28
Title: Using StringBuilder getting null as output 
----------------------------------------

static String decrypt (String cipher) {
    String [] cipher_char_codes = cipher.split ("#");
    StringBuilder message = new StringBuilder ();
    for (String code : cipher_char_codes) {
        int index = Integer.parseInt (code);
        if (index > 26) {
            char [] pair = code.toCharArray ();
            for (int i = 0;
            i < pair.length; i ++) {
                int x = Integer.parseInt ("" + code.charAt (i));
                message.append ((char) ('a' + ((x - 1) % 26)));
            }
        } else {
            message.append ((char) ('a' + ((index - 1) % 26)));
        }
    }
    return message.toString ();
}
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39804782_39805127_12_38
39804782_39809663_14_28
Title: Using StringBuilder getting null as output 
----------------------------------------

private static String decrypt (final String s) {
    final List < Integer > crypt = new ArrayList < > ();
    final String [] groups = s.split ("#");
    for (int i = 0;
    i < groups.length; i ++) {
        final String group = groups [i];
        int j = 0;
        if ((i == (groups.length - 1)) && ! s.endsWith ("#")) {
            j = group.length ();
        }
        if (group.length () > 2) {
            j = group.length () - 2;
        }
        for (int k = 0;
        k < j; k ++) {
            crypt.add (Integer.valueOf (group.substring (k, k + 1)));
        }
        if (j < group.length ()) {
            crypt.add (Integer.valueOf (group.substring (j, group.length ())));
        }
    }
    final StringBuilder n = new StringBuilder (crypt.size ());
    for (final Integer c : crypt) {
        final char d = (char) (('a' + c) - 1);
        n.append (d);
    }
    return n.toString ();
}
----------------------------------------

public static String decrypt (final String msg) {
    final Pattern regex = Pattern.compile ("((\\d\\d)(#)|(\\d))");
    final Matcher regexMatcher = regex.matcher (msg);
    final StringBuffer result = new StringBuffer ();
    String c;
    while (regexMatcher.find ()) {
        if (regexMatcher.group (2) == null) {
            c = regexMatcher.group (1);
        } else {
            c = regexMatcher.group (2);
        }
        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39807698_39807980_9_20
39807698_39808093_23_33
Title: "Threads Waiting in Line Queue Java" 
----------------------------------------

public void run () {
    System.out.println (getName () + " is waiting");
    if (gender == 1) {
        synchronized (gender1Lock) {
            System.out.println (getName () + " is Using");
        }
    } else if (gender == 2) {
        synchronized (gender1Lock) {
            System.out.println (getName () + " is Using");
        }
    }

}
----------------------------------------

public void run () {
    System.out.println (name + " is using");
    try {
        long sleepTime = MIN_SLEEP_TIME + random.nextInt (MAX_SLEEP_TIME - MIN_SLEEP_TIME);
        if (female) {
            sleepTime += FEMALE_SLEEP_BONUS;
        }
        Thread.sleep (sleepTime);
    } catch (InterruptedException e) {
    }
    System.out.println (name + " is done");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3980832_3980922_1_14
3980832_3984119_1_11
Title: "Print a xy matrix java" 
----------------------------------------

public static void main (String [] args) {
    for (int w = 1;
    w <= 6; w ++) {
        System.out.println ("");
        for (int p = w;
        p <= 6; p ++) {
            System.out.print (p + "");
        }
        for (int q = 1;
        q < w; q ++) {
            System.out.print (q + "");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int w = 1;
    w <= 6; w ++) {
        for (int p = w;
        p <= 6; p ++) {
            System.out.print (p + "");
        }
        for (int p = 1;
        p < w; p ++) {
            System.out.print (p + "");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_39809341_7_29
39808426_44623411_5_15
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the string");
    String inputStr = scanner.next ();
    System.out.println ("Given String = " + inputStr);
    char [] charArray = inputStr.toCharArray ();
    int strlength = (charArray.length) - 1;
    boolean isPalindrom = true;
    for (int count = 0;
    count < charArray.length && strlength >= 0; count ++, strlength --) {
        if (charArray [count] != charArray [strlength]) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) {
        System.out.println ("palindrom");
    } else {
        System.out.println ("not palindrom");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = null;
    String str1 = null;
    sc = new Scanner (System.in);
    if (sc != null) {
        System.out.println ("Enter First String");
        str1 = sc.nextLine ();
    }
    strPalindrom (str1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_39809341_7_29
39808426_45161658_2_13
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the string");
    String inputStr = scanner.next ();
    System.out.println ("Given String = " + inputStr);
    char [] charArray = inputStr.toCharArray ();
    int strlength = (charArray.length) - 1;
    boolean isPalindrom = true;
    for (int count = 0;
    count < charArray.length && strlength >= 0; count ++, strlength --) {
        if (charArray [count] != charArray [strlength]) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) {
        System.out.println ("palindrom");
    } else {
        System.out.println ("not palindrom");
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "malayalam";
    String rev = "";
    for (int i = s.length () - 1;
    i >= 0; i --) {
        rev = rev + s.charAt (i);
    }
    if (rev.equals (s)) {
        System.out.println ("Palindrom");
    } else {
        System.out.println ("Not Palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_39809341_7_29
39808426_47831386_4_18
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the string");
    String inputStr = scanner.next ();
    System.out.println ("Given String = " + inputStr);
    char [] charArray = inputStr.toCharArray ();
    int strlength = (charArray.length) - 1;
    boolean isPalindrom = true;
    for (int count = 0;
    count < charArray.length && strlength >= 0; count ++, strlength --) {
        if (charArray [count] != charArray [strlength]) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) {
        System.out.println ("palindrom");
    } else {
        System.out.println ("not palindrom");
    }
}
----------------------------------------

public static void main (String...as) {
    int check = 0;
    Scanner s = new Scanner (System.in);
    String str = s.nextLine ();
    int l = str.length ();
    for (int i = 0;
    i < l; i ++) {
        if (str.charAt (i) != str.charAt (l - 1 - i)) check ++;

    }
    if (check == 0) System.out.println ("yes it's palindrome");
    else System.out.println ("no it's not.");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_39809341_7_29
39808426_49606145_3_23
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the string");
    String inputStr = scanner.next ();
    System.out.println ("Given String = " + inputStr);
    char [] charArray = inputStr.toCharArray ();
    int strlength = (charArray.length) - 1;
    boolean isPalindrom = true;
    for (int count = 0;
    count < charArray.length && strlength >= 0; count ++, strlength --) {
        if (charArray [count] != charArray [strlength]) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) {
        System.out.println ("palindrom");
    } else {
        System.out.println ("not palindrom");
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "dad";
    char [] rev = str.toCharArray ();
    int i = 0;
    int j = rev.length - 1;
    while (i < j) {
        char temp = rev [i];
        rev [i] = rev [j];
        rev [j] = temp;
        i ++;
        j --;
    }
    System.out.println (rev);
    System.out.println ();
    if (str.equals (String.valueOf (rev))) {
        System.out.println ("Yes! It is palindrom");
    } else {
        System.out.println ("No! It is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_44623411_5_15
39808426_45161658_2_13
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = null;
    String str1 = null;
    sc = new Scanner (System.in);
    if (sc != null) {
        System.out.println ("Enter First String");
        str1 = sc.nextLine ();
    }
    strPalindrom (str1);
}
----------------------------------------

public static void main (String [] args) {
    String s = "malayalam";
    String rev = "";
    for (int i = s.length () - 1;
    i >= 0; i --) {
        rev = rev + s.charAt (i);
    }
    if (rev.equals (s)) {
        System.out.println ("Palindrom");
    } else {
        System.out.println ("Not Palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_44623411_5_15
39808426_47831386_4_18
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = null;
    String str1 = null;
    sc = new Scanner (System.in);
    if (sc != null) {
        System.out.println ("Enter First String");
        str1 = sc.nextLine ();
    }
    strPalindrom (str1);
}
----------------------------------------

public static void main (String...as) {
    int check = 0;
    Scanner s = new Scanner (System.in);
    String str = s.nextLine ();
    int l = str.length ();
    for (int i = 0;
    i < l; i ++) {
        if (str.charAt (i) != str.charAt (l - 1 - i)) check ++;

    }
    if (check == 0) System.out.println ("yes it's palindrome");
    else System.out.println ("no it's not.");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_44623411_5_15
39808426_49606145_3_23
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = null;
    String str1 = null;
    sc = new Scanner (System.in);
    if (sc != null) {
        System.out.println ("Enter First String");
        str1 = sc.nextLine ();
    }
    strPalindrom (str1);
}
----------------------------------------

public static void main (String [] args) {
    String str = "dad";
    char [] rev = str.toCharArray ();
    int i = 0;
    int j = rev.length - 1;
    while (i < j) {
        char temp = rev [i];
        rev [i] = rev [j];
        rev [j] = temp;
        i ++;
        j --;
    }
    System.out.println (rev);
    System.out.println ();
    if (str.equals (String.valueOf (rev))) {
        System.out.println ("Yes! It is palindrom");
    } else {
        System.out.println ("No! It is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_45161658_2_13
39808426_47831386_4_18
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    String s = "malayalam";
    String rev = "";
    for (int i = s.length () - 1;
    i >= 0; i --) {
        rev = rev + s.charAt (i);
    }
    if (rev.equals (s)) {
        System.out.println ("Palindrom");
    } else {
        System.out.println ("Not Palindrom");
    }
}
----------------------------------------

public static void main (String...as) {
    int check = 0;
    Scanner s = new Scanner (System.in);
    String str = s.nextLine ();
    int l = str.length ();
    for (int i = 0;
    i < l; i ++) {
        if (str.charAt (i) != str.charAt (l - 1 - i)) check ++;

    }
    if (check == 0) System.out.println ("yes it's palindrome");
    else System.out.println ("no it's not.");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_45161658_2_13
39808426_49606145_3_23
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String [] args) {
    String s = "malayalam";
    String rev = "";
    for (int i = s.length () - 1;
    i >= 0; i --) {
        rev = rev + s.charAt (i);
    }
    if (rev.equals (s)) {
        System.out.println ("Palindrom");
    } else {
        System.out.println ("Not Palindrom");
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "dad";
    char [] rev = str.toCharArray ();
    int i = 0;
    int j = rev.length - 1;
    while (i < j) {
        char temp = rev [i];
        rev [i] = rev [j];
        rev [j] = temp;
        i ++;
        j --;
    }
    System.out.println (rev);
    System.out.println ();
    if (str.equals (String.valueOf (rev))) {
        System.out.println ("Yes! It is palindrom");
    } else {
        System.out.println ("No! It is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39808426_47831386_4_18
39808426_49606145_3_23
Title: String palindrome without using built in functions 
----------------------------------------

public static void main (String...as) {
    int check = 0;
    Scanner s = new Scanner (System.in);
    String str = s.nextLine ();
    int l = str.length ();
    for (int i = 0;
    i < l; i ++) {
        if (str.charAt (i) != str.charAt (l - 1 - i)) check ++;

    }
    if (check == 0) System.out.println ("yes it's palindrome");
    else System.out.println ("no it's not.");

}
----------------------------------------

public static void main (String [] args) {
    String str = "dad";
    char [] rev = str.toCharArray ();
    int i = 0;
    int j = rev.length - 1;
    while (i < j) {
        char temp = rev [i];
        rev [i] = rev [j];
        rev [j] = temp;
        i ++;
        j --;
    }
    System.out.println (rev);
    System.out.println ();
    if (str.equals (String.valueOf (rev))) {
        System.out.println ("Yes! It is palindrom");
    } else {
        System.out.println ("No! It is not palindrom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39817381_39817409_60_80
39817381_39843508_109_143
Title: How do I put label under radio button within a panel with Java Swing/awt 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String text = fromPanel.getText ();
    try {
        double fromTemp = Double.parseDouble (text.trim ());
        TempScale fromScale = fromPanel.getTempScalesPanel ().getSelectedTempScale ();
        double kelvinValue = fromScale.convertToKelvin (fromTemp);
        TempScale toScale = toPanel.getTempScalesPanel ().getSelectedTempScale ();
        double toValue = toScale.convertFromKelvin (kelvinValue);
        String toValueString = String.format ("%.2f", toValue);
        toPanel.setText (toValueString);
    } catch (NumberFormatException e1) {
        Component parentComponent = fromPanel;
        String message = "Text must be a valid number: " + text;
        String title = "Invalid Text Entered";
        int messageType = JOptionPane.ERROR_MESSAGE;
        JOptionPane.showMessageDialog (parentComponent, message, title, messageType);
        fromPanel.setText ("");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == btnConvert) {
        if (radFromCelsius.isSelected () && radToFahrenheit.isSelected ()) {
            int strInput = Integer.parseInt (txtFromTemp.getText ());
            int celsius = strInput * 9 / 5 + 32;
            txtToTemp.setText (Integer.toString (celsius));
        } else if (radFromCelsius.isSelected () && radToCelsius.isSelected () || radFromFahrenheit.isSelected () && radToFahrenheit.isSelected () || radFromKelvin.isSelected () && radToKelvin.isSelected ()) {
            txtToTemp.setText (txtFromTemp.getText ());
        } else if (radToCelsius.isSelected () && radFromFahrenheit.isSelected ()) {
            int strInput = Integer.parseInt (txtFromTemp.getText ());
            int fahrenheit = (strInput - 32) * 5 / 9;
            txtToTemp.setText (Integer.toString (fahrenheit));
        } else if (radFromKelvin.isSelected () && radToCelsius.isSelected ()) {
            double strInput = Integer.parseInt (txtFromTemp.getText ());
            double celsius = strInput - 273.15;
            txtToTemp.setText (Double.toString (celsius));
        } else if (radFromKelvin.isSelected () && radToFahrenheit.isSelected ()) {
            double strInput = Integer.parseInt (txtFromTemp.getText ());
            double fahrenheit = strInput - 459.67;
            txtToTemp.setText (Double.toString (fahrenheit));
        } else if (radFromCelsius.isSelected () && radToKelvin.isSelected ()) {
            double strInput = Integer.parseInt (txtFromTemp.getText ());
            double celsius = strInput + 273.15;
            txtToTemp.setText (Double.toString (celsius));
        } else if (radFromFahrenheit.isSelected () && radToKelvin.isSelected ()) {
            double strInput = Integer.parseInt (txtFromTemp.getText ());
            double fahrenheit = strInput + 255.37;
            txtToTemp.setText (Double.toString (fahrenheit));
        }

    } else if (e.getSource () == btnExit) {
        System.exit (0);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39817381_39817848_1_31
39817381_39843508_19_102
Title: How do I put label under radio button within a panel with Java Swing/awt 
----------------------------------------

public TemperatureConversion () {
    BoxLayout boxLayout = new BoxLayout (getContentPane (), BoxLayout.Y_AXIS);
    setLayout (boxLayout);
    pnlFromRadioButton = new JPanel ();
    pnlFromRadioButton.add (new Label ("From Panel"));
    pnlFromTemp = new JPanel ();
    pnlFromTemp.add (new JLabel ("Enter Temperature: [ ]"));
    pnlToRadioButton = new JPanel ();
    pnlToRadioButton.add (new Label ("To Panel"));
    pnlButton = new JPanel ();
    pnlButton.add (new Label ("Buttons Panel"));
    add (pnlFromRadioButton);
    add (pnlFromTemp);
    add (pnlToRadioButton);
    add (pnlButton);
    setVisible (true);
    setSize (400, 300);
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------

public TemperatureConversion () {
    super ("Temperature");
    radFromCelsius = new JRadioButton ("Celsius", true);
    radFromFahrenheit = new JRadioButton ("Fahrenheit");
    radFromKelvin = new JRadioButton ("Kelvin");
    lblFromTemp = new JLabel ("Enter Temperature: ");
    pnlFrom = new JPanel ();
    btnConvert = new JButton ("Convert");
    btnExit = new JButton ("Exit");
    pnlButton = new JPanel ();
    txtFromTemp = new JTextField (3);
    lblToTemp = new JLabel ("Comparable Temperature: ");
    txtToTemp = new JTextField (3);
    pnlTo = new JPanel ();
    pnlEnterTemp = new JPanel ();
    pnlComparableTemp = new JPanel ();
    pnlFromRadioButton = new JPanel ();
    pnlToRadioButton = new JPanel ();
    btnExit.addActionListener (new MyButtonListener ());
    btnConvert.addActionListener (new MyButtonListener ());
    bgFrom = new ButtonGroup ();
    bgFrom.add (radFromCelsius);
    bgFrom.add (radFromFahrenheit);
    bgFrom.add (radFromKelvin);
    radToCelsius = new JRadioButton ("Celsius");
    radToFahrenheit = new JRadioButton ("Fahrenheit", true);
    radToKelvin = new JRadioButton ("Kelvin");
    bgTo = new ButtonGroup ();
    bgTo.add (radToCelsius);
    bgTo.add (radToFahrenheit);
    bgTo.add (radToKelvin);
    pnlFrom.setLayout (new GridLayout (2, 1));
    pnlFrom.add (pnlFromRadioButton);
    pnlFrom.add (pnlEnterTemp);
    pnlTo.setLayout (new GridLayout (2, 1));
    pnlTo.add (pnlToRadioButton);
    pnlTo.add (pnlComparableTemp);
    pnlFrom.setBorder (BorderFactory.createTitledBorder ("From"));
    pnlTo.setBorder (BorderFactory.createTitledBorder ("To"));
    pnlFromRadioButton.add (radFromCelsius);
    pnlFromRadioButton.add (radFromFahrenheit);
    pnlFromRadioButton.add (radFromKelvin);
    pnlToRadioButton.add (radToCelsius);
    pnlToRadioButton.add (radToFahrenheit);
    pnlToRadioButton.add (radToKelvin);
    pnlButton.add (btnConvert);
    pnlButton.add (btnExit);
    pnlEnterTemp.add (lblFromTemp);
    pnlEnterTemp.add (txtFromTemp);
    pnlComparableTemp.add (lblToTemp);
    txtToTemp.setEditable (false);
    pnlComparableTemp.add (txtToTemp);
    add (pnlFrom, BorderLayout.NORTH);
    add (pnlTo, BorderLayout.CENTER);
    add (pnlButton, BorderLayout.SOUTH);
    setVisible (true);
    setSize (400, 300);
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    pack ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39821119_39821144_2_11
39821119_39821263_3_21
Title: Converting a while loop in a do-while loop in Java 
----------------------------------------

public static void main (String [] args) {
    int number = 0;
    Scanner input = new Scanner (System.in);
    int sum = 0;
    do {
        System.out.println ("Enter an integer " + "(the input ends if it is  0)");
        number = input.nextInt ();
        sum += number;
    } while (number != 0);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int sum = 0;
    System.out.println ("Enter an integer " + "(the input ends if it is 0)");
    int number = input.nextInt ();
    if (number != 0) {
        do {
            sum += number;
            System.out.println ("Enter an integer " + "(the input ends if it is 0)");
            number = input.nextInt ();
        } while (number != 0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39821119_39821263_3_21
39821119_39821401_3_13
Title: Converting a while loop in a do-while loop in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int sum = 0;
    System.out.println ("Enter an integer " + "(the input ends if it is 0)");
    int number = input.nextInt ();
    if (number != 0) {
        do {
            sum += number;
            System.out.println ("Enter an integer " + "(the input ends if it is 0)");
            number = input.nextInt ();
        } while (number != 0);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int sum = 0;
    int number;
    do {
        System.out.println ("Enter an integer " + "(the input ends if it is 0)");
        number = input.nextInt ();
        sum += number;
    } while (number != 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39823137_39823273_1_11
39823137_39823489_1_16
Title: Java: Count the number of integers in a string 
----------------------------------------

public static int countIntegers (String input) {
    String [] parsed = input.split (",");
    int count = 0;
    for (String s : parsed) {
        if (s.trim ().matches ("^-?\\d+$")) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int countIntegers (String input) {
    int count = 0;
    boolean isPreviousDigit = false;
    for (int i = 0;
    i < input.length (); i ++) {
        if (Character.isDigit (input.charAt (i))) {
            if (! isPreviousDigit) {
                count ++;
                isPreviousDigit = true;
            }
        } else {
            isPreviousDigit = false;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39824728_39826165_1_12
39824728_39826989_3_70
Title: Best way to implement graceful cancel for running async jobs in java 
----------------------------------------

public static void main (String [] args) {
    ExecutorService executor = Executors.newSingleThreadExecutor ();
    List < Future < IResult > > results = new ArrayList < > ();
    for (int i = 0;
    i < 10; i ++) {
        results.add (executor.submit (new Job (i)));
    }
    executor.shutdownNow ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    IJob mockJob = new MockJob ();
    FutureTask < IResult > asyncTask = new FutureTask < > (mockJob :: execute);
    Thread mockJobThread = new Thread (asyncTask);
    Thread showResultThread = new Thread (() -> {
        try {
            IResult result = asyncTask.get ();
            MockResult mockResult = (MockResult) result;
            Thread thread = Thread.currentThread ();
            System.out.println (String.format ("%s: isCancelled = %s, result = %d", thread.getName (), mockResult.isCancelled (), mockResult.getResult ()));
        } catch (InterruptedException | ExecutionException ex) {
        }
    });
    Thread monitorThread = new Thread (() -> {
        try {
            while (! asyncTask.isDone ()) {
                Thread thread = Thread.currentThread ();
                System.out.println (String.format ("%s: asyncTask.isDone = %s", thread.getName (), asyncTask.isDone ()));
                Thread.sleep (1000);
            }
        } catch (InterruptedException ex) {
        }
        Thread thread = Thread.currentThread ();
        System.out.println (String.format ("%s: asyncTask.isDone = %s", thread.getName (), asyncTask.isDone ()));
    });
    Thread cancelThread = new Thread (() -> {
        try {
            Thread.sleep (5000);
            if (! asyncTask.isDone ()) {
                Thread thread = Thread.currentThread ();
                System.out.println (String.format ("%s: job.cancel()", thread.getName ()));
                mockJob.cancel ();
            }
        } catch (InterruptedException ex) {
        }
    });
    monitorThread.start ();
    showResultThread.start ();
    cancelThread.setDaemon (true);
    cancelThread.start ();
    mockJobThread.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39826817_39828308_24_34
39826817_39828308_52_61
Title: Parceler: How to solve issue: error: Item is abstract; cannot be instantiated 
----------------------------------------

public NavigationItem fromParcel (android.os.Parcel parcel) {
    NavigationItem item = null;
    int key = parcel.readInt ();
    if (key == KEY_CategoryItem) {
        item = Parcels.unwrap (parcel.readParcelable (CategoryItem.class.getClassLoader ()));
    }
    if (key == KEY_SubCatItem) {
        item = Parcels.unwrap (parcel.readParcelable (SubCategoryItem.class.getClassLoader ()));
    }
    return item;
}
----------------------------------------

public List < NavigationItem > fromParcel (android.os.Parcel parcel) {
    int size = parcel.readInt ();
    if (size < 0) return null;

    List < NavigationItem > items = new ArrayList < NavigationItem > ();
    for (int i = 0;
    i < size; ++ i) {
        NavigationItem item = Parcels.unwrap (parcel.readParcelable (NavigationItem.class.getClassLoader ()));
        items.add (item);
    }
    return items;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39826817_39828308_40_49
39826817_39828308_6_21
Title: Parceler: How to solve issue: error: Item is abstract; cannot be instantiated 
----------------------------------------

public void toParcel (List < NavigationItem > input, android.os.Parcel parcel) {
    if (input == null) {
        parcel.writeInt (- 1);
    } else {
        parcel.writeInt (input.size ());
        for (NavigationItem item : input) {
            parcel.writeParcelable (Parcels.wrap (item), 0);
        }
    }
}
----------------------------------------

public void toParcel (NavigationItem input, android.os.Parcel parcel) {
    if (input == null) {
        parcel.writeInt (- 1);
    } else {
        if (input instanceof CategoryItem) {
            parcel.writeInt (KEY_CategoryItem);
            parcel.writeParcelable (Parcels.wrap ((CategoryItem) input), 0);
        }
        if (input instanceof SubCategoryItem) {
            parcel.writeInt (KEY_SubCatItem);
            parcel.writeParcelable (Parcels.wrap ((SubCategoryItem) input), 0);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39828967_39987280_1_15
39828967_39995314_1_20
Title: Spring OutputStream - download pptx with IE 
----------------------------------------

@RequestMapping ("/ppt")
public void downloadPpt (HttpServletRequest request, HttpServletResponse response) throws IOException {
    Resource resource = new ClassPathResource ("Presentation1.pptx");
    InputStream resourceInputStream = resource.getInputStream ();
    response.setHeader ("Content-Disposition", "attachment; filename=\"Presentation1.pptx\"");
    response.setContentLengthLong (resource.contentLength ());
    byte [] buffer = new byte [1024];
    int len;
    while ((len = resourceInputStream.read (buffer)) != - 1) {
        response.getOutputStream ().write (buffer, 0, len);
    }
}
----------------------------------------

@RequestMapping (value = "/downloadfile", method = RequestMethod.GET)
@ResponseBody
public void downloadfile (HttpServletRequest request, HttpServletResponse response) throws Exception {
    ServletOutputStream servletOutputStream = null;
    try {
        response.setContentType ("application/octet-stream");
        response.setHeader ("Content-Disposition", "attachment; filename=downloadppt.pptx");
        byte [] ppt = downloadFile ();
        servletOutputStream = response.getOutputStream ();
        servletOutputStream.write (ppt);
    } catch (Exception e) {
        throw e;
    } finally {
        servletOutputStream.flush ();
        servletOutputStream.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3983981_3984196_5_33
3983981_3984571_1_63
Title: How do I turn my custom linked list into an array? 
----------------------------------------

public static < E > E [] toArray (E [] a, Class < E > clazz) {
    Node < E > root = null;
    Node < E > prev = null;
    Node < E > curr = null;
    for (E e : a) {
        curr = new Node < E > (e);
        if (prev != null) {
            prev.setNext (curr);
        } else {
            root = curr;
        }
        prev = curr;
    }
    curr = root;
    E [] newArray = (E []) Array.newInstance (clazz, a.length);
    int i = 0;
    while (curr != null) {
        newArray [i] = curr.value ();
        curr = curr.next ();
        i ++;
    }
    return newArray;
}
----------------------------------------

E [] toArray (E [] a) {
    E [] result;
    Class < ? > type;
    Node < E > head, temp, current;
    type = a.getClass ().getComponentType ();
    result = (E []) java.lang.reflect.Array.newInstance (type, a.length);
    for (int idx = 0;
    idx < a.length; idx ++) result [idx] = a [idx];

    for (int idx = 0;
    idx < result.length; idx ++) {
        int best = idx;
        for (int jdx = idx + 1;
        jdx < result.length; jdx ++) {
            if (result [best].compareTo (result [jdx]) > 0) {
                best = jdx;
            }
        }
        if (best != idx) {
            E temporal = result [idx];
            result [idx] = result [best];
            result [best] = temporal;
        }
    }
    head = new Node < E > (null, null);
    current = head;
    for (E element : result) {
        temp = new Node < E > (element, null);
        current.setNext (temp);
        current = current.next ();
    }
    current = head.next;
    for (int index = 0;
    current != null; current = current.next) result [index ++] = current.value ();

    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39844030_39844078_4_14
39844030_39844079_2_11
Title: I don't know how to fix this error: reached end of file while parsing 
----------------------------------------

public static void main (String [] args) {
    int income = 4001;
    if (income > 3000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 3000");
    } else if (income > 4000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 4000");
    } else if (income > 5000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 5000");
    }

}
----------------------------------------

public static void main (String [] args) {
    int income = 4001;
    if (income > 5000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 5000");
    } else if (income > 4000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 4000");
    } else if (income > 3000) {
        JOptionPane.showMessageDialog (null, "Income is greater than 3000");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39844058_39866814_107_122
39844058_39866814_126_140
Title: Javafx programming ActionHandler 
----------------------------------------

public void handle (ActionEvent event) {
    if (event.getSource () == red) {
        red.setStyle ("-fx-background-color: red;");
    } else if (event.getSource () == yellow) {
        yellow.setStyle ("-fx-background-color: yellow;");
    } else {
        orange.setStyle ("-fx-background-color: orange;");
    }

}
----------------------------------------

public void handle (ActionEvent radio) {
    if (radio.getSource () == green) {
        label.setTextFill (Color.GREEN);
    }
    if (radio.getSource () == blue) {
        label.setTextFill (Color.BLUE);
    }
    if (radio.getSource () == cyan) {
        label.setTextFill (Color.BLUE);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39844270_39844486_3_15
39844270_39844544_5_22
Title: problems with ascii conversion java 
----------------------------------------

public static void main (String [] args) {
    int Zero = (char) 0;
    Scanner Keyboard = new Scanner (System.in);
    System.out.println ("Enter a two-digit number:");
    String entered_digits = Keyboard.nextLine ();
    int FirstDigit = Integer.parseInt (String.valueOf (entered_digits.charAt (0)));
    System.out.println ("The first digit that was entered was:" + " " + FirstDigit);
    int SecondDigit = Integer.parseInt (String.valueOf (entered_digits.charAt (1)));
    System.out.println ("The second digit that was entered was:" + " " + SecondDigit);
    int EnteredNumberPlusTen = ((++ FirstDigit * 10) + SecondDigit);
    System.out.println (EnteredNumberPlusTen);
}
----------------------------------------

public static void main (String [] args) {
    Scanner Keyboard = new Scanner (System.in);
    System.out.println ("Enter a two-digit number:");
    String entered_digits = Keyboard.nextLine ();
    char sr [] = entered_digits.toCharArray ();
    int FirstDigit = (int) sr [0];
    System.out.println ("The first digit that was entered was:" + " " + sr [0]);
    int SecondDigit = (int) sr [1];
    System.out.println ("The second digit that was entered was:" + " " + sr [1]);
    int AsciiToInt = FirstDigit;
    AsciiToInt ++;
    int SecondDigits = (char) SecondDigit;
    int EnteredNumberPlusTen = ((AsciiToInt * 10) + SecondDigits);
    System.out.println (AsciiToInt);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39859633_39859813_4_27
39859633_39861955_5_34
Title: How to read each individual digit of a number in Java 
----------------------------------------

public static void main (String args []) {
    Scanner stdin = new Scanner (System.in);
    System.out.println ("Enter in a number: ");
    int number = stdin.nextInt ();
    int sum = 0;
    int num = number;
    String numToString = "";
    while (num > 0) {
        int lastDigit = num % 10;
        numToString += lastDigit + " + ";
        sum = sum + lastDigit;
        num = num / 10;
    }
    numToString = numToString.substring (0, numToString.lastIndexOf ("+")).trim ();
    System.out.println (numToString + " = " + sum);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter number -> ");
    int number = input.nextInt ();
    int sum = 0;
    String numStr = "" + number;
    while (number > 0) {
        int lastDigit = number % 10;
        sum += lastDigit;
        number = number / 10;
    }
    for (int i = 0;
    i < numStr.length (); i ++) {
        System.out.print (numStr.charAt (i));
        if (i == numStr.length () - 1) continue;
        else System.out.print (" + ");

    }
    System.out.print (" = " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39864455_39880896_7_18
39864455_39885781_3_12
Title: Instantiate EnumSet from one of two types of Enum 
----------------------------------------

public < E extends Enum < E > & EnumInterface > void setEnumType (int index) {
    switch (index) {
        case 1 :
            someEnum = (EnumSet < E >) EnumSet.allOf (Enum1.class);
            break;
        case 2 :
            someEnum = (EnumSet < E >) EnumSet.allOf (Enum2.class);
            break;
        default :
    }
}
----------------------------------------

public void setEnumType (int index) {
    switch (index) {
        case 1 :
            someEnum = EnumSet.allOf (EnumOne.class);
            break;
        case 2 :
            someEnum = EnumSet.allOf (EnumTwo.class);
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39881673_39881777_4_24
39881673_39887853_1_11
Title: '.class error' in java 
----------------------------------------

public static void main (String [] args) {
    Scanner scnr = new Scanner (System.in);
    int userWeight [] = new int [5];
    int i = 0;
    userWeight [0] = 0;
    userWeight [1] = 5;
    userWeight [2] = 6;
    userWeight [3] = 7;
    userWeight [4] = 9;
    System.out.println ("Enter weight 1: ");
    userWeight [0] = scnr.nextInt ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("This is runtime and you need to enter input");
    int [] userWeight = new int [5];
    for (int i = 0;
    i < userWeight.length; i ++) {
        userWeight [i] = sc.nextInt ();
        System.out.println (userWeight [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39885754_39885952_4_30
39885754_39885964_1_16
Title: Java palindrome until EOF 
----------------------------------------

public static void main (String args []) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter a number to check if it is a palindrome:");
    while (scanner.hasNextLine ()) {
        String num = scanner.nextLine ();
        String reverse = "";
        for (int i = 0;
        i < num.length (); i ++) {
            reverse = num.charAt (i) + reverse;
        }
        if (num.equals (reverse)) {
            System.out.println ("\nEntered number IS a palindrome.");
        } else {
            System.out.println ("\nEntered number is NOT a palindrome.");
        }
        System.out.println ("\nEnter a number to check if it is a palindrome:");
    }
    System.out.println ("\nProgram ended on request");
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    while (true) {
        System.out.println ("Enter a number to check if it is a palindrome:");
        if (! scanner.hasNextLine ()) {
            break;
        }
        String num = scanner.nextLine ();
        if (isPalindrome (num)) {
            System.out.printf ("%s is a palindrome%n", num);
        } else {
            System.out.printf ("%s is NOT a palindrome%n", num);
        }
    }
    System.out.println ("Program ended on request");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39886969_39902839_1_40
39886969_39945977_23_57
Title: Get full URL path from browser with using ServerSocket and Socket classes 
----------------------------------------

public void startServer () {
    try (ServerSocket serverSocket = new ServerSocket (8080)) {
        System.out.println ("Server is started");
        while (true) {
            Socket socket = serverSocket.accept ();
            System.out.println ("SERVER SOCKET TESTS:");
            System.out.println ("getChannel: " + serverSocket.getChannel ());
            System.out.println ("getInetAddress: " + serverSocket.getInetAddress ());
            System.out.println ("getLocalPort: " + serverSocket.getLocalPort ());
            System.out.println ("getLocalSocketAddress: " + serverSocket.getLocalSocketAddress ());
            System.out.println ();
            System.out.println ("CLIENT SOCKET TESTS:");
            System.out.println ("getChannel: " + socket.getChannel ());
            System.out.println ("getLocalAddress: " + socket.getLocalAddress ());
            System.out.println ("getLocalPort: " + socket.getLocalPort ());
            System.out.println ("getLocalSocketAddress: " + socket.getLocalSocketAddress ());
            System.out.println ("getRemoteSocketAddress: " + socket.getRemoteSocketAddress ());
            System.out.println ("getInetAddress: " + socket.getInetAddress ());
            System.out.println ("getInputStream: " + socket.getInputStream ());
            System.out.println ("getOutputStream: " + socket.getOutputStream ());
            System.out.println ();
            System.out.println ("URI - GET INFORMATION:");
            URI uri = new URI ("httpscheme://world.hello.com/thismy?parameter=value");
            System.out.println (uri.getHost ());
            System.out.println (uri.getPath ());
            System.out.println (uri.getQuery ());
            System.out.println (uri.getScheme ());
        }
    } catch (Exception e) {
        System.out.println ("error");
    }
}
----------------------------------------

public void startServer () {
    try (ServerSocket serverSocket = new ServerSocket (8080)) {
        boolean isClosed = false;
        System.out.println ("Server is started");
        while (true) {
            Socket socket = serverSocket.accept ();
            try {
                try (InputStream raw = socket.getInputStream ()) {
                    System.out.println ("=================BEFORE STARTING READING HEADER =======================");
                    System.out.println ("Collecting data to string array...");
                    headerData = getHeaderToArray (raw);
                    System.out.println ("+++++++++++++++++ AFTER ENDING READING HEADER +++++++++++++++++++++++");
                    System.out.println ("Hello World");
                }
            } catch (MalformedURLException ex) {
                System.err.println (socket.getLocalAddress () + " is not a parseable URL");
            } catch (IOException ex) {
                System.err.println (ex.getMessage ());
            }
        }
    } catch (Exception ex) {
        System.out.println ("error# " + ex.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39890167_39890823_5_34
39890167_39891563_7_26
Title: Display sequence using multiple threads 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("number of threads: ");
    final int numberOfThreads = scanner.nextInt ();
    System.out.print ("maximum number to print: ");
    final int maximumNumber = scanner.nextInt ();
    scanner.close ();
    for (int index = 0;
    index < numberOfThreads; ++ index) {
        final int workerIndex = index;
        Thread worker = new Thread (new Runnable () {
            public void run () {
                for (int number = workerIndex;
                number <= maximumNumber; number += numberOfThreads) {
                    print (workerIndex, number);
                }
            }}

        );
        worker.start ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try (Scanner scanner = new Scanner (System.in)) {
        System.out.print ("Number of threads: ");
        int numberOfThreads = scanner.nextInt ();
        System.out.print ("Maximum number to print: ");
        int maximumNumber = scanner.nextInt ();
        ExecutorService pool = Executors.newFixedThreadPool (numberOfThreads);
        Integer sequence = new Integer (0);
        IntStream.range (0, maximumNumber).forEach (i -> pool.submit (() -> {
            synchronized (sequence) {
                System.out.println (Thread.currentThread ().getName () + ": " + sequence ++);
            }
        }));
        pool.shutdown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39890167_39891563_7_26
39890167_39911913_6_46
Title: Display sequence using multiple threads 
----------------------------------------

public static void main (String [] args) {
    try (Scanner scanner = new Scanner (System.in)) {
        System.out.print ("Number of threads: ");
        int numberOfThreads = scanner.nextInt ();
        System.out.print ("Maximum number to print: ");
        int maximumNumber = scanner.nextInt ();
        ExecutorService pool = Executors.newFixedThreadPool (numberOfThreads);
        Integer sequence = new Integer (0);
        IntStream.range (0, maximumNumber).forEach (i -> pool.submit (() -> {
            synchronized (sequence) {
                System.out.println (Thread.currentThread ().getName () + ": " + sequence ++);
            }
        }));
        pool.shutdown ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("number of threads: ");
    final int numberOfThreads = scanner.nextInt ();
    System.out.print ("maximum number to print: ");
    final int maximumNumber = scanner.nextInt ();
    scanner.close ();
    final AtomicInteger currentNumber = new AtomicInteger (0);
    for (int index = 0;
    index < numberOfThreads; ++ index) {
        final int workerIndex = index;
        Thread worker = new Thread (new Runnable () {
            public void run () {
                while (true) {
                    int number = currentNumber.getAndIncrement ();
                    if (number <= maximumNumber) {
                        print (workerIndex, number);
                    } else {
                        break;
                    }
                }
            }}

        );
        worker.start ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39895126_39895237_1_11
39895126_39895305_1_11
Title: indexOfMaxInRange return wrong number? 
----------------------------------------

public static int indexOfMaxInRange (int [] a, int lowIndex, int highIndex) {
    if ((highIndex - lowIndex) == 0) {
        return highIndex;
    } else if (a [lowIndex] >= a [highIndex]) {
        return indexOfMaxInRange (a, lowIndex, highIndex - 1);
    } else {
        return indexOfMaxInRange (a, lowIndex + 1, highIndex);
    }

}
----------------------------------------

public static int indexOfMaxInRange (int [] a, int lowIndex, int highIndex) {
    int maxIndex = 0;
    int maxVal = a [0];
    for (int i = 0;
    i < a.length; i ++) {
        if (maxVal < a [i]) {
            maxVal = a [i];
            maxIndex = i;
        }
    }
    return maxIndex;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39898704_39902742_19_43
39898704_47997419_15_56
Title: Open External Application From JavaFX 
----------------------------------------

public void start (Stage primaryStage) {
    TextField textField = new TextField ("http://stackoverflow.com/questions/39898704");
    Button openURLButton = new Button ("Open URL");
    EventHandler < ActionEvent > handler = e -> open (textField.getText ());
    textField.setOnAction (handler);
    openURLButton.setOnAction (handler);
    FileChooser fileChooser = new FileChooser ();
    Button openFileButton = new Button ("Open File...");
    openFileButton.setOnAction (e -> {
        File file = fileChooser.showOpenDialog (primaryStage);
        if (file != null) {
            open (file.toURI ().toString ());
        }
    });
    VBox root = new VBox (5, new HBox (new Label ("URL:"), textField, openURLButton), new HBox (openFileButton));
    root.setPadding (new Insets (20));
    primaryStage.setScene (new Scene (root));
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    final Button button = new Button ("Open file");
    button.setOnAction (event -> {
        final FileChooser fileChooser = new FileChooser ();
        final File file = fileChooser.showOpenDialog (primaryStage.getOwner ());
        if (file == null) return;

        System.out.println ("File selected: " + file.getName ());
        if (! Desktop.isDesktopSupported ()) {
            System.out.println ("Desktop not supported");
            return;
        }
        if (! Desktop.getDesktop ().isSupported (Desktop.Action.OPEN)) {
            System.out.println ("File opening not supported");
            return;
        }
        final Task < Void > task = new Task < Void > () {
            @Override
            public Void call () throws Exception {
                try {
                    Desktop.getDesktop ().open (file);
                } catch (IOException e) {
                    System.err.println (e.toString ());
                }
                return null;
            }}

        ;
        final Thread thread = new Thread (task);
        thread.setDaemon (true);
        thread.start ();
    });
    primaryStage.setScene (new Scene (button));
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909623_1_14
39909475_39909751_1_13
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    ArrayList < Boolean > list = new ArrayList < Boolean > ();
    list.add (false);
    int listSize = list.size ();
    for (int i = x;
    i < listSize; i += x + 1) {
        list.set (i, true);
        if (x == 2 && i + 1 < listSize) {
            list.set (i + 1, true);
        }
    }
    System.out.println (list);
}
----------------------------------------

public void changeValues (int x) {
    int length = arrayList.size ();
    Collections.fill (arrayList, Boolean.TRUE);
    for (int a = 0;
    a < length; a += x) {
        arrayList.set (a, Boolean.FALSE);
    }
    System.out.print (arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909623_1_14
39909475_39910104_14_27
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    ArrayList < Boolean > list = new ArrayList < Boolean > ();
    list.add (false);
    int listSize = list.size ();
    for (int i = x;
    i < listSize; i += x + 1) {
        list.set (i, true);
        if (x == 2 && i + 1 < listSize) {
            list.set (i + 1, true);
        }
    }
    System.out.println (list);
}
----------------------------------------

public static void changeValues (int changeValueStep) {
    boolean value = false;
    for (int i = 0;
    i < arrayListSize; i ++) {
        arrayList.add (value);
        if (((i + 1) % changeValueStep) == 0) {
            value = ! value;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909623_1_14
39909475_39911805_15_29
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    ArrayList < Boolean > list = new ArrayList < Boolean > ();
    list.add (false);
    int listSize = list.size ();
    for (int i = x;
    i < listSize; i += x + 1) {
        list.set (i, true);
        if (x == 2 && i + 1 < listSize) {
            list.set (i + 1, true);
        }
    }
    System.out.println (list);
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909623_1_14
39909475_39911805_43_57
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    ArrayList < Boolean > list = new ArrayList < Boolean > ();
    list.add (false);
    int listSize = list.size ();
    for (int i = x;
    i < listSize; i += x + 1) {
        list.set (i, true);
        if (x == 2 && i + 1 < listSize) {
            list.set (i + 1, true);
        }
    }
    System.out.println (list);
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909751_1_13
39909475_39910104_14_27
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    int length = arrayList.size ();
    Collections.fill (arrayList, Boolean.TRUE);
    for (int a = 0;
    a < length; a += x) {
        arrayList.set (a, Boolean.FALSE);
    }
    System.out.print (arrayList);
}
----------------------------------------

public static void changeValues (int changeValueStep) {
    boolean value = false;
    for (int i = 0;
    i < arrayListSize; i ++) {
        arrayList.add (value);
        if (((i + 1) % changeValueStep) == 0) {
            value = ! value;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909751_1_13
39909475_39911805_15_29
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    int length = arrayList.size ();
    Collections.fill (arrayList, Boolean.TRUE);
    for (int a = 0;
    a < length; a += x) {
        arrayList.set (a, Boolean.FALSE);
    }
    System.out.print (arrayList);
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39909751_1_13
39909475_39911805_43_57
Title: Change Values In an arraylist 
----------------------------------------

public void changeValues (int x) {
    int length = arrayList.size ();
    Collections.fill (arrayList, Boolean.TRUE);
    for (int a = 0;
    a < length; a += x) {
        arrayList.set (a, Boolean.FALSE);
    }
    System.out.print (arrayList);
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39910104_14_27
39909475_39911805_15_29
Title: Change Values In an arraylist 
----------------------------------------

public static void changeValues (int changeValueStep) {
    boolean value = false;
    for (int i = 0;
    i < arrayListSize; i ++) {
        arrayList.add (value);
        if (((i + 1) % changeValueStep) == 0) {
            value = ! value;
        }
    }
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39909475_39910104_14_27
39909475_39911805_43_57
Title: Change Values In an arraylist 
----------------------------------------

public static void changeValues (int changeValueStep) {
    boolean value = false;
    for (int i = 0;
    i < arrayListSize; i ++) {
        arrayList.add (value);
        if (((i + 1) % changeValueStep) == 0) {
            value = ! value;
        }
    }
}
----------------------------------------

public void changeValues (int x, List < Boolean > arrayList) {
    int d = x + 1;
    x -= x;
    System.out.println ("ff:" + arrayList.size ());
    while (x <= arrayList.size ()) {
        if (arrayList.get (x) == true) {
            arrayList.add (x, false);
        }
        x += d;
        if (x == arrayList.size ()) {
            break;
        }
    }
    System.out.print ("After:" + arrayList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39912293_39912565_5_20
39912293_39912679_1_15
Title: How to average random numbers in java? 
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    double sum = 0;
    int amount = 10;
    int upperBound = 50;
    for (int i = 0;
    i < amount; i ++) {
        int next = r.nextInt (upperBound) + 1;
        System.out.println (next);
        sum += next;
    }
    System.out.println ("Your average is: " + (sum / amount));
}
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    double sum = 0;
    int totalNums;
    for (totalNums = 1; totalNums <= 10; totalNums ++) {
        int randomNum = r.nextInt (50);
        sum += randomNum;
        System.out.println (randomNum);
    }
    double average = sum / totalNums;
    System.out.println ("your average is: " + average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39912293_39912565_5_20
39912293_39912764_4_11
Title: How to average random numbers in java? 
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    double sum = 0;
    int amount = 10;
    int upperBound = 50;
    for (int i = 0;
    i < amount; i ++) {
        int next = r.nextInt (upperBound) + 1;
        System.out.println (next);
        sum += next;
    }
    System.out.println ("Your average is: " + (sum / amount));
}
----------------------------------------

public static void main (String args []) {
    final int N = 50;
    int sum = 0;
    for (int i = 0;
    i < N; ++ i) {
        sum += RANDOM.nextInt (50) + 1;
    }
    System.out.println ("Avg: " + sum / (float) N);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
39912293_39912679_1_15
39912293_39912764_4_11
Title: How to average random numbers in java? 
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    double sum = 0;
    int totalNums;
    for (totalNums = 1; totalNums <= 10; totalNums ++) {
        int randomNum = r.nextInt (50);
        sum += randomNum;
        System.out.println (randomNum);
    }
    double average = sum / totalNums;
    System.out.println ("your average is: " + average);
}
----------------------------------------

public static void main (String args []) {
    final int N = 50;
    int sum = 0;
    for (int i = 0;
    i < N; ++ i) {
        sum += RANDOM.nextInt (50) + 1;
    }
    System.out.println ("Avg: " + sum / (float) N);
}
----------------------------------------
