$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7060274_7060434_120_133
7060274_7060434_136_149
Title: "What do I have to do to avoid error of ""out of memory"" when connection by jdbc with sqlite3 database?" 
----------------------------------------

private static void close (Connection conn) {
    try {
        if (conn != null) {
            conn.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private static void close (Statement stat) {
    try {
        if (stat != null) {
            stat.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7060274_7060434_120_133
7060274_7060434_151_164
Title: "What do I have to do to avoid error of ""out of memory"" when connection by jdbc with sqlite3 database?" 
----------------------------------------

private static void close (Connection conn) {
    try {
        if (conn != null) {
            conn.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7060274_7060434_136_149
7060274_7060434_151_164
Title: "What do I have to do to avoid error of ""out of memory"" when connection by jdbc with sqlite3 database?" 
----------------------------------------

private static void close (Statement stat) {
    try {
        if (stat != null) {
            stat.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
706048_706109_27_39
706048_707665_31_50
Title: Using threads and recursion in Java to calculate Fibonacci numbers 
----------------------------------------

public static void main (String [] args) throws Exception {
    try {
        Fib f = new Fib (Integer.parseInt (args [0]));
        f.start ();
        f.join ();
        System.out.println (f.answer);
    } catch (Exception e) {
        System.out.println ("usage: java Fib NUMBER");
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        for (int i = 0;
        i < 19; i ++) {
            Fib f = new Fib (i);
            Thread threadf = new Thread (f);
            threadf.start ();
            threadf.join ();
            System.out.println ("Ergebnis:" + f.answer);
        }
    } catch (Exception e) {
        System.out.println ("usage: java Fib NUMBER");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7061054_7111826_1_22
7061054_7116031_13_30
Title: To find similar words (strings) in two files 
----------------------------------------

public static void main (String [] args) throws IOException {
    Set < String > out = new HashSet < String > ();
    Set < String > file1 = load ("IbanDict.txt");
    Set < String > file2 = load ("AFF_outVal.txt");
    for (String word1 : file1) {
        for (String word2 : file2) {
            if (word1.equalsIgnoreCase (word2)) {
                boolean already = false;
                for (String outStr : out) {
                    if (outStr.equalsIgnoreCase (word1)) {
                        already = true;
                    }
                }
                if (! already) {
                    out.add (word1);
                }
            }
        }
    }
    write (out, "out_test2.txt");
}
----------------------------------------

public static void main (String [] args) throws IOException {
    List < String > dictionary;
    dictionary = loadDictionary ("IbanDict.txt");
    Scanner reader = new Scanner (new File ("AFF_outVal.txt"));
    OutputStreamWriter writer = new FileWriter (new File ("out_test2.txt"));
    while (reader.hasNextLine ()) {
        String line = reader.nextLine ();
        String [] tokens = line.split (" ");
        for (String token : tokens) {
            writer.write (dictionary.contains (token) + " ");
        }
        writer.write (System.getProperty ("line.separator"));
    }
    writer.close ();
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7061054_7111826_1_22
7061054_7164012_41_55
Title: To find similar words (strings) in two files 
----------------------------------------

public static void main (String [] args) throws IOException {
    Set < String > out = new HashSet < String > ();
    Set < String > file1 = load ("IbanDict.txt");
    Set < String > file2 = load ("AFF_outVal.txt");
    for (String word1 : file1) {
        for (String word2 : file2) {
            if (word1.equalsIgnoreCase (word2)) {
                boolean already = false;
                for (String outStr : out) {
                    if (outStr.equalsIgnoreCase (word1)) {
                        already = true;
                    }
                }
                if (! already) {
                    out.add (word1);
                }
            }
        }
    }
    write (out, "out_test2.txt");
}
----------------------------------------

public static void main (final String [] args) throws IOException {
    Map < String, Integer > file1 = load ("file1.txt");
    Map < String, Integer > file2 = load ("file2.txt");
    for (Map.Entry < String, Integer > file1Word : file1.entrySet ()) {
        if (file2.containsKey (file1Word.getKey ())) {
            file1.put (file1Word.getKey (), 1);
            file2.put (file1Word.getKey (), 1);
        }
    }
    write (file1, "test1.txt");
    write (file2, "test2.txt");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7061054_7116031_13_30
7061054_7164012_41_55
Title: To find similar words (strings) in two files 
----------------------------------------

public static void main (String [] args) throws IOException {
    List < String > dictionary;
    dictionary = loadDictionary ("IbanDict.txt");
    Scanner reader = new Scanner (new File ("AFF_outVal.txt"));
    OutputStreamWriter writer = new FileWriter (new File ("out_test2.txt"));
    while (reader.hasNextLine ()) {
        String line = reader.nextLine ();
        String [] tokens = line.split (" ");
        for (String token : tokens) {
            writer.write (dictionary.contains (token) + " ");
        }
        writer.write (System.getProperty ("line.separator"));
    }
    writer.close ();
    reader.close ();
}
----------------------------------------

public static void main (final String [] args) throws IOException {
    Map < String, Integer > file1 = load ("file1.txt");
    Map < String, Integer > file2 = load ("file2.txt");
    for (Map.Entry < String, Integer > file1Word : file1.entrySet ()) {
        if (file2.containsKey (file1Word.getKey ())) {
            file1.put (file1Word.getKey (), 1);
            file2.put (file1Word.getKey (), 1);
        }
    }
    write (file1, "test1.txt");
    write (file2, "test2.txt");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7093565_23634435_1_22
7093565_48867006_1_28
Title: Programming exercise 
----------------------------------------

public boolean xyBalance (String str) {
    for (int i = str.length () - 1;
    i >= 0; i --) {
        if (str.charAt (i) == 'x') {
            for (int j = i;
            j < str.length (); j ++) {
                if (str.charAt (j) == 'y') {
                    return true;
                }
            }
            return false;
        }
    }
    return true;
}
----------------------------------------

public boolean xyBalance (String str) {
    int x = 0;
    int y = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == 'x') {
            x ++;
            for (int j = i;
            j < str.length (); j ++) {
                if (str.charAt (j) == 'y') {
                    y ++;
                    break;
                }
            }
        }
    }
    if (x == y) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7101992_11225706_8_22
7101992_51323020_8_21
Title: "Why do we usually use `||` not `|` what is the difference?" 
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int j = 9;
    int x = 10;
    int y = 9;
    if (i == 10 | ++ i > j) {
        System.out.println ("it will print in first if");
        System.out.println ("i is: " + i);
    }
    if (x == 10 || ++ x > y) {
        System.out.println ("it will print in second if");
        System.out.println ("x is: " + x);
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean a = true;
    boolean b = false;
    if (a || bool ()) {
        System.out.println ("If condition executed");
    } else {
        System.out.println ("Else condition executed");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7107432_7107461_4_12
7107432_7107555_4_13
Title: java.util.Scanner does not return to Prompt 
----------------------------------------

public static void main (String args []) {
    Scanner s = new Scanner (System.in);
    while (s.hasNext ()) {
        String nextVal = s.next ();
        if (nextVal.equalsIgnoreCase ("quit")) {
            break;
        }
        System.out.println (nextVal);
    }
    s.close ();
}
----------------------------------------

public static void main (String args []) {
    Scanner s = new Scanner (System.in);
    while (s.hasNext ()) {
        String temp = s.next ();
        if (temp.trim ().equals ("quit")) System.exit (0);

        System.out.println (s.next ());
    }
    s.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7127863_7127917_15_21
7127863_7127917_4_10
Title: How to ignore certain values using Java comparator for sorting 
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1.equals (o2)) return 0;

    if (o1.equals (1000)) return 1;

    if (o2.equals (1000)) return - 1;

    return o2.compareTo (o1);
}
----------------------------------------

public int compare (Integer o1, Integer o2) {
    if (o1.equals (o2)) return 0;

    if (o1.equals (1000)) return 1;

    if (o2.equals (1000)) return - 1;

    return o1.compareTo (o2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7128698_7132170_3_11
7128698_7132287_1_18
Title: Sorting over multiple fields 
----------------------------------------

public int compare (Car o1, Car o2) {
    int res = o1.getMake ().compareToIgnoreCase (o2.getMake ());
    if (res != 0) return res;

    res = o1.getYear ().compareTo (o2.getYear ());
    if (res != 0) return res;

    return Integer.parseInt (o1.getMileage ()).compareTo (Integer.parseInt (o2.getMileage ()));
}
----------------------------------------

public int compare (Car car1, Car car2) {
    int makeDiff = car1.getMake ().compare (car2.getMake ());
    if (makeDiff != 0) return makeDiff;

    int yearDiff = car1.getYear ().compare (car2.getYear ());
    if (yearDiff != 0) return yearDiff;

    int mileageDiff = car1.getMileage ().compare (car2.getMileage ());
    if (mileageDiff != 0) return mileageDiff;

    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7132057_43382859_123_146
7132057_43382859_152_171
Title: Why the key should be removed in `selector.selectedKeys().iterator()` in java nio? 
----------------------------------------

public void run () {
    byte [] bs = new byte [1024];
    while (true) {
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        int len = 0;
        try {
            while ((len = input.read (bs)) != - 1) {
                System.out.println ("Clinet thread " + Thread.currentThread ().getName () + " read: " + new String (bs, 0, len));
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    int a = 0;
    while (true) {
        try {
            Thread.sleep (100);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        String str = Thread.currentThread ().getName () + " hello, " + a;
        try {
            out.write (str.getBytes ());
            a ++;
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7133003_11131604_8_16
7133003_7133047_6_16
Title: How to handle AsyncTask failure 
----------------------------------------

protected final ResultOrException < Result > doInBackground (Params...params) {
    try {
        Result res = doTask (params);
        return new ResultOrException < Result > (res);
    } catch (Exception e) {
        onBackgroundException (e);
        return new ResultOrException < Result > (e);
    }
}
----------------------------------------

@Override
protected AsyncTaskResult < String > doInBackground (String...params) {
    AsyncTaskResult < String > result = new AsyncTaskResult < String > ();
    try {
    } catch (IOException e) {
        result.setException (e);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7147968_7148049_1_27
7147968_7148068_1_18
Title: JAVA Scan from textfile and display only text between two key words/variables 
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        String startToken = "Hello";
        String endToken = "Bye";
        boolean output = false;
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            if (! output && line.indexOf (startToken) > - 1) {
                output = true;
                line = line.substring (line.indexOf (startToken) + startToken.length ());
            } else if (output && line.indexOf (endToken) > - 1) {
                output = false;
                System.out.println (line.substring (0, line.indexOf (endToken)));
            }

            if (output) {
                System.out.println (line);
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    File fileName = new File ("hello.txt");
    try {
        Scanner scan = new Scanner (fileName);
        while (scan.hasNextLine ()) {
            String line = scan.nextLine ();
            System.out.println (line);
            int indexHello = line.lastIndexOf ("hello", 0);
            int indexBye = line.indexOf ("bye".indexHello);
            String newString = line.substring (indexHello, indexBye);
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7183735_11911936_36_57
7183735_20137507_5_53
Title: Writing a string in a spiral 
----------------------------------------

public static void main (String [] args) {
    String input = "paypalisthefastersaferwaytosendmoney".toUpperCase ();
    char chars [] = input.toCharArray ();
    int sqrtceil = (int) Math.ceil (Math.sqrt (chars.length));
    int rows = sqrtceil;
    int cols = sqrtceil;
    while (cols * (rows - 1) >= chars.length) {
        rows --;
    }
    char output [] [] = new char [rows] [cols];
    placeright (output, chars, 0, 0, 0, rows, cols);
    for (int i = 0;
    i < output.length; i ++) {
        for (int j = 0;
        j < output [i].length; j ++) {
            System.out.print (output [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int xStart = 0;
    int xEnd = 3;
    int yStart = 0;
    int yEnd = 3;
    int [] [] arr = new int [4] [4];
    arr [0] [0] = 1;
    arr [1] [0] = 2;
    arr [2] [0] = 3;
    arr [3] [0] = 4;
    arr [0] [1] = 5;
    arr [1] [1] = 6;
    arr [2] [1] = 7;
    arr [3] [1] = 8;
    arr [0] [2] = 9;
    arr [1] [2] = 10;
    arr [2] [2] = 11;
    arr [3] [2] = 14;
    arr [0] [3] = 15;
    arr [1] [3] = 16;
    arr [2] [3] = 17;
    arr [3] [3] = 18;
    for (int i = 0;
    i < 16; i ++) {
        for (int j = xStart;
        j <= xEnd; j ++) {
            System.out.println (arr [j] [yStart]);
        }
        ++ yStart;
        for (int j = yStart;
        j <= yEnd; j ++) {
            System.out.println (arr [xEnd] [j]);
        }
        xEnd --;
        for (int j = xEnd;
        j >= xStart; j --) {
            System.out.println (arr [j] [yEnd]);
        }
        yEnd --;
        for (int j = yEnd;
        j >= yStart; j --) {
            System.out.println (arr [xStart] [j]);
        }
        xStart ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7183735_11911936_36_57
7183735_24057086_21_53
Title: Writing a string in a spiral 
----------------------------------------

public static void main (String [] args) {
    String input = "paypalisthefastersaferwaytosendmoney".toUpperCase ();
    char chars [] = input.toCharArray ();
    int sqrtceil = (int) Math.ceil (Math.sqrt (chars.length));
    int rows = sqrtceil;
    int cols = sqrtceil;
    while (cols * (rows - 1) >= chars.length) {
        rows --;
    }
    char output [] [] = new char [rows] [cols];
    placeright (output, chars, 0, 0, 0, rows, cols);
    for (int i = 0;
    i < output.length; i ++) {
        for (int j = 0;
        j < output [i].length; j ++) {
            System.out.print (output [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int index = 0, x, y, N = 6;
    char [] [] MATRIX = new char [N] [N];
    for (y = 0; y < N; y ++) {
        for (x = 0; x < N; x ++) MATRIX [y] [x] = '.';

    }
    direction = 1;
    setDelta ();
    x = 0;
    y = 0;
    while (index < phrase.length ()) {
        while (x < N && x >= 0 && y < N && y >= 0) {
            MATRIX [y] [x] = phrase.charAt (index);
            System.out.print (MATRIX [y] [x]);
            index ++;
            if (direction == 1 && MATRIX [y] [x + 1] != '.' || x + 1 == N - 1) break;

            if (direction == 2 && MATRIX [y + 1] [x] != '.' && y < N - 2) break;

            if (direction == 3 && MATRIX [y] [x - 1] != '.' || x == 0) break;

            if (direction == 4 && MATRIX [y - 1] [x] != '.' && y >= 0) break;

            x += deltax;
            y += deltay;
        }
        if (direction == 4) direction = 1;
        else direction ++;

        setDelta ();
        x += deltax;
        y += deltay;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7183735_20137507_5_53
7183735_24057086_21_53
Title: Writing a string in a spiral 
----------------------------------------

public static void main (String [] args) {
    int xStart = 0;
    int xEnd = 3;
    int yStart = 0;
    int yEnd = 3;
    int [] [] arr = new int [4] [4];
    arr [0] [0] = 1;
    arr [1] [0] = 2;
    arr [2] [0] = 3;
    arr [3] [0] = 4;
    arr [0] [1] = 5;
    arr [1] [1] = 6;
    arr [2] [1] = 7;
    arr [3] [1] = 8;
    arr [0] [2] = 9;
    arr [1] [2] = 10;
    arr [2] [2] = 11;
    arr [3] [2] = 14;
    arr [0] [3] = 15;
    arr [1] [3] = 16;
    arr [2] [3] = 17;
    arr [3] [3] = 18;
    for (int i = 0;
    i < 16; i ++) {
        for (int j = xStart;
        j <= xEnd; j ++) {
            System.out.println (arr [j] [yStart]);
        }
        ++ yStart;
        for (int j = yStart;
        j <= yEnd; j ++) {
            System.out.println (arr [xEnd] [j]);
        }
        xEnd --;
        for (int j = xEnd;
        j >= xStart; j --) {
            System.out.println (arr [j] [yEnd]);
        }
        yEnd --;
        for (int j = yEnd;
        j >= yStart; j --) {
            System.out.println (arr [xStart] [j]);
        }
        xStart ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int index = 0, x, y, N = 6;
    char [] [] MATRIX = new char [N] [N];
    for (y = 0; y < N; y ++) {
        for (x = 0; x < N; x ++) MATRIX [y] [x] = '.';

    }
    direction = 1;
    setDelta ();
    x = 0;
    y = 0;
    while (index < phrase.length ()) {
        while (x < N && x >= 0 && y < N && y >= 0) {
            MATRIX [y] [x] = phrase.charAt (index);
            System.out.print (MATRIX [y] [x]);
            index ++;
            if (direction == 1 && MATRIX [y] [x + 1] != '.' || x + 1 == N - 1) break;

            if (direction == 2 && MATRIX [y + 1] [x] != '.' && y < N - 2) break;

            if (direction == 3 && MATRIX [y] [x - 1] != '.' || x == 0) break;

            if (direction == 4 && MATRIX [y - 1] [x] != '.' && y >= 0) break;

            x += deltax;
            y += deltay;
        }
        if (direction == 4) direction = 1;
        else direction ++;

        setDelta ();
        x += deltax;
        y += deltay;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7194522_41368003_3_24
7194522_7194798_1_14
Title: "How to putAll on Java hashMap contents of one to another but not replace existing keys and values?" 
----------------------------------------

public static void main (String [] args) {
    Map < String, String > map1 = new HashMap < String, String > ();
    map1.put ("key1", "value1");
    map1.put ("key2", "value2");
    map1.put ("key3", "value3");
    map1.put (null, null);
    Map < String, String > map2 = new HashMap < String, String > ();
    map2.put ("key4", "value4");
    map2.put ("key5", "value5");
    map2.put ("key6", "value6");
    map2.put ("key3", "replaced-value-of-key3-in-map2");
    map1.putAll (map2);
    for (Map.Entry e : map2.entrySet ()) if (! map1.containsKey (e.getKey ())) map1.put (e.getKey ().toString (), e.getValue ().toString ());

    System.out.println (map1);
}
----------------------------------------

public static void main (final String [] args) {
    final Map < Integer, String > map1 = new HashMap < Integer, String > ();
    map1.put (1, "Hello");
    map1.put (2, "There");
    final Map < Integer, String > map2 = new HashMap < Integer, String > ();
    map2.put (2, "There");
    map2.put (3, "is");
    map2.put (4, "a");
    map2.put (5, "bird");
    map2.putAll (Maps.difference (map1, map2).entriesOnlyOnLeft ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7195100_7195504_1_14
7195100_7195617_1_15
Title: good way to design 
----------------------------------------

@Nonnull
public HttpResponse executeRestClientServiceCall (HttpUriRequest request) throws IOException {
    HttpClient client = new DefaultHttpClient ();
    HttpResponse httpResponse = client.execute (request);
    try {
    } finally {
        HttpEntity entity = httpResponse.getEntity ();
        if (entity != null) {
            entity.getContent ().close ();
        }
    }
    return httpResponse;
}
----------------------------------------

public HttpResponse executeRestClientServiceCall (final HttpUriRequest request) {
    final HttpClient client = new DefaultHttpClient ();
    try {
        return client.execute (request);
    } catch (final ClientProtocolException e) {
    } catch (final IOException e) {
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7216937_41168164_93_110
7216937_7217204_82_90
Title: Multiple JComboBox 
----------------------------------------

public static void main (String [] args) {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (Throwable e) {
        e.printStackTrace ();
    }
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            try {
                combo frame = new combo ();
                frame.setVisible (true);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            ComboBoxListeners comboBoxListeners = new ComboBoxListeners ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7217625_12550850_18_59
7217625_46551189_171_224
Title: How to add CheckBox's to a TableView in JavaFX 
----------------------------------------

public void start (Stage stage) throws Exception {
    final TableView < Os > view = new TableView < > ();
    final ObservableList < TableColumn < Os, ? > > columns = view.getColumns ();
    final TableColumn < Os, Boolean > nameColumn = new TableColumn < > ("Name");
    nameColumn.setCellValueFactory (new PropertyValueFactory < > ("name"));
    columns.add (nameColumn);
    final TableColumn < Os, Boolean > loadedColumn = new TableColumn < > ("Delete");
    loadedColumn.setCellValueFactory (new PropertyValueFactory < > ("delete"));
    loadedColumn.setCellFactory (tc -> new CheckBoxTableCell < > ());
    columns.add (loadedColumn);
    final ObservableList < Os > items = FXCollections.observableArrayList (new Os ("Microsoft Windows 3.1", true), new Os ("Microsoft Windows 3.11", true), new Os ("Microsoft Windows 95", true), new Os ("Microsoft Windows NT 3.51", true), new Os ("Microsoft Windows NT 4", true), new Os ("Microsoft Windows 2000", true), new Os ("Microsoft Windows Vista", true), new Os ("Microsoft Windows Seven", false), new Os ("Linux all versions :-)", false));
    view.setItems (items);
    view.setEditable (true);
    final Button delBtn = new Button ("Delete");
    delBtn.setMaxWidth (Double.MAX_VALUE);
    delBtn.setOnAction (e -> {
        final Set < Os > del = new HashSet < > ();
        for (final Os os : view.getItems ()) {
            if (os.deleteProperty ().get ()) {
                del.add (os);
            }
        }
        view.getItems ().removeAll (del);
    });
    stage.setScene (new Scene (new BorderPane (view, null, null, delBtn, null)));
    BorderPane.setAlignment (delBtn, Pos.CENTER);
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    final VBox view = new VBox (10);
    final TableView < TableData > table = new TableView < > ();
    final ObservableList < TableColumn < TableData, ? > > columns = table.getColumns ();
    final TableModel model = getModel ();
    final TableColumn < TableData, String > stoogeColumn = new TableColumn < > ("Stooge");
    stoogeColumn.setCellValueFactory (new PropertyValueFactory < > ("stooge"));
    columns.add (stoogeColumn);
    final Button showModelButton = new Button ("Show me the Model, woo,woo,woo");
    final Label showModelLabel = new Label ("Model?  Whats that?");
    showModelButton.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            showModelLabel.setText (model.displayModel ());
        }}

    );
    final TableColumn < TableData, CheckBox > favoriteColumn = new TableColumn < TableData, CheckBox > ("Favorite");
    favoriteColumn.setCellValueFactory (new Callback < TableColumn.CellDataFeatures < TableData, CheckBox >, ObservableValue < CheckBox > > () {
        @Override
        public ObservableValue < CheckBox > call (TableColumn.CellDataFeatures < TableData, CheckBox > arg0) {
            TableData data = arg0.getValue ();
            CheckBox checkBox = new CheckBox ();
            checkBox.selectedProperty ().setValue (data.isFavorite ());
            checkBox.selectedProperty ().addListener (new ChangeListener < Boolean > () {
                public void changed (ObservableValue < ? extends Boolean > ov, Boolean old_val, Boolean new_val) {
                    data.setFavorite (new_val);
                    checkBox.setSelected (new_val);
                    model.updateStooge (data);
                }}

            );
            return new SimpleObjectProperty < CheckBox > (checkBox);
        }}

    );
    columns.add (favoriteColumn);
    table.setItems (model.getStooges ());
    HBox hbox = new HBox (10);
    hbox.getChildren ().addAll (showModelButton, showModelLabel);
    view.getChildren ().add (hbox);
    view.getChildren ().add (table);
    Scene scene = new Scene (view, 640, 380);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7217625_38056874_9_17
7217625_46551189_196_210
Title: How to add CheckBox's to a TableView in JavaFX 
----------------------------------------

public ObservableValue < CheckBox > call (TableColumn.CellDataFeatures < Person, CheckBox > param) {
    Person person = param.getValue ();
    CheckBox checkBox = new CheckBox ();
    checkBox.selectedProperty ().setValue (person.isUnemployed ());
    checkBox.selectedProperty ().addListener ((ov, old_val, new_val) -> {
        person.setUnemployed (new_val);
    });
    return new SimpleObjectProperty < > (checkBox);
}
----------------------------------------

public ObservableValue < CheckBox > call (TableColumn.CellDataFeatures < TableData, CheckBox > arg0) {
    TableData data = arg0.getValue ();
    CheckBox checkBox = new CheckBox ();
    checkBox.selectedProperty ().setValue (data.isFavorite ());
    checkBox.selectedProperty ().addListener (new ChangeListener < Boolean > () {
        public void changed (ObservableValue < ? extends Boolean > ov, Boolean old_val, Boolean new_val) {
            data.setFavorite (new_val);
            checkBox.setSelected (new_val);
            model.updateStooge (data);
        }}

    );
    return new SimpleObjectProperty < CheckBox > (checkBox);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7222161_7222943_30_54
7222161_7225323_40_48
Title: JList that contains the list of Files in a directory 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            File f = new File (System.getProperty ("user.home"));
            FileList fl = new FileList ();
            Component c1 = fl.getGui (f.listFiles (new TextFileFilter ()), true);
            Component c2 = fl.getGui (f.listFiles (new TextFileFilter ()), false);
            JFrame frame = new JFrame ("File List");
            JPanel gui = new JPanel (new BorderLayout ());
            gui.add (c1, BorderLayout.WEST);
            gui.add (c2, BorderLayout.CENTER);
            c2.setPreferredSize (new Dimension (375, 100));
            gui.setBorder (new EmptyBorder (3, 3, 3, 3));
            frame.setContentPane (gui);
            frame.pack ();
            frame.setLocationByPlatform (true);
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            FilesInTheJList fITJL = new FilesInTheJList ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7222161_7222943_77_95
7222161_7225323_55_74
Title: JList that contains the list of Files in a directory 
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component c = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    JLabel l = (JLabel) c;
    File f = (File) value;
    l.setText (f.getName ());
    l.setIcon (FileSystemView.getFileSystemView ().getSystemIcon (f));
    if (pad) {
        l.setBorder (padBorder);
    }
    return l;
}
----------------------------------------

public Component getListCellRendererComponent (JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    if (value instanceof File) {
        File file = (File) value;
        setText (file.getName ());
        setIcon (FileSystemView.getFileSystemView ().getSystemIcon (file));
        if (isSelected) {
            setBackground (list.getSelectionBackground ());
            setForeground (list.getSelectionForeground ());
        } else {
            setBackground (list.getBackground ());
            setForeground (list.getForeground ());
        }
        setPreferredSize (new Dimension (250, 25));
        setEnabled (list.isEnabled ());
        setFont (list.getFont ());
        setOpaque (true);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7227707_7227741_18_25
7227707_7227741_4_11
Title: How to recursively iterate through a recursive data structure 
----------------------------------------

public void iterate (Set < A > aVisited, Set < B > bVisited) {
    for (Entry < String, A > entry : AMap.entrySet ()) {
        if (aVisited.contains (entry.getValue ())) continue;

        System.out.println (entry.getKey ());
        aVisited.add (entry.getValue ());
        entry.getValue ().iterate (aVisited, bVisited);
    }
}
----------------------------------------

public void iterate (Set < A > aVisited, Set < B > bVisited) {
    for (Entry < String, B > entry : BMap.entrySet ()) {
        if (bVisited.contains (entry.getValue ())) continue;

        System.out.println (entry.getKey ());
        bVisited.add (entry.getValue ());
        entry.getValue ().iterate (aVisited, bVisited);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7232201_42520560_12_21
7232201_42520560_1_10
Title: "Java Swing pack() on a Window un-maximizes it how to avoid that?" 
----------------------------------------

public static void showForms (JFrame frame, JPanel jPanel, boolean doPack) {
    jPanel.setVisible (true);
    if (doPack) {
        int extendedState = frame.getExtendedState ();
        if (extendedState == JFrame.MAXIMIZED_BOTH) {
            return;
        }
        frame.pack ();
    }
}
----------------------------------------

public static void showForms (JFrame frame, JPanel [] jPanels) {
    for (JPanel jPanel : jPanels) {
        showForms (frame, jPanel, false);
    }
    int extendedState = frame.getExtendedState ();
    if (extendedState == JFrame.MAXIMIZED_BOTH) {
        return;
    }
    frame.pack ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7232201_42520560_23_32
7232201_42520560_34_43
Title: "Java Swing pack() on a Window un-maximizes it how to avoid that?" 
----------------------------------------

public static void hideForms (JFrame frame, JPanel [] jPanel) {
    for (JPanel panel : jPanel) {
        hideForms (frame, panel, false);
    }
    int extendedState = frame.getExtendedState ();
    if (extendedState == JFrame.MAXIMIZED_BOTH) {
        return;
    }
    frame.pack ();
}
----------------------------------------

public static void hideForms (JFrame frame, JPanel jPanel, boolean doPack) {
    jPanel.setVisible (false);
    if (doPack) {
        int extendedState = frame.getExtendedState ();
        if (extendedState == JFrame.MAXIMIZED_BOTH) {
            return;
        }
        frame.pack ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7237483_7237855_35_46
7237483_7237855_49_59
Title: Techniques to expose multiple Interfaces (via static creation methods) 
----------------------------------------

Weapon create (WeaponName weaponName) {
    switch (weaponName) {
        case knife :
        case sword :
            return new WeaponBaseClass (weaponName);
        case colt45 :
        case glock19 :
            return new FirearmBaseClass (weaponName);
        default :
            return new WeaponBaseClass (weaponName);
    }
}
----------------------------------------

Weapon create (WeaponName weaponName) {
    Weapon weapon = null;
    switch (weaponName) {
        case glock19WithLaser :
            weapon = super.create (WeaponName.glock19);
            return weapon;
        default :
            return new WeaponBaseClass (weaponName);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7252098_10794499_13_45
7252098_10794499_1_10
Title: How to eagerly load lazy fields with JPA 2.0? 
----------------------------------------

private static < T > void deepDetach (EntityManager emanager, T entity, IdentityHashMap < Object, Object > detached) throws IllegalAccessException, InvocationTargetException {
    if (entity == null || detached.containsKey (entity)) {
        return;
    }
    Class < ? > clazz = entity.getClass ();
    Entity entityAnnotation = clazz.getAnnotation (Entity.class);
    if (entityAnnotation == null) {
        return;
    }
    emanager.detach (entity);
    detached.put (entity, null);
    Method [] methods = clazz.getMethods ();
    for (Method m : methods) {
        String name = m.getName ();
        if (m.getParameterTypes ().length == 0) {
            if (name.length () > 3 && name.startsWith ("get") && Character.isUpperCase (name.charAt (3))) {
                Object res = m.invoke (entity, new Object [0]);
                deepDetach (emanager, res, detached);
            }
            if (name.length () > 2 && name.startsWith ("is") && Character.isUpperCase (name.charAt (2))) {
                Object res = m.invoke (entity, new Object [0]);
                deepDetach (emanager, res, detached);
            }
        }
    }
}
----------------------------------------

public static < T > void deepDetach (EntityManager emanager, T entity) {
    IdentityHashMap < Object, Object > detached = new IdentityHashMap < Object, Object > ();
    try {
        deepDetach (emanager, entity, detached);
    } catch (IllegalAccessException e) {
        throw new RuntimeException ("Error deep detaching entity [" + entity + "].", e);
    } catch (InvocationTargetException e) {
        throw new RuntimeException ("Error deep detaching entity [" + entity + "].", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7265808_7277791_154_166
7265808_7277791_202_219
Title: Java API for KML (JAK) embedding images in kmz files 
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Marshalling KML to KMZ archive" + " | archive name: " + archivedFileName);
    }
    kml.marshal (zipOutputStream);
}
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Copying KML from stream to KMZ archive" + " | archive name: " + archivedFileName);
    }
    try {
        IOUtils.copy (inputStream, zipOutputStream);
    } finally {
        inputStream.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7265808_7277791_154_166
7265808_7277791_85_117
Title: Java API for KML (JAK) embedding images in kmz files 
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Marshalling KML to KMZ archive" + " | archive name: " + archivedFileName);
    }
    kml.marshal (zipOutputStream);
}
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    if (! sourceFile.exists ()) {
        throw new IllegalArgumentException ("File referenced in parameter [" + sourceFile.getAbsolutePath () + "] does not exist");
    }
    FileInputStream fis = new FileInputStream (sourceFile);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Adding file to KMZ archive" + " | archive name: " + archivedFileName + " | original name: " + sourceFile.getCanonicalPath ());
    }
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    try {
        IOUtils.copy (fis, zipOutputStream);
    } finally {
        fis.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7265808_7277791_202_219
7265808_7277791_85_117
Title: Java API for KML (JAK) embedding images in kmz files 
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Copying KML from stream to KMZ archive" + " | archive name: " + archivedFileName);
    }
    try {
        IOUtils.copy (inputStream, zipOutputStream);
    } finally {
        inputStream.close ();
    }
}
----------------------------------------

public void writeToStream (ZipOutputStream zipOutputStream) throws IOException {
    Validate.notNull (zipOutputStream);
    if (! sourceFile.exists ()) {
        throw new IllegalArgumentException ("File referenced in parameter [" + sourceFile.getAbsolutePath () + "] does not exist");
    }
    FileInputStream fis = new FileInputStream (sourceFile);
    if (logger.isDebugEnabled ()) {
        logger.debug ("Adding file to KMZ archive" + " | archive name: " + archivedFileName + " | original name: " + sourceFile.getCanonicalPath ());
    }
    ZipEntry entry = new ZipEntry (archivedFileName);
    zipOutputStream.putNextEntry (entry);
    try {
        IOUtils.copy (fis, zipOutputStream);
    } finally {
        fis.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7269294_7300784_47_60
7269294_7376085_54_76
Title: How to stop a Runnable scheduled for repeated execution after a certain number of executions 
----------------------------------------

public synchronized void run () {
    if (! this.infinite) {
        if (this.repeatCounter > 0) {
            this.command.run ();
            this.repeatCounter --;
        } else {
            this.control.cancel (false);
        }
    } else {
        this.command.run ();
    }
}
----------------------------------------

public void run () {
    if (! isFinished ()) {
        realRunnable.run ();
        if (! isInfinite ()) {
            repetitions --;
            if (isFinished ()) {
                synchronized (this) {
                    if (self == null) {
                        try {
                            wait ();
                        } catch (Exception e) {
                        }
                    }
                    self.cancel (false);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7297660_7297843_15_22
7297660_7297865_27_36
Title: Does Java's Random Object create random numbers through equal opportunity? 
----------------------------------------

private static int median (int [] count, int games) {
    int findTotal = games / 2;
    for (int i = 0;
    i < count.length; i ++) {
        findTotal -= count [i];
        if (findTotal <= 0) return i;

    }
    throw new AssertionError ();
}
----------------------------------------

private static int median () {
    int n = 0;
    for (int i = 0;
    i < result.length; i ++) {
        if (n + result [i] >= N / 2) {
            return i;
        }
        n += result [i];
    }
    throw new IllegalStateException ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7301945_26696990_1_29
7301945_7302012_5_35
Title: How to summarize numbers entered by user? 
----------------------------------------

public static void main (String [] args) {
    int positive = 0;
    int negative = 0;
    int sum = 0;
    int count = 0;
    Scanner input = new Scanner (System.in);
    int data = 0;
    do {
        System.out.print ("Enter in a value, if 0 is entered program stops: ");
        data = input.nextInt ();
        sum += data;
        count ++;
        if (data < 0) negative ++;
        else if (data > 0) positive ++;

    } while (data != 0);
    System.out.println ("Positive Numbers = " + positive);
    System.out.println ("Negative Numbers = " + negative);
    System.out.println ("Sum of Numbers = " + sum);
    System.out.println ("Total Numbers = " + count);
}
----------------------------------------

public static void main (String [] args) {
    int positive = 0;
    int negative = 0;
    int sum = 0;
    int count = 0;
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter in a value, if 0 is entered program stops: ");
    int data = input.nextInt ();
    while (data != 0) {
        sum += data;
        if (data < 0) negative ++;
        else if (data > 0) positive ++;

        count ++;
        data = input.nextInt ();
    }
    System.out.println ("The number of positives is: " + positive);
    System.out.println ("The number of negatives is:" + negative);
    System.out.println ("The total is: " + sum);
    System.out.println ("The average is: " + sum / (double) count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7303720_20703495_1_16
7303720_7303770_1_14
Title: How do I get generate an IP address range given start and end IP address? 
----------------------------------------

void main (String args []) {
    String start = "192.168.0.2";
    String end = "192.168.0.254";
    String [] startParts = start.split ("(?<=\\.)(?!.*\\.)");
    String [] endParts = end.split ("(?<=\\.)(?!.*\\.)");
    int first = Integer.parseInt (startParts [1]);
    int last = Integer.parseInt (endParts [1]);
    for (int i = first;
    i <= last; i ++) {
        System.out.println (startParts [0] + i);
    }
}
----------------------------------------

public static void main (String args []) {
    String start = "192.168.0.2";
    String end = "192.168.0.254";
    String [] startParts = start.split ("(?<=\\.)(?!.*\\.)");
    String [] endParts = end.split ("(?<=\\.)(?!.*\\.)");
    int first = Integer.parseInt (startParts [1]);
    int last = Integer.parseInt (endParts [1]);
    for (int i = first;
    i <= last; i ++) {
        System.out.println (startParts [0] + i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7304002_49028712_7_25
7304002_7304196_46_54
Title: How to parse a dynamic JSON key in a Nested JSON result? 
----------------------------------------

public static void main (String [] args) {
    String jsonString = "{\"status\":\"OK\",\"search_result\":[{\"product\":\"abc\",\"id\":\"1132\",\"question_mark\":{\"141\":{\"count\":\"141\",\"more_description\":\"this is abc\",\"seq\":\"2\"},\"8911\":{\"count\":\"8911\",\"more_desc\":\"this is cup\",\"seq\":\"1\"}},\"name\":\"some name\",\"description\":\"This is some product\"},{\"product\":\"XYZ\",\"id\":\"1129\",\"question_mark\":{\"379\":{\"count\":\"379\",\"more_desc\":\"this is xyz\",\"seq\":\"5\"},\"845\":{\"count\":\"845\",\"more_desc\":\"this is table\",\"seq\":\"6\"},\"12383\":{\"count\":\"12383\",\"more_desc\":\"Jumbo\",\"seq\":\"4\"},\"257258\":{\"count\":\"257258\",\"more_desc\":\"large\",\"seq\":\"1\"}},\"name\":\"some other name\",\"description\":\"this is some other product\"}]}";
    JsonObject jobj = new Gson ().fromJson (jsonString, JsonObject.class);
    JsonArray ja = jobj.get ("search_result").getAsJsonArray ();
    ja.forEach (el -> {
        System.out.println ("product: " + el.getAsJsonObject ().get ("product").getAsString ());
        JsonObject jo = el.getAsJsonObject ().get ("question_mark").getAsJsonObject ();
        jo.entrySet ().stream ().forEach (qm -> {
            String key = qm.getKey ();
            JsonElement je = qm.getValue ();
            System.out.println ("key: " + key);
            JsonObject o = je.getAsJsonObject ();
            o.entrySet ().stream ().forEach (prop -> {
                System.out.println ("\tname: " + prop.getKey () + " (value: " + prop.getValue ().getAsString () + ")");
            });
        });
        System.out.println ("");
    });
}
----------------------------------------

public static void main (final String [] arg) {
    final MyObject fromJson = new Gson ().fromJson (INPUT, new TypeToken < MyObject > () {
    }

    .getType ());
    final List < Product > searchResult = fromJson.getSearchResult ();
    for (final Product p : searchResult) {
        System.out.println ("product: " + p.getProduct () + "\n" + p.getQuestionMark () + "\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7317579_47397055_11_22
7317579_47397055_29_41
Title: Difference between BlockingQueue and TransferQueue 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        try {
            System.out.println ("Producer waiting to transfer: " + i);
            queue.transfer ("" + i);
            System.out.println ("Producer transfered: " + i);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 2; i ++) {
        try {
            Thread.sleep (2000);
            System.out.println ("Consumer waiting to comsume: " + i);
            queue.take ();
            System.out.println ("Consumer consumed: " + i);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7334618_7334853_42_60
7334618_7334900_1_13
Title: Java : Swing : Hide frame after button pressed 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (dialog == null) {
        dialog = new JDialog (SwingUtilities.getWindowAncestor (myMain));
        dialog.setTitle ("Connect");
        dialog.setModal (true);
        cPanel = new ConnectionPanel (new ConnectionPanelControl () {
            @Override
            public void connectButtonAction () {
                final String connectStr = cPanel.getFieldText ();
                new MySwingWorker (connectStr).execute ();
            }}

        );
        dialog.getContentPane ().add (cPanel);
        dialog.pack ();
        dialog.setLocationRelativeTo (null);
    }
    dialog.setVisible (true);
}
----------------------------------------

public void actionPerformed (final ActionEvent e) {
    boolean success = true;
    if (success == false) {
        System.out.println ("Could not connect");
        return;
    }
    Window frame = SwingUtilities.windowForComponent ((Component) e.getSource ());
    frame.setVisible (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7338688_7338822_1_16
7338688_7342532_16_39
Title: "Java: Scanner from File into Arraylist then min/max/mean/standarddeviation" 
----------------------------------------

public static void main (String [] args) {
    List < Integer > scores = new ArrayList < Integer > ();
    try {
        Scanner sc = new Scanner (new FileReader ("students.txt"));
        while (sc.hasNextInt ()) {
            scores.add (sc.nextInt ());
        }
        sc.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    ArrayList < Integer > scores = new ArrayList < Integer > ();
    try {
        Scanner input = new Scanner (System.in);
        while (input.hasNextInt ()) {
            scores.add (input.nextInt ());
        }
        input.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    DescriptiveStats stat = new DescriptiveStats ();
    System.out.println ("Min = " + stat.getMin (scores));
    System.out.println ("Max = " + stat.getMax (scores));
    System.out.println ("Median = " + stat.getMedian (scores));
    System.out.println ("Mean = " + stat.getMean (scores));
    int Mean = stat.getMean (scores);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
736556_45994045_42_67
736556_998447_1_57
Title: Binary search in a sorted (memory-mapped ?) file in Java 
----------------------------------------

public static String binarySearch (final String prefix, final MappedByteBuffer buffer) {
    if (buffer == null) {
        return null;
    }
    try {
        long low = 0;
        long high = buffer.limit ();
        while (low < high) {
            int mid = (int) ((low + high) / 2);
            final String candidate = getLine (mid, buffer);
            if (found (candidate, prefix)) {
                return trimToNull (candidate);
            } else if (before (candidate, prefix)) {
                high = mid;
            } else {
                low = mid + 1;
            }

        }
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
    return null;
}
----------------------------------------

public static List < String > binarySearch (String filename, String string) {
    List < String > result = new ArrayList < String > ();
    try {
        File file = new File (filename);
        RandomAccessFile raf = new RandomAccessFile (file, "r");
        long low = 0;
        long high = file.length ();
        long p = - 1;
        while (low < high) {
            long mid = (low + high) / 2;
            p = mid;
            while (p >= 0) {
                raf.seek (p);
                char c = (char) raf.readByte ();
                if (c == '\n') break;

                p --;
            }
            if (p < 0) raf.seek (0);

            String line = raf.readLine ();
            if (line.compareTo (string) < 0) low = mid + 1;
            else high = mid;

        }
        p = low;
        while (p >= 0) {
            raf.seek (p);
            if (((char) raf.readByte ()) == '\n') break;

            p --;
        }
        if (p < 0) raf.seek (0);

        while (true) {
            String line = raf.readLine ();
            if (line == null || ! line.startsWith (string)) break;

            result.add (line);
        }
        raf.close ();
    } catch (IOException e) {
        System.out.println ("IOException:");
        e.printStackTrace ();
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7369025_15898626_1_25
7369025_8993571_1_28
Title: All Longest Common Subsequences 
----------------------------------------

private static HashSet < String > backtrackAll (int [] [] C, String s1, String s2, int i, int j) {
    if (i == 0 || j == 0) {
        HashSet < String > set = new HashSet < String > ();
        set.add ("");
        return set;
    } else if (s1.charAt (i - 1) == s2.charAt (j - 1)) {
        HashSet < String > R = backtrackAll (C, s1, s2, i - 1, j - 1);
        HashSet < String > new_set = new HashSet < String > ();
        for (String Z : R) {
            new_set.add (Z + s1.charAt (i - 1));
        }
        return new_set;
    } else {
        HashSet < String > R = new HashSet < String > ();
        if (C [i] [j - 1] >= C [i - 1] [j]) {
            R = backtrackAll (C, s1, s2, i, j - 1);
        }
        if (C [i - 1] [j] >= C [i] [j - 1]) {
            R.addAll (backtrackAll (C, s1, s2, i - 1, j));
        }
        return R;
    }

}
----------------------------------------

private static HashSet < String > backtrackAll (int [] [] C, String s1, String s2, int i, int j) {
    if (i == 0 || j == 0) {
        return new HashSet < String > ();
    } else if (s1.charAt (i - 1) == s2.charAt (j - 1)) {
        HashSet < String > R = backtrackAll (C, s1, s2, i - 1, j - 1);
        HashSet < String > new_set = new HashSet < String > ();
        for (String Z : R) {
            new_set.add (Z + s1.charAt (i - 1));
        }
        new_set.add ("" + s1.charAt (i - 1));
        return new_set;
    } else {
        HashSet < String > R = new HashSet < String > ();
        if (C [i] [j - 1] >= C [i - 1] [j]) {
            R = backtrackAll (C, s1, s2, i, j - 1);
        }
        if (C [i - 1] [j] >= C [i] [j - 1]) {
            R.addAll (backtrackAll (C, s1, s2, i - 1, j));
        }
        return R;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7373178_7373270_1_11
7373178_7373295_1_26
Title: All the numbers in one array are <= to another array 
----------------------------------------

private Boolean designFits (int [] max, int [] design) {
    if (max.length > design.length) return false;

    Arrays.sort (max, Collections.reverseOrder ());
    Arrays.sort (design, Collections.reverseOrder ());
    for (int i = 0;
    i < max.length; i ++) if (max [i] > design [i]) return false;

    return true;
}
----------------------------------------

private static boolean designFits (int [] source, int [] target) {
    if (source.length > target.length) {
        return false;
    }
    Arrays.sort (source);
    Arrays.sort (target);
    int targetSizeDiff = target.length - source.length;
    for (int i = 0;
    i < source.length; i ++) {
        if (source [i] > target [i + targetSizeDiff]) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7373800_7373931_1_10
7373800_7373994_10_19
Title: Split string into array by K? 
----------------------------------------

public char [] [] split (String str, int k) {
    char [] [] a = new char [Math.ceil ((double) str.length () / (double) k)] [0];
    for (int i = 0;
    i < str.length (); i += k) {
        String part = str.substring (i, Math.min (i + k, str.length ()));
        a [i / k] = part.toCharArray ();
    }
    return a;
}
----------------------------------------

public static char [] [] split (String s) {
    char [] [] result = new char [(s.length () + (K - 1)) / K] [K];
    int row = 0, col = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        result [row] [col] = c;
        if (col == K - 1) {
            row ++;
            col = 0;
        } else col ++;

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7378451_36959301_1_13
7378451_7378472_4_14
Title: java regex match count 
----------------------------------------

public static void main (String [] args) {
    String input = "aaaaaaaa";
    String regex = "aa";
    Pattern pattern = Pattern.compile (regex);
    Matcher matcher = pattern.matcher (input);
    int from = 0;
    int count = 0;
    while (matcher.find (from)) {
        count ++;
        from = matcher.start () + 1;
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String hello = "HelloxxxHelloxxxHello";
    Pattern pattern = Pattern.compile ("Hello");
    Matcher matcher = pattern.matcher (hello);
    int count = 0;
    while (matcher.find ()) count ++;

    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7383624_7383983_50_61
7383624_7383983_73_81
Title: How to transform List<X> to another List<Y> 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    sb.append (a + ",");
    sb.append (b + ",");
    sb.append (v + ",");
    sb.append (w + ",");
    sb.append (m + ",");
    sb.append (n);
    sb.append (")");
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7383624_7383983_50_61
7383624_7383983_93_101
Title: How to transform List<X> to another List<Y> 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("(");
    sb.append (a + ",");
    sb.append (b + ",");
    sb.append (v + ",");
    sb.append (w + ",");
    sb.append (m + ",");
    sb.append (n);
    sb.append (")");
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7383624_7383983_73_81
7383624_7383983_93_101
Title: How to transform List<X> to another List<Y> 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (a + "\n");
    sb.append (b + "\n");
    for (A elem : aList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------" + v + "\n");
    sb.append ("--------" + w + "\n");
    for (B elem : bList) {
        sb.append (elem + "\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7387299_7388965_46_53
7387299_7388965_55_62
Title: Dynamically adding items to a JComboBox 
----------------------------------------

public SortedComboBoxModel (Object [] items) {
    Arrays.sort (items);
    int size = items.length;
    for (int i = 0;
    i < size; i ++) {
        super.addElement (items [i]);
    }
    setSelectedItem (items [0]);
}
----------------------------------------

public SortedComboBoxModel (Vector items) {
    Collections.sort (items);
    int size = items.size ();
    for (int i = 0;
    i < size; i ++) {
        super.addElement (items.elementAt (i));
    }
    setSelectedItem (items.elementAt (0));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
740936_17378373_12_37
740936_3846616_5_19
Title: How do I sort records in a text file using Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader reader = null;
    PrintWriter outputStream = null;
    ArrayList < String > rows = new ArrayList < String > ();
    try {
        reader = new BufferedReader (new FileReader ("Input.txt"));
        outputStream = new PrintWriter (new FileWriter ("Output.txt"));
        String file;
        while ((file = reader.readLine ()) != null) {
            rows.add (file);
        }
        Collections.sort (rows);
        String [] strArr = rows.toArray (new String [0]);
        for (String cur : strArr) outputStream.println (cur);

    } finally {
        if (reader != null) {
            inputStream.close ();
        }
        if (outputStream != null) {
            outputStream.close ();
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader reader = new BufferedReader (new FileReader ("fileToRead.txt"));
    Map < String, String > map = new TreeMap < String, String > ();
    String line = "";
    while ((line = reader.readLine ()) != null) {
        map.put (getField (line), line);
    }
    reader.close ();
    BufferedWriter writer = new BufferedWriter (new FileWriter ("fileToWrite1.txt"));
    for (String val : map.values ()) {
        writer.write (val);
        writer.newLine ();
    }
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
740936_17378373_12_37
740936_740977_6_20
Title: How do I sort records in a text file using Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader reader = null;
    PrintWriter outputStream = null;
    ArrayList < String > rows = new ArrayList < String > ();
    try {
        reader = new BufferedReader (new FileReader ("Input.txt"));
        outputStream = new PrintWriter (new FileWriter ("Output.txt"));
        String file;
        while ((file = reader.readLine ()) != null) {
            rows.add (file);
        }
        Collections.sort (rows);
        String [] strArr = rows.toArray (new String [0]);
        for (String cur : strArr) outputStream.println (cur);

    } finally {
        if (reader != null) {
            inputStream.close ();
        }
        if (outputStream != null) {
            outputStream.close ();
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader reader = new BufferedReader (new FileReader ("fileToRead"));
    Map < String, String > map = new TreeMap < String, String > ();
    String line = "";
    while ((line = reader.readLine ()) != null) {
        map.put (getField (line), line);
    }
    reader.close ();
    FileWriter writer = new FileWriter ("fileToWrite");
    for (String val : map.values ()) {
        writer.write (val);
        writer.write ('\n');
    }
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
740936_3846616_5_19
740936_740977_6_20
Title: How do I sort records in a text file using Java? 
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader reader = new BufferedReader (new FileReader ("fileToRead.txt"));
    Map < String, String > map = new TreeMap < String, String > ();
    String line = "";
    while ((line = reader.readLine ()) != null) {
        map.put (getField (line), line);
    }
    reader.close ();
    BufferedWriter writer = new BufferedWriter (new FileWriter ("fileToWrite1.txt"));
    for (String val : map.values ()) {
        writer.write (val);
        writer.newLine ();
    }
    writer.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader reader = new BufferedReader (new FileReader ("fileToRead"));
    Map < String, String > map = new TreeMap < String, String > ();
    String line = "";
    while ((line = reader.readLine ()) != null) {
        map.put (getField (line), line);
    }
    reader.close ();
    FileWriter writer = new FileWriter ("fileToWrite");
    for (String val : map.values ()) {
        writer.write (val);
        writer.write ('\n');
    }
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7410972_7411019_3_28
7410972_7506199_9_40
Title: How to call main from inside class 
----------------------------------------

public static void start () {
    String instructions = "This program " + "" + "" + "" + "";
    System.out.println (instructions);
    System.out.println ("Chemical Sign: ");
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    String chemical = null;
    try {
        chemical = reader.readLine ();
        if (chemical.equals ("exit")) {
            System.exit (0);
        }
    } catch (IOException ioe) {
        System.out.println ("Error");
    }
    if (chemical.equals ("Ca")) {
        System.out.println ("Calcium");
    }
    main (null);
}
----------------------------------------

public static void start () {
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    String chemical = null;
    Boolean done = false;
    while (! done) {
        String instructions = "This program " + "" + "" + "" + "";
        System.out.println (instructions);
        System.out.println ("Chemical Sign: , enter exit to end");
        try {
            chemical = reader.readLine ();
            if (chemical.equals ("exit")) {
                done = true;
            }
        } catch (IOException ioe) {
            System.out.println ("Error");
        }
        if (chemical.equals ("Ca")) {
            System.out.println ("Calcium");
        } else {
            System.out.println ("not sure what that is...");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_16467773_1_13
7414667_38376285_1_13
Title: Identify duplicates in a List 
----------------------------------------

private < T > Set < T > findDuplicates (Collection < T > list) {
    Set < T > duplicates = new LinkedHashSet < T > ();
    Set < T > uniques = new HashSet < T > ();
    for (T t : list) {
        if (! uniques.add (t)) {
            duplicates.add (t);
        }
    }
    return duplicates;
}
----------------------------------------

public static final < T > Set < T > findDuplicates (final List < T > listWhichMayHaveDuplicates) {
    final Set < T > duplicates = new HashSet < > ();
    final int listSize = listWhichMayHaveDuplicates.size ();
    if (listSize > 0) {
        final Set < T > tempSet = new HashSet < > (listSize);
        for (final T element : listWhichMayHaveDuplicates) {
            if (! tempSet.add (element)) {
                duplicates.add (element);
            }
        }
    }
    return duplicates;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_38376285_1_13
7414667_7414753_1_14
Title: Identify duplicates in a List 
----------------------------------------

public static final < T > Set < T > findDuplicates (final List < T > listWhichMayHaveDuplicates) {
    final Set < T > duplicates = new HashSet < > ();
    final int listSize = listWhichMayHaveDuplicates.size ();
    if (listSize > 0) {
        final Set < T > tempSet = new HashSet < > (listSize);
        for (final T element : listWhichMayHaveDuplicates) {
            if (! tempSet.add (element)) {
                duplicates.add (element);
            }
        }
    }
    return duplicates;
}
----------------------------------------

public Set < Integer > findDuplicates (List < Integer > listContainingDuplicates) {
    final Set < Integer > setToReturn = new HashSet ();
    final Set < Integer > set1 = new HashSet ();
    for (Integer yourInt : listContainingDuplicates) {
        if (! set1.add (yourInt)) {
            setToReturn.add (yourInt);
        }
    }
    return setToReturn;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_42153037_3_21
7414667_47360189_4_16
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {2, 3, 4, 6, 6, 8, 10, 10, 10, 11, 12, 12};
    boolean flag = false;
    int k = 1;
    while (k == 1) {
        arr = removeDuplicate (arr);
        flag = checkDuplicate (arr, flag);
        if (flag) {
            k = 1;
        } else {
            k = 0;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.print (" Enter a set of 10 numbers: ");
    int [] numbers = new int [10];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < numbers.length; i ++) {
        numbers [i] = input.nextInt ();
    }
    numbers = onlyDuplicates (numbers);
    System.out.print (" The numbers are: ");
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.print (numbers [i] + "");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_42153037_3_21
7414667_49249787_2_22
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {2, 3, 4, 6, 6, 8, 10, 10, 10, 11, 12, 12};
    boolean flag = false;
    int k = 1;
    while (k == 1) {
        arr = removeDuplicate (arr);
        flag = checkDuplicate (arr, flag);
        if (flag) {
            k = 1;
        } else {
            k = 0;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > listOf = new ArrayList < Integer > ();
    listOf.add (3);
    listOf.add (1);
    listOf.add (2);
    listOf.add (3);
    listOf.add (3);
    listOf.add (2);
    listOf.add (1);
    List < Integer > tempList = new ArrayList < Integer > ();
    for (Integer obj : listOf) {
        if (! tempList.contains (obj)) {
            tempList.add (obj);
        }
    }
    System.out.println (tempList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_42153037_3_21
7414667_52671319_1_32
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {2, 3, 4, 6, 6, 8, 10, 10, 10, 11, 12, 12};
    boolean flag = false;
    int k = 1;
    while (k == 1) {
        arr = removeDuplicate (arr);
        flag = checkDuplicate (arr, flag);
        if (flag) {
            k = 1;
        } else {
            k = 0;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {13, 65, 13, 67, 88, 65, 88, 23, 65, 88, 92};
    List < Integer > ls1 = new ArrayList < > ();
    List < Integer > ls2 = new ArrayList < > ();
    Set < Integer > ls3 = new TreeSet < > ();
    for (int i = 0;
    i < a.length; i ++) {
        {
            ls1.add (a [i]);
        }}
    for (Integer eachInt : ls1) {
        if (ls2.contains (eachInt)) {
            ls3.add (eachInt);
        } else {
            ls2.add (eachInt);
        }
    }
    System.out.println ("Elements in array or ls1" + ls1);
    System.out.println ("Duplicate Elements in Set ls3" + ls3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_42153037_3_21
7414667_7414731_1_29
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {2, 3, 4, 6, 6, 8, 10, 10, 10, 11, 12, 12};
    boolean flag = false;
    int k = 1;
    while (k == 1) {
        arr = removeDuplicate (arr);
        flag = checkDuplicate (arr, flag);
        if (flag) {
            k = 1;
        } else {
            k = 0;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = new LinkedList < Integer > ();
    list.add (1);
    list.add (1);
    list.add (1);
    list.add (2);
    list.add (3);
    list.add (3);
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (Integer x : list) {
        Integer val = map.get (x);
        if (val == null) {
            map.put (x, 1);
        } else {
            map.remove (x);
            map.put (x, val + 1);
        }
    }
    List < Integer > result = new LinkedList < Integer > ();
    for (Entry < Integer, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            result.add (entry.getKey ());
        }
    }
    for (Integer x : result) {
        System.out.println (x);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_47360189_4_16
7414667_49249787_2_22
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    System.out.print (" Enter a set of 10 numbers: ");
    int [] numbers = new int [10];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < numbers.length; i ++) {
        numbers [i] = input.nextInt ();
    }
    numbers = onlyDuplicates (numbers);
    System.out.print (" The numbers are: ");
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.print (numbers [i] + "");
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > listOf = new ArrayList < Integer > ();
    listOf.add (3);
    listOf.add (1);
    listOf.add (2);
    listOf.add (3);
    listOf.add (3);
    listOf.add (2);
    listOf.add (1);
    List < Integer > tempList = new ArrayList < Integer > ();
    for (Integer obj : listOf) {
        if (! tempList.contains (obj)) {
            tempList.add (obj);
        }
    }
    System.out.println (tempList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_47360189_4_16
7414667_52671319_1_32
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    System.out.print (" Enter a set of 10 numbers: ");
    int [] numbers = new int [10];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < numbers.length; i ++) {
        numbers [i] = input.nextInt ();
    }
    numbers = onlyDuplicates (numbers);
    System.out.print (" The numbers are: ");
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.print (numbers [i] + "");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {13, 65, 13, 67, 88, 65, 88, 23, 65, 88, 92};
    List < Integer > ls1 = new ArrayList < > ();
    List < Integer > ls2 = new ArrayList < > ();
    Set < Integer > ls3 = new TreeSet < > ();
    for (int i = 0;
    i < a.length; i ++) {
        {
            ls1.add (a [i]);
        }}
    for (Integer eachInt : ls1) {
        if (ls2.contains (eachInt)) {
            ls3.add (eachInt);
        } else {
            ls2.add (eachInt);
        }
    }
    System.out.println ("Elements in array or ls1" + ls1);
    System.out.println ("Duplicate Elements in Set ls3" + ls3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_47360189_4_16
7414667_7414731_1_29
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    System.out.print (" Enter a set of 10 numbers: ");
    int [] numbers = new int [10];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < numbers.length; i ++) {
        numbers [i] = input.nextInt ();
    }
    numbers = onlyDuplicates (numbers);
    System.out.print (" The numbers are: ");
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.print (numbers [i] + "");
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = new LinkedList < Integer > ();
    list.add (1);
    list.add (1);
    list.add (1);
    list.add (2);
    list.add (3);
    list.add (3);
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (Integer x : list) {
        Integer val = map.get (x);
        if (val == null) {
            map.put (x, 1);
        } else {
            map.remove (x);
            map.put (x, val + 1);
        }
    }
    List < Integer > result = new LinkedList < Integer > ();
    for (Entry < Integer, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            result.add (entry.getKey ());
        }
    }
    for (Integer x : result) {
        System.out.println (x);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_49249787_2_22
7414667_52671319_1_32
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    List < Integer > listOf = new ArrayList < Integer > ();
    listOf.add (3);
    listOf.add (1);
    listOf.add (2);
    listOf.add (3);
    listOf.add (3);
    listOf.add (2);
    listOf.add (1);
    List < Integer > tempList = new ArrayList < Integer > ();
    for (Integer obj : listOf) {
        if (! tempList.contains (obj)) {
            tempList.add (obj);
        }
    }
    System.out.println (tempList);
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {13, 65, 13, 67, 88, 65, 88, 23, 65, 88, 92};
    List < Integer > ls1 = new ArrayList < > ();
    List < Integer > ls2 = new ArrayList < > ();
    Set < Integer > ls3 = new TreeSet < > ();
    for (int i = 0;
    i < a.length; i ++) {
        {
            ls1.add (a [i]);
        }}
    for (Integer eachInt : ls1) {
        if (ls2.contains (eachInt)) {
            ls3.add (eachInt);
        } else {
            ls2.add (eachInt);
        }
    }
    System.out.println ("Elements in array or ls1" + ls1);
    System.out.println ("Duplicate Elements in Set ls3" + ls3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_49249787_2_22
7414667_7414731_1_29
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    List < Integer > listOf = new ArrayList < Integer > ();
    listOf.add (3);
    listOf.add (1);
    listOf.add (2);
    listOf.add (3);
    listOf.add (3);
    listOf.add (2);
    listOf.add (1);
    List < Integer > tempList = new ArrayList < Integer > ();
    for (Integer obj : listOf) {
        if (! tempList.contains (obj)) {
            tempList.add (obj);
        }
    }
    System.out.println (tempList);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = new LinkedList < Integer > ();
    list.add (1);
    list.add (1);
    list.add (1);
    list.add (2);
    list.add (3);
    list.add (3);
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (Integer x : list) {
        Integer val = map.get (x);
        if (val == null) {
            map.put (x, 1);
        } else {
            map.remove (x);
            map.put (x, val + 1);
        }
    }
    List < Integer > result = new LinkedList < Integer > ();
    for (Entry < Integer, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            result.add (entry.getKey ());
        }
    }
    for (Integer x : result) {
        System.out.println (x);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7414667_52671319_1_32
7414667_7414731_1_29
Title: Identify duplicates in a List 
----------------------------------------

public static void main (String [] args) {
    int [] a = {13, 65, 13, 67, 88, 65, 88, 23, 65, 88, 92};
    List < Integer > ls1 = new ArrayList < > ();
    List < Integer > ls2 = new ArrayList < > ();
    Set < Integer > ls3 = new TreeSet < > ();
    for (int i = 0;
    i < a.length; i ++) {
        {
            ls1.add (a [i]);
        }}
    for (Integer eachInt : ls1) {
        if (ls2.contains (eachInt)) {
            ls3.add (eachInt);
        } else {
            ls2.add (eachInt);
        }
    }
    System.out.println ("Elements in array or ls1" + ls1);
    System.out.println ("Duplicate Elements in Set ls3" + ls3);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > list = new LinkedList < Integer > ();
    list.add (1);
    list.add (1);
    list.add (1);
    list.add (2);
    list.add (3);
    list.add (3);
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (Integer x : list) {
        Integer val = map.get (x);
        if (val == null) {
            map.put (x, 1);
        } else {
            map.remove (x);
            map.put (x, val + 1);
        }
    }
    List < Integer > result = new LinkedList < Integer > ();
    for (Entry < Integer, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            result.add (entry.getKey ());
        }
    }
    for (Integer x : result) {
        System.out.println (x);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7418909_7419124_2_25
7418909_7419139_3_12
Title: SwingUtilites: how to return values from another thread in Java? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    final AtomicReference < String > result = new AtomicReference < String > ();
    final CountDownLatch latch = new CountDownLatch (1);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            String input = JOptionPane.showInputDialog (null, "Stop?", "Stop?", JOptionPane.QUESTION_MESSAGE);
            result.set (input);
            latch.countDown ();
        }}

    );
    latch.await ();
    System.out.println (result.get ());
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    SwingUtilities.invokeAndWait (new Runnable () {
        public void run () {
            mySharedData = JOptionPane.showInputDialog (null, "Stop ?", JOptionPane.QUESTION_MESSAGE);
        }}

    );
    System.out.println (mySharedData);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7418909_7419124_2_25
7418909_7420068_52_75
Title: SwingUtilites: how to return values from another thread in Java? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    final AtomicReference < String > result = new AtomicReference < String > ();
    final CountDownLatch latch = new CountDownLatch (1);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            String input = JOptionPane.showInputDialog (null, "Stop?", "Stop?", JOptionPane.QUESTION_MESSAGE);
            result.set (input);
            latch.countDown ();
        }}

    );
    latch.await ();
    System.out.println (result.get ());
}
----------------------------------------

public static void main (String [] args) {
    final ListenToSwing listenToSwing = new ListenToSwing ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ("ListenToSwing");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.getContentPane ().add (listenToSwing.getMainPanel ());
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
    listenToSwing.addPropertyChangeListener (new PropertyChangeListener () {
        @Override
        public void propertyChange (PropertyChangeEvent evt) {
            if (evt.getPropertyName ().equals (ListenToSwing.STATE)) {
                System.out.println ("New state: " + listenToSwing.getState ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7418909_7419139_3_12
7418909_7420068_52_75
Title: SwingUtilites: how to return values from another thread in Java? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    SwingUtilities.invokeAndWait (new Runnable () {
        public void run () {
            mySharedData = JOptionPane.showInputDialog (null, "Stop ?", JOptionPane.QUESTION_MESSAGE);
        }}

    );
    System.out.println (mySharedData);
}
----------------------------------------

public static void main (String [] args) {
    final ListenToSwing listenToSwing = new ListenToSwing ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ("ListenToSwing");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.getContentPane ().add (listenToSwing.getMainPanel ());
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
    listenToSwing.addPropertyChangeListener (new PropertyChangeListener () {
        @Override
        public void propertyChange (PropertyChangeEvent evt) {
            if (evt.getPropertyName ().equals (ListenToSwing.STATE)) {
                System.out.println ("New state: " + listenToSwing.getState ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7437987_44737512_1_33
7437987_47049557_4_18
Title: How to convert binary string value to decimal 
----------------------------------------

public static void main (String [] args) {
    java.util.Scanner scan = new java.util.Scanner (System.in);
    long decimalValue = 0;
    System.out.println ("Please enter a positive binary number.(Only 1s and 0s)");
    String element = scan.nextLine ();
    String [] array = element.split ("");
    int [] numberSplit = new int [array.length];
    int position = array.length - 1;
    for (int i = 0;
    i < array.length; i ++) {
        numberSplit [i] = Integer.parseInt (array [i]);
    }
    for (int i = 0;
    i < array.length; i ++) {
        if (numberSplit [position] == 1) {
            decimalValue = decimalValue + (long) Math.pow (2, i);
        }
        position --;
    }
    System.out.println (decimalValue);
    main (null);
}
----------------------------------------

public static void main () {
    Scanner sc = new Scanner (System.in);
    System.out.println ("enter the binary number");
    double s = sc.nextDouble ();
    int c = 0;
    long s1 = 0;
    while (s > 0) {
        s1 = s1 + (long) (Math.pow (2, c) * (long) (s % 10));
        s = (long) s / 10;
        c ++;
    }
    System.out.println ("The respective decimal number is : " + s1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7442310_7442529_117_176
7442310_7442529_39_48
Title: Adding elements to JList in Swing Java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    timer.start ();
    if (count > 5) {
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    Thread.sleep (750);
                    changeBtnForegroung (Color.darkGray);
                    Thread.sleep (750);
                    count = 0;
                    Thread.sleep (750);
                } catch (Exception e) {
                    System.out.println (e);
                }
            }}

        ).start ();
    } else {
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    runs = true;
                    if (noColor < 2) {
                        noColor ++;
                        changeBtnForegroung (clr [noColor]);
                    } else {
                        noColor = 0;
                        changeBtnForegroung (clr [noColor]);
                    }
                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
                    border = new EmptyBorder (0, 5, 10, 5);
                    changePnlBorder (border);
                    Thread.sleep (100);
                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
                    border = new EmptyBorder (0, 0, 10, 10);
                    changePnlBorder (border);
                    Thread.sleep (100);
                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
                    border = new EmptyBorder (5, 10, 5, 0);
                    changePnlBorder (border);
                    Thread.sleep (100);
                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
                    border = new EmptyBorder (10, 10, 0, 0);
                    changePnlBorder (border);
                    Thread.sleep (100);
                    changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));
                    border = new EmptyBorder (5, 5, 5, 5);
                    changePnlBorder (border);
                    Thread.sleep (100);
                    count ++;
                } catch (Exception e) {
                    System.out.println (e);
                }
            }}

        ).start ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    Runnable doRun = new Runnable () {
        @Override
        public void run () {
            System.exit (0);
        }}

    ;
    SwingUtilities.invokeLater (doRun);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7442310_7442529_123_133
7442310_7442529_139_173
Title: Adding elements to JList in Swing Java 
----------------------------------------

public void run () {
    try {
        Thread.sleep (750);
        changeBtnForegroung (Color.darkGray);
        Thread.sleep (750);
        count = 0;
        Thread.sleep (750);
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------

public void run () {
    try {
        runs = true;
        if (noColor < 2) {
            noColor ++;
            changeBtnForegroung (clr [noColor]);
        } else {
            noColor = 0;
            changeBtnForegroung (clr [noColor]);
        }
        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        border = new EmptyBorder (0, 5, 10, 5);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
        border = new EmptyBorder (0, 0, 10, 10);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));
        border = new EmptyBorder (5, 10, 5, 0);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));
        border = new EmptyBorder (10, 10, 0, 0);
        changePnlBorder (border);
        Thread.sleep (100);
        changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));
        border = new EmptyBorder (5, 5, 5, 5);
        changePnlBorder (border);
        Thread.sleep (100);
        count ++;
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7443884_7444175_10_68
7443884_7444974_58_66
Title: How to move the image inside the JApplet in vertical line? 
----------------------------------------

public static void main (String [] args) {
    final int w = 640;
    final int h = 480;
    final RenderingHints hints = new RenderingHints (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    hints.put (RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
    final BufferedImage bi = new BufferedImage (w, h, BufferedImage.TYPE_INT_ARGB);
    final JLabel l = new JLabel (new ImageIcon (bi));
    final BouncingLine [] lines = new BouncingLine [100];
    int factor = 1;
    for (int ii = 0;
    ii < lines.length; ii ++) {
        lines [ii] = new BouncingLine (w * factor, h * factor);
    }
    final Font font = new Font ("Arial", Font.BOLD, 30);
    ActionListener al = new ActionListener () {
        int count = 0;
        long lastTime;
        String fps = "";
        private final BasicStroke stroke = new BasicStroke (6);
        public void actionPerformed (ActionEvent ae) {
            count ++;
            Graphics2D g = bi.createGraphics ();
            g.setRenderingHints (hints);
            g.setColor (new Color (55, 12, 59));
            g.fillRect (0, 0, w, h);
            g.setStroke (stroke);
            for (int ii = 0;
            ii < lines.length; ii ++) {
                lines [ii].move ();
                lines [ii].paint (g);
            }
            if (System.currentTimeMillis () - lastTime > 1000) {
                lastTime = System.currentTimeMillis ();
                fps = count + " FPS";
                count = 0;
            }
            g.setColor (Color.YELLOW);
            g.setFont (font);
            g.drawString (fps, 5, h - 5);
            l.repaint ();
            g.dispose ();
        }}

    ;
    Timer timer = new Timer (25, al);
    timer.start ();
    JOptionPane.showMessageDialog (null, l);
    timer.stop ();
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            AnimationBackground aBg = new AnimationBackground ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7443884_7444175_98_128
7443884_7444974_96_105
Title: How to move the image inside the JApplet in vertical line? 
----------------------------------------

public void move () {
    int tx1 = 0;
    if (line.getX1 () + x1 > 0 && line.getX1 () + x1 < w) {
        tx1 = (int) line.getX1 () + x1;
    } else {
        x1 = - x1;
        tx1 = (int) line.getX1 () + x1;
    }
    int ty1 = 0;
    if (line.getY1 () + y1 > 0 && line.getY1 () + y1 < h) {
        ty1 = (int) line.getY1 () + y1;
    } else {
        y1 = - y1;
        ty1 = (int) line.getY1 () + y1;
    }
    int tx2 = 0;
    if (line.getX2 () + x2 > 0 && line.getX2 () + x2 < w) {
        tx2 = (int) line.getX2 () + x2;
    } else {
        x2 = - x2;
        tx2 = (int) line.getX2 () + x2;
    }
    int ty2 = 0;
    if (line.getY2 () + y2 > 0 && line.getY2 () + y2 < h) {
        ty2 = (int) line.getY2 () + y2;
    } else {
        y2 = - y2;
        ty2 = (int) line.getY2 () + y2;
    }
    line.setLine (tx1, ty1, tx2, ty2);
}
----------------------------------------

public void move () {
    if (location.x < 0 || location.x > WIDTH) {
        xIncr = - xIncr;
    }
    if (location.y < 0 || location.y > WIDTH) {
        yIncr = - yIncr;
    }
    translate (xIncr, yIncr);
    location.setLocation (location.x + xIncr, location.y + yIncr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7454656_7455045_36_62
7454656_7455066_46_69
Title: Applet not appearing full 
----------------------------------------

public RconSection () {
    super (new BorderLayout (3, 3));
    JLabel ip = new JLabel ("IP");
    JLabel port = new JLabel ("Port");
    JLabel rPass = new JLabel ("Rcon Password");
    JButton testButton = new JButton ("Test");
    testButton.setActionCommand (TEST_COMMAND);
    JButton clearButton = new JButton ("Clear");
    clearButton.setActionCommand (CLEAR_COMMAND);
    JPanel panel = new JPanel (new GridLayout (3, 2));
    panel.add (ip);
    panel.add (ipText);
    panel.add (port);
    panel.add (portText);
    panel.add (rPass);
    panel.add (rPassText);
    JPanel panel1 = new JPanel (new FlowLayout (FlowLayout.CENTER, 5, 5));
    panel1.add (testButton);
    panel1.add (clearButton);
    add (panel, BorderLayout.CENTER);
    add (panel1, BorderLayout.SOUTH);
}
----------------------------------------

public RconSection () {
    super (new BorderLayout ());
    JLabel ip = new JLabel ("IP");
    JLabel port = new JLabel ("Port");
    JLabel rPass = new JLabel ("Rcon Password");
    JButton testButton = new JButton ("Test");
    testButton.setActionCommand (TEST_COMMAND);
    testButton.addActionListener (this);
    JButton clearButton = new JButton ("Clear");
    clearButton.setActionCommand (CLEAR_COMMAND);
    clearButton.addActionListener (this);
    JPanel panel = new JPanel (new GridLayout (3, 2));
    panel.add (ip);
    panel.add (ipText);
    panel.add (port);
    panel.add (portText);
    panel.add (rPass);
    panel.add (rPassText);
    JPanel buttons = new JPanel ();
    buttons.add (testButton);
    buttons.add (clearButton);
    add (panel, BorderLayout.NORTH);
    add (buttons, BorderLayout.SOUTH);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7455862_20306145_84_93
7455862_7456225_3_11
Title: Infix to Postfix using stacks 
----------------------------------------

private static int priority (char operator) {
    switch (operator) {
        case '^' :
            return 3;
        case '*' :
        case '/' :
            return 2;
        case '+' :
        case '-' :
            return 1;
    }
    return 0;
}
----------------------------------------

private int priority (char ch) {
    if (ch == '^') return 3;

    if (ch == '/' || ch == '*') return 2;

    if (ch == '+' || ch == '-') return 1;

    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7461477_38991489_149_173
7461477_7461575_40_50
Title: How to hide a JFrame in system tray of taskbar 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    MenuItem item = (MenuItem) e.getSource ();
    System.out.println (item.getLabel ());
    if ("Error".equals (item.getLabel ())) {
        trayIcon.displayMessage ("Sun TrayIcon Demo", "This is an error message", TrayIcon.MessageType.ERROR);
    } else if ("Warning".equals (item.getLabel ())) {
        trayIcon.displayMessage ("Sun TrayIcon Demo", "This is a warning message", TrayIcon.MessageType.WARNING);
    } else if ("Info".equals (item.getLabel ())) {
        trayIcon.displayMessage ("Sun TrayIcon Demo", "This is an info message", TrayIcon.MessageType.INFO);
    } else if ("None".equals (item.getLabel ())) {
        trayIcon.displayMessage ("Sun TrayIcon Demo", "This is an ordinary message", TrayIcon.MessageType.NONE);
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    timer.stop ();
    myFrame.setExtendedState (JFrame.NORMAL);
    System.out.println (myFrame.getExtendedState ());
    count ++;
    if (count > 5) {
        timer.stop ();
        stop ();
    }
    start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7461477_38991489_43_66
7461477_7461575_58_65
Title: How to hide a JFrame in system tray of taskbar 
----------------------------------------

public static void main (String [] args) {
    try {
        UIManager.setLookAndFeel ("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
    } catch (UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    } catch (IllegalAccessException ex) {
        ex.printStackTrace ();
    } catch (InstantiationException ex) {
        ex.printStackTrace ();
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace ();
    }
    UIManager.put ("swing.boldMetal", Boolean.FALSE);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            WindowGCDemo1 windowGCDemo = new WindowGCDemo1 ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7489247_7490096_12_21
7489247_7490096_32_41
Title: Reflection across threads 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("T: " + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("R: " + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7498751_44359444_10_24
7498751_7499063_14_27
Title: Get the keys with the biggest values from a hashmap? 
----------------------------------------

public static void main (String [] args) {
    BufferedReader bufferedReader = new BufferedReader (new InputStreamReader (System.in));
    try {
        System.out.println ("Enter the sentence: ");
        String sentence = bufferedReader.readLine ();
        FindWordCounter.countWord (sentence);
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------

public static void main (String [] args) {
    Set < Frequency > set = new TreeSet < Frequency > ();
    set.add (new Frequency ("fred", 1));
    set.add (new Frequency ("bob", 5));
    set.add (new Frequency ("jim", 10));
    set.add (new Frequency ("bert", 4));
    set.add (new Frequency ("art", 3));
    set.add (new Frequency ("homer", 5));
    for (Frequency f : set) {
        System.out.println (f);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7505910_7506008_1_13
7505910_7506381_2_25
Title: Concatenating string content VALUES of multiple arraylists . Strange problem 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > finalList = new ArrayList < String > ();
    ArrayList < String > x = new ArrayList < String > ();
    x.add ("Green");
    x.add ("Red");
    ArrayList < String > y = new ArrayList < String > ();
    y.add (" Apple");
    ArrayList < String > z = new ArrayList < String > ();
    z.add (" USA");
    z.add (" Canada");
    finalList = concat (x, y, z);
    System.out.println (finalList);
}
----------------------------------------

public static void main (String [] args) {
    List < List < String > > finalList = new ArrayList < List < String > > ();
    List < String > x = new ArrayList < String > ();
    x.add ("Green");
    x.add ("Red");
    x.add ("Purple");
    List < String > y = new ArrayList < String > ();
    y.add ("Apple");
    List < String > z = new ArrayList < String > ();
    z.add ("USA");
    z.add ("UK");
    z.add ("France");
    finalList.add (x);
    finalList.add (y);
    finalList.add (z);
    for (String s : concat (finalList)) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7507121_23105793_1_15
7507121_7507225_1_14
Title: Efficient way to Handle ResultSet in Java 
----------------------------------------

private Map < String, List < Object > > resultSetToArrayList (ResultSet rs) throws SQLException {
    ResultSetMetaData md = rs.getMetaData ();
    int columns = md.getColumnCount ();
    Map < String, List < Object > > map = new HashMap < > (columns);
    for (int i = 1;
    i <= columns; ++ i) {
        map.put (md.getColumnName (i), new ArrayList < > ());
    }
    while (rs.next ()) {
        for (int i = 1;
        i <= columns; ++ i) {
            map.get (md.getColumnName (i)).add (rs.getObject (i));
        }
    }
    return map;
}
----------------------------------------

public List resultSetToArrayList (ResultSet rs) throws SQLException {
    ResultSetMetaData md = rs.getMetaData ();
    int columns = md.getColumnCount ();
    ArrayList list = new ArrayList (50);
    while (rs.next ()) {
        HashMap row = new HashMap (columns);
        for (int i = 1;
        i <= columns; ++ i) {
            row.put (md.getColumnName (i), rs.getObject (i));
        }
        list.add (row);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7541843_51843316_1_19
7541843_7541875_14_24
Title: "How to search for comments (""<!-- -->"") using Jsoup?" 
----------------------------------------

private void removeComments (Element article) {
    article.filter (new NodeFilter () {
        @Override
        public FilterResult tail (Node node, int depth) {
            if (node instanceof Comment) {
                return FilterResult.REMOVE;
            }
            return FilterResult.CONTINUE;
        }@Override
        public FilterResult head (Node node, int depth) {
            if (node instanceof Comment) {
                return FilterResult.REMOVE;
            }
            return FilterResult.CONTINUE;
        }}

    );
}
----------------------------------------

private static void removeComments (Node node) {
    for (int i = 0;
    i < node.childNodesSize ();) {
        Node child = node.childNode (i);
        if (child.nodeName ().equals ("#comment")) child.remove ();
        else {
            removeComments (child);
            i ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7585699_40766409_155_221
7585699_7616206_43_52
Title: List of useful environment settings in Java 
----------------------------------------

public static void main (String args []) throws Exception {
    out.println ("****************************************");
    out.println ("DATE INFO");
    printCurrentTime ();
    out.println ("");
    out.println ("****************************************");
    out.println ("JVM COMMAND LINE ARGUMENTS");
    printCommandLineArguments ();
    out.println ("");
    out.println ("****************************************");
    out.println ("ENVIRONMENT");
    printSystemEnvironment ();
    out.println ("");
    out.println ("****************************************");
    out.println ("SYSTEM PROPERTIES");
    printSystemProperties ();
    out.println ("");
    out.println ("****************************************");
    out.println ("CLASS LOADER");
    printClassLoaderInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("OPERATING SYSTEM");
    printOSInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("MEMORY");
    printRuntimeMemory ();
    out.println ("");
    out.println ("****************************************");
    out.println ("CPU");
    printCPUUsage ();
    out.println ("");
    out.println ("****************************************");
    out.println ("DISK");
    printDiskInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("NETWORK");
    printNetworkInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("SECURITY");
    printSecurityInfo ();
    out.println ("");
    out.println ("");
    out.println ("****************************************");
    out.println ("LOG");
    printLoggingInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("KEY MANAGER");
    printKeyManagerInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("DISPLAY DEVICES");
    printDisplayInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("FONTS");
    printFontsInfo ();
    out.println ("");
    out.println ("****************************************");
    out.println ("LOCALES");
    printLocaleInfo ();
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = () -> {
        MediaTypes mediaTypes = new MediaTypes ();
        JPanel p = new JPanel ();
        mediaTypes.createGui (p);
        JOptionPane.showMessageDialog (null, p);
    };
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7594328_7594409_4_13
7594328_7594501_3_11
Title: for-loop & ArrayList<Integer> 
----------------------------------------

public static void main (String [] args) {
    List < Integer > hookSizesList = new ArrayList < Integer > ();
    hookSizesList.add (1);
    hookSizesList.add (4);
    hookSizesList.add (5);
    for (Integer hook : hookSizesList) {
        System.out.print (hook + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Integer hookSizeList;
    ArrayList < Integer > hookSizesList = new ArrayList < Integer > ();
    hookSizesList.add (1);
    hookSizesList.add (4);
    hookSizesList.add (5);
    for (Integer hook : hookSizesList) System.out.print (hook + " ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
759909_29356055_15_35
759909_38655290_6_21
Title: How to add total page number on every page with iText? 
----------------------------------------

public void onEndPage (PdfWriter writer, Document document) {
    final int currentPageNumber = writer.getCurrentPageNumber ();
    if (currentPageNumber == 1) {
        return;
    }
    try {
        final Rectangle pageSize = document.getPageSize ();
        final PdfContentByte directContent = writer.getDirectContent ();
        directContent.setColorFill (BaseColor.GRAY);
        directContent.setFontAndSize (BaseFont.createFont (), 10);
        directContent.setTextMatrix (pageSize.getRight (40), pageSize.getBottom (30));
        directContent.showText (String.valueOf (currentPageNumber));
    } catch (DocumentException | IOException e) {
        logger.error ("PDF generation error", e);
    }
}
----------------------------------------

public void onEndPage (PdfWriter writer, Document document) {
    _pg ++;
    PdfContentByte cb = writer.getDirectContent ();
    cb.beginText ();
    try {
        Rectangle pageSize = document.getPageSize ();
        cb.setFontAndSize (font, 8);
        cb.setTextMatrix (pageSize.getLeft (40), pageSize.getBottom (15));
        String s = "Page " + _pg + "/";
        cb.showText (s);
        cb.addTemplate (template, pageSize.getLeft (40) + font.getWidthPoint (s, 8), pageSize.getBottom (15));
    } catch (Exception exc) {
        logger.warn ("got Exception : " + exc.getMessage ());
    }
    cb.endText ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
760228_2433462_23_34
760228_2433462_36_53
Title: How do you merge two input streams in Java? 
----------------------------------------

public final void put (byte b) {
    synchronized (lock) {
        while (state != State.EMPTY) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
            }
        }
        this.b = b;
        state = State.ONE;
        lock.notifyAll ();
    }
}
----------------------------------------

public final void put (byte [] bytes, int offset, int length) {
    if (length == 0) {
        return;
    }
    synchronized (lock) {
        while (state != State.EMPTY) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
            }
        }
        this.bytes = ByteBuffer.allocateDirect (length);
        this.bytes.put (bytes, offset, length);
        this.bytes.position (0);
        this.length = length;
        state = State.MANY;
        lock.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
760228_2433462_55_79
760228_2433462_81_116
Title: How do you merge two input streams in Java? 
----------------------------------------

public final byte take () {
    synchronized (lock) {
        while (state == State.EMPTY) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
            }
        }
        switch (state) {
            case ONE :
                {
                    state = State.EMPTY;
                    byte b = this.b;
                    lock.notifyAll ();
                    return b;
                } case MANY :
                {
                    byte b = bytes.get ();
                    state = -- length <= 0 ? State.EMPTY : State.MANY;
                    lock.notifyAll ();
                    return b;
                } default :
                throw new AssertionError ();
        }
    }
}
----------------------------------------

public final int take (byte [] bytes, int offset, int length) {
    if (length == 0) {
        return 0;
    }
    synchronized (lock) {
        while (state == State.EMPTY) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
            }
        }
        switch (state) {
            case ONE :
                bytes [offset] = b;
                state = State.EMPTY;
                lock.notifyAll ();
                return 1;
            case MANY :
                if (this.length > length) {
                    this.bytes.get (bytes, offset, length);
                    this.length = this.length - length;
                    synchronized (lock) {
                        lock.notifyAll ();
                    }
                    return length;
                }
                this.bytes.get (bytes, offset, this.length);
                this.bytes = null;
                state = State.EMPTY;
                length = this.length;
                lock.notifyAll ();
                return length;
            default :
                throw new AssertionError ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7610790_36681863_4_25
7610790_48832446_1_14
Title: Add custom headers to WebView resource requests - android 
----------------------------------------

public WebResourceResponse shouldInterceptRequest (WebView view, String url) {
    try {
        OkHttpClient httpClient = new OkHttpClient ();
        com.squareup.okhttp.Request request = new com.squareup.okhttp.Request.Builder ().url (url.trim ()).addHeader ("<your-custom-header-name>", "<your-custom-header-value>").build ();
        com.squareup.okhttp.Response response = httpClient.newCall (request).execute ();
        return new WebResourceResponse (response.header ("content-type", response.body ().contentType ().type ()), response.header ("content-encoding", "utf-8"), response.body ().byteStream ());
    } catch (ClientProtocolException e) {
        return null;
    } catch (IOException e) {
        return null;
    }
}
----------------------------------------

@Override
public boolean shouldInterceptRequest (WebView view, WebResourceRequest request) {
    if (request.getRequestHeaders ().containsKey ("Your Header")) return null;

    Map < String, String > customHeaders = new HashMap < String, String > ();
    customHeaders.put ("Your Header", "Your Header Value");
    view.loadUrl (url, customHeaders);
    return new WebResourceResponse ("", "", null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7611183_10701179_1_22
7611183_7611561_1_33
Title: How do I run multiple commands in SSH through Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    final SSHClient ssh = new SSHClient ();
    ssh.loadKnownHosts ();
    ssh.connect ("10.x.x.x");
    try {
        ssh.authPassword ("user", "xxxx");
        final Session session = ssh.startSession ();
        try {
            final Command cmd = session.exec ("cd /backup; ls; ./backup.sh");
            System.out.println (IOUtils.readFully (cmd.getInputStream ()).toString ());
            cmd.join (5, TimeUnit.SECONDS);
            System.out.println ("\n** exit status: " + cmd.getExitStatus ());
        } finally {
            session.close ();
        }
    } finally {
        ssh.disconnect ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String [] cmd = {"ssh", "root@localhost", "'ls asd; ls'"};
    final Process p = Runtime.getRuntime ().exec (cmd);
    new Thread () {
        @Override
        public void run () {
            try {
                BufferedReader err = new BufferedReader (new InputStreamReader (p.getErrorStream ()));
                String in;
                while ((in = err.readLine ()) != null) System.err.println (in);

                err.close ();
            } catch (IOException e) {
            }
        }}

    .start ();
    InputStreamReader isr = new InputStreamReader (p.getInputStream ());
    BufferedReader reader = new BufferedReader (isr);
    StringBuilder ret = new StringBuilder ();
    char [] data = new char [1024];
    int read;
    while ((read = reader.read (data)) != - 1) ret.append (data, 0, read);

    reader.close ();
    int exitCode = p.waitFor ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7613577_7613653_9_19
7613577_7613768_53_61
Title: Java - how do I prevent WindowClosing from actually closing the window 
----------------------------------------

public static void main (String [] args) {
    final JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE);
    frame.addWindowListener (new WindowAdapter () {
        public void windowClosing (WindowEvent ev) {
        }}

    );
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            ClosingFrame cf = new ClosingFrame ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
76223_10922864_6_17
76223_76389_1_16
Title: Get Last Friday of Month in Java 
----------------------------------------

public static Calendar getLastFriday (Calendar cal, int offset) {
    int dayofweek;
    cal.set (Calendar.MONTH, cal.get (Calendar.MONTH) + offset);
    cal.set (Calendar.DAY_OF_MONTH, cal.getActualMaximum (Calendar.DAY_OF_MONTH));
    dayofweek = cal.get (Calendar.DAY_OF_WEEK);
    if (dayofweek < Calendar.FRIDAY) cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) - 7 + Calendar.FRIDAY - dayofweek);
    else cal.set (Calendar.DAY_OF_MONTH, cal.get (Calendar.DAY_OF_MONTH) + Calendar.FRIDAY - dayofweek);

    return cal;
}
----------------------------------------

public int getLastFriday (int month, int year) {
    Calendar cal = Calendar.getInstance ();
    cal.set (year, month, 1, 0, 0, 0);
    cal.set (Calendar.MILLISECOND, 0);
    int friday = - 1;
    while (cal.get (Calendar.MONTH) == month) {
        if (cal.get (Calendar.DAY_OF_WEEK) == Calendar.FRIDAY) {
            friday = cal.get (Calendar.DAY_OF_MONTH);
            cal.add (Calendar.DAY_OF_MONTH, 7);
        } else {
            cal.add (Calendar.DAY_OF_MONTH, 1);
        }
    }
    return friday;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7625665_7625894_1_15
7625665_7626130_15_25
Title: "Java function for int[] float[] or double[] array" 
----------------------------------------

public static void main (String...args) throws IOException {
    int [] nums = new int [10 * 1000 * 1000];
    {
        long start = System.nanoTime ();
        product2 (nums);
        long time = System.nanoTime () - start;
        System.out.printf ("Took %.3f seconds to take the product of %,d ints using an int[].%n", time / 1e9, nums.length);
    } {
        long start = System.nanoTime ();
        product (nums);
        long time = System.nanoTime () - start;
        System.out.printf ("Took %.3f seconds to take the product of %,d ints using reflections.%n", time / 1e9, nums.length);
    }}
----------------------------------------

public static void main (String arg []) {
    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    double p_int = ArrayMath.ScalarProduct (v1, v2);
    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);
    System.out.println ("p_int：" + p_int);
    System.out.println ("p_double：" + p_double);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7625665_7625894_1_15
7625665_7626390_3_14
Title: "Java function for int[] float[] or double[] array" 
----------------------------------------

public static void main (String...args) throws IOException {
    int [] nums = new int [10 * 1000 * 1000];
    {
        long start = System.nanoTime ();
        product2 (nums);
        long time = System.nanoTime () - start;
        System.out.printf ("Took %.3f seconds to take the product of %,d ints using an int[].%n", time / 1e9, nums.length);
    } {
        long start = System.nanoTime ();
        product (nums);
        long time = System.nanoTime () - start;
        System.out.printf ("Took %.3f seconds to take the product of %,d ints using reflections.%n", time / 1e9, nums.length);
    }}
----------------------------------------

public static void main (String [] args) {
    int [] i = new int [2];
    float [] f = new float [2];
    double [] d = new double [2];
    String str = new String ();
    handlingFunction (i);
    handlingFunction (f);
    handlingFunction (d);
    handlingFunction (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7625665_7626130_15_25
7625665_7626390_3_14
Title: "Java function for int[] float[] or double[] array" 
----------------------------------------

public static void main (String arg []) {
    Integer [] v1 = {1, - 10, 3, 9, 7, 99, - 25};
    Integer [] v2 = {1, - 10, 3, 9, 7, 99, - 25};
    double p_int = ArrayMath.ScalarProduct (v1, v2);
    Double [] v1_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double [] v2_d = {1.1, - 10.5, 3.7, 9.98, 7.4, 9.9, - 2.5};
    Double p_double = ArrayMath.ScalarProduct (v1_d, v2_d);
    System.out.println ("p_int：" + p_int);
    System.out.println ("p_double：" + p_double);
}
----------------------------------------

public static void main (String [] args) {
    int [] i = new int [2];
    float [] f = new float [2];
    double [] d = new double [2];
    String str = new String ();
    handlingFunction (i);
    handlingFunction (f);
    handlingFunction (d);
    handlingFunction (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7646831_7647138_27_36
7646831_7647138_38_84
Title: Java find most common value in HashSet 
----------------------------------------

public List < V > put (K key, List < V > newValues) {
    if (newValues == null) {
        return put (key, (V) null);
    } else if (newValues.isEmpty ()) {
        return put (key, (V) null);
    } else {
        return put (key, (V []) newValues.toArray ());
    }

}
----------------------------------------

public List < V > put (K key, V...newValues) {
    checkLock ();
    List < V > curValues = null;
    if (newValues != null && key != null) {
        curValues = this.map.get (key);
        if (curValues == null) {
            curValues = new ArrayList < V > ();
            curValues.addAll (Arrays.asList (newValues));
            this.map.put (key, curValues);
        } else {
            if (isNeedToCheckUniqueness) {
                Integer index;
                for (V newValue : newValues) {
                    index = null;
                    for (int i = 0;
                    i < curValues.size (); i ++) {
                        if (curValues.get (i).equals (newValue)) {
                            index = i;
                            break;
                        }
                    }
                    if (index == null) {
                        curValues.add (newValue);
                    }
                }
            } else {
                curValues.addAll (Arrays.asList (newValues));
            }
        }
    } else if (key != null) {
        curValues = this.map.get (key);
        if (curValues == null) {
            curValues = new ArrayList < V > ();
            this.map.put (key, curValues);
        }
    }

    return curValues;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7651194_7651285_1_17
7651194_7651295_1_12
Title: Better way of printing a mm:ss.ms stop watch string? 
----------------------------------------

public static final String getTimeDurationAsString (long milliseconds) {
    int millis = (int) (milliseconds % 1000);
    int seconds = (int) (milliseconds / 1000) % 60;
    int minutes = (int) ((milliseconds / (1000 * 60)) % 60);
    int hours = (int) ((milliseconds / (1000 * 60 * 60)) % 24);
    StringBuilder sb = new StringBuilder ();
    if (hours > 0) {
        sb.append ((char) ('0' + hours / 10)).append ((char) ('0' + hours % 10)).append (":");
    }
    sb.append ((char) ('0' + minutes / 10)).append ((char) ('0' + minutes % 10)).append (":").append ((char) ('0' + seconds / 10)).append ((char) ('0' + seconds % 10)).append (".").append ((char) ('0' + millis / 100));
    return sb.toString ();
}
----------------------------------------

public static final String getTimeDurationAsString (long milliseconds) {
    int millis = (int) (milliseconds % 1000);
    int seconds = (int) (milliseconds / 1000) % 60;
    int minutes = (int) ((milliseconds / (1000 * 60)) % 60);
    int hours = (int) ((milliseconds / (1000 * 60 * 60)) % 24);
    string hours = "";
    if (hours > 0) hours = String.format ("%02d:", hours);

    return hours + String.format ("%0$:%1$:%2$", minutes, seconds, millis / 100);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7655432_7655485_1_13
7655432_7655518_1_12
Title: Checking each character for a number 
----------------------------------------

public static boolean isNumber (String str) {
    int len = str.length ();
    boolean isNumber = false;
    for (int i = 0;
    i < len; i ++) {
        if (Character.isDigit (str.charAt (i))) return true;

    }
    return isNumber;
}
----------------------------------------

public boolean isNumber () {
    String newString = "crash";
    for (int i = 0;
    i < newString.length (); i ++) {
        if (! Character.isDigit (newString.charAt (i))) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
7661873_7661939_5_16
7661873_7662102_43_64
Title: "Given a string compute recursively (no loops)" 
----------------------------------------

public static int countHi (String s, int pos) {
    if (s.length () - pos < 2) {
        return 0;
    }
    int result = 0;
    if (s.charAt (pos) == 'h' && s.charAt (pos + 1) == 'i') {
        result ++;
    }
    return result + countHi (s, pos + 2);
}
----------------------------------------

public static int countHi (String s) {
    if (s == null) {
        return 0;
    }
    int count = 0;
    boolean hiSpotted = true;
    while (hiSpotted) {
        int startOfNextHi = s.indexOf ("hi");
        hiSpotted = startOfNextHi >= 0;
        if (! hiSpotted) {
            return count;
        }
        s = s.substring (startOfNextHi + 2);
        count ++;
    }
    return count;
}
----------------------------------------
