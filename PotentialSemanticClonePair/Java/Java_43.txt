$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_37882631_39_50
22605050_45081131_7_37
Title: Reverse Singly Linked List Java 
----------------------------------------

public static void main (String a []) {
    SinglyLinkedListImpl < Integer > sl = new SinglyLinkedListImpl < Integer > ();
    sl.add (1);
    sl.add (2);
    sl.add (3);
    sl.add (4);
    sl.printList (sl.head);
    sl.reverse ();
    sl.printList (sl.head);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    Node head = null;
    Node temp = null;
    int choice = 0;
    boolean flage = true;
    do {
        Node node = new Node ();
        System.out.println ("Enter Node");
        node.data = sc.nextInt ();
        if (flage) {
            head = node;
            flage = false;
        }
        if (temp != null) temp.next = node;

        temp = node;
        System.out.println ("Enter 0 to exit.");
        choice = sc.nextInt ();
    } while (choice != 0);
    Help.getAll (head);
    Node reverse = Help.reverse (head, null);
    Help.getAll (reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_37882631_39_50
22605050_50199109_63_72
Title: Reverse Singly Linked List Java 
----------------------------------------

public static void main (String a []) {
    SinglyLinkedListImpl < Integer > sl = new SinglyLinkedListImpl < Integer > ();
    sl.add (1);
    sl.add (2);
    sl.add (3);
    sl.add (4);
    sl.printList (sl.head);
    sl.reverse ();
    sl.printList (sl.head);
}
----------------------------------------

public static void main (String [] args) {
    ReverseLinkedList r = new ReverseLinkedList ();
    r.insert (10);
    r.insert (20);
    r.insert (30);
    r.display (root);
    Node t = r.reverseLinkedList (root);
    r.display (t);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_43341555_11_20
22605050_45081131_7_37
Title: Reverse Singly Linked List Java 
----------------------------------------

public static void main (String [] args) {
    LinkedList < Object > st = new LinkedList < Object > ();
    st.add (1);
    st.add (2);
    st.add (3);
    st.add (4);
    st.add (5);
    Linkedtest.reverse (st);
    System.out.println ("Reverse Value will be:" + st);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    Node head = null;
    Node temp = null;
    int choice = 0;
    boolean flage = true;
    do {
        Node node = new Node ();
        System.out.println ("Enter Node");
        node.data = sc.nextInt ();
        if (flage) {
            head = node;
            flage = false;
        }
        if (temp != null) temp.next = node;

        temp = node;
        System.out.println ("Enter 0 to exit.");
        choice = sc.nextInt ();
    } while (choice != 0);
    Help.getAll (head);
    Node reverse = Help.reverse (head, null);
    Help.getAll (reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_43341555_11_20
22605050_50199109_63_72
Title: Reverse Singly Linked List Java 
----------------------------------------

public static void main (String [] args) {
    LinkedList < Object > st = new LinkedList < Object > ();
    st.add (1);
    st.add (2);
    st.add (3);
    st.add (4);
    st.add (5);
    Linkedtest.reverse (st);
    System.out.println ("Reverse Value will be:" + st);
}
----------------------------------------

public static void main (String [] args) {
    ReverseLinkedList r = new ReverseLinkedList ();
    r.insert (10);
    r.insert (20);
    r.insert (30);
    r.display (root);
    Node t = r.reverseLinkedList (root);
    r.display (t);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_45081131_7_37
22605050_50199109_63_72
Title: Reverse Singly Linked List Java 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    Node head = null;
    Node temp = null;
    int choice = 0;
    boolean flage = true;
    do {
        Node node = new Node ();
        System.out.println ("Enter Node");
        node.data = sc.nextInt ();
        if (flage) {
            head = node;
            flage = false;
        }
        if (temp != null) temp.next = node;

        temp = node;
        System.out.println ("Enter 0 to exit.");
        choice = sc.nextInt ();
    } while (choice != 0);
    Help.getAll (head);
    Node reverse = Help.reverse (head, null);
    Help.getAll (reverse);
}
----------------------------------------

public static void main (String [] args) {
    ReverseLinkedList r = new ReverseLinkedList ();
    r.insert (10);
    r.insert (20);
    r.insert (30);
    r.display (root);
    Node t = r.reverseLinkedList (root);
    r.display (t);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22605050_49298096_1_10
22605050_50199109_50_62
Title: Reverse Singly Linked List Java 
----------------------------------------

public static LinkedList reverseLinkedList (LinkedList node) {
    if (node == null || node.getNext () == null) {
        return node;
    }
    LinkedList remaining = reverseLinkedList (node.getNext ());
    node.getNext ().setNext (node);
    node.setNext (null);
    return remaining;
}
----------------------------------------

public Node reverseLinkedList (Node head) {
    Node newNode;
    Node tempr = null;
    while (head != null) {
        newNode = new Node (head.data);
        newNode.next = tempr;
        tempr = newNode;
        head = head.next;
    }
    return tempr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22610591_22611136_4_12
22610591_22611168_4_13
Title: Extending a non-static class nested in non-baseclass implementing an interface 
----------------------------------------

Object getInTwo () {
    class InTwo extends One.InOne implements SomeInterface {
        public InTwo () {
            Two.this.aOne.super ();
        } public int someMethod () {
            return foo () + 100;
        }}

    return new InTwo ();
}
----------------------------------------

Object getInTwo () {
    class InTwo extends One.InOne implements SomeInterface {
        public InTwo () {
            aOne.super ();
        } public int someMethod () {
            return foo () + 100;
        }}

    return new InTwo ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22612364_22612566_1_25
22612364_22612667_1_22
Title: Java - String NullPointerException 
----------------------------------------

public ArrayList < ArrayList < String > > getData () {
    ArrayList < ArrayList < String > > values = new ArrayList < > ();
    try {
        rs = st.executeQuery ("SELECT * FROM adresses");
        while (rs.next ()) {
            String id = rs.getString ("id");
            String name = rs.getString ("name");
            String adress = rs.getString ("email_adress");
            String catagory = rs.getString ("catarogy");
            ArrayList < String > list = new ArrayList < > ();
            list.add (id);
            list.add (name);
            list.add (adress);
            list.add (catagory);
            values.add (list);
        }
        return values;
    } catch (SQLException e) {
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------

public List < Address > getData () {
    List < Address > values = new ArrayList < Address > ();
    try {
        rs = st.executeQuery ("SELECT * FROM adresses");
        int i = 0;
        while (rs.next ()) {
            String id = rs.getString ("id");
            String name = rs.getString ("name");
            String adress = rs.getString ("email_adress");
            String catagory = rs.getString ("catarogy");
            values.add (new Address (id, name, adress, catagory));
        }
        return values;
    } catch (SQLException e) {
        e.printStackTrace ();
        return values;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22615851_22615946_1_11
22615851_22615980_1_12
Title: Java Recursion - counting Characters in a string 
----------------------------------------

public static int countChar (String str, String character) {
    if (str.length () == 0) {
        return 0;
    }
    if ((str.substring (0, 1).equals (character))) {
        return 1 + countChar (str.substring (1), character);
    }
    return countChar (str.substring (1), character);
}
----------------------------------------

public static int countChar (String str, String character) {
    if (str.length () == 0) {
        return 0;
    }
    if (! (str.substring (0, 1).equals (character))) {
        return countChar (str.substring (1), character);
    } else {
        return 1 + countChar (str.substring (1), character);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2262289_2262357_1_18
2262289_2262542_1_11
Title: how to use scanner in foreachloop to store the input from commandline into array 
----------------------------------------

public static void main (String [] args) {
    String arguments = "Anton Bert Charly";
    Scanner scanner = new Scanner (arguments);
    String [] s = new String [3];
    for (int i = 0;
    i < s.length; i ++) {
        if (scanner.hasNext ()) {
            s [i] = scanner.next ();
        }
    }
    for (int i = 0;
    i < s.length; i ++) {
        System.out.println (s [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int num_Students = Integer.parseInt (args [0]);
    List < Student > stu = new LinkedList < Student > ();
    for (int i = 1;
    i < args.length; i += 3) {
        Student student = new Student ();
        student.setFirstName (args [i]);
        student.setLastname (args [i + 1]);
        student.setScore (Integer.parseInt (args [i + 2]));
        stu.add (student);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22623150_22623221_1_18
22623150_22625738_14_27
Title: java synchronize multiple thread issue 
----------------------------------------

public void run () {
    System.out.println (Thread.currentThread ().getName ());
    while (tickets > 0) {
        int oldTickets = 0;
        synchronized (_lock) {
            if (tickets > 0) {
                oldTickets = tickets --;
            }
        }
        if (oldTickets > 0) {
            System.out.println (Thread.currentThread ().getName () + " is selling " + oldTickets);
            try {
                Thread.sleep (10);
            } catch (InterruptedException e) {
            }
        }
    }
}
----------------------------------------

public void run () {
    System.out.println (Thread.currentThread ().getName ());
    while (tickets > 0) {
        try {
            synchronized (_lock) {
                if (tickets > 0) {
                    System.out.println (Thread.currentThread ().getName () + " is selling " + tickets --);
                }
            }
            Thread.sleep (10);
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22623515_22623538_22_35
22623515_22625086_31_41
Title: Writing at the bottom of JTextArea 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new JScrollPane (new TestPane ()));
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    String t = null;
    try {
        t = de.getDocument ().getText (de.getOffset (), de.getLength ());
        if (t.equals ("\n") && de.getDocument ().getText (0, 1).equals ("\n")) ta.getDocument ().remove (0, 1);

    } catch (BadLocationException e1) {
        e1.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630047_22630094_1_12
22630047_22630148_1_10
Title: "Android long string concatenament" 
----------------------------------------

private String convertPolygonToJSON (Polygon p) {
    List < LatLng > points = p.getPoints ();
    StringBuilder sb = new StringBuilder ();
    sb.append ("[1,[");
    sb.append (points.get (0));
    for (int i = 1;
    i < points.size (); i ++) {
        sb.append (',');
        sb.append (points.get (i));
    }
    sb.append ("],{\"strokeColor\":\"#FF0000\",\"fillColor\":\"#00FFFF\"}]");
    return sb.toString ();
}
----------------------------------------

private String convertPolygonToJSON (Polygon p) {
    List < LatLng > points = p.getPoints ();
    StringBuilder sb = new StringBuilder ("[1,[" + points.get (0));
    for (int i = 1;
    i < points.size (); i ++) {
        sb.append (+ "," + points.get (i));
    }
    sb.append ("],{\"strokeColor\":\"#FF0000\",\"fillColor\":\"#00FFFF\"}]");
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630472_1_15
22630398_22630529_1_13
Title: Cannot find symbol - variable java 
----------------------------------------

public static int recursivesum (int n, int m) {
    int s = n;
    if (n < m) {
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            int s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------

public static int recursivesum (int n, int m) {
    if (n < m) {
        int s = n;
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            int s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630472_1_15
22630398_22630876_5_15
Title: Cannot find symbol - variable java 
----------------------------------------

public static int recursivesum (int n, int m) {
    int s = n;
    if (n < m) {
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            int s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------

public static int recursivesum (final int n, final int m) {
    final int lower = n < m ? n : m;
    final int upper = n > m ? n : m;
    final int total = lower;
    if (lower >= upper) {
        return total;
    }
    return total + AssignmentQ7.recursivesum (lower + 2, upper);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630529_1_13
22630398_22630751_5_17
Title: Cannot find symbol - variable java 
----------------------------------------

public static int recursivesum (int n, int m) {
    if (n < m) {
        int s = n;
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            int s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------

public static int recursivesum (int n, int m) {
    int s = n;
    if (n < m) {
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630529_1_13
22630398_22630876_5_15
Title: Cannot find symbol - variable java 
----------------------------------------

public static int recursivesum (int n, int m) {
    if (n < m) {
        int s = n;
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            int s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------

public static int recursivesum (final int n, final int m) {
    final int lower = n < m ? n : m;
    final int upper = n > m ? n : m;
    final int total = lower;
    if (lower >= upper) {
        return total;
    }
    return total + AssignmentQ7.recursivesum (lower + 2, upper);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630685_1_17
22630398_22630876_17_28
Title: Cannot find symbol - variable java 
----------------------------------------

public static int iterativesum (int n, int m) {
    int s = 0;
    if (n < m) {
        s = n;
        for (int i = n;
        i <= m; i += 2) {
            s += i;
        }
    } else {
        if (m < n) {
            s = m;
            for (int i = m;
            i <= n; i += 2) {
                s += i;
            }
        }
    }
    return s;
}
----------------------------------------

public static int iterativesum (final int n, final int m) {
    final int lower = n < m ? n : m;
    final int upper = n > m ? n : m;
    int total = 0;
    for (int num = lower;
    num <= upper; num = num + 2) {
        total += num;
    }
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630751_19_32
22630398_22630876_17_28
Title: Cannot find symbol - variable java 
----------------------------------------

public static int iterativesum (int n, int m) {
    int s = 0;
    if (n < m) {
        for (int i = n;
        i <= m; i += 2) {
            s += i;
        }
    } else if (m < n) {
        for (int i = m;
        i <= n; i += 2) {
            s += i;
        }
    }

    return s;
}
----------------------------------------

public static int iterativesum (final int n, final int m) {
    final int lower = n < m ? n : m;
    final int upper = n > m ? n : m;
    int total = 0;
    for (int num = lower;
    num <= upper; num = num + 2) {
        total += num;
    }
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22630398_22630751_5_17
22630398_22630876_5_15
Title: Cannot find symbol - variable java 
----------------------------------------

public static int recursivesum (int n, int m) {
    int s = n;
    if (n < m) {
        s += recursivesum (n + 2, m);
    } else {
        if (m < n) {
            s = m;
            s += recursivesum (m + 2, n);
        }
    }
    return s;
}
----------------------------------------

public static int recursivesum (final int n, final int m) {
    final int lower = n < m ? n : m;
    final int upper = n > m ? n : m;
    final int total = lower;
    if (lower >= upper) {
        return total;
    }
    return total + AssignmentQ7.recursivesum (lower + 2, upper);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22631842_22632353_114_137
22631842_22632353_142_165
Title: java.lang.ClassCastException: com.pdf.ViewPdf cannot be cast to android.app.Activity 
----------------------------------------

public void onClick (View v) {
    Log.i ("Point ", "n°" + object.get ("id_point"));
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    final EditText input = new EditText (ctx);
    input.setText (object.get ("miscellaneous") + "\n\n");
    adb.setView (input);
    adb.setTitle ("Divers");
    adb.setIcon (android.R.drawable.ic_menu_edit);
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            object.put ("miscellaneous", input.getText ().toString ().trim ());
            listView.invalidateViews ();
            asyncTaskSet = new AsyncTaskSet (ctx, object.get ("id_point"), input.getText ().toString ().trim (), "1");
            asyncTaskSet.execute ();
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    final EditText input = new EditText (ctx);
    input.setText (object.get ("infos") + "\n\n");
    adb.setView (input);
    adb.setTitle ("Infos collecte");
    adb.setIcon (android.R.drawable.ic_menu_edit);
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            object.put ("infos", input.getText ().toString ().trim ());
            listView.invalidateViews ();
            asyncTaskSet = new AsyncTaskSet (ctx, object.get ("id_point"), input.getText ().toString ().trim (), "2");
            asyncTaskSet.execute ();
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22631842_22632353_114_137
22631842_22632353_171_194
Title: java.lang.ClassCastException: com.pdf.ViewPdf cannot be cast to android.app.Activity 
----------------------------------------

public void onClick (View v) {
    Log.i ("Point ", "n°" + object.get ("id_point"));
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    final EditText input = new EditText (ctx);
    input.setText (object.get ("miscellaneous") + "\n\n");
    adb.setView (input);
    adb.setTitle ("Divers");
    adb.setIcon (android.R.drawable.ic_menu_edit);
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            object.put ("miscellaneous", input.getText ().toString ().trim ());
            listView.invalidateViews ();
            asyncTaskSet = new AsyncTaskSet (ctx, object.get ("id_point"), input.getText ().toString ().trim (), "1");
            asyncTaskSet.execute ();
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    adb.setTitle ("Edition du PDF");
    adb.setIcon (android.R.drawable.ic_menu_info_details);
    adb.setMessage ("Etes-vous sûr de vouloir éditer ce point de passage ?");
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            Log.i ("Point de passage", " id point : " + object.get ("id_point"));
            Intent intentPDF = new Intent (ctx, ViewPdf.class);
            intentPDF.putExtra ("id_point", object.get ("id_point"));
            ctx.startActivity (intentPDF);
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22631842_22632353_142_165
22631842_22632353_171_194
Title: java.lang.ClassCastException: com.pdf.ViewPdf cannot be cast to android.app.Activity 
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    final EditText input = new EditText (ctx);
    input.setText (object.get ("infos") + "\n\n");
    adb.setView (input);
    adb.setTitle ("Infos collecte");
    adb.setIcon (android.R.drawable.ic_menu_edit);
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            object.put ("infos", input.getText ().toString ().trim ());
            listView.invalidateViews ();
            asyncTaskSet = new AsyncTaskSet (ctx, object.get ("id_point"), input.getText ().toString ().trim (), "2");
            asyncTaskSet.execute ();
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder adb = new AlertDialog.Builder (ctx);
    adb.setTitle ("Edition du PDF");
    adb.setIcon (android.R.drawable.ic_menu_info_details);
    adb.setMessage ("Etes-vous sûr de vouloir éditer ce point de passage ?");
    adb.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int whichButton) {
            Log.i ("Point de passage", " id point : " + object.get ("id_point"));
            Intent intentPDF = new Intent (ctx, ViewPdf.class);
            intentPDF.putExtra ("id_point", object.get ("id_point"));
            ctx.startActivity (intentPDF);
        }}

    );
    adb.setNegativeButton ("Annuler", null);
    adb.create ().show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22637292_26586091_22_32
22637292_34638148_34_62
Title: "JavaFX TableView with Custom Cell Datepicker ""OnEditCommit"" is not invoked" 
----------------------------------------

protected void updateItem (Color item, boolean empty) {
    super.updateItem (item, empty);
    setText (null);
    if (empty) {
        setGraphic (null);
    } else {
        this.colorPicker.setValue (item);
        this.setGraphic (this.colorPicker);
    }
}
----------------------------------------

public void updateItem (LocalDate item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        if (isEditing ()) {
            if (datePicker != null) {
                datePicker.setValue (getItem ());
            }
            setText (null);
            setGraphic (datePicker);
        } else {
            setText (getItem ().toString ());
            setGraphic (null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22637292_34638148_117_135
22637292_34638148_143_154
Title: "JavaFX TableView with Custom Cell Datepicker ""OnEditCommit"" is not invoked" 
----------------------------------------

public void handle (KeyEvent t) {
    if (t.getCode () == KeyCode.ESCAPE) {
        cancelEdit ();
    } else if (t.getCode () == KeyCode.ENTER) {
        commitEdit (datePicker.getValue ());
        TableColumn nextColumn = getNextColumn (! t.isShiftDown ());
        if (nextColumn != null) {
            getTableView ().edit (getTableRow ().getIndex (), nextColumn);
        }
    }

}
----------------------------------------

public void handle (KeyEvent event) {
    if (event.getCode () == KeyCode.TAB) {
        commitEdit (LocalDate.parse (datePicker.getEditor ().getText (), DateTimeFormatter.ofPattern ("dd/MM/yyyy")));
        TableColumn nextColumn = getNextColumn (true);
        if (nextColumn != null) {
            getTableView ().edit (getTableRow ().getIndex (), nextColumn);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22639797_22639983_1_10
22639797_22640224_6_17
Title: Recursive helper method 
----------------------------------------

public static int count (char [] chars, char ch, int high) {
    if (high == chars.length) {
        return 0;
    }
    if (chars [index] == ch) {
        return count (chars, ch, high + 1) + 1;
    } else {
        return count (chars, ch, high + 1);
    }
}
----------------------------------------

public static int count (char [] chars, char ch, int high) {
    if (high == - 1) {
        return 0;
    }
    if (chars [high] == ch) {
        return 1 + count (chars, ch, high - 1);
    }
    return count (chars, ch, high - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22640106_42158185_3_12
22640106_51811881_1_16
Title: Reverse word letters in a sentence java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter any Sentence: ");
    String sentence = sc.nextLine ();
    String [] stringArray = sentence.split (" ");
    for (int i = 0;
    i < stringArray.length; i ++) {
        String temp = new StringBuilder (stringArray [i]).reverse ().toString ();
        System.out.print (temp + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "This is a string";
    System.out.println (s);
    String finalrevresestring = "";
    String wordreverse = "";
    String [] a = s.split (" ");
    for (int i = 0;
    i <= a.length - 1; i ++) {
        for (int x = a [i].length () - 1;
        x >= 0; x --) {
            wordreverse += a [i].charAt (x);
        }
        finalrevresestring += wordreverse;
        finalrevresestring += " ";
        wordreverse = "";
    }
    System.out.println ("This is reverse: " + finalrevresestring);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22641489_22641736_11_19
22641489_22641821_7_15
Title: Need assistance reducing duplicate code 
----------------------------------------

public List < Book > getUnavailableBooks () {
    List < Book > result = new ArrayList < Book > ();
    for (int i = 0;
    i < this.getBooks ().size (); i ++) {
        if (this.getBooks ().get (i).getPerson () != null) {
            result.add (this.getBooks ().get (i));
        }
    }
    return result;
}
----------------------------------------

public List < Book > getUnavailableBooks () {
    List < Book > result = new ArrayList < Book > ();
    for (Book b : getBooks ()) {
        if (b.getPerson () != null) {
            result.add (b);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22646218_38429058_14_45
22646218_44492544_2_21
Title: How do I count the number of unique characters in a string? - Updated 
----------------------------------------

public static void main (String args []) {
    File file = new File ("count.char");
    try {
        FileWriter fw = new FileWriter ("count.char");
        fw.write ("In Xanadu did Kubla Khan");
        fw.write ("\r\n");
        fw.write ("A stately pleasure-dome decree:");
        fw.write ("\r\n");
        fw.write ("Where Alph, the sacred river, ran");
        fw.write ("\r\n");
        fw.write ("Through caverns measureless to man");
        fw.write ("\r\n");
        fw.write ("Down to a sunless sea.");
        fw.close ();
        FileInputStream fis = new FileInputStream (file);
        int i;
        int occurs = 0;
        char current;
        while ((i = fis.available ()) > 0) {
            current = (char) fis.read ();
            if (current == 'a') {
                occurs ++;
            }
        }
        System.out.println ("The number of particular character repeated is : " + occurs);
    } catch (Exception e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "aaabbbcccddd";
    String t = "";
    int count = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        if (t.indexOf (s.charAt (i)) == - 1) t += s.charAt (i);

    }
    for (int i = 0;
    i < t.length (); i ++) {
        count = 0;
        for (int j = 0;
        j < s.length (); j ++) {
            if (t.charAt (i) == s.charAt (j)) count ++;

        }
        System.out.println (t.charAt (i) + " " + count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22647619_22647767_1_18
22647619_22648391_1_11
Title: "I want a method that accepts an array low number high number. and returns an array with only numbers in between that" 
----------------------------------------

public static int [] filterRange (int [] array, int low, int high) {
    int numbers = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] <= high && array [i] >= low) {
            numbers ++;
        }
    }
    int array1 [] = new int [numbers];
    int index = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] <= high && array [i] >= low) {
            array1 [index] = array [i];
            index ++;
        }
    }
    return array1;
}
----------------------------------------

public static int [] filterRange (int [] array, int low, int high) {
    int size = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] >= low && array [i] <= high) size ++;

    }
    int [] array1 = new int [size];
    for (int i = 0, j = 0;
    i < array.length; i ++) {
        if (array [i] >= low && array [i] <= high) array1 [j ++] = array [i];

    }
    return array1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22647619_22647767_1_18
22647619_22648714_1_10
Title: "I want a method that accepts an array low number high number. and returns an array with only numbers in between that" 
----------------------------------------

public static int [] filterRange (int [] array, int low, int high) {
    int numbers = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] <= high && array [i] >= low) {
            numbers ++;
        }
    }
    int array1 [] = new int [numbers];
    int index = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] <= high && array [i] >= low) {
            array1 [index] = array [i];
            index ++;
        }
    }
    return array1;
}
----------------------------------------

public static Integer [] filterRange (int [] array, int low, int high) {
    List < Integer > aux = new ArrayList < Integer > ();
    for (int i : array) {
        if (i <= high && i >= low) {
            aux.add (i);
        }
    }
    return aux.toArray (new Integer [aux.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22647619_22648391_1_11
22647619_22648714_1_10
Title: "I want a method that accepts an array low number high number. and returns an array with only numbers in between that" 
----------------------------------------

public static int [] filterRange (int [] array, int low, int high) {
    int size = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] >= low && array [i] <= high) size ++;

    }
    int [] array1 = new int [size];
    for (int i = 0, j = 0;
    i < array.length; i ++) {
        if (array [i] >= low && array [i] <= high) array1 [j ++] = array [i];

    }
    return array1;
}
----------------------------------------

public static Integer [] filterRange (int [] array, int low, int high) {
    List < Integer > aux = new ArrayList < Integer > ();
    for (int i : array) {
        if (i <= high && i >= low) {
            aux.add (i);
        }
    }
    return aux.toArray (new Integer [aux.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22648359_22648583_21_50
22648359_22648583_60_83
Title: Refresh data in JTable when using a DefaultTableModel 
----------------------------------------

private void createAndShowGUI () {
    DefaultTableModel model = new DefaultTableModel (new Object [] {"TimeStamp", "Value"}, 0) {
        @Override
        public Class < ? > getColumnClass (int columnIndex) {
            switch (columnIndex) {
                case 0 :
                    return Date.class;
                default :
                    return super.getColumnClass (columnIndex);
            }
        }}

    ;
    final JTable table = new JTable (model);
    JButton button = new JButton ("Add entry...");
    button.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            new InputDialog ((DefaultTableModel) table.getModel ()).createAndShowGUI ();
        }}

    );
    JFrame frame = new JFrame ("Demo");
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    frame.add (new JScrollPane (table), BorderLayout.CENTER);
    frame.add (button, BorderLayout.SOUTH);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void createAndShowGUI () {
    final JTextField textField = new JTextField (10);
    textField.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            model.addRow (new Object [] {new Date (), textField.getText ()});
            Window window = SwingUtilities.windowForComponent ((Component) e.getSource ());
            window.dispatchEvent (new WindowEvent (window, WindowEvent.WINDOW_CLOSING));
        }}

    );
    JPanel panel = new JPanel ();
    panel.add (new JLabel ("Please input a value and press ENTER key:"));
    panel.add (textField);
    JDialog dialog = new JDialog ();
    dialog.setModal (true);
    dialog.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
    dialog.add (panel);
    dialog.pack ();
    dialog.setLocationRelativeTo (null);
    dialog.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22649348_22649507_1_27
22649348_22649530_1_27
Title: Convert binary to decimal with an array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String inString;
    int decimal;
    System.out.println ("Enter a binary number: ");
    inString = input.nextLine ();
    while (! "-1".equals (inString)) {
        int i;
        int binaryLength;
        binaryLength = inString.length ();
        for (i = binaryLength - 1, decimal = 0; i >= 0; i --) {
            if (inString.charAt (i) == '1') {
                decimal += Math.pow (2, binaryLength - i - 1);
            }
        }
        System.out.println (decimal);
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
    }
    System.out.println ("All set !");
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String inString;
    int decimal;
    System.out.println ("Enter a binary number: ");
    inString = input.nextLine ();
    while (inString != "-1") {
        int i;
        int binaryLength;
        binaryLength = inString.length ();
        for (i = 0, decimal = 0; i < binaryLength; i ++) {
            decimal = decimal * 2 + (Character.getNumericValue (inString.charAt (i)) - 0);
            System.out.print (decimal);
        }
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
    }
    System.out.println ("All set !");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22649348_22649507_1_27
22649348_22649632_1_16
Title: Convert binary to decimal with an array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String inString;
    int decimal;
    System.out.println ("Enter a binary number: ");
    inString = input.nextLine ();
    while (! "-1".equals (inString)) {
        int i;
        int binaryLength;
        binaryLength = inString.length ();
        for (i = binaryLength - 1, decimal = 0; i >= 0; i --) {
            if (inString.charAt (i) == '1') {
                decimal += Math.pow (2, binaryLength - i - 1);
            }
        }
        System.out.println (decimal);
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
    }
    System.out.println ("All set !");
}
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;

        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22649348_22649530_1_27
22649348_22649632_1_16
Title: Convert binary to decimal with an array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String inString;
    int decimal;
    System.out.println ("Enter a binary number: ");
    inString = input.nextLine ();
    while (inString != "-1") {
        int i;
        int binaryLength;
        binaryLength = inString.length ();
        for (i = 0, decimal = 0; i < binaryLength; i ++) {
            decimal = decimal * 2 + (Character.getNumericValue (inString.charAt (i)) - 0);
            System.out.print (decimal);
        }
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
    }
    System.out.println ("All set !");
}
----------------------------------------

public static void main (String [] args) {
    final Scanner input = new Scanner (System.in);
    String inString;
    while (true) {
        System.out.println ("Enter a binary number: ");
        inString = input.nextLine ();
        if (inString.equals ("-1")) break;

        System.out.println (Integer.parseInt (inString, 2));
    }
    System.out.println ("All set !");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22658165_22660348_1_20
22658165_22661380_50_62
Title: How to draw a 16x16 rectangular table at imagej? 
----------------------------------------

private void tbl (int [] [] allRGB) {
    ImageProcessor newip = new ColorProcessor (256, 256);
    int count = 0;
    int W = 5;
    int H = 5;
    for (int i = 0;
    i < 16; i ++) {
        for (int j = 0;
        j < 16; j ++) {
            for (int w = 0;
            w < W; w ++) {
                for (int h = 0;
                h < H; h ++) {
                    newip.putPixel (i * W + w, j * H + h, allRGB [count]);
                }
            }
            count ++;
        }
    }
    ImagePlus cwin = new ImagePlus ("TBL", newip);
    cwin.show ();
}
----------------------------------------

private void tbl (int [] [] allRGB) {
    ImageProcessor newip = new ColorProcessor (16, 16);
    int count = 0;
    for (int i = 0;
    i < 16; i ++) {
        for (int j = 0;
        j < 16; j ++) {
            newip.putPixel (i, j, allRGB [count]);
            count ++;
        }
    }
    ImagePlus cwin = new ImagePlus ("TBL", newip);
    IJ.run (cwin, "Size...", "width=256 height=256 constrain interpolation=None");
    cwin.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22661669_22662075_15_30
22661669_30643380_1_18
Title: Parsing custom date with MM/dd/yyyy hh:mm:ss zzz format in android 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    SimpleDateFormat sdf = new SimpleDateFormat ("MM/dd/yyyy HH:mm:ss zzz");
    Date parse = null;
    Calendar calendar = Calendar.getInstance ();
    try {
        parse = sdf.parse ("03/26/2014 17:32:25 IST");
        calendar.setTime (parse);
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    Toast.makeText (this, calendar.getTime () + "", Toast.LENGTH_SHORT).show ();
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    String date_parse = "2015-04-09 05:06:14";
    try {
        SimpleDateFormat sdfSource = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
        Date date = sdfSource.parse (date_parse);
        SimpleDateFormat sdfDestination = new SimpleDateFormat ("MMMM dd,yyyy hh:mm a");
        date_parse = sdfDestination.format (date);
        System.out.println ("Date is converted from dd/MM/yy format to MMMM dd,yyyy hh:mm a");
        System.out.println ("Converted date is : " + date_parse);
    } catch (Exception e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22670740_22670972_1_16
22670740_22671055_1_22
Title: Unable to perform swapping in ArrayList 
----------------------------------------

public static List < String > swapPairs (List < String > students) {
    String temp;
    String temp2;
    if (students.size () % 2 == 0) {
        for (int i = 0;
        i < students.size (); i += 2) {
            temp = students.get (i);
            temp2 = students.get (i + 1);
            students.set (i, temp2);
            students.set (i + 1, temp);
        }
    }
    return students;
}
----------------------------------------

public static List swapPairs (List < String > students) {
    String temp = "";
    String temp2 = "";
    if (students.size () % 2 == 0) {
        for (int i = 0;
        i < students.size (); i = i + 2) {
            temp = students.get (i);
            temp2 = students.get (i + 1);
            students.set (i, temp2);
            students.set (i + 1, temp);
        }
        return students;
    }
    return students;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22673823_22674224_3_18
22673823_22674291_3_20
Title: How can I make my user aware of how many numbers they input whether it was negative or positive 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    int numNegative = 0, numPositive = 0;
    System.out.println ("Input seven numbers");
    for (int i = 1;
    i < 8; i ++) {
        int number = scanner.nextInt ();
        if (number >= 0) {
            numPositive ++;
        } else {
            numNegative ++;
        }
    }
    System.out.println ("You have " + numPositive + " numbers that are positive");
    System.out.println ("You have " + numNegative + " numbers that are negative");
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = new int [7];
    int pos_numbers = 0;
    int neg_numbers = 0;
    Scanner Nums = new Scanner (System.in);
    System.out.println ("Input seven numbers");
    for (int i = 0;
    i < 7; i ++) {
        numbers [i] = Nums.nextInt ();
        if (numbers [i] < 0) neg_numbers ++;
        else pos_numbers ++;

    }
    System.out.println ("You have " + neg_numbers + " numbers that are negative");
    System.out.println ("You have " + pos_numbers + " numbers that are postive");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22674750_22674773_32_55
22674750_22675623_8_25
Title: Sorting Different Java Primitive Types 
----------------------------------------

public int compare (Object o1, Object o2) {
    if (o1 == null && o2 != null) return - 1;
    else if (o1 != null && o2 == null) return 1;
    else if (o1 == null && o2 == null) return 0;
    else {
        Class < ? > c1 = o1.getClass ();
        Class < ? > c2 = o2.getClass ();
        if (Number.class.isAssignableFrom (c1) && String.class.isAssignableFrom (c2)) {
            return - 1;
        } else if (Number.class.isAssignableFrom (c2) && String.class.isAssignableFrom (c1)) {
            return 1;
        } else if (Number.class.isAssignableFrom (o1.getClass ()) && Number.class.isAssignableFrom (o2.getClass ())) {
            double d = ((Number) o1).doubleValue () - ((Number) o2).doubleValue ();
            if (Math.abs (d) < 1e-8) return 0;
            else return (d < 0) ? - 1 : 1;

        } else {
            return o1.toString ().compareTo (o2.toString ());
        }

    }

}
----------------------------------------

public int compare (Object o1, Object o2) {
    if (o1 instanceof String && o2 instanceof String) {
        return o1.toString ().compareTo (o2.toString ());
    }
    if (o1 instanceof Number && o2 instanceof Number) {
        return Double.compare (((Number) o1).doubleValue (), ((Number) o2).doubleValue ());
    }
    if (o1 instanceof Number) {
        return - 1;
    }
    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22675559_22675730_6_22
22675559_22675771_3_12
Title: Keep adding first two numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    System.out.println ("enter first two elements> ");
    int first = s.nextInt ();
    int second = s.nextInt ();
    System.out.println ("define array size> ");
    int size = s.nextInt ();
    if (size > 2) {
        int [] fibNumbers = new int [size];
        fibNumbers [0] = first;
        fibNumbers [1] = second;
        fillFibonacciArray (fibNumbers);
    }
}
----------------------------------------

public static void main (String [] args) {
    final int [] fibNumbers = new int [20];
    fibNumbers [0] = fibNumbers [1] = 1;
    fillFibonacciArray (fibNumbers);
    for (int i = 0;
    i < fibNumbers.length; i ++) {
        System.out.print (fibNumbers [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22676670_22679180_120_128
22676670_22679180_130_150
Title: 2D char array recursive search for largest group 
----------------------------------------

private static void search (char [] [] grid, int x, int y) {
    for (int i = 0;
    i < 10; i ++) {
        for (int j = 0;
        j < 20; j ++) {
            search (grid, i, j, grid [i] [j]);
        }
    }
}
----------------------------------------

private static void search (char [] [] grid, int x, int y, char c) {
    search (grid, x, y, c, groups);
    if (finished == true) {
        if (! map.containsKey (c)) {
            map.put (c, - 1);
            groupCount.put (c, 1);
        } else {
            groupCount.put (c, groupCount.get (c) + 1);
        }
        if (map.get (c) < numbers.get (groups)) {
            map.put (c, numbers.get (groups));
        }
        groups ++;
        finished = false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22676670_22679180_120_128
22676670_22679180_152_193
Title: 2D char array recursive search for largest group 
----------------------------------------

private static void search (char [] [] grid, int x, int y) {
    for (int i = 0;
    i < 10; i ++) {
        for (int j = 0;
        j < 20; j ++) {
            search (grid, i, j, grid [i] [j]);
        }
    }
}
----------------------------------------

private static void search (char [] [] grid, int x, int y, char c, int group) {
    Point now = new Point (x, y);
    if (! searched.contains (now)) {
        finished = true;
        searched.add (now);
        while (numbers.size () <= group) {
            numbers.add (0);
        }
        while (groupOrigins.size () <= group) {
            groupOrigins.add (new Point (- 1, - 1));
        }
        if (groupOrigins.get (group).equals (new Point (- 1, - 1))) {
            groupOrigins.set (group, now);
        }
        numbers.set (group, numbers.get (group) + 1);
        if (y - 1 >= 0) {
            if (grid [x] [y - 1] == c) {
                search (grid, x, y - 1, c, group);
            }
        }
        if (y + 1 < 20) {
            if (grid [x] [y + 1] == c) {
                search (grid, x, y + 1, c, group);
            }
        }
        if (x - 1 >= 0) {
            if (grid [x - 1] [y] == c) {
                search (grid, x - 1, y, c, group);
            }
        }
        if (x + 1 < 10) {
            if (grid [x + 1] [y] == c) {
                search (grid, x + 1, y, c, group);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22676670_22679180_130_150
22676670_22679180_152_193
Title: 2D char array recursive search for largest group 
----------------------------------------

private static void search (char [] [] grid, int x, int y, char c) {
    search (grid, x, y, c, groups);
    if (finished == true) {
        if (! map.containsKey (c)) {
            map.put (c, - 1);
            groupCount.put (c, 1);
        } else {
            groupCount.put (c, groupCount.get (c) + 1);
        }
        if (map.get (c) < numbers.get (groups)) {
            map.put (c, numbers.get (groups));
        }
        groups ++;
        finished = false;
    }
}
----------------------------------------

private static void search (char [] [] grid, int x, int y, char c, int group) {
    Point now = new Point (x, y);
    if (! searched.contains (now)) {
        finished = true;
        searched.add (now);
        while (numbers.size () <= group) {
            numbers.add (0);
        }
        while (groupOrigins.size () <= group) {
            groupOrigins.add (new Point (- 1, - 1));
        }
        if (groupOrigins.get (group).equals (new Point (- 1, - 1))) {
            groupOrigins.set (group, now);
        }
        numbers.set (group, numbers.get (group) + 1);
        if (y - 1 >= 0) {
            if (grid [x] [y - 1] == c) {
                search (grid, x, y - 1, c, group);
            }
        }
        if (y + 1 < 20) {
            if (grid [x] [y + 1] == c) {
                search (grid, x, y + 1, c, group);
            }
        }
        if (x - 1 >= 0) {
            if (grid [x - 1] [y] == c) {
                search (grid, x - 1, y, c, group);
            }
        }
        if (x + 1 < 10) {
            if (grid [x + 1] [y] == c) {
                search (grid, x + 1, y, c, group);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22694558_22694872_1_19
22694558_50899683_1_10
Title: finding number of words in a String using recursive method 
----------------------------------------

public static int CountWords (String sen) {
    if ("".equals (sen)) {
        return 0;
    }
    int count = 0;
    int i = sen.indexOf (" ");
    String substr = sen.substring (0, i + 1);
    if (i != - 1) {
        count ++;
    } else {
        if (sen.length () > 0) {
            count ++;
        }
        sen = "";
    }
    return count + CountWords (sen.substring (substr.length ()));
}
----------------------------------------

public static int CountWords (String sen) {
    int i = sen.indexOf (" ");
    if (sen.isEmpty ()) return 0;

    if (i == - 1) return 1;

    if (i != 0) return 1 + CountWords (sen.substring (i + 1));
    else return CountWords (sen.substring (1));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22696539_22697787_20_30
22696539_22698125_18_26
Title: Reorder four points of a rectangle to the correct order 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------

public static void main (String...args) {
    final TestFrame frame = new TestFrame ();
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22696539_22697787_98_130
22696539_22698125_46_54
Title: Reorder four points of a rectangle to the correct order 
----------------------------------------

protected void paintComponent (Graphics gr) {
    super.paintComponent (gr);
    Graphics2D g = (Graphics2D) gr;
    g.setColor (Color.BLACK);
    if (points.size () < 4) {
        g.drawString ("Click to create points", 20, 20);
    } else {
        g.drawString ("Sorted points. Click again to clear.", 20, 20);
    }
    for (int i = 0;
    i < points.size (); i ++) {
        Point2D point = points.get (i);
        double x = point.getX ();
        double y = point.getY ();
        g.setColor (Color.RED);
        g.fill (new Ellipse2D.Double (x - 5, y - 5, 10, 10));
        g.setColor (Color.BLACK);
        double angleRad = RectanglePointReorderingTest.computeAngle (RectanglePointReorderingTest.computeCenter (points), point);
        String angleString = String.valueOf ((int) Math.toDegrees (angleRad));
        g.drawString (String.valueOf (i) + " (" + angleString + ")", (int) x + 5, (int) y + 5);
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    rect.points (pts);
    printPoints ();
    Dimension size = getSize ();
    drawRectLine (g, pts [0], pts [1], size);
    drawRectLine (g, pts [1], pts [2], size);
    drawRectLine (g, pts [2], pts [3], size);
    drawRectLine (g, pts [0], pts [3], size);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22713804_22713998_3_14
22713804_22714097_1_12
Title: Character Count Java Program gives java.lang.nosuchmethod 
----------------------------------------

public int countit (String word, char ch) {
    int count = 0;
    int index = 0;
    while (index < word.length ()) {
        if (word.charAt (index) == ch) {
            count = count + 1;
        }
        index = index + 1;
        return count;
    }
    return count;
}
----------------------------------------

public static int countit (String word, char ch) {
    int count = 0;
    int index = 0;
    while (index < word.length ()) {
        if (word.charAt (index) == ch) {
            count = count + 1;
        }
        index = index + 1;
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22717867_22717942_1_17
22717867_22717984_11_28
Title: What is wrong with my Java app convert big letters to small and opposite in java 
----------------------------------------

public static void main (String [] args) throws Exception {
    String str = "AbcD";
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] -= 32;
        } else {
            chars [i] += 32;
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("plz enter a string");
    String str = input.nextLine ();
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < str.length (); i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] = Character.toUpperCase (c);
        } else {
            chars [i] = Character.toLowerCase (c);
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22717867_22717942_1_17
22717867_22717988_1_17
Title: What is wrong with my Java app convert big letters to small and opposite in java 
----------------------------------------

public static void main (String [] args) throws Exception {
    String str = "AbcD";
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] -= 32;
        } else {
            chars [i] += 32;
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String str = "AbcD";
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] = Character.toUpperCase (c);
        } else {
            chars [i] = Character.toLowerCase (c);
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22717867_22717984_11_28
22717867_22717988_1_17
Title: What is wrong with my Java app convert big letters to small and opposite in java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("plz enter a string");
    String str = input.nextLine ();
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < str.length (); i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] = Character.toUpperCase (c);
        } else {
            chars [i] = Character.toLowerCase (c);
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String str = "AbcD";
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if (Character.isLowerCase (c)) {
            chars [i] = Character.toUpperCase (c);
        } else {
            chars [i] = Character.toLowerCase (c);
        }
    }
    System.out.print (new String (chars));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22724077_22725061_57_77
22724077_22725704_53_76
Title: Searching through arrays 
----------------------------------------

public static void main (String [] args) {
    CountOnes count = new CountOnes ();
    for (int i = 0;
    i < 6; i ++) {
        for (int j = 0;
        j < 6; j ++) {
            count.insertValueAt (i, j, 1);
        }
    }
    count.insertValueAt (2, 2, 2);
    count.showSpace ();
    for (int i = 0;
    i < 6; i ++) {
        for (int j = 0;
        j < 6; j ++) {
            System.out.println ("[" + i + "," + j + "] => " + count.numberOfOnesAroundPosition (i, j));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    final Random rand = new Random ();
    final List < List < Integer > > a6x6 = new ArrayList < List < Integer > > () {

        {
            for (int i = 0;
            i < 6; i ++) add (new ArrayList < Integer > () {

                {
                    for (int i = 0;
                    i < 6; i ++) add (rand.nextInt (2) + 1);

                }

            }

            );

        }

    }

    ;
    final Point centerPoint = Point.of (2, 2);
    System.out.println ("Grid = ");
    a6x6.forEach (System.out :: println);
    System.out.println ("Point = " + centerPoint.toString ());
    Stream < Point > results = BOX.stream ().map (p -> Point.of (p.X + centerPoint.X, p.Y + centerPoint.Y)).filter (p -> inBounds.test (p) && a6x6.get (p.X).get (p.Y) == 1);
    System.out.println ("Results = ");
    results.forEach (System.out :: println);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22726051_22726111_8_26
22726051_22726321_1_21
Title: Returning an array with every other number 
----------------------------------------

public int [] everyOther (int [] a) {
    if (a.length < 2) {
        return a;
    }
    int [] l = new int [a.length / 2];
    int loc = 0, i = 1;
    while (i < a.length) {
        System.out.println ("l.length=" + l.length + ", a.length=" + a.length + ", i=" + i + ", [i - 1]=" + (i - 1) + "");
        l [i] = a [i - 1];
        i += 2;
    }
    return l;
}
----------------------------------------

public int [] everyOther (int [] a) {
    if (a.length < 2) {
        return a;
    }
    int [] l = new int [a.length / 2];
    int loc = 0, i = 0;
    System.out.println ("size: " + a.length);
    while (i < a.length) {
        if (! isOdd (a [i])) {
            l [loc] = a [i];
            loc ++;
        }
        i ++;
    }
    return l;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22734410_22734999_11_24
22734410_22735103_11_30
Title: unable to get java swing components 
----------------------------------------

public void run () {
    JTextArea map;
    JButton btn;
    map = new JTextArea ();
    btn = new JButton ("hello");
    JFrame frame = new JFrame ("jarvis");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (600, 600);
    frame.setLayout (new BorderLayout ());
    frame.add (map, BorderLayout.CENTER);
    frame.add (btn, BorderLayout.SOUTH);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    JTextArea map;
    JButton btn;
    JLabel lbl;
    map = new JTextArea (10, 50);
    final JScrollPane scrollPanel = new JScrollPane (map);
    btn = new JButton ("hello");
    lbl = new JLabel ("Text Area: ");
    final JPanel actionPanel = new JPanel (new FlowLayout (FlowLayout.LEADING));
    actionPanel.add (lbl);
    actionPanel.add (scrollPanel);
    final JFrame frame = new JFrame ("jarvis");
    frame.setLayout (new BorderLayout ());
    frame.add (actionPanel, BorderLayout.CENTER);
    frame.add (btn, BorderLayout.SOUTH);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (600, 600);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22735975_22736356_1_12
22735975_22741370_10_28
Title: "Java: ""Missing return statement""" 
----------------------------------------

public static double power2 (int n, int x, int xOriginal) {
    if (n == 0) {
        return 1;
    }
    if (n < 0) {
        return 1 / power2 (n * - 1, x, x);
    }
    if (n <= 1) {
        return x;
    }
    return power2 (n - 1, x * xOriginal, xOriginal);
}
----------------------------------------

public static double power2 (int n, int x, double count) {
    if (n == 0) return 1;
    else {
        if (n > 1) {
            count = count * x;
            n = n - 1;
        } else if (n < 0) {
            n = - n;
            return (1 / power2 (n, x, count));
        } else if (n == 1) {
            return count;
        }

        return power2 (n, x, count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22739097_22739299_1_25
22739097_22739415_1_15
Title: Removing an element before the object passed in as the parameter in a Singly Linked List 
----------------------------------------

public Object removeElementBefore (Object o) {
    if (o == null) return null;

    Node prev = head;
    Node crt = prev == null ? null : prev.next;
    if (crt == null) return null;

    while (crt.next != null && ! o.equals (crt.next.content)) {
        prev = prev.next;
        crt = crt.next;
    }
    if (crt.next == null) return null;

    prev.next = crt.next;
    crt.next = null;
    return crt.content;
}
----------------------------------------

public void removeElementBefore (Node before) {
    if (before == null) return;

    Node n = head;
    if (n.next == before) {
        head = n.next;
        return;
    }
    while (n.next.next != before) {
        if (n.next.next == null) return;

        n = n.next;
    }
    n.next = n.next.next;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22743786_22744897_37_53
22743786_22744897_58_73
Title: reasons for deadlock in producer/consumer and debugging 
----------------------------------------

public void run () {
    while (running) {
        try {
            Thread.sleep (random.nextInt (2000));
            Integer value = random.nextInt ();
            buffer.put (value);
            System.out.println ("Value Put: " + value);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (running) {
        try {
            Thread.sleep (random.nextInt (2000));
            Integer value = buffer.take ();
            System.out.println ("Value Taken: " + value);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22747023_22748597_133_148
22747023_22748597_157_200
Title: Debugging code I have with 2 classes and a JFrame that holds 4 JPanels 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    largeField.setText ("");
    mediumField.setText ("");
    smallField.setText ("");
    breadField.setText ("");
    totalLargeField.setText ("");
    totalMediumField.setText ("");
    totalSmallField.setText ("");
    totalBreadField.setText ("");
    totalSalesField.setText ("");
    totalTaxField.setText ("");
    netSalesField.setText ("");
    dailyCostField.setText ("");
    profitField.setText ("");
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    lPizza = largeField.getText ();
    mPizza = mediumField.getText ();
    sPizza = smallField.getText ();
    bSticks = breadField.getText ();
    largePizza = Integer.parseInt (lPizza);
    mediumPizza = Integer.parseInt (mPizza);
    smallPizza = Integer.parseInt (sPizza);
    breadSticks = Integer.parseInt (bSticks);
    totalLargePizza = (lPizzaPrice * largePizza);
    totalMediumPizza = (mPizzaPrice * mediumPizza);
    totalSmallPizza = (sPizzaPrice * smallPizza);
    totalBreadSticks = (bSticksPrice * breadSticks);
    totalLargeField.setText ("" + totalLargePizza);
    totalMediumField.setText ("" + totalMediumPizza);
    totalSmallField.setText ("" + totalSmallPizza);
    totalBreadField.setText ("" + totalBreadSticks);
    totalSales = (totalLargePizza + totalMediumPizza + totalSmallPizza + totalBreadSticks);
    totalTax = (totalSales * tax);
    netSales = (totalSales - totalTax);
    profit = (netSales - dailyOper);
    if (profit > 0) {
        profitLabel.setText ("Profit of ");
    } else if (profit < 0) {
        profitLabel.setText ("Loss of ");
    } else if (profit == 0) {
        profitLabel.setText ("No profit or loss ");
    }

    if (largePizza < 0) {
        JOptionPane.showMessageDialog (null, "Quantity muist be >=0");
    } else if (mediumPizza < 0) {
        JOptionPane.showMessageDialog (null, "Quantity muist be >=0");
    } else if (smallPizza < 0) {
        JOptionPane.showMessageDialog (null, "Quantity muist be >=0");
    } else if (breadSticks < 0) {
        JOptionPane.showMessageDialog (null, "Quantity muist be >=0");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22753454_22753525_5_26
22753454_22753586_3_16
Title: String-based ListView 
----------------------------------------

public void onCreate (Bundle saveInstanceState) {
    super.onCreate (saveInstanceState);
    setContentView (R.layout.your_layout);
    lv = (ListView) findViewById (R.id.your_list_view_id);
    List < String > your_array_list = new ArrayList < String > ();
    your_array_list.add ("foo");
    your_array_list.add ("bar");
    ArrayAdapter < String > arrayAdapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, your_array_list);
    lv.setAdapter (arrayAdapter);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    ArrayList < String > values = new ArrayList < String > ();
    int rows = 10;
    for (int i = 0;
    i < rows; i ++) {
        values.add ("row " + i);
    }
    ListView listView = (ListView) findViewById (R.id.listview);
    ArrayAdapter < String > adapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, values);
    listView.setAdapter (adapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22753454_22753525_5_26
22753454_22753659_6_29
Title: String-based ListView 
----------------------------------------

public void onCreate (Bundle saveInstanceState) {
    super.onCreate (saveInstanceState);
    setContentView (R.layout.your_layout);
    lv = (ListView) findViewById (R.id.your_list_view_id);
    List < String > your_array_list = new ArrayList < String > ();
    your_array_list.add ("foo");
    your_array_list.add ("bar");
    ArrayAdapter < String > arrayAdapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, your_array_list);
    lv.setAdapter (arrayAdapter);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    listView = (ListView) findViewById (R.id.listView1);
    mListItems = new ArrayList < String > ();
    for (String name : mStrings) {
        mListItems.add (name);
    }
    adapter = new ArrayAdapter < String > (MainActivity.this, android.R.layout.simple_list_item_1, mListItems);
    listView.setAdapter (adapter);
    listView.setOnItemClickListener (new OnItemClickListener () {
        @Override
        public void onItemClick (AdapterView < ? > adapter, View view, int position, long i) {
            String name = (String) adapter.getItemAtPosition (position);
            MainActivity.this.adapter.remove (name);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22753454_22753586_3_16
22753454_22753659_6_29
Title: String-based ListView 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    ArrayList < String > values = new ArrayList < String > ();
    int rows = 10;
    for (int i = 0;
    i < rows; i ++) {
        values.add ("row " + i);
    }
    ListView listView = (ListView) findViewById (R.id.listview);
    ArrayAdapter < String > adapter = new ArrayAdapter < String > (this, android.R.layout.simple_list_item_1, values);
    listView.setAdapter (adapter);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    listView = (ListView) findViewById (R.id.listView1);
    mListItems = new ArrayList < String > ();
    for (String name : mStrings) {
        mListItems.add (name);
    }
    adapter = new ArrayAdapter < String > (MainActivity.this, android.R.layout.simple_list_item_1, mListItems);
    listView.setAdapter (adapter);
    listView.setOnItemClickListener (new OnItemClickListener () {
        @Override
        public void onItemClick (AdapterView < ? > adapter, View view, int position, long i) {
            String name = (String) adapter.getItemAtPosition (position);
            MainActivity.this.adapter.remove (name);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22768025_22768502_5_30
22768025_22768643_9_29
Title: Separating an integer and adding the values with support for a negative integer 
----------------------------------------

public static void main (String [] args) {
    int multiple = 1;
    System.out.print ("Enter an integer:  ");
    String myNum = console.nextLine ();
    Integer myNumInt = Integer.parseInt (myNum);
    if (myNumInt < 1) {
        multiple = - 1;
        myNum = Integer.toString (myNumInt * - 1);
    }
    int [] asNumber = new int [myNum.length ()];
    String [] upNum = new String [myNum.length ()];
    int sum = 0;
    System.out.println ("\n");
    System.out.print ("The digits of the number are:  ");
    for (int i = 0;
    i < myNum.length (); i ++) {
        upNum [i] = myNum.substring (i, i + 1);
        System.out.print (upNum [i]);
        System.out.print (" ");
        sum = sum + Integer.parseInt (upNum [i]) * multiple;
    }
    System.out.println ("\n");
    System.out.print ("The sum of the digits is: ");
    System.out.println (sum);
}
----------------------------------------

public static void main (String [] args) {
    String number = console.nextLine ();
    Pattern p = Pattern.compile ("(-?[0-9]{1})+");
    Matcher m = p.matcher (number);
    if (! m.matches ()) {
        throw new IllegalArgumentException ("Invalid Numbers");
    }
    p = Pattern.compile ("-?[0-9]{1}+");
    m = p.matcher (number);
    int result = 0;
    System.out.print ("The digits of the number are:  ");
    while (m.find ()) {
        System.out.print (m.group () + " ");
        result += Integer.valueOf (m.group ());
    }
    System.out.println ("");
    System.out.println ("Result " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22780369_22781451_13_38
22780369_22781899_9_26
Title: Make a label update while dragging a slider 
----------------------------------------

public void start (Stage primaryStage) {
    VBox root = new VBox ();
    Scene scene = new Scene (root, 500, 200);
    final Label betLabel = new Label ("sdsd");
    final Slider betSlider = new Slider ();
    betSlider.valueProperty ().addListener (new ChangeListener () {
        @Override
        public void changed (ObservableValue arg0, Object arg1, Object arg2) {
            betLabel.textProperty ().setValue (String.valueOf ((int) betSlider.getValue ()));
        }}

    );
    root.getChildren ().addAll (betSlider, betLabel);
    betLabel.textProperty ().setValue ("abc");
    primaryStage.setTitle ("Demo");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage stage) {
    Label label = new Label ();
    Slider slider = new Slider (1, 11, 5);
    label.textProperty ().bind (Bindings.format ("%.2f", slider.valueProperty ()));
    VBox layout = new VBox (10, label, slider);
    layout.setStyle ("-fx-padding: 10px; -fx-alignment: baseline-right");
    stage.setScene (new Scene (layout));
    stage.setTitle ("Goes to");
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22783028_22783371_1_15
22783028_22783382_1_12
Title: Getting the five sequential combinations of the words 
----------------------------------------

public void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        int count = 0;
        String word = "";
        int m = i;
        while (count < 5 && m < words.length) {
            count ++;
            word += " " + words [m];
            System.out.println (word);
            m ++;
        }
    }
}
----------------------------------------

public static void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        String word = "";
        for (int w = i;
        w < ((i + 5 < words.length) ? (i + 5) : words.length); w ++) {
            word += " " + words [w];
            System.out.println (word);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22783028_22783371_1_15
22783028_22783524_1_18
Title: Getting the five sequential combinations of the words 
----------------------------------------

public void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        int count = 0;
        String word = "";
        int m = i;
        while (count < 5 && m < words.length) {
            count ++;
            word += " " + words [m];
            System.out.println (word);
            m ++;
        }
    }
}
----------------------------------------

public void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        int count = 0;
        String word = "";
        int m = i;
        while (count < 5 && m < 10) {
            count ++;
            word += " " + words [m];
            System.out.println (word);
            m ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22783028_22783382_1_12
22783028_22783524_1_18
Title: Getting the five sequential combinations of the words 
----------------------------------------

public static void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        String word = "";
        for (int w = i;
        w < ((i + 5 < words.length) ? (i + 5) : words.length); w ++) {
            word += " " + words [w];
            System.out.println (word);
        }
    }
}
----------------------------------------

public void getComb (String line) {
    String words [] = line.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        int count = 0;
        String word = "";
        int m = i;
        while (count < 5 && m < 10) {
            count ++;
            word += " " + words [m];
            System.out.println (word);
            m ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22789449_47581179_15_23
22789449_47721094_48_75
Title: Export Stage into PDF 
----------------------------------------

public void handle (ActionEvent event) {
    System.out.println ("To Printer!");
    PrinterJob job = PrinterJob.createPrinterJob ();
    if (job != null) {
        job.showPrintDialog (primaryStage);
        job.printPage (root);
        job.endJob ();
    }
}
----------------------------------------

public void handle (ActionEvent event) {
    WritableImage nodeshot = bar.snapshot (new SnapshotParameters (), null);
    File file = new File ("chart.png");
    try {
        ImageIO.write (SwingFXUtils.fromFXImage (nodeshot, null), "png", file);
    } catch (IOException e) {
    }
    PDDocument doc = new PDDocument ();
    PDPage page = new PDPage ();
    PDImageXObject pdimage;
    PDPageContentStream content;
    try {
        pdimage = PDImageXObject.createFromFile ("chart.png", doc);
        content = new PDPageContentStream (doc, page);
        content.drawImage (pdimage, 100, 100);
        content.close ();
        doc.addPage (page);
        doc.save ("pdf_file.pdf");
        doc.close ();
        file.delete ();
    } catch (IOException ex) {
        Logger.getLogger (NodeToPdf.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22789449_47581179_5_34
22789449_47721094_28_92
Title: Export Stage into PDF 
----------------------------------------

public void start (Stage primaryStage) {
    Button btn = new Button ();
    StackPane root = new StackPane ();
    root.getChildren ().add (btn);
    Scene scene = new Scene (root, 300, 250);
    btn.setText ("Say 'Hello World'");
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            System.out.println ("To Printer!");
            PrinterJob job = PrinterJob.createPrinterJob ();
            if (job != null) {
                job.showPrintDialog (primaryStage);
                job.printPage (root);
                job.endJob ();
            }
        }}

    );
    primaryStage.setTitle ("Printer");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    CategoryAxis xAxis = new CategoryAxis ();
    xAxis.setLabel ("x");
    NumberAxis yAxis = new NumberAxis ();
    yAxis.setLabel ("y");
    BarChart bar = new BarChart (xAxis, yAxis);
    bar.setMaxSize (300, 300);
    bar.setTitle ("Bar node");
    bar.setTranslateY (- 100);
    Button btn = new Button ();
    btn.setTranslateY (100);
    btn.setText ("To Pdf'");
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            WritableImage nodeshot = bar.snapshot (new SnapshotParameters (), null);
            File file = new File ("chart.png");
            try {
                ImageIO.write (SwingFXUtils.fromFXImage (nodeshot, null), "png", file);
            } catch (IOException e) {
            }
            PDDocument doc = new PDDocument ();
            PDPage page = new PDPage ();
            PDImageXObject pdimage;
            PDPageContentStream content;
            try {
                pdimage = PDImageXObject.createFromFile ("chart.png", doc);
                content = new PDPageContentStream (doc, page);
                content.drawImage (pdimage, 100, 100);
                content.close ();
                doc.addPage (page);
                doc.save ("pdf_file.pdf");
                doc.close ();
                file.delete ();
            } catch (IOException ex) {
                Logger.getLogger (NodeToPdf.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }}

    );
    StackPane root = new StackPane ();
    root.getChildren ().add (btn);
    root.getChildren ().add (bar);
    Scene scene = new Scene (root, 600, 600);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799761_1_16
22799682_22799813_1_16
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMap = new HashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        Integer medals = countryMap.get (country [i]);
        Integer sum = (medals == null) ? totalMedals [i] : (totalMedals [i] + medals);
        countryMap.put (country [i], sum);
    }
    for (Map.Entry < String, Integer > countryMedals : countryMap.entrySet ()) {
        System.out.println (countryMedals.getKey () + ", " + countryMedals.getValue () + " medal(s)");
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    boolean [] seen = new boolean [country.length];
    for (int i = 0;
    i < country.length - 1; i ++) {
        int medals = totalMedals [i];
        if (! seen [i]) {
            for (int j = i + 1;
            j < country.length; j ++) {
                if (country [i].equals (country [j])) {
                    medals += totalMedals [j];
                    seen [j] = true;
                }
            }
            System.out.println (country [i] + ", " + medals + " medal(s)");
        }
        seen [i] = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799761_1_16
22799682_22799856_2_15
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMap = new HashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        Integer medals = countryMap.get (country [i]);
        Integer sum = (medals == null) ? totalMedals [i] : (totalMedals [i] + medals);
        countryMap.put (country [i], sum);
    }
    for (Map.Entry < String, Integer > countryMedals : countryMap.entrySet ()) {
        System.out.println (countryMedals.getKey () + ", " + countryMedals.getValue () + " medal(s)");
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    final Map < String, Integer > map = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        if (! map.containsKey (country [i])) map.put (country [i], 0);

        map.put (country [i], map.get (country [i]) + totalMedals [i]);
    }
    for (final Entry < String, Integer > entry : map.entrySet ()) {
        System.out.println (entry.getKey () + ", " + entry.getValue () + " medal(s)");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799761_1_16
22799682_22800283_1_26
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMap = new HashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        Integer medals = countryMap.get (country [i]);
        Integer sum = (medals == null) ? totalMedals [i] : (totalMedals [i] + medals);
        countryMap.put (country [i], sum);
    }
    for (Map.Entry < String, Integer > countryMedals : countryMap.entrySet ()) {
        System.out.println (countryMedals.getKey () + ", " + countryMedals.getValue () + " medal(s)");
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMedalMap = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        String countryName = country [i];
        if (countryMedalMap.containsKey (countryName)) {
            int medalCount = countryMedalMap.get (countryName) + totalMedals [i];
            countryMedalMap.put (countryName, medalCount);
        } else {
            countryMedalMap.put (countryName, totalMedals [i]);
        }
    }
    printMap (countryMedalMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799813_1_16
22799682_22799856_2_15
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    boolean [] seen = new boolean [country.length];
    for (int i = 0;
    i < country.length - 1; i ++) {
        int medals = totalMedals [i];
        if (! seen [i]) {
            for (int j = i + 1;
            j < country.length; j ++) {
                if (country [i].equals (country [j])) {
                    medals += totalMedals [j];
                    seen [j] = true;
                }
            }
            System.out.println (country [i] + ", " + medals + " medal(s)");
        }
        seen [i] = true;
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    final Map < String, Integer > map = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        if (! map.containsKey (country [i])) map.put (country [i], 0);

        map.put (country [i], map.get (country [i]) + totalMedals [i]);
    }
    for (final Entry < String, Integer > entry : map.entrySet ()) {
        System.out.println (entry.getKey () + ", " + entry.getValue () + " medal(s)");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799813_1_16
22799682_22800283_1_26
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    boolean [] seen = new boolean [country.length];
    for (int i = 0;
    i < country.length - 1; i ++) {
        int medals = totalMedals [i];
        if (! seen [i]) {
            for (int j = i + 1;
            j < country.length; j ++) {
                if (country [i].equals (country [j])) {
                    medals += totalMedals [j];
                    seen [j] = true;
                }
            }
            System.out.println (country [i] + ", " + medals + " medal(s)");
        }
        seen [i] = true;
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMedalMap = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        String countryName = country [i];
        if (countryMedalMap.containsKey (countryName)) {
            int medalCount = countryMedalMap.get (countryName) + totalMedals [i];
            countryMedalMap.put (countryName, medalCount);
        } else {
            countryMedalMap.put (countryName, totalMedals [i]);
        }
    }
    printMap (countryMedalMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22799682_22799856_2_15
22799682_22800283_1_26
Title: "Printing information from arrays without using duplicate values" 
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    final Map < String, Integer > map = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        if (! map.containsKey (country [i])) map.put (country [i], 0);

        map.put (country [i], map.get (country [i]) + totalMedals [i]);
    }
    for (final Entry < String, Integer > entry : map.entrySet ()) {
        System.out.println (entry.getKey () + ", " + entry.getValue () + " medal(s)");
    }
}
----------------------------------------

public static void listCountryMedals (String [] country, int [] totalMedals) {
    Map < String, Integer > countryMedalMap = new LinkedHashMap < String, Integer > ();
    for (int i = 0;
    i < country.length; i ++) {
        String countryName = country [i];
        if (countryMedalMap.containsKey (countryName)) {
            int medalCount = countryMedalMap.get (countryName) + totalMedals [i];
            countryMedalMap.put (countryName, medalCount);
        } else {
            countryMedalMap.put (countryName, totalMedals [i]);
        }
    }
    printMap (countryMedalMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22800329_23807868_1_64
22800329_23946521_21_98
Title: MigLayout span components overflowing from cell 
----------------------------------------

private JPanel getPage () {
    JPanel panel = new JPanel (new MigLayout ("wrap 3, debug", "[][][grow, fill]", "[][][][grow, fill]"));
    panel.setBorder (new EmptyBorder (10, 10, 10, 10));
    JButton addBtn, removeBtn, copyBtn;
    JTextField txtField;
    JTextArea textArea;
    JComboBox < String > comboBox;
    JList < String > list;
    JLabel property, comboboxLabel, listLabel, textAreaLabel;
    JScrollPane listScroller, textFieldScroller;
    addBtn = new JButton ("Add");
    removeBtn = new JButton ("Remove");
    copyBtn = new JButton ("Copy");
    txtField = new JTextField ();
    textArea = new JTextArea ();
    property = new JLabel ("Property 1");
    listLabel = new JLabel ("A big JList");
    textAreaLabel = new JLabel ("A big JTextArea");
    comboboxLabel = new JLabel ("ComboBox Property");
    comboBox = new JComboBox < String > (new String [] {"cbx itm 1", "cbx itm 2", "cbx itm 3"});
    comboBox.setEditable (true);
    comboBox.setSelectedItem ("");
    list = new JList < String > ();
    list.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
    list.setVisibleRowCount (- 1);
    String [] names = new String [] {"Stuff to", "fill this", "JList..."};
    DefaultListModel < String > model = new DefaultListModel < String > ();
    for (String name : names) {
        model.addElement (name);
    }
    list.setModel (model);
    listScroller = new JScrollPane (list);
    textFieldScroller = new JScrollPane (textArea);
    property.setLabelFor (txtField);
    comboboxLabel.setLabelFor (comboBox);
    textAreaLabel.setLabelFor (textArea);
    listLabel.setLabelFor (list);
    panel.add (addBtn, "split 3, flowy, spany 2, sizegroup buttons");
    panel.add (removeBtn, "sizegroup buttons");
    panel.add (copyBtn, "sizegroup buttons");
    panel.add (property, "al right top, sgy components");
    panel.add (txtField, "al right top, sgy components");
    panel.add (comboboxLabel, "al right top, sgy components");
    panel.add (comboBox, "al right top, sgy components");
    panel.add (listLabel, "spanx 2, sgy components");
    panel.add (textAreaLabel, "sgy components");
    panel.add (listScroller, "spanx 2, grow");
    panel.add (textFieldScroller, "");
    return panel;
}
----------------------------------------

private JPanel getPage (boolean addExtraRow1, boolean addExtraRow2) {
    JPanel listButtonPanel = new JPanel (new MigLayout ("ins 0, wrap 1, aligny top"));
    JButton addBtn = new JButton ("Add");
    listButtonPanel.add (addBtn, "w 105px, h 25px, sg btns");
    JButton removeBtn = new JButton ("Remove");
    listButtonPanel.add (removeBtn, "sg btns");
    JButton copyBtn = new JButton ("Copy");
    listButtonPanel.add (copyBtn, "sg btns");
    int rowCount = 1;
    JTextField txtField = new JTextField ();
    rowCount ++;
    JComboBox comboBox = new JComboBox (new String [] {"cbx itm 1", "cbx itm 2", "cbx itm 3"});
    comboBox.setEditable (true);
    comboBox.setSelectedItem ("");
    rowCount ++;
    JCheckBox checkBox = null;
    if (addExtraRow1) {
        checkBox = new JCheckBox ();
        rowCount ++;
    }
    JTextField optTxtField = null;
    if (addExtraRow2) {
        optTxtField = new JTextField ();
        rowCount ++;
    }
    rowCount ++;
    JList list = new JList (new DefaultListModel ());
    list.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
    list.setVisibleRowCount (- 1);
    String [] names = new String [] {"Stuff to", "fill this", "JList..."};
    DefaultListModel model = (DefaultListModel) list.getModel ();
    for (String name : names) model.addElement (name);

    JTextArea textArea = new JTextArea ();
    StringBuilder rowConstraints = new StringBuilder ();
    for (int i = 0;
    i < rowCount; i ++) rowConstraints.append ("[]");

    rowConstraints.append ("[grow, fill]");
    JPanel panel = new JPanel (new MigLayout ("fill, wrap 3, debug", "[][][grow, fill, align left]", rowConstraints.toString ()));
    panel.setBorder (new EmptyBorder (10, 10, 10, 10));
    panel.add (listButtonPanel, "spany " + -- rowCount + ", aligny top, hmax 100%");
    addComponent (panel, new JLabel ("Property 1"), txtField);
    addComponent (panel, new JLabel ("ComboBox Property"), comboBox);
    if (checkBox != null) addComponent (panel, new JLabel ("Extra comp 1"), checkBox);

    if (optTxtField != null) addComponent (panel, new JLabel ("Extra comp 2"), optTxtField);

    panel.add (new JLabel ("A big JList"), "skip 3, spanx 2, grow");
    panel.add (new JLabel ("A big JTextArea"));
    panel.add (new JScrollPane (list), "hmin 100px, spanx 2, grow");
    panel.add (new JScrollPane (textArea), "hmin 100px, grow");
    return panel;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22806748_22806828_1_21
22806748_22843293_11_35
Title: What is a good library for horizontally concatenating text using Java? 
----------------------------------------

String concatenateHorizontally (final String left, final String right) {
    String br = "\n";
    String [] lefts = left.split (br);
    String [] rights = right.split (br);
    if (lefts.length != rights.length) throw new UnsupportedOperationException ("This is where my time becomes money");

    StringBuilder sB = new StringBuilder ();
    for (int i = 0;
    i < lefts.length; i ++) {
        sB.append (lefts [i]);
        sB.append (rights [i]);
        sB.append (br);
    }
    return sB.toString ();
}
----------------------------------------

private static String concatenateHorizontally (final String left, final String right, String br, String concat) {
    {
        String [] lefts = left.split (br);
        String [] rights = right.split (br);
        int max = Math.max (lefts.length, rights.length);
        StringBuilder sB = new StringBuilder ();
        for (int i = 0;
        i < max; i ++) {
            if (i < lefts.length) sB.append (lefts [i]).append (concat);

            if (i < rights.length) sB.append (rights [i]);

            sB.append (br);
        }
        return sB.toString ();
    }}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22807449_22807578_1_12
22807449_22807582_1_16
Title: FindBugs: Suspicious comparison of Double references 
----------------------------------------

public double foo (Double a, Double b) {
    if (a == null && b == null) {
        return 0;
    }
    if (a == null || b == null) {
        return 999999;
    }
    return b - a;
}
----------------------------------------

public double foo (Double a, Double b) {
    if (a == null) {
        if (b == null) {
            return 0;
        }
        return 999999;
    }
    if (b == null) {
        return 999999;
    }
    return b - a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22812385_22812581_1_12
22812385_22812583_1_17
Title: nested HashMap not working properly 
----------------------------------------

public static void setM () {
    HashMap < String, HashMap < String, String > > response = new HashMap < String, HashMap < String, String > > ();
    for (int i = 0;
    i < 6; i ++) {
        HashMap < String, String > link = new HashMap < String, String > ();
        link.put ("save_pont", "i" + i);
        response.put (i + "", link);
        System.out.println ("response ->   " + response);
    }
}
----------------------------------------

public static void setM () {
    HashMap < String, HashMap < String, String > > response = new HashMap < String, HashMap < String, String > > ();
    HashMap < String, String > [] links = new HashMap < String, String > [6];
    for (int i = 0;
    i < 6; i ++) {
        links [i] = new HashMap < String, String > ();
        links [i].put ("save_pont", "i" + i);
    }
    for (int i = 0;
    i < 6; i ++) {
        HashMap < String, String > link = new HashMap < String, String > ();
        response.put (i + "", links [i]);
        System.out.println ("response ->   " + response);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22815897_22816002_1_11
22815897_22816819_1_10
Title: Show popup at the start if file is missing 
----------------------------------------

public static void main (String args []) {
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new GUI ().setVisible (true);
            LoginForm login = new LoginForm ();
            login.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String args []) {
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new GUI ().setVisible (true);
            showWarning ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22817856_22817976_5_50
22817856_22818057_5_63
Title: Java Looping Help Needed 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    long sum = 0;
    long num1 = 0;
    long num2 = 0;
    char s = ' ';
    String answer = "yes";
    while (true) {
        border ();
        System.out.println ("Acara's Calculator™ V_.01");
        System.out.println ("What operation would you like to do?");
        System.out.println ("Press '+' for addition, '-' for subtraction, '/' for division or '*' for multiplication and 'q' for quit.");
        s = in.next ().charAt (0);
        if (s == 'q') {
            break;
        }
        border ();
        System.out.println ("What is your first number? ");
        num1 = in.nextInt ();
        System.out.println ("What is your second number? ");
        num2 = in.nextInt ();
        if (s == '/') {
            sum = num1 / num2;
            System.out.println ("Your answer is : " + sum);
        } else if (s == '*') {
            sum = num1 * num2;
            System.out.println ("Your answer is : " + sum);
        } else if (s == '+') {
            sum = num1 + num2;
            System.out.println ("Your answer is : " + sum);
        } else if (s == '-') {
            sum = num1 - num2;
            System.out.println ("Your answer is : " + sum);
        }

        border ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    long result = 0;
    long num1 = 0;
    long num2 = 0;
    char s = ' ';
    String token = "";
    border ();
    System.out.println ("Acara's Calculator™ V_.01");
    border ();
    while (true) {
        System.out.println ("What is your first number? ... Or press ! to quit.");
        token = in.next ();
        if ("!".equalsIgnoreCase (token.trim ())) {
            break;
        }
        num1 = Integer.parseInt (token);
        System.out.println ("What is your second number? ... Or press ! to quit.");
        token = in.next ();
        if ("!".equalsIgnoreCase (token.trim ())) {
            break;
        }
        num2 = Integer.parseInt (token);
        System.out.println ("What operation would you like to do?");
        System.out.println ("Press '+' for addition, '-' for subtraction, '/' for division " + "or '*' for multiplication... Or press ! if you want to quit.");
        token = in.next ();
        if ("!".equalsIgnoreCase (token.trim ())) {
            break;
        }
        s = token.trim ().charAt (0);
        if (s == '/') {
            result = num1 / num2;
            System.out.println ("Your answer is : " + result);
        } else if (s == '*') {
            result = num1 * num2;
            System.out.println ("Your answer is : " + result);
        } else if (s == '+') {
            result = num1 + num2;
            System.out.println ("Your answer is : " + result);
        } else if (s == '-') {
            result = num1 - num2;
            System.out.println ("Your answer is : " + result);
        }

        border ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22825977_22826029_1_30
22825977_22826136_1_23
Title: How to use else statement 
----------------------------------------

public static int mode (int n []) {
    sort (n);
    int l [] = new int [n [n.length - 1] + 1];
    int mode = 0;
    int j = 0;
    int i = 0;
    for (i = 0; i < n.length; i ++) {
        l [n [i]] ++;
        if (j < l [n [i]]) {
            j = l [n [i]];
            mode = n [i];
        } else mode = 0;

    }
    return mode;
}
----------------------------------------

public static int mode (int n []) {
    sort (n);
    int l [] = new int [n [n.length - 1] + 1];
    int mode = 0;
    int j = 0;
    int i = 0;
    for (i = 0; i < n.length; i ++) {
        l [n [i]] ++;
        if (j < l [n [i]]) {
            j = l [n [i]];
            mode = n [i];
        } else {
            mode = 0;
        }
    }
    return mode;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22826953_22827172_2_12
22826953_28633782_17_78
Title: How To create Array Of 100 With Integers From 1-1000? 
----------------------------------------

public static void main (String args []) {
    int array [] = new int [100];
    System.out.println ("*****Fibonacci Series*****");
    int f1, f2 = 0, f3 = 1;
    for (int i = 1;
    i <= 100; i ++) {
        array [i] = f3;
        f1 = f2;
        f2 = f3;
        f3 = f1 + f2;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Welcome to the partly sorted pogram");
    System.out.println ("This will make a partly sorted list of integers");
    int [] nums = new int [100];
    int suffels = - 1;
    boolean firstLoop = true;
    while (suffels < 0 || suffels > 100) {
        if (firstLoop) {
            System.out.println ("Please enter how sorted sorted you want (0 to 100, no decimals)");
        } else {
            System.out.println ("Looks like you made a typo");
            System.out.println ("Please enter a integer from 0 to 100");
        }
        suffels = input.nextInt ();
        firstLoop = false;
    }
    for (int i = 0;
    i < nums.length; i ++) {
        nums [i] = i;
    }
    for (int swaps = 0;
    swaps < suffels; swaps ++) {
        int firstPlace = (int) (Math.random () * 100);
        int secondPlace = (int) (Math.random () * 100);
        int temp = nums [firstPlace];
        nums [firstPlace] = nums [secondPlace];
        nums [secondPlace] = temp;
    }
    for (int n : nums) {
        System.out.println (n);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22834413_22834545_1_21
22834413_22834717_17_31
Title: Error when passing an input through an object 
----------------------------------------

public Person [] makePerson (String [] names, int [] hts) {
    if (names.length != hts.length) throw new IllegalArguementException ("different array sizes");

    final Person [] persons = new Person [names.length];
    for (int i = 0;
    i < names.length; i ++) {
        Person p = new Person ();
        p.name = names [i];
        p.height = hts [i];
        persons [i] = p;
    }
    for (int i = 0;
    i < persons.length; i ++) {
        System.out.println (persons [i].height + ": :");
        display (persons);
    }
    return persons;
}
----------------------------------------

public Person [] makePerson (String [] names, int [] hts) {
    Person [] persons = new Person [names.length];
    for (int i = 0;
    i < names.length; i ++) {
        Person p = new Person ();
        p.name = names [i];
        p.height = hts [i];
        persons [i] = p;
    }
    display (persons);
    return persons;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22837423_22837724_7_22
22837423_52136243_5_44
Title: How to take character input in java 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter here : ");
    try {
        BufferedReader bufferRead = new BufferedReader (new InputStreamReader (System.in));
        String value = bufferRead.readLine ();
        System.out.println (value);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String as []) {
    Scanner s = new Scanner (System.in);
    char a = s.next ().charAt (0);
    switch (a) {
        case 'a' :
            System.out.println ("Vowel....");
            break;
        case 'e' :
            System.out.println ("Vowel....");
            break;
        case 'i' :
            System.out.println ("Vowel....");
            break;
        case 'o' :
            System.out.println ("Vowel....");
            break;
        case 'u' :
            System.out.println ("Vowel....");
            break;
        case 'A' :
            System.out.println ("Vowel....");
            break;
        case 'E' :
            System.out.println ("Vowel....");
            break;
        case 'I' :
            System.out.println ("Vowel....");
            break;
        case 'O' :
            System.out.println ("Vowel....");
            break;
        case 'U' :
            System.out.println ("Vowel....");
            break;
        default :
            System.out.println ("Consonants....");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22837805_22837898_1_12
22837805_22837921_1_14
Title: My java program is giving me an IndexOutOfBoundsException 
----------------------------------------

public static boolean Search (ArrayList < String > ArrayToSearch, String word) {
    String temp;
    boolean found = false;
    for (int counter = 0;
    counter < ArrayToSearch.size (); counter ++) {
        temp = ArrayToSearch.get (counter);
        if (temp.equals (word.toLowerCase ())) {
            position = counter;
            break;
        }
    }
    return found;
}
----------------------------------------

public static boolean Search (ArrayList < String > ArrayToSearch, String word) {
    String temp;
    for (int counter = 0;
    counter < ArrayToSearch.size (); counter ++) {
        temp = ArrayToSearch.get (counter);
        if (temp.equals (word.toLowerCase ())) {
            position = counter;
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22841632_22841818_10_53
22841632_22842143_12_25
Title: How i send email without authentication using java 
----------------------------------------

public static void main (String [] args) {
    String to = "abcd@gmail.com";
    String from = "web@gmail.com";
    String host = "localhost";
    Properties properties = System.getProperties ();
    properties.setProperty ("mail.smtp.host", host);
    Session session = Session.getDefaultInstance (properties);
    try {
        MimeMessage message = new MimeMessage (session);
        message.setFrom (new InternetAddress (from));
        message.addRecipient (Message.RecipientType.TO, new InternetAddress (to));
        message.setSubject ("This is the Subject Line!");
        message.setText ("This is actual message");
        Transport.send (message);
        System.out.println ("Sent message successfully....");
    } catch (MessagingException mex) {
        mex.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Properties props = new Properties ();
    props.put ("mail.smtp.host", "127.0.0.1");
    props.put ("mail.smtp.port", "25");
    props.put ("mail.debug", "true");
    Session session = Session.getDefaultInstance (props);
    MimeMessage message = new MimeMessage (session);
    message.setFrom (new InternetAddress ("admin@test.com"));
    message.setRecipient (RecipientType.TO, new InternetAddress ("a@b.com"));
    message.setSubject ("Notification");
    message.setText ("Successful!", "UTF-8");
    message.setSentDate (new Date ());
    Transport.send (message);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22848723_22848909_1_14
22848723_22848943_1_11
Title: "recursion computing sum of positive integers" 
----------------------------------------

public static double computeSumPositive (double [] numbers, int count) {
    double total = 0;
    {
        if (count > 0) {
            double val = (numbers [count - 1] > 0) ? numbers [count - 1] : 0;
            total = val + computeSumPositive (numbers, count - 1);
            return total;
        } else return total;

    }}
----------------------------------------

public static double computeSumPositive (double [] numbers, int count) {
    double total = 0;
    if (count > 0) {
        if (numbers [count - 1] < 0) {
            total = numbers [count - 1] + computeSumPositive (numbers, count - 1);
        } else {
            total = computeSumPositive (numbers, count - 1);
        }
    }
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22856074_22856455_1_19
22856074_22856761_1_16
Title: Using recursion to find a character in a string 
----------------------------------------

public static int indexOf (char ch, String str) {
    if (str == null || str.Equals ("")) {
        if (count != 0) {
            if (str.Length == 0) return - 1;

            return count;
        } else return - 1;

    } else if (ch == str.CharAt (0)) return 1 + count;

    count ++;
    return indexOf (ch, str.Substring (1));
}
----------------------------------------

public static int indexOf (char ch, String str) {
    if (str == null || str.equals ("")) {
        return - 1;
    } else if (ch == str.charAt (0)) {
        return 0;
    }

    int subIndex = indexOf (ch, str.substring (1));
    return subIndex == - 1 ? - 1 : 1 + subIndex;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22859324_22859434_1_12
22859324_22859478_1_12
Title: "how select randomly from an int array then remove the selected element" 
----------------------------------------

public static void main (String [] args) {
    Integer [] colm = {1, 2, 3, 4, 5, 67, 87};
    final List < Integer > ints = new ArrayList < Integer > (Arrays.asList (colm));
    Random rand = new Random ();
    for (int i = 0;
    (i < 5) && (ints.size () > 0); i ++) {
        final int randomIndex = rand.nextInt (ints.size ());
        System.out.println (" " + ints.get (randomIndex));
        ints.remove (randomIndex);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] colm = {1, 2, 3, 4, 5, 67, 87};
    List l = new ArrayList ();
    for (int i : colm) l.add (i);

    Collections.shuffle (l);
    for (int i = 0;
    i < 5; i ++) System.out.println (l.get (i));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22866839_22866983_1_14
22866839_22867082_1_11
Title: toString method call to void method 
----------------------------------------

@Override
public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("--------------------");
    sb.append ('\n');
    sb.append ("List elements: ");
    while (temp != null) {
        sb.append (temp.val);
        sb.append (" ");
        temp = temp.next;
    }
    sb.append ("\n-----------------------\n");
    return sb.toString ();
}
----------------------------------------

public String toString () {
    String output = "--------------------\n";
    output += "List elements: ";
    IntNode temp = front;
    while (temp != null) {
        output += temp.val + " ";
        temp = temp.next;
    }
    output += "\n-----------------------\n";
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22880287_22880370_1_13
22880287_28438816_14_30
Title: Finding if integers are evenly spaced 
----------------------------------------

public boolean areEvenlySpaced (int a, int b, int c) {
    Integer [] ints = {a, b, c};
    Arrays.sort (ints, new Comparator < Integer > () {
        @Override
        public int compare (Integer x, Integer y) {
            return x - y;
        }}

    );
    if ((ints [0] - ints [1]) == (ints [1] - ints [2])) return true;
    else return false;

}
----------------------------------------

public static boolean areEvenlySpaced (List < Integer > list) {
    Collections.sort (list, new Comparator < Integer > () {
        public int compare (Integer i1, Integer i2) {
            return i2.compareTo (i1);
        }}

    );
    if (list != null && list.size () > 1) {
        int lastDiff = list.get (0) - list.get (1);
        for (int i = 1;
        i < list.size (); i ++) {
            int diff = Math.abs (list.get (i - 1) - list.get (i));
            if (lastDiff != diff) return false;

            lastDiff = diff;
        }
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22885402_22885665_1_22
22885402_22885673_1_23
Title: "Compress a string ""aaabbccccd"" to ""a3b2c4d""" 
----------------------------------------

public static void main (String...args) {
    String a = "aaabbccccd";
    int currentLength = 1;
    StringBuilder result = new StringBuilder ();
    for (int i = 1;
    i < aLength; i ++) {
        if (a.charAt (i) == a.charAt (i - 1)) {
            currentLength ++;
        } else {
            System.out.println (currentLength + "" + a.charAt (i - 1));
            result.append (a.charAt (i - 1)).append (currentLength > 1 ? currentLength : "");
            currentLength = 1;
        }
    }
    System.out.println (currentLength + "" + a.charAt (a.length () - 1));
    result.append (a.charAt (a.length () - 1)).append (currentLength > 1 ? currentLength : "");
    System.out.println ("result = " + result.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String a = "aaaaaaaabbbbbbcccccccccccccd";
    char first = a.charAt (0);
    int recur = 0;
    StringBuilder res = new StringBuilder ();
    for (int i = 1;
    i < a.length (); i ++) {
        if (first == a.charAt (i)) {
            recur ++;
        } else {
            if (recur > 0) res.append (first).append (recur);

            recur = 0;
            first = a.charAt (i);
        }
    }
    if (recur > 0) res.append (first).append (recur);
    else res.append (first);

    System.out.println (res);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22885402_22885665_1_22
22885402_22885874_3_24
Title: "Compress a string ""aaabbccccd"" to ""a3b2c4d""" 
----------------------------------------

public static void main (String...args) {
    String a = "aaabbccccd";
    int currentLength = 1;
    StringBuilder result = new StringBuilder ();
    for (int i = 1;
    i < aLength; i ++) {
        if (a.charAt (i) == a.charAt (i - 1)) {
            currentLength ++;
        } else {
            System.out.println (currentLength + "" + a.charAt (i - 1));
            result.append (a.charAt (i - 1)).append (currentLength > 1 ? currentLength : "");
            currentLength = 1;
        }
    }
    System.out.println (currentLength + "" + a.charAt (a.length () - 1));
    result.append (a.charAt (a.length () - 1)).append (currentLength > 1 ? currentLength : "");
    System.out.println ("result = " + result.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String a = "aaabbcccd";
    StringBuilder sb = new StringBuilder ();
    int runLen = 1;
    char runChar = a.charAt (0);
    for (int k = 1;
    k < a.length (); k ++) {
        if (a.charAt (k) == runChar) {
            ++ runLen;
        } else {
            sb.append (runChar).append (runLen);
            runLen = 1;
            runChar = a.charAt (k);
        }
    }
    sb.append (runChar).append (runLen);
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22885402_22885673_1_23
22885402_22885874_3_24
Title: "Compress a string ""aaabbccccd"" to ""a3b2c4d""" 
----------------------------------------

public static void main (String [] args) {
    String a = "aaaaaaaabbbbbbcccccccccccccd";
    char first = a.charAt (0);
    int recur = 0;
    StringBuilder res = new StringBuilder ();
    for (int i = 1;
    i < a.length (); i ++) {
        if (first == a.charAt (i)) {
            recur ++;
        } else {
            if (recur > 0) res.append (first).append (recur);

            recur = 0;
            first = a.charAt (i);
        }
    }
    if (recur > 0) res.append (first).append (recur);
    else res.append (first);

    System.out.println (res);
}
----------------------------------------

public static void main (String [] args) {
    String a = "aaabbcccd";
    StringBuilder sb = new StringBuilder ();
    int runLen = 1;
    char runChar = a.charAt (0);
    for (int k = 1;
    k < a.length (); k ++) {
        if (a.charAt (k) == runChar) {
            ++ runLen;
        } else {
            sb.append (runChar).append (runLen);
            runLen = 1;
            runChar = a.charAt (k);
        }
    }
    sb.append (runChar).append (runLen);
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22885896_23138508_174_183
22885896_23138508_195_204
Title: Java - build splines through 3 every points 
----------------------------------------

public boolean equals (Object obj) {
    if (obj == this) return true;

    if (! (obj instanceof SplineRenderer)) return false;

    SplineRenderer that = (SplineRenderer) obj;
    if (this.precision != that.precision) return false;

    return super.equals (obj);
}
----------------------------------------

public boolean equals (Object obj) {
    if (obj == this) return true;

    if (! (obj instanceof ControlPoint)) return false;

    ControlPoint that = (ControlPoint) obj;
    if (this.x != that.x) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22888456_22888567_18_27
22888456_22888567_40_47
Title: Showing loading bar when constructor is loading 
----------------------------------------

public void run () {
    for (int i = 0;
    i <= 100; i ++) {
        currentStatus ++;
        try {
            Thread.currentThread ().sleep (1000);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            progressLabel.setText (String.valueOf (heavyProcessor.getStatus ()) + " %");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22896023_22896062_3_11
22896023_22896112_4_13
Title: Implementation Types of Triangle with Java and JUnit? 
----------------------------------------

public static String triangle (int a, int b, int c) {
    if (a < b && b < c && (a * a) + (b * b) > (c * c)) {
        return "Triangular Taper";
    } else if (a < b && b < c && ((a * a) + (b * b) == (c * c))) {
        return "Right Triangle";
    } else if (a < b && b < c && (a * a) + (b * b) < (c * c)) {
        return "Blunt Triangle";
    }

    return "Not a triangle";
}
----------------------------------------

public static String triangle (int a, int b, int c) {
    if (a < b && b < c && ((a * a) + (b * b)) > (c * c)) {
        return "Triangular Taper";
    } else if (a < b && b < c && ((a * a) + (b * b)) == (c * c)) {
        return "Right Triangle";
    } else if (a < b && b < c && ((a * a) + (b * b)) < (c * c)) {
        return "Blunt Triangle";
    }

    return "no triangle";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22902111_22902132_1_12
22902111_22902174_1_17
Title: How can I find the maximum value within a string? 
----------------------------------------

public static int max (String s) {
    s = s.replaceAll ("\\D", "");
    int x = s.length ();
    int y = Character.getNumericValue (s.charAt (0));
    for (int i = 1;
    i < x; i ++) {
        if (Character.getNumericValue (s.charAt (i)) > y) {
            y = Character.getNumericValue (s.charAt (i));
        }
    }
    return y;
}
----------------------------------------

public static int max (String s) {
    int x = s.length ();
    int y = 0;
    Character temp = null;
    for (int i = 0;
    i < x; i ++) {
        char ch = s.charAt (i);
        if (ch >= '0' && ch <= '9' && (temp == null || temp < ch)) {
            temp = s.chartAt (i);
        }
    }
    return Integer.valueOf (temp);
}
----------------------------------------
