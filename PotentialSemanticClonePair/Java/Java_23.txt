$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17000311_17000775_10_28
17000311_20046461_47_62
Title: Java Multi threading 
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (;;) {
                while ((n & 1) != even) {
                    lock.wait ();
                }
                n ++;
                lock.notify ();
                if (n > 10) {
                    break;
                }
                System.out.println (n);
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    do {
        synchronized (counter) {
            if (counter.get () % 2 != 0) {
                System.out.println ("Thread is " + name + ", Counter is = " + counter.getAndAdd (1));
                counter.notifyAll ();
            } else {
                try {
                    counter.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    } while (counter.get () <= 10);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17000311_20046461_20_35
17000311_20046461_47_62
Title: Java Multi threading 
----------------------------------------

public void run () {
    do {
        synchronized (counter) {
            if (counter.get () % 2 == 0) {
                System.out.println ("Thread is " + name + ", Counter is = " + counter.getAndAdd (1));
                counter.notifyAll ();
            } else {
                try {
                    counter.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    } while (counter.get () <= 10);
}
----------------------------------------

public void run () {
    do {
        synchronized (counter) {
            if (counter.get () % 2 != 0) {
                System.out.println ("Thread is " + name + ", Counter is = " + counter.getAndAdd (1));
                counter.notifyAll ();
            } else {
                try {
                    counter.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    } while (counter.get () <= 10);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17004035_17247969_31_58
17004035_17247969_64_92
Title: Parse.com How to add a ParseUser to Current User for a friendlist 
----------------------------------------

public void onClick (View v) {
    final String username = sbar.getText ().toString ();
    final ParseQuery query = ParseUser.getQuery ();
    query.whereEqualTo ("username", username);
    query.findInBackground (new FindCallback () {
        @Override
        public void done (List < ParseObject > objects, ParseException e) {
            try {
                ParseObject userObject = objects.get (0);
                ResultText.setText (userObject.getString ("username"));
                ResultFrame.setVisibility (View.VISIBLE);
                Toast.makeText (getApplicationContext (), "Player Found", Toast.LENGTH_LONG).show ();
            } catch (Exception e2) {
                e2.printStackTrace ();
                Toast.makeText (getApplicationContext (), "Username Not Found", Toast.LENGTH_LONG).show ();
            }
        }}

    );
}
----------------------------------------

public void onClick (View v) {
    String Friends = sbar.getText ().toString ();
    final ParseUser currentUser = ParseUser.getCurrentUser ();
    if (currentUser != null) {
        {
            final ParseObject friend = new ParseObject ("Friends");
            friend.put ("username", Friends);
            friend.saveInBackground (new SaveCallback () {
                @Override
                public void done (ParseException e) {
                    ParseRelation relation = currentUser.getRelation ("Friends");
                    relation.add (friend);
                    currentUser.saveInBackground ();
                }}

            );
            Toast.makeText (getApplicationContext (), "Player Has Been Added", Toast.LENGTH_LONG).show ();
        }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17004035_17247969_31_58
17004035_25356089_39_63
Title: Parse.com How to add a ParseUser to Current User for a friendlist 
----------------------------------------

public void onClick (View v) {
    final String username = sbar.getText ().toString ();
    final ParseQuery query = ParseUser.getQuery ();
    query.whereEqualTo ("username", username);
    query.findInBackground (new FindCallback () {
        @Override
        public void done (List < ParseObject > objects, ParseException e) {
            try {
                ParseObject userObject = objects.get (0);
                ResultText.setText (userObject.getString ("username"));
                ResultFrame.setVisibility (View.VISIBLE);
                Toast.makeText (getApplicationContext (), "Player Found", Toast.LENGTH_LONG).show ();
            } catch (Exception e2) {
                e2.printStackTrace ();
                Toast.makeText (getApplicationContext (), "Username Not Found", Toast.LENGTH_LONG).show ();
            }
        }}

    );
}
----------------------------------------

public void onClick (View v) {
    Drawable background = v.getResources ().getDrawable (R.drawable.ui_border_green);
    Drawable img = v.getResources ().getDrawable (R.drawable.ico_friend_add_green);
    btnAdd.setBackground (background);
    btnAdd.setImageDrawable (img);
    final ParseUser currentUser = ParseUser.getCurrentUser ();
    if (currentUser != null) {
        {
            ParseRelation < ParseUser > relation = currentUser.getRelation ("Friends");
            relation.add (pUser);
            currentUser.saveInBackground ();
        }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17004035_17247969_64_92
17004035_25356089_39_63
Title: Parse.com How to add a ParseUser to Current User for a friendlist 
----------------------------------------

public void onClick (View v) {
    String Friends = sbar.getText ().toString ();
    final ParseUser currentUser = ParseUser.getCurrentUser ();
    if (currentUser != null) {
        {
            final ParseObject friend = new ParseObject ("Friends");
            friend.put ("username", Friends);
            friend.saveInBackground (new SaveCallback () {
                @Override
                public void done (ParseException e) {
                    ParseRelation relation = currentUser.getRelation ("Friends");
                    relation.add (friend);
                    currentUser.saveInBackground ();
                }}

            );
            Toast.makeText (getApplicationContext (), "Player Has Been Added", Toast.LENGTH_LONG).show ();
        }}
}
----------------------------------------

public void onClick (View v) {
    Drawable background = v.getResources ().getDrawable (R.drawable.ui_border_green);
    Drawable img = v.getResources ().getDrawable (R.drawable.ico_friend_add_green);
    btnAdd.setBackground (background);
    btnAdd.setImageDrawable (img);
    final ParseUser currentUser = ParseUser.getCurrentUser ();
    if (currentUser != null) {
        {
            ParseRelation < ParseUser > relation = currentUser.getRelation ("Friends");
            relation.add (pUser);
            currentUser.saveInBackground ();
        }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17015537_17015548_9_24
17015537_17015709_20_29
Title: ".get(key) wont give me my value in a Hashmap<Point Integer>" 
----------------------------------------

@Override
public boolean equals (final Object o) {
    if (o == null) return false;

    if (this == o) return true;

    if (getClass () != o.getClass ()) return false;

    final Point other = (Point) o;
    return x == other.x && y == other.y;
}
----------------------------------------

public boolean equals (Object other) {
    if (this == other) {
        return true;
    }
    if (! (other instanceof Point)) {
        return false;
    }
    Point point = (Point) other;
    return this.x = point.x && this.y == point.y;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17016512_17016566_1_10
17016512_17016573_5_14
Title: Recursive Binary Search Tree x= change(x) 
----------------------------------------

private IntTreeNode doublePositives (IntTreeNode root) {
    if (root != null) {
        if (root.data > 0) {
            root.data = 2 * root.data;
        }
        root.left = doublePositives (root.left);
        root.right = doublePositives (root.right);
    }
    return root;
}
----------------------------------------

private void doublePositives (IntTreeNode root) {
    if (root != null) {
        if (root.data > 0) {
            root.data = 2 * root.data;
        }
        doublePositives (root.left);
        doublePositives (root.right);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17017665_17017725_1_20
17017665_17017968_1_14
Title: Recursive Binary Search Tree Trimming.. x=change(x) 
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root == null) return root;

    if (root.data < min) return trim (root.right, min, max);
    else if (node.data > max) return trim (root.left, min, max);
    else if (min <= root.data && root.data <= max) {
        root.left = trim (root.left, min, max);
        root.right = trim (root.right, min, max);
        return root;
    }

    throw new RuntimeException ("Unhandled case in trim!");
}
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root == null) {
        return root;
    }
    if (root.data < max && root.data > min) {
        root.left = trim (root.left, min, max);
        root.right = trim (root.right, min, max);
        return root;
    } else if (root.data < min) {
        return trim (root.right, min, max);
    } else if (node.data > max) {
        return trim (root.left, min, max);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17017665_17017725_1_20
17017665_35717868_5_17
Title: Recursive Binary Search Tree Trimming.. x=change(x) 
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root == null) return root;

    if (root.data < min) return trim (root.right, min, max);
    else if (node.data > max) return trim (root.left, min, max);
    else if (min <= root.data && root.data <= max) {
        root.left = trim (root.left, min, max);
        root.right = trim (root.right, min, max);
        return root;
    }

    throw new RuntimeException ("Unhandled case in trim!");
}
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root != null) {
        if (root.data < min) {
            root = trim (root.right, min, max);
        } else if (root.data > max) {
            root = trim (root.left, min, max);
        } else {
            root.left = trim (root.left, min, max);
            root.right = trim (root.right, min, max);
        }

    }
    return root;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17017665_17017968_1_14
17017665_35717868_5_17
Title: Recursive Binary Search Tree Trimming.. x=change(x) 
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root == null) {
        return root;
    }
    if (root.data < max && root.data > min) {
        root.left = trim (root.left, min, max);
        root.right = trim (root.right, min, max);
        return root;
    } else if (root.data < min) {
        return trim (root.right, min, max);
    } else if (node.data > max) {
        return trim (root.left, min, max);
    }

}
----------------------------------------

private IntTreeNode trim (IntTreeNode root, int min, int max) {
    if (root != null) {
        if (root.data < min) {
            root = trim (root.right, min, max);
        } else if (root.data > max) {
            root = trim (root.left, min, max);
        } else {
            root.left = trim (root.left, min, max);
            root.right = trim (root.right, min, max);
        }

    }
    return root;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17032690_17032797_1_17
17032690_17032834_1_19
Title: Why is this generating an Index Out of Bounds error? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter size of array (in form nxn), n:");
    n = console.nextInt ();
    rows = n;
    columns = n;
    listSize = (n * n);
    int [] list = new int [listSize];
    createArithmeticSeq (list);
    int [] [] matrix = new int [rows] [columns];
    matricize (list, matrix);
    printMatrix (matrix);
    System.out.print ("\n");
    reverseDiagonal (matrix);
    printMatrix (matrix);
    magicCheck (list, matrix);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter size of array (in form nxn), n:");
    n = console.nextInt ();
    rows = n;
    columns = n;
    listSize = (n * n);
    int [] list = new int [listSize];
    createArithmeticSeq (list);
    int [] [] matrix = new int [rows] [columns];
    matricize (list, matrix);
    printMatrix (matrix);
    System.out.print ("\n");
    reverseDiagonal (matrix);
    printMatrix (matrix);
    magicCheck (list, matrix);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17035035_17035258_1_13
17035035_17035599_1_12
Title: java : better way of doing this than using if and else 
----------------------------------------

public static String formatNumber (String s, int decPts) {
    double d = Double.parseDouble (s);
    if (decPts >= 0 && decPts <= 4) {
        DecimalFormat df = new DecimalFormat ("###,##0");
        df.setMaximumFractionDigits (decPts);
        df.setMinimumFractionDigits (decPts);
        return df.format (d);
    }
    return String.valueOf (d);
}
----------------------------------------

public static String formatNumber (String s, int decPts) {
    double d = Double.parseDouble (s);
    final String baseFormat = "#,###,###,##0";
    String format = decPts == 0 ? baseFormat : baseFormat + ".";
    for (int i = 0;
    i < decPts; i ++) {
        format += "0";
    }
    return new DecimalFormat (format).format (d);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17038249_17038297_33_43
17038249_17038297_79_88
Title: "Setup reader decoder and consumer threads" 
----------------------------------------

public Void call () throws Exception {
    try {
        Random random = new Random ();
        while (true) {
            queue.put (random.nextInt ());
        }
    } catch (Exception e) {
    }
    return null;
}
----------------------------------------

public Void call () throws Exception {
    try {
        while (true) {
            System.out.println (queue.take ());
        }
    } catch (Exception e) {
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17038249_17038297_57_68
17038249_17038297_79_88
Title: "Setup reader decoder and consumer threads" 
----------------------------------------

public Void call () throws Exception {
    try {
        while (true) {
            Integer input = inputQueue.take ();
            String output = String.valueOf (input);
            outputQueue.put (output);
        }
    } catch (Exception e) {
    }
    return null;
}
----------------------------------------

public Void call () throws Exception {
    try {
        while (true) {
            System.out.println (queue.take ());
        }
    } catch (Exception e) {
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17043422_17043486_10_17
17043422_17052551_5_58
Title: Java - Randomly selecting from already defined Integers 
----------------------------------------

public static void main (String [] s) {
    RandomNumbers rn = new RandomNumbers ();
    int prev = 20;
    for (int i = 0;
    i < 10; i ++) {
        prev = rn.getRandomWithinOffset (prev);
        System.out.println (prev);
    }
}
----------------------------------------

public static void main (String [] args) {
    int RInteger, Loop1 = 0, Loop2 = 0, Loop3 = 0;
    Random RNumber = new Random ();
    while (Loop1 == 0) {
        RInteger = RNumber.nextInt (8);
        if (RInteger == 1) {
            Loop1 = 1;
        }
        if (RInteger == 5) {
            Loop1 = 5;
        }
        if (RInteger == 7) {
            Loop1 = 7;
        }
    }
    while (Loop2 == 0) {
        RInteger = RNumber.nextInt (8);
        if (RInteger == 1 && (RInteger != Loop1) && (RInteger - Loop1) <= 5 && (RInteger - Loop1) >= - 5) {
            Loop2 = 1;
        }
        if (RInteger == 5 && (RInteger != Loop1) && (RInteger - Loop1) <= 5 && (RInteger - Loop1) >= - 5) {
            Loop2 = 5;
        }
        if (RInteger == 7 && (RInteger != Loop1) && (RInteger - Loop1) <= 5 && (RInteger - Loop1) >= - 5) {
            Loop2 = 7;
        }
    }
    while (Loop3 == 0) {
        RInteger = RNumber.nextInt (8);
        if (RInteger == 1 && (RInteger != Loop2) && (RInteger - Loop2) <= 5 && (RInteger - Loop2) >= - 5) {
            Loop3 = 1;
        }
        if (RInteger == 5 && (RInteger != Loop2) && (RInteger - Loop2) <= 5 && (RInteger - Loop2) >= - 5) {
            Loop3 = 5;
        }
        if (RInteger == 7 && (RInteger != Loop2) && (RInteger - Loop2) <= 5 && (RInteger - Loop2) >= - 5) {
            Loop3 = 7;
        }
    }
    System.out.println (Loop1 + " " + Loop2 + " " + Loop3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17062021_64_72
17047330_17128335_55_66
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

private void touch_move (float x, float y) {
    float dx = Math.abs (x - mX);
    float dy = Math.abs (y - mY);
    if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {
        mPath.quadTo (mX, mY, (x + mX) / 2, (y + mY) / 2);
        mX = x;
        mY = y;
    }
}
----------------------------------------

private void touch_move (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    Path npath = new Path ();
    npath.moveTo (mX, mY);
    npath.lineTo (x, y);
    mX = x;
    mY = y;
    mCanvas.drawPath (npath, mPaint);
    npath.reset ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17062021_64_72
17047330_17133972_56_89
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

private void touch_move (float x, float y) {
    float dx = Math.abs (x - mX);
    float dy = Math.abs (y - mY);
    if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {
        mPath.quadTo (mX, mY, (x + mX) / 2, (y + mY) / 2);
        mX = x;
        mY = y;
    }
}
----------------------------------------

private void touch_move (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    float xdist = x - mPreviousX;
    float ydist = y - mPreviousY;
    float segmentLength = (float) Math.sqrt (xdist * xdist + ydist * ydist);
    float stepSize = Math.max (strokeRadius / 10, 1f);
    int steps = Math.max (Math.round (segmentLength / stepSize), 2);
    for (int i = 0;
    i < steps; ++ i) {
        int currentX = (int) (mPreviousX + xdist * i / steps);
        int currentY = (int) (mPreviousY + ydist * i / steps);
        drawSplash (currentX, currentY);
    }
    mPreviousX = x;
    mPreviousY = y;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17062021_83_102
17047330_17128335_73_92
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            touch_start (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_MOVE :
            touch_move (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            touch_up ();
            invalidate ();
            break;
    }
    return true;
}
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            touch_start (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_MOVE :
            touch_move (event);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            touch_up ();
            invalidate ();
            break;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17128335_11_26
17047330_17133972_13_35
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

public DrawView (Context context, AttributeSet attrs) {
    super (context, attrs);
    mPath = new Path ();
    mBitmapPaint = new Paint (Paint.DITHER_FLAG);
    mPaint = new Paint ();
    mPaint.setAlpha (0x80);
    mPaint.setAntiAlias (true);
    mPaint.setDither (true);
    mPaint.setColor (0x44000000);
    mPaint.setStyle (Paint.Style.STROKE);
    mPaint.setStrokeJoin (Paint.Join.ROUND);
    mPaint.setStrokeCap (Paint.Cap.BUTT);
    mPaint.setStrokeWidth (5);
}
----------------------------------------

public DrawView (Context context, AttributeSet attrs) {
    super (context, attrs);
    mBitmapPaint = new Paint (Paint.DITHER_FLAG);
    int strokeWidth = 20;
    strokeRadius = strokeWidth / 2;
    Shape brushShape = new OvalShape ();
    mBrush = new ShapeDrawable (brushShape);
    Paint paint = mBrush.getPaint ();
    Shader shader = new RadialGradient (strokeRadius, strokeRadius, strokeRadius, Color.argb (255, 0, 0, 0), Color.argb (0, 0, 0, 0), Shader.TileMode.CLAMP);
    paint.setShader (shader);
    paint.setAlpha (0x10);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17128335_55_66
17047330_17133972_56_89
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

private void touch_move (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    Path npath = new Path ();
    npath.moveTo (mX, mY);
    npath.lineTo (x, y);
    mX = x;
    mY = y;
    mCanvas.drawPath (npath, mPaint);
    npath.reset ();
}
----------------------------------------

private void touch_move (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    float xdist = x - mPreviousX;
    float ydist = y - mPreviousY;
    float segmentLength = (float) Math.sqrt (xdist * xdist + ydist * ydist);
    float stepSize = Math.max (strokeRadius / 10, 1f);
    int steps = Math.max (Math.round (segmentLength / stepSize), 2);
    for (int i = 0;
    i < steps; ++ i) {
        int currentX = (int) (mPreviousX + xdist * i / steps);
        int currentY = (int) (mPreviousY + ydist * i / steps);
        drawSplash (currentX, currentY);
    }
    mPreviousX = x;
    mPreviousY = y;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17047330_17128335_73_92
17047330_17133972_109_128
Title: "Android Paint: how to get ""airbrush"" effect?" 
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            touch_start (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_MOVE :
            touch_move (event);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            touch_up ();
            invalidate ();
            break;
    }
    return true;
}
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            touch_start (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_MOVE :
            touch_move (event);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            touch_up (event);
            invalidate ();
            break;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17052941_17053019_2_34
17052941_17088525_4_74
Title: "Iterating through an array List and creating new ArrayLists when values are different is this even possible?" 
----------------------------------------

public static void main (String...args) {
    Multimap < String, String > myMultimap = ArrayListMultimap.create ();
    myMultimap.put ("Fruits", "Bannana");
    myMultimap.put ("Fruits", "Apple");
    myMultimap.put ("Fruits", "Pear");
    myMultimap.put ("Vegetables", "Carrot");
    int size = myMultimap.size ();
    System.out.println (size);
    Collection < string > fruits = myMultimap.get ("Fruits");
    System.out.println (fruits);
    Collection < string > vegetables = myMultimap.get ("Vegetables");
    System.out.println (vegetables);
    for (String value : myMultimap.values ()) {
        System.out.println (value);
    }
    myMultimap.remove ("Fruits", "Pear");
    System.out.println (myMultimap.get ("Fruits"));
    myMultimap.removeAll ("Fruits");
    System.out.println (myMultimap.get ("Fruits"));
}
----------------------------------------

public static void main (String [] args) {
    LOBList test = new LOBList ();
    test.setCompany ("80");
    test.setLOB ("106");
    LOBList test1 = new LOBList ();
    test1.setCompany ("80");
    test1.setLOB ("601");
    LOBList test2 = new LOBList ();
    test2.setCompany ("80");
    test2.setLOB ("602");
    LOBList test3 = new LOBList ();
    test3.setCompany ("90");
    test3.setLOB ("102");
    LOBList test4 = new LOBList ();
    test4.setCompany ("90");
    test4.setLOB ("102");
    LOBList test5 = new LOBList ();
    test5.setCompany ("100");
    test5.setLOB ("102");
    LOBList BREAK = new LOBList ();
    BREAK.setCompany ("BREAK");
    BREAK.setLOB ("BREAK");
    BREAK.setcompany_lob ("BREAK");
    ArrayList < LOBList > arlst = new ArrayList < LOBList > ();
    arlst.add (0, test);
    arlst.add (1, test1);
    arlst.add (2, test2);
    arlst.add (3, test3);
    arlst.add (4, test4);
    arlst.add (5, test5);
    int idx = 0;
    String nextVal = "";
    for (idx = 0; idx < arlst.size (); idx ++) {
        String current = arlst.get (idx).getCompany ();
        if (idx != arlst.size () - 1) {
            String next = arlst.get (idx + 1).getCompany ();
            nextVal = next;
            if (! (current.equals (next))) {
                arlst.add (idx + 1, BREAK);
                idx ++;
            }
        }
    }
    arlst.add (arlst.size (), BREAK);
    for (int i = 0;
    i < arlst.size (); i ++) {
        System.out.println ("co:" + arlst.get (i).getCompany ());
    }
    ArrayList < ArrayList < LOBList > > mymasterList = new ArrayList < ArrayList < LOBList > > ();
    mymasterList = searchListCreateNewLists (arlst);
    for (int i = 0;
    i < mymasterList.size (); i ++) {
        for (int j = 0;
        j < mymasterList.get (i).size (); j ++) {
            System.out.println ("search method: " + mymasterList.get (i).get (j).getCompany ());
        }
        System.out.println ("end of current list");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17059575_17059633_10_41
17059575_17060088_6_31
Title: How to change the font in JOptionPane.showInputDialog JTextField? 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            }
            JTextField field = new JTextField ("Hello");
            field.setFont (field.getFont ().deriveFont (Font.BOLD, 24));
            String [] options = {"Ok", "Cancel"};
            int result = JOptionPane.showOptionDialog (null, field, "Help", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, 0);
            switch (result) {
                case 0 :
                    System.out.println ("Okay");
                    break;
                case 1 :
                    System.out.println ("Cancel");
                    break;
            }
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            String s = JOptionPane.showInputDialog (null);
            if (s != null) {
                System.out.println ("User chose: " + s);
            } else {
                System.out.println ("User did not chose an option!");
            }
            JTextField tf = new JTextField (8);
            tf.setFont (tf.getFont ().deriveFont (26f));
            int result = JOptionPane.showConfirmDialog (null, tf, "Input", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                System.out.println ("User chose: " + tf.getText ());
            } else {
                System.out.println ("User did not chose an option!");
            }
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17059575_17059633_13_39
17059575_17060088_10_28
Title: How to change the font in JOptionPane.showInputDialog JTextField? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JTextField field = new JTextField ("Hello");
    field.setFont (field.getFont ().deriveFont (Font.BOLD, 24));
    String [] options = {"Ok", "Cancel"};
    int result = JOptionPane.showOptionDialog (null, field, "Help", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, 0);
    switch (result) {
        case 0 :
            System.out.println ("Okay");
            break;
        case 1 :
            System.out.println ("Cancel");
            break;
    }
}
----------------------------------------

public void run () {
    String s = JOptionPane.showInputDialog (null);
    if (s != null) {
        System.out.println ("User chose: " + s);
    } else {
        System.out.println ("User did not chose an option!");
    }
    JTextField tf = new JTextField (8);
    tf.setFont (tf.getFont ().deriveFont (26f));
    int result = JOptionPane.showConfirmDialog (null, tf, "Input", JOptionPane.OK_CANCEL_OPTION);
    if (result == JOptionPane.OK_OPTION) {
        System.out.println ("User chose: " + tf.getText ());
    } else {
        System.out.println ("User did not chose an option!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17078122_17078236_1_10
17078122_17078300_1_15
Title: Remove specific consecutive element in array 
----------------------------------------

public static String removeConsecutive (String str, char remove) {
    StringBuilder sb = new StringBuilder ();
    for (char c : str.toCharArray ()) {
        int length = sb.length ();
        if (c != remove || length == 0 || sb.charAt (length - 1) != c) {
            sb.append (c);
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String removeConsecutive (String str, char remove) {
    StringBuilder bldr = new StringBuilder ();
    int rec = 0;
    for (char curr : str.toCharArray ()) {
        if (curr == remove) {
            if (rec == 0) bldr.append (curr);

            ++ rec;
        } else {
            rec = 0;
            bldr.append (curr);
        }
    }
    return bldr.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17078347_17078497_1_17
17078347_17078637_1_11
Title: Convert a String to Modified Camel Case in Java or Title Case as is otherwise called 
----------------------------------------

public static String toCamelCase (final String init) {
    if (init == null) return null;

    final StringBuilder ret = new StringBuilder (init.length ());
    for (final String word : init.split (" ")) {
        if (! word.isEmpty ()) {
            ret.append (word.substring (0, 1).toUpperCase ());
            ret.append (word.substring (1).toLowerCase ());
        }
        if (! (ret.length () == init.length ())) ret.append (" ");

    }
    return ret.toString ();
}
----------------------------------------

static String toCamelCase (String s) {
    String [] parts = s.split (" ");
    String camelCaseString = "";
    for (String part : parts) {
        if (part != null && part.trim ().length () > 0) camelCaseString = camelCaseString + toProperCase (part);
        else camelCaseString = camelCaseString + part + " ";

    }
    return camelCaseString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17085150_17085247_2_30
17085150_17086294_1_23
Title: Pass filename for command execution 
----------------------------------------

public static void main (String [] args) throws IOException {
    String [] command = {"CMD", "/C", "dir"};
    ProcessBuilder probuilder = new ProcessBuilder (command);
    probuilder.directory (new File ("c:\\xyzwsdemo"));
    Process process = probuilder.start ();
    InputStream is = process.getInputStream ();
    InputStreamReader isr = new InputStreamReader (is);
    BufferedReader br = new BufferedReader (isr);
    String line;
    System.out.printf ("Output of running %s is:\n", Arrays.toString (command));
    while ((line = br.readLine ()) != null) {
        System.out.println (line);
    }
    try {
        int exitValue = process.waitFor ();
        System.out.println ("\n\nExit Value is " + exitValue);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    String filename;
    try {
        Runtime rt = Runtime.getRuntime ();
        filename = "";
        Process pr = rt.exec ("C:\\Home\\Hello.exe " + filename);
        BufferedReader input = new BufferedReader (new InputStreamReader (pr.getInputStream ()));
        String line = null;
        while ((line = input.readLine ()) != null) {
            System.out.println (line);
        }
        int exitVal = pr.waitFor ();
        System.out.println ("Error " + exitVal);
    } catch (Exception e) {
        System.out.println (e.toString ());
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17090150_17090331_16_24
17090150_17090331_26_39
Title: Extra Brackets in Java using Dom Parser 
----------------------------------------

protected String getNodeValue (Node node) {
    NodeList childNodes = node.getChildNodes ();
    for (int x = 0;
    x < childNodes.getLength (); x ++) {
        Node data = childNodes.item (x);
        if (data.getNodeType () == Node.TEXT_NODE) return data.getNodeValue ();

    }
    return "";
}
----------------------------------------

protected String getNodeValue (String tagName, NodeList nodes) {
    for (int x = 0;
    x < nodes.getLength (); x ++) {
        Node node = nodes.item (x);
        if (node.getNodeName ().equalsIgnoreCase (tagName)) {
            NodeList childNodes = node.getChildNodes ();
            for (int y = 0;
            y < childNodes.getLength (); y ++) {
                Node data = childNodes.item (y);
                if (data.getNodeType () == Node.TEXT_NODE) return data.getNodeValue ();

            }
        }
    }
    return "";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17090150_17090331_41_50
17090150_17090331_52_68
Title: Extra Brackets in Java using Dom Parser 
----------------------------------------

protected String getNodeAttr (String attrName, Node node) {
    NamedNodeMap attrs = node.getAttributes ();
    for (int y = 0;
    y < attrs.getLength (); y ++) {
        Node attr = attrs.item (y);
        if (attr.getNodeName ().equalsIgnoreCase (attrName)) {
            return attr.getNodeValue ();
        }
    }
    return "";
}
----------------------------------------

protected String getNodeAttr (String tagName, String attrName, NodeList nodes) {
    for (int x = 0;
    x < nodes.getLength (); x ++) {
        Node node = nodes.item (x);
        if (node.getNodeName ().equalsIgnoreCase (tagName)) {
            NodeList childNodes = node.getChildNodes ();
            for (int y = 0;
            y < childNodes.getLength (); y ++) {
                Node data = childNodes.item (y);
                if (data.getNodeType () == Node.ATTRIBUTE_NODE) {
                    if (data.getNodeName ().equalsIgnoreCase (attrName)) return data.getNodeValue ();

                }
            }
        }
    }
    return "";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17100691_17100781_124_142
17100691_17100781_94_109
Title: How to copy from a JTextArea? 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    if (firstTime) {
        newTile = String.format ("new Tile");
        numTiles ++;
        firstTime = false;
    } else {
        if (++ numTiles % 3 == 0) {
            newTile = String.format (",\n\t new Tile");
        } else newTile = String.format (", new Tile");

    }
    area.append (newTile);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (! manual.isSelected ()) {
        startLoop = true;
    }
    if (field.getText ().equals ("Enter Name")) {
        area.setText ("You must name your array");
    } else {
        area.setText ("Tile" + field.getText ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17124918_17174876_1_8
17124918_17174876_9_30
Title: Generate all combinations of pairs without redundancy 
----------------------------------------

public void generate (int n) {
    int [] covered = new int [n];
    int [] list = new int [n];
    for (int i = 0;
    i < n; i ++) {
        covered [i] = 0;
    }
    this.generate (n, covered, 0, list);
}
----------------------------------------

private void generate (int n, int [] covered, int i, int [] list) {
    int j = 0;
    while ((j < n) && (covered [j] == 1)) {
        j ++;
    }
    if (j == n) {
        System.out.println (Arrays.toString (list));
        return;
    }
    covered [j] = 1;
    for (int k = 0;
    k < n; k ++) {
        if (covered [k] == 0) {
            covered [k] = 1;
            list [i ++] = j;
            list [i ++] = k;
            this.generate (n, covered, i, list);
            i -= 2;
            covered [k] = 0;
        }
    }
    covered [j] = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17126931_17127578_35_52
17126931_17127578_9_29
Title: How to unlock thread in case of multithreading in java 
----------------------------------------

public void run () {
    try {
        lock2.tryLock (5, TimeUnit.SECONDS);
        System.out.println ("Thread-2: Lock 2 acquired");
        lock1.tryLock (5, TimeUnit.SECONDS);
        System.out.println ("Thread-2: Lock 1 acquired");
    } catch (InterruptedException e) {
    } finally {
        lock2.unlock ();
    }
    System.out.println ("In thread2");
}
----------------------------------------

public void run () {
    try {
        lock1.tryLock (5, TimeUnit.SECONDS);
        System.out.println ("Thread-1: Lock 1 acquired");
        final int sleepTimeMs = 1000;
        Thread.sleep (sleepTimeMs);
        lock2.tryLock (5, TimeUnit.SECONDS);
        System.out.println ("Thread-1: Lock 2 acquired");
    } catch (InterruptedException e) {
    } finally {
        lock1.unlock ();
    }
    System.out.println ("In thread1");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17138614_17138782_1_16
17138614_17139062_3_29
Title: Clip not playing any sound 
----------------------------------------

public static void main (String [] args) throws Exception {
    File in = new File ("C:\\Users\\Sandra\\Desktop\\music\\rags.wav");
    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
    Clip play = AudioSystem.getClip ();
    play.open (audioInputStream);
    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
    volume.setValue (1.0f);
    play.start ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JOptionPane.showMessageDialog (null, "Close to exit!");
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Clip play = null;
    try {
        File in = new File ("C:\\Users\\Public\\Music\\Sample Music\\Kalimba.wav");
        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
        play = AudioSystem.getClip ();
        play.open (audioInputStream);
        FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
        volume.setValue (1.0f);
        play.start ();
        play.drain ();
    } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
        ex.printStackTrace ();
    } finally {
        try {
            play.close ();
        } catch (Exception exp) {
        }
    }
    System.out.println ("...");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17138614_17138782_1_16
17138614_23601527_1_13
Title: Clip not playing any sound 
----------------------------------------

public static void main (String [] args) throws Exception {
    File in = new File ("C:\\Users\\Sandra\\Desktop\\music\\rags.wav");
    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
    Clip play = AudioSystem.getClip ();
    play.open (audioInputStream);
    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
    volume.setValue (1.0f);
    play.start ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JOptionPane.showMessageDialog (null, "Close to exit!");
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws IOException, UnsupportedAudioFileException, LineUnavailableException {
    File in = new File ("C:\\Users\\Sandra\\Desktop\\music\\rags.wav");
    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
    Clip play = AudioSystem.getClip ();
    play.open (audioInputStream);
    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
    volume.setValue (1.0f);
    play.start ();
    play.drain ();
    play.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17138614_17139062_3_29
17138614_23601527_1_13
Title: Clip not playing any sound 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Clip play = null;
    try {
        File in = new File ("C:\\Users\\Public\\Music\\Sample Music\\Kalimba.wav");
        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
        play = AudioSystem.getClip ();
        play.open (audioInputStream);
        FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
        volume.setValue (1.0f);
        play.start ();
        play.drain ();
    } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
        ex.printStackTrace ();
    } finally {
        try {
            play.close ();
        } catch (Exception exp) {
        }
    }
    System.out.println ("...");
}
----------------------------------------

public static void main (String [] args) throws IOException, UnsupportedAudioFileException, LineUnavailableException {
    File in = new File ("C:\\Users\\Sandra\\Desktop\\music\\rags.wav");
    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);
    Clip play = AudioSystem.getClip ();
    play.open (audioInputStream);
    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);
    volume.setValue (1.0f);
    play.start ();
    play.drain ();
    play.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17163180_17163320_4_22
17163180_17163471_8_27
Title: I got correct reversed string in method but when i returned into main() it is showing wrong string as output 
----------------------------------------

public String revString (String str) {
    String substr = "";
    String temp = "";
    int strLength = 0;
    String reversed = "";
    Character ch;
    strLength = str.length ();
    System.out.println ("length- " + strLength);
    if (strLength != 0) {
        ch = str.charAt (strLength - 1);
        temp = temp + ch;
        substr = str.substring (0, strLength - 1);
        if (substr.equals ("")) {
            reversed = temp;
            return reversed;
        }
        return temp + revString (substr);
    }
    return reversed;
}
----------------------------------------

public String revString (String str) {
    Character ch;
    strLength = str.length ();
    System.out.println ("length- " + strLength);
    if (strLength != 0) {
        ch = str.charAt (strLength - 1);
        if (temp.length () == str.length ()) return temp;

        temp = temp + ch;
        substr = str.substring (0, strLength - 1);
        if (substr.equals ("")) {
            reversed = temp;
            return reversed;
        }
        temp = temp + revString (substr);
    }
    return reversed;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17175194_17175532_14_42
17175194_17175532_23_33
Title: Passing arguments through Java Swing 
----------------------------------------

public void run () {
    try {
        final Person ObjectToPass = new Person ();
        NameEnterForm frame = new NameEnterForm (ObjectToPass);
        frame.setVisible (true);
        Runnable printThread = new Runnable () {
            @Override
            public void run () {
                while (true) {
                    System.out.println ("Print Value:" + ObjectToPass.getName ());
                    try {
                        Thread.sleep (1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }}

        new Thread (printThread).start ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("Print Value:" + ObjectToPass.getName ());
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1719594_1719937_3_30
1719594_3009814_1_55
Title: Iterative Cartesian Product in Java 
----------------------------------------

public static < T > List < Tuple < T > > cartesianProduct (List < Set < T > > sets) {
    List < Tuple < T > > tuples = new ArrayList < Tuple < T > > ();
    for (Set < T > set : sets) {
        if (tuples.isEmpty ()) {
            for (T t : set) {
                Tuple < T > tuple = new Tuple < T > ();
                tuple.add (t);
                tuples.add (tuple);
            }
        } else {
            List < Tuple < T > > newTuples = new ArrayList < Tuple < T > > ();
            for (Tuple < T > subTuple : tuples) {
                for (T t : set) {
                    Tuple < T > tuple = new Tuple < T > ();
                    tuple.addAll (subTuple);
                    tuple.add (t);
                    newTuples.add (tuple);
                }
            }
            tuples = newTuples;
        }
    }
    return tuples;
}
----------------------------------------

public static < T > Iterable < T > cartesianProduct (final Function < Object [], T > fn, Object []...options) {
    final Object [] [] opts = new Object [options.length] [];
    for (int i = opts.length;
    -- i >= 0;) {
        if (options [i].length == 0) {
            return Collections.emptySet ();
        }
        opts [i] = options [i].clone ();
    }
    return new Iterable < T > () {
        public Iterator < T > iterator () {
            return new Iterator < T > () {
                final int [] pos = new int [opts.length];
                boolean hasPending;
                T pending;
                boolean exhausted;
                public boolean hasNext () {
                    fetch ();
                    return hasPending;
                } public T next () {
                    fetch ();
                    if (! hasPending) {
                        throw new NoSuchElementException ();
                    }
                    T out = pending;
                    pending = null;
                    hasPending = false;
                    return out;
                } public void remove () {
                    throw new UnsupportedOperationException ();
                } private void fetch () {
                    if (hasPending || exhausted) {
                        return;
                    }
                    int n = pos.length;
                    Object [] args = new Object [n];
                    for (int j = n;
                    -- j >= 0;) {
                        args [j] = opts [j] [pos [j]];
                    }
                    pending = fn.apply (args);
                    hasPending = true;
                    for (int i = n;
                    -- i >= 0;) {
                        if (++ pos [i] < opts [i].length) {
                            for (int j = n;
                            -- j > i;) {
                                pos [j] = 0;
                            }
                            return;
                        }
                    }
                    exhausted = true;
                }}

            ;
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17205557_17205760_13_25
17205557_17205770_6_31
Title: Acquiring reference to private final field in abstract class 
----------------------------------------

public static void main (String [] args) throws IllegalAccessException {
    Class neededType = String.class;
    A a = new B ();
    Class c = a.getClass ();
    Class sc = c.getSuperclass ();
    Field flds [] = sc.getDeclaredFields ();
    for (Field f : flds) {
        if (neededType.equals (f.getType ())) {
            f.setAccessible (true);
            System.out.println (f.get (a));
        }
    }
}
----------------------------------------

public static void main (String args []) {
    B someB = new B ();
    B otherB = new B ();
    Field uniqueField = null;
    for (Field f : A.class.getDeclaredFields ()) {
        if (! Modifier.isFinal (f.getModifiers ())) continue;

        if (! UNIQUE.class.isAssignableFrom (f.getType ())) continue;

        uniqueField = f;
        break;
    }
    if (null == uniqueField) throw new NullPointerException ();

    uniqueField.setAccessible (true);
    try {
        System.out.println (uniqueField.get (someB) != uniqueField.get (otherB));
    } catch (IllegalArgumentException | IllegalAccessException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17222151_17223134_13_30
17222151_17226411_13_47
Title: Mouse focus on JLabel 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = buildFrame ();
    JPanel panel = new JPanel ();
    BoxLayout layout = new BoxLayout (panel, BoxLayout.X_AXIS);
    panel.setLayout (layout);
    frame.getContentPane ().add (panel);
    JLabel label = new JLabel ("Click me and I'll react");
    label.addMouseListener (new MouseAdapter () {
        @Override
        public void mouseClicked (MouseEvent e) {
            System.out.println ("clicked!");
        }}

    );
    panel.add (label);
    panel.add (new JLabel ("This label won't react"));
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ("Demo");
            frame.getContentPane ().setLayout (new BorderLayout ());
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            final JLabel lblToFocus = new JLabel ("A FocusEvent will be fired if I got a focus.");
            JButton btnFocus = new JButton ("Focus that label now!");
            btnFocus.addActionListener (new ActionListener () {
                @Override
                public void actionPerformed (ActionEvent arg0) {
                    lblToFocus.requestFocusInWindow ();
                }}

            );
            lblToFocus.addFocusListener (new FocusAdapter () {
                @Override
                public void focusGained (FocusEvent e) {
                    super.focusGained (e);
                    System.out.println ("Label got the focus!");
                }}

            );
            frame.getContentPane ().add (lblToFocus, BorderLayout.PAGE_START);
            frame.getContentPane ().add (btnFocus, BorderLayout.CENTER);
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17233599_17236425_17_25
17233599_17236425_30_38
Title: Does synchronized park a concurrent thread like Lock.lock() does? 
----------------------------------------

public void run () {
    try {
        lock.lock ();
    } catch (Exception ex) {
        System.out.println (Thread.currentThread ().getName () + " processing exception " + ex.getClass ().getSimpleName ());
    }
    while (true);

}
----------------------------------------

public void run () {
    try {
        anotherLock.lockInterruptibly ();
    } catch (InterruptedException ex) {
        System.out.println (Thread.currentThread ().getName () + " was interrupted");
    }
    while (true);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17238768_17240887_1_47
17238768_17241321_1_16
Title: Distributing AND over OR in a binary tree (Conjunctive Normal Form) 
----------------------------------------

public TreeNode distribute (TreeNode parent, TreeNode leftChild, TreeNode rightChild) {
    if (! (leftChild instanceof Operator) && ! (rightChild instanceof Operator)) {
        return parent;
    }
    if (parent.getType () == 'OR') {
        if ((leftChild instanceof operator) && ! (rightChild instanceof Operator)) {
            TreeNode operatorLeftChild = leftChild.getLeftChild ();
            TreeNode operatorRightChild = leftChild.getRightChild ();
            if (leftChild.getType () == 'AND') {
                TreeNode newBranch = new Operator ("AND");
                TreeNode newLeftChild = new Operator ("OR");
                newLeftChild.setLeftChild (rightChild);
                newLeftChild.setRightChild (operatorLeftChild);
                TreeNode newRightChild = new Operator ("OR");
                newRightChild.setLeftChild (rightChild);
                newRightChild.setRightChild (operatorRightChild);
                newBranch.setLeftChild (newLeftChild);
                newBranch.setRightChild (newRightChild);
                return newBranch;
            }
        }
    }
    if (parent.getType () == 'AND') {
    }
}
----------------------------------------

private static TreeNode distribute (TreeNode n, TreeNode left, TreeNode right) {
    if (n instanceof Or) {
        if (left instanceof And) {
            return new And (new Or (left.getLeft (), right), new Or (left.getRight (), right));
        } else if (right instanceof And) {
            return new And (new Or (right.getLeft (), left), new Or (right.getRight (), left));
        }

    }
    return treeNode;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17243669_17243899_51_62
17243669_40785717_1_40
Title: Passing array elements between different classes in Java 
----------------------------------------

public static void main (String [] args) {
    EmployeeArray google = new EmployeeArray ();
    google.setUpArray ();
    EmployeeArray ms = new EmployeeArray ();
    ms.setUpArray ();
    EmployeeArrayCalculatorAndManipulator eGoogle = new EmployeeArrayCalculatorAndManipulator ();
    EmployeeArrayCalculatorAndManipulator eMS = new EmployeeArrayCalculatorAndManipulator ();
    eGoogle.doSomethingWithArray (google.getEmployees ());
    eMS.doSomethingWithArray (ms.getEmployees ());
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int numEmp;
    System.out.println ("Enter how may employees to be compared: ");
    numEmp = input.nextInt ();
    input.nextLine ();
    Employee [] employees = new Employee [numEmp];
    for (int i = 0;
    i < numEmp; i ++) {
        System.out.print ("Enter your name: ");
        String employeeName = input.nextLine ();
        System.out.println ();
        System.out.print ("Enter your annual sales: ");
        int employeeSales = input.nextInt ();
        input.nextLine ();
        System.out.println ();
        employees [i] = new Employee (employeeName, employeeSales);
    }
    Employee maxSeller = employees [0];
    for (int i = 0;
    i < employees.length; i ++) {
        System.out.println ("Employee Name: " + employees [i].getName ());
        System.out.println ("Total sales: $" + employees [i].getSales ());
        System.out.println ();
        if (maxSeller.getSales () < employees [i].getSales ()) {
            maxSeller = employees [i];
        }
    }
    System.out.println ();
    System.out.println ("Top Seller is: " + maxSeller.getName ());
    System.out.println ("Top Sales are: $" + maxSeller.getSales ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17247989_17248106_1_16
17247989_27915565_3_21
Title: Java list using arrays or any listing method 
----------------------------------------

public int solution (IntList head, int k) {
    IntList temp = head;
    int count = 0;
    while (count != k) {
        if (temp == null) {
            return - 1;
        }
        temp = temp.next;
    }
    while (temp != null) {
        head = head.next;
        temp = temp.next;
    }
    return head.value;
}
----------------------------------------

public int solution (IntList L, int M) {
    IntList temp = L;
    int value = 0;
    int i = 0;
    for (i = 0; i <= L.length () - 1; i ++) {
        temp = temp.next ();
        if (temp == null) break;

        value = temp.value ();
        if (value == M) {
            if (i == 0) return L.length () - 1;
            else return L.length () - 1 - i;

        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17249480_17250227_7_23
17249480_17260263_1_22
Title: How to ignore newlines when using method skip(String) of the java.util.Scanner object? 
----------------------------------------

public void scannerSkipTest () {
    Scanner sc = new Scanner (new StringReader (text));
    sc.useDelimiter (WHITESPACE);
    sc.skip ("FUNCTION_BLOCK");
    String blockName = sc.next ();
    sc.skip (WHITESPACE + "VAR_INPUT");
    String variableName = sc.next ();
    sc.skip (WHITESPACE + ":");
    String typeWithSemiColon = sc.next ();
    sc.skip (WHITESPACE + "END_VAR");
    sc.skip (WHITESPACE + "END_FUNCTION_BLOCK");
    assert "Unnamed_project".equals (blockName);
    assert "Unnamed_variable1".equals (variableName);
    assert "REAL;".equals (typeWithSemiColon);
}
----------------------------------------

@Test
public void scannerSkipTest () {
    Scanner sc = new Scanner (new StringReader (text));
    sc.useDelimiter ("\\s*\\b\\s*|\\s+");
    sc.next ("(?i)FUNCTION_BLOCK");
    String blockName = sc.next ();
    sc.next ("(?i)VAR_INPUT");
    String variableName = sc.next ();
    sc.next (":");
    String type = sc.next ();
    sc.next (";");
    sc.next ("(?i)END_VAR");
    sc.next ("(?i)END_FUNCTION_BLOCK");
    assert "Unnamed_project".equals (blockName);
    assert "Unnamed_variable1".equals (variableName);
    assert "REAL".equals (type);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17252686_17252724_33_42
17252686_17252724_51_59
Title: how to capture the screen of the active browser without other windows at the bottom of the taskbar 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17252686_17252724_33_42
17252686_17252724_74_84
Title: how to capture the screen of the active browser without other windows at the bottom of the taskbar 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        return false;
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17252686_17252724_51_59
17252686_17252724_74_84
Title: how to capture the screen of the active browser without other windows at the bottom of the taskbar 
----------------------------------------

public boolean callback (Pointer hWnd, Pointer arg) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty ()) {
        windowNames.add (wText);
    }
    return true;
}
----------------------------------------

public boolean callback (Pointer hWnd, Pointer userData) {
    byte [] windowText = new byte [512];
    user32.GetWindowTextA (hWnd, windowText, 512);
    String wText = Native.toString (windowText).trim ();
    if (! wText.isEmpty () && wText.startsWith (startOfWindowName)) {
        callBackHwnd = hWnd;
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259402_1_12
17259365_17259416_2_12
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                count ++;
            }
        }
        System.out.println (y [j] + ": " + count);
        count = 0;
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    for (int i = 0;
    i < y.length; i ++) {
        int count = 0;
        for (int j = 0;
        j < x.length; j ++) {
            if (x [j].equals (y [i])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259402_1_12
17259365_17259430_1_12
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                count ++;
            }
        }
        System.out.println (y [j] + ": " + count);
        count = 0;
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < y.length; i ++) {
        for (int j = 0;
        j < x.length; j ++) {
            if (y [i].contains (x [j])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
        count = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259402_1_12
17259365_17259529_1_20
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                count ++;
            }
        }
        System.out.println (y [j] + ": " + count);
        count = 0;
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    HashMap < String, Integer > map = new HashMap < String, Integer > ();
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                if (map.get (y [j]) != null) {
                    count = (int) map.get (y [j]);
                    count ++;
                    map.put (y [j], count);
                } else {
                    map.put (y [j], 1);
                }
            }
        }
    }
    System.out.println (map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259416_2_12
17259365_17259430_1_12
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    for (int i = 0;
    i < y.length; i ++) {
        int count = 0;
        for (int j = 0;
        j < x.length; j ++) {
            if (x [j].equals (y [i])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < y.length; i ++) {
        for (int j = 0;
        j < x.length; j ++) {
            if (y [i].contains (x [j])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
        count = 0;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259416_2_12
17259365_17259529_1_20
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    for (int i = 0;
    i < y.length; i ++) {
        int count = 0;
        for (int j = 0;
        j < x.length; j ++) {
            if (x [j].equals (y [i])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    HashMap < String, Integer > map = new HashMap < String, Integer > ();
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                if (map.get (y [j]) != null) {
                    count = (int) map.get (y [j]);
                    count ++;
                    map.put (y [j], count);
                } else {
                    map.put (y [j], 1);
                }
            }
        }
    }
    System.out.println (map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17259365_17259430_1_12
17259365_17259529_1_20
Title: Pass two arrays of strings and count the occur y array in x array in Java 
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    for (int i = 0;
    i < y.length; i ++) {
        for (int j = 0;
        j < x.length; j ++) {
            if (y [i].contains (x [j])) {
                count ++;
            }
        }
        System.out.println (y [i] + ": " + count);
        count = 0;
    }
}
----------------------------------------

public static void stringOccurInY (String [] x, String [] y) {
    int count = 0;
    HashMap < String, Integer > map = new HashMap < String, Integer > ();
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 0;
        j < y.length; j ++) {
            if (y [j].contains (x [i])) {
                if (map.get (y [j]) != null) {
                    count = (int) map.get (y [j]);
                    count ++;
                    map.put (y [j], count);
                } else {
                    map.put (y [j], 1);
                }
            }
        }
    }
    System.out.println (map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17263720_17263815_1_10
17263720_17264072_8_17
Title: "Listen to ""back"" key pressed in a Fragment" 
----------------------------------------

@Override
public void onBackPressed () {
    Fragment frag = getSupportFragmentManager ().findFragmentById (R.id.your_container);
    if (frag instanceof TheFragmentYouAreTalkingAbout) {
        ((TheFragmentYouAreTalkingAbout) frag).showConfirmGoBackDialog ();
    } else {
        super.onBackPressed ();
    }
}
----------------------------------------

@Override
public void onBackPressed () {
    MyFragment fragment = (MyFragment) findFragmentByTag (MY_FRAGMENT_TAG);
    if (fragment != null) {
        fragment.showConfirmation
    } else {
        super.onBackPressed ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17322002_17323025_15_28
17322002_21155176_1_19
Title: "What causes the error ""java.security.InvalidKeyException: Parameters missing""?" 
----------------------------------------

public static byte [] encrypt (String key, String value) throws GeneralSecurityException {
    byte [] raw = key.getBytes (Charset.forName ("UTF-8"));
    if (raw.length != 16) {
        throw new IllegalArgumentException ("Invalid key size.");
    }
    SecretKeySpec skeySpec = new SecretKeySpec (raw, "AES");
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    cipher.init (Cipher.ENCRYPT_MODE, skeySpec, new IvParameterSpec (new byte [16]));
    return cipher.doFinal (value.getBytes (Charset.forName ("UTF-8")));
}
----------------------------------------

public static byte [] encrypt (String value) {
    byte [] encrypted = null;
    try {
        byte [] raw = new byte [] {'T', 'h', 'i', 's', 'I', 's', 'A', 'S', 'e', 'c', 'r', 'e', 't', 'K', 'e', 'y'};
        Key skeySpec = new SecretKeySpec (raw, "AES");
        Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
        byte [] iv = new byte [cipher.getBlockSize ()];
        IvParameterSpec ivParams = new IvParameterSpec (iv);
        cipher.init (Cipher.ENCRYPT_MODE, skeySpec, ivParams);
        encrypted = cipher.doFinal (value.getBytes ());
        System.out.println ("encrypted string:" + encrypted.length);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
    return encrypted;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17322002_17323025_30_45
17322002_21155176_21_39
Title: "What causes the error ""java.security.InvalidKeyException: Parameters missing""?" 
----------------------------------------

public static String decrypt (String key, byte [] encrypted) throws GeneralSecurityException {
    byte [] raw = key.getBytes (Charset.forName ("UTF-8"));
    if (raw.length != 16) {
        throw new IllegalArgumentException ("Invalid key size.");
    }
    SecretKeySpec skeySpec = new SecretKeySpec (raw, "AES");
    Cipher cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
    cipher.init (Cipher.DECRYPT_MODE, skeySpec, new IvParameterSpec (new byte [16]));
    byte [] original = cipher.doFinal (encrypted);
    return new String (original, Charset.forName ("UTF-8"));
}
----------------------------------------

public static byte [] decrypt (byte [] encrypted) {
    byte [] original = null;
    Cipher cipher = null;
    try {
        byte [] raw = new byte [] {'T', 'h', 'i', 's', 'I', 's', 'A', 'S', 'e', 'c', 'r', 'e', 't', 'K', 'e', 'y'};
        Key key = new SecretKeySpec (raw, "AES");
        cipher = Cipher.getInstance ("AES/CBC/PKCS5Padding");
        byte [] ivByte = new byte [cipher.getBlockSize ()];
        IvParameterSpec ivParamsSpec = new IvParameterSpec (ivByte);
        cipher.init (Cipher.DECRYPT_MODE, key, ivParamsSpec);
        original = cipher.doFinal (encrypted);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
    return original;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17338480_17338593_14_26
17338480_17338659_20_33
Title: How to retrieve key & values from hashmap 
----------------------------------------

public static void addTask () {
    for (int k = 0;
    k < longValues.length; k ++) {
        screen_dataz.put (k, longValues [k]);
    }
    Set < Entry < Integer, String [] > > mapSet = screen_dataz.entrySet ();
    Iterator < Entry < Integer, String [] > > mapIterator = mapSet.iterator ();
    while (mapIterator.hasNext ()) {
        Entry < Integer, String [] > mapEntry = mapIterator.next ();
        Integer keyValue = mapEntry.getKey ();
        String [] value = mapEntry.getValue ();
        System.out.println (Arrays.toString (value));
    }
}
----------------------------------------

public static void addTask () {
    for (int k = 0;
    k < longValues.length; k ++) {
        screen_dataz.put (k, longValues [k]);
    }
    for (Entry < Integer, Object [] > entry : screen_dataz.entrySet ()) {
        System.out.println (entry.getKey ());
        for (Object obj : entry.getValue ()) {
            System.out.println (obj.toString ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17349349_17349600_1_12
17349349_17349798_1_11
Title: Printing pyramid in Java on the console 
----------------------------------------

public static void main (String [] args) {
    int lines = Integer.parseInt (args [0]);
    int num = 1;
    for (int i = 1;
    i <= lines; i ++) {
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (num);
            num ++;
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int num = 1;
    for (int i = 1;
    i < 5; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (num ++);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17353269_17353828_22_31
17353269_17354234_6_26
Title: "Regexp change words that arent between "" """ 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    System.out.println (replace ("", "change", "___"));
    System.out.println (replace ("\"dont-change\"", "change", "___"));
    System.out.println (replace ("\"change", "change", "___"));
    System.out.println (replace ("simple: change", "change", "___"));
    System.out.println (replace ("simple2: \"dont-change\"", "change", "___"));
    System.out.println (replace ("change \"dont-change\"\"", "change", "___"));
    System.out.println (replace ("change \"dont-change\"", "change", "___"));
    System.out.println (replace ("\"dont-change\" change", "change", "___"));
}
----------------------------------------

public static void main (String [] args) {
    String s = "I am super hero here and now\n" + "Superman is an incredible hero\n" + "I am super \"hero\" here and now\n" + "\"I am super hero here and now\"";
    String t = "hero";
    String r = "zero";
    Integer d = r.length () - t.length ();
    Integer o = 0;
    Pattern p = Pattern.compile ("\"[^\"]*\"|(" + t + ")");
    Matcher m = p.matcher (s);
    while (m.find ()) {
        if (m.group (1) != null) {
            s = s.substring (0, m.start () - o) + r + s.substring (m.end () - o);
            o -= d;
        }
    }
    System.out.println (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_13684411_19_50
1735863_18474190_17_39
Title: Merge Sort Java 
----------------------------------------

private void merge (int [] arr, int lo, int mid, int hi) {
    int [] left = new int [(mid - lo) + 2];
    int [] right = new int [hi - mid + 1];
    System.arraycopy (arr, lo, left, 0, left.length - 1);
    System.arraycopy (arr, mid + 1, right, 0, left.length - 1);
    left [left.length - 1] = 100;
    right [right.length - 1] = 100;
    int i = 0;
    int j = 0;
    for (; lo <= hi; lo ++) {
        if (left [i] <= right [j]) {
            arr [lo] = left [i];
            i ++;
        } else {
            arr [lo] = right [j];
            j ++;
        }
    }
}
----------------------------------------

private static int [] merge (int [] left, int [] right) {
    int [] merged = new int [left.length + right.length];
    int lengthLeft = left.length;
    int lengthRight = right.length;
    while (lengthLeft > 0 && lengthRight > 0) {
        if (left [left.length - lengthLeft] < right [right.length - lengthRight]) {
            merged [merged.length - lengthLeft - lengthRight] = left [left.length - lengthLeft];
            lengthLeft --;
        } else {
            merged [merged.length - lengthLeft - lengthRight] = right [right.length - lengthRight];
            lengthRight --;
        }
    }
    while (lengthLeft > 0) {
        merged [merged.length - lengthLeft] = left [left.length - lengthLeft];
        lengthLeft --;
    }
    while (lengthRight > 0) {
        merged [merged.length - lengthRight] = right [right.length - lengthRight];
        lengthRight --;
    }
    return merged;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_13684411_19_50
1735863_20749974_15_51
Title: Merge Sort Java 
----------------------------------------

private void merge (int [] arr, int lo, int mid, int hi) {
    int [] left = new int [(mid - lo) + 2];
    int [] right = new int [hi - mid + 1];
    System.arraycopy (arr, lo, left, 0, left.length - 1);
    System.arraycopy (arr, mid + 1, right, 0, left.length - 1);
    left [left.length - 1] = 100;
    right [right.length - 1] = 100;
    int i = 0;
    int j = 0;
    for (; lo <= hi; lo ++) {
        if (left [i] <= right [j]) {
            arr [lo] = left [i];
            i ++;
        } else {
            arr [lo] = right [j];
            j ++;
        }
    }
}
----------------------------------------

static void merge (int arr [], int p, int q, int r) {
    int temp1 [], temp2 [];
    temp1 = new int [q - p + 1];
    temp2 = new int [r - q];
    for (int i = 0;
    i < (q - p + 1); i ++) {
        temp1 [i] = arr [p + i];
    }
    for (int j = 0;
    j < (r - q); j ++) {
        temp2 [j] = arr [q + j + 1];
    }
    int i = 0, j = 0;
    for (int k = p;
    k <= r; k ++) {
        if (i != temp1.length && (j == temp2.length || temp1 [i] < temp2 [j])) {
            arr [k] = temp1 [i];
            i ++;
        } else {
            arr [k] = temp2 [j];
            j ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_13684411_19_50
1735863_32278043_14_55
Title: Merge Sort Java 
----------------------------------------

private void merge (int [] arr, int lo, int mid, int hi) {
    int [] left = new int [(mid - lo) + 2];
    int [] right = new int [hi - mid + 1];
    System.arraycopy (arr, lo, left, 0, left.length - 1);
    System.arraycopy (arr, mid + 1, right, 0, left.length - 1);
    left [left.length - 1] = 100;
    right [right.length - 1] = 100;
    int i = 0;
    int j = 0;
    for (; lo <= hi; lo ++) {
        if (left [i] <= right [j]) {
            arr [lo] = left [i];
            i ++;
        } else {
            arr [lo] = right [j];
            j ++;
        }
    }
}
----------------------------------------

public void merge (int a [], int low, int mid, int high) {
    int n1 = mid - low + 1;
    int n2 = high - mid;
    int a1 [] = new int [n1 + 1];
    int a2 [] = new int [n2 + 1];
    int lowRange = low;
    for (int i = 0;
    i < n1; i ++) {
        a1 [i] = a [lowRange];
        lowRange ++;
    }
    for (int j = 0;
    j < n2; j ++) {
        a2 [j] = a [mid + j + 1];
    }
    a1 [n1] = Integer.MAX_VALUE;
    a2 [n2] = Integer.MAX_VALUE;
    int i = 0;
    int j = 0;
    int k = low;
    for (k = low; k <= high; k ++) {
        if (a1 [i] >= a2 [j]) {
            a [k] = a2 [j];
            j ++;
        } else {
            a [k] = a1 [i];
            i ++;
        }
    }
    if (a2.length >= a1.length) {
        for (int ab = k;
        ab < a2.length; ab ++) {
            a [k] = a2 [ab];
            k ++;
        }
    } else if (a1.length >= a2.length) {
        for (int ab = k;
        ab < a1.length; ab ++) {
            a [k] = a1 [ab];
            k ++;
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_18474190_17_39
1735863_20749974_15_51
Title: Merge Sort Java 
----------------------------------------

private static int [] merge (int [] left, int [] right) {
    int [] merged = new int [left.length + right.length];
    int lengthLeft = left.length;
    int lengthRight = right.length;
    while (lengthLeft > 0 && lengthRight > 0) {
        if (left [left.length - lengthLeft] < right [right.length - lengthRight]) {
            merged [merged.length - lengthLeft - lengthRight] = left [left.length - lengthLeft];
            lengthLeft --;
        } else {
            merged [merged.length - lengthLeft - lengthRight] = right [right.length - lengthRight];
            lengthRight --;
        }
    }
    while (lengthLeft > 0) {
        merged [merged.length - lengthLeft] = left [left.length - lengthLeft];
        lengthLeft --;
    }
    while (lengthRight > 0) {
        merged [merged.length - lengthRight] = right [right.length - lengthRight];
        lengthRight --;
    }
    return merged;
}
----------------------------------------

static void merge (int arr [], int p, int q, int r) {
    int temp1 [], temp2 [];
    temp1 = new int [q - p + 1];
    temp2 = new int [r - q];
    for (int i = 0;
    i < (q - p + 1); i ++) {
        temp1 [i] = arr [p + i];
    }
    for (int j = 0;
    j < (r - q); j ++) {
        temp2 [j] = arr [q + j + 1];
    }
    int i = 0, j = 0;
    for (int k = p;
    k <= r; k ++) {
        if (i != temp1.length && (j == temp2.length || temp1 [i] < temp2 [j])) {
            arr [k] = temp1 [i];
            i ++;
        } else {
            arr [k] = temp2 [j];
            j ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_18474190_17_39
1735863_32278043_14_55
Title: Merge Sort Java 
----------------------------------------

private static int [] merge (int [] left, int [] right) {
    int [] merged = new int [left.length + right.length];
    int lengthLeft = left.length;
    int lengthRight = right.length;
    while (lengthLeft > 0 && lengthRight > 0) {
        if (left [left.length - lengthLeft] < right [right.length - lengthRight]) {
            merged [merged.length - lengthLeft - lengthRight] = left [left.length - lengthLeft];
            lengthLeft --;
        } else {
            merged [merged.length - lengthLeft - lengthRight] = right [right.length - lengthRight];
            lengthRight --;
        }
    }
    while (lengthLeft > 0) {
        merged [merged.length - lengthLeft] = left [left.length - lengthLeft];
        lengthLeft --;
    }
    while (lengthRight > 0) {
        merged [merged.length - lengthRight] = right [right.length - lengthRight];
        lengthRight --;
    }
    return merged;
}
----------------------------------------

public void merge (int a [], int low, int mid, int high) {
    int n1 = mid - low + 1;
    int n2 = high - mid;
    int a1 [] = new int [n1 + 1];
    int a2 [] = new int [n2 + 1];
    int lowRange = low;
    for (int i = 0;
    i < n1; i ++) {
        a1 [i] = a [lowRange];
        lowRange ++;
    }
    for (int j = 0;
    j < n2; j ++) {
        a2 [j] = a [mid + j + 1];
    }
    a1 [n1] = Integer.MAX_VALUE;
    a2 [n2] = Integer.MAX_VALUE;
    int i = 0;
    int j = 0;
    int k = low;
    for (k = low; k <= high; k ++) {
        if (a1 [i] >= a2 [j]) {
            a [k] = a2 [j];
            j ++;
        } else {
            a [k] = a1 [i];
            i ++;
        }
    }
    if (a2.length >= a1.length) {
        for (int ab = k;
        ab < a2.length; ab ++) {
            a [k] = a2 [ab];
            k ++;
        }
    } else if (a1.length >= a2.length) {
        for (int ab = k;
        ab < a1.length; ab ++) {
            a [k] = a1 [ab];
            k ++;
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_18474190_1_15
1735863_20749974_1_13
Title: Merge Sort Java 
----------------------------------------

private static int [] mergeSort (int [] input) {
    if (input.length == 1) return input;

    int length = input.length / 2;
    int [] left = new int [length];
    int [] right = new int [input.length - length];
    for (int i = 0;
    i < length; i ++) left [i] = input [i];

    for (int i = length;
    i < input.length; i ++) right [i - length] = input [i];

    return merge (mergeSort (left), mergeSort (right));
}
----------------------------------------

static void mergeSort (int arr [], int p, int r) {
    if (p < r) {
        System.out.println ("Pass " + k ++);
        int q = (p + r) / 2;
        mergeSort (arr, p, q);
        mergeSort (arr, q + 1, r);
        merge (arr, p, q, r);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1735863_20749974_15_51
1735863_32278043_14_55
Title: Merge Sort Java 
----------------------------------------

static void merge (int arr [], int p, int q, int r) {
    int temp1 [], temp2 [];
    temp1 = new int [q - p + 1];
    temp2 = new int [r - q];
    for (int i = 0;
    i < (q - p + 1); i ++) {
        temp1 [i] = arr [p + i];
    }
    for (int j = 0;
    j < (r - q); j ++) {
        temp2 [j] = arr [q + j + 1];
    }
    int i = 0, j = 0;
    for (int k = p;
    k <= r; k ++) {
        if (i != temp1.length && (j == temp2.length || temp1 [i] < temp2 [j])) {
            arr [k] = temp1 [i];
            i ++;
        } else {
            arr [k] = temp2 [j];
            j ++;
        }
    }
}
----------------------------------------

public void merge (int a [], int low, int mid, int high) {
    int n1 = mid - low + 1;
    int n2 = high - mid;
    int a1 [] = new int [n1 + 1];
    int a2 [] = new int [n2 + 1];
    int lowRange = low;
    for (int i = 0;
    i < n1; i ++) {
        a1 [i] = a [lowRange];
        lowRange ++;
    }
    for (int j = 0;
    j < n2; j ++) {
        a2 [j] = a [mid + j + 1];
    }
    a1 [n1] = Integer.MAX_VALUE;
    a2 [n2] = Integer.MAX_VALUE;
    int i = 0;
    int j = 0;
    int k = low;
    for (k = low; k <= high; k ++) {
        if (a1 [i] >= a2 [j]) {
            a [k] = a2 [j];
            j ++;
        } else {
            a [k] = a1 [i];
            i ++;
        }
    }
    if (a2.length >= a1.length) {
        for (int ab = k;
        ab < a2.length; ab ++) {
            a [k] = a2 [ab];
            k ++;
        }
    } else if (a1.length >= a2.length) {
        for (int ab = k;
        ab < a1.length; ab ++) {
            a [k] = a1 [ab];
            k ++;
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17358806_17509923_3_21
17358806_17527661_3_17
Title: Fixing Binary search bug from Bentley's book (programming pearls: writing correct programs) 
----------------------------------------

static int search (int [] A, int K) {
    int l = 0;
    int u = A.length - 1;
    int m;
    while (l <= u) {
        m = (u - l) / 2 + l;
        if (A [m] < K) l = m + 1;
        else if (A [m] == K) return m;
        else u = m - 1;

    }
    return - 1;
}
----------------------------------------

static int search (int [] A, int K) {
    int l = - 1;
    int u = A.length;
    int m;
    while (l + 1 < u) {
        m = l + (u - l) / 2;
        if (A [m] < K) {
            l = m;
        } else {
            u = m;
        }
    }
    if ((u == A.length) || (A [u] != K)) return - 1;

    return u;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17367192_17367349_1_31
17367192_17368559_1_17
Title: Modifying else if and | operators 
----------------------------------------

public String getMonthName () {
    switch (this.monthNumber) {
        case 1 :
            monthString = "January";
            break;
        case 2 :
            monthString = "February";
            break;
        case 3 :
            monthString = "March";
            break;
        case 4 :
            monthString = "April";
            break;
        case 5 :
            monthString = "May";
            break;
        case 6 :
            monthString = "June";
            break;
        case 7 :
            monthString = "July";
            break;
        case 8 :
            monthString = "August";
            break;
        case 9 :
            monthString = "September";
            break;
        case 10 :
            monthString = "October";
            break;
        case 11 :
            monthString = "November";
            break;
        case 12 :
            monthString = "December";
            break;
        default :
            monthString = "Invalid month";
            break;
    }
    return monthString;
}
----------------------------------------

public String getMonthName () {
    switch (monthNumber) {
        case 1 :
            return "January";
        case 2 :
            return "February";
        case 3 :
            return "March";
        case 4 :
            return "April";
        case 5 :
            return "May";
        case 6 :
            return "June";
        case 7 :
            return "July";
        case 8 :
            return "August";
        case 9 :
            return "September";
        case 10 :
            return "October";
        case 11 :
            return "November";
        case 12 :
            return "December";
        default :
            return "Invalid month";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17377937_17377958_66_77
17377937_17377958_81_93
Title: How to create and delete JTextArea's dynamically 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JTextArea ta = new JTextArea (10, 10);
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    gbc.gridwidth = GridBagConstraints.REMAINDER;
    fields.add (new JScrollPane (ta), gbc);
    ta.addFocusListener (focusHandler);
    fields.revalidate ();
    fields.repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (lastFocused != null) {
        Container scollPane = lastFocused.getParent ().getParent ();
        Container parent = scollPane.getParent ();
        parent.remove (scollPane);
        lastFocused = null;
        parent.revalidate ();
        parent.repaint ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17378471_17378718_5_31
17378471_23431680_3_12
Title: program logic of printing the prime numbers 
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    int n, i, j, count = 1;
    System.out.print ("How many Numbers ? : ");
    n = input.nextInt ();
    for (j = 1; count <= n; j ++) {
        if (j == 1 || j == 2) {
            System.out.println (j);
            count ++;
            continue;
        }
        for (i = 2; i <= j / 2; i ++) {
            if (j % i == 0) break;
            else if (i == j / 2 && j % i != 0) {
                System.out.println (j);
                count ++;
            }

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList a = new ArrayList ();
    for (int i = 1;
    i <= 100; ++ i) {
        if (isPrime (i)) a.add (i);

    }
    System.out.println ("List : " + a);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17379020_33089123_2_10
17379020_46790601_1_16
Title: How to find the largest power of 2 less than the given number 
----------------------------------------

public int largestPowerOf2 (int n) {
    if ((n & n - 1) == 0) {
        n --;
    }
    while ((n & n - 1) != 0) {
        n = n & n - 1;
    }
    return n;
}
----------------------------------------

public long largestPowerOf2 (long n) {
    if ((num & (num - 1)) == 0) {
        return num>> 1;
    }
    for (int bits = 63;
    bits >= 0; bits --) {
        if ((num & (1 << bits)) != 0) {
            return (1 << bits);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17392704_17392750_3_23
17392704_17392916_1_15
Title: Search for key-value pair in string 
----------------------------------------

public static void main (String [] args) {
    String input = "Response: Success\n" + "Message: Extension Status\n" + "Exten: 1234\n" + "Context: from-sip\n" + "Hint: DS/5678\n" + "Status: 9";
    String exten = null;
    String status = null;
    Matcher m = Pattern.compile ("^Exten: (.+?)$", Pattern.MULTILINE).matcher (input);
    if (m.find ()) {
        exten = m.group (1);
    }
    Matcher m2 = Pattern.compile ("^Status: (.+?)$", Pattern.MULTILINE).matcher (input);
    if (m2.find ()) {
        status = m2.group (1);
    }
    System.out.println ("Exten: " + exten);
    System.out.println ("Status: " + status);
}
----------------------------------------

public static void main (String args []) {
    String read = "Response: Success\n" + "Message: Extension Status\n" + "Exten: 1234\n" + "Context: from-sip\n" + "Hint: DS/5678\n" + "Status: 9";
    String [] arr;
    arr = read.split ("\n");
    for (String i : arr) {
        if (i.contains ("Exten:") || i.contains ("Status:")) {
            System.out.println (i.split (" ") [1]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17412392_17420334_2_13
17412392_17423556_2_17
Title: Guice - How to bind a type determined in a program runtime? 
----------------------------------------

public static void main (String [] args) {
    final Holder holder = new Holder ("abcd", (Class < Object >) (Class < ? >) String.class);
    Injector injector = Guice.createInjector (new AbstractModule () {
        @Override
        protected void configure () {
            bind (holder.type).toInstance (holder.instance);
        }}

    );
    System.out.println (injector.getInstance (String.class));
}
----------------------------------------

public static void main (String [] args) throws ClassNotFoundException, IOException {
    final ConfigReader config = new ConfigReader ();
    final ConfigObject configObject = config.read ();
    final Injector injector = Guice.createInjector (new AbstractModule () {
        @Override
        protected void configure () {
            bind (configObject.type).toInstance (configObject.instance);
        }}

    );
    final DummyParams instance = injector.getInstance (DummyParams.class);
    System.out.println ("DummyParams' stringParam: " + instance.stringParam + "\nDummyParams' integerParam: " + instance.integerParam + "\nDummyParams' booleanParam: " + instance.booleanParam);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17415588_17416087_4_24
17415588_26020301_4_22
Title: Creating a Java program about leap years 
----------------------------------------

public static void main (String [] args) {
    Scanner S = new Scanner (System.in);
    System.out.println ("Please enter a year");
    int year = S.nextInt ();
    if (year > 1582) {
        if (((year % 4) == 0) && ((year % 100) == 0) && ((year % 400) == 0)) {
            System.out.print ("That year was a leap year");
        } else if (((year % 4) == 0) && ((year % 100) == 0) && ((year % 400) != 0)) {
            System.out.println ("This year was not a leap year");
        } else if ((year % 4) == 0) {
            System.out.print ("This year was a leap year");
        } else System.out.print ("This year was not a leap year");

    } else System.out.print ("Please enter a year after 1582");

}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    int year;
    boolean check;
    do {
        System.out.print ("Input year (greater than 1582): ");
        year = s.nextInt ();
    } while (year < 1582);
    check = (year % 400 == 0) || (year % 4 == 0 && (year % 100 != 0));
    System.out.format ("Is year %d a leap year: %b\n", year, check);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17420392_17420543_1_17
17420392_17420806_1_50
Title: How to change the text of a label when a page is reloaded in JSP page? 
----------------------------------------

protected void service (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String message = "";
    try {
        message = "Successful";
    } catch (Exception e) {
        e.printStackTrace ();
        message = "Failure";
    }
    response.getWriter ().println (message);
}
----------------------------------------

protected void service (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String username = null;
    StringBuilder statusMsg = new StringBuilder ();
    try {
        connect ();
        int result = - 1;
        PreparedStatement checkDB = (PreparedStatement) con.prepareStatement ("UPDATE users set username=?,password=?,name=?,surname=?,phone=?," + "address=?,email=? where username=?");
        username = request.getParameter ("tUserName");
        request.setAttribute ("username", username);
        checkDB.setString (8, username);
        checkDB.setString (1, username);
        checkDB.setString (2, request.getParameter ("tPassword"));
        checkDB.setString (3, request.getParameter ("tName"));
        checkDB.setString (4, request.getParameter ("tSurName"));
        checkDB.setString (5, request.getParameter ("tPhone"));
        checkDB.setString (6, request.getParameter ("tAddress"));
        checkDB.setString (7, request.getParameter ("tEmail"));
        result = checkDB.executeUpdate ();
        if (result > 0) statusMsg.append ("was successful!");

    } catch (Exception e) {
        e.printStackTrace ();
        statusMsg.append ("failed with the error: ").append (e.getMessage ());
    }
    request.setAttribute ("statusMsg", statusMsg.toString ());
    RequestDispatcher rd = response.getRequestDispatcher ("SignupStatus.jsp");
    rd.forward (request, response);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17440795_17440844_1_18
17440795_17440933_1_17
Title: Send a string instead of byte through socket in Java 
----------------------------------------

public void sendToPort () throws IOException {
    DataOutputStream dataOutputStream = null;
    Socket socket = null;
    try {
        socket = new Socket ("ip address", 4014);
        dataOutputStream = new DataOutputStream (socket.getOutputStream ());
        dataOutputStream.writeUTF ("2");
    } catch (UnknownHostException e) {
        System.err.print (e);
    } finally {
        if (socket != null) {
            socket.close ();
        }
        if (dataOutputStream != null) {
            dataOutputStream.close ();
        }
    }
}
----------------------------------------

public void sendToPort () throws IOException {
    Socket socket = null;
    OutputStreamWriter osw;
    String str = "Hello World";
    try {
        socket = new Socket ("ip address", 4014);
        osw = new OutputStreamWriter (socket.getOutputStream (), "UTF-8");
        osw.write (str, 0, str.length ());
    } catch (IOException e) {
        System.err.print (e);
    } catch (UnknownHostException e) {
        System.err.print (e);
    } finally {
        socket.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17440795_17440844_1_18
17440795_22269274_1_16
Title: Send a string instead of byte through socket in Java 
----------------------------------------

public void sendToPort () throws IOException {
    DataOutputStream dataOutputStream = null;
    Socket socket = null;
    try {
        socket = new Socket ("ip address", 4014);
        dataOutputStream = new DataOutputStream (socket.getOutputStream ());
        dataOutputStream.writeUTF ("2");
    } catch (UnknownHostException e) {
        System.err.print (e);
    } finally {
        if (socket != null) {
            socket.close ();
        }
        if (dataOutputStream != null) {
            dataOutputStream.close ();
        }
    }
}
----------------------------------------

public void sendToPort () throws IOException {
    Socket socket = null;
    OutputStreamWriter osw;
    String str = "Hello World";
    try {
        socket = new Socket ("ip address", 4014);
        osw = new OutputStreamWriter (socket.getOutputStream (), 'UTF-8');
        osw.write (str, 0, str.length ());
        osw.flush ();
    } catch (IOException e) {
        System.err.print (e);
    } finally {
        socket.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17440795_17440933_1_17
17440795_22269274_1_16
Title: Send a string instead of byte through socket in Java 
----------------------------------------

public void sendToPort () throws IOException {
    Socket socket = null;
    OutputStreamWriter osw;
    String str = "Hello World";
    try {
        socket = new Socket ("ip address", 4014);
        osw = new OutputStreamWriter (socket.getOutputStream (), "UTF-8");
        osw.write (str, 0, str.length ());
    } catch (IOException e) {
        System.err.print (e);
    } catch (UnknownHostException e) {
        System.err.print (e);
    } finally {
        socket.close ();
    }
}
----------------------------------------

public void sendToPort () throws IOException {
    Socket socket = null;
    OutputStreamWriter osw;
    String str = "Hello World";
    try {
        socket = new Socket ("ip address", 4014);
        osw = new OutputStreamWriter (socket.getOutputStream (), 'UTF-8');
        osw.write (str, 0, str.length ());
        osw.flush ();
    } catch (IOException e) {
        System.err.print (e);
    } finally {
        socket.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17441022_17441216_19_30
17441022_17441216_44_54
Title: String.format not applicable for the arguments in a timer application 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (mytimer != null && mytimer.isRunning ()) {
        mytimer.stop ();
        elapsedSeconds = 0;
        timerl.setText ("Exam Terminated");
    } else {
        mytimer = new Timer (1000, new TimerListener ());
        mytimer.start ();
        String t = String.format (ss, total);
        timerl.setText (t);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    elapsedSeconds ++;
    if (elapsedSeconds == total) {
        mytimer.stop ();
        elapsedSeconds = 0;
        timerl.setText ("Time Up");
    } else {
        String t = String.format (ss, total - elapsedSeconds);
        timerl.setText (t);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17453456_17453557_1_13
17453456_17453621_1_11
Title: Find all substrings of a string - StringIndexOutOfBoundsException 
----------------------------------------

public String getSubstrings () {
    String str = "", substr = "";
    for (int i = 0;
    i < word.length (); i ++) {
        for (int j = 0;
        i + j <= word.length (); j ++) {
            substr = word.substring (j, i + j);
            if ("".equals (substr)) continue;

            str += substr;
            str += "\n";
        }
    }
    return str + word;
}
----------------------------------------

public String getSubstrings (String word) {
    StringBuilder sub = new StringBuilder ();
    for (int i = 0;
    i < word.length (); i ++) {
        for (int j = 1;
        j <= word.length () - i; j ++) {
            sub.append (word.substring (i, i + j)).append ("\n");
        }
    }
    return sub.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17453664_17454132_1_28
17453664_17454285_1_14
Title: Bitwise wise operations 
----------------------------------------

public static void main (String [] args) throws IOException {
    FileOutputStream output = new FileOutputStream ("C:\\temp\\t.dat");
    String inp = "1100110000110011";
    byte [] ar = new byte [1];
    int b = 0;
    int j = 0;
    int i = 0;
    while (i < inp.length ()) {
        if (inp.charAt (i) == '1') b |= 1 << (7 - j);

        j ++;
        i ++;
        if (i % 8 == 0) {
            ar [0] = (byte) b;
            output.write (ar);
            j = 0;
            b = 0;
        }
    }
    output.close ();
}
----------------------------------------

public static void main (String [] args) {
    String binaryString = "1111111100000010";
    byte currentByte = 0;
    for (int i = 0, j = 0;
    i < binaryString.length (); i ++, j ++) {
        if (i != 0 && i % 8 == 0 || i == binaryString.length () - 1) {
            System.out.println (currentByte);
            currentByte = 0;
            j = 0;
        }
        if (binaryString.charAt (i) == '1') {
            currentByte |= 1 << 7 - j;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17454166_18166790_19_34
17454166_28039571_44_64
Title: Android Development RSS Feed does not work 
----------------------------------------

private void resetDisplay (String title, String date, String imageUrl, String description) {
    TextView titleView = (TextView) findViewById (R.id.imageTitle);
    titleView.setText (title);
    TextView dateView = (TextView) findViewById (R.id.imageDate);
    dateView.setText (date);
    ImageView imageView = (ImageView) findViewById (R.id.imageDisplay);
    Bitmap image = null;
    imageView.setImageBitmap (image);
    TextView descriptionView = (TextView) findViewById (R.id.imageDescription);
    descriptionView.setText (description);
}
----------------------------------------

private void resetDisplay (String title, String date, Bitmap image, String description) {
    try {
        TextView titleView = (TextView) findViewById (R.id.imageTitle);
        titleView.setText (title);
        TextView dateView = (TextView) findViewById (R.id.imageDate);
        dateView.setText (date);
        ImageView imageView = (ImageView) findViewById (R.id.imageDisplay);
        imageView.setImageBitmap (image);
        TextView descriptionView = (TextView) findViewById (R.id.imageDescription);
        descriptionView.setText (description);
    } catch (Exception e) {
        TextView titleView = (TextView) findViewById (R.id.imageTitle);
        titleView.setText (e.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17473513_17473610_1_17
17473513_39025902_1_16
Title: Anagram java code 
----------------------------------------

public static boolean isAnagram (String word, String anagram) {
    if (word.length () != anagram.length ()) {
        return false;
    }
    char [] chars = word.toCharArray ();
    for (char c : chars) {
        int index = anagram.indexOf (c);
        if (index != - 1) {
            anagram = anagram.substring (0, index) + anagram.substring (index + 1, anagram.length ());
        } else {
            return false;
        }
    }
    return anagram.isEmpty ();
}
----------------------------------------

public static boolean isAnagram (String s, String t) {
    if (s == null || t == null) {
        return false;
    }
    if (s.isEmpty () && t.isEmpty ()) {
        return true;
    }
    char [] sArray = s.toCharArray ();
    char [] tArray = t.toCharArray ();
    Arrays.sort (sArray);
    Arrays.sort (tArray);
    return Arrays.equals (sArray, tArray);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17473513_17473610_1_17
17473513_44033673_1_12
Title: Anagram java code 
----------------------------------------

public static boolean isAnagram (String word, String anagram) {
    if (word.length () != anagram.length ()) {
        return false;
    }
    char [] chars = word.toCharArray ();
    for (char c : chars) {
        int index = anagram.indexOf (c);
        if (index != - 1) {
            anagram = anagram.substring (0, index) + anagram.substring (index + 1, anagram.length ());
        } else {
            return false;
        }
    }
    return anagram.isEmpty ();
}
----------------------------------------

public static void isAnagram (String s1, String s2) {
    char [] c1 = s1.toLowerCase ().toCharArray ();
    char [] c2 = s2.toLowerCase ().toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    if (Arrays.equals (c1, c2)) System.out.println ("s1 is anagram of s2");
    else System.out.println ("Strings are not anagram");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17473513_39025902_1_16
17473513_44033673_1_12
Title: Anagram java code 
----------------------------------------

public static boolean isAnagram (String s, String t) {
    if (s == null || t == null) {
        return false;
    }
    if (s.isEmpty () && t.isEmpty ()) {
        return true;
    }
    char [] sArray = s.toCharArray ();
    char [] tArray = t.toCharArray ();
    Arrays.sort (sArray);
    Arrays.sort (tArray);
    return Arrays.equals (sArray, tArray);
}
----------------------------------------

public static void isAnagram (String s1, String s2) {
    char [] c1 = s1.toLowerCase ().toCharArray ();
    char [] c2 = s2.toLowerCase ().toCharArray ();
    Arrays.sort (c1);
    Arrays.sort (c2);
    if (Arrays.equals (c1, c2)) System.out.println ("s1 is anagram of s2");
    else System.out.println ("Strings are not anagram");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17476490_17476629_1_28
17476490_17479541_5_23
Title: compare list and array 
----------------------------------------

public static void main (String [] args) {
    List < String > l = new ArrayList < String > ();
    l.add ("test");
    l.add ("b");
    String v = "";
    String s = "";
    String [] arr = {"test", "c", "b"};
    int pointer = 0;
    for (int i = 0;
    i < l.size (); i ++) {
        for (; pointer < arr.length;) {
            if (l.get (i).equals (arr [pointer])) {
                s = i + "";
                v = v + s + ",";
                pointer ++;
                break;
            } else {
                s = arr [i];
            }
            pointer ++;
            v = v + s + ",";
        }
    }
    System.out.println (v);
}
----------------------------------------

public static void main (final String [] args) {
    final List < String > listToSeach = new ArrayList < String > ();
    listToSeach.add ("test");
    listToSeach.add ("b");
    final String [] arrayElementsToFind = {"test", "c", "b"};
    final StringBuilder output = new StringBuilder ();
    for (final String string : arrayElementsToFind) {
        final int firstIndex = findFirstIndex (listToSeach, string);
        if (firstIndex > - 1) {
            output.append (firstIndex);
        } else {
            output.append (string);
        }
        output.append (", ");
    }
    System.out.println (output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1748183_18228443_19_39
1748183_18228443_1_17
Title: Download attachments using Java Mail 
----------------------------------------

private List < InputStream > getAttachments (BodyPart part) throws Exception {
    List < InputStream > result = new ArrayList < InputStream > ();
    Object content = part.getContent ();
    if (content instanceof InputStream || content instanceof String) {
        if (Part.ATTACHMENT.equalsIgnoreCase (part.getDisposition ()) || StringUtils.isNotBlank (part.getFileName ())) {
            result.add (part.getInputStream ());
            return result;
        } else {
            return new ArrayList < InputStream > ();
        }
    }
    if (content instanceof Multipart) {
        Multipart multipart = (Multipart) content;
        for (int i = 0;
        i < multipart.getCount (); i ++) {
            BodyPart bodyPart = multipart.getBodyPart (i);
            result.addAll (getAttachments (bodyPart));
        }
    }
    return result;
}
----------------------------------------

public List < InputStream > getAttachments (Message message) throws Exception {
    Object content = message.getContent ();
    if (content instanceof String) return null;

    if (content instanceof Multipart) {
        Multipart multipart = (Multipart) content;
        List < InputStream > result = new ArrayList < InputStream > ();
        for (int i = 0;
        i < multipart.getCount (); i ++) {
            result.addAll (getAttachments (multipart.getBodyPart (i)));
        }
        return result;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1748183_32348830_1_23
1748183_32348830_25_37
Title: Download attachments using Java Mail 
----------------------------------------

private static void attachments (final BodyPart body, final BiConsumer < String, InputStream > consumer) throws MessagingException, IOException {
    final Multipart content;
    try {
        content = (Multipart) body.getContent ();
        for (int i = 0;
        i < content.getCount (); i ++) {
            attachments (content.getBodyPart (i), consumer);
        }
        return;
    } catch (final ClassCastException cce) {
    }
    if (! Part.ATTACHMENT.equalsIgnoreCase (body.getDisposition ())) {
        return;
    }
    final String name = body.getFileName ();
    if (name == null || name.trim ().isEmpty ()) {
        return;
    }
    try (final InputStream stream = body.getInputStream ()) {
        consumer.accept (name, stream);
    }
}
----------------------------------------

public static void attachments (final Message message, final BiConsumer < String, InputStream > consumer) throws IOException, MessagingException {
    final Multipart content;
    try {
        content = (Multipart) message.getContent ();
    } catch (final ClassCastException cce) {
        return;
    }
    for (int i = 0;
    i < content.getCount (); i ++) {
        attachments (content.getBodyPart (i), consumer);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17488501_17488575_1_15
17488501_17488748_15_34
Title: Updating Thread progress on the Command Line 
----------------------------------------

@Override
public void run () {
    for (int i = 0;
    i < 1000000000; i ++) {
        try {
            Thread.sleep (10);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        count = i;
        if (i % 100 == 0) {
            echoCount ();
        }
    }
}
----------------------------------------

public void run () {
    progressTimer = new Timer (1000, new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            echoCount ();
        }}

    );
    progressTimer.setRepeats (true);
    progressTimer.start ();
    for (double x = 0;
    x < 1000000000; x ++) {
        try {
            Thread.sleep (10);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        count = x;
    }
    progressTimer.stop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17492024_17492101_1_10
17492024_17492335_1_14
Title: Gets the index of the first String that starts with the target - give wrong output 
----------------------------------------

public int getIndex (Iterable < String > elements, String target) {
    int index = 0;
    for (String element : elements) {
        if (element.startsWith (target)) {
            return index;
        }
        index ++;
    }
    return - 1;
}
----------------------------------------

public int getIndex (ArrayList < String > text, String target) {
    int index = - 1;
    for (int i = 0;
    index == - 1 && i < text.size (); i ++) {
        if (text.get (i).startsWith (target)) {
            index = i;
        }
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17492024_17492315_1_16
17492024_17492335_1_14
Title: Gets the index of the first String that starts with the target - give wrong output 
----------------------------------------

public int getIndex (ArrayList < String > text, String target) {
    int i = 0;
    for (String s : text) {
        if (s.startsWith (target)) {
            return i;
        }
        i ++;
    }
    return - 1;
}
----------------------------------------

public int getIndex (ArrayList < String > text, String target) {
    int index = - 1;
    for (int i = 0;
    index == - 1 && i < text.size (); i ++) {
        if (text.get (i).startsWith (target)) {
            index = i;
        }
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17493055_17493279_1_46
17493055_17494001_1_29
Title: Array of 20 rolls of one die in java 
----------------------------------------

public void run () {
    Random generator = new Random ();
    ArrayList < Integer > a = new ArrayList < Integer > ();
    for (int i = 0;
    i < 21; i ++) {
        int die = generator.nextInt (6) + 1;
        a.add (die);
    }
    HashMap < Integer, Integer > repeats = new HashMap < Integer, Integer > ();
    int index = 0;
    repeats.put (index, 1);
    for (int i = 1;
    i < a.size (); i ++) {
        if (a.get (i) == a.get (index)) {
            repeats.put (index, repeats.get (index) + 1);
        } else {
            repeats.put (i, 1);
            index = i;
        }
    }
    int max = 0;
    int startIndex = 0;
    for (Integer i : repeats.keySet ()) {
        if (repeats.get (i) > max) {
            max = repeats.get (i);
            startIndex = i;
        }
    }
    for (int i = 0;
    i < a.size (); i ++) {
        if (i == startIndex) System.out.print ("(");

        System.out.print (a.get (i));
        if (i == startIndex + max) System.out.print (")");

    }
}
----------------------------------------

public void run () {
    Random generator = new Random ();
    int [] a = new int [20];
    int biggerSequence = 1;
    int biggerSequenceEndIndex = 1;
    int currentSequence = 1;
    int previous = - 1;
    for (int i = 0;
    i < 20; i ++) {
        int die = generator.nextInt (6) + 1;
        a [i] = die;
        if (die == previous) {
            currentSequence ++;
            if (currentSequence > biggerSequence) {
                biggerSequence = currentSequence;
                biggerSequenceEndIndex = i + 1;
            }
        } else {
            previous = die;
            currentSequence = 1;
        }
    }
    for (int i = 0;
    i < a.length; i ++) {
        if (i == biggerSequenceEndIndex - biggerSequence) {
            System.out.print ("(");
        }
        System.out.print (a [i]);
        if (i + 1 == biggerSequenceEndIndex) {
            System.out.print (")");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17509139_17509152_3_21
17509139_17509226_1_20
Title: Trying to print numbers in a fashion but couldn't 
----------------------------------------

public void printseries (int a, int b) {
    for (int i = 1;
    i <= 2 * b;) {
        int k = 0;
        k = a * i;
        i *= 2;
        for (int j = 1;
        j < i; j *= 2) {
            if (j == 1) System.out.println (k);
            else {
                k ++;
                System.out.print (k + " ");
            }
        }
    }
}
----------------------------------------

public void printseries (int a, int b) {
    for (int i = 1;
    i <= 2 * b;) {
        int k = 0;
        k = a * i;
        i *= 2;
        for (int j = 1;
        j <= i / 2; j ++) {
            if (j == 1) System.out.print (k);
            else {
                k ++;
                System.out.print (" " + k);
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17522768_17523339_1_18
17522768_17526590_1_25
Title: JavaScript alerts ???? for UTF-8 with spring? 
----------------------------------------

@RequestMapping (value = "<your path>", produces = "application/json; charset=utf-8")
public@ResponseBody
String sendMessage (@RequestParam
String intxnId,@RequestParam
String message) {
    String json = null;
    HashMap < String, String > result = new HashMap < String, String > ();
    result.put ("name", "test");
    result.put ("message", message);
    result.put ("time", "time");
    ObjectMapper map = new ObjectMapper ();
    if (! result.isEmpty ()) {
        try {
            json = map.writeValueAsString (result);
            System.out.println ("Send Message  :::::::: : " + json);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    return json;
}
----------------------------------------

@RequestMapping (value = "test.html", method = RequestMethod.POST, headers = "Accept=*", produces = "application/json; charset=utf-8")
public ResponseEntity < String > sendMessage (HttpSession session,@RequestParam
String intxnId,@RequestParam
String message, HttpServletRequest request, HttpServletResponse response) {
    System.out.println ("Send Message UTF-8 ----------------- " + message);
    String json = null;
    HashMap < String, String > result = new HashMap < String, String > ();
    result.put ("name", "test");
    result.put ("message", message);
    result.put ("time", "time");
    ObjectMapper map = new ObjectMapper ();
    if (! result.isEmpty ()) {
        try {
            json = map.writeValueAsString (result);
            System.out.println ("Send Message  :::::::: : " + json);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    HttpHeaders responseHeaders = new HttpHeaders ();
    responseHeaders.add ("Content-Type", "application/json; charset=utf-8");
    return new ResponseEntity < String > (json, responseHeaders, HttpStatus.CREATED);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17525757_17525794_1_10
17525757_17525891_1_15
Title: Recursion - Reverse LinkedList with void function return type 
----------------------------------------

static void reverse (List list, int p) {
    if (p == list.size () / 2) {
        return;
    }
    Object o1 = list.get (p);
    Object o2 = list.get (list.size () - p - 1);
    list.set (p, o2);
    list.set (list.size () - p - 1, o1);
    reverse (list, p + 1);
}
----------------------------------------

public static void reverse (Node previous, Node current) {
    if (current.next != null) {
        reverse (current, current.next);
    }
    if (previous == null) {
        current.next = null;
    } else {
        current.next = previous;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17525757_17525794_1_10
17525757_19339053_5_17
Title: Recursion - Reverse LinkedList with void function return type 
----------------------------------------

static void reverse (List list, int p) {
    if (p == list.size () / 2) {
        return;
    }
    Object o1 = list.get (p);
    Object o2 = list.get (list.size () - p - 1);
    list.set (p, o2);
    list.set (list.size () - p - 1, o1);
    reverse (list, p + 1);
}
----------------------------------------

private static ListElement reverse (ListElement previous, ListElement current) {
    ListElement newHead = null;
    if (current.getNext () != null) {
        newHead = reverse (current, current.getNext ());
    } else {
        newHead = current;
        newHead.setNext (previous);
    }
    current.setNext (previous);
    return newHead;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17525757_17525794_1_10
17525757_22947867_1_20
Title: Recursion - Reverse LinkedList with void function return type 
----------------------------------------

static void reverse (List list, int p) {
    if (p == list.size () / 2) {
        return;
    }
    Object o1 = list.get (p);
    Object o2 = list.get (list.size () - p - 1);
    list.set (p, o2);
    list.set (list.size () - p - 1, o1);
    reverse (list, p + 1);
}
----------------------------------------

public void reverse (Node previous, Node current) {
    if (current.next != null) {
        reverse (current, current.next);
    } else this.head = current;

    if (previous == null) {
        current.next = null;
        this.tail = current;
    } else {
        current.next = previous;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17525757_17525891_1_15
17525757_19339053_5_17
Title: Recursion - Reverse LinkedList with void function return type 
----------------------------------------

public static void reverse (Node previous, Node current) {
    if (current.next != null) {
        reverse (current, current.next);
    }
    if (previous == null) {
        current.next = null;
    } else {
        current.next = previous;
    }
}
----------------------------------------

private static ListElement reverse (ListElement previous, ListElement current) {
    ListElement newHead = null;
    if (current.getNext () != null) {
        newHead = reverse (current, current.getNext ());
    } else {
        newHead = current;
        newHead.setNext (previous);
    }
    current.setNext (previous);
    return newHead;
}
----------------------------------------
