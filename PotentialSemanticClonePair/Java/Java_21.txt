$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16273704_16273906_1_12
16273704_16273945_1_15
Title: Changing the direction of a point 
----------------------------------------

@Test
public void turnLeft () {
    Robot rob = new Robot (20, 20, Robot.SOUTH);
    rob.turnLeft;
    assertEquals ("E", rob.getDirection);
    rob.turnLeft;
    assertEquals ("N", rob.getDirection);
    rob.turnLeft;
    assertEquals ("W", rob.getDirection);
    rob.turnLeft;
    assertEquals ("S", rob.getDirection);
}
----------------------------------------

public void turnLeft () {
    if (d == NORTH) {
        d = WEST;
    } else if (d == WEST) {
        d = SOUTH;
    } else if (d == SOUTH) {
        d = EAST;
    } else if (d == EAST) {
        d = NORTH;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16276283_16276936_46_53
16276283_16277778_89_96
Title: JTextField is not editable in a JPopupMenu 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Main ().initUI ();
        }}

    );
}
----------------------------------------

public static void main (String args []) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            PopupSample popupSample = new PopupSample ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16279489_16280701_31_43
16279489_16280701_47_61
Title: "Multiple HttpExchanges back-to-back cleaning up from the first exchange using com.sun.net.httpserver.HttpServer" 
----------------------------------------

public void handle (HttpExchange he) throws IOException {
    System.out.println ("Handling 'register' HttpExchange");
    try (ObjectInputStream ois = new ObjectInputStream (he.getRequestBody ())) {
        System.out.println ("Processing request from user: " + ois.readUTF ());
    }
    he.sendResponseHeaders (200, 1);
    he.getResponseBody ().write (new byte [] {clientIdCounter ++});
    he.close ();
    System.out.println ("Registration complete!");
}
----------------------------------------

public void handle (HttpExchange he) throws IOException {
    System.out.println ("Handling 'registerFor' HttpExchange");
    try (ObjectInputStream ois = new ObjectInputStream (he.getRequestBody ())) {
        byte clientId = ois.readByte ();
        byte opCode = ois.readByte ();
        byte argument = ois.readByte ();
        System.out.println (String.format ("Received op request %d from client %d with argument %d", clientId, opCode, argument));
        he.sendResponseHeaders (200, 0);
    }
    he.close ();
    System.out.println ("Register-For complete!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16280790_16280880_1_10
16280790_16281086_1_10
Title: two array multipication in a method 
----------------------------------------

public static double compute (double [] grades, double [] percentage1) {
    double sum = 0;
    for (int i = 0;
    i < comp.length; i ++) {
        comp [i] = grades [i] * percentage1 [i];
        System.out.println ("Equivalent: " + comp [i]);
        sum += comp [i];
    }
    return sum;
}
----------------------------------------

public static double compute (double [] grades, double [] percentage1) {
    double comp;
    double sum;
    for (int i = 0;
    i < comp.length; i ++) {
        comp = grades [0] * percentage1 [1];
        System.out.println ("Equivalent: " + sum);
        sum = comp + comp;
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16294607_16295032_9_25
16294607_16295439_1_14
Title: Check network available in android 
----------------------------------------

public boolean isNetworkAvailable (Context context) {
    ConnectivityManager connectivity = (ConnectivityManager) context.getSystemService (Context.CONNECTIVITY_SERVICE);
    if (connectivity == null) {
        return false;
    } else {
        NetworkInfo [] info = connectivity.getAllNetworkInfo ();
        if (info != null) {
            for (int i = 0;
            i < info.length; i ++) {
                if (info [i].getState () == NetworkInfo.State.CONNECTED) {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean isNetworkAvailable (Context context) {
    if (context == null) {
        return false;
    }
    ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService (Context.CONNECTIVITY_SERVICE);
    try {
        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo ();
        if (activeNetworkInfo != null && activeNetworkInfo.isConnected ()) {
            return true;
        }
    } catch (Exception e) {
        AppLog.e (TAG, "isNetworkAvailable()", e.getMessage ());
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1629841_1650435_1_14
1629841_38916100_1_12
Title: How to JMockIt System.getenv(String)? 
----------------------------------------

@Test
public void mockSystemGetenvMethod () {
    new Expectations () {
        @Mocked ("getenv")
        System mockedSystem;

        {
            System.getenv ("envVar");
            returns (".");
        }

    }

    ;
    assertEquals (".", System.getenv ("envVar"));
}
----------------------------------------

@Test
public void mockSystemGetenvMethod () {
    new MockUp < System > () {
        @Mock
        public String getenv (final String string) {
            return "";
        }}

    ;
    assertEquals (".", System.getenv ("envVar"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16299405_16300207_1_16
16299405_16300281_1_17
Title: How to get all possible words? 
----------------------------------------

public List < String > findWords () {
    List < String > result = new ArrayList < String > ();
    if (this.isWord) result.add ("");

    for (int i = 0;
    i < R; i ++) if (next [i] != null) {
        List < String > childResult = next [i].findWords ();
        char letter = (char) (97 + i);
        for (String sufix : childResult) result.add ("" + letter + sufix);

    }

    return result;
}
----------------------------------------

public void findWords (String prefix, Node node) {
    if (node == null) return;

    if (node.isWord) System.out.println (prefix);

    for (int i = 0;
    i < R; i ++) {
        if (node.next [i] != null) {
            findWords (prefix + ('a' + i), node.next [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16304995_29486295_124_141
16304995_29486295_147_168
Title: Implement priority queue in elevator 
----------------------------------------

public void run () {
    while (true) {
        Elevator elevator = Elevator.getInstance ();
        int floor = elevator.nextFloor ();
        int currentFloor = elevator.getCurrentFloor ();
        if (floor >= 0) {
            if (currentFloor > floor) {
                while (currentFloor > floor) {
                    elevator.setCurrentFloor (-- currentFloor);
                }
            } else {
                while (currentFloor < floor) {
                    elevator.setCurrentFloor (++ currentFloor);
                }
            }
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        String floorNumberStr = null;
        try {
            BufferedReader bufferedReader = new BufferedReader (new InputStreamReader (System.in));
            floorNumberStr = bufferedReader.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
        if (isValidFloorNumber (floorNumberStr)) {
            System.out.println ("User Pressed : " + floorNumberStr);
            Elevator elevator = Elevator.getInstance ();
            elevator.addFloor (Integer.parseInt (floorNumberStr));
        } else {
            System.out.println ("Floor Request Invalid : " + floorNumberStr);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16309842_16311181_121_145
16309842_16311181_99_113
Title: Timer issue in Java code 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    long duration = System.currentTimeMillis () - startTime;
    float progress = (float) duration / (float) RUN_TIME;
    linePoint = new Point ();
    linePoint.x = getWidth () / 2;
    if (progress < 0.5f) {
        linePoint.y = Math.round (getHeight () * (progress * 2));
    } else {
        if (progress > 1f) {
            progress = 1f;
            ((Timer) e.getSource ()).stop ();
            linePoint = null;
            ballPoint = null;
        } else {
            linePoint.y = Math.round (getHeight () * (progress * 2));
            linePoint.y = getHeight () - (linePoint.y - getHeight ());
            ballPoint.y = linePoint.y;
        }
    }
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    long duration = System.currentTimeMillis () - startTime;
    float progress = (float) duration / (float) RUN_TIME;
    if (progress > 1f) {
        progress = 1f;
        ((Timer) e.getSource ()).stop ();
    }
    ballPoint = new Point ();
    ballPoint.x = getWidth () / 2;
    ballPoint.y = Math.round (getHeight () * progress);
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16316132_16316345_25_38
16316132_27861217_66_89
Title: animate JPanel (slide in) with timer 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    if (count % 2 == 0) {
        System.out.println ("if");
        for (int i = 0;
        i <= 60; i ++) {
            try {
                Thread.sleep (3);
            } catch (InterruptedException ex) {
                Logger.getLogger (ToggleBtn.class.getName ()).log (Level.SEVERE, null, ex);
            }
            btn.setBounds (i, 0, 60, 30);
        }
    } else {
        System.out.println ("else");
        for (int i = 60;
        i >= 0; i --) {
            try {
                Thread.sleep (3);
            } catch (InterruptedException ex) {
                Logger.getLogger (ToggleBtn.class.getName ()).log (Level.SEVERE, null, ex);
            }
            btn.setBounds (i, 0, 60, 30);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16316132_16316345_46_59
16316132_16322007_11_27
Title: animate JPanel (slide in) with timer 
----------------------------------------

public TestPane () {
    setLayout (null);
    panel = new JPanel ();
    panel.setBackground (Color.RED);
    add (panel);
    Dimension size = getPreferredSize ();
    Rectangle from = new Rectangle (size.width, (size.height - 50) / 2, 50, 50);
    Rectangle to = new Rectangle ((size.width - 50) / 2, (size.height - 50) / 2, 50, 50);
    Animate animate = new Animate (panel, from, to);
    animate.start ();
}
----------------------------------------

public TestPane () {
    panel = new JPanel ();
    panel.setBackground (Color.RED);
    panel.add (new JButton ("Test"));
    add (panel);
    Dimension size = panel.getPreferredSize ();
    int half = HIGH / 2 - size.height / 2;
    Rectangle from = new Rectangle (size);
    from.translate (WIDE, half);
    Rectangle to = new Rectangle (size);
    to.translate (0, half);
    panel.setBounds (from);
    Animate animate = new Animate (panel, from, to);
    animate.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16316132_16316345_87_96
16316132_33040564_11_27
Title: animate JPanel (slide in) with timer 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    long duration = System.currentTimeMillis () - startTime;
    double progress = (double) duration / (double) RUN_TIME;
    if (progress > 1f) {
        progress = 1f;
        ((Timer) e.getSource ()).stop ();
    }
    Rectangle target = calculateProgress (from, to, progress);
    panel.setBounds (target);
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (xFrom > xTo) {
        xFrom = xFrom - 1;
        panel.setLocation (xFrom, y);
        panel.repaint ();
    } else {
        timer.stop ();
    }
    panel.setLocation (xFrom, y);
    panel.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16319380_16320451_25_49
16319380_16321561_17_42
Title: How to re arrange child elements in an XML file using Java 
----------------------------------------

public static void main (String [] args) throws JDOMException, IOException {
    File xmlFile = new File (PATH_PREFIX + SOURCE_FILE);
    SAXBuilder builder = new SAXBuilder ();
    Document document = builder.build (xmlFile);
    Element rootElement = document.detachRootElement ();
    List < Element > children = new ArrayList < Element > (rootElement.getChildren ());
    rootElement.removeContent ();
    Comparator < Element > comparator = new Comparator < Element > () {
        public int compare (Element o1, Element o2) {
            return o2.getAttributeValue (ID).compareTo (o1.getAttributeValue (ID));
        }}

    ;
    Collections.sort (children, comparator);
    Document newDocument = new Document (rootElement);
    rootElement.addContent (children);
    XMLOutputter xmlOutput = new XMLOutputter ();
    xmlOutput.setFormat (Format.getPrettyFormat ());
    xmlOutput.output (newDocument, new FileWriter (PATH_PREFIX + TARGET_FILE));
}
----------------------------------------

public static void main (String [] args) throws XQException, IOException {
    XQDataSource ds = new SaxonXQDataSource ();
    XQConnection conn = ds.getConnection ();
    InputStream query = new FileInputStream ("reorder.xq");
    XQPreparedExpression exp = conn.prepareExpression (query);
    exp.bindString (new QName ("input-document"), "data/input.xml", null);
    XQSequence xqs = exp.executeQuery ();
    xqs.writeSequence (System.out, null);
    xqs.close ();
    conn.close ();
    query.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16327071_16327876_40_49
16327071_16327876_64_73
Title: Java: why Array (w index) *order of magnitude* faster than Map (key) access? 
----------------------------------------

int run (int iterations) throws Throwable {
    double sum = 0;
    for (int i = 0;
    i < iterations; i ++) {
        for (int j = 0;
        j < array.length; j ++) {
            sum += array [j];
        }
    }
    return (int) sum;
}
----------------------------------------

int run (int iterations) throws Throwable {
    String key = "1";
    double sum = 0;
    for (int i = 0;
    i < iterations; i ++) {
        for (int j = 1;
        j <= map.size (); j ++) {
            sum += map.get (key);
        }
    }
    return (int) sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16330979_1_23
16330960_16331026_4_27
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
            c = fr.read ();
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16330979_1_23
16330960_26175204_3_28
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String source = dir.getCanonicalPath () + File.separator + "Code.txt";
    String dest = dir.getCanonicalPath () + File.separator + "Dest.txt";
    File fin = new File (source);
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader in = new BufferedReader (new InputStreamReader (fis));
    FileWriter fstream = new FileWriter (dest, true);
    BufferedWriter out = new BufferedWriter (fstream);
    String aLine = null;
    while ((aLine = in.readLine ()) != null) {
        out.write (aLine);
        out.newLine ();
    }
    in.close ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16330979_1_23
16330960_30549219_3_22
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String args []) {
    String fileInput = "C://Users//Adhiraj//Desktop//temp.txt";
    String fileoutput = "C://Users//Adhiraj//Desktop//temp1.txt";
    try {
        FileReader fr = new FileReader (fileInput);
        FileWriter fw = new FileWriter (fileoutput);
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
        fr.close ();
        fw.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16330979_1_23
16330960_39057891_3_32
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileReader fr = null;
    FileWriter fw = null;
    try {
        fr = new FileReader ("C:\\Users\\Muzzammil\\Desktop\\chinese.txt");
        fw = new FileWriter ("C:\\Users\\Muzzammil\\Desktop\\jago.txt");
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
    } finally {
        if (fr != null) {
            fr.close ();
        }
        if (fw != null) {
            fw.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16331026_4_27
16330960_26175204_3_28
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
            c = fr.read ();
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String source = dir.getCanonicalPath () + File.separator + "Code.txt";
    String dest = dir.getCanonicalPath () + File.separator + "Dest.txt";
    File fin = new File (source);
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader in = new BufferedReader (new InputStreamReader (fis));
    FileWriter fstream = new FileWriter (dest, true);
    BufferedWriter out = new BufferedWriter (fstream);
    String aLine = null;
    while ((aLine = in.readLine ()) != null) {
        out.write (aLine);
        out.newLine ();
    }
    in.close ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16331026_4_27
16330960_30549219_3_22
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
            c = fr.read ();
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String args []) {
    String fileInput = "C://Users//Adhiraj//Desktop//temp.txt";
    String fileoutput = "C://Users//Adhiraj//Desktop//temp1.txt";
    try {
        FileReader fr = new FileReader (fileInput);
        FileWriter fw = new FileWriter (fileoutput);
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
        fr.close ();
        fw.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_16331026_4_27
16330960_39057891_3_32
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    try {
        FileReader fr = new FileReader ("1.txt");
        FileWriter fw = new FileWriter ("2.txt");
        int c = fr.read ();
        while (c != - 1) {
            fw.write (c);
            c = fr.read ();
        }
    } catch (IOException e) {
        System.out.println (e);
    } finally {
        fr.close ();
        fw.close ();
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileReader fr = null;
    FileWriter fw = null;
    try {
        fr = new FileReader ("C:\\Users\\Muzzammil\\Desktop\\chinese.txt");
        fw = new FileWriter ("C:\\Users\\Muzzammil\\Desktop\\jago.txt");
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
    } finally {
        if (fr != null) {
            fr.close ();
        }
        if (fw != null) {
            fw.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_26175204_3_28
16330960_30549219_3_22
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String source = dir.getCanonicalPath () + File.separator + "Code.txt";
    String dest = dir.getCanonicalPath () + File.separator + "Dest.txt";
    File fin = new File (source);
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader in = new BufferedReader (new InputStreamReader (fis));
    FileWriter fstream = new FileWriter (dest, true);
    BufferedWriter out = new BufferedWriter (fstream);
    String aLine = null;
    while ((aLine = in.readLine ()) != null) {
        out.write (aLine);
        out.newLine ();
    }
    in.close ();
    out.close ();
}
----------------------------------------

public static void main (String args []) {
    String fileInput = "C://Users//Adhiraj//Desktop//temp.txt";
    String fileoutput = "C://Users//Adhiraj//Desktop//temp1.txt";
    try {
        FileReader fr = new FileReader (fileInput);
        FileWriter fw = new FileWriter (fileoutput);
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
        fr.close ();
        fw.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_26175204_3_28
16330960_39057891_3_32
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String [] args) throws IOException {
    File dir = new File (".");
    String source = dir.getCanonicalPath () + File.separator + "Code.txt";
    String dest = dir.getCanonicalPath () + File.separator + "Dest.txt";
    File fin = new File (source);
    FileInputStream fis = new FileInputStream (fin);
    BufferedReader in = new BufferedReader (new InputStreamReader (fis));
    FileWriter fstream = new FileWriter (dest, true);
    BufferedWriter out = new BufferedWriter (fstream);
    String aLine = null;
    while ((aLine = in.readLine ()) != null) {
        out.write (aLine);
        out.newLine ();
    }
    in.close ();
    out.close ();
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileReader fr = null;
    FileWriter fw = null;
    try {
        fr = new FileReader ("C:\\Users\\Muzzammil\\Desktop\\chinese.txt");
        fw = new FileWriter ("C:\\Users\\Muzzammil\\Desktop\\jago.txt");
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
    } finally {
        if (fr != null) {
            fr.close ();
        }
        if (fw != null) {
            fw.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16330960_30549219_3_22
16330960_39057891_3_32
Title: Copying the Contents of One text file to Another in Java 
----------------------------------------

public static void main (String args []) {
    String fileInput = "C://Users//Adhiraj//Desktop//temp.txt";
    String fileoutput = "C://Users//Adhiraj//Desktop//temp1.txt";
    try {
        FileReader fr = new FileReader (fileInput);
        FileWriter fw = new FileWriter (fileoutput);
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
        fr.close ();
        fw.close ();
    } catch (IOException e) {
        System.out.println (e);
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    FileReader fr = null;
    FileWriter fw = null;
    try {
        fr = new FileReader ("C:\\Users\\Muzzammil\\Desktop\\chinese.txt");
        fw = new FileWriter ("C:\\Users\\Muzzammil\\Desktop\\jago.txt");
        int c;
        while ((c = fr.read ()) != - 1) {
            fw.write (c);
        }
    } finally {
        if (fr != null) {
            fr.close ();
        }
        if (fw != null) {
            fw.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16333244_16333358_7_20
16333244_16333379_12_27
Title: Reinitialize fix delay in ScheduledExecutorService 
----------------------------------------

public static void main (String args []) throws InterruptedException {
    executor = Executors.newScheduledThreadPool (1);
    runnable = new Runnable () {
        @Override
        public void run () {
            System.out.println ("Inside runnable" + i ++);
        }}

    ;
    future = executor.scheduleWithFixedDelay (runnable, 0, 5, TimeUnit.SECONDS);
    Thread.sleep (20000l);
    changeDelay ();
}
----------------------------------------

public static void main (String args []) {
    executor = Executors.newScheduledThreadPool (1);
    runnable = new Runnable () {
        @Override
        public void run () {
            System.out.println ("Inside runnable" + i ++);
        }}

    ;
    future = executor.scheduleWithFixedDelay (runnable, 0, 2, TimeUnit.SECONDS);
    try {
        Thread.sleep (4000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    changeDelay ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16341710_16341793_1_14
16341710_16341802_1_13
Title: .class expected error in my method and sometimes missing return statement error 
----------------------------------------

public static char isPrime (int x) {
    char result = 'r';
    for (int y = 2;
    y < x; y ++) {
        if (x % y == 0) result = 't';
        else result = 'f';

    }
    return result;
}
----------------------------------------

public static char isPrime (int x) {
    for (int y = 2;
    y < x; y ++) {
        char result = 'r';
    }
    if (x % y == 0) {
        result = 't';
    } else {
        result = 'f';
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16344101_16344409_1_39
16344101_16344655_11_24
Title: Storing Data from File into an Array 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner reader = new Scanner (new File ("sales.txt"));
    List < Integer > ids = new LinkedList < > ();
    List < Integer > codes = new LinkedList < > ();
    List < String > times = new LinkedList < > ();
    List < Double > amounts = new LinkedList < > ();
    while (reader.hasNext ()) {
        ids.add (reader.nextInt ());
        codes.add (reader.nextInt ());
        times.add (reader.next ());
        amounts.add (reader.nextDouble ());
    }
    int [] idArray = new int [ids.size ()];
    int [] codesArray = new int [codes.size ()];
    String [] timesArray = new String [times.size ()];
    double [] amountsArray = new double [amounts.size ()];
    int index = 0;
    for (Integer i : ids) {
        idArray [index ++] = i;
    }
    index = 0;
    for (Integer i : codes) {
        codesArray [index ++] = i;
    }
    index = 0;
    for (String i : times) {
        timesArray [index ++] = i;
    }
    index = 0;
    for (Double i : ids) {
        amountsArray [index ++] = i;
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    FileInputStream fstream = new FileInputStream ("sales.txt");
    BufferedReader br = new BufferedReader (new InputStreamReader (fstream));
    String strLine;
    while ((strLine = br.readLine ()) != null) {
        String [] tokens = strLine.split (" ");
        int [] transID = convertStringToIntArray (tokens [0]);
        for (int i = 0;
        i < transID.length; i ++) System.out.print (transID [i]);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16346027_16346203_5_31
16346027_16347532_7_20
Title: Strange Concurrency Issue in Java Swing 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            initFrame = new InitFrame ();
            initFrame.setVisible (true);
        }}

    );
    while (! initFrame.isShowing ()) {
        try {
            Thread.sleep (50);
        } catch (InterruptedException e) {
        }
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            appFrame = new AppFrame ();
            appFrame.setVisible (true);
            initFrame.setVisible (false);
            initFrame.dispose ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    if (args.length > 0) {
        useThread = new Boolean (args [0]);
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            SplashFrame splashFrame = new SplashFrame ();
            splashFrame.setVisible (true);
            new AppFrame (splashFrame).setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16353950_16354041_20_30
16353950_16354041_35_45
Title: Is there a way to add the value chosen from all combobox into 1 textfield? 
----------------------------------------

public AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (2);
    format.setMaximumFractionDigits (2);
    format.setRoundingMode (RoundingMode.HALF_UP);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    formatter.setMinimum (0.0);
    formatter.setMaximum (1000.00);
    return formatter;
}
----------------------------------------

public AbstractFormatter getFormatter (JFormattedTextField tf) {
    NumberFormat format = DecimalFormat.getInstance ();
    format.setMinimumFractionDigits (2);
    format.setMaximumFractionDigits (2);
    format.setRoundingMode (RoundingMode.HALF_UP);
    InternationalFormatter formatter = new InternationalFormatter (format);
    formatter.setAllowsInvalid (false);
    return formatter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16356126_16356212_76_84
16356126_16356212_87_95
Title: ORA-29532: Java call terminated by uncaught Java exception- 2005-2008 migration error 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16356126_16356212_76_84
16356126_16356212_97_105
Title: ORA-29532: Java call terminated by uncaught Java exception- 2005-2008 migration error 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16356126_16356212_87_95
16356126_16356212_97_105
Title: ORA-29532: Java call terminated by uncaught Java exception- 2005-2008 migration error 
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16357328_16357431_1_13
16357328_16357481_1_10
Title: "Casting Map<Integer Set<Object>>" 
----------------------------------------

private < T > void methodA (Map < Integer, Set < T > > inOutMap, Integer key, T value) {
    Set < T > list = new HashSet < T > ();
    if (! inOutMap.containsKey (key)) {
        list.add (value);
    } else {
        list = inOutMap.get (key);
        list.add (value);
    }
    inOutMap.put (key, list);
}
----------------------------------------

private < T > void methodA (Map < Integer, Set < T > > inOutMap, Integer key, T value) {
    Set < T > list = new HashSet < T > ();
    if (! inOutMap.containsKey (key)) {
        list.add (value);
    } else {
        list = inOutMap.get (key);
        list.add (value);
    }
    inOutMap.put (key, list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16363235_16363314_46_89
16363235_16363314_57_86
Title: Android color picker to be included in the activity 
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder editalert = new AlertDialog.Builder (MainActivity.this);
    editalert.setTitle ("Please Enter the name with which you want to Save");
    final EditText input = new EditText (MainActivity.this);
    LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams (LinearLayout.LayoutParams.FILL_PARENT, LinearLayout.LayoutParams.FILL_PARENT);
    input.setLayoutParams (lp);
    editalert.setView (input);
    editalert.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int whichButton) {
            rl.setDrawingCacheEnabled (true);
            String name = input.getText ().toString ();
            Bitmap bitmap = rl.getDrawingCache ();
            String root = Environment.getExternalStorageDirectory ().toString ();
            File myDir = new File (root + "/MyDraw");
            myDir.mkdirs ();
            File file = new File (myDir, name + ".png");
            if (file.exists ()) file.delete ();

            try {
                if (! file.exists ()) {
                    file.createNewFile ();
                }
                FileOutputStream ostream = new FileOutputStream (file);
                bitmap.compress (CompressFormat.PNG, 10, ostream);
                ostream.close ();
                rl.invalidate ();
            } catch (Exception e) {
                e.printStackTrace ();
            } finally {
                rl.setDrawingCacheEnabled (false);
            }
        }}

    );
    editalert.show ();
}
----------------------------------------

public void onClick (DialogInterface dialog, int whichButton) {
    rl.setDrawingCacheEnabled (true);
    String name = input.getText ().toString ();
    Bitmap bitmap = rl.getDrawingCache ();
    String root = Environment.getExternalStorageDirectory ().toString ();
    File myDir = new File (root + "/MyDraw");
    myDir.mkdirs ();
    File file = new File (myDir, name + ".png");
    if (file.exists ()) file.delete ();

    try {
        if (! file.exists ()) {
            file.createNewFile ();
        }
        FileOutputStream ostream = new FileOutputStream (file);
        bitmap.compress (CompressFormat.PNG, 10, ostream);
        ostream.close ();
        rl.invalidate ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        rl.setDrawingCacheEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1636399_1636733_1_10
1636399_1637200_1_28
Title: Correctly synchronizing equals() in Java 
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Sync other = (Sync) obj;
    return this.getI () == other.getI ();
}
----------------------------------------

public boolean equals (Object o) {
    if (this == o) return true;

    if (o == null || ! o instanceof Sync) return false;

    Sync so = (Sync) o;
    if (System.identityHashCode (this) < System.identityHashCode (o)) {
        synchronized (this) {
            synchronized (o) {
                return equalsHelper (o);
            }
        }
    } else {
        synchronized (o) {
            synchronized (this) {
                return equalsHelper (o);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16365794_39437351_146_154
16365794_41911932_161_191
Title: Java Currency Converter GUI 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.getContentPane ().add (new Main ());
    frame.setTitle ("Currency Thing");
    frame.setSize (500, 500);
    frame.setDefaultCloseOperation (EXIT_ON_CLOSE);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String args []) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger (CConverter.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger (CConverter.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger (CConverter.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger (CConverter.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    }
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new CConverter ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368379_1_12
16368375_16368409_1_16
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return found;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) found = true;

    }
    return found;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    if (arraylist == null || arraylist.isEmpty ()) return false;

    boolean found = false;
    for (int guessItem : arraylist) {
        if (guessItem == guess) {
            found = true;
            break;
        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368379_1_12
16368375_16368410_1_13
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return found;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) found = true;

    }
    return found;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return false;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) return true;
        else continue;

    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368379_1_12
16368375_16368492_1_14
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return found;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) found = true;

    }
    return found;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (! arraylist.isEmpty ()) {
        for (int i = 0;
        i < arraylist.size (); i ++) {
            found = ((arraylist.get (i).integerValue () == guess));
            if (found) break;

        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368409_1_16
16368375_16368410_1_13
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    if (arraylist == null || arraylist.isEmpty ()) return false;

    boolean found = false;
    for (int guessItem : arraylist) {
        if (guessItem == guess) {
            found = true;
            break;
        }
    }
    return found;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return false;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) return true;
        else continue;

    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368409_1_16
16368375_16368492_1_14
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    if (arraylist == null || arraylist.isEmpty ()) return false;

    boolean found = false;
    for (int guessItem : arraylist) {
        if (guessItem == guess) {
            found = true;
            break;
        }
    }
    return found;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (! arraylist.isEmpty ()) {
        for (int i = 0;
        i < arraylist.size (); i ++) {
            found = ((arraylist.get (i).integerValue () == guess));
            if (found) break;

        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368375_16368410_1_13
16368375_16368492_1_14
Title: the return statement is available and the compiler still asks for it 
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (arraylist.isEmpty ()) return false;

    for (int i = 0;
    i < arraylist.size (); i ++) {
        if (arraylist.get (i) == guess) return true;
        else continue;

    }
    return false;
}
----------------------------------------

public boolean isExistGuess (int guess, ArrayList < Integer > arraylist) {
    boolean found = false;
    if (! arraylist.isEmpty ()) {
        for (int i = 0;
        i < arraylist.size (); i ++) {
            found = ((arraylist.get (i).integerValue () == guess));
            if (found) break;

        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16368793_16372123_109_119
16368793_16372123_161_177
Title: How to reset progress indicator between tasks in JavaFX2? 
----------------------------------------

public Double call () throws Exception {
    double value = 0;
    for (int i = 0;
    i < taskProgressList.length; i ++) {
        value += taskProgressList [i].get ();
    }
    value /= taskProgressList.length;
    return value;
}
----------------------------------------

protected String call () throws Exception {
    updateMessage ("Called on thread: " + Thread.currentThread ().getName ());
    URL u = new URL (_url);
    BufferedReader in = new BufferedReader (new InputStreamReader (u.openStream ()));
    String result = in.readLine ();
    in.close ();
    for (int i = 0;
    i < 100; i ++) {
        updateProgress (i, 100);
        Thread.sleep (50);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16376389_16376467_13_27
16376389_16376568_1_16
Title: Counting characters method exception error? 
----------------------------------------

public static int count (String s, int countR) {
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == 'r') {
            countR ++;
        }
    }
    return countR;
}
----------------------------------------

public static int count (String s, int countR, char r) {
    countR = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == r) {
            countR ++;
        }
        return countR;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16380026_16380057_1_19
16380026_25682011_1_26
Title: Implementing BFS in Java 
----------------------------------------

public void bfs () {
    Queue queue = new LinkedList ();
    queue.add (this.rootNode);
    printNode (this.rootNode);
    rootNode.visited = true;
    while (! queue.isEmpty ()) {
        Node node = (Node) queue.remove ();
        Node child = null;
        while ((child = getUnvisitedChildNode (node)) != null) {
            child.visited = true;
            printNode (child);
            queue.add (child);
        }
    }
    clearNodes ();
}
----------------------------------------

public static void bfs (BinaryTree.Node < Integer > root) {
    BinaryTree.Node < Integer > temp;
    Queue < BinaryTree.Node < Integer > > queue = new LinkedList < > ();
    if (root == null) {
        return;
    }
    queue.add (root);
    while (! queue.isEmpty ()) {
        temp = queue.poll ();
        System.out.println (temp.data);
        if (temp.left != null) {
            queue.add (temp.left);
        }
        if (temp.right != null) {
            queue.add (temp.right);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384485_1_18
16384472_16384542_1_18
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void twoLargest (int values []) {
    int largestA = values [0];
    int largestB = - 1;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        } else if (values [i] > largestB && values [i] != largestA) {
            largestB = values [i];
        }

    }
    System.out.println ("Largest - " + largestA);
    System.out.println ("2nd largest Largest - " + largestB);
}
----------------------------------------

public static int [] twoLargest (int values []) {
    int [] result = new int [2];
    int largestA = 0;
    int largestB = 0;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        }
    }
    result [0] = largestA;
    result [1] = largestB;
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384485_1_18
16384472_16385929_1_13
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void twoLargest (int values []) {
    int largestA = values [0];
    int largestB = - 1;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        } else if (values [i] > largestB && values [i] != largestA) {
            largestB = values [i];
        }

    }
    System.out.println ("Largest - " + largestA);
    System.out.println ("2nd largest Largest - " + largestB);
}
----------------------------------------

public static int [] twoLargest (int values []) {
    int largestA = Integer.MIN_VALUE, largestB = Integer.MIN_VALUE;
    for (int value : values) {
        if (value > largestA) {
            largestB = largestA;
            largestA = value;
        } else if (value > largestB) {
            largestB = value;
        }

    }
    return new int [] {largestA, largestB};
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384485_1_18
16384472_51890328_19_39
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void twoLargest (int values []) {
    int largestA = values [0];
    int largestB = - 1;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        } else if (values [i] > largestB && values [i] != largestA) {
            largestB = values [i];
        }

    }
    System.out.println ("Largest - " + largestA);
    System.out.println ("2nd largest Largest - " + largestB);
}
----------------------------------------

public static int twoLargest (int a []) {
    int firstMax = 0;
    int secondMax = 0;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > firstMax) {
            secondMax = firstMax;
            firstMax = a [i];
        } else if (a [i] > secondMax) {
            secondMax = a [i];
        }

    }
    return firstMax + secondMax;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384542_1_18
16384472_16385929_1_13
Title: Return the two largest integers in an array of values 
----------------------------------------

public static int [] twoLargest (int values []) {
    int [] result = new int [2];
    int largestA = 0;
    int largestB = 0;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        }
    }
    result [0] = largestA;
    result [1] = largestB;
    return result;
}
----------------------------------------

public static int [] twoLargest (int values []) {
    int largestA = Integer.MIN_VALUE, largestB = Integer.MIN_VALUE;
    for (int value : values) {
        if (value > largestA) {
            largestB = largestA;
            largestA = value;
        } else if (value > largestB) {
            largestB = value;
        }

    }
    return new int [] {largestA, largestB};
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384542_1_18
16384472_51890328_19_39
Title: Return the two largest integers in an array of values 
----------------------------------------

public static int [] twoLargest (int values []) {
    int [] result = new int [2];
    int largestA = 0;
    int largestB = 0;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] > largestA) {
            largestB = largestA;
            largestA = values [i];
        }
    }
    result [0] = largestA;
    result [1] = largestB;
    return result;
}
----------------------------------------

public static int twoLargest (int a []) {
    int firstMax = 0;
    int secondMax = 0;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > firstMax) {
            secondMax = firstMax;
            firstMax = a [i];
        } else if (a [i] > secondMax) {
            secondMax = a [i];
        }

    }
    return firstMax + secondMax;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384581_7_20
16384472_26098628_23_34
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    System.out.println (xLargest (values, 2));
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    int [] ar = findTwoHighestDistinctValues (values);
    System.out.println ("1 = " + ar [0]);
    System.out.println ("2 = " + ar [1]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384581_7_20
16384472_45862898_1_23
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    System.out.println (xLargest (values, 2));
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = new int [] {1, 2, 5, 4, 57, 54, 656, 4};
    int temp = numbers [0];
    int max = temp;
    int lastMax = temp;
    for (int index = 1;
    index < numbers.length; index ++) {
        int currentIndex = numbers [index];
        max = Math.max (max, currentIndex);
        lastMax = max != temp ? temp : Math.max (currentIndex, lastMax);
        temp = max;
    }
    System.out.println ("Last max: " + lastMax);
    System.out.println ("Max:" + max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16384581_7_20
16384472_51890328_4_17
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    System.out.println (xLargest (values, 2));
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int a [] = new int [5];
    a [0] = 110;
    a [1] = 50;
    a [2] = 15;
    a [3] = 30;
    a [4] = 60;
    System.out.println (twoLargest (a));
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_16385929_1_13
16384472_51890328_19_39
Title: Return the two largest integers in an array of values 
----------------------------------------

public static int [] twoLargest (int values []) {
    int largestA = Integer.MIN_VALUE, largestB = Integer.MIN_VALUE;
    for (int value : values) {
        if (value > largestA) {
            largestB = largestA;
            largestA = value;
        } else if (value > largestB) {
            largestB = value;
        }

    }
    return new int [] {largestA, largestB};
}
----------------------------------------

public static int twoLargest (int a []) {
    int firstMax = 0;
    int secondMax = 0;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > firstMax) {
            secondMax = firstMax;
            firstMax = a [i];
        } else if (a [i] > secondMax) {
            secondMax = a [i];
        }

    }
    return firstMax + secondMax;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_26098628_23_34
16384472_45862898_1_23
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    int [] ar = findTwoHighestDistinctValues (values);
    System.out.println ("1 = " + ar [0]);
    System.out.println ("2 = " + ar [1]);
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = new int [] {1, 2, 5, 4, 57, 54, 656, 4};
    int temp = numbers [0];
    int max = temp;
    int lastMax = temp;
    for (int index = 1;
    index < numbers.length; index ++) {
        int currentIndex = numbers [index];
        max = Math.max (max, currentIndex);
        lastMax = max != temp ? temp : Math.max (currentIndex, lastMax);
        temp = max;
    }
    System.out.println ("Last max: " + lastMax);
    System.out.println ("Max:" + max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_26098628_23_34
16384472_51890328_4_17
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] values = new int [5];
    values [0] = 5;
    values [1] = 10;
    values [2] = 15;
    values [3] = 20;
    values [4] = 25;
    int [] ar = findTwoHighestDistinctValues (values);
    System.out.println ("1 = " + ar [0]);
    System.out.println ("2 = " + ar [1]);
}
----------------------------------------

public static void main (String [] args) {
    int a [] = new int [5];
    a [0] = 110;
    a [1] = 50;
    a [2] = 15;
    a [3] = 30;
    a [4] = 60;
    System.out.println (twoLargest (a));
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384472_45862898_1_23
16384472_51890328_4_17
Title: Return the two largest integers in an array of values 
----------------------------------------

public static void main (String [] args) {
    int [] numbers = new int [] {1, 2, 5, 4, 57, 54, 656, 4};
    int temp = numbers [0];
    int max = temp;
    int lastMax = temp;
    for (int index = 1;
    index < numbers.length; index ++) {
        int currentIndex = numbers [index];
        max = Math.max (max, currentIndex);
        lastMax = max != temp ? temp : Math.max (currentIndex, lastMax);
        temp = max;
    }
    System.out.println ("Last max: " + lastMax);
    System.out.println ("Max:" + max);
}
----------------------------------------

public static void main (String [] args) {
    int a [] = new int [5];
    a [0] = 110;
    a [1] = 50;
    a [2] = 15;
    a [3] = 30;
    a [4] = 60;
    System.out.println (twoLargest (a));
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16384879_16407347_58_70
16384879_43102706_7_20
Title: auto numbered table rows (javafx) 
----------------------------------------

public TableCell < Person, Person > call (TableColumn < Person, Person > param) {
    return new TableCell < Person, Person > () {
        @Override
        protected void updateItem (Person item, boolean empty) {
            super.updateItem (item, empty);
            if (this.getTableRow () != null && item != null) {
                setText (this.getTableRow ().getIndex () + "");
            } else {
                setText ("");
            }
        }}

    ;
}
----------------------------------------

public TableCell < T, E > call (TableColumn < T, E > param) {
    return new TableCell < T, E > () {
        @Override
        protected void updateItem (E item, boolean empty) {
            super.updateItem (item, empty);
            if (! empty) {
                setText (this.getTableRow ().getIndex () + 1 + "");
            } else {
                setText ("");
            }
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16388433_16388614_15_55
16388433_16388885_15_80
Title: Java Read File/Scanner 
----------------------------------------

public void high () {
    File file2 = new File ("/home/antonio/Scrivania/scores.csv");
    try {
        Scanner scanner = new Scanner (file2);
        ArrayList < Double > avgs = new ArrayList < > ();
        double max = 0, min = 100;
        while (scanner.hasNextLine ()) {
            String line2 = scanner.nextLine ();
            String [] value2 = line2.split (",");
            double [] score = new double [value2.length - 1];
            for (int i = 1;
            i < value2.length; i ++) {
                score [i - 1] = Double.parseDouble (value2 [i]);
            }
            double sumNum = 0.0;
            for (double i : score) {
                sumNum += i;
                min = Math.min (min, i);
                max = Math.max (max, i);
            }
            double avg = sumNum / 10;
            avgs.add (avg);
            System.out.println (avg);
        }
        scanner.close ();
        double avgsSum = .0;
        for (double avg : avgs) {
            avgsSum += avg;
        }
        System.out.println ("High " + max + "");
        System.out.println ("Low " + min + "");
        System.out.println ("Average " + avgsSum / avgs.size () + "");
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void high () {
    DecimalFormat df = new DecimalFormat ("###.#");
    df.setRoundingMode (RoundingMode.HALF_UP);
    ArrayList < Double > averages = new ArrayList < Double > ();
    File file2 = new File ("scores.csv");
    try {
        Scanner scanner = new Scanner (file2);
        while (scanner.hasNextLine ()) {
            String line = scanner.nextLine ();
            String [] values = line.split (",");
            double [] scoresPerPerson = new double [values.length];
            for (int i = 1;
            i < values.length; i ++) {
                scoresPerPerson [i] = Double.parseDouble (values [i]);
            }
            double sum = 0.0;
            for (double i : scoresPerPerson) {
                sum += i;
            }
            double average = sum / values.length;
            averages.add (average);
            System.out.println (values [0] + ": " + df.format (average) + " " + getCharGrade (average));
        }
        scanner.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    double max = 0;
    double min = 100;
    double totalAverage = 0;
    for (double average : averages) {
        if (average > max) {
            max = average;
        }
        if (average < min) {
            min = average;
        }
        totalAverage += average;
    }
    totalAverage /= averages.size ();
    System.out.println ();
    System.out.println ("High : " + df.format (max));
    System.out.println ("Low : " + df.format (min));
    System.out.println ("Average : " + df.format (totalAverage));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16390921_16390946_8_22
16390921_16390983_1_13
Title: writing a method for fibonacci sequence 
----------------------------------------

static int fibonacci (int n) {
    if (n == 0) {
        return 0;
    }
    int a = 0;
    int b = 1;
    for (int i = 0;
    i < n; i ++) {
        int temp = b;
        b += a;
        a = temp;
    }
    return (b);
}
----------------------------------------

private void fibonacci (int n) {
    int i = 1;
    int a = 0;
    int b = 1;
    while (i <= n) {
        int c = a + b;
        a = b;
        b = c;
        System.out.println (a);
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16393142_16411182_13_37
16393142_16411182_59_113
Title: Reading BITMAPFILEHEADER and BITMAPINFOHEADER from a BitMap 
----------------------------------------

public static BitmapFileHeader readFromImage (byte [] image) {
    BitmapFileHeader bitmap = new BitmapFileHeader ();
    bitmap.bfType = new char [2];
    int index = 0;
    bitmap.bfType [0] = (char) image [index ++];
    bitmap.bfType [1] = (char) image [index ++];
    bitmap.bfSize = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.bfReserved1 = (short) (((image [index + 1] & 0xFF) << 8) | (image [index + 0] & 0xFF));
    index += 2;
    bitmap.bfReserved2 = (short) (((image [index + 1] & 0xFF) << 8) | (image [index + 0] & 0xFF));
    index += 2;
    bitmap.bfOffBits = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    return bitmap;
}
----------------------------------------

public static BitmapInfoHeader readFromImage (byte [] image) {
    BitmapInfoHeader bitmap = new BitmapInfoHeader ();
    int index = 14;
    bitmap.biSize = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biWidth = ((image [index + 3] & 0xff) << 24) | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biHeight = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biPlanes = (short) (((image [index + 1] & 0xFF) << 8) | (image [index + 0] & 0xFF));
    index += 2;
    bitmap.biBitCount = (short) (((image [index + 1] & 0xFF) << 8) | (image [index + 0] & 0xFF));
    index += 2;
    bitmap.biCompression = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biSizeImage = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biXPelsPerMeter = (int) (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biYPelsPerMeter = (int) (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biClrUsed = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    bitmap.biClrImportant = (image [index + 3] & 0xff) << 24 | (image [index + 2] & 0xFF) << 16 | (image [index + 1] & 0xFF) << 8 | (image [index + 0] & 0xFF);
    index += 4;
    index += 10;
    return bitmap;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1640835_1641510_26_41
1640835_1641510_73_86
Title: "ZXing (""Zebra Crossing"") in C#" 
----------------------------------------

public int getNextRowNumber () {
    if (x > maxLines) return - 1;

    int rowStepsAboveOrBelow = (x + 1)>> 1;
    boolean isAbove = (x & 0x01) == 0;
    int rowNumber = middle + rowStep * (isAbove ? rowStepsAboveOrBelow : - rowStepsAboveOrBelow);
    if (rowNumber < 0 || rowNumber >= maxRows) {
        return - 1;
    }
    x = x + 1;
    return rowNumber;
}
----------------------------------------

public int getNextRowNumber () {
    int nextRow = (currentStep ++) * currentStepSize;
    if (nextRow < maxRows) return nextRow;

    currentStepSize = currentStepSize>> 1;
    if (currentStepSize <= 0) return - 1;

    currentStep = 1;
    nextRow = currentStep * currentStepSize;
    return nextRow;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16414379_16414444_6_18
16414379_16414461_1_13
Title: Performing a for-loop on a retrieved array 
----------------------------------------

public static int performCalcs () {
    Performer getInput = new Performer ();
    List < Integer > arrayOne = getInput.getUnit ();
    int sumTotal = 0;
    for (int i = 0;
    i < arrayOne.size (); i ++) {
        sumTotal += arrayOne.get (i);
    }
    return sumTotal;
}
----------------------------------------

public static int performCalcs () {
    Performer getInput = new Performer ();
    List < Integer > arrayOne = getInput.getUnit ();
    int sumTotal = 0;
    for (int i = 0;
    i < arrayOne.size (); i ++) {
        return sumTotal += arrayOne.get (i);
    }
    return sumTotal;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16437615_21493175_104_161
16437615_21493175_70_99
Title: JavaFX Tab positioning on mouse drag/drop 
----------------------------------------

public void handle (MouseEvent t) {
    markerStage.hide ();
    dragStage.hide ();
    if (! t.isStillSincePress ()) {
        Point2D screenPoint = new Point2D (t.getScreenX (), t.getScreenY ());
        TabPane oldTabPane = getTabPane ();
        int oldIndex = oldTabPane.getTabs ().indexOf (DraggableTab.this);
        tabPanes.add (oldTabPane);
        InsertData insertData = getInsertData (screenPoint);
        if (insertData != null) {
            int addIndex = insertData.getIndex ();
            if (oldTabPane == insertData.getInsertPane () && oldTabPane.getTabs ().size () == 1) {
                return;
            }
            oldTabPane.getTabs ().remove (DraggableTab.this);
            if (oldIndex < addIndex && oldTabPane == insertData.getInsertPane ()) {
                addIndex --;
            }
            if (addIndex > insertData.getInsertPane ().getTabs ().size ()) {
                addIndex = insertData.getInsertPane ().getTabs ().size ();
            }
            insertData.getInsertPane ().getTabs ().add (addIndex, DraggableTab.this);
            insertData.getInsertPane ().selectionModelProperty ().get ().select (addIndex);
            return;
        }
        if (! detachable) {
            return;
        }
        final Stage newStage = new Stage ();
        final TabPane pane = new TabPane ();
        tabPanes.add (pane);
        newStage.setOnHiding (new EventHandler < WindowEvent > () {
            @Override
            public void handle (WindowEvent t) {
                tabPanes.remove (pane);
            }}

        );
        getTabPane ().getTabs ().remove (DraggableTab.this);
        pane.getTabs ().add (DraggableTab.this);
        pane.getTabs ().addListener (new ListChangeListener < Tab > () {
            @Override
            public void onChanged (ListChangeListener.Change < ? extends Tab > change) {
                if (pane.getTabs ().isEmpty ()) {
                    newStage.hide ();
                }
            }}

        );
        newStage.setScene (new Scene (pane));
        newStage.initStyle (StageStyle.UTILITY);
        newStage.setX (t.getScreenX ());
        newStage.setY (t.getScreenY ());
        newStage.show ();
        pane.requestLayout ();
        pane.requestFocus ();
    }
}
----------------------------------------

public void handle (MouseEvent t) {
    dragStage.setWidth (nameLabel.getWidth () + 10);
    dragStage.setHeight (nameLabel.getHeight () + 10);
    dragStage.setX (t.getScreenX ());
    dragStage.setY (t.getScreenY ());
    dragStage.show ();
    Point2D screenPoint = new Point2D (t.getScreenX (), t.getScreenY ());
    tabPanes.add (getTabPane ());
    InsertData data = getInsertData (screenPoint);
    if (data == null || data.getInsertPane ().getTabs ().isEmpty ()) {
        markerStage.hide ();
    } else {
        int index = data.getIndex ();
        boolean end = false;
        if (index == data.getInsertPane ().getTabs ().size ()) {
            end = true;
            index --;
        }
        Rectangle2D rect = getAbsoluteRect (data.getInsertPane ().getTabs ().get (index));
        if (end) {
            markerStage.setX (rect.getMaxX () + 13);
        } else {
            markerStage.setX (rect.getMinX ());
        }
        markerStage.setY (rect.getMaxY () + 10);
        markerStage.show ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16439621_16440304_144_174
16439621_16447738_102_129
Title: Java on screen virtual joystick control 
----------------------------------------

protected void paintComponent (final Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setColor (Color.LIGHT_GRAY);
    g2.fillOval ((int) (joyCenterX - joyWidth / 2), (int) (joyCenterY - joyHeight / 2), (int) joyWidth, (int) joyHeight);
    Graphics2D g3 = (Graphics2D) g2.create ();
    g3.translate (joyCenterX, joyCenterY);
    g3.rotate (curJoyAngle);
    g3.setColor (Color.GRAY);
    g3.setStroke (lineStroke);
    g3.drawLine (0, 0, (int) curJoySize, 0);
    g3.dispose ();
    g2.setColor (Color.GRAY);
    g2.fillOval ((int) joyCenterX - 10, (int) joyCenterY - 10, 20, 20);
    textHorizPos = 50;
    textVertPos = (int) (joyCenterY - 50);
    g2.drawString ("Horizont:", textHorizPos, textVertPos);
    textHorizPos += (4 * fontSpace);
    g2.drawString (String.valueOf (position.x), textHorizPos, textVertPos);
    textHorizPos = 50;
    textVertPos += 12;
    g2.drawString ("Vertical :", textHorizPos, textVertPos);
    textHorizPos += (4 * fontSpace);
    g2.drawString (String.valueOf (position.y), textHorizPos, textVertPos);
}
----------------------------------------

protected void paintComponent (final Graphics g) {
    super.paintComponent (g);
    int joyWidth = getSize ().width;
    int joyHeight = getSize ().height;
    joyRadius = Math.min (joyWidth, joyHeight) / 2;
    if (joyRadius == 0) return;

    joyCenterX = joyWidth / 2;
    joyCenterY = joyHeight / 2;
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    int diameter;
    g2.setColor (Color.LIGHT_GRAY);
    diameter = joyRadius * 2;
    g2.fillOval (joyCenterX - diameter / 2, joyCenterY - diameter / 2, diameter, diameter);
    g2.setColor (Color.RED);
    diameter = 40;
    g2.fillOval (joyCenterX + dx - diameter / 2, joyCenterY + dy - diameter / 2, diameter, diameter);
    g2.setColor (Color.GRAY);
    diameter = 20;
    g2.fillOval (joyCenterX - diameter / 2, joyCenterY - diameter / 2, diameter, diameter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16439621_16440304_144_174
16439621_24090810_106_133
Title: Java on screen virtual joystick control 
----------------------------------------

protected void paintComponent (final Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setColor (Color.LIGHT_GRAY);
    g2.fillOval ((int) (joyCenterX - joyWidth / 2), (int) (joyCenterY - joyHeight / 2), (int) joyWidth, (int) joyHeight);
    Graphics2D g3 = (Graphics2D) g2.create ();
    g3.translate (joyCenterX, joyCenterY);
    g3.rotate (curJoyAngle);
    g3.setColor (Color.GRAY);
    g3.setStroke (lineStroke);
    g3.drawLine (0, 0, (int) curJoySize, 0);
    g3.dispose ();
    g2.setColor (Color.GRAY);
    g2.fillOval ((int) joyCenterX - 10, (int) joyCenterY - 10, 20, 20);
    textHorizPos = 50;
    textVertPos = (int) (joyCenterY - 50);
    g2.drawString ("Horizont:", textHorizPos, textVertPos);
    textHorizPos += (4 * fontSpace);
    g2.drawString (String.valueOf (position.x), textHorizPos, textVertPos);
    textHorizPos = 50;
    textVertPos += 12;
    g2.drawString ("Vertical :", textHorizPos, textVertPos);
    textHorizPos += (4 * fontSpace);
    g2.drawString (String.valueOf (position.y), textHorizPos, textVertPos);
}
----------------------------------------

protected void paintComponent (final Graphics g) {
    super.paintComponent (g);
    int joyWidth = getSize ().width;
    int joyHeight = getSize ().height;
    joyRadius = Math.min (joyWidth, joyHeight) / 2;
    if (joyRadius == 0) return;

    joyCenterX = joyWidth / 2;
    joyCenterY = joyHeight / 2;
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    int diameter;
    g2.setColor (Color.LIGHT_GRAY);
    diameter = joyRadius * 2;
    g2.fillOval (joyCenterX - diameter / 2, joyCenterY - diameter / 2, diameter, diameter);
    g2.setColor (Color.RED);
    diameter = 40;
    g2.fillOval (joyCenterX + dx - diameter / 2, joyCenterY + dy - diameter / 2, diameter, diameter);
    g2.setColor (Color.GRAY);
    diameter = 20;
    g2.fillOval (joyCenterX - diameter / 2, joyCenterY - diameter / 2, diameter, diameter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16439621_16440304_87_114
16439621_16447738_60_83
Title: Java on screen virtual joystick control 
----------------------------------------

public SimpleJoystick (final int joyOutputRange, final Point position, final int joySize) {
    this.joyOutputRange = joyOutputRange;
    this.position = position;
    this.joySize = joySize;
    joyWidth = joySize;
    joyHeight = joyWidth;
    setPreferredSize (new Dimension ((int) joyWidth + 250, (int) joyHeight + 80));
    joyCenterX = getPreferredSize ().width / 2;
    joyCenterY = getPreferredSize ().height / 2;
    this.joySize = joyWidth / 2;
    setBackground (new Color (226, 226, 226));
    MouseAdapter mouseAdapter = new MouseAdapter () {
        @Override
        public void mouseMoved (final MouseEvent e) {
            mouseCheck (e);
        }@Override
        public void mousePressed (final MouseEvent e) {
            leftMouseButton = SwingUtilities.isLeftMouseButton (e);
            mouseCheck (e);
        }}

    ;
    addMouseMotionListener (mouseAdapter);
    addMouseListener (mouseAdapter);
}
----------------------------------------

public SimpleJoystick (final int joyOutputRange) {
    this.joyOutputRange = joyOutputRange;
    setBackground (new Color (226, 226, 226));
    MouseAdapter mouseAdapter = new MouseAdapter () {
        @Override
        public void mousePressed (final MouseEvent e) {
            if (SwingUtilities.isLeftMouseButton (e) && cursorChanged (e.getX (), e.getY ())) {
                SwingUtilities.getRoot (SimpleJoystick.this).repaint ();
                fireStateChanged ();
            }
        }@Override
        public void mouseDragged (MouseEvent e) {
            if (SwingUtilities.isLeftMouseButton (e) && cursorChanged (e.getX (), e.getY ())) {
                SwingUtilities.getRoot (SimpleJoystick.this).repaint ();
                fireStateChanged ();
            }
        }}

    ;
    addMouseMotionListener (mouseAdapter);
    addMouseListener (mouseAdapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16439621_16440304_87_114
16439621_24090810_64_87
Title: Java on screen virtual joystick control 
----------------------------------------

public SimpleJoystick (final int joyOutputRange, final Point position, final int joySize) {
    this.joyOutputRange = joyOutputRange;
    this.position = position;
    this.joySize = joySize;
    joyWidth = joySize;
    joyHeight = joyWidth;
    setPreferredSize (new Dimension ((int) joyWidth + 250, (int) joyHeight + 80));
    joyCenterX = getPreferredSize ().width / 2;
    joyCenterY = getPreferredSize ().height / 2;
    this.joySize = joyWidth / 2;
    setBackground (new Color (226, 226, 226));
    MouseAdapter mouseAdapter = new MouseAdapter () {
        @Override
        public void mouseMoved (final MouseEvent e) {
            mouseCheck (e);
        }@Override
        public void mousePressed (final MouseEvent e) {
            leftMouseButton = SwingUtilities.isLeftMouseButton (e);
            mouseCheck (e);
        }}

    ;
    addMouseMotionListener (mouseAdapter);
    addMouseListener (mouseAdapter);
}
----------------------------------------

public SimpleJoystick (final int joyOutputRange) {
    this.joyOutputRange = joyOutputRange;
    setBackground (new Color (226, 226, 226));
    MouseAdapter mouseAdapter = new MouseAdapter () {
        @Override
        public void mousePressed (final MouseEvent e) {
            if (SwingUtilities.isLeftMouseButton (e) && cursorChanged (e.getX (), e.getY ())) {
                SwingUtilities.getRoot (SimpleJoystick.this).repaint ();
                fireStateChanged ();
            }
        }@Override
        public void mouseDragged (MouseEvent e) {
            if (SwingUtilities.isLeftMouseButton (e) && cursorChanged (e.getX (), e.getY ())) {
                SwingUtilities.getRoot (SimpleJoystick.this).repaint ();
                fireStateChanged ();
            }
        }}

    ;
    addMouseMotionListener (mouseAdapter);
    addMouseListener (mouseAdapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16439621_16447738_32_40
16439621_24090810_34_42
Title: Java on screen virtual joystick control 
----------------------------------------

public void stateChanged (ChangeEvent ev) {
    Point p = null;
    try {
        p = ((PointChangeEvent) ev).p;
    } catch (Exception e) {
        return;
    }
    lblPosition.setText ("x=" + p.x + " y=" + p.y);
}
----------------------------------------

public void stateChanged (ChangeEvent ev) {
    Point p = null;
    try {
        p = ((PointChangeEvent) ev).p;
    } catch (Exception e) {
        return;
    }
    lblPosition.setText ("x=" + p.x + " y=" + p.y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16441922_16442477_1_10
16441922_16442824_1_16
Title: "Converting pseudocode for array minimum into Java code using recursion" 
----------------------------------------

private static int findMinPos (int [] data, int cur, int minPosSoFar) {
    if (cur < data.length) {
        if (data [cur] < data [minPosSoFar]) {
            minPosSoFar = cur;
        }
        return findMinPos (data, cur + 1, minPosSoFar);
    }
    return minPosSoFar;
}
----------------------------------------

private static int findMinPos (int [] data, int cur, int minPosSoFar) {
    if (cur < data.length) {
        if (data [cur] < data [minPosSoFar]) {
            return findMinPos (data, cur + 1, cur);
        } else {
            return findMinPos (data, cur + 1, minPosSoFar);
        }
    }
    return minPosSoFar;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16453197_16453304_120_139
16453197_16453528_9_26
Title: "Checkbox in some cells but not all in a particular column - JTable" 
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    setOpaque (isSelected);
    if (isSelected) {
        setForeground (table.getSelectionForeground ());
        setBackground (table.getSelectionBackground ());
    } else {
        setForeground (table.getForeground ());
    }
    if (value instanceof Integer) {
        int state = (int) value;
        cb.setVisible (state != 0);
        cb.setSelected (state == 2);
    }
    if (hasFocus) {
        setBorder (UIManager.getBorder ("Table.focusCellHighlightBorder"));
    } else {
        setBorder (NO_FOCUS_BORDER);
    }
    return this;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
    if (value instanceof Boolean) {
        if (value != null) {
            JCheckBox jcb = new JCheckBox ();
            jcb.setSelected ((Boolean) value);
            return jcb;
        }
        return new JPanel ();
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16455896_21822647_98_115
16455896_21825472_281_322
Title: Android: digital signature using Bezier 
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float x = event.getX ();
    float y = event.getY ();
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            touchDown (x, y);
            break;
        case MotionEvent.ACTION_MOVE :
            touchMove (x, y);
            break;
        case MotionEvent.ACTION_UP :
            touchUp ();
            break;
    }
    invalidate ();
    return true;
}
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    float eventX = event.getX ();
    float eventY = event.getY ();
    mGetSign.setEnabled (true);
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            path.moveTo (eventX, eventY);
            lastTouchX = eventX;
            lastTouchY = eventY;
            return true;
        case MotionEvent.ACTION_MOVE :
        case MotionEvent.ACTION_UP :
            resetDirtyRect (eventX, eventY);
            int historySize = event.getHistorySize ();
            for (int i = 0;
            i < historySize; i ++) {
                float historicalX = event.getHistoricalX (i);
                float historicalY = event.getHistoricalY (i);
                expandDirtyRect (historicalX, historicalY);
                path.lineTo (historicalX, historicalY);
            }
            path.lineTo (eventX, eventY);
            break;
        default :
            debug ("Ignored touch event: " + event.toString ());
            return false;
    }
    invalidate ((int) (dirtyRect.left - HALF_STROKE_WIDTH), (int) (dirtyRect.top - HALF_STROKE_WIDTH), (int) (dirtyRect.right + HALF_STROKE_WIDTH), (int) (dirtyRect.bottom + HALF_STROKE_WIDTH));
    lastTouchX = eventX;
    lastTouchY = eventY;
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16455896_21825472_126_134
16455896_21825472_93_122
Title: Android: digital signature using Bezier 
----------------------------------------

public void onClick (View v) {
    Log.v ("log_tag", "Panel Canceled");
    Bundle b = new Bundle ();
    b.putString ("status", "cancel");
    Intent intent = new Intent ();
    intent.putExtras (b);
    setResult (RESULT_OK, intent);
    finish ();
}
----------------------------------------

public void onClick (View v) {
    Log.v ("log_tag", "Panel Saved");
    mView.setDrawingCacheEnabled (true);
    mSignature.save (mView);
    AlertDialog.Builder dialog = new AlertDialog.Builder (SignatureCapture.this);
    dialog.setMessage ("Details saved");
    dialog.setPositiveButton ("OK", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int which) {
            dialog.dismiss ();
        }}

    );
    dialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16456121_16456632_26_45
16456121_16456632_56_73
Title: Producer-Consumer using a stack in Java 
----------------------------------------

public void run () {
    while (true) {
        synchronized (mStack) {
            while (! mStack.isEmpty ()) {
                try {
                    mStack.wait ();
                } catch (Exception e) {
                    e.printStackTrace ();
                }
            }
            mNumber ++;
            System.out.println ("Producer generates number:" + mNumber);
            mStack.add (mNumber);
            mStack.notifyAll ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (mStack) {
            while (mStack.isEmpty ()) {
                try {
                    mStack.wait ();
                } catch (Exception e) {
                    e.printStackTrace ();
                }
            }
            int number = ((LinkedList < Integer >) mStack).removeLast ();
            System.out.println ("Consumer consumes number:" + number);
            mStack.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_1647433_7_22
1647260_40815898_4_22
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    List < xClass > list = new ArrayList < xClass > ();
    int elements = new Random ().nextInt (100);
    for (int i = 0;
    i < elements; i ++) {
        list.add (new xClass ());
    }
    xClass [] array = list.toArray (new xClass [list.size ()]);
    System.out.println ("size of array = " + array.length);
}
----------------------------------------

public static void main (String [] args) {
    value = new Scanner (System.in);
    System.out.println ("Enter the number of tests to calculate average\n");
    int limit = value.nextInt ();
    int index = 0;
    int [] marks = new int [limit];
    float sum, ave;
    sum = 0;
    while (index < limit) {
        int test = index + 1;
        System.out.println ("Enter the marks on test " + test);
        marks [index] = value.nextInt ();
        sum += marks [index];
        index ++;
    }
    ave = sum / limit;
    System.out.println ("The average is: " + ave);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_1647433_7_22
1647260_41970197_6_43
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    List < xClass > list = new ArrayList < xClass > ();
    int elements = new Random ().nextInt (100);
    for (int i = 0;
    i < elements; i ++) {
        list.add (new xClass ());
    }
    xClass [] array = list.toArray (new xClass [list.size ()]);
    System.out.println ("size of array = " + array.length);
}
----------------------------------------

public static void main (String [] args) {
    in = new Scanner (System.in);
    int option, item, i = 1;
    DStack obj = new DStack ();
    obj.Init_Stck (1);
    do {
        System.out.println ();
        System.out.println ("--MENU--");
        System.out.println ("1. Push a Value in The Stack");
        System.out.println ("2. Pop a Value from the Stack");
        System.out.println ("3. Display Stack");
        System.out.println ("4. Exit");
        option = in.nextInt ();
        switch (option) {
            case 1 :
                System.out.println ("Enter the Value to be Pushed");
                item = in.nextInt ();
                obj.push (item);
                break;
            case 2 :
                System.out.println ("Popped Item: " + obj.pop ());
                obj.Change_Stck (obj.tos);
                break;
            case 3 :
                System.out.println ("Displaying...");
                obj.display ();
                break;
            case 4 :
                System.out.println ("Exiting...");
                i = 0;
                break;
            default :
                System.out.println ("Enter a Valid Value");
        }
    } while (i == 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_1647433_7_22
1647260_44298229_7_48
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    List < xClass > list = new ArrayList < xClass > ();
    int elements = new Random ().nextInt (100);
    for (int i = 0;
    i < elements; i ++) {
        list.add (new xClass ());
    }
    xClass [] array = list.toArray (new xClass [list.size ()]);
    System.out.println ("size of array = " + array.length);
}
----------------------------------------

public static void main (String [] args) {
    Object [] obj = new Object [4];
    sc = new Scanner (System.in);
    System.out.println ("enter your element");
    for (int i = 0;
    i < 4; i ++) {
        obj [i] = sc.nextInt ();
    }
    Object [] tempObj = new Object [10];
    int oldArraySize = obj.length;
    int i = 0;
    for (; i < oldArraySize; i ++) {
        tempObj [i] = obj [i];
    }
    tempObj [i] = 90;
    obj = tempObj;
    for (int j = 0;
    j < obj.length; j ++) {
        System.out.println ("obj[" + j + "] -" + obj [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_40815898_4_22
1647260_41970197_6_43
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    value = new Scanner (System.in);
    System.out.println ("Enter the number of tests to calculate average\n");
    int limit = value.nextInt ();
    int index = 0;
    int [] marks = new int [limit];
    float sum, ave;
    sum = 0;
    while (index < limit) {
        int test = index + 1;
        System.out.println ("Enter the marks on test " + test);
        marks [index] = value.nextInt ();
        sum += marks [index];
        index ++;
    }
    ave = sum / limit;
    System.out.println ("The average is: " + ave);
}
----------------------------------------

public static void main (String [] args) {
    in = new Scanner (System.in);
    int option, item, i = 1;
    DStack obj = new DStack ();
    obj.Init_Stck (1);
    do {
        System.out.println ();
        System.out.println ("--MENU--");
        System.out.println ("1. Push a Value in The Stack");
        System.out.println ("2. Pop a Value from the Stack");
        System.out.println ("3. Display Stack");
        System.out.println ("4. Exit");
        option = in.nextInt ();
        switch (option) {
            case 1 :
                System.out.println ("Enter the Value to be Pushed");
                item = in.nextInt ();
                obj.push (item);
                break;
            case 2 :
                System.out.println ("Popped Item: " + obj.pop ());
                obj.Change_Stck (obj.tos);
                break;
            case 3 :
                System.out.println ("Displaying...");
                obj.display ();
                break;
            case 4 :
                System.out.println ("Exiting...");
                i = 0;
                break;
            default :
                System.out.println ("Enter a Valid Value");
        }
    } while (i == 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_40815898_4_22
1647260_44298229_7_48
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    value = new Scanner (System.in);
    System.out.println ("Enter the number of tests to calculate average\n");
    int limit = value.nextInt ();
    int index = 0;
    int [] marks = new int [limit];
    float sum, ave;
    sum = 0;
    while (index < limit) {
        int test = index + 1;
        System.out.println ("Enter the marks on test " + test);
        marks [index] = value.nextInt ();
        sum += marks [index];
        index ++;
    }
    ave = sum / limit;
    System.out.println ("The average is: " + ave);
}
----------------------------------------

public static void main (String [] args) {
    Object [] obj = new Object [4];
    sc = new Scanner (System.in);
    System.out.println ("enter your element");
    for (int i = 0;
    i < 4; i ++) {
        obj [i] = sc.nextInt ();
    }
    Object [] tempObj = new Object [10];
    int oldArraySize = obj.length;
    int i = 0;
    for (; i < oldArraySize; i ++) {
        tempObj [i] = obj [i];
    }
    tempObj [i] = 90;
    obj = tempObj;
    for (int j = 0;
    j < obj.length; j ++) {
        System.out.println ("obj[" + j + "] -" + obj [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1647260_41970197_6_43
1647260_44298229_7_48
Title: Java dynamic array sizes? 
----------------------------------------

public static void main (String [] args) {
    in = new Scanner (System.in);
    int option, item, i = 1;
    DStack obj = new DStack ();
    obj.Init_Stck (1);
    do {
        System.out.println ();
        System.out.println ("--MENU--");
        System.out.println ("1. Push a Value in The Stack");
        System.out.println ("2. Pop a Value from the Stack");
        System.out.println ("3. Display Stack");
        System.out.println ("4. Exit");
        option = in.nextInt ();
        switch (option) {
            case 1 :
                System.out.println ("Enter the Value to be Pushed");
                item = in.nextInt ();
                obj.push (item);
                break;
            case 2 :
                System.out.println ("Popped Item: " + obj.pop ());
                obj.Change_Stck (obj.tos);
                break;
            case 3 :
                System.out.println ("Displaying...");
                obj.display ();
                break;
            case 4 :
                System.out.println ("Exiting...");
                i = 0;
                break;
            default :
                System.out.println ("Enter a Valid Value");
        }
    } while (i == 1);
}
----------------------------------------

public static void main (String [] args) {
    Object [] obj = new Object [4];
    sc = new Scanner (System.in);
    System.out.println ("enter your element");
    for (int i = 0;
    i < 4; i ++) {
        obj [i] = sc.nextInt ();
    }
    Object [] tempObj = new Object [10];
    int oldArraySize = obj.length;
    int i = 0;
    for (; i < oldArraySize; i ++) {
        tempObj [i] = obj [i];
    }
    tempObj [i] = 90;
    obj = tempObj;
    for (int j = 0;
    j < obj.length; j ++) {
        System.out.println ("obj[" + j + "] -" + obj [j]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16475589_16475627_3_11
16475589_16476524_1_22
Title: Remove chars from string in Java from file 
----------------------------------------

public static void main (String [] args) {
    String [] strings = input.split (",");
    int result = 0;
    for (int i = 1;
    i < strings.length; i ++) {
        result += Integer.parseInt (strings [i]);
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String ar []) {
    String s = "kasdkasd,1,2,3,4,5,6,7,8,9,10";
    int sum = 0;
    String [] spl = s.split (",");
    for (int i = 0;
    i < spl.length; i ++) {
        try {
            int x = Integer.parseInt (spl [i]);
            sum = sum + x;
        } catch (NumberFormatException e) {
            System.out.println ("error parsing " + spl [i]);
            System.out.println ("\n the stack of the exception");
            e.printStackTrace ();
            System.out.println ("\n");
        }
    }
    System.out.println ("The sum of the numbers in the string : " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16481563_16481705_1_11
16481563_16482481_1_14
Title: Need help referencing in an array and with number formatting 
----------------------------------------

public static double mostRain (double [] rainFall) {
    double highest = rainFall [0];
    for (int index = 0;
    index < rainFall.length; index ++) {
        if (rainFall [index] > rainFall [highest]) highest = index;

    }
    return highest + 1;
}
----------------------------------------

public static double mostRain (double [] rainFall) {
    double highest = rainFall [0];
    int monthIndex;
    for (int index = 0;
    index < rainFall.length; index ++) {
        if (rainFall [index] > highest) highest = rainFall [index];

        monthIndex = index;
    }
    return monthIndex;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16507299_16508108_1_12
16507299_16509208_1_15
Title: How do you remove the first Node in a Linked List? 
----------------------------------------

public void removeFirst () {
    if (head == null) return;
    else {
        if (head == tail) {
            head = null;
            tail = null;
        } else {
            head = head.next;
        }
    }
}
----------------------------------------

public T removeFirst () throws EmptyCollectionException {
    if (isEmpty ()) throw new EmptyCollectionException ("LinkedList");

    Node < T > temp = contents;
    T next = contents.getNext ().getItem ();
    contents = new Node (next, contents);
    count --;
    return temp.getItem ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16511103_16511145_1_17
16511103_16511173_4_26
Title: How to do Without Replacement In Java 
----------------------------------------

public static void main (String [] args) {
    final int digits = 5;
    final int toGenarate = 10;
    Set < Integer > used = new HashSet < Integer > ();
    int generated = 0;
    while (generated < toGenarate) {
        int number = generate (digits);
        while (used.contains (number)) {
            number = generate (digits);
        }
        used.add (number);
        generated ++;
        System.out.println (number);
    }
}
----------------------------------------

public static void main (String [] a) {
    java.util.Random rnd = new java.util.Random ();
    final int high = 5, low = 1, ll = low - 1;
    int r1 = ll, r2 = ll, r3 = ll;
    r1 = rnd.nextInt (high - 1) + low;
    while (r2 == (ll) || r2 == r1) {
        r2 = rnd.nextInt (high - 1) + low;
    }
    while (r3 == (ll) || r3 == r1 || r2 == r3) {
        r3 = rnd.nextInt (high - 1) + low;
    }
    System.out.println ("r1 " + r1 + "; r2 " + r2 + "; r3 " + r3);
    RandomSet app = new RandomSet ();
    Set t = app.randomSet (5, 1, 3);
    Iterator i = t.iterator ();
    System.out.println (" randomSet ");
    while (i.hasNext ()) {
        System.out.println (" " + i.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16522172_16524941_11_19
16522172_28225221_21_29
Title: How to create passwordfield or hide the password inside table view 
----------------------------------------

protected void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (! isEmpty ()) {
        passwordField.setText (item);
        setGraphic (passwordField);
    } else {
        setGraphic (null);
    }
}
----------------------------------------

protected void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (! empty) {
        label.setText (genDotString (item.length ()));
        setGraphic (label);
    } else {
        setGraphic (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16525679_16525775_1_11
16525679_16528793_1_14
Title: Find values in array and return index 
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    int array [] = new int [600];
    for (int i = 0;
    i < array.length; i ++) {
        if (b.getElem (i) >= value) array [i] = i;

    }
    return array;
}
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    int array [] = new int [600];
    int j = 0;
    for (int i = 0;
    i < b.getSize (); i ++) {
        if (b.getElem (i) >= value) {
            if (j < 600) {
                array [j] = i;
                j ++;
            }
        }
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16525679_16525775_1_11
16525679_17932323_1_17
Title: Find values in array and return index 
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    int array [] = new int [600];
    for (int i = 0;
    i < array.length; i ++) {
        if (b.getElem (i) >= value) array [i] = i;

    }
    return array;
}
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    ArrayList < Integer > a = new ArrayList < > (20);
    int j = 0;
    for (int i = 0;
    i < b.getSize (); i ++) {
        if (b.getElem (i) >= value) {
            a.add (i);
            j ++;
        }
    }
    int array [] = new int [a.size ()];
    for (int k = 0;
    k < a.size (); k ++) {
        array [k] = a.get (k);
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16525679_16528793_1_14
16525679_17932323_1_17
Title: Find values in array and return index 
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    int array [] = new int [600];
    int j = 0;
    for (int i = 0;
    i < b.getSize (); i ++) {
        if (b.getElem (i) >= value) {
            if (j < 600) {
                array [j] = i;
                j ++;
            }
        }
    }
    return array;
}
----------------------------------------

public static int [] findIndex (BufferedImage image, int value) {
    DataBuffer b = image.getRaster ().getDataBuffer ();
    ArrayList < Integer > a = new ArrayList < > (20);
    int j = 0;
    for (int i = 0;
    i < b.getSize (); i ++) {
        if (b.getElem (i) >= value) {
            a.add (i);
            j ++;
        }
    }
    int array [] = new int [a.size ()];
    for (int k = 0;
    k < a.size (); k ++) {
        array [k] = a.get (k);
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16541660_18781173_1_43
16541660_20779205_45_133
Title: Creating a new PDF document using PDFBOX API 
----------------------------------------

public static void drawTable (PDPage page, PDPageContentStream contentStream, float y, float margin, String [] [] content) throws IOException {
    final int rows = content.length;
    final int cols = content [0].length;
    final float rowHeight = 20f;
    final float tableWidth = page.getCropBox ().getWidth () - margin - margin;
    final float tableHeight = rowHeight * rows;
    final float colWidth = tableWidth / (float) cols;
    final float cellMargin = 5f;
    float nexty = y;
    for (int i = 0;
    i <= rows; i ++) {
        contentStream.drawLine (margin, nexty, margin + tableWidth, nexty);
        nexty -= rowHeight;
    }
    float nextx = margin;
    for (int i = 0;
    i <= cols; i ++) {
        contentStream.drawLine (nextx, y, nextx, y - tableHeight);
        nextx += colWidth;
    }
    contentStream.setFont (PDType1Font.HELVETICA_BOLD, 12);
    float textx = margin + cellMargin;
    float texty = y - 15;
    for (int i = 0;
    i < content.length; i ++) {
        for (int j = 0;
        j < content [i].length; j ++) {
            String text = content [i] [j];
            contentStream.beginText ();
            contentStream.moveTextPositionByAmount (textx, texty);
            contentStream.drawString (text);
            contentStream.endText ();
            textx += colWidth;
        }
        texty -= rowHeight;
        textx = margin + cellMargin;
    }
}
----------------------------------------

private static void drawTable (PDPage page, PDPageContentStream contentStream) {
    try {
        float y = 650;
        float margin = 130;
        String [] content = {"One", "Two", "Date", "Score", "Score2", "Score3", "Score4", "Score5", "Score6"};
        final int rows = content.length;
        final int cols = 2;
        final float rowHeight = 22f;
        final float tableWidth = 900.0f;
        final float tableHeight = rowHeight * rows;
        final float cellMargin = 1f;
        float nexty = y;
        for (int i = 0;
        i <= rows; i ++) {
            contentStream.drawLine (margin, nexty, 400, nexty);
            nexty -= rowHeight;
        }
        float colWidthX [] = {200, 70, 0};
        float nextx = margin;
        for (int i = 0;
        i <= cols; i ++) {
            contentStream.drawLine (nextx, y, nextx, y - tableHeight);
            nextx += colWidthX [i];
        }
        float textx = margin + cellMargin;
        float texty = y - 15;
        for (int j = 0;
        j < rows; j ++) {
            contentStream.beginText ();
            contentStream.moveTextPositionByAmount (textx, texty);
            contentStream.drawString (content [j]);
            contentStream.endText ();
            textx += colWidthX [0] + 9;
            contentStream.beginText ();
            contentStream.moveTextPositionByAmount (textx, texty);
            if (j == 0) contentStream.drawString ("1");

            if (j == 1) contentStream.drawString ("12345");

            if (j == 2) contentStream.drawString ("05-December-2003");

            if (j == 3) contentStream.drawString ("15");

            if (j == 4) contentStream.drawString ("1");

            if (j == 5) contentStream.drawString ("1");

            if (j == 6) contentStream.drawString ("1");

            if (j == 7) contentStream.drawString ("1");

            if (j == 8) contentStream.drawString ("1");

            contentStream.endText ();
            textx = margin + cellMargin;
            texty -= rowHeight;
        }
        texty -= rowHeight;
        textx = margin + cellMargin;
    } catch (IOException ioe) {
        final String errormsg = "Could not drawTable ";
        throw new RuntimeException (errormsg, ioe);
    } catch (Exception ex) {
        final String errormsg = "Could not drawTable ";
        throw new RuntimeException (errormsg, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16545075_16545615_6_79
16545075_16563508_109_120
Title: Reference of graphics 2d object doesn't work in orphan Thread 
----------------------------------------

public static void main (String [] args) {
    locationData.add (new Point (5, 25));
    directionData.add (true);
    final JComponent canvas = new JComponent () {
        protected void paintComponent (Graphics g) {
            super.paintComponent (g);
            Graphics2D g2d = (Graphics2D) g;
            for (int i = 0;
            i < locationData.size (); i ++) {
                Point p = locationData.get (i);
                g2d.drawString ("Some string #" + i, p.x, p.y);
            }
        }}

    ;
    canvas.addMouseListener (new MouseAdapter () {
        public void mousePressed (MouseEvent e) {
            locationData.add (e.getPoint ());
            directionData.add (true);
            canvas.repaint ();
        }}

    );
    JFrame frame = new JFrame ();
    frame.getContentPane ().setLayout (new BorderLayout ());
    frame.getContentPane ().add (canvas);
    frame.setSize (500, 500);
    frame.setLocationRelativeTo (null);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setVisible (true);
    Timer timer = new Timer (1000 / 48, new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            for (int i = 0;
            i < locationData.size (); i ++) {
                Point p = locationData.get (i);
                if (directionData.get (i)) {
                    if (p.y < canvas.getHeight () - 1) {
                        p.y += 1;
                    } else {
                        directionData.set (i, false);
                    }
                } else {
                    if (p.y > 20) {
                        p.y -= 1;
                    } else {
                        directionData.set (i, true);
                    }
                }
            }
            canvas.repaint ();
        }}

    );
    timer.start ();
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            new ShapeCollision ();
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16554411_16554439_1_10
16554411_34294855_3_24
Title: Pyramid Pattern using a Loop 
----------------------------------------

public static void main (String [] args) throws IOException {
    System.out.println ("Type in an integer value");
    Scanner in = new Scanner (System.in);
    int input = in.nextInt ();
    String str = "";
    for (int i = 1;
    i <= input; i ++) {
        str += i % 10;
        System.out.println (str);
    }
}
----------------------------------------

public static void main (String [] args) {
    while (true) {
        System.out.println ("Enter Number...");
        Scanner number = new Scanner (System.in);
        int repeat = number.nextInt ();
        int c = 1;
        while (c <= repeat) {
            int a = 1;
            do {
                System.out.print (a + " ");
                a ++;
            } while (a <= c);
            c ++;
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1656197_12060930_2_12
1656197_14882957_5_29
Title: Project Euler #3 Java Solution Problem 
----------------------------------------

public static void main (String [] args) {
    double out = 0;
    double m = 600851475143d;
    for (double n = 3;
    n < m; n += 2) {
        while (m % n == 0) {
            out = n;
            m = m / n;
        }
    }
    System.out.println ("" + ((m == 1) ? out : m));
}
----------------------------------------

public static void main (String args []) {
    Scanner get = new Scanner (System.in);
    System.out.println ("Enter a number");
    long number = get.nextLong ();
    int count = 0;
    long input = number;
    for (long i = number;
    i >= 1; number --) {
        for (long j = number;
        j >= 1; j --) {
            if (i % j == 0) {
                count ++;
            }
            if (count == 2) {
                if (input % j == 0) {
                    System.out.println (j);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16579617_16580424_3_31
16579617_16583981_20_39
Title: Is there any Java API to generate xml at runtime with the input xml schema and key value pair of xpath expressions and data 
----------------------------------------

public static void main (String [] args) {
    try {
        Map map = new HashMap < String, String > ();
        map.put ("cluster", "10.200.111.111");
        map.put ("cluster1", "10.200.121.111");
        MyXML xml = new MyXML ();
        List < Top > top1 = new ArrayList < Top > ();
        Set < String > keys = map.keySet ();
        for (String key : keys) {
            Top top = new Top ();
            top.setMode (key);
            top.setAddress ((String) map.get (key));
            top1.add (top);
        }
        xml.setTop (top1);
        File file = new File ("C:\\kar\\file.xml");
        JAXBContext jaxbContext = JAXBContext.newInstance (MyXML.class);
        Marshaller jaxbMarshaller = jaxbContext.createMarshaller ();
        jaxbMarshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
        jaxbMarshaller.marshal (xml, file);
        jaxbMarshaller.marshal (xml, System.out);
    } catch (Exception ex) {
        System.out.println (ex.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException, ClassCastException {
    try {
        XSModel model = (XSModel) new XSParser ().parse ("c:\\kar\\xs.xsd");
        XMLDocument sample = new XMLDocument (new StreamResult ("c:\\kar\\root3.xml"), false, 4, null);
        QName root = new QName ("root");
        XSInstance instance = new XSInstance ();
        instance.minimumElementsGenerated = 0;
        instance.maximumElementsGenerated = 0;
        instance.generateDefaultAttributes = true;
        instance.generateOptionalAttributes = true;
        instance.maximumRecursionDepth = 0;
        instance.generateOptionalElements = true;
        instance.generate (model, root, sample);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16586562_16591678_152_182
16586562_46026430_69_81
Title: Reordering JList with Drag and Drop 
----------------------------------------

public boolean importData (TransferSupport info) {
    TransferHandler.DropLocation tdl = info.getDropLocation ();
    if (! canImport (info) || ! (tdl instanceof JList.DropLocation)) {
        return false;
    }
    JList.DropLocation dl = (JList.DropLocation) tdl;
    JList target = (JList) info.getComponent ();
    DefaultListModel listModel = (DefaultListModel) target.getModel ();
    int max = listModel.getSize ();
    int index = dl.getIndex ();
    index = index < 0 ? max : index;
    index = Math.min (index, max);
    addIndex = index;
    try {
        Object [] values = (Object []) info.getTransferable ().getTransferData (localObjectFlavor);
        for (int i = 0;
        i < values.length; i ++) {
            int idx = index ++;
            listModel.add (idx, values [i]);
            target.addSelectionInterval (idx, idx);
        }
        addCount = values.length;
        return true;
    } catch (UnsupportedFlavorException | IOException ex) {
        ex.printStackTrace ();
    }
    return false;
}
----------------------------------------

public boolean importData (TransferHandler.TransferSupport support) {
    try {
        String s = (String) support.getTransferable ().getTransferData (DataFlavor.stringFlavor);
        JList.DropLocation dl = (JList.DropLocation) support.getDropLocation ();
        strings.add (dl.getIndex (), s);
        beforeIndex = dl.getIndex () < index ? true : false;
        return true;
    } catch (UnsupportedFlavorException | IOException e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16601318_16601540_28_39
16601318_16602437_5_35
Title: setBackgroundResource doesn't set the image 
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 20; i ++) {
            Thread.sleep (2000);
            Message msg = handler.obtainMessage ();
            msg.arg1 = i;
            msg.sendToTarget ();
        }
    } catch (Throwable t) {
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i <= size - 1; i ++) {
        id = (Integer) sequence.get (i);
        runOnUiThread (new Runnable () {
            @Override
            public void run () {
                sq.get (id - 1).setBackgroundResource (R.drawable.square_show);
            }}

        );
        try {
            Thread.sleep (2000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        runOnUiThread (new Runnable () {
            @Override
            public void run () {
                sq.get (id - 1).setBackgroundResource (R.drawable.square);
            }}

        );
        try {
            Thread.sleep (2000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16602882_16602919_3_16
16602882_16603051_1_11
Title: A compare function for sorting an array of objects in java? 
----------------------------------------

public int compareTo (MyPhoneBook o) {
    int returnValue = 0;
    if (o != null) {
        returnvalue = this.name.compareTo (o.name);
        if (returnValue == 0) {
            returnValue = this.number.compareTo (o.number);
            if (returnValue == 0) {
                returnValue = this.email.compareTo (o.email);
            }
        }
    }
    return returnValue;
}
----------------------------------------

public int compareTo (MyPhoneBook o) {
    int nameComparison = name.compareTo (o.name);
    if (nameComparison != 0) {
        return nameComparison;
    }
    int emailComparison = email.compareTo (o.email);
    if (emailComparison != 0) {
        return emailComparison;
    }
    return number.compareTo (o.number);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16612872_16613121_1_16
16612872_16613205_6_22
Title: How would I tidy this code into a loop in java? 
----------------------------------------

public String handleTag (String buf, String [] attrList) {
    StringBuilder temp = new StringBuilder ();
    final String [] prefix = {"BLOPABP", "\nBLOPCALL", "\nBLOPEXP", "\nBLOPHEAD", "\nBLOPMAJ"};
    for (int i = 0;
    i < attrList.length; i ++) {
        String startPattern = START + attrList [i] + "><![CDATA[";
        String endPattern = END + attrList [i] + "><![CDATA[";
        String extract = new String (buf);
        extract = extract.substring (extract.indexOf (startPattern) + startPattern.length (), extract.indexOf (endPattern));
        temp.append (prefix [i % 5] + extract);
    }
    return temp.toString ();
}
----------------------------------------

public String handleTag (String buf, String [] attrList) {
    String [] blop = {"BLOPABP", "BLOPCALL", "BLOPEXP", "BLOPHEAD", "BLOPMAJ"};
    String s = "";
    for (int i = 0;
    i < attrList.length; i ++) {
        String startPattern = START + attrList [i] + "><![CDATA[";
        String endPattern = END + attrList [i] + "><![CDATA[";
        String extract = buf.substring (buf.indexOf (startPattern) + startPattern.length (), buf.indexOf (endPattern));
        s += blop [i] + extract;
        if (i < attrList.length - 1) {
            s += "\n";
        }
    }
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16616560_16617716_1_26
16616560_16617785_1_27
Title: Is there a simple way to split ONE list into X sublists? 
----------------------------------------

public static < T > List < List < T > > split (List < T > list, int size) throws NullPointerException, IllegalArgumentException {
    if (list == null) {
        throw new NullPointerException ("The list parameter is null.");
    }
    if (size <= 0) {
        throw new IllegalArgumentException ("The size parameter must be more than 0.");
    }
    List < List < T > > result = new ArrayList < List < T > > (size);
    for (int i = 0;
    i < size; i ++) {
        result.add (new ArrayList < T > ());
    }
    int index = 0;
    for (T t : list) {
        result.get (index).add (t);
        index = (index + 1) % size;
    }
    return result;
}
----------------------------------------

public static < T > List < List < T > > split (List < T > list, int numberOfLists) {
    if (list == null) {
        throw new NullPointerException ("The list parameter is null.");
    }
    if (numberOfLists <= 0) {
        throw new IllegalArgumentException ("The number of lists parameter must be more than 0.");
    }
    int sizeOfSubList = list.size () / numberOfLists + 1;
    int remainder = list.size () % numberOfLists;
    List < List < T > > subLists = new ArrayList < List < T > > (numberOfLists);
    for (int i = 0;
    i < numberOfLists - remainder; i ++) {
        subLists.add (list.subList (i * sizeOfSubList, (i + 1) * sizeOfSubList));
    }
    sizeOfSubList --;
    for (int i = numberOfLists - remainder;
    i < numberOfLists; i ++) {
        subLists.add (list.subList (i * sizeOfSubList, (i + 1) * sizeOfSubList));
    }
    return subLists;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16625220_16625257_5_14
16625220_16625874_32_43
Title: Java/ Efficient way to find all permutation of lists 
----------------------------------------

public void cartesian (int [] [] lists, int [] values, int n) {
    if (n == lists.length) {
        System.out.println (Arrays.toString (values));
    } else {
        for (int i : lists [n]) {
            values [n] = i;
            cartesian (lists, values, n + 1);
        }
    }
}
----------------------------------------

static public void cartesian (List < List < Integer > > list, int n, Integer [] tmpResult, List < List < Integer > > result) {
    if (n == list.size ()) {
        result.add (new ArrayList < Integer > (Arrays.asList (tmpResult)));
        return;
    }
    for (Integer i : list.get (n)) {
        tmpResult [n] = i;
        cartesian (list, n + 1, tmpResult, result);
    }
}
----------------------------------------
