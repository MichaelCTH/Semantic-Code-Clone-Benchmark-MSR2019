$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10789213_10789287_16_32
10789213_10789287_54_64
Title: java pipe/process builder not working with cmd.exe 
----------------------------------------

public void run () {
    try {
        out.append ("sometext");
        out.write ("Some Text!\n\n");
        out.flush ();
        out.write ("Second Line...\n");
        out.flush ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            out.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        String line = "";
        while ((line = err.readLine ()) != null) {
            System.err.println ("err: " + line);
        }
        inp.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10789213_10789287_35_51
10789213_10789287_54_64
Title: java pipe/process builder not working with cmd.exe 
----------------------------------------

public void run () {
    try {
        String line = "";
        while ((line = inp.readLine ()) != null) {
            System.out.println ("response1: " + line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            inp.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        String line = "";
        while ((line = err.readLine ()) != null) {
            System.err.println ("err: " + line);
        }
        inp.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10791568_10791579_1_12
10791568_10791597_1_10
Title: Calculating average of an array list? 
----------------------------------------

private double calculateAverage (List < Integer > marks) {
    if (marks == null || marks.isEmpty ()) {
        return 0;
    }
    double sum = 0;
    for (Integer mark : marks) {
        sum += mark;
    }
    return sum / marks.size ();
}
----------------------------------------

private double calculateAverage (List < Integer > marks) {
    Integer sum = 0;
    if (! marks.isEmpty ()) {
        for (Integer mark : marks) {
            sum += mark;
        }
        return sum.doubleValue () / marks.size ();
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10791568_10791579_1_12
10791568_31313673_1_10
Title: Calculating average of an array list? 
----------------------------------------

private double calculateAverage (List < Integer > marks) {
    if (marks == null || marks.isEmpty ()) {
        return 0;
    }
    double sum = 0;
    for (Integer mark : marks) {
        sum += mark;
    }
    return sum / marks.size ();
}
----------------------------------------

public static BigDecimal calculateAverage (final List < Integer > values) {
    int sum = 0;
    if (! values.isEmpty ()) {
        for (final Integer v : values) {
            sum += v;
        }
        return new BigDecimal (sum).divide (new BigDecimal (values.size ()), 2, RoundingMode.HALF_UP);
    }
    return BigDecimal.ZERO;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10791568_10791597_1_10
10791568_31313673_1_10
Title: Calculating average of an array list? 
----------------------------------------

private double calculateAverage (List < Integer > marks) {
    Integer sum = 0;
    if (! marks.isEmpty ()) {
        for (Integer mark : marks) {
            sum += mark;
        }
        return sum.doubleValue () / marks.size ();
    }
    return sum;
}
----------------------------------------

public static BigDecimal calculateAverage (final List < Integer > values) {
    int sum = 0;
    if (! values.isEmpty ()) {
        for (final Integer v : values) {
            sum += v;
        }
        return new BigDecimal (sum).divide (new BigDecimal (values.size ()), 2, RoundingMode.HALF_UP);
    }
    return BigDecimal.ZERO;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10792840_10793023_1_44
10792840_10793053_3_20
Title: "Understanding ""priority"" in java threads" 
----------------------------------------

public static void main (String [] args) {
    Thread r = Thread.currentThread ();
    r.setPriority (Thread.MAX_PRIORITY);
    List < NewThread > hiThreads = new LinkedList < NewThread > ();
    List < NewThread > lowThreads = new LinkedList < NewThread > ();
    for (int i = 0;
    i < 10; i ++) {
        NewThread hi = new NewThread (Thread.NORM_PRIORITY + 2);
        NewThread lo = new NewThread (Thread.NORM_PRIORITY - 2);
        hiThreads.add (hi);
        lowThreads.add (lo);
        hi.start ();
        lo.start ();
    }
    try {
        r.sleep (30000);
    } catch (InterruptedException e) {
        System.out.println ("caught");
    }
    for (NewThread h : hiThreads) {
        h.stop ();
    }
    for (NewThread l : lowThreads) {
        l.stop ();
    }
    try {
        for (NewThread h : hiThreads) {
            h.t.join ();
        }
        for (NewThread l : lowThreads) {
            l.t.join ();
        }
    } catch (InterruptedException e) {
        System.out.println ("cau1");
    }
    long hiClicker = 0l;
    for (NewThread h : hiThreads) {
        hiClicker += h.clicker;
    }
    long lowClicker = 0l;
    for (NewThread l : lowThreads) {
        lowClicker += l.clicker;
    }
    System.out.println ("hi = " + hiClicker + " lo=" + lowClicker);
}
----------------------------------------

public static void main (String [] args) {
    Thread r = Thread.currentThread ();
    r.setPriority (Thread.MAX_PRIORITY);
    NewThread hi = new NewThread (Thread.MAX_PRIORITY);
    NewThread lo = new NewThread (Thread.MIN_PRIORITY);
    hi.start ();
    lo.start ();
    try {
        r.sleep (5000);
    } catch (InterruptedException e) {
        System.out.println ("caught");
    }
    hi.interrupt ();
    lo.interrupt ();
    System.out.println ("hi=" + hi.clicker);
    System.out.println ("lo=" + lo.clicker);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10815646_10843369_11_24
10815646_10843369_42_51
Title: "Java: Daemon: thread.join() not finishing when Exception was thrown before in one thread" 
----------------------------------------

public void run () {
    other = new Other ();
    thread = new Thread (other);
    thread.start ();
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("main");
        try {
            Thread.sleep (100);
        } catch (InterruptedException e) {
            System.out.println ("interrupted waiting for sleep in main");
        }
    }
    stop ();
}
----------------------------------------

public void run () {
    while (! stopping) {
        System.out.println ("other");
        try {
            Thread.sleep (100);
        } catch (InterruptedException e) {
            System.out.println ("interrupted waiting for sleep in other");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10816032_10816478_2_14
10816032_10816549_1_12
Title: Make this loop simple (print Letter J in Java using loop) 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 14; i ++) {
        for (int j = 1;
        j <= 4; j ++) System.out.print ("*");

        if (i == 1 || i == 14) for (int k = 1;
        k <= 7; k ++) System.out.print ("*");

        if (i == 2 || i == 13) for (int k = 1;
        k <= 9; k ++) System.out.print ("*");

        if (i > 2 && i < 13) {
            for (int j = 0;
            j < 10 - Math.abs (i - 7.5); j ++) System.out.print (" ");

            for (int j = 0;
            j < 4; j ++) System.out.print ("*");

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    printAsterisks (11, true);
    printAsterisks (13, true);
    for (int i = 6;
    i < 10; i ++) {
        printSpaced (i);
    }
    for (int i = 10;
    i > 5; i --) {
        printSpaced (i);
    }
    printAsterisks (13, true);
    printAsterisks (11, true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10836832_10836833_20_41
10836832_10839584_28_50
Title: Show an animated BG in Swing 
----------------------------------------

public static void main (String [] args) throws Exception {
    URL url = new URL ("http://i.stack.imgur.com/iQFxo.gif");
    final Image image = new ImageIcon (url).getImage ();
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame f = new JFrame ("Image");
            f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            f.setLocationByPlatform (true);
            ImagePanel imagePanel = new ImagePanel (image);
            imagePanel.setLayout (new GridLayout (5, 10, 10, 10));
            imagePanel.setBorder (new EmptyBorder (20, 20, 20, 20));
            for (int ii = 1;
            ii < 51; ii ++) {
                imagePanel.add (new JButton ("" + ii));
            }
            f.setContentPane (imagePanel);
            f.pack ();
            f.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws MalformedURLException {
    final URL url = new URL ("http://pscode.org/media/starzoom-thumb.gif");
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame f = new JFrame ("Image");
            f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            f.setLocationByPlatform (true);
            Image image = f.getToolkit ().createImage (url);
            ImagePanel imagePanel = new ImagePanel (image);
            imagePanel.setLayout (new GridLayout (5, 10, 10, 10));
            imagePanel.setBorder (new EmptyBorder (20, 20, 20, 20));
            for (int ii = 1;
            ii < 51; ii ++) {
                imagePanel.add (new JButton ("" + ii));
            }
            f.setContentPane (imagePanel);
            f.pack ();
            f.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10836832_10836833_24_39
10836832_10839584_32_48
Title: Show an animated BG in Swing 
----------------------------------------

public void run () {
    JFrame f = new JFrame ("Image");
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLocationByPlatform (true);
    ImagePanel imagePanel = new ImagePanel (image);
    imagePanel.setLayout (new GridLayout (5, 10, 10, 10));
    imagePanel.setBorder (new EmptyBorder (20, 20, 20, 20));
    for (int ii = 1;
    ii < 51; ii ++) {
        imagePanel.add (new JButton ("" + ii));
    }
    f.setContentPane (imagePanel);
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public void run () {
    JFrame f = new JFrame ("Image");
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLocationByPlatform (true);
    Image image = f.getToolkit ().createImage (url);
    ImagePanel imagePanel = new ImagePanel (image);
    imagePanel.setLayout (new GridLayout (5, 10, 10, 10));
    imagePanel.setBorder (new EmptyBorder (20, 20, 20, 20));
    for (int ii = 1;
    ii < 51; ii ++) {
        imagePanel.add (new JButton ("" + ii));
    }
    f.setContentPane (imagePanel);
    f.pack ();
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10841760_10903612_258_266
10841760_10903612_269_288
Title: LinkedBlockingQueue with fast contains(Object o) method? 
----------------------------------------

public boolean offer (E e) {
    synchronized (this) {
        if (contents.containsKey (e)) return false;

        enqueue (e);
        contents.notifyAll ();
    }
    return true;
}
----------------------------------------

public boolean offer (E e, long timeout, TimeUnit unit) throws InterruptedException {
    long remainingSleep = - 1;
    long millis = unit.toMillis (timeout);
    long methodCalled = System.currentTimeMillis ();
    synchronized (this) {
        while ((remainingSleep = (methodCalled + millis) - System.currentTimeMillis ()) > 0 && (remainingCapacity () < 1 || contents.containsKey (e))) {
            contents.wait (remainingSleep);
        }
        if (remainingSleep < 1) return false;

        enqueue (e);
        contents.notifyAll ();
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10841760_10903612_347_355
10841760_10903612_517_530
Title: LinkedBlockingQueue with fast contains(Object o) method? 
----------------------------------------

public boolean remove (Object o) {
    synchronized (this) {
        Node n = contents.get (o);
        if (n == null) return false;

        removeNode (n, true);
    }
    return true;
}
----------------------------------------

public void remove () {
    synchronized (HashedLinkedBlockingQueue.this) {
        if (current == null || ! contents.containsKey (current.element)) throw new NoSuchElementException ();

        Node n = current;
        current = current.next;
        if (current != null && contents.containsKey (current.element)) currentElement = current.element;
        else currentElement = null;

        removeNode (n, true);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10849758_10858146_42_52
10849758_10858146_62_72
Title: Need to understand wait() and notify() behavior in my example? 
----------------------------------------

public void run () {
    int i = 0;
    try {
        while (true) {
            q.put (i ++);
            System.out.println ("put(" + (i - 1) + ")");
        }
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            int i;
            i = q.get ();
            System.out.println ("get(" + i + ")");
        }
    } catch (InterruptedException ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10854928_10854955_3_24
10854928_25107521_7_18
Title: Reading a string with new lines from console java 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter your name: ");
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String userName = null;
    try {
        userName = br.readLine ();
    } catch (IOException ioe) {
        System.out.println ("IO error trying to read your name!");
        System.exit (1);
    }
    System.out.println ("Thanks for the name, " + userName);
}
----------------------------------------

public static void main (String [] args) {
    SearchInputText sit = new SearchInputText ();
    try {
        System.out.println ("test");
        sit.searchFromRecord ("input.txt");
        System.out.println ("test2");
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_10858030_1_12
10857913_23775183_1_25
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

private String mirrorEnds (String string) {
    final char [] chars = string.toCharArray ();
    final int n = chars.length;
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        if (chars [i] != chars [n - i - 1]) break;

        sb.append (chars [i]);
    }
    return sb.toString ();
}
----------------------------------------

public String mirrorEnds (String string) {
    String s = "";
    String str = "";
    for (int i = string.length () - 1;
    i >= 0; i --) {
        s = s + string.charAt (i);
    }
    for (int j = 0;
    j < string.length (); j ++) {
        if (s.charAt (j) == string.charAt (j)) {
            str = str + string.charAt (j);
        }
        if (s.charAt (j) != string.charAt (j)) {
            break;
        }
    }
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_10858030_1_12
10857913_24534055_1_15
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

private String mirrorEnds (String string) {
    final char [] chars = string.toCharArray ();
    final int n = chars.length;
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        if (chars [i] != chars [n - i - 1]) break;

        sb.append (chars [i]);
    }
    return sb.toString ();
}
----------------------------------------

public String mirrorEnds (String str) {
    String res = "";
    int count = str.length () - 1;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == str.charAt (count)) res += str.substring (i, i + 1);
        else break;

        count --;
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_10858030_1_12
10857913_29483020_1_13
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

private String mirrorEnds (String string) {
    final char [] chars = string.toCharArray ();
    final int n = chars.length;
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        if (chars [i] != chars [n - i - 1]) break;

        sb.append (chars [i]);
    }
    return sb.toString ();
}
----------------------------------------

public String mirrorEnds (String string) {
    String reversed = reverseString (string);
    String result = "";
    for (int a = 0;
    a < string.length (); a ++) {
        if (string.charAt (a) == reversed.charAt (a)) {
            result += string.charAt (a);
        } else if (string.charAt (a) != reversed.charAt (a)) {
            break;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_10858030_1_12
10857913_41276061_1_25
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

private String mirrorEnds (String string) {
    final char [] chars = string.toCharArray ();
    final int n = chars.length;
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n; i ++) {
        if (chars [i] != chars [n - i - 1]) break;

        sb.append (chars [i]);
    }
    return sb.toString ();
}
----------------------------------------

public String mirrorEnds (String string) {
    String ret = "";
    for (int i = 0;
    i < string.length (); i ++) {
        char one = string.charAt (i);
        char two = string.charAt (string.length () - 1 - i);
        if (one == two) {
            ret = ret + one;
        } else {
            break;
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_23775183_1_25
10857913_24534055_1_15
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String string) {
    String s = "";
    String str = "";
    for (int i = string.length () - 1;
    i >= 0; i --) {
        s = s + string.charAt (i);
    }
    for (int j = 0;
    j < string.length (); j ++) {
        if (s.charAt (j) == string.charAt (j)) {
            str = str + string.charAt (j);
        }
        if (s.charAt (j) != string.charAt (j)) {
            break;
        }
    }
    return str;
}
----------------------------------------

public String mirrorEnds (String str) {
    String res = "";
    int count = str.length () - 1;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == str.charAt (count)) res += str.substring (i, i + 1);
        else break;

        count --;
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_23775183_1_25
10857913_29483020_1_13
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String string) {
    String s = "";
    String str = "";
    for (int i = string.length () - 1;
    i >= 0; i --) {
        s = s + string.charAt (i);
    }
    for (int j = 0;
    j < string.length (); j ++) {
        if (s.charAt (j) == string.charAt (j)) {
            str = str + string.charAt (j);
        }
        if (s.charAt (j) != string.charAt (j)) {
            break;
        }
    }
    return str;
}
----------------------------------------

public String mirrorEnds (String string) {
    String reversed = reverseString (string);
    String result = "";
    for (int a = 0;
    a < string.length (); a ++) {
        if (string.charAt (a) == reversed.charAt (a)) {
            result += string.charAt (a);
        } else if (string.charAt (a) != reversed.charAt (a)) {
            break;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_23775183_1_25
10857913_41276061_1_25
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String string) {
    String s = "";
    String str = "";
    for (int i = string.length () - 1;
    i >= 0; i --) {
        s = s + string.charAt (i);
    }
    for (int j = 0;
    j < string.length (); j ++) {
        if (s.charAt (j) == string.charAt (j)) {
            str = str + string.charAt (j);
        }
        if (s.charAt (j) != string.charAt (j)) {
            break;
        }
    }
    return str;
}
----------------------------------------

public String mirrorEnds (String string) {
    String ret = "";
    for (int i = 0;
    i < string.length (); i ++) {
        char one = string.charAt (i);
        char two = string.charAt (string.length () - 1 - i);
        if (one == two) {
            ret = ret + one;
        } else {
            break;
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_24534055_1_15
10857913_29483020_1_13
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String str) {
    String res = "";
    int count = str.length () - 1;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == str.charAt (count)) res += str.substring (i, i + 1);
        else break;

        count --;
    }
    return res;
}
----------------------------------------

public String mirrorEnds (String string) {
    String reversed = reverseString (string);
    String result = "";
    for (int a = 0;
    a < string.length (); a ++) {
        if (string.charAt (a) == reversed.charAt (a)) {
            result += string.charAt (a);
        } else if (string.charAt (a) != reversed.charAt (a)) {
            break;
        }

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_24534055_1_15
10857913_41276061_1_25
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String str) {
    String res = "";
    int count = str.length () - 1;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == str.charAt (count)) res += str.substring (i, i + 1);
        else break;

        count --;
    }
    return res;
}
----------------------------------------

public String mirrorEnds (String string) {
    String ret = "";
    for (int i = 0;
    i < string.length (); i ++) {
        char one = string.charAt (i);
        char two = string.charAt (string.length () - 1 - i);
        if (one == two) {
            ret = ret + one;
        } else {
            break;
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10857913_29483020_1_13
10857913_41276061_1_25
Title: mirrorEnds puzzle gives no clue to error 
----------------------------------------

public String mirrorEnds (String string) {
    String reversed = reverseString (string);
    String result = "";
    for (int a = 0;
    a < string.length (); a ++) {
        if (string.charAt (a) == reversed.charAt (a)) {
            result += string.charAt (a);
        } else if (string.charAt (a) != reversed.charAt (a)) {
            break;
        }

    }
    return result;
}
----------------------------------------

public String mirrorEnds (String string) {
    String ret = "";
    for (int i = 0;
    i < string.length (); i ++) {
        char one = string.charAt (i);
        char two = string.charAt (string.length () - 1 - i);
        if (one == two) {
            ret = ret + one;
        } else {
            break;
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1086123_1086134_1_17
1086123_44189841_3_19
Title: String conversion to Title Case 
----------------------------------------

public static String toTitleCase (String input) {
    StringBuilder titleCase = new StringBuilder ();
    boolean nextTitleCase = true;
    for (char c : input.toCharArray ()) {
        if (Character.isSpaceChar (c)) {
            nextTitleCase = true;
        } else if (nextTitleCase) {
            c = Character.toTitleCase (c);
            nextTitleCase = false;
        }

        titleCase.append (c);
    }
    return titleCase.toString ();
}
----------------------------------------

public static String toTitleCase (String input) {
    StringBuilder titleCase = new StringBuilder ();
    boolean nextTitleCase = true;
    for (char c : input.toLowerCase ().toCharArray ()) {
        if (! Character.isLetterOrDigit (c)) {
            nextTitleCase = true;
        } else if (nextTitleCase) {
            c = Character.toTitleCase (c);
            nextTitleCase = false;
        }

        titleCase.append (c);
    }
    return titleCase.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10862760_10862931_35_43
10862760_10862971_24_34
Title: Linked ComboBoxes 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String item = (String) mainComboBox.getSelectedItem ();
    Object o = subItems.get (item);
    if (o == null) {
        subComboBox.setModel (new DefaultComboBoxModel ());
    } else {
        subComboBox.setModel (new DefaultComboBoxModel ((String []) o));
    }
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    NewComboBox combo = (NewComboBox) evt.getSource ();
    String selection = combo.getSelectedItem ().toString ();
    for (int i = 0;
    i < comboBoxes.length; i ++) {
        NewComboBox comboI = comboBoxes [i];
        if (comboI != combo && comboI.getSelectedItem ().equals (selection)) {
            comboI.setSelectedItem (combo.getPreviousSelectedItem ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10866205_31862238_12_31
10866205_37016599_9_40
Title: 2 dimensional array list 
----------------------------------------

public static void main (String [] args) {
    List < List < Integer > > triangle = new ArrayList < List < Integer > > ();
    List < Integer > row1 = new ArrayList < Integer > (1);
    row1.add (2);
    triangle.add (row1);
    List < Integer > row2 = new ArrayList < Integer > (2);
    row2.add (3);
    row2.add (4);
    triangle.add (row2);
    triangle.add (Arrays.asList (6, 5, 7));
    triangle.add (Arrays.asList (4, 1, 8, 3));
    System.out.println ("Size = " + triangle.size ());
    for (int i = 0;
    i < triangle.size (); i ++) System.out.println (triangle.get (i));

}
----------------------------------------

public static void main (String [] args) {
    List < Box > boxes = new ArrayList < > ();
    Box stuff = new Box ();
    stuff.setAString ("This is my stuff");
    stuff.addString ("My Stuff 01");
    stuff.addInteger (1);
    boxes.add (stuff);
    Box otherStuff = new Box ();
    otherStuff.setAString ("This is my other stuff");
    otherStuff.addString ("My Other Stuff 01");
    otherStuff.addInteger (1);
    otherStuff.addString ("My Other Stuff 02");
    otherStuff.addInteger (2);
    boxes.add (otherStuff);
    for (Box box : boxes) {
        System.out.println (box.getAString ());
        System.out.println (box.getMyStrings ().size ());
        System.out.println (box.getMyIntegers ().size ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10866965_10868115_3_25
10866965_13315759_8_24
Title: count specific characters in a string (Java) 
----------------------------------------

public static void main (String [] args) {
    String s = "BUNANA";
    String lower = s.toLowerCase ();
    char [] c = lower.toCharArray ();
    int [] freq = new int [26];
    for (int i = 0;
    i < c.length; i ++) {
        if (c [i] <= 122) {
            if (c [i] >= 97) {
                freq [(c [i] - 97)] ++;
            }
        }
    }
    System.out.println ("Total chars " + c.length);
    for (int i = 0;
    i < 26; i ++) {
        if (freq [i] != 0) System.out.println (((char) (i + 97)) + "\t" + freq [i]);

    }
}
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    String test = "BUNANA";
    char [] chars = test.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        if (! map.containsKey (chars [i])) {
            map.put (chars [i], 1);
        }
        map.put (chars [i], map.get (chars [i]) + 1);
    }
    System.out.println (map.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10866965_10868115_3_25
10866965_16244475_2_23
Title: count specific characters in a string (Java) 
----------------------------------------

public static void main (String [] args) {
    String s = "BUNANA";
    String lower = s.toLowerCase ();
    char [] c = lower.toCharArray ();
    int [] freq = new int [26];
    for (int i = 0;
    i < c.length; i ++) {
        if (c [i] <= 122) {
            if (c [i] >= 97) {
                freq [(c [i] - 97)] ++;
            }
        }
    }
    System.out.println ("Total chars " + c.length);
    for (int i = 0;
    i < 26; i ++) {
        if (freq [i] != 0) System.out.println (((char) (i + 97)) + "\t" + freq [i]);

    }
}
----------------------------------------

public static void main (String args []) {
    String s = "america";
    int len = s.length ();
    char [] c = s.toCharArray ();
    int ct = 0;
    for (int i = 0;
    i < len; i ++) {
        ct = 1;
        for (int j = i + 1;
        j < len; j ++) {
            if (c [i] == ' ') break;

            if (c [i] == c [j]) {
                ct ++;
                c [j] = ' ';
            }
        }
        if (c [i] != ' ') System.out.println ("number of occurance(s) of " + c [i] + ":" + ct);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10866965_13315759_8_24
10866965_16244475_2_23
Title: count specific characters in a string (Java) 
----------------------------------------

public static void main (String [] args) {
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    String test = "BUNANA";
    char [] chars = test.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        if (! map.containsKey (chars [i])) {
            map.put (chars [i], 1);
        }
        map.put (chars [i], map.get (chars [i]) + 1);
    }
    System.out.println (map.toString ());
}
----------------------------------------

public static void main (String args []) {
    String s = "america";
    int len = s.length ();
    char [] c = s.toCharArray ();
    int ct = 0;
    for (int i = 0;
    i < len; i ++) {
        ct = 1;
        for (int j = i + 1;
        j < len; j ++) {
            if (c [i] == ' ') break;

            if (c [i] == c [j]) {
                ct ++;
                c [j] = ' ';
            }
        }
        if (c [i] != ' ') System.out.println ("number of occurance(s) of " + c [i] + ":" + ct);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869475_5_48
10869242_10869587_1_23
Title: Making Thread just wait 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                while (true) {
                    while (i == 1) {
                        System.out.println ("I'm doing something");
                        Thread.sleep (5);
                    }
                    while (i == 0) {
                        System.out.println ("I'm waiting");
                        Thread.sleep (5);
                    }
                }
            } catch (InterruptedException ex) {
                System.out.println ("I was interrupted: bye bye");
                return;
            }
        }}

    ;
    Thread t = new Thread (r);
    t.start ();
    i = 1;
    System.out.println ("i=1");
    Thread.sleep (10);
    i = 0;
    System.out.println ("i=0");
    Thread.sleep (10);
    i = 1;
    System.out.println ("i=1");
    Thread.sleep (10);
    i = 0;
    System.out.println ("i=0");
    Thread.sleep (10);
    t.interrupt ();
    System.out.println ("interrupting");
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final CountDownLatch latch = new CountDownLatch (1);
    System.out.println ("Starting main thread");
    new Thread (new Runnable () {
        public void run () {
            System.out.println ("Starting second thread");
            System.out.println ("Waiting in second thread");
            try {
                latch.await ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            System.out.println ("Stopping second thread");
        }}

    ).start ();
    Thread.sleep (5000);
    System.out.println ("Countdown in main thread");
    latch.countDown ();
    Thread.sleep (1000);
    System.out.println ("Stopping main thread");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869475_5_48
10869242_10870277_43_55
Title: Making Thread just wait 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                while (true) {
                    while (i == 1) {
                        System.out.println ("I'm doing something");
                        Thread.sleep (5);
                    }
                    while (i == 0) {
                        System.out.println ("I'm waiting");
                        Thread.sleep (5);
                    }
                }
            } catch (InterruptedException ex) {
                System.out.println ("I was interrupted: bye bye");
                return;
            }
        }}

    ;
    Thread t = new Thread (r);
    t.start ();
    i = 1;
    System.out.println ("i=1");
    Thread.sleep (10);
    i = 0;
    System.out.println ("i=0");
    Thread.sleep (10);
    i = 1;
    System.out.println ("i=1");
    Thread.sleep (10);
    i = 0;
    System.out.println ("i=0");
    Thread.sleep (10);
    t.interrupt ();
    System.out.println ("interrupting");
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    StartPauseDemo sp = new StartPauseDemo ();
    sp.start ();
    while (true) {
        System.out.println ("pausing");
        sp.pause ();
        TimeUnit.SECONDS.sleep (1);
        System.out.println ("unpausing");
        sp.unPause ();
        TimeUnit.SECONDS.sleep (1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869475_9_27
10869242_10869587_5_14
Title: Making Thread just wait 
----------------------------------------

public void run () {
    try {
        while (true) {
            while (i == 1) {
                System.out.println ("I'm doing something");
                Thread.sleep (5);
            }
            while (i == 0) {
                System.out.println ("I'm waiting");
                Thread.sleep (5);
            }
        }
    } catch (InterruptedException ex) {
        System.out.println ("I was interrupted: bye bye");
        return;
    }
}
----------------------------------------

public void run () {
    System.out.println ("Starting second thread");
    System.out.println ("Waiting in second thread");
    try {
        latch.await ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Stopping second thread");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869475_9_27
10869242_10870277_16_40
Title: Making Thread just wait 
----------------------------------------

public void run () {
    try {
        while (true) {
            while (i == 1) {
                System.out.println ("I'm doing something");
                Thread.sleep (5);
            }
            while (i == 0) {
                System.out.println ("I'm waiting");
                Thread.sleep (5);
            }
        }
    } catch (InterruptedException ex) {
        System.out.println ("I was interrupted: bye bye");
        return;
    }
}
----------------------------------------

public void run () {
    while (i == 1) {
        System.out.println (System.currentTimeMillis ());
        try {
            TimeUnit.MILLISECONDS.sleep (200);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        if (i == 0) {
            synchronized (this) {
                try {
                    wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869587_1_23
10869242_10870277_43_55
Title: Making Thread just wait 
----------------------------------------

public static void main (String [] args) throws Exception {
    final CountDownLatch latch = new CountDownLatch (1);
    System.out.println ("Starting main thread");
    new Thread (new Runnable () {
        public void run () {
            System.out.println ("Starting second thread");
            System.out.println ("Waiting in second thread");
            try {
                latch.await ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            System.out.println ("Stopping second thread");
        }}

    ).start ();
    Thread.sleep (5000);
    System.out.println ("Countdown in main thread");
    latch.countDown ();
    Thread.sleep (1000);
    System.out.println ("Stopping main thread");
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    StartPauseDemo sp = new StartPauseDemo ();
    sp.start ();
    while (true) {
        System.out.println ("pausing");
        sp.pause ();
        TimeUnit.SECONDS.sleep (1);
        System.out.println ("unpausing");
        sp.unPause ();
        TimeUnit.SECONDS.sleep (1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10869242_10869587_5_14
10869242_10870277_16_40
Title: Making Thread just wait 
----------------------------------------

public void run () {
    System.out.println ("Starting second thread");
    System.out.println ("Waiting in second thread");
    try {
        latch.await ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("Stopping second thread");
}
----------------------------------------

public void run () {
    while (i == 1) {
        System.out.println (System.currentTimeMillis ());
        try {
            TimeUnit.MILLISECONDS.sleep (200);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        if (i == 0) {
            synchronized (this) {
                try {
                    wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10879658_10971402_18_41
10879658_10971402_1_16
Title: Existing implementations for NIST SP 800-56A Concatenation/Single-Step Key Derivation Function? 
----------------------------------------

public byte [] concatKDF (String hashAlg, byte [] z, int keyDataLen, byte [] otherInfo) throws NoSuchAlgorithmException {
    byte [] key = new byte [keyDataLen];
    MessageDigest md = MessageDigest.getInstance (hashAlg);
    int hashLen = md.getDigestLength ();
    int reps = keyDataLen / hashLen;
    for (int i = 1;
    i <= reps; i ++) {
        md.reset ();
        md.update (intToFourBytes (i));
        md.update (z);
        md.update (otherInfo);
        byte [] hash = md.digest ();
        if (i < reps) {
            System.arraycopy (hash, 0, key, hashLen * (i - 1), hashLen);
        } else {
            if (keyDataLen % hashLen == 0) {
                System.arraycopy (hash, 0, key, hashLen * (i - 1), hashLen);
            } else {
                System.arraycopy (hash, 0, key, hashLen * (i - 1), keyDataLen % hashLen);
            }
        }
    }
    return key;
}
----------------------------------------

public byte [] concatKDF (String hashAlg, byte [] z, int keyDataLen, byte [] algorithmID, byte [] partyUInfo, byte [] partyVInfo, byte [] suppPubInfo, byte [] suppPrivInfo) throws NoSuchAlgorithmException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream ();
    try {
        baos.write (algorithmID);
        baos.write (partyUInfo);
        baos.write (partyVInfo);
        baos.write (suppPubInfo);
        baos.write (suppPrivInfo);
    } catch (IOException e) {
        throw new RuntimeException (e);
    }
    byte [] otherInfo = baos.toByteArray ();
    return concatKDF (hashAlg, z, keyDataLen, otherInfo);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10886789_10895134_18_66
10886789_38649590_17_74
Title: SWT How to print contents of a scrolledComposite? 
----------------------------------------

public static void main (String [] args) {
    final Display display = new Display ();
    Shell shell = new Shell (display);
    shell.setLayout (new FillLayout ());
    shell.setSize (200, 200);
    shell.setLocation (20, 20);
    final ScrolledComposite sc = new ScrolledComposite (shell, SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);
    sc.setLayout (new GridLayout (1, true));
    final Composite innerComposite = new Composite (sc, SWT.NONE);
    innerComposite.setSize (400, 400);
    innerComposite.setLayout (new GridLayout (1, true));
    for (int i = 0;
    i < 10; i ++) {
        Button b = new Button (innerComposite, SWT.PUSH);
        b.setText ("Text");
        b.addSelectionListener (new SelectionAdapter () {
            public void widgetSelected (SelectionEvent e) {
                Image image = new Image (display, innerComposite.getBounds ().width, innerComposite.getBounds ().height);
                ImageLoader loader = new ImageLoader ();
                GC gc = new GC (image);
                sc.print (gc);
                gc.dispose ();
                loader.data = new ImageData [] {image.getImageData ()};
                loader.save ("c:/temp/out.png", SWT.IMAGE_PNG);
            }}

        );
    }
    sc.setMinSize (innerComposite.computeSize (SWT.DEFAULT, SWT.DEFAULT));
    sc.setContent (innerComposite);
    sc.setExpandHorizontal (true);
    sc.setExpandVertical (true);
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) display.sleep ();

    }
    display.dispose ();
}
----------------------------------------

public static void main (String [] args) {
    final Display display = new Display ();
    Shell shell = new Shell (display);
    shell.setLayout (new FillLayout ());
    shell.setSize (200, 200);
    shell.setLocation (20, 20);
    final ScrolledComposite sc = new ScrolledComposite (shell, SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);
    sc.setLayout (new GridLayout (1, true));
    final Composite innerComposite = new Composite (sc, SWT.NONE);
    innerComposite.setSize (400, 400);
    innerComposite.setLayout (new GridLayout (1, true));
    for (int i = 0;
    i < 10; i ++) {
        Button b = new Button (innerComposite, SWT.PUSH);
        b.setText ("Text");
        b.addSelectionListener (new SelectionAdapter () {
            public void widgetSelected (SelectionEvent e) {
                Image image = new Image (display, innerComposite.getBounds ().width, innerComposite.getBounds ().height);
                ImageLoader loader = new ImageLoader ();
                GC gc = new GC (image);
                Shell newShell = new Shell (shell);
                newShell.setLayout (new FillLayout ());
                Composite oldParent = sc.getParent ();
                oldParent.setRedraw (false);
                sc.setParent (newShell);
                newShell.open ();
                sc.print (gc);
                sc.setParent (oldParent);
                oldParent.setRedraw (true);
                gc.dispose ();
                newShell.dispose ();
                loader.data = new ImageData [] {image.getImageData ()};
                loader.save ("./out.png", SWT.IMAGE_PNG);
            }}

        );
    }
    sc.setMinSize (innerComposite.computeSize (SWT.DEFAULT, SWT.DEFAULT));
    sc.setContent (innerComposite);
    sc.setExpandHorizontal (true);
    sc.setExpandVertical (true);
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) display.sleep ();

    }
    display.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10886789_10895134_39_50
10886789_38649590_36_59
Title: SWT How to print contents of a scrolledComposite? 
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    Image image = new Image (display, innerComposite.getBounds ().width, innerComposite.getBounds ().height);
    ImageLoader loader = new ImageLoader ();
    GC gc = new GC (image);
    sc.print (gc);
    gc.dispose ();
    loader.data = new ImageData [] {image.getImageData ()};
    loader.save ("c:/temp/out.png", SWT.IMAGE_PNG);
}
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    Image image = new Image (display, innerComposite.getBounds ().width, innerComposite.getBounds ().height);
    ImageLoader loader = new ImageLoader ();
    GC gc = new GC (image);
    Shell newShell = new Shell (shell);
    newShell.setLayout (new FillLayout ());
    Composite oldParent = sc.getParent ();
    oldParent.setRedraw (false);
    sc.setParent (newShell);
    newShell.open ();
    sc.print (gc);
    sc.setParent (oldParent);
    oldParent.setRedraw (true);
    gc.dispose ();
    newShell.dispose ();
    loader.data = new ImageData [] {image.getImageData ()};
    loader.save ("./out.png", SWT.IMAGE_PNG);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10887525_10976835_14_34
10887525_19207306_18_45
Title: JavaFX style class won't refresh 
----------------------------------------

public void start (Stage primaryStage) {
    final Label lbl = new Label ("Style Me");
    lbl.getStyleClass ().add ("style1");
    Button btn = new Button ("Change the style");
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent arg0) {
            lbl.getStyleClass ().remove ("style1");
            lbl.getStyleClass ().add ("style2");
        }}

    );
    StackPane root = new StackPane ();
    root.getChildren ().add (VBoxBuilder.create ().spacing (20).children (lbl, btn).build ());
    Scene scene = new Scene (root, 300, 250);
    scene.getStylesheets ().add (this.getClass ().getResource ("style.css").toExternalForm ());
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    final Label lbl = new Label ("Style Me");
    lbl.getStyleClass ().add ("style1");
    Button btn = new Button ("Change the style");
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            lbl.getStyleClass ().clear ();
            if (toggle.get ()) {
                lbl.getStyleClass ().add ("style1");
                toggle.set (! toggle.get ());
            } else {
                lbl.getStyleClass ().add ("style2");
                toggle.set (! toggle.get ());
            }
        }}

    );
    StackPane root = new StackPane ();
    root.getChildren ().add (VBoxBuilder.create ().spacing (20).children (lbl, btn).build ());
    Scene scene = new Scene (root, 300, 250);
    scene.getStylesheets ().add ("/style.css");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894954_1_11
10894803_10894968_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public static int countHi2 (String str) {
    if (str.startsWith ("xhi")) {
        return countHi2 (str.substring (3));
    } else if (str.startsWith ("hi")) {
        return countHi2 (str.substring (2)) + 1;
    } else if (str.length () > 0) {
        return countHi2 (str.substring (1));
    } else {
        return 0;
    }

}
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () >= 3 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894954_1_11
10894803_10894977_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public static int countHi2 (String str) {
    if (str.startsWith ("xhi")) {
        return countHi2 (str.substring (3));
    } else if (str.startsWith ("hi")) {
        return countHi2 (str.substring (2)) + 1;
    } else if (str.length () > 0) {
        return countHi2 (str.substring (1));
    } else {
        return 0;
    }

}
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.charAt (0) == 'x' && str.length () > 2 && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894954_1_11
10894803_10895004_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public static int countHi2 (String str) {
    if (str.startsWith ("xhi")) {
        return countHi2 (str.substring (3));
    } else if (str.startsWith ("hi")) {
        return countHi2 (str.substring (2)) + 1;
    } else if (str.length () > 0) {
        return countHi2 (str.substring (1));
    } else {
        return 0;
    }

}
----------------------------------------

public static int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if ((str.length () >= 3) && (str.charAt (0) == 'x' && str.substring (1, 3).equals (s))) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894954_1_11
10894803_10895167_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public static int countHi2 (String str) {
    if (str.startsWith ("xhi")) {
        return countHi2 (str.substring (3));
    } else if (str.startsWith ("hi")) {
        return countHi2 (str.substring (2)) + 1;
    } else if (str.length () > 0) {
        return countHi2 (str.substring (1));
    } else {
        return 0;
    }

}
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () > 2 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894968_1_18
10894803_10894977_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () >= 3 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.charAt (0) == 'x' && str.length () > 2 && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894968_1_18
10894803_10895004_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () >= 3 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------

public static int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if ((str.length () >= 3) && (str.charAt (0) == 'x' && str.substring (1, 3).equals (s))) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_10894968_1_18
10894803_10895167_1_18
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () >= 3 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------

public int countHi2 (String str) {
    String s = "hi";
    int count = 0;
    if (str.length () < 2) {
        return 0;
    } else if (str.length () > 2 && str.charAt (0) == 'x' && str.substring (1, 3).equals (s)) {
        count += countHi2 (str.substring (3));
    } else if (str.substring (0, 2).equals (s)) {
        count += 1 + countHi2 (str.substring (2));
    } else {
        count += countHi2 (str.substring (1));
    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10894803_28533690_1_10
10894803_50500608_1_15
Title: Using recursion to find the number of 'hi' in a string but not 'xhi' 
----------------------------------------

public int countHi (String test) {
    if (test == null) {
        return 0;
    }
    test = test.replaceAll ("xhi", "");
    int n1 = test.length ();
    int n2 = test.replaceAll ("hi", "").length ();
    return (n1 - n2) / 2;
}
----------------------------------------

public int countHi (String str) {
    int count = 0;
    int len = str.length ();
    if (len < 2) {
        return 0;
    } else {
        if (str.substring (0, 2).equals ("hi")) {
            return count + 1 + countHi (str.substring (2));
        } else {
            return count + countHi (str.substring (1));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10938050_10938332_29_37
10938050_19392952_6_35
Title: How do I apply an EtchedBorder to only a specific side of the border? 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new NestedLayout ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ("A Demo");
    f.setLayout (new GridLayout (3, 3));
    f.setSize (400, 400);
    JPanel j1 = new JPanel ();
    JPanel j2 = new JPanel ();
    JPanel j3 = new JPanel ();
    JPanel j4 = new JPanel ();
    JPanel j5 = new JPanel ();
    JPanel j6 = new JPanel ();
    JPanel j7 = new JPanel ();
    JPanel j8 = new JPanel ();
    JPanel j9 = new JPanel ();
    j5.setBorder (BorderFactory.createCompoundBorder (BorderFactory.createMatteBorder (0, 0, 2, 2, Color.WHITE), BorderFactory.createMatteBorder (0, 0, 2, 2, Color.GRAY)));
    f.add (j1);
    f.add (j2);
    f.add (j3);
    f.add (j4);
    f.add (j5);
    f.add (j6);
    f.add (j7);
    f.add (j8);
    f.add (j9);
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10943667_10944062_6_17
10943667_10944170_8_31
Title: What is wrong with my program? I know I have made a mistake. But where? 
----------------------------------------

public static void main (String [] args) {
    String url = "C:/Users/Nimit/Desktop/n.txt";
    try {
        JFrame frame = new JFrame ("Hi");
        JEditorPane Pane = new JEditorPane (url);
        Pane.setEditable (false);
        frame.add (new JScrollPane (Pane));
    } catch (IOException ioe) {
        System.err.println ("Error displaying " + url);
        ioe.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String url = "C:\\Users\\welcome\\z.txt";
    File f = new File (url);
    try {
        URL x = f.toURL ();
        System.out.println (x);
        JFrame frame = new JFrame ("Hi");
        JEditorPane Pane = new JEditorPane (x);
        Pane.setEditable (false);
        frame.add (new JScrollPane (Pane));
        frame.setVisible (true);
    } catch (Exception ioe) {
        System.out.println (ioe);
        System.err.println ("Error displaying " + url);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10947768_24321792_3_22
10947768_27107306_4_19
Title: What is the difference between a.getClass() and A.class in Java? 
----------------------------------------

public static void main (String [] args) {
    long time = System.nanoTime ();
    Class class1 = "String".getClass ();
    class1 = "String".getClass ();
    class1 = "String".getClass ();
    class1 = "String".getClass ();
    System.out.println ("time (getClass()) :" + (System.nanoTime () - time) + " ns");
    long time2 = System.nanoTime ();
    Class class2 = String.class;
    class2 = String.class;
    class2 = String.class;
    class2 = String.class;
    System.out.println ("time (.class):" + (System.nanoTime () - time2) + " ns");
}
----------------------------------------

public static void main (String [] args) {
    long time = System.nanoTime ();
    Class class1 = "String".getClass ();
    Class class11 = "Integer".getClass ();
    Class class111 = "LinkedHashMap".getClass ();
    System.out.println ("time (getClass()) :" + (System.nanoTime () - time) + " ns");
    long time2 = System.nanoTime ();
    Class class2 = String.class;
    Class class22 = Integer.class;
    Class class222 = LinkedHashMap.class;
    System.out.println ("time (.class):" + (System.nanoTime () - time2) + " ns");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10952111_10956291_17_40
10952111_30653061_4_32
Title: JavaFX 2.0 Table with multiline table header 
----------------------------------------

public void start (Stage stage) {
    TableColumn firstNameCol = new TableColumn ("First Name (which is a really long name)");
    makeHeaderWrappable (firstNameCol);
    firstNameCol.setPrefWidth (100);
    firstNameCol.setCellValueFactory (new PropertyValueFactory < Person, String > ("firstName"));
    TableColumn lastNameCol = new TableColumn ("Last Name");
    lastNameCol.setPrefWidth (100);
    lastNameCol.setCellValueFactory (new PropertyValueFactory < Person, String > ("lastName"));
    TableView table = new TableView ();
    table.getColumns ().addAll (firstNameCol, lastNameCol);
    table.setItems (FXCollections.observableArrayList (new Person ("Jacob", "Smith"), new Person ("Isabella", "Johnson"), new Person ("Ethan", "Williams")));
    table.setPrefSize (250, 200);
    Pane layout = new VBox (10);
    layout.setStyle ("-fx-padding: 10;");
    layout.getChildren ().addAll (table);
    stage.setScene (new Scene (layout));
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    TableView table = new TableView ();
    TableColumn tableColumnData1 = new TableColumn (), tableColumnData2 = new TableColumn ("Long Title without Text Wrap");
    tableColumnData1.setCellValueFactory (new PropertyValueFactory < SomeStructure, String > ("data1"));
    tableColumnData2.setCellValueFactory (new PropertyValueFactory < SomeStructure, String > ("data2"));
    table.getColumns ().addAll (tableColumnData1, tableColumnData2);
    Label columnTitle = new Label ("Long Title with Text Wrapped");
    columnTitle.setPrefWidth (125);
    columnTitle.setPrefHeight (50);
    columnTitle.setWrapText (true);
    columnTitle.setTextAlignment (TextAlignment.CENTER);
    tableColumnData1.setGraphic (columnTitle);
    table.setItems (FXCollections.observableArrayList (new SomeStructure ("Java", "FX", 1), new SomeStructure ("Java", "Swing", 0), new SomeStructure ("Java", "Sample", 2), new SomeStructure ("Some", "Other", 10)));
    Pane layout = new VBox (10);
    layout.getChildren ().addAll (table);
    stage.setScene (new Scene (layout, 350, 350));
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10954021_10954134_1_13
10954021_10954184_1_13
Title: Why do I need to catch a close() exception in BufferedReader but not in PrintWriter? 
----------------------------------------

public void close () {
    try {
        synchronized (lock) {
            if (out == null) return;

            out.close ();
            out = null;
        }
    } catch (IOException x) {
        trouble = true;
    }
}
----------------------------------------

public void close () {
    try {
        synchronized (lock) {
            if (out == null) return;

            out.close ();
            out = null;
        }
    } catch (IOException x) {
        trouble = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10966776_43510583_6_57
10966776_52071321_5_46
Title: Reading and Writing JSON file Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    String USER_AGENT = "Mozilla/5.0";
    try {
        String url = "https://webapp2017sql.azurewebsites.net/api/customer";
        URL obj = new URL (url);
        HttpsURLConnection con = (HttpsURLConnection) obj.openConnection ();
        con.setRequestMethod ("POST");
        con.setRequestProperty ("User-Agent", USER_AGENT);
        con.setRequestProperty ("Accept-Language", "en-US,en;q=0.5");
        con.setRequestProperty ("Content-Type", "application/json");
        con.setDoOutput (true);
        DataOutputStream wr = new DataOutputStream (con.getOutputStream ());
        wr.writeBytes ("{\"Id\":1,\"Name\":\"Kamlesh\"} ");
        wr.flush ();
        wr.close ();
        int responseCode = con.getResponseCode ();
        System.out.println ("\nSending 'POST' request to URL : " + url);
        System.out.println ("Post parameters : " + urlParameters);
        System.out.println ("Response Code : " + responseCode);
        BufferedReader in = new BufferedReader (new InputStreamReader (con.getInputStream ()));
        String inputLine;
        StringBuffer response = new StringBuffer ();
        while ((inputLine = in.readLine ()) != null) {
            response.append (inputLine);
        }
        in.close ();
        System.out.println (response.toString ());
    } catch (Exception ex) {
        System.out.print (ex.getMessage ());
    } finally {
    }
}
----------------------------------------

public static void main (String [] args) {
    JSONObject obj = new JSONObject ();
    obj.put ("name", "Dinesh");
    obj.put ("phone", "0123456789");
    obj.put ("Address", "BAngalore");
    JSONArray Arr = new JSONArray ();
    Arr.add ("JSON Array List 1");
    Arr.add ("JSON Array List 2");
    Arr.add ("JSON Array List 3");
    obj.put ("Remark", Arr);
    try {
        FileWriter file = new FileWriter (IAutoconstant.JSONLPATH);
        file.write (obj.toJSONString ());
        file.flush ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1096868_1097098_1_12
1096868_1097692_1_40
Title: "List<Byte> to String can you help refactor this ( small ) method?" 
----------------------------------------

public static String byteListToString (List < Byte > l) {
    if (l == null) {
        return "";
    }
    ByteArrayOutputStream bout = new ByteArrayOutputStream (l.size ());
    for (Byte current : l) {
        bout.write (current);
    }
    return bout.toString ("UTF-8");
}
----------------------------------------

public static String byteListToString (List < Byte > l, Charset cs) throws IOException {
    final int CBUF_SIZE = 8;
    final int BBUF_SIZE = 8;
    CharBuffer cbuf = CharBuffer.allocate (CBUF_SIZE);
    char [] chArr = cbuf.array ();
    ByteBuffer bbuf = ByteBuffer.allocate (BBUF_SIZE);
    CharsetDecoder dec = cs.newDecoder ();
    StringWriter sw = new StringWriter ((int) (l.size () * dec.averageCharsPerByte ()));
    Iterator < Byte > itInput = l.iterator ();
    int bytesRemaining = l.size ();
    boolean finished = false;
    while (! finished) {
        final int bPos = bbuf.position ();
        final int bLim = bbuf.limit ();
        int bSize = bLim - bPos;
        bSize = Math.min (bSize, bytesRemaining);
        while ((-- bSize >= 0) && itInput.hasNext ()) {
            bbuf.put (itInput.next ().byteValue ());
            -- bytesRemaining;
        }
        bbuf.flip ();
        final int cStartPos = cbuf.position ();
        CoderResult cr = dec.decode (bbuf, cbuf, (bytesRemaining <= 0));
        if (cr.isError ()) cr.throwException ();

        bbuf.compact ();
        finished = (bytesRemaining <= 0) && (cr == CoderResult.UNDERFLOW);
        final int cEndPos = cbuf.position ();
        final int cSize = cEndPos - cStartPos;
        sw.write (chArr, cStartPos, cSize);
        cbuf.clear ();
    }
    return sw.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10982941_10983010_1_12
10982941_11034868_1_10
Title: Java Synchronization Not Working as Expected 
----------------------------------------

synchronized public Object getBuffer () {
    insideGetBuffer = true;
    try {
        int i = 0;
        for (Object item : list) {
            i ++;
        }
    } finally {
        insideGetBuffer = false;
    }
    return null;
}
----------------------------------------

public TestBuffer getBuffer () {
    TestBuffer buffer = null;
    if (colorToBufferMap.containsKey (defaultColor)) {
        buffer = colorToBufferMap.get (defaultColor);
    } else {
        buffer = new TestBuffer ();
        colorToBufferMap.put (defaultColor, buffer);
    }
    return buffer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
10985078_10985285_13_35
10985078_10985331_21_42
Title: Java- how to obtain full xml stored in modified DOM Document 
----------------------------------------

public static void main (String [] args) throws Exception {
    String str = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><config><var-def name=\"initial_no\"><![CDATA[3972971</var-def><var-def name=\"webpage\"><![CDATA[asdf</var-def><cloudwhile condition=\"${i.toInt() != 500}\" index=\"i\" returnvalue=\"false\" indexstart=\"1\" upperbound=\"500\"><![CDATA[<var-def name=\"webpage\" overwrite=\"true\"><![CDATA[<cloudwhile condition=\"${i.toInt() != 500}\" index=\"i\" returnvalue=\"false\" indexstart=\"100\" upperbound=\"700\"><![CDATA[</cloudwhile><try><body><http url=\"www.google.com/patents/US${initial_no.toInt()+i.toInt()}\"/></body><catch>ERROR- No content found for this patent number.</catch></try></var-def><file action=\"write\" path=\"data/${initial_no.toInt()+i.toInt()}_content.html\"><![CDATA[<var name=\"webpage\"/></file></cloudwhile></config>";
    InputStream is = new ByteArrayInputStream (str.getBytes ("UTF-8"));
    DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder docBuilder = docFactory.newDocumentBuilder ();
    Document doc = docBuilder.parse (is);
    TransformerFactory tFactory = TransformerFactory.newInstance ();
    Transformer transformer = tFactory.newTransformer ();
    transformer.setOutputProperty (OutputKeys.METHOD, "xml");
    transformer.setOutputProperty (OutputKeys.INDENT, "yes");
    transformer.setOutputProperty ("encoding", "UTF-8");
    DOMSource source = new DOMSource (doc);
    java.io.StringWriter sw = new java.io.StringWriter ();
    StreamResult _result = new StreamResult (sw);
    transformer.transform (source, _result);
    String out = sw.toString ();
    System.out.println (out);
}
----------------------------------------

public static void main (String [] args) throws ParserConfigurationException, SAXException, IOException, TransformerException {
    String str = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><config><var-def name=\"initial_no\"><![CDATA[3972971</var-def><var-def name=\"webpage\"><![CDATA[asdf</var-def><cloudwhile condition=\"${i.toInt() != 500}\" index=\"i\" returnvalue=\"false\" indexstart=\"1\" upperbound=\"500\"><![CDATA[<var-def name=\"webpage\" overwrite=\"true\"><![CDATA[<cloudwhile condition=\"${i.toInt() != 500}\" index=\"i\" returnvalue=\"false\" indexstart=\"100\" upperbound=\"700\"><![CDATA[</cloudwhile><try><body><http url=\"www.google.com/patents/US${initial_no.toInt()+i.toInt()}\"/></body><catch>ERROR- No content found for this patent number.</catch></try></var-def><file action=\"write\" path=\"data/${initial_no.toInt()+i.toInt()}_content.html\"><![CDATA[<var name=\"webpage\"/></file></cloudwhile></config>";
    InputStream is = new ByteArrayInputStream (str.getBytes ("UTF-8"));
    DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder docBuilder = docFactory.newDocumentBuilder ();
    Document doc = docBuilder.parse (is);
    NamedNodeMap attributes = doc.getFirstChild ().getAttributes ();
    Attr attribute = doc.createAttribute ("joes-attribute");
    attribute.setValue ("joes-value");
    attributes.setNamedItem (attribute);
    TransformerFactory tFactory = TransformerFactory.newInstance ();
    Transformer transformer = tFactory.newTransformer ();
    DOMSource source = new DOMSource (doc);
    StreamResult result = new StreamResult (System.out);
    transformer.transform (source, result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11011483_11011519_2_19
11011483_11011592_3_19
Title: Java: Increment by 2 the two inputted integer 
----------------------------------------

public static void main (String [] args) {
    int min, max, increment;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter min value: ");
    int min = in.nextInt ();
    System.out.println ("Enter max value: ");
    int max = in.nextInt ();
    System.out.println ("Enter increment value: ");
    int inc = in.nextInt ();
    int i;
    for (i = min; i < max; i += inc) {
        System.out.println (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    int min, max, increment;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter min value: ");
    min = in.nextInt ();
    System.out.println ("Enter max value: ");
    max = in.nextInt ();
    System.out.println ("Enter increment value: ");
    increment = in.nextInt ();
    for (; min <= max; min += increment) {
        System.out.println (min);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11011483_11011519_2_19
11011483_26052386_4_22
Title: Java: Increment by 2 the two inputted integer 
----------------------------------------

public static void main (String [] args) {
    int min, max, increment;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter min value: ");
    int min = in.nextInt ();
    System.out.println ("Enter max value: ");
    int max = in.nextInt ();
    System.out.println ("Enter increment value: ");
    int inc = in.nextInt ();
    int i;
    for (i = min; i < max; i += inc) {
        System.out.println (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    int min, max, increment;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter min value: ");
    min = in.nextInt ();
    System.out.println ("Enter max value: ");
    max = in.nextInt ();
    System.out.println ("Enter increment value: ");
    increment = in.nextInt ();
    for (int i = min;
    i <= max; i += increment) {
        System.out.println (i);
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_152_169
11017283_11024268_152_172
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void saveToFile (String filename) {
    int w = 500;
    int h = 200;
    int INFOPAD = 15;
    BufferedImage bufferedImage = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g2 = bufferedImage.createGraphics ();
    createSampleOnGraphicsContext (w, h, INFOPAD, g2);
    g2.dispose ();
    try {
        File file = new File (filename);
        ImageIO.write (bufferedImage, "png", file);
    } catch (IOException e) {
    }
}
----------------------------------------

public void saveToFile () {
    int w = 500;
    int h = 200;
    int INFOPAD = 15;
    BufferedImage bufferedImage = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g2 = bufferedImage.createGraphics ();
    createSampleOnGraphicsContext (w, h, INFOPAD, g2);
    g2.dispose ();
    try {
        File file = new File (fileName);
        System.out.println (file.getAbsolutePath ());
        ImageIO.write (bufferedImage, "png", file);
        JOptionPane.showMessageDialog (null, new JLabel (new ImageIcon (fileName)));
    } catch (IOException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_172_222
11017283_11024268_175_225
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

private void createSampleOnGraphicsContext (int w, int h, int INFOPAD, Graphics2D g2) {
    g2.setBackground (imageBackgroundColor);
    g2.clearRect (0, 0, w, h);
    g2.setColor (Color.white);
    g2.fillRect (0, h - INFOPAD, w, INFOPAD);
    if (errStr != null) {
        g2.setColor (jfcBlue);
        g2.setFont (new Font ("serif", Font.BOLD, 18));
        g2.drawString ("ERROR", 5, 20);
        AttributedString as = new AttributedString (errStr);
        as.addAttribute (TextAttribute.FONT, font12, 0, errStr.length ());
        AttributedCharacterIterator aci = as.getIterator ();
        FontRenderContext frc = g2.getFontRenderContext ();
        LineBreakMeasurer lbm = new LineBreakMeasurer (aci, frc);
        float x = 5, y = 25;
        lbm.setPosition (0);
        while (lbm.getPosition () < errStr.length ()) {
            TextLayout tl = lbm.nextLayout (w - x - 5);
            if (! tl.isLeftToRight ()) {
                x = w - tl.getAdvance ();
            }
            tl.draw (g2, x, y += tl.getAscent ());
            y += tl.getDescent () + tl.getLeading ();
        }
    } else if (capture.thread != null) {
        g2.setColor (Color.black);
        g2.setFont (font12);
    } else {
        g2.setColor (Color.black);
        g2.setFont (font12);
        if (audioInputStream != null) {
            g2.setColor (jfcBlue);
            for (int i = 1;
            i < lines.size (); i ++) {
                g2.draw ((Line2D) lines.get (i));
            }
            if (seconds != 0) {
                double loc = seconds / duration * w;
                g2.setColor (pink);
                g2.setStroke (new BasicStroke (3));
                g2.draw (new Line2D.Double (loc, 0, loc, h - INFOPAD - 2));
            }
        }
    }

}
----------------------------------------

private void createSampleOnGraphicsContext (int w, int h, int INFOPAD, Graphics2D g2) {
    g2.setBackground (imageBackgroundColor);
    g2.clearRect (0, 0, w, h);
    g2.setColor (Color.white);
    g2.fillRect (0, h - INFOPAD, w, INFOPAD);
    if (errStr != null) {
        g2.setColor (jfcBlue);
        g2.setFont (new Font ("serif", Font.BOLD, 18));
        g2.drawString ("ERROR", 5, 20);
        AttributedString as = new AttributedString (errStr);
        as.addAttribute (TextAttribute.FONT, font12, 0, errStr.length ());
        AttributedCharacterIterator aci = as.getIterator ();
        FontRenderContext frc = g2.getFontRenderContext ();
        LineBreakMeasurer lbm = new LineBreakMeasurer (aci, frc);
        float x = 5, y = 25;
        lbm.setPosition (0);
        while (lbm.getPosition () < errStr.length ()) {
            TextLayout tl = lbm.nextLayout (w - x - 5);
            if (! tl.isLeftToRight ()) {
                x = w - tl.getAdvance ();
            }
            tl.draw (g2, x, y += tl.getAscent ());
            y += tl.getDescent () + tl.getLeading ();
        }
    } else if (capture.thread != null) {
        g2.setColor (Color.black);
        g2.setFont (font12);
    } else {
        g2.setColor (Color.black);
        g2.setFont (font12);
        if (audioInputStream != null) {
            g2.setColor (jfcBlue);
            for (int i = 1;
            i < lines.size (); i ++) {
                g2.draw ((Line2D) lines.get (i));
            }
            if (seconds != 0) {
                double loc = seconds / duration * w;
                g2.setColor (pink);
                g2.setStroke (new BasicStroke (3));
                g2.draw (new Line2D.Double (loc, 0, loc, h - INFOPAD - 2));
            }
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_238_252
11017283_11017284_282_363
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        JavaSound.showInfoDialog ();
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_238_252
11017283_11024268_241_255
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_238_252
11017283_11024268_285_366
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_282_363
11017283_11024268_241_255
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        JavaSound.showInfoDialog ();
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_282_363
11017283_11024268_285_366
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        JavaSound.showInfoDialog ();
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11017284_80_149
11017283_11024268_80_149
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void createWaveForm (byte [] audioBytes) {
    lines.removeAllElements ();
    AudioFormat format = audioInputStream.getFormat ();
    if (audioBytes == null) {
        try {
            audioBytes = new byte [(int) (audioInputStream.getFrameLength () * format.getFrameSize ())];
            audioInputStream.read (audioBytes);
        } catch (Exception ex) {
            reportStatus (ex.getMessage ());
            return;
        }
    }
    int w = 500;
    int h = 200;
    int [] audioData = null;
    if (format.getSampleSizeInBits () == 16) {
        int nlengthInSamples = audioBytes.length / 2;
        audioData = new int [nlengthInSamples];
        if (format.isBigEndian ()) {
            for (int i = 0;
            i < nlengthInSamples; i ++) {
                int MSB = (int) audioBytes [2 * i];
                int LSB = (int) audioBytes [2 * i + 1];
                audioData [i] = MSB << 8 | (255 & LSB);
            }
        } else {
            for (int i = 0;
            i < nlengthInSamples; i ++) {
                int LSB = (int) audioBytes [2 * i];
                int MSB = (int) audioBytes [2 * i + 1];
                audioData [i] = MSB << 8 | (255 & LSB);
            }
        }
    } else if (format.getSampleSizeInBits () == 8) {
        int nlengthInSamples = audioBytes.length;
        audioData = new int [nlengthInSamples];
        if (format.getEncoding ().toString ().startsWith ("PCM_SIGN")) {
            for (int i = 0;
            i < audioBytes.length; i ++) {
                audioData [i] = audioBytes [i];
            }
        } else {
            for (int i = 0;
            i < audioBytes.length; i ++) {
                audioData [i] = audioBytes [i] - 128;
            }
        }
    }

    int frames_per_pixel = audioBytes.length / format.getFrameSize () / w;
    byte my_byte = 0;
    double y_last = 0;
    int numChannels = format.getChannels ();
    for (double x = 0;
    x < w && audioData != null; x ++) {
        int idx = (int) (frames_per_pixel * numChannels * x);
        if (format.getSampleSizeInBits () == 8) {
            my_byte = (byte) audioData [idx];
        } else {
            my_byte = (byte) (128 * audioData [idx] / 32768);
        }
        double y_new = (double) (h * (128 - my_byte) / 256);
        lines.add (new Line2D.Double (x, y_last, x, y_new));
        y_last = y_new;
    }
    saveToFile (waveformFilename);
}
----------------------------------------

public void createWaveForm (byte [] audioBytes) {
    lines.removeAllElements ();
    AudioFormat format = audioInputStream.getFormat ();
    if (audioBytes == null) {
        try {
            audioBytes = new byte [(int) (audioInputStream.getFrameLength () * format.getFrameSize ())];
            audioInputStream.read (audioBytes);
        } catch (Exception ex) {
            reportStatus (ex.getMessage ());
            return;
        }
    }
    int w = 500;
    int h = 200;
    int [] audioData = null;
    if (format.getSampleSizeInBits () == 16) {
        int nlengthInSamples = audioBytes.length / 2;
        audioData = new int [nlengthInSamples];
        if (format.isBigEndian ()) {
            for (int i = 0;
            i < nlengthInSamples; i ++) {
                int MSB = (int) audioBytes [2 * i];
                int LSB = (int) audioBytes [2 * i + 1];
                audioData [i] = MSB << 8 | (255 & LSB);
            }
        } else {
            for (int i = 0;
            i < nlengthInSamples; i ++) {
                int LSB = (int) audioBytes [2 * i];
                int MSB = (int) audioBytes [2 * i + 1];
                audioData [i] = MSB << 8 | (255 & LSB);
            }
        }
    } else if (format.getSampleSizeInBits () == 8) {
        int nlengthInSamples = audioBytes.length;
        audioData = new int [nlengthInSamples];
        if (format.getEncoding ().toString ().startsWith ("PCM_SIGN")) {
            for (int i = 0;
            i < audioBytes.length; i ++) {
                audioData [i] = audioBytes [i];
            }
        } else {
            for (int i = 0;
            i < audioBytes.length; i ++) {
                audioData [i] = audioBytes [i] - 128;
            }
        }
    }

    int frames_per_pixel = audioBytes.length / format.getFrameSize () / w;
    byte my_byte = 0;
    double y_last = 0;
    int numChannels = format.getChannels ();
    for (double x = 0;
    x < w && audioData != null; x ++) {
        int idx = (int) (frames_per_pixel * numChannels * x);
        if (format.getSampleSizeInBits () == 8) {
            my_byte = (byte) audioData [idx];
        } else {
            my_byte = (byte) (128 * audioData [idx] / 32768);
        }
        double y_new = (double) (h * (128 - my_byte) / 256);
        lines.add (new Line2D.Double (x, y_last, x, y_new));
        y_last = y_new;
    }
    saveToFile ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11017283_11024268_241_255
11017283_11024268_285_366
Title: Java Program to create a PNG waveform for an audio file 
----------------------------------------

public void run () {
    seconds = 0;
    while (thread != null) {
        if ((capture.line != null) && (capture.line.isActive ())) {
            long milliseconds = (long) (capture.line.getMicrosecondPosition () / 1000);
            seconds = milliseconds / 1000.0;
        }
        try {
            thread.sleep (100);
        } catch (Exception e) {
            break;
        }
        while ((capture.line != null && ! capture.line.isActive ())) {
            try {
                thread.sleep (10);
            } catch (Exception e) {
                break;
            }
        }
    }
    seconds = 0;
}
----------------------------------------

public void run () {
    duration = 0;
    audioInputStream = null;
    AudioFormat format = audioInputStream.getFormat ();
    DataLine.Info info = new DataLine.Info (TargetDataLine.class, format);
    if (! AudioSystem.isLineSupported (info)) {
        shutDown ("Line matching " + info + " not supported.");
        return;
    }
    try {
        line = (TargetDataLine) AudioSystem.getLine (info);
        line.open (format, line.getBufferSize ());
    } catch (LineUnavailableException ex) {
        shutDown ("Unable to open the line: " + ex);
        return;
    } catch (SecurityException ex) {
        shutDown (ex.toString ());
        return;
    } catch (Exception ex) {
        shutDown (ex.toString ());
        return;
    }
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    int frameSizeInBytes = format.getFrameSize ();
    int bufferLengthInFrames = line.getBufferSize () / 8;
    int bufferLengthInBytes = bufferLengthInFrames * frameSizeInBytes;
    byte [] data = new byte [bufferLengthInBytes];
    int numBytesRead;
    line.start ();
    while (thread != null) {
        if ((numBytesRead = line.read (data, 0, bufferLengthInBytes)) == - 1) {
            break;
        }
        out.write (data, 0, numBytesRead);
    }
    line.stop ();
    line.close ();
    line = null;
    try {
        out.flush ();
        out.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    byte audioBytes [] = out.toByteArray ();
    ByteArrayInputStream bais = new ByteArrayInputStream (audioBytes);
    audioInputStream = new AudioInputStream (bais, format, audioBytes.length / frameSizeInBytes);
    long milliseconds = (long) ((audioInputStream.getFrameLength () * 1000) / format.getFrameRate ());
    duration = milliseconds / 1000.0;
    try {
        audioInputStream.reset ();
    } catch (Exception ex) {
        ex.printStackTrace ();
        return;
    }
    samplingGraph.createWaveForm (audioBytes);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102449_1103001_1_21
1102449_12043585_1_29
Title: How to browse local Java App Engine datastore? 
----------------------------------------

public void doGet (HttpServletRequest req, HttpServletResponse resp) throws IOException {
    resp.setContentType ("text/plain");
    final DatastoreService datastore = DatastoreServiceFactory.getDatastoreService ();
    final Query query = new Query ("Table/Entity Name");
    for (final Entity entity : datastore.prepare (query).asIterable ()) {
        resp.getWriter ().println (entity.getKey ().toString ());
        final Map < String, Object > properties = entity.getProperties ();
        final String [] propertyNames = properties.keySet ().toArray (new String [properties.size ()]);
        for (final String propertyName : propertyNames) {
            resp.getWriter ().println ("-> " + propertyName + ": " + entity.getProperty (propertyName));
        }
    }
}
----------------------------------------

public void doGet (HttpServletRequest req, HttpServletResponse resp) throws IOException {
    String entityParam = req.getParameter ("e");
    resp.setContentType ("text/plain");
    final DatastoreService datastore = DatastoreServiceFactory.getDatastoreService ();
    final Query queryOrig = new Query (entityParam);
    queryOrig.addSort (Entity.KEY_RESERVED_PROPERTY, Query.SortDirection.ASCENDING);
    for (final Entity entityOrig : datastore.prepare (queryOrig).asIterable ()) {
        final Query query = new Query ();
        query.setAncestor (entityOrig.getKey ());
        query.addSort (Entity.KEY_RESERVED_PROPERTY, Query.SortDirection.ASCENDING);
        for (final Entity entity : datastore.prepare (query).asIterable ()) {
            resp.getWriter ().println (entity.getKey ().toString ());
            final Map < String, Object > properties = entity.getProperties ();
            final String [] propertyNames = properties.keySet ().toArray (new String [properties.size ()]);
            for (final String propertyName : propertyNames) {
                resp.getWriter ().println ("-> " + propertyName + ": " + entity.getProperty (propertyName));
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_13955940_8_19
1102891_25185774_1_23
Title: How to check if a String is numeric in Java 
----------------------------------------

public static boolean isNumber (String s) {
    boolean isNumber = true;
    for (int i = 0;
    i < s.length () && isNumber; i ++) {
        char c = s.charAt (i);
        isNumber = isNumber & ((c >= '0' && c <= '9') || (c == '.') || (c == 'e') || (c == 'E') || (c == ''));
    }
    return isInteger;
}
----------------------------------------

static boolean isNumber (String s) {
    final int len = s.length ();
    if (len == 0) {
        return false;
    }
    int dotCount = 0;
    for (int i = 0;
    i < len; i ++) {
        char c = s.charAt (i);
        if (c < '0' || c > '9') {
            if (i == len - 1) {
                return false;
            } else if (c == '.') {
                if (++ dotCount > 1) {
                    return false;
                }
            } else if (i != 0 || c != '+' && c != '-') {
                return false;
            }

        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_13955940_8_19
1102891_28109250_1_18
Title: How to check if a String is numeric in Java 
----------------------------------------

public static boolean isNumber (String s) {
    boolean isNumber = true;
    for (int i = 0;
    i < s.length () && isNumber; i ++) {
        char c = s.charAt (i);
        isNumber = isNumber & ((c >= '0' && c <= '9') || (c == '.') || (c == 'e') || (c == 'E') || (c == ''));
    }
    return isInteger;
}
----------------------------------------

public boolean isNumber (String str) {
    short count = 0;
    char chc [] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-', '+'};
    for (char c : str.toCharArray ()) {
        for (int i = 0;
        i < chc.length; i ++) {
            if (c == chc [i]) {
                count ++;
            }
        }
    }
    if (count != str.length ()) return false;
    else return true;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_13955940_8_19
1102891_43306526_1_12
Title: How to check if a String is numeric in Java 
----------------------------------------

public static boolean isNumber (String s) {
    boolean isNumber = true;
    for (int i = 0;
    i < s.length () && isNumber; i ++) {
        char c = s.charAt (i);
        isNumber = isNumber & ((c >= '0' && c <= '9') || (c == '.') || (c == 'e') || (c == 'E') || (c == ''));
    }
    return isInteger;
}
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_20720973_4_22
1102891_30917319_19_32
Title: How to check if a String is numeric in Java 
----------------------------------------

public static void main (String [] args) {
    boolean flag = true;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the String:");
    String str = sc.nextLine ();
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) > 48 && str.charAt (i) < 58) {
            flag = false;
            break;
        }
    }
    if (flag == true) {
        System.out.println ("String is a valid String.");
    } else {
        System.out.println ("String contains number.");
    }
}
----------------------------------------

public static void main (String [] args) {
    String test = "12345.F";
    long before = new Date ().getTime ();
    for (int x = 0;
    x < 1000000; ++ x) {
        isNumericOne (test);
    }
    long after = new Date ().getTime ();
    System.out.println (after - before);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_25185774_1_23
1102891_28109250_1_18
Title: How to check if a String is numeric in Java 
----------------------------------------

static boolean isNumber (String s) {
    final int len = s.length ();
    if (len == 0) {
        return false;
    }
    int dotCount = 0;
    for (int i = 0;
    i < len; i ++) {
        char c = s.charAt (i);
        if (c < '0' || c > '9') {
            if (i == len - 1) {
                return false;
            } else if (c == '.') {
                if (++ dotCount > 1) {
                    return false;
                }
            } else if (i != 0 || c != '+' && c != '-') {
                return false;
            }

        }
    }
    return true;
}
----------------------------------------

public boolean isNumber (String str) {
    short count = 0;
    char chc [] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-', '+'};
    for (char c : str.toCharArray ()) {
        for (int i = 0;
        i < chc.length; i ++) {
            if (c == chc [i]) {
                count ++;
            }
        }
    }
    if (count != str.length ()) return false;
    else return true;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_25185774_1_23
1102891_43306526_1_12
Title: How to check if a String is numeric in Java 
----------------------------------------

static boolean isNumber (String s) {
    final int len = s.length ();
    if (len == 0) {
        return false;
    }
    int dotCount = 0;
    for (int i = 0;
    i < len; i ++) {
        char c = s.charAt (i);
        if (c < '0' || c > '9') {
            if (i == len - 1) {
                return false;
            } else if (c == '.') {
                if (++ dotCount > 1) {
                    return false;
                }
            } else if (i != 0 || c != '+' && c != '-') {
                return false;
            }

        }
    }
    return true;
}
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1102891_28109250_1_18
1102891_43306526_1_12
Title: How to check if a String is numeric in Java 
----------------------------------------

public boolean isNumber (String str) {
    short count = 0;
    char chc [] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-', '+'};
    for (char c : str.toCharArray ()) {
        for (int i = 0;
        i < chc.length; i ++) {
            if (c == chc [i]) {
                count ++;
            }
        }
    }
    if (count != str.length ()) return false;
    else return true;

}
----------------------------------------

public static boolean isNumber (String str) {
    int i = 0, len = str.length ();
    boolean a = false, b = false, c = false, d = false;
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        a = true;
    }
    if (i < len && (str.charAt (i) == '.')) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        b = true;
    }
    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {
        i ++;
        c = true;
    }
    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;

    while (i < len && isDigit (str.charAt (i))) {
        i ++;
        d = true;
    }
    return i == len && (a || b) && (! c || (c && d));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1103522_1103544_1_18
1103522_3256550_1_20
Title: What is an efficient algorithm to find whether a singly linked list is circular/cyclic or not? 
----------------------------------------

bool hasCircle (List l) {
    Iterator i = l.begin (), j = l.begin ();
    while (true) {
        if (i.hasNext ()) i = i.next ();
        else return false;

        if (j.hasNext ()) j = j.next ();
        else return false;

        if (j.hasNext ()) j = j.next ();
        else return false;

        if (i.getObject () == j.getObject ()) {
            return true;
        }
    }
}
----------------------------------------

bool hasCircle (List l) {
    Iterator i = l.begin (), j = l.begin ();
    while (true) {
        if (i.hasNext ()) i = i.next ();
        else return false;

        if (j.hasNext ()) j = j.next ();
        else return false;

        if (j.hasNext ()) j = j.next ();
        else return false;

        if (i.getObject () == j.getObject ()) {
            return true;
        }
        if (i.next () == j) break;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11038874_11040103_11_40
11038874_11040103_26_37
Title: Java Applet Text highlights on rollover 
----------------------------------------

public void run () {
    JFrame f = new JFrame ();
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    ftf = new JTextField ("Highlight");
    ftf.setEditable (false);
    f.add (ftf, BorderLayout.CENTER);
    f.pack ();
    f.setVisible (true);
    Thread thread = new Thread (new Runnable () {
        boolean focused = false;
        @Override
        public void run () {
            while (true) {
                if (mouseIsOverDisplayPanel ()) {
                    if (ftf.hasFocus () && focused == false) {
                        ftf.selectAll ();
                        focused = true;
                    } else if (! ftf.hasFocus ()) {
                        focused = false;
                    }

                }
            }
        }}

    );
    thread.start ();
}
----------------------------------------

public void run () {
    while (true) {
        if (mouseIsOverDisplayPanel ()) {
            if (ftf.hasFocus () && focused == false) {
                ftf.selectAll ();
                focused = true;
            } else if (! ftf.hasFocus ()) {
                focused = false;
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11039174_11039542_1_21
11039174_11062104_1_12
Title: Optimally format a BigDecimal according to a maximum character limit 
----------------------------------------

public static String formatDecimal (BigDecimal b, int max) {
    String bs = b.stripTrailingZeros ().toPlainString ();
    if (bs.length () <= max) {
        return bs;
    }
    String maxInteger = "1" + StringUtils.repeat ("0", max - 1);
    String minFraction = "0." + StringUtils.repeat ("0", max - 2) + "1";
    String integerPart = String.valueOf (b.intValue ());
    String pattern = StringUtils.repeat ("#", max - integerPart.length ()) + "." + StringUtils.repeat ("#", max - 1 - integerPart.length ());
    MessageFormat fmt = new MessageFormat ("{0,choice," + minFraction + "<{0,number,'0.#E0'}|0.1#{0,number,'" + pattern + "'}|" + maxInteger + "<{0,number,'0.#E0'}}");
    return fmt.format (new Object [] {b});
}
----------------------------------------

public static String formatDecimal (BigDecimal number, int maxChars) {
    String s;
    int precision = maxChars;
    do {
        s = number.round (new MathContext (precision, RoundingMode.HALF_EVEN)).stripTrailingZeros ().toString ();
        -- precision;
    } while (s.length () > maxChars && precision > 0);
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11048783_11048932_1_22
11048783_21946474_9_46
Title: Java HashMap key value storage and retrieval 
----------------------------------------

public static void main (String [] args) {
    HashMap < String, String > hashmap = new HashMap < String, String > ();
    hashmap.put ("one", "1");
    hashmap.put ("two", "2");
    hashmap.put ("three", "3");
    hashmap.put ("four", "4");
    hashmap.put ("five", "5");
    hashmap.put ("six", "6");
    Iterator < String > keyIterator = hashmap.keySet ().iterator ();
    Iterator < String > valueIterator = hashmap.values ().iterator ();
    while (keyIterator.hasNext ()) {
        System.out.println ("key: " + keyIterator.next ());
    }
    while (valueIterator.hasNext ()) {
        System.out.println ("value: " + valueIterator.next ());
    }
}
----------------------------------------

public static void main (String args []) {
    HashMap < Integer, String > hashMap = new HashMap < Integer, String > ();
    hashMap.put (91, "India");
    hashMap.put (34, "Spain");
    hashMap.put (63, "Philippines");
    hashMap.put (41, "Switzerland");
    System.out.println ("Unsorted HashMap: " + hashMap);
    TreeMap < Integer, String > sortedHashMap = new TreeMap < Integer, String > (hashMap);
    System.out.println ("Sorted HashMap: " + sortedHashMap);
    boolean isHashMapEmpty = hashMap.isEmpty ();
    System.out.println ("HashMap Empty: " + isHashMapEmpty);
    System.out.println ("HashMap Size: " + hashMap.size ());
    Iterator < Integer > keyIterator = hashMap.keySet ().iterator ();
    while (keyIterator.hasNext ()) {
        Integer key = keyIterator.next ();
        System.out.println ("Code=" + key + "  Country=" + hashMap.get (key));
    }
    System.out.println ("Does HashMap contains 91 as key: " + hashMap.containsKey (91));
    System.out.println ("Does HashMap contains India as value: " + hashMap.containsValue ("India"));
    Integer key = 91;
    Object value = hashMap.remove (key);
    System.out.println ("Following item is removed from HashMap: " + value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11048943_11049461_1_27
11048943_51005544_5_16
Title: How to get every day except weekend or Saturday or Sunday between two dates in java? 
----------------------------------------

public static void main (String [] args) {
    Calendar calendar = Calendar.getInstance ();
    calendar.set (Calendar.DAY_OF_MONTH, 15);
    calendar.set (Calendar.YEAR, 2012);
    calendar.set (Calendar.HOUR, 0);
    calendar.set (Calendar.MINUTE, 0);
    calendar.set (Calendar.SECOND, 0);
    calendar.set (Calendar.MONTH, 3);
    Date start = calendar.getTime ();
    calendar.set (Calendar.MONTH, 5);
    Date end = calendar.getTime ();
    calendar.setTime (start);
    Date d = null;
    while ((d = calendar.getTime ()).before (end) || d.equals (end)) {
        int day = calendar.get (Calendar.DAY_OF_WEEK);
        if (day != Calendar.SATURDAY && day != Calendar.SUNDAY) {
            System.out.println (d);
        }
        calendar.add (Calendar.DAY_OF_MONTH, 1);
    }
}
----------------------------------------

public static void main (String [] args) {
    LocalDate start = LocalDate.of (2018, 6, 1);
    LocalDate end = LocalDate.of (2018, 8, 1);
    LocalDate d = start;
    while (d.compareTo (end) <= 0) {
        if (d.getDayOfWeek () != DayOfWeek.SATURDAY && d.getDayOfWeek () != DayOfWeek.SUNDAY) {
            System.out.println (d);
        }
        d = d.plusDays (1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11050874_11050966_1_18
11050874_29233777_8_44
Title: Sort array of object by particular member inside the object/class 
----------------------------------------

public static void main (String [] args) {
    InfoClass [] dd = new InfoClass [3];
    Arrays.sort (dd, new Comparator < InfoClass > () {
        @Override
        public int compare (InfoClass arg0, InfoClass arg1) {
            if (arg0.distance == arg1.distance) {
                return 0;
            } else if (arg0.distance < arg1.distance) {
                return - 1;
            } else {
                return 1;
            }

        }}

    );
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Employee empList [] = new Employee [4];
    empList [0] = new Employee (8, "Kiran", "Developer", 15000);
    empList [1] = new Employee (18, "Krishna", "DBA", 35000);
    empList [2] = new Employee (3, "Pradeep", "Tester", 25000);
    empList [3] = new Employee (7, "Mithun", "Admin", 20000);
    Arrays.sort (empList);
    System.out.println ("\nAfter Sorting Base On ID");
    for (Employee emp : empList) System.out.println (emp);

    Arrays.sort (empList, new EmployeeByDept ());
    System.out.println ("\nAfter Sorting Base On Department");
    for (Employee emp : empList) System.out.println (emp);

    Arrays.sort (empList, new EmployeeByName ());
    System.out.println ("\nAfter Sorting Base On Name");
    for (Employee emp : empList) System.out.println (emp);

    Arrays.sort (empList, new EmployeeBySalary ());
    System.out.println ("\nAfter Sorting Base On Salary");
    for (Employee emp : empList) System.out.println (emp);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11066552_11066655_4_36
11066552_37146168_1_13
Title: Count the amount of times a string appears in a file 
----------------------------------------

public static void main (String args []) throws Exception {
    String testString = "Test";
    String filePath = "Test.txt";
    String strLine;
    int numRead = 0;
    try {
        FileInputStream fstream = new FileInputStream (filePath);
        DataInputStream in = new DataInputStream (fstream);
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        while ((strLine = br.readLine ()) != null) {
            strLine = strLine + " ";
            String [] strArry = strLine.split (testString);
            if (strArry.length > 1) {
                numRead = numRead + strArry.length - 1;
            } else {
                if (strLine == testString) {
                    numRead ++;
                }
            }
        }
        in.close ();
        System.out.println (testString + " was found " + numRead + " times.");
    } catch (Exception e) {
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new FileReader ("Test.txt"));
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter the subtring to look for: ");
    String word = sc.next ();
    String line = in.readLine ();
    int count = 0;
    do {
        count += (line.length () - line.replace (word, "").length ()) / word.length ();
        line = in.readLine ();
    } while (line != null);
    System.out.print ("There are " + count + " occurrences of " + word + " in ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11071421_11071471_26_36
11071421_11071734_23_31
Title: FlowLayout not displaying components while GridLayout does? 
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            CustomComponent main = new CustomComponent ();
            main.display ();
        }}

    ;
    javax.swing.SwingUtilities.invokeLater (r);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            FlowLayoutTest flowLayoutTest = new FlowLayoutTest ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11084382_11084753_19_27
11084382_11084753_87_109
Title: Recursively replace regex find with path in the regex 
----------------------------------------

public int read (CharBuffer target) throws IOException {
    int len = target.remaining ();
    char [] cbuf = new char [len];
    int n = read (cbuf, 0, len);
    if (n > 0) {
        target.put (cbuf, 0, n);
    }
    return n;
}
----------------------------------------

public int read (char [] cbuf, int off, int len) throws IOException {
    if (end) {
        return - 1;
    }
    int n = 0;
    int read = 0;
    for (int i = 0;
    i < len && n != - 1; i ++) {
        n = this.readNext ();
        if (n != - 1 && n != 0) {
            read += 1;
            cbuf [off + i] = (char) n;
        } else if (n == 0) {
            i = i - 1;
        }

    }
    if (n == - 1) {
        end = true;
    }
    return read;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11093326_11093360_27_40
11093326_11093534_4_21
Title: Restricting JTextField input to Integers 
----------------------------------------

public void insertString (FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
    Document doc = fb.getDocument ();
    StringBuilder sb = new StringBuilder ();
    sb.append (doc.getText (0, doc.getLength ()));
    sb.insert (offset, string);
    if (test (sb.toString ())) {
        super.insertString (fb, offset, string, attr);
    } else {
    }
}
----------------------------------------

public void insertString (FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
    try {
        if (string.equals (".") && ! fb.getDocument ().getText (0, fb.getDocument ().getLength ()).contains (".")) {
            super.insertString (fb, offset, string, attr);
            return;
        }
        Double.parseDouble (string);
        super.insertString (fb, offset, string, attr);
    } catch (Exception e) {
        Toolkit.getDefaultToolkit ().beep ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11093326_11093360_52_66
11093326_11093534_24_40
Title: Restricting JTextField input to Integers 
----------------------------------------

public void replace (FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
    Document doc = fb.getDocument ();
    StringBuilder sb = new StringBuilder ();
    sb.append (doc.getText (0, doc.getLength ()));
    sb.replace (offset, offset + length, text);
    if (test (sb.toString ())) {
        super.replace (fb, offset, length, text, attrs);
    } else {
    }
}
----------------------------------------

public void replace (FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
    try {
        if (text.equals (".") && ! fb.getDocument ().getText (0, fb.getDocument ().getLength ()).contains (".")) {
            super.insertString (fb, offset, text, attrs);
            return;
        }
        Double.parseDouble (text);
        super.replace (fb, offset, length, text, attrs);
    } catch (Exception e) {
        Toolkit.getDefaultToolkit ().beep ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11105915_11106050_1_15
11105915_11106115_17_25
Title: Java - Get an Image of a JPanel 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Test");
    JPanel panel = new JPanel ();
    panel.setBackground (Color.BLUE);
    JLabel label = new JLabel ("Image");
    label.setForeground (Color.RED);
    panel.add (label);
    frame.add (panel, BorderLayout.NORTH);
    frame.pack ();
    JLabel image = new JLabel (new ImageIcon (createImage (panel)));
    frame.add (image, BorderLayout.SOUTH);
    frame.pack ();
    label.setText ("Original");
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            ScreenCapture screenCapture = new ScreenCapture ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11111003_11111092_26_34
11111003_11111092_36_44
Title: How can I easily call a java class (which queries a database) and return usable results to a JSP? 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11111003_11111092_26_34
11111003_11111092_46_54
Title: How can I easily call a java class (which queries a database) and return usable results to a JSP? 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection conn) {
    try {
        if (conn != null) {
            conn.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11111003_11111092_36_44
11111003_11111092_46_54
Title: How can I easily call a java class (which queries a database) and return usable results to a JSP? 
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection conn) {
    try {
        if (conn != null) {
            conn.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11123864_11124277_1_23
11123864_11124906_7_53
Title: Java regEx URL matching issue 
----------------------------------------

public static void main (String [] args) {
    Pattern p = Pattern.compile ("(?:http://)?.+?(/.+?)?/\\d+/\\d{2}/\\d{2}(/.+?)?/\\w{22}");
    String [] strings = {"www.examplesite.com/dir1/dir2/4444/2012/06/19/title-of-some-story/FAQKZjC3veXSalP9zxFgZP/htmlpage.html", "www.examplesite.com/2012/06/19/title-of-some-story/FAQKZjC3veXSalP9zxFgZP/htmlpage.html", "www.examplesite.com/dir/2012/06/19/title-of-some-story/FAQKZjC3veXSalP9zxFgZP/htmlpage.html", "www.examplesite.com/dir/2012/06/19/FAQKZjC3veXSalP9zxFgZP/htmlpage.html", "www.examplesite.com/2012/06/19/FAQKZjC3veXSalP9zxFgZP/htmlpage.html"};
    for (int idx = 0;
    idx < strings.length; idx ++) {
        Matcher m = p.matcher (strings [idx]);
        if (m.find ()) {
            String dir = m.group (1);
            String title = m.group (2);
            if (title != null) {
                title = title.substring (1);
            }
            System.out.println (idx + ": Dir: " + dir + ", Title: " + title);
        }
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String url = "http://www.examplesite.com/dir/2012/06/19/title-of-some-story/FAQKZjC3veXSalP9zxFgZP/htmlpage.html";
    String url2 = "www.examplesite.com/dir/dir2/dir3/2012/06/19/FAQKZjC3veXSalP9zxFgZP/htmlpage.html";
    String url3 = "www.examplesite.com/2012/06/19/title-of-some-story/FAQKZjC3veXSalP9zxFgZP/htmlpage.html";
    String patternStr = "(?:http://)?[^/]*[/]?([\\S]*)/[\\d]{4}/[\\d]{2}/[\\d]{2}[/]?([\\S]*)/[\\S]*/[\\S]*";
    Pattern pattern = Pattern.compile (patternStr);
    System.out.println ("Match 1st URL:");
    Matcher matcher = pattern.matcher (url);
    if (matcher.find ()) {
        System.out.println ("URL: " + matcher.group (0));
        System.out.println ("DIR: " + matcher.group (1));
        System.out.println ("TITLE: " + matcher.group (2));
    } else {
        System.out.println ("No match.");
    }
    System.out.println ("\nMatch 2nd URL:");
    matcher = pattern.matcher (url2);
    if (matcher.find ()) {
        System.out.println ("URL: " + matcher.group (0));
        System.out.println ("DIR: " + matcher.group (1));
        System.out.println ("TITLE: " + matcher.group (2));
    } else {
        System.out.println ("No match.");
    }
    System.out.println ("\nMatch 3rd URL:");
    matcher = pattern.matcher (url3);
    if (matcher.find ()) {
        System.out.println ("URL: " + matcher.group (0));
        System.out.println ("DIR: " + matcher.group (1));
        System.out.println ("TITLE: " + matcher.group (2));
    } else {
        System.out.println ("No match.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11133301_11133329_19_27
11133301_11133425_96_144
Title: ToolTipManager in Java 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            initUI ();
        }}

    );
}
----------------------------------------

public static void main (final String args []) {
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (Exception e) {
                e.printStackTrace ();
            }
            JFrame f = new JFrame ("JScrollableToolTip");
            f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            f.setSize (300, 200);
            f.setLocationRelativeTo (null);
            ToolTipManager.sharedInstance ().setInitialDelay (500);
            ToolTipManager.sharedInstance ().setDismissDelay (10000);
            ToolTipManager.sharedInstance ().mousePressed (null);
            JTable table = new JTable (50, 4) {
                private static final long serialVersionUID = 1L;
                @Override
                public JToolTip createToolTip () {
                    JScrollableToolTip tip = new JScrollableToolTip (3, 20);
                    tip.setComponent (this);
                    return tip;
                }}

            ;
            table.setDefaultRenderer (Object.class, new DefaultTableCellRenderer () {
                private static final long serialVersionUID = 1L;
                @Override
                public Component getTableCellRendererComponent (JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                    setToolTipText ("Row " + row + " Column " + column + "\nUsed to display a 'Tip' for a Component. " + "Typically components provide api to automate the process of " + "using ToolTips. For example, any Swing component can use the " + "JComponent  setToolTipText method to specify the text for a standard tooltip.");
                    return this;
                }}

            );
            f.add (new JScrollPane (table));
            f.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11133683_11238867_30_55
11133683_11445242_586_621
Title: How to implement date picker in lwuit? 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    final Form dateForm = new Form ();
    final DateField dateField = new DateField (null, DateField.DATE);
    if (date != null) {
        dateField.setDate (date);
    }
    dateForm.append (dateField);
    final javax.microedition.lcdui.Command acceptCommand = new javax.microedition.lcdui.Command (UIManager.getInstance ().localize (OK, OK), javax.microedition.lcdui.Command.OK, 0);
    final javax.microedition.lcdui.Command cancelCommand = new javax.microedition.lcdui.Command (UIManager.getInstance ().localize (CANCEL, CANCEL), javax.microedition.lcdui.Command.CANCEL, 0);
    dateForm.addCommand (acceptCommand);
    dateForm.addCommand (cancelCommand);
    CommandListener commandListener = new CommandListener () {
        public void commandAction (javax.microedition.lcdui.Command command, Displayable displayable) {
            if (command == acceptCommand && dateField.getDate () != null) {
                DatePicker.this.date = dateField.getDate ();
                DatePicker.this.setText (DatePicker.toString (DatePicker.this.date));
            }
            Display.init (Application.getInstance ().midlet);
            Application.getInstance ().mainForm.show ();
        }}

    ;
    dateForm.setCommandListener (commandListener);
    javax.microedition.lcdui.Display.getDisplay (Application.getInstance ().midlet).setCurrent (dateForm);
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    Object src = evt.getSource ();
    if (src instanceof ComboBox) {
        setMonth (Integer.parseInt ((String) year.getSelectedItem ()), month.getSelectedIndex ());
        componentChanged ();
        return;
    }
    if (changesSelectedDateEnabled) {
        System.out.println ("ttttttttttttttttttttttttttttt");
        for (int iter = 0;
        iter < buttons.length; iter ++) {
            if (src == buttons [iter]) {
                selected.setUIID ("CalendarDay");
                buttons [iter].setUIID ("CalendarSelectedDay");
                selectedDay = dates [iter];
                selected.getSelectedStyle ().setBgColor (bgColorArray [1]);
                selected.getUnselectedStyle ().setBgColor (bgColorArray [0]);
                selected.getPressedStyle ().setBgColor (bgColorArray [2]);
                selected = buttons [iter];
                selected.getSelectedStyle ().setBgColor (bgColorArray [1]);
                selected.getUnselectedStyle ().setBgColor (bgColorArray [0]);
                selected.getPressedStyle ().setBgColor (bgColorArray [2]);
                fireActionEvent ();
                if (! getComponentForm ().isSingleFocusMode ()) {
                    setHandlesInput (false);
                }
                return;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11143304_11143442_5_16
11143304_11143467_3_11
Title: Java program that tells what coins to give out for any amount of change from 1 cent to 99 cents 
----------------------------------------

public static void main (String [] args) {
    amount = (int) (Double.parseDouble (args [0]) * 100);
    amountPreserv = amount;
    System.out.println ("Five: " + computeCoin (500));
    System.out.println ("one: " + computeCoin (100));
    System.out.println ("Q : " + computeCoin (25));
    System.out.println ("D : " + computeCoin (10));
    System.out.println ("N : " + computeCoin (5));
    System.out.println ("P : " + computeCoin (1));
    System.out.println ("Value inputed : " + amountPreserv);
}
----------------------------------------

public static void main (String [] args) {
    amount = (int) (Double.parseDouble (args [0]) * 100);
    System.out.println ("Five: " + computeCoin (500));
    System.out.println ("one: " + computeCoin (100));
    System.out.println ("Q : " + computeCoin (25));
    System.out.println ("D : " + computeCoin (10));
    System.out.println ("N : " + computeCoin (5));
    System.out.println ("P : " + computeCoin (1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
11151258_11151307_1_14
11151258_11151471_1_14
Title: How to print an object which points to an array in Java 
----------------------------------------

private String convertToHumanReadableFormat (Object value) {
    if (value == null) return "N/A";

    if (value.getClass ().isArray ()) {
        int count = Array.getLength (value);
        ArrayList < Object > list = new ArrayList < Object > ();
        for (int i = 0;
        i < count; i ++) {
            list.add (Array.get (value, i));
        }
        return list.toString ();
    }
    return value.toString ();
}
----------------------------------------

private < T > String convertToHumanReadableFormat (Object value) {
    if (value == null) return "N/A";

    if (value.getClass ().isArray ()) {
        if (value instanceof int [] || value instanceof long []) {
            List < T > list = new ArrayList < T > ();
            list.addAll ((Collection < ? extends T >) Arrays.asList (value));
            return convertToHumanReadableFormat (list.toArray ());
        } else {
            return Arrays.deepToString ((Object []) value);
        }
    }
    return value.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1115359_1115366_124_140
1115359_1115403_106_127
Title: How to draw a rectangle on a java applet using mouse drag event and make it stay 
----------------------------------------

public void paint (final Graphics g) {
    super.paint (g);
    g.drawString ("Start Rec Here", this.x1, this.y1);
    g.drawString ("End Rec Here", this.x2, this.y2);
    Rectangle newRectangle = getRectangleFromPoints ();
    if (! this.isNewRect) {
        g.drawRect (newRectangle.x, newRectangle.y, newRectangle.width, newRectangle.height);
    }
    for (Rectangle rectangle : this.rectangles) {
        g.drawRect (rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    }
    this.cords.setText ("w = " + this.w + ", h = " + this.h);
}
----------------------------------------

public void paint (final Graphics g) {
    super.paint (g);
    g.drawString ("Start Rec Here", this.x1, this.y1);
    g.drawString ("End Rec Here", this.x2, this.y2);
    int width = this.x1 - this.x2;
    int height = this.y1 - this.y2;
    this.w = Math.abs (width);
    this.h = Math.abs (height);
    this.x = width < 0 ? this.x1 : this.x2;
    this.y = height < 0 ? this.y1 : this.y2;
    if (! this.isNewRect) {
        g.drawRect (this.x, this.y, this.w, this.h);
    }
    this.cords.setText ("w = " + this.w + ", h = " + this.h);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1116123_10215198_1_10
1116123_25859434_1_38
Title: How do I calculate someone's age in Java? 
----------------------------------------

public int getAge (Date birthDate) {
    Calendar a = Calendar.getInstance (Locale.US);
    a.setTime (date);
    Calendar b = Calendar.getInstance (Locale.US);
    int age = b.get (YEAR) - a.get (YEAR);
    if (a.get (MONTH) > b.get (MONTH) || (a.get (MONTH) == b.get (MONTH) && a.get (DATE) > b.get (DATE))) {
        age --;
    }
    return age;
}
----------------------------------------

public int getAge (String birthdate, String today) {
    String birth [] = birthdate.split ("-");
    String now [] = today.split ("-");
    int age = 0;
    int ybirth = Integer.parseInt (birth [0]);
    int mbirth = Integer.parseInt (birth [1]);
    int dbirth = Integer.parseInt (birth [2]);
    int ynow = Integer.parseInt (now [0]);
    int mnow = Integer.parseInt (now [1]);
    int dnow = Integer.parseInt (now [2]);
    if (ybirth < ynow) {
        age = ynow - ybirth;
        if (mbirth == mnow) {
            if (dbirth > dnow) age --;

        } else if (mbirth > mnow) {
            age --;
        }

    }
    return age;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1116123_10215198_1_10
1116123_5547187_1_18
Title: How do I calculate someone's age in Java? 
----------------------------------------

public int getAge (Date birthDate) {
    Calendar a = Calendar.getInstance (Locale.US);
    a.setTime (date);
    Calendar b = Calendar.getInstance (Locale.US);
    int age = b.get (YEAR) - a.get (YEAR);
    if (a.get (MONTH) > b.get (MONTH) || (a.get (MONTH) == b.get (MONTH) && a.get (DATE) > b.get (DATE))) {
        age --;
    }
    return age;
}
----------------------------------------

public int getAge (int year, int month, int day) {
    Date now = new Date ();
    int nowMonth = now.getMonth () + 1;
    int nowYear = now.getYear () + 1900;
    int result = nowYear - year;
    if (month > nowMonth) {
        result --;
    } else if (month == nowMonth) {
        int nowDay = now.getDate ();
        if (day > nowDay) {
            result --;
        }
    }

    return result;
}
----------------------------------------
