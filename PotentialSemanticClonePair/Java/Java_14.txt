$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35118155_1_46
14047583_42349573_2_24
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter the number: ");
    Scanner userInput = new Scanner (System.in);
    int myNum = userInput.nextInt ();
    userInput.close ();
    System.out.println ("Centered Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int k = 0;
        k < (myNum - i); k += 1) {
            System.out.print (" ");
        }
        for (int j = 0;
        j < i; j ++) {
            System.out.print (" *");
        }
        System.out.println ("");
    }
    System.out.println ("Left Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print ("* ");
        }
        System.out.println ("");
    }
    System.out.println ("Right Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int k = 0;
        k < (myNum - i); k += 1) {
            System.out.print ("  ");
        }
        for (int j = 0;
        j < i; j += 1) {
            System.out.print (" *");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String arg []) {
    System.out.print ("Enter Triangle Size : ");
    int num = 0;
    try {
        num = Integer.parseInt (read.readLine ());
    } catch (Exception Number) {
        System.out.println ("Invalid Number!");
    }
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j < num - (i - 1); j ++) {
            System.out.print (" ");
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print ("*");
            for (int k1 = 1;
            k1 < k; k1 += k) {
                System.out.print ("*");
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35118155_1_46
14047583_46392957_1_14
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter the number: ");
    Scanner userInput = new Scanner (System.in);
    int myNum = userInput.nextInt ();
    userInput.close ();
    System.out.println ("Centered Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int k = 0;
        k < (myNum - i); k += 1) {
            System.out.print (" ");
        }
        for (int j = 0;
        j < i; j ++) {
            System.out.print (" *");
        }
        System.out.println ("");
    }
    System.out.println ("Left Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print ("* ");
        }
        System.out.println ("");
    }
    System.out.println ("Right Triange");
    for (int i = 1;
    i <= myNum; i += 1) {
        for (int k = 0;
        k < (myNum - i); k += 1) {
            System.out.print ("  ");
        }
        for (int j = 0;
        j < i; j += 1) {
            System.out.print (" *");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    String whatToPrint = "aword";
    int strLen = whatToPrint.length ();
    int floors = 8;
    for (int f = 1, h = strLen * floors;
    f < floors * 2; f += 2, h -= strLen) {
        for (int k = 1;
        k < h; k ++) {
            System.out.print (" ");
        }
        for (int g = 0;
        g < f; g ++) {
            System.out.print (whatToPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35376145_4_17
14047583_39545734_6_19
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String a []) throws Exception {
    DataInputStream in = new DataInputStream (System.in);
    int n = Integer.parseInt (in.readLine ());
    String b = new String (new char [n]).replaceAll ("\0", " ");
    String s = "*";
    for (int i = 1;
    i <= n; i ++) {
        System.out.print (b);
        System.out.println (s);
        s += "**";
        b = b.substring (0, n - i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    for (int i = 0;
    i < size; i ++) {
        for (int k = 1;
        k < size - i; k ++) {
            System.out.print (" ");
        }
        for (int j = size;
        j >= size - i; j --) {
            System.out.print ("#");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35376145_4_17
14047583_40108646_1_17
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String a []) throws Exception {
    DataInputStream in = new DataInputStream (System.in);
    int n = Integer.parseInt (in.readLine ());
    String b = new String (new char [n]).replaceAll ("\0", " ");
    String s = "*";
    for (int i = 1;
    i <= n; i ++) {
        System.out.print (b);
        System.out.println (s);
        s += "**";
        b = b.substring (0, n - i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int nuberOfRows = 10;
    for (int row = 0;
    row < nuberOfRows; row ++) {
        for (int leftspace = 0;
        leftspace < (nuberOfRows - row); leftspace ++) {
            System.out.print (" ");
        }
        for (int star = 0;
        star < 2 * row + 1; star ++) {
            System.out.print ("*");
        }
        for (int rightSpace = 0;
        rightSpace < (nuberOfRows - row); rightSpace ++) {
            System.out.print (" ");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35376145_4_17
14047583_42349573_2_24
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String a []) throws Exception {
    DataInputStream in = new DataInputStream (System.in);
    int n = Integer.parseInt (in.readLine ());
    String b = new String (new char [n]).replaceAll ("\0", " ");
    String s = "*";
    for (int i = 1;
    i <= n; i ++) {
        System.out.print (b);
        System.out.println (s);
        s += "**";
        b = b.substring (0, n - i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String arg []) {
    System.out.print ("Enter Triangle Size : ");
    int num = 0;
    try {
        num = Integer.parseInt (read.readLine ());
    } catch (Exception Number) {
        System.out.println ("Invalid Number!");
    }
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j < num - (i - 1); j ++) {
            System.out.print (" ");
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print ("*");
            for (int k1 = 1;
            k1 < k; k1 += k) {
                System.out.print ("*");
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_35376145_4_17
14047583_46392957_1_14
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String a []) throws Exception {
    DataInputStream in = new DataInputStream (System.in);
    int n = Integer.parseInt (in.readLine ());
    String b = new String (new char [n]).replaceAll ("\0", " ");
    String s = "*";
    for (int i = 1;
    i <= n; i ++) {
        System.out.print (b);
        System.out.println (s);
        s += "**";
        b = b.substring (0, n - i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String whatToPrint = "aword";
    int strLen = whatToPrint.length ();
    int floors = 8;
    for (int f = 1, h = strLen * floors;
    f < floors * 2; f += 2, h -= strLen) {
        for (int k = 1;
        k < h; k ++) {
            System.out.print (" ");
        }
        for (int g = 0;
        g < f; g ++) {
            System.out.print (whatToPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_39545734_6_19
14047583_40108646_1_17
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    for (int i = 0;
    i < size; i ++) {
        for (int k = 1;
        k < size - i; k ++) {
            System.out.print (" ");
        }
        for (int j = size;
        j >= size - i; j --) {
            System.out.print ("#");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int nuberOfRows = 10;
    for (int row = 0;
    row < nuberOfRows; row ++) {
        for (int leftspace = 0;
        leftspace < (nuberOfRows - row); leftspace ++) {
            System.out.print (" ");
        }
        for (int star = 0;
        star < 2 * row + 1; star ++) {
            System.out.print ("*");
        }
        for (int rightSpace = 0;
        rightSpace < (nuberOfRows - row); rightSpace ++) {
            System.out.print (" ");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_39545734_6_19
14047583_42349573_2_24
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    for (int i = 0;
    i < size; i ++) {
        for (int k = 1;
        k < size - i; k ++) {
            System.out.print (" ");
        }
        for (int j = size;
        j >= size - i; j --) {
            System.out.print ("#");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String arg []) {
    System.out.print ("Enter Triangle Size : ");
    int num = 0;
    try {
        num = Integer.parseInt (read.readLine ());
    } catch (Exception Number) {
        System.out.println ("Invalid Number!");
    }
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j < num - (i - 1); j ++) {
            System.out.print (" ");
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print ("*");
            for (int k1 = 1;
            k1 < k; k1 += k) {
                System.out.print ("*");
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_39545734_6_19
14047583_46392957_1_14
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int size = sc.nextInt ();
    for (int i = 0;
    i < size; i ++) {
        for (int k = 1;
        k < size - i; k ++) {
            System.out.print (" ");
        }
        for (int j = size;
        j >= size - i; j --) {
            System.out.print ("#");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String whatToPrint = "aword";
    int strLen = whatToPrint.length ();
    int floors = 8;
    for (int f = 1, h = strLen * floors;
    f < floors * 2; f += 2, h -= strLen) {
        for (int k = 1;
        k < h; k ++) {
            System.out.print (" ");
        }
        for (int g = 0;
        g < f; g ++) {
            System.out.print (whatToPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_40108646_1_17
14047583_42349573_2_24
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    int nuberOfRows = 10;
    for (int row = 0;
    row < nuberOfRows; row ++) {
        for (int leftspace = 0;
        leftspace < (nuberOfRows - row); leftspace ++) {
            System.out.print (" ");
        }
        for (int star = 0;
        star < 2 * row + 1; star ++) {
            System.out.print ("*");
        }
        for (int rightSpace = 0;
        rightSpace < (nuberOfRows - row); rightSpace ++) {
            System.out.print (" ");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String arg []) {
    System.out.print ("Enter Triangle Size : ");
    int num = 0;
    try {
        num = Integer.parseInt (read.readLine ());
    } catch (Exception Number) {
        System.out.println ("Invalid Number!");
    }
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j < num - (i - 1); j ++) {
            System.out.print (" ");
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print ("*");
            for (int k1 = 1;
            k1 < k; k1 += k) {
                System.out.print ("*");
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_40108646_1_17
14047583_46392957_1_14
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String [] args) {
    int nuberOfRows = 10;
    for (int row = 0;
    row < nuberOfRows; row ++) {
        for (int leftspace = 0;
        leftspace < (nuberOfRows - row); leftspace ++) {
            System.out.print (" ");
        }
        for (int star = 0;
        star < 2 * row + 1; star ++) {
            System.out.print ("*");
        }
        for (int rightSpace = 0;
        rightSpace < (nuberOfRows - row); rightSpace ++) {
            System.out.print (" ");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    String whatToPrint = "aword";
    int strLen = whatToPrint.length ();
    int floors = 8;
    for (int f = 1, h = strLen * floors;
    f < floors * 2; f += 2, h -= strLen) {
        for (int k = 1;
        k < h; k ++) {
            System.out.print (" ");
        }
        for (int g = 0;
        g < f; g ++) {
            System.out.print (whatToPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14047583_42349573_2_24
14047583_46392957_1_14
Title: Printing *s as triangles in Java? 
----------------------------------------

public static void main (String arg []) {
    System.out.print ("Enter Triangle Size : ");
    int num = 0;
    try {
        num = Integer.parseInt (read.readLine ());
    } catch (Exception Number) {
        System.out.println ("Invalid Number!");
    }
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j < num - (i - 1); j ++) {
            System.out.print (" ");
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print ("*");
            for (int k1 = 1;
            k1 < k; k1 += k) {
                System.out.print ("*");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String whatToPrint = "aword";
    int strLen = whatToPrint.length ();
    int floors = 8;
    for (int f = 1, h = strLen * floors;
    f < floors * 2; f += 2, h -= strLen) {
        for (int k = 1;
        k < h; k ++) {
            System.out.print (" ");
        }
        for (int g = 0;
        g < f; g ++) {
            System.out.print (whatToPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14051638_14051701_1_18
14051638_35959194_22_28
Title: processing an array via method 
----------------------------------------

public static int [] [] arrayreader () {
    int rows, cols;
    int [] [] result = new int [rows] [cols];
    rows = input.nextInt ();
    cols = input.nextInt ();
    for (int i = 0;
    i < rows; i ++) {
        for (int j = 0;
        j < cols; j ++) {
            result [i] [j] = input.nextInt ();
        }
    }
    return result;
}
----------------------------------------

public static void arrayreader (int [] [] m, int rows, int cols) {
    for (int i = 0;
    i < rows; i ++) {
        for (int j = 0;
        j < cols; j ++) {
            m [i] [j] = sc.nextInt ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14054601_14054963_22_31
14054601_14121983_1_27
Title: Jumping to internal anchors in JEditorPane 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new PaneWithScrollFrame ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (final String [] args) {
    final JFrame f = new JFrame ();
    f.setDefaultCloseOperation (WindowConstants.DISPOSE_ON_CLOSE);
    f.setTitle ("JEditorPane Test");
    final String text = "<html><body>xyz<br /><br /><br />lol <a name='link1'>test</a>some text<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />some more text<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />some more text<a href='#link1'>jump to top</a></body></html>";
    final JEditorPane ep = new JEditorPane ();
    ep.setContentType ("text/html");
    ep.setText (text);
    ep.setEditable (false);
    ep.addHyperlinkListener (new HyperlinkListener () {
        @Override
        public void hyperlinkUpdate (final HyperlinkEvent pE) {
            if (HyperlinkEvent.EventType.ACTIVATED == pE.getEventType ()) {
                String desc = pE.getDescription ();
                if (desc == null || ! desc.startsWith ("#")) return;

                desc = desc.substring (1);
                ep.scrollToReference (desc);
            }
        }}

    );
    final JScrollPane sp = new JScrollPane (ep);
    f.add (sp);
    f.setBounds (200, 200, 400, 400);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14054601_14054963_50_58
14054601_14121983_13_20
Title: Jumping to internal anchors in JEditorPane 
----------------------------------------

public void hyperlinkUpdate (HyperlinkEvent e) {
    if (HyperlinkEvent.EventType.ACTIVATED.equals (e.getEventType ())) {
        String description = e.getDescription ();
        if (TOP.equals (description)) {
            JViewport viewport = scrollpane.getViewport ();
            viewport.setViewPosition (new Point (0, 0));
        }
    }
}
----------------------------------------

public void hyperlinkUpdate (final HyperlinkEvent pE) {
    if (HyperlinkEvent.EventType.ACTIVATED == pE.getEventType ()) {
        String desc = pE.getDescription ();
        if (desc == null || ! desc.startsWith ("#")) return;

        desc = desc.substring (1);
        ep.scrollToReference (desc);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14091140_14091175_3_15
14091140_14091235_1_14
Title: run a java file within another java file and display its output to console 
----------------------------------------

public static void main (String [] arg) {
    System.out.println ("NEW FILE PRINT LINE EXECUTED");
    try {
        Process pro1 = Runtime.getRuntime ().exec ("javac hworld.java");
        pro1.waitFor ();
        Process pro2 = Runtime.getRuntime ().exec ("java hworld");
        pro2.waitFor ();
    } catch (Exception e) {
        System.out.println ("Some Error");
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] arg) {
    System.out.println ("NEW FILE PRINT LINE EXECUTED");
    try {
        Process pro1 = Runtime.getRuntime ().exec ("javac hworld.java");
        try (BufferedReader reader = new BufferedReader (new InputStreamReader (pro1.getInputStream (), Charset.forName ("UTF-8")))) {
            String line;
            while ((line = reader.readLine ()) != null) {
                System.out.println (line);
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14091901_14104818_27_34
14091901_24504355_599_622
Title: magnetic effect to attach window dialog or frame to another 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new MagneticFrameAndDialog ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (Exception e) {
    }
    JFrame frame1 = new JFrame ("Frame 1");
    JDialog dialog2 = new JDialog ((JFrame) null, "Dialog 2");
    frame1.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame1.setSize (200, 50);
    dialog2.setSize (200, 50);
    frame1.setVisible (true);
    dialog2.setVisible (true);
    JDialog dialog1 = new JDialog ((JFrame) null, "Dialog 1");
    dialog1.setSize (200, 50);
    dialog1.setVisible (true);
    DockingManager manager = new DockingManager ();
    manager.registerComponent (frame1, 1);
    manager.registerComponent (dialog2, 2);
    manager.registerComponent (dialog1, 2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14091901_14104818_332_351
14091901_14104818_365_375
Title: magnetic effect to attach window dialog or frame to another 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (x < finalX) {
        x += INCREMENT;
    } else if (x > finalX) {
        x -= DECREMENT;
    }

    if (y < finalY) {
        y += INCREMENT;
    } else if (y > finalY) {
        y -= DECREMENT;
    }

    comp.setLocation (x, y);
    if (x == finalX && y == finalY) {
        if (comp instanceof Window) {
            ((Window) comp).toFront ();
        }
        ((Timer) ae.getSource ()).stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    Docker.MyButton jtb = (Docker.MyButton) ae.getSource ();
    String tmp = jtb.getText ();
    if (tmp.contains ("un-dock")) {
        jtb.setText (tmp.replace ("un-dock", "dock"));
        deregisterDockee (jtb.getComponent ());
    } else {
        jtb.setText (tmp.replace ("dock", "un-dock"));
        registerDockee (jtb.getComponent (), jtb.getDockablePosition ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1410951_1410961_6_32
1410951_32021795_16_41
Title: How does Java's System.exit() work with try/catch/finally blocks? 
----------------------------------------

public static void main (String...argv) throws Exception {
    System.setSecurityManager (new SecurityManager () {
        @Override
        public void checkPermission (Permission perm) {
        }@Override
        public void checkExit (int status) {
            throw new SecurityException ();
        }}

    );
    System.err.println ("I'm dying!");
    try {
        System.exit (0);
    } finally {
        System.err.println ("I'm not dead yet!");
        System.exit (1);
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        System.out.println ("accno" + "\t" + "name" + "\t" + "balance");
        for (int i = 0;
        i < 5; i ++) {
            System.out.println (accno [i] + "\t" + name [i] + "\t" + bal [i]);
            if (bal [i] < 200) {
                UserDefind ue = new UserDefind ("Balance amount Less");
                throw ue;
            }
        }
    } catch (UserDefind ue) {
        System.out.println (ue);
    } finally {
        System.out.println ("Finnaly");
        System.out.println ("Finnaly");
        System.out.println ("Finnaly");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1410951_1410961_6_32
1410951_33835125_1_16
Title: How does Java's System.exit() work with try/catch/finally blocks? 
----------------------------------------

public static void main (String...argv) throws Exception {
    System.setSecurityManager (new SecurityManager () {
        @Override
        public void checkPermission (Permission perm) {
        }@Override
        public void checkExit (int status) {
            throw new SecurityException ();
        }}

    );
    System.err.println ("I'm dying!");
    try {
        System.exit (0);
    } finally {
        System.err.println ("I'm not dead yet!");
        System.exit (1);
    }
}
----------------------------------------

public static void main (String [] args) {
    try (BufferedReader reader = new TestBufferedReader (new InputStreamReader (System.in))) {
        System.out.println ("In try");
        System.exit (0);
    } catch (Exception e) {
        System.out.println ("Exception of type " + e.getClass ().getName () + " caught: " + e.getMessage ());
    } finally {
        System.out.println ("finally!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1410951_32021795_16_41
1410951_33835125_1_16
Title: How does Java's System.exit() work with try/catch/finally blocks? 
----------------------------------------

public static void main (String [] args) {
    try {
        System.out.println ("accno" + "\t" + "name" + "\t" + "balance");
        for (int i = 0;
        i < 5; i ++) {
            System.out.println (accno [i] + "\t" + name [i] + "\t" + bal [i]);
            if (bal [i] < 200) {
                UserDefind ue = new UserDefind ("Balance amount Less");
                throw ue;
            }
        }
    } catch (UserDefind ue) {
        System.out.println (ue);
    } finally {
        System.out.println ("Finnaly");
        System.out.println ("Finnaly");
        System.out.println ("Finnaly");
    }
}
----------------------------------------

public static void main (String [] args) {
    try (BufferedReader reader = new TestBufferedReader (new InputStreamReader (System.in))) {
        System.out.println ("In try");
        System.exit (0);
    } catch (Exception e) {
        System.out.println ("Exception of type " + e.getClass ().getName () + " caught: " + e.getMessage ());
    } finally {
        System.out.println ("finally!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14111716_30315443_3_20
14111716_36592940_15_41
Title: How to set a mask image for grabCut in OpenCV? 
----------------------------------------

public static void main (String [] args) {
    System.loadLibrary ("opencv_java244");
    Mat image = null;
    image = Highgui.imread ("syh.jpg");
    Rect rectangle = new Rect (25, 25, image.cols () - 64, image.rows () - 64);
    Mat result = new Mat ();
    Mat bgdModel = new Mat ();
    Mat fgdModel = new Mat ();
    Mat source = new Mat (1, 1, CvType.CV_8U, new Scalar (3));
    Imgproc.grabCut (image, result, rectangle, bgdModel, fgdModel, 1, 0);
    Core.compare (result, source, result, Core.CMP_EQ);
    Mat foreground = new Mat (image.size (), CvType.CV_8UC1, new Scalar (0, 0, 0));
    image.copyTo (foreground, result);
    Highgui.imwrite ("sucess1.jpg", foreground);
    System.out.println ("grabcut sucess!");
}
----------------------------------------

public static void main (String [] args) {
    System.loadLibrary (Core.NATIVE_LIBRARY_NAME);
    Mat image = Highgui.imread ("lena.png");
    Mat mask = Highgui.imread ("lena_mask.png", Highgui.CV_LOAD_IMAGE_GRAYSCALE);
    Rect rectangle = new Rect (10, 10, image.cols () - 20, image.rows () - 20);
    Mat bgdModel = new Mat ();
    Mat fgdModel = new Mat ();
    Mat source = new Mat (1, 1, CvType.CV_8U, new Scalar (0));
    convertToOpencvValues (mask);
    int iterCount = 1;
    Imgproc.grabCut (image, mask, rectangle, bgdModel, fgdModel, iterCount, Imgproc.GC_INIT_WITH_MASK);
    convertToHumanValues (mask);
    Imgproc.threshold (mask, mask, 128, 255, Imgproc.THRESH_TOZERO);
    Mat foreground = new Mat (image.size (), CvType.CV_8UC1, new Scalar (0, 0, 0));
    image.copyTo (foreground, mask);
    Highgui.imwrite ("sandbox/sucess1.jpg", foreground);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14114844_14114928_1_12
14114844_14114948_1_13
Title: how to shift strings from one array to another in java? 
----------------------------------------

public String [] shiftRightX (String [] words, String [] data) {
    for (int x = 0;
    x < data.length; x ++) {
        for (int i = words.length - 1;
        i > 0; i --) {
            words [i] = words [i - 1];
        }
        words [0] = data [x];
    }
    return words;
}
----------------------------------------

public String [] shiftRightX (final String [] words, final String [] data) {
    String [] result = new String [words.length];
    int i = 0;
    for (String str : data) {
        result [i] = str;
        i ++;
    }
    for (int j = 0;
    i < words.length; j ++) {
        result [i] = words [j];
        i ++;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14118734_14118916_19_27
14118734_14122382_83_93
Title: KeyPressed and mousePressed Event in an unfocused Component 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new LostMouseEvent ();
        }}

    );
}
----------------------------------------

public static void main (String...args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new SSCCE ().displayGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14124455_14124862_1_13
14124455_14136183_1_22
Title: Count unique tokens java 
----------------------------------------

public static void main (String [] args) {
    String str = "aabbccdefgh";
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.substring (0, i).contains (str.charAt (i) + "")) System.out.println ();
        else count ++;

    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String str = "aabbccdefgh";
    Map < Character, Integer > map = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < str.length (); i ++) {
        Integer count = map.get (str.charAt (i));
        if (count == null) map.put (str.charAt (i), 1);
        else map.put (str.charAt (i), count + 1);

    }
    int uniqueCount = 0;
    for (Integer i : map.values ()) if (i == 1) uniqueCount ++;

    System.out.println (uniqueCount);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14126314_15672217_15_45
14126314_39452919_16_28
Title: Adding value labels to BarChart's bar 
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            Label label = null;
            for (Node node : bar.getChildrenUnmodifiable ()) {
                LOGGER.debug ("Bar has child {}, {}.", node, node.getClass ());
                if (node instanceof Label) {
                    label = (Label) node;
                    break;
                }
            }
            if (label == null) {
                label = new Label (series.getName ());
                label.setRotate (90.0);
                bar.getChildren ().add (label);
            } else {
                label.setText (series.getName ());
            }
        }
    }
}
----------------------------------------

protected void layoutPlotChildren () {
    super.layoutPlotChildren ();
    for (Series < String, Number > series : getData ()) {
        for (Data < String, Number > data : series.getData ()) {
            StackPane bar = (StackPane) data.getNode ();
            final Text dataText = new Text (data.getYValue () + "");
            bar.getChildren ().add (dataText);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14138082_14138938_3_15
14138082_15616591_13_37
Title: Bidirectional bindings of different properties 
----------------------------------------

public static void main (String [] args) {
    SimpleIntegerProperty intProp = new SimpleIntegerProperty ();
    SimpleStringProperty textProp = new SimpleStringProperty ();
    StringConverter < ? extends Number > converter = new IntegerStringConverter ();
    Bindings.bindBidirectional (textProp, intProp, (StringConverter < Number >) converter);
    intProp.set (2);
    System.out.println (textProp);
    textProp.set ("8");
    System.out.println (intProp);
}
----------------------------------------

public static void main (String [] args) {
    SimpleIntegerProperty intProp = new SimpleIntegerProperty ();
    SimpleStringProperty textProp = new SimpleStringProperty ();
    Bindings.bindBidirectional (textProp, intProp, new Format () {
        @Override
        public StringBuffer format (Object obj, StringBuffer toAppendTo, FieldPosition pos) {
            return toAppendTo.append (obj.toString ());
        }@Override
        public Object parseObject (String source, ParsePosition pos) {
            return Integer.parseInt (source);
        }}

    );
    intProp.set (2);
    System.out.println (textProp);
    textProp.set ("8");
    System.out.println (intProp);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14146570_14146641_14_25
14146570_14146919_58_115
Title: Calling a getter in Java though reflection: What's the fastest way to repeatedly call it (performance and scalability wise)? 
----------------------------------------

public static void main (String...args) throws IllegalAccessException, NoSuchMethodException, InvocationTargetException {
    A [] as = new A [100000];
    for (int i = 0;
    i < as.length; i ++) as [i] = new A (i);

    for (int i = 0;
    i < 5; i ++) {
        long time1 = timeSetAccessible (as);
        long time2 = timeNotSetAccessible (as);
        System.out.printf ("With setAccessible true %.1f ns, Without setAccessible %.1f ns%n", (double) time1 / as.length, (double) time2 / as.length);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    final C invocationTarget = new C ();
    final Method m = C.class.getMethod ("foo");
    final Method am = C.class.getMethod ("foo");
    am.setAccessible (true);
    final MethodHandle mh = sfmh;
    Bench [] marks = {new Bench ("reflective invocation (without setAccessible)") {
        @Override
        int run (int iterations) throws Throwable {
            int x = 0;
            for (int i = 0;
            i < iterations; i ++) {
                x += (Integer) m.invoke (invocationTarget);
            }
            return x;
        }}

    , new Bench ("reflective invocation (with setAccessible)") {
        @Override
        int run (int iterations) throws Throwable {
            int x = 0;
            for (int i = 0;
            i < iterations; i ++) {
                x += (Integer) am.invoke (invocationTarget);
            }
            return x;
        }}

    , new Bench ("methodhandle invocation") {
        @Override
        int run (int iterations) throws Throwable {
            int x = 0;
            for (int i = 0;
            i < iterations; i ++) {
                x += (Integer) mh.invokeExact (invocationTarget);
            }
            return x;
        }}

    , new Bench ("static final methodhandle invocation") {
        @Override
        int run (int iterations) throws Throwable {
            int x = 0;
            for (int i = 0;
            i < iterations; i ++) {
                x += (Integer) sfmh.invokeExact (invocationTarget);
            }
            return x;
        }}

    , new Bench ("direct invocation") {
        @Override
        int run (int iterations) throws Throwable {
            int x = 0;
            for (int i = 0;
            i < iterations; i ++) {
                x += invocationTarget.foo ();
            }
            return x;
        }}

    ,};
    for (Bench bm : marks) {
        System.out.println (bm);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1415955_34598937_8_15
1415955_43280469_47_80
Title: private final static attribute vs private final attribute 
----------------------------------------

public static void main (String [] args) {
    Test [] test = new Test [5];
    for (int i = 0;
    i < test.length; i ++) {
        test [i] = new Test ();
        System.out.println ("Class id: " + test [i].CLASSS_ID);
        System.out.println ("Object id: " + test [i].OBJECT_ID);
    }
}
----------------------------------------

public static void main (String [] args) {
    City newyork = new City ("Newyork", 300);
    System.out.println (newyork.getPrice () + "  " + newyork.getCityName ());
    City california = new City ("California", 800);
    System.out.println (california.getPrice () + "  " + california.getCityName ());
    iphone_base_price = 9000;
    City delhi = new City ("delhi", 400);
    System.out.println (delhi.getPrice () + "  " + delhi.getCityName ());
    City moscow = new City ("delhi", 500);
    System.out.println (moscow.getPrice () + "  " + moscow.getCityName ());
    System.out.println (countryName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14165821_14166012_1_21
14165821_14166030_1_44
Title: "Creating menu system using int do-while and if" 
----------------------------------------

public void selectMenu () throws InputMismatchException {
    int selectedMenu;
    Scanner aScanner = new Scanner (System.in);
    do {
        try {
            System.out.println ("Try block begin.");
            selectedMenu = aScanner.nextInt ();
            if (selectedMenu < 1 || selectedMenu > 4) {
                System.out.println ("Input out of range \"" + selectedMenu + "\". Input..");
            }
        } catch (InputMismatchException e) {
            System.out.println ("Catch blok begin.");
            System.out.println ("Invalid input, please input a number between 1-4.");
            aScanner.nextLine ();
            selectedMenu = 0;
        }
    } while (selectedMenu < 1 || selectedMenu > 4);
    System.out.println ("A new game will now start.");
}
----------------------------------------

public void selectMenu () {
    int selectedMenuItem = 0;
    Scanner aScanner = new Scanner (System.in);
    while (selectedMenuItem == 0) {
        String userInputMenuItemString = aScanner.nextLine ();
        try {
            int userInputMenuItem = Integer.parseInt (userInputMenuItemString);
            if (userInputMenuItem > 0 && userInputMenuItem <= 4) {
                selectedMenuItem = userInputMenuItem;
            } else {
                System.out.println ("No option #" + Integer.toString (userInputMenuItem) + " exists!\nTry again:");
            }
        } catch (NumberFormatException ex) {
            System.out.println ("Please input a number!");
        }
    }
    switch (selectedMenuItem) {
        case 1 :
            System.out.println ("You chose to start a new game!");
            break;
        case 2 :
            System.out.println ("You chose to load a game!");
            break;
        case 3 :
            System.out.println ("You chose to access settings!");
            break;
        case 4 :
            System.out.println ("You chose to exit. Bye!");
            System.exit (0);
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14165821_14166012_1_21
14165821_14166060_11_37
Title: "Creating menu system using int do-while and if" 
----------------------------------------

public void selectMenu () throws InputMismatchException {
    int selectedMenu;
    Scanner aScanner = new Scanner (System.in);
    do {
        try {
            System.out.println ("Try block begin.");
            selectedMenu = aScanner.nextInt ();
            if (selectedMenu < 1 || selectedMenu > 4) {
                System.out.println ("Input out of range \"" + selectedMenu + "\". Input..");
            }
        } catch (InputMismatchException e) {
            System.out.println ("Catch blok begin.");
            System.out.println ("Invalid input, please input a number between 1-4.");
            aScanner.nextLine ();
            selectedMenu = 0;
        }
    } while (selectedMenu < 1 || selectedMenu > 4);
    System.out.println ("A new game will now start.");
}
----------------------------------------

public void selectMenu () throws InputMismatchException {
    int selectedMenu;
    boolean validSelection = false;
    Scanner aScanner = new Scanner (System.in);
    while (! validSelection) {
        selectedMenu = aScanner.nextInt ();
        validSelection = true;
        switch (selectedMenu) {
            case 1 :
                break;
            case 2 :
                break;
            case 3 :
                break;
            case 4 :
                break;
            default :
                System.out.println ("Input out of range \"" + selectedMenu + "\". Input a number between 1-4.");
                validSelection = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14165821_14166030_1_44
14165821_14166060_11_37
Title: "Creating menu system using int do-while and if" 
----------------------------------------

public void selectMenu () {
    int selectedMenuItem = 0;
    Scanner aScanner = new Scanner (System.in);
    while (selectedMenuItem == 0) {
        String userInputMenuItemString = aScanner.nextLine ();
        try {
            int userInputMenuItem = Integer.parseInt (userInputMenuItemString);
            if (userInputMenuItem > 0 && userInputMenuItem <= 4) {
                selectedMenuItem = userInputMenuItem;
            } else {
                System.out.println ("No option #" + Integer.toString (userInputMenuItem) + " exists!\nTry again:");
            }
        } catch (NumberFormatException ex) {
            System.out.println ("Please input a number!");
        }
    }
    switch (selectedMenuItem) {
        case 1 :
            System.out.println ("You chose to start a new game!");
            break;
        case 2 :
            System.out.println ("You chose to load a game!");
            break;
        case 3 :
            System.out.println ("You chose to access settings!");
            break;
        case 4 :
            System.out.println ("You chose to exit. Bye!");
            System.exit (0);
            break;
    }
}
----------------------------------------

public void selectMenu () throws InputMismatchException {
    int selectedMenu;
    boolean validSelection = false;
    Scanner aScanner = new Scanner (System.in);
    while (! validSelection) {
        selectedMenu = aScanner.nextInt ();
        validSelection = true;
        switch (selectedMenu) {
            case 1 :
                break;
            case 2 :
                break;
            case 3 :
                break;
            case 4 :
                break;
            default :
                System.out.println ("Input out of range \"" + selectedMenu + "\". Input a number between 1-4.");
                validSelection = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14170798_14170953_1_20
14170798_29873926_4_20
Title: index of a String in a paragraph each time it occurs 
----------------------------------------

public static void main (String [] args) {
    int lastIndex = 0;
    Scanner scan = new Scanner (System.in);
    String w = scan.next ();
    String word = "i love apples i love orange";
    String [] tokens = word.split (" ");
    for (String token : tokens) {
        if (token.contains (w)) {
            for (int x = 0;
            x < token.length (); x ++) {
                System.out.println ("Input found in token at position: " + (token.indexOf (w) + 1));
            }
            System.out.println ("Word found containing input in positions: " + (word.indexOf (token, lastIndex) + 1) + "-" + ((word.indexOf (token, lastIndex)) + token.length ()));
            lastIndex = ((word.indexOf (token, lastIndex)) + token.length ());
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "My name is srikanth. srikanth is working on a java program. " + "srikanth dont know how many errors atr there. so, " + "srikanth is going to find it.";
    String Iwant = "srikanth";
    int wordIndex = 0;
    int count = 0;
    for (int start = 0;
    start < str.length (); start ++) {
        if (Character.isWhitespace (str.charAt (start))) wordIndex ++;

        if (str.substring (start).startsWith (Iwant)) {
            System.out.println ("Index of the String Iwant " + wordIndex);
            count ++;
        }
    }
    System.out.println ("Number of times srikanth in str is=" + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14173742_14173799_9_23
14173742_14174077_14_27
Title: Does Collection's contain method ever return false for an instance added to it? 
----------------------------------------

public boolean equals (Object o) {
    if (o == null) return false;

    if (this == o) return true;

    if (getClass () != o.getClass ()) return false;

    return i == ((C) o).i;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return false;
    }
    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Test other = (Test) obj;
    if (someValue != other.someValue) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14174245_14174988_14_39
14174245_14174988_51_64
Title: Is this a new sorting algorithm? [with Java and Pseudo-code implementation] 
----------------------------------------

public static void sort (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        int L = i - 1;
        int R = i + 1;
        while (L >= 0 && R < array.length) {
            if (array [L] > array [R]) swap (array, L, R);

            L --;
            R ++;
        }
        L = i;
        R = i + 1;
        while (L >= 0 && R < array.length) {
            if (array [L] > array [R]) swap (array, L, R);

            L --;
            R ++;
        }
    }
}
----------------------------------------

public static void sort (int [] numbers) {
    boolean swapped = true;
    for (int i = numbers.length - 1;
    i > 0 && swapped; i --) {
        swapped = false;
        for (int j = 0;
        j < i; j ++) {
            if (numbers [j] > numbers [j + 1]) {
                int temp = numbers [j];
                numbers [j] = numbers [j + 1];
                numbers [j + 1] = temp;
                swapped = true;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14185338_18991544_1_32
14185338_32437875_1_80
Title: Java HttpURLConnection Returns JSON 
----------------------------------------

public JSONArray getJSONFromUrl (String url) {
    JSONArray jsonArray = null;
    try {
        URL u = new URL (url);
        httpURLConnection = (HttpURLConnection) u.openConnection ();
        httpURLConnection.setRequestMethod ("GET");
        bufferedReader = new BufferedReader (new InputStreamReader (httpURLConnection.getInputStream ()));
        stringBuilder = new StringBuilder ();
        while ((line = bufferedReader.readLine ()) != null) {
            stringBuilder.append (line + '\n');
        }
        jsonString = stringBuilder.toString ();
    } catch (MalformedURLException e) {
        e.printStackTrace ();
    } catch (ProtocolException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        httpURLConnection.disconnect ();
    }
    try {
        jsonArray = new JSONArray (jsonString);
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return jsonArray;
}
----------------------------------------

public JSONArray getJSONFromUrl (String endpoint, Map < String, String > params) throws IOException {
    JSONArray jsonArray = null;
    String jsonString = null;
    HttpURLConnection conn = null;
    String line;
    URL url;
    try {
        url = new URL (endpoint);
    } catch (MalformedURLException e) {
        throw new IllegalArgumentException ("invalid url: " + endpoint);
    }
    StringBuilder bodyBuilder = new StringBuilder ();
    Iterator < Map.Entry < String, String > > iterator = params.entrySet ().iterator ();
    while (iterator.hasNext ()) {
        Map.Entry < String, String > param = iterator.next ();
        bodyBuilder.append (param.getKey ()).append ('=').append (param.getValue ());
        if (iterator.hasNext ()) {
            bodyBuilder.append ('&');
        }
    }
    String body = bodyBuilder.toString ();
    byte [] bytes = body.getBytes ();
    try {
        conn = (HttpURLConnection) url.openConnection ();
        conn.setDoOutput (true);
        conn.setUseCaches (false);
        conn.setFixedLengthStreamingMode (bytes.length);
        conn.setRequestMethod ("POST");
        conn.setRequestProperty ("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");
        OutputStream out = conn.getOutputStream ();
        out.write (bytes);
        out.close ();
        int status = conn.getResponseCode ();
        if (status != 200) {
            throw new IOException ("Post failed with error code " + status);
        }
        BufferedReader bufferedReader = new BufferedReader (new InputStreamReader (conn.getInputStream ()));
        StringBuilder stringBuilder = new StringBuilder ();
        while ((line = bufferedReader.readLine ()) != null) {
            stringBuilder.append (line + '\n');
        }
        jsonString = stringBuilder.toString ();
    } catch (MalformedURLException e) {
        e.printStackTrace ();
    } catch (ProtocolException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        conn.disconnect ();
    }
    try {
        jsonArray = new JSONArray (jsonString);
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return jsonArray;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14186529_14186787_5_18
14186529_14186966_1_21
Title: Java: array of sorted indexes 
----------------------------------------

static Integer [] getIndicesInOrder (Integer [] array) {
    Integer [] c = array.clone ();
    Arrays.sort (c, Collections.reverseOrder ());
    List < Integer > l = Arrays.asList (array);
    for (int i = 0;
    i < array.length; ++ i) {
        c [i] = l.indexOf (c [i]);
    }
    return c;
}
----------------------------------------

public static int [] getIndicesInOrder (double [] array) {
    Map < Integer, Double > map = new HashMap < Integer, Double > (array.length);
    for (int i = 0;
    i < array.length; i ++) map.put (i, array [i]);

    List < Entry < Integer, Double > > l = new ArrayList < Entry < Integer, Double > > (map.entrySet ());
    Collections.sort (l, new Comparator < Entry < ?, Double > > () {
        @Override
        public int compare (Entry < ?, Double > e1, Entry < ?, Double > e2) {
            return e2.getValue ().compareTo (e1.getValue ());
        }}

    );
    int [] result = new int [array.length];
    for (int i = 0;
    i < result.length; i ++) result [i] = l.get (i).getKey ();

    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14187235_14187538_26_35
14187235_14187691_51_70
Title: Make method that returns when JButton is pressed 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    JFrame frame = new JFrame ();
    MyButton m = new MyButton ("test");
    frame.add (m);
    frame.pack ();
    frame.setVisible (true);
    m.waitForPress ();
    m.waitForPress ();
}
----------------------------------------

public static void main (String [] args) {
    final TestBlockingButton test = new TestBlockingButton ();
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            test.initUI ();
        }}

    );
    ScheduledExecutorService pool = Executors.newScheduledThreadPool (1);
    pool.execute (new Runnable () {
        @Override
        public void run () {
            System.out.println ("I was doing something and now I will wait for button click");
            test.waitForProcess ();
            System.out.println ("User has now cliked the button and I can continue my work");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14193944_14194639_8_18
14193944_14197860_9_27
Title: JAXB Marshalling Unmarshalling with CDATA 
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Root.class);
    Unmarshaller unmarshaller = jc.createUnmarshaller ();
    File xml = new File ("src/forum14193944/input.xml");
    Root root = (Root) unmarshaller.unmarshal (xml);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.marshal (root, System.out);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Root.class);
    Unmarshaller unmarshaller = jc.createUnmarshaller ();
    File xml = new File ("src/forum14193944/input.xml");
    Root root = (Root) unmarshaller.unmarshal (xml);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.setProperty (CharacterEscapeHandler.class.getName (), new CharacterEscapeHandler () {
        @Override
        public void escape (char [] ac, int i, int j, boolean flag, Writer writer) throws IOException {
            writer.write (ac, i, j);
        }}

    );
    marshaller.marshal (root, new OutputStreamWriter (System.out));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14200699_22232411_8_69
14200699_49047679_9_45
Title: Send objects with MPJ express 
----------------------------------------

public static void main (String [] args) {
    MPI.Init (args);
    int me = MPI.COMM_WORLD.Rank ();
    int tasks = MPI.COMM_WORLD.Size ();
    MPI.COMM_WORLD.Barrier ();
    if (me == 0) {
        Cat cat = new Cat ("Tom", 15);
        cat.Speak ();
        ByteBuffer byteBuff = ByteBuffer.allocateDirect (2000 + MPI.SEND_OVERHEAD);
        MPI.Buffer_attach (byteBuff);
        try {
            ByteArrayOutputStream bos = new ByteArrayOutputStream ();
            ObjectOutput out = null;
            out = new ObjectOutputStream (bos);
            out.writeObject (cat);
            byte [] bytes = bos.toByteArray ();
            System.out.println ("Serialized to " + bytes.length);
            MPI.COMM_WORLD.Isend (bytes, 0, bytes.length, MPI.BYTE, 1, 0);
        } catch (IOException ex) {
        }
    } else {
        byte [] bytes = new byte [2000];
        Cat recv = null;
        MPI.COMM_WORLD.Recv (bytes, 0, 2000, MPI.BYTE, MPI.ANY_SOURCE, 0);
        ByteArrayInputStream bis = new ByteArrayInputStream (bytes);
        ObjectInput in = null;
        try {
            in = new ObjectInputStream (bis);
            Object obj = in.readObject ();
            recv = (Cat) obj;
            recv.Speak ();
        } catch (IOException ex) {
        } catch (ClassNotFoundException cnf) {
        }
    }
    MPI.COMM_WORLD.Barrier ();
    MPI.Finalize ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int peer;
    MPI.Init (args);
    int rank = MPI.COMM_WORLD.Rank ();
    int size = MPI.COMM_WORLD.Size ();
    int tag = 100;
    if (rank == 0) {
        String [] smsg = new String [1];
        smsg [0] = "Hi from proc 0";
        peer = 1;
        MPI.COMM_WORLD.Send (smsg, 0, smsg.length, MPI.OBJECT, peer, tag);
        System.out.println ("proc <" + rank + "><![CDATA[ sent a msg to " + "proc <" + peer + "><![CDATA[");
    } else if (rank == 1) {
        String [] rmsg = new String [1];
        peer = 0;
        MPI.COMM_WORLD.Recv (rmsg, 0, rmsg.length, MPI.OBJECT, peer, tag);
        System.out.println ("proc <" + rank + "><![CDATA[ received a msg from " + "proc <" + peer + "><![CDATA[");
        System.out.println ("proc <" + rank + "><![CDATA[ received the following " + "message: \"" + rmsg [0] + "\"");
    }

    MPI.Finalize ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14203580_14203686_1_10
14203580_14203747_1_17
Title: "For loop adding 2 to an int every row printed" 
----------------------------------------

public static void pyramid () {
    line = 1;
    i = 1;
    a = 3;
    while (line <= 5) {
        System.out.println ("*" * i);
        i += 2 + a * (i - 1);
        line += 1;
    }
}
----------------------------------------

public static void pyramid (int numberOfRows) {
    int curentAmountOfStars = 1;
    for (int i = 0;
    i < numberOfRows; i ++) {
        for (int j = 0;
        j < numberOfRows - i - 1; j ++) {
            System.out.print (" ");
        }
        for (int j = curentAmountOfStars;
        j > 0; j --) {
            System.out.print ("*");
        }
        System.out.println ();
        curentAmountOfStars += 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421324_21_52
1421322_1421458_6_14
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (Person o1, Person o2) {
    int comparison;
    for (SortParameter parameter : parameters) {
        switch (parameter) {
            case ID_ASCENDING :
                comparison = o1.id - o2.id;
                if (comparison != 0) return comparison;

                break;
            case ID_DESCENDING :
                comparison = o2.id - o1.id;
                if (comparison != 0) return comparison;

                break;
            case NAME_ASCENDING :
                comparison = o1.name.compareTo (o2.name);
                if (comparison != 0) return comparison;

                break;
            case NAME_DESCENDING :
                comparison = o2.name.compareTo (o1.name);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_ASCENDING :
                comparison = o1.address.compareTo (o2.address);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_DESCENDING :
                comparison = o2.address.compareTo (o1.address);
                if (comparison != 0) return comparison;

                break;
        }
    }
    return 0;
}
----------------------------------------

public int compare (T o1, T o2) {
    for (Comparator < T > comparator : simpleComparators) {
        int result = comparator.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421324_21_52
1421322_1421537_21_29
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (Person o1, Person o2) {
    int comparison;
    for (SortParameter parameter : parameters) {
        switch (parameter) {
            case ID_ASCENDING :
                comparison = o1.id - o2.id;
                if (comparison != 0) return comparison;

                break;
            case ID_DESCENDING :
                comparison = o2.id - o1.id;
                if (comparison != 0) return comparison;

                break;
            case NAME_ASCENDING :
                comparison = o1.name.compareTo (o2.name);
                if (comparison != 0) return comparison;

                break;
            case NAME_DESCENDING :
                comparison = o2.name.compareTo (o1.name);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_ASCENDING :
                comparison = o1.address.compareTo (o2.address);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_DESCENDING :
                comparison = o2.address.compareTo (o1.address);
                if (comparison != 0) return comparison;

                break;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Person o1, Person o2) {
    for (PersonComparator option : multipleOptions) {
        int result = option.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421324_21_52
1421322_31919196_41_49
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (Person o1, Person o2) {
    int comparison;
    for (SortParameter parameter : parameters) {
        switch (parameter) {
            case ID_ASCENDING :
                comparison = o1.id - o2.id;
                if (comparison != 0) return comparison;

                break;
            case ID_DESCENDING :
                comparison = o2.id - o1.id;
                if (comparison != 0) return comparison;

                break;
            case NAME_ASCENDING :
                comparison = o1.name.compareTo (o2.name);
                if (comparison != 0) return comparison;

                break;
            case NAME_DESCENDING :
                comparison = o2.name.compareTo (o1.name);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_ASCENDING :
                comparison = o1.address.compareTo (o2.address);
                if (comparison != 0) return comparison;

                break;
            case ADDRESS_DESCENDING :
                comparison = o2.address.compareTo (o1.address);
                if (comparison != 0) return comparison;

                break;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Person p1, Person p2) {
    for (SortOrder personComparator : multipleSortOrders) {
        int result = personComparator.compare (p1, p2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421458_6_14
1421322_1421537_21_29
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (T o1, T o2) {
    for (Comparator < T > comparator : simpleComparators) {
        int result = comparator.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Person o1, Person o2) {
    for (PersonComparator option : multipleOptions) {
        int result = option.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421458_6_14
1421322_31919196_41_49
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (T o1, T o2) {
    for (Comparator < T > comparator : simpleComparators) {
        int result = comparator.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Person p1, Person p2) {
    for (SortOrder personComparator : multipleSortOrders) {
        int result = personComparator.compare (p1, p2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1421322_1421537_21_29
1421322_31919196_41_49
Title: How do I sort a list by different parameters at different timed 
----------------------------------------

public int compare (Person o1, Person o2) {
    for (PersonComparator option : multipleOptions) {
        int result = option.compare (o1, o2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------

public int compare (Person p1, Person p2) {
    for (SortOrder personComparator : multipleSortOrders) {
        int result = personComparator.compare (p1, p2);
        if (result != 0) {
            return result;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14223422_14223536_1_16
14223422_14881156_4_220
Title: Unduplicated random Numbers in an java array 
----------------------------------------

public static void main (String [] args) {
    Integer [] numbers = new Integer [45];
    for (int i = 0;
    i < 45; i ++) numbers [i] = i + 1;

    List < Integer > list = Arrays.asList (numbers);
    Collections.shuffle (list);
    for (int i = 0;
    i < 6; i ++) System.out.print (list.get (i) + " ");

}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    Random rand = new Random ();
    boolean checkPlay = false, readInput = false;
    final int MAX = 45;
    while (readInput != true) {
        System.out.print ("Would you like to buy a lotto ticket? [y/n] ");
        String stBuyTicket = keyboard.nextLine ().trim ().toLowerCase ();
        if (stBuyTicket.isEmpty ()) {
            System.out.println ("Invalid Input.");
        } else if (stBuyTicket.charAt (0) == 'y' || stBuyTicket.charAt (0) == 'n') {
            if (stBuyTicket.charAt (0) == 'y') {
                checkPlay = true;
            } else {
                checkPlay = false;
            }
            readInput = true;
        } else {
            System.out.println ("Invalid Input.");
        }

    }
    while (checkPlay == true) {
        int [] lotto = new int [6];
        int lottoLength = lotto.length;
        int [] userLotto = new int [6];
        int userLottoLength = userLotto.length;
        for (int i = 0;
        i < lottoLength; i ++) {
            boolean checkLotto = false;
            while (checkLotto != true) {
                int numCheck = (rand.nextInt (MAX) + 1);
                boolean confirmSame = false;
                for (int j = 0;
                j <= i; j ++) {
                    if (numCheck == lotto [j]) {
                        confirmSame = true;
                    }
                }
                if (confirmSame != true) {
                    lotto [i] = numCheck;
                    checkLotto = true;
                }
            }
        }
        readInput = false;
        while (readInput != true) {
            System.out.println ("Would you like choose your own numbers or just randomize them?");
            System.out.print ("Choose your own numbers? [y/n] ");
            String stBuyTicket = keyboard.nextLine ().trim ().toLowerCase ();
            if (stBuyTicket.isEmpty ()) {
                System.out.println ("Invalid Input.");
            } else if (stBuyTicket.charAt (0) == 'y' || stBuyTicket.charAt (0) == 'n') {
                if (stBuyTicket.charAt (0) == 'y') {
                    for (int i = 0;
                    i < userLottoLength; i ++) {
                        boolean checkUserLotto = false;
                        while (checkUserLotto != true) {
                            System.out.print ("Which number would you like to choose for number " + (i + 1) + ": ");
                            String numUserInput = keyboard.nextLine ().trim ();
                            int numUserInputLength = numUserInput.length ();
                            boolean checkInput = true;
                            if (numUserInputLength > 2 || numUserInputLength < 1) {
                                System.out.println ("Invalid Input. Try again.");
                                checkInput = false;
                            } else {
                                for (int j = 0;
                                j < numUserInputLength; j ++) {
                                    if (Character.isDigit (numUserInput.charAt (j)) != true) {
                                        System.out.println ("Invalid Input. Try again.");
                                        checkInput = false;
                                    }
                                }
                            }
                            if (checkInput == true) {
                                int userInput = Integer.parseInt (numUserInput);
                                if (userInput > MAX || userInput < 1) {
                                    System.out.println ("Invalid Input. Try again.");
                                } else {
                                    boolean confirmSame = false;
                                    for (int j = 0;
                                    j <= i; j ++) {
                                        if (userInput == userLotto [j]) {
                                            System.out.println ("You've already choosen this number. Choose again.");
                                            confirmSame = true;
                                        }
                                    }
                                    if (confirmSame != true) {
                                        userLotto [i] = userInput;
                                        checkUserLotto = true;
                                    }
                                }
                            }
                        }
                    }
                } else {
                    for (int i = 0;
                    i < userLottoLength; i ++) {
                        boolean checkLotto = false;
                        while (checkLotto != true) {
                            int numCheck = (rand.nextInt (MAX) + 1);
                            boolean confirmSame = false;
                            for (int j = 0;
                            j <= i; j ++) {
                                if (numCheck == userLotto [j]) {
                                    confirmSame = true;
                                }
                            }
                            if (confirmSame != true) {
                                userLotto [i] = numCheck;
                                checkLotto = true;
                            }
                        }
                    }
                }
                readInput = true;
                System.out.print ("Your lotto numbers are: " + userLotto [0]);
                for (int i = 1;
                i < userLottoLength; i ++) {
                    System.out.print (", " + userLotto [i]);
                }
                System.out.print ("!");
                System.out.println ();
                System.out.print ("And the winning lotto numbers are: " + lotto [0]);
                for (int i = 1;
                i < lottoLength; i ++) {
                    System.out.print (", " + lotto [i]);
                }
                System.out.print ("!");
                System.out.println ();
                Arrays.sort (lotto);
                Arrays.sort (userLotto);
                if (Arrays.equals (userLotto, lotto) == true) {
                    System.out.println ("Your lotto numbers match the winning lotto numbers! \nYou win!");
                } else {
                    System.out.println ("Your lotto numbers do not match the winning lotto numbers. \nYou lose.");
                }
            } else {
                System.out.println ("Invalid Input.");
            }

        }
        readInput = false;
        while (readInput != true) {
            System.out.print ("Would you like to buy another lotto ticket? [y/n] ");
            String stBuyTicket = keyboard.nextLine ().trim ().toLowerCase ();
            if (stBuyTicket.isEmpty ()) {
                System.out.println ("Invalid Input.");
            } else if (stBuyTicket.charAt (0) == 'y' || stBuyTicket.charAt (0) == 'n') {
                if (stBuyTicket.charAt (0) == 'y') {
                    checkPlay = true;
                } else {
                    checkPlay = false;
                }
                readInput = true;
            } else {
                System.out.println ("Invalid Input.");
            }

        }
    }
    System.out.println ("That's a good decision. Save your money");
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14223812_14223883_1_16
14223812_14224037_1_18
Title: recursion dilemma 
----------------------------------------

public static int recursiveMethod (int x, int y, int z, int q) {
    int largestVar;
    int xRes = x % q;
    int yRes = y % q;
    int zRes = z % q;
    if (xRes == 0 && yRes == 0 && zRes == 0) {
        largestVar = q;
        if (x >= q && y >= q && z >= q) {
            return largestVar;
        }
    } else {
        q --;
    }
    return recursiveMethod (x, y, z, q);
}
----------------------------------------

public static int recursiveMethod (int x, int y, int z, int q, int largestVar) {
    int xRes = x % q;
    int yRes = y % q;
    int zRes = z % q;
    if (xRes == 0 && yRes == 0 && zRes == 0) {
        largestVar = q;
    }
    if (q >= x || q >= y || q >= z) {
        return largestVar;
    }
    q ++;
    return recursiveMethod (x, y, z, q, largestVar);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14226064_37528634_6_60
14226064_52572387_26_60
Title: calling a method when content of clipboard is changed 
----------------------------------------

public void run () {
    final Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();
    clipboard.addFlavorListener (new FlavorListener () {
        boolean suppressOutput = false;
        Transferable clearingTransferable = new Transferable () {
            public DataFlavor [] getTransferDataFlavors () {
                return new DataFlavor [0];
            } public boolean isDataFlavorSupported (DataFlavor flavor) {
                return false;
            } public Object getTransferData (DataFlavor flavor) throws UnsupportedFlavorException {
                throw new UnsupportedFlavorException (flavor);
            }}

        ;
        @Override
        public void flavorsChanged (FlavorEvent e) {
            Transferable contentsTransferable = clipboard.getContents (null);
            if (! suppressOutput) {
                System.out.println (String.format ("# clipboard UPDATED, src %s, string %s, clearingT? %b", e.getSource (), e.toString (), contentsTransferable == clearingTransferable));
                try {
                    String stringData = (String) clipboard.getData (DataFlavor.stringFlavor);
                    System.out.println (String.format ("# string data |%s|", stringData));
                } catch (UnsupportedFlavorException | IOException e1) {
                    e1.printStackTrace ();
                }
            } else {
                SwingUtilities.invokeLater (new Runnable () {
                    @Override
                    public void run () {
                        suppressOutput = false;
                    }}

                );
            }
            suppressOutput = true;
            clipboard.setContents (clearingTransferable, null);
        }}

    );
}
----------------------------------------

public void run () {
    System.out.println ("Listening to clipboard...");
    String recentContent = "";
    while (running) {
        try {
            Thread.sleep (200);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        try {
            List < DataFlavor > flavors = Arrays.asList (sysClip.getAvailableDataFlavors ());
            if (flavors.contains (DataFlavor.stringFlavor)) {
                String data = (String) sysClip.getData (DataFlavor.stringFlavor);
                if (! data.equals (recentContent)) {
                    recentContent = data;
                    System.out.println ("New clipboard text detected: " + data);
                    setChanged ();
                    notifyObservers (data);
                }
            }
        } catch (HeadlessException e1) {
            e1.printStackTrace ();
        } catch (UnsupportedFlavorException e1) {
            e1.printStackTrace ();
        } catch (IOException e1) {
            e1.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14226255_14226535_3_12
14226255_14282373_17_35
Title: Bash not executing correctly in Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    Runtime run = Runtime.getRuntime ();
    Process pr = run.exec ("sh -c \"ls </dev/null | grep java\"");
    pr.waitFor ();
    BufferedReader buf = new BufferedReader (new InputStreamReader (pr.getInputStream ()));
    String line;
    while ((line = buf.readLine ()) != null) {
        System.out.println (line);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Runtime run = Runtime.getRuntime ();
    String [] cmd = {"/bin/sh", "-i", "-c", "LC_ALL=C tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1; echo;"};
    Process pr = run.exec (cmd);
    pr.waitFor ();
    BufferedReader buf = new BufferedReader (new InputStreamReader (pr.getInputStream ()));
    String line;
    while ((line = buf.readLine ()) != null) {
        System.out.println (line);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14235687_20564037_6_18
14235687_49428142_3_16
Title: Can we get LineNumber and ColumnNumber in try block at which exception occured 
----------------------------------------

public static void main (String [] args) {
    try {
        String str = getString ();
        if (str.isEmpty ()) {
            System.out.println ("error");
        }
    } catch (Exception e) {
        StackTraceElement [] elements = e.getStackTrace ();
        for (int iterator = 1;
        iterator <= elements.length; iterator ++) System.out.println ("Class Name:" + elements [iterator - 1].getClassName () + " Method Name:" + elements [iterator - 1].getMethodName () + " Line Number:" + elements [iterator - 1].getLineNumber ());

    }
}
----------------------------------------

public static void main (String...strings) {
    try {
        int num1 = 30, num2 = 0;
        int output = num1 / num2;
        System.out.println ("Result: " + output);
    } catch (Exception e) {
        ExceptionHandleCenter.throwException (e, Thread.currentThread ().getStackTrace () [1].getClassName (), Thread.currentThread ().getStackTrace () [1].getMethodName (), e.getStackTrace () [0].getLineNumber ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14242521_14242732_1_12
14242521_34543730_1_13
Title: override log4j configuration programmatically: file location for FileAppender 
----------------------------------------

private void updateLog4jConfiguration (String logFile) {
    Properties props = new Properties ();
    try {
        InputStream configStream = getClass ().getResourceAsStream ("/log4j.properties");
        props.load (configStream);
        configStream.close ();
    } catch (IOException e) {
        System.out.println ("Error: Cannot laod configuration file ");
    }
    props.setProperty ("log4j.appender.FILE.file", logFile);
    PropertyConfigurator.configure (props);
}
----------------------------------------

private void updateLog4jConfiguration (String logFile) {
    Properties props = new Properties ();
    try {
        InputStream configStream = getClass ().getResourceAsStream ("/log4j.properties");
        props.load (configStream);
        configStream.close ();
    } catch (IOException e) {
        System.out.println ("Errornot laod configuration file ");
    }
    props.setProperty ("log4j.appender.FILE.file", logFile);
    LogManager.resetConfiguration ();
    PropertyConfigurator.configure (props);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14255691_14255817_1_35
14255691_14255849_1_14
Title: "Resource leak: 'in' is never closed though it IS closed" 
----------------------------------------

public void test () throws IOException {
    InputStream in = null;
    try {
        if (file.exists ()) {
            in = new GZIPInputStream (new FileInputStream (file));
        } else {
            in = new URL ("some url").openStream ();
        }
    } finally {
        if (null != in) {
            try {
                in.close ();
            } catch (IOException ex) {
            }
        }
    }
}
----------------------------------------

public void test () throws IOException {
    InputStream in = null;
    try {
        if (file.exists ()) {
            in = new FileInputStream (file);
        } else {
            in = new URL ("some url").openStream ();
        }
    } finally {
        close (in);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1425618_4409229_17_39
1425618_4409229_51_66
Title: When i execute get LDAPConnection through Swing it hangs 
----------------------------------------

public void run () {
    JFrame f = new JFrame ();
    f.setLayout (new GridLayout (2, 1));
    final JLabel label = new JLabel ("");
    f.add (label);
    f.add (new JButton (new AbstractAction ("Do Task") {
        @Override
        public void actionPerformed (ActionEvent e) {
            label.setText ("Working...");
            Thread t = new Thread (new LDAPTask (label));
            t.setDaemon (true);
            t.start ();
        }}

    ));
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
        SwingUtilities.invokeLater (new Runnable () {
            @Override
            public void run () {
                label.setText ("Done.");
            }}

        );
    } catch (InterruptedException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14271915_14271960_48_59
14271915_14272122_30_38
Title: Button variable cannot be referenced from a static context error 
----------------------------------------

public static void main (String [] args) {
    jButExmp jButExmpRef = new jButExmp ();
    jButExmpRef.getButton1 ().setSize (80, 30);
    jButExmpRef.getButton1 ().setLocation (0, 0);
    jButExmpRef.getButton1 ().setEnabled (true);
    jButExmpRef.getButton2 ().setSize (80, 30);
    jButExmpRef.getButton2 ().setLocation (90, 0);
    jButExmpRef.getButton2 ().setEnabled (false);
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            new ExmpFile ();
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14275879_14296707_40_58
14275879_14296707_67_83
Title: Impossible to configure LDAP correctly in JBoss 7.1 
----------------------------------------

AppConfigurationEntry [] testLdapExample1 () {
    String name = "org.jboss.security.auth.spi.LdapLoginModule";
    HashMap options = new HashMap ();
    options.put ("java.naming.factory.initial", "com.sun.jndi.ldap.LdapCtxFactory");
    options.put ("java.naming.provider.url", "ldap://host-ldap-server:port-ldap-server/");
    options.put ("java.naming.security.authentication", "simple");
    options.put ("principalDNPrefix", "uid=");
    options.put ("principalDNSuffix", ",ou=users,o=your-organization-name");
    options.put ("rolesCtxDN", "ou=groups,o=your-organization-name");
    options.put ("uidAttributeID", "member");
    options.put ("matchOnUserDN", "true");
    options.put ("roleAttributeID", "cn");
    options.put ("roleAttributeIsDN", "false");
    AppConfigurationEntry ace = new AppConfigurationEntry (name, AppConfigurationEntry.LoginModuleControlFlag.REQUIRED, options);
    AppConfigurationEntry [] entry = {ace};
    return entry;
}
----------------------------------------

public void testLdapExample1 () throws Exception {
    System.out.println ("testLdapExample1");
    UsernamePasswordHandler handler = new UsernamePasswordHandler ("your-uid", "your-uid-password".toCharArray ());
    LoginContext lc = new LoginContext ("testLdapExample1", handler);
    lc.login ();
    Subject subject = lc.getSubject ();
    System.out.println ("Subject: " + subject);
    Set groups = subject.getPrincipals (Group.class);
    assertTrue ("Principals contains your-uid", subject.getPrincipals ().contains (new SimplePrincipal ("your-uid")));
    Group roles = (Group) groups.iterator ().next ();
    assertTrue ("your-uid-role is a role", roles.isMember (new SimplePrincipal ("your-uid-role")));
    lc.logout ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14279870_38897286_6_55
14279870_44035636_5_86
Title: Using a scanner to accept String input and storing in a String Array 
----------------------------------------

public static void main (String [] args) {
    String [] contactName = new String [12];
    String [] contactPhone = new String [12];
    String [] contactAdd1 = new String [12];
    String [] contactAdd2 = new String [12];
    int i = 0;
    String name = "0";
    String phone = "0";
    String add1 = "0";
    String add2 = "0";
    Scanner input = new Scanner (System.in);
    while (i < 11) {
        i ++;
        System.out.println ("Enter contacts name: " + i);
        name = input.nextLine ();
        name += contactName [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contacts addressline1:");
        add1 = input.nextLine ();
        add1 += contactAdd1 [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contacts addressline2:");
        add2 = input.nextLine ();
        add2 += contactAdd2 [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contact phone number: ");
        phone = input.nextLine ();
        phone += contactPhone [i];
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the following information");
    String name = "0";
    String num = "0";
    String address = "0";
    int i = 0;
    Scanner input = new Scanner (System.in);
    String [] contactName = new String [7];
    String [] contactNum = new String [7];
    String [] contactAdd = new String [7];
    contactName [0] = "Name";
    contactNum [0] = "Phone Number";
    contactAdd [0] = "Address";
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact name." + i);
        name = input.nextLine ();
        contactName [i] = name;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact number." + i);
        num = input.nextLine ();
        contactNum [i] = num;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact address." + i);
        num = input.nextLine ();
        contactAdd [i] = num;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactName [i] + " / ");
    }
    System.out.println ();
    i -= i;
    i -= 1;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactNum [i] + " / ");
    }
    System.out.println ();
    i -= i;
    i -= 1;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactAdd [i] + " / ");
    }
    System.out.println ();
    System.out.println ("End of program");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14279870_38897286_6_55
14279870_44869022_1_36
Title: Using a scanner to accept String input and storing in a String Array 
----------------------------------------

public static void main (String [] args) {
    String [] contactName = new String [12];
    String [] contactPhone = new String [12];
    String [] contactAdd1 = new String [12];
    String [] contactAdd2 = new String [12];
    int i = 0;
    String name = "0";
    String phone = "0";
    String add1 = "0";
    String add2 = "0";
    Scanner input = new Scanner (System.in);
    while (i < 11) {
        i ++;
        System.out.println ("Enter contacts name: " + i);
        name = input.nextLine ();
        name += contactName [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contacts addressline1:");
        add1 = input.nextLine ();
        add1 += contactAdd1 [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contacts addressline2:");
        add2 = input.nextLine ();
        add2 += contactAdd2 [i];
    }
    while (i < 12) {
        i ++;
        System.out.println ("Enter contact phone number: ");
        phone = input.nextLine ();
        phone += contactPhone [i];
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner na = new Scanner (System.in);
    System.out.println ("Please enter the number of contacts: ");
    int num = na.nextInt ();
    String [] contactName = new String [num];
    String [] contactPhone = new String [num];
    String [] contactAdd1 = new String [num];
    String [] contactAdd2 = new String [num];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < num; i ++) {
        System.out.println ("Enter contacts name: " + (i + 1));
        contactName [i] = input.nextLine ();
        System.out.println ("Enter contacts addressline1: " + (i + 1));
        contactAdd1 [i] = input.nextLine ();
        System.out.println ("Enter contacts addressline2: " + (i + 1));
        contactAdd2 [i] = input.nextLine ();
        System.out.println ("Enter contact phone number: " + (i + 1));
        contactPhone [i] = input.nextLine ();
    }
    for (int i = 0;
    i < num; i ++) {
        System.out.println ("Contact Name No." + (i + 1) + " is " + contactName [i]);
        System.out.println ("First Contacts Address No." + (i + 1) + " is " + contactAdd1 [i]);
        System.out.println ("Second Contacts Address No." + (i + 1) + " is " + contactAdd2 [i]);
        System.out.println ("Contact Phone Number No." + (i + 1) + " is " + contactPhone [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14279870_44035636_5_86
14279870_44869022_1_36
Title: Using a scanner to accept String input and storing in a String Array 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the following information");
    String name = "0";
    String num = "0";
    String address = "0";
    int i = 0;
    Scanner input = new Scanner (System.in);
    String [] contactName = new String [7];
    String [] contactNum = new String [7];
    String [] contactAdd = new String [7];
    contactName [0] = "Name";
    contactNum [0] = "Phone Number";
    contactAdd [0] = "Address";
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact name." + i);
        name = input.nextLine ();
        contactName [i] = name;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact number." + i);
        num = input.nextLine ();
        contactNum [i] = num;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.println ("Enter contact address." + i);
        num = input.nextLine ();
        contactAdd [i] = num;
    }
    i -= i;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactName [i] + " / ");
    }
    System.out.println ();
    i -= i;
    i -= 1;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactNum [i] + " / ");
    }
    System.out.println ();
    i -= i;
    i -= 1;
    while (i < 6) {
        i ++;
        System.out.print (i + " " + contactAdd [i] + " / ");
    }
    System.out.println ();
    System.out.println ("End of program");
}
----------------------------------------

public static void main (String [] args) {
    Scanner na = new Scanner (System.in);
    System.out.println ("Please enter the number of contacts: ");
    int num = na.nextInt ();
    String [] contactName = new String [num];
    String [] contactPhone = new String [num];
    String [] contactAdd1 = new String [num];
    String [] contactAdd2 = new String [num];
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < num; i ++) {
        System.out.println ("Enter contacts name: " + (i + 1));
        contactName [i] = input.nextLine ();
        System.out.println ("Enter contacts addressline1: " + (i + 1));
        contactAdd1 [i] = input.nextLine ();
        System.out.println ("Enter contacts addressline2: " + (i + 1));
        contactAdd2 [i] = input.nextLine ();
        System.out.println ("Enter contact phone number: " + (i + 1));
        contactPhone [i] = input.nextLine ();
    }
    for (int i = 0;
    i < num; i ++) {
        System.out.println ("Contact Name No." + (i + 1) + " is " + contactName [i]);
        System.out.println ("First Contacts Address No." + (i + 1) + " is " + contactAdd1 [i]);
        System.out.println ("Second Contacts Address No." + (i + 1) + " is " + contactAdd2 [i]);
        System.out.println ("Contact Phone Number No." + (i + 1) + " is " + contactPhone [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14282205_14284158_15_29
14282205_14285864_15_27
Title: setIcon works while setDisabledIcon doesn't - why? 
----------------------------------------

public void makeFrame () {
    frame1 = new JFrame ();
    frame1.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    btn = new JButton ();
    btn.setIcon (new ImageIcon (getImage (Color.YELLOW, 200, 40)));
    btn.setDisabledIcon (new ImageIcon (getImage (Color.RED, 200, 40)));
    btn.addActionListener (new someListener ());
    frame1.getContentPane ().add (btn);
    frame1.pack ();
    frame1.setVisible (true);
}
----------------------------------------

public void makeFrame () {
    frame1 = new JFrame ();
    frame1.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame1.setSize (500, 500);
    btn = new JButton ();
    btn.setDisabledIcon (new ImageIcon (getClass ().getResource ("/test.png")));
    btn.addActionListener (new someListener ());
    frame1.getContentPane ().add (btn);
    frame1.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14288185_24861219_5_20
14288185_30131127_4_13
Title: Detecting Windows or Linux? 
----------------------------------------

public static void main (String [] args) {
    System.out.println (OS);
    if (isWindows ()) {
        System.out.println ("This is Windows");
    } else if (isMac ()) {
        System.out.println ("This is Mac");
    } else if (isUnix ()) {
        System.out.println ("This is Unix or Linux");
    } else if (isSolaris ()) {
        System.out.println ("This is Solaris");
    } else {
        System.out.println ("Your OS is not support!!");
    }

}
----------------------------------------

public static void main (String [] args) {
    if (SystemUtils.IS_OS_WINDOWS_7) System.out.println ("It's a Windows 7 OS");

    if (SystemUtils.IS_OS_WINDOWS_8) System.out.println ("It's a Windows 8 OS");

    if (SystemUtils.IS_OS_LINUX) System.out.println ("It's a Linux OS");

    if (SystemUtils.IS_OS_MAC) System.out.println ("It's a MAC OS");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14300149_14300408_1_23
14300149_14300579_1_15
Title: Generate combinations for representing a number 
----------------------------------------

public static int generateComb (int n, int denom) {
    int next_denom = 0;
    switch (denom) {
        case 25 :
            next_denom = 10;
            break;
        case 10 :
            next_denom = 5;
            break;
        case 5 :
            next_denom = 1;
            break;
        case 1 :
            return 1;
    }
    int ways = 0;
    for (int i = 0;
    i * denom <= n; i ++) {
        ways += generateComb (n - i * denom, next_denom);
    }
    return ways;
}
----------------------------------------

private static int generateComb (int amount, Collection < Integer > denominations) {
    if (amount == 0) return 1;

    if (denominations.isEmpty ()) return 0;

    List < Integer > denominationsList = new ArrayList < Integer > (denominations);
    Collections.sort (denominationsList, Collections.reverseOrder ());
    int currentDenomination = denominationsList.remove (0);
    int ways = 0;
    for (int total = 0;
    total <= amount; total += currentDenomination) {
        ways += generateComb (amount - total, denominationsList);
    }
    return ways;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14301182_14301225_1_15
14301182_14301263_4_29
Title: Java if/else with comparing strings 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    String answer;
    System.out.print ("Would you like to go out with me? ");
    System.out.flush ();
    answer = in.readLine ();
    if (answer.equalsIgnoreCase ("YES")) {
        System.out.print ("Awesome!");
    } else System.out.print ("Not awesome!");

}
----------------------------------------

public static void main (String [] args) throws IOException {
    String [] Questions = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A"};
    int min = 0;
    int max = Questions.length;
    String answer = null;
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < Questions.length; i ++) {
        int randomNum = min + (int) (Math.random () * max);
        System.out.println ("Your Question: " + Questions [randomNum]);
        answer = input.next ();
        if (answer.equals ("yes")) {
            System.out.println ("Awesome Girl");
        }
        if (answer.equals ("no")) {
            System.out.println ("Bad Girl");
        }
        if (answer.equals ("Hope")) {
            System.out.println ("Hmmm..Some Hope Left");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14302971_14303040_4_17
14302971_14303049_1_14
Title: sum of columns in a 2 dimensional array 
----------------------------------------

public double [] columnSum (double [] [] array) {
    int index = 0;
    double temp [] = new double [array [index].length];
    for (int i = 0;
    i < array [0].length; i ++) {
        double sum = 0;
        for (int j = 0;
        j < array.length; j ++) {
            sum += array [j] [i];
        }
        temp [index] = sum;
        System.out.println ("Index is: " + index + " Sum is: " + sum);
        index ++;
    }
    return temp;
}
----------------------------------------

public double [] columnSum (double [] [] array) {
    int size = array [0].length;
    double temp [] = new double [size];
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array [i].length; j ++) {
            temp [j] += array [i] [j];
        }
    }
    System.out.println (Arrays.toString (temp));
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14302971_14303040_4_17
14302971_14303129_1_17
Title: sum of columns in a 2 dimensional array 
----------------------------------------

public double [] columnSum (double [] [] array) {
    int index = 0;
    double temp [] = new double [array [index].length];
    for (int i = 0;
    i < array [0].length; i ++) {
        double sum = 0;
        for (int j = 0;
        j < array.length; j ++) {
            sum += array [j] [i];
        }
        temp [index] = sum;
        System.out.println ("Index is: " + index + " Sum is: " + sum);
        index ++;
    }
    return temp;
}
----------------------------------------

public double [] columnSum (double [] [] array) {
    double temp [] = new double [array [0].length];
    for (int i = 0;
    i < array [0].length; i ++) {
        double sum = 0;
        for (int j = 0;
        j < array.length; j ++) {
            sum += array [j] [i];
        }
        temp [i] = sum;
        System.out.println ("Index is: " + i + " Sum is: " + sum);
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14302971_14303049_1_14
14302971_14303129_1_17
Title: sum of columns in a 2 dimensional array 
----------------------------------------

public double [] columnSum (double [] [] array) {
    int size = array [0].length;
    double temp [] = new double [size];
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array [i].length; j ++) {
            temp [j] += array [i] [j];
        }
    }
    System.out.println (Arrays.toString (temp));
    return temp;
}
----------------------------------------

public double [] columnSum (double [] [] array) {
    double temp [] = new double [array [0].length];
    for (int i = 0;
    i < array [0].length; i ++) {
        double sum = 0;
        for (int j = 0;
        j < array.length; j ++) {
            sum += array [j] [i];
        }
        temp [i] = sum;
        System.out.println ("Index is: " + i + " Sum is: " + sum);
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14316644_14317075_22_31
14316644_14317075_41_52
Title: Threading and Synchronization 
----------------------------------------

public synchronized void run () {
    try {
        x.add ("robin");
        x.add ("ravi");
        x.add ("raj");
        pr.print (x);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public synchronized void run () {
    try {
        while (y == null) {
            wait ();
        }
        for (int i = 0;
        i < y.size (); i ++) {
            System.out.println (y.get (i));
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14322345_14322475_4_25
14322345_14323278_1_12
Title: How can I get the next char in my string with the stringreader in Java? 
----------------------------------------

public static void main (String [] args) {
    String name = "(My name is Bob)(I like computers)";
    StringReader s = new StringReader (name);
    try {
        String result = "";
        int c = s.read ();
        for (; c != ')';) {
            result = result + (char) c;
            c = s.read ();
        }
        result = result + ')';
        System.out.println ("The string is: " + result);
    } catch (Exception e) {
        e.toString ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String name = "(My name is Bob)(I like computers)";
    String result = "";
    for (int i = 0;
    i < name.length (); i ++) {
        result = result + name.charAt (i);
        if (name.charAt (i) == ')') {
            System.out.println (result);
            result = "";
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14326598_14327260_13_49
14326598_14327483_6_38
Title: woodstox skip part of xml 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, XMLStreamException {
    System.setProperty ("javax.xml.stream.XMLInputFactory", "com.ctc.wstx.stax.WstxInputFactory");
    System.setProperty ("javax.xml.stream.XMLOutputFactory", "com.ctc.wstx.stax.WstxOutputFactory");
    System.setProperty ("javax.xml.stream.XMLEventFactory", "com.ctc.wstx.stax.WstxEventFactory");
    FileInputStream fis = new FileInputStream (new File ("family.xml"));
    XMLInputFactory xmlif = XMLInputFactory.newFactory ();
    XMLStreamReader2 xmlsr = (XMLStreamReader2) xmlif.createXMLStreamReader (fis);
    String currentElementName = null;
    while (xmlsr.hasNext ()) {
        int eventType = xmlsr.next ();
        switch (eventType) {
            case (XMLEvent2.START_ELEMENT) :
                currentElementName = xmlsr.getName ().toString ();
                if ("dad".equals (currentElementName) == true) {
                    System.out.println ("isStartElement: " + xmlsr.isStartElement ());
                    System.out.println ("Element BEGIN: " + currentElementName);
                    xmlsr.skipElement ();
                } else {
                    System.out.println (currentElementName);
                }
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    XMLInputFactory xif = XMLInputFactory.newFactory ();
    StreamSource xml = new StreamSource ("src/forum14326598/input.xml");
    XMLStreamReader xsr = xif.createXMLStreamReader (xml);
    xsr = xif.createFilteredReader (xsr, new StreamFilter () {
        private boolean accept = true;
        @Override
        public boolean accept (XMLStreamReader reader) {
            if ((reader.isStartElement () || reader.isEndElement ()) && "dad".equals (reader.getLocalName ())) {
                accept = ! accept;
                return false;
            } else {
                return accept;
            }
        }}

    );
    while (xsr.hasNext ()) {
        if (xsr.isStartElement ()) {
            System.out.println ("start: " + xsr.getLocalName ());
        } else if (xsr.isCharacters ()) {
            if (xsr.getText ().trim ().length () > 0) {
                System.out.println ("chars: " + xsr.getText ());
            }
        } else if (xsr.isEndElement ()) {
            System.out.println ("end: " + xsr.getLocalName ());
        }

        xsr.next ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14367181_14367683_38_46
14367181_14367683_55_63
Title: Animating the position of a JFrame 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (frame.getY () + frame.getHeight () < screenHeight) {
        y += 10;
        frame.setLocation (frame.getX (), y);
    } else {
        createAndStartUpwardTimer (2500 - 15);
        ((Timer) ae.getSource ()).stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (frame.getY () > 0) {
        y -= 10;
        frame.setLocation (frame.getX (), y);
    } else {
        frame.dispose ();
        ((Timer) ae.getSource ()).stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14376807_14377185_1_29
14376807_27498663_1_27
Title: How to Read/Write String from a File in Android 
----------------------------------------

private String readFromFile (Context context) {
    String ret = "";
    try {
        InputStream inputStream = context.openFileInput ("config.txt");
        if (inputStream != null) {
            InputStreamReader inputStreamReader = new InputStreamReader (inputStream);
            BufferedReader bufferedReader = new BufferedReader (inputStreamReader);
            String receiveString = "";
            StringBuilder stringBuilder = new StringBuilder ();
            while ((receiveString = bufferedReader.readLine ()) != null) {
                stringBuilder.append (receiveString);
            }
            inputStream.close ();
            ret = stringBuilder.toString ();
        }
    } catch (FileNotFoundException e) {
        Log.e ("login activity", "File not found: " + e.toString ());
    } catch (IOException e) {
        Log.e ("login activity", "Can not read file: " + e.toString ());
    }
    return ret;
}
----------------------------------------

private String readFromFile (Context context, String fileName) {
    if (context == null) {
        return null;
    }
    String ret = "";
    try {
        InputStream inputStream = context.openFileInput (fileName);
        if (inputStream != null) {
            InputStreamReader inputStreamReader = new InputStreamReader (inputStream);
            int size = inputStream.available ();
            char [] buffer = new char [size];
            inputStreamReader.read (buffer);
            inputStream.close ();
            ret = new String (buffer);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1439022_39452918_6_21
1439022_44045020_2_14
Title: Get Mouse Position 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    while (true == true) {
        TimeUnit.SECONDS.sleep (1 / 2);
        double mouseX = MouseInfo.getPointerInfo ().getLocation ().getX ();
        double mouseY = MouseInfo.getPointerInfo ().getLocation ().getY ();
        System.out.println ("X:" + mouseX);
        System.out.println ("Y:" + mouseY);
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    int x = MouseInfo.getPointerInfo ().getLocation ().x;
    int y = MouseInfo.getPointerInfo ().getLocation ().y;
    while (true) {
        if (x != MouseInfo.getPointerInfo ().getLocation ().x || y != MouseInfo.getPointerInfo ().getLocation ().y) {
            System.out.println ("(" + MouseInfo.getPointerInfo ().getLocation ().x + ", " + MouseInfo.getPointerInfo ().getLocation ().y + ")");
            x = MouseInfo.getPointerInfo ().getLocation ().x;
            y = MouseInfo.getPointerInfo ().getLocation ().y;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14397191_19874279_2_22
14397191_22637057_1_15
Title: Checking whether a element present in List using mvel 
----------------------------------------

public void testListContains () {
    List < String > locations = new ArrayList < String > ();
    locations.add ("California");
    locations.add ("sydney");
    locations.add ("Egypt");
    String expression = "thelocations contains acity && thelocations contains anothercity";
    Map container = new HashMap ();
    container.put ("thelocations", locations);
    container.put ("acity", "sydney");
    container.put ("anothercity", "California");
    Object result = MVEL.eval (expression, container);
    System.out.println (result);
}
----------------------------------------

public void testListContains () {
    List < String > locations = new ArrayList < String > ();
    locations.add ("California");
    locations.add ("sydney");
    locations.add ("Egypt");
    String expression = "thelocations contains 'sydney' && thelocations contains 'California'";
    Map container = new HashMap ();
    container.put ("thelocations", locations);
    Object result = MVEL.eval (expression, container);
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14405183_14405213_1_17
14405183_14405321_1_17
Title: NullPointerException returning array from method 
----------------------------------------

public String [] GetDevices () {
    List < String > Devices = new ArrayList < String > ();
    String query = "SELECT * FROM devices";
    try {
        statement = connection.createStatement ();
        resultSet = statement.executeQuery (query);
        while (resultSet.next ()) {
            Devices.add (resultSet.getString (1));
            Devices.add (resultSet.getString (2));
        }
    } catch (SQLException ex) {
        System.out.println ("\nNão foi possivel ler os dispositivos do database");
        System.out.print (ex.getMessage ());
    }
    return Devices.toArray (new String [0]);
}
----------------------------------------

public String [] GetDevices () {
    List < String > Devices = new ArrayList < String > ();
    String query = "SELECT * FROM devices";
    try {
        statement = connection.createStatement ();
        resultSet = statement.executeQuery (query);
        while (resultSet.next ()) {
            Devices.add (resultSet.getString (1));
            Devices.add (resultSet.getString (2));
        }
    } catch (SQLException ex) {
        System.out.println ("\nNão foi possivel ler os dispositivos do database");
        System.out.print (ex.getMessage ());
    }
    return Devices.toArray (new String [Devices.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14407216_21659506_22_31
14407216_21659506_6_15
Title: Using threads in Java 
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 10; i ++) {
            System.out.println ("XYZ");
            Thread.sleep (2000);
        }
    } catch (InterruptedException ie) {
        System.out.println ("Interrupted Exception : " + ie);
    }
}
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 10; i ++) {
            System.out.println ("ABC");
            Thread.sleep (1000);
        }
    } catch (InterruptedException ie) {
        System.out.println ("Interrupted Exception : " + ie);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14408134_14408235_1_17
14408134_14409445_1_11
Title: Removing Points from an Array and returning a new Array - Java 
----------------------------------------

public static Point [] removeSomePoints (Point [] arr) {
    int count = 0;
    Point [] finalArr = new Point [arr.length];
    for (int i = 0;
    i < arr.length; i ++) {
        if (Math.abs (arr [i].getX () - arr [i].getY ()) > 19) {
            finalArr [count] = arr [i];
            count ++;
        }
    }
    return (Point []) resizeArray (finalArr, count);
}
----------------------------------------

public static Point [] removeSomePoints (Point [] arr) {
    if (arr == null) return null;

    if (arr.length == 0) return new Point [0];

    List < Point > outputList = new LinkedList < Point > ();
    for (Point p : arr) {
        if (Math.abs (p.getX () - p.getY ()) > 19) outputList.add (p);

    }
    return outputList.toArray (new Point [outputList.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14410388_14410417_10_23
14410388_14410597_11_26
Title: Swing: Show/hide button on mouse over 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    int size = 30;
    JPanel gui = new JPanel (new GridLayout (4, 10, 4, 4));
    for (int ii = 0;
    ii < 40; ii ++) {
        JButton b = new JButton ();
        b.setContentAreaFilled (false);
        b.setIcon (new ImageIcon (new BufferedImage (size, size, BufferedImage.TYPE_INT_RGB)));
        b.setRolloverIcon (new ImageIcon (new BufferedImage (size, size, BufferedImage.TYPE_INT_ARGB)));
        b.setBorder (null);
        gui.add (b);
    }
    JOptionPane.showMessageDialog (null, gui);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14410388_14410594_41_49
14410388_14410597_7_31
Title: Swing: Show/hide button on mouse over 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new RollButton ().display ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            int size = 30;
            JPanel gui = new JPanel (new GridLayout (4, 10, 4, 4));
            for (int ii = 0;
            ii < 40; ii ++) {
                JButton b = new JButton ();
                b.setContentAreaFilled (false);
                b.setIcon (new ImageIcon (new BufferedImage (size, size, BufferedImage.TYPE_INT_RGB)));
                b.setRolloverIcon (new ImageIcon (new BufferedImage (size, size, BufferedImage.TYPE_INT_ARGB)));
                b.setBorder (null);
                gui.add (b);
            }
            JOptionPane.showMessageDialog (null, gui);
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14433248_14433640_1_22
14433248_14433640_24_31
Title: Spring MVC binding to same @RequestMapping 
----------------------------------------

@RequestMapping (value = "/login")
public String welcome (@RequestParam ("j_username")
String username,@RequestParam ("j_password")
String password, HttpSession session, Model model) throws RemoteException, NotBoundException {
    int checkAccount = uiClient.checkAdminAccount (username, password);
    if (checkAccount == 1) {
        session.setAttribute ("username", username);
        session.setAttribute ("userrole", "Admin");
        return "redirect:/" + username + "/main";
    } else if (checkAccount == 0) {
        checkAccount = uiClient.checkAccount (username, password);
        if (checkAccount == 1) {
            session.setAttribute ("username", username);
            session.setAttribute ("userrole", "Admin");
            return "redirect:/" + username + "/main";
        } else if (checkAccount == 0) {
            return "login";
        }

    } else {
        return "databaseError";
    }

    return "login";
}
----------------------------------------

@RequestMapping (value = "/{username}/main")
public String indexPage (@PathVariable ("username")
String username) {
    if ("Admin".equals (session.getAttribute ("userrole"))) {
        return "/admin/adminPanel";
    } else {
        return "/user/userPanel";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14433860_14434192_12_31
14433860_14436250_68_78
Title: How to create a different model of JTable? 
----------------------------------------

public static void main (String [] args) {
    Object [] column = {"Column One", "Column Two"};
    Object [] [] data = {{"One", "Two"}, {"Three", "Four"}, {"Five", "Five"}};
    JTable table = new JTable (data, column);
    table.getColumnModel ().getColumn (1).setCellRenderer (new CustomTableCellRenderer ());
    table.setShowGrid (false);
    table.setTableHeader (null);
    JLabel label = new JLabel ("Top 10 by Loan Balance");
    label.setFont (label.getFont ().deriveFont (15.0f));
    JScrollPane scroll = new JScrollPane (table);
    JFrame frame = new JFrame ();
    frame.setSize (new Dimension (400, 100));
    frame.setTitle ("JTable Font Setting Example");
    frame.add (label, BorderLayout.NORTH);
    frame.add (scroll, BorderLayout.CENTER);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
    UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new TestTableHeader ().initUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14445312_14445362_1_13
14445312_14446162_2_10
Title: "In Java how can I fail if my program is run without -ea?" 
----------------------------------------

public static void main (String [] args) {
    boolean ok = true;
    try {
        assert false;
        ok = false;
    } catch (AssertionError ex) {
    }
    if (! ok) {
        System.err.println ("FATAL: assertions are not enabled.\n");
        System.exit (1);
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean exit = true;
    assert (exit = false) == false;
    if (exit) {
        System.out.println ("You forgot to turn assertions on with -ea.");
        System.exit (0);
    }
    process (args);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14454387_24091243_1_175
14454387_51273480_1_15
Title: "PDFBox: How to ""flatten"" a PDF-form?" 
----------------------------------------

public static void flattenPDF (PDDocument doc) throws IOException {
    PDDocumentCatalog catalog = doc.getDocumentCatalog ();
    PDAcroForm form = catalog.getAcroForm ();
    List < PDField > tmpfields = form.getFields ();
    PDResources formresources = form.getDefaultResources ();
    Map formfonts = formresources.getFonts ();
    PDAnnotation ann;
    List < PDPage > pages = catalog.getAllPages ();
    Iterator < PDPage > pageiterator = pages.iterator ();
    while (pageiterator.hasNext ()) {
        PDPage page = pageiterator.next ();
        PDResources pageResources = page.getResources ();
        Map pageFonts = pageResources.getFonts ();
        pageFonts.putAll (formfonts);
        pageResources.setFonts (pageFonts);
        PDPageContentStream contentStream = new PDPageContentStream (doc, page, true, true);
        for (PDField tmpfield : tmpfields) {
            List widgets = tmpfield.getKids ();
            if (widgets == null) {
                widgets = new ArrayList ();
                widgets.add (tmpfield.getWidget ());
            }
            Iterator < COSObjectable > widgetiterator = widgets.iterator ();
            while (widgetiterator.hasNext ()) {
                COSObjectable next = widgetiterator.next ();
                if (next instanceof PDField) {
                    PDField foundfield = (PDField) next;
                    ann = foundfield.getWidget ();
                } else {
                    ann = (PDAnnotation) next;
                }
                if (ann.getPage ().equals (page)) {
                    COSDictionary dict = ann.getDictionary ();
                    if (dict != null) {
                        if (tmpfield instanceof PDVariableText || tmpfield instanceof PDPushButton) {
                            COSDictionary ap = (COSDictionary) dict.getDictionaryObject ("AP");
                            if (ap != null) {
                                contentStream.appendRawCommands ("q\n");
                                COSArray rectarray = (COSArray) dict.getDictionaryObject ("Rect");
                                if (rectarray != null) {
                                    float [] rect = rectarray.toFloatArray ();
                                    String s = " 1 0 0 1  " + Float.toString (rect [0]) + " " + Float.toString (rect [1]) + " cm\n";
                                    contentStream.appendRawCommands (s);
                                }
                                COSStream stream = (COSStream) ap.getDictionaryObject ("N");
                                if (stream != null) {
                                    InputStream ioStream = stream.getUnfilteredStream ();
                                    ByteArrayOutputStream byteArray = new ByteArrayOutputStream ();
                                    byte [] buffer = new byte [4096];
                                    int amountRead = 0;
                                    while ((amountRead = ioStream.read (buffer, 0, buffer.length)) != - 1) {
                                        byteArray.write (buffer, 0, amountRead);
                                    }
                                    contentStream.appendRawCommands (byteArray.toString () + "\n");
                                }
                                contentStream.appendRawCommands ("Q\n");
                            }
                        } else if (tmpfield instanceof PDChoiceButton) {
                            COSDictionary ap = (COSDictionary) dict.getDictionaryObject ("AP");
                            if (ap != null) {
                                contentStream.appendRawCommands ("q\n");
                                COSArray rectarray = (COSArray) dict.getDictionaryObject ("Rect");
                                if (rectarray != null) {
                                    float [] rect = rectarray.toFloatArray ();
                                    String s = " 1 0 0 1  " + Float.toString (rect [0]) + " " + Float.toString (rect [1]) + " cm\n";
                                    contentStream.appendRawCommands (s);
                                }
                                COSName cbValue = (COSName) dict.getDictionaryObject (COSName.AS);
                                COSDictionary d = (COSDictionary) ap.getDictionaryObject (COSName.D);
                                if (d != null) {
                                    COSStream stream = (COSStream) d.getDictionaryObject (cbValue);
                                    if (stream != null) {
                                        InputStream ioStream = stream.getUnfilteredStream ();
                                        ByteArrayOutputStream byteArray = new ByteArrayOutputStream ();
                                        byte [] buffer = new byte [4096];
                                        int amountRead = 0;
                                        while ((amountRead = ioStream.read (buffer, 0, buffer.length)) != - 1) {
                                            byteArray.write (buffer, 0, amountRead);
                                        }
                                        if (! (tmpfield instanceof PDCheckbox)) {
                                            contentStream.appendRawCommands (byteArray.toString () + "\n");
                                        }
                                    }
                                }
                                COSDictionary n = (COSDictionary) ap.getDictionaryObject (COSName.N);
                                if (n != null) {
                                    COSStream stream = (COSStream) n.getDictionaryObject (cbValue);
                                    if (stream != null) {
                                        InputStream ioStream = stream.getUnfilteredStream ();
                                        ByteArrayOutputStream byteArray = new ByteArrayOutputStream ();
                                        byte [] buffer = new byte [4096];
                                        int amountRead = 0;
                                        while ((amountRead = ioStream.read (buffer, 0, buffer.length)) != - 1) {
                                            byteArray.write (buffer, 0, amountRead);
                                        }
                                        contentStream.appendRawCommands (byteArray.toString () + "\n");
                                    }
                                }
                                contentStream.appendRawCommands ("Q\n");
                            }
                        }

                    }
                }
            }
        }
        COSArrayList newanns = new COSArrayList ();
        List anns = page.getAnnotations ();
        ListIterator annotiterator = anns.listIterator ();
        while (annotiterator.hasNext ()) {
            COSObjectable next = (COSObjectable) annotiterator.next ();
            if (! (next instanceof PDAnnotationWidget)) {
                newanns.add (next);
            }
        }
        page.setAnnotations (newanns);
        contentStream.close ();
    }
    for (PDField tmpfield : tmpfields) {
        List kids = tmpfield.getKids ();
        if (kids != null) kids.clear ();

    }
    tmpfields.clear ();
    PDDocumentCatalog pdCatalog = doc.getDocumentCatalog ();
    PDAcroForm acroForm = pdCatalog.getAcroForm ();
    COSDictionary acroFormDict = acroForm.getDictionary ();
    COSArray cosFields = (COSArray) acroFormDict.getDictionaryObject ("Fields");
    cosFields.clear ();
}
----------------------------------------

private static void flattenPDF (String src, String dst) throws IOException {
    PDDocument doc = PDDocument.load (new File (src));
    PDDocumentCatalog catalog = doc.getDocumentCatalog ();
    PDAcroForm acroForm = catalog.getAcroForm ();
    PDResources resources = new PDResources ();
    acroForm.setDefaultResources (resources);
    List < PDField > fields = new ArrayList < > (acroForm.getFields ());
    processFields (fields, resources);
    acroForm.flatten ();
    doc.save (dst);
    doc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14464228_14465689_10_40
14464228_14470449_11_42
Title: How to change Java Swing JScrollPane mouse wheel priority to horizontal scrolling? 
----------------------------------------

public MyJScrollPane (Component component) {
    super (component);
    final JScrollBar horizontalScrollBar = getHorizontalScrollBar ();
    final JScrollBar verticalScrollBar = getVerticalScrollBar ();
    setWheelScrollingEnabled (false);
    addMouseWheelListener (new MouseAdapter () {
        public void mouseWheelMoved (MouseWheelEvent evt) {
            if (evt.getWheelRotation () == 1) {
                int iScrollAmount = evt.getScrollAmount ();
                int iNewValue = horizontalScrollBar.getValue () + horizontalScrollBar.getBlockIncrement () * iScrollAmount;
                if (iNewValue <= horizontalScrollBar.getMaximum ()) {
                    horizontalScrollBar.setValue (iNewValue);
                }
            } else if (evt.getWheelRotation () == - 1) {
                int iScrollAmount = evt.getScrollAmount ();
                int iNewValue = horizontalScrollBar.getValue () - horizontalScrollBar.getBlockIncrement () * iScrollAmount;
                if (iNewValue >= 0) {
                    horizontalScrollBar.setValue (iNewValue);
                }
            }

        }}

    );
}
----------------------------------------

public MyJScrollPane (Component component) {
    super (component);
    final JScrollBar horizontalScrollBar = getHorizontalScrollBar ();
    final JScrollBar verticalScrollBar = getVerticalScrollBar ();
    setWheelScrollingEnabled (false);
    addMouseWheelListener (new MouseAdapter () {
        public void mouseWheelMoved (MouseWheelEvent evt) {
            if (evt.getWheelRotation () >= 1) {
                int iScrollAmount = evt.getScrollAmount ();
                int iNewValue = horizontalScrollBar.getValue () + horizontalScrollBar.getBlockIncrement () * iScrollAmount * Math.abs (evt.getWheelRotation ());
                if (iNewValue <= horizontalScrollBar.getMaximum ()) {
                    horizontalScrollBar.setValue (iNewValue);
                }
            } else if (evt.getWheelRotation () <= - 1) {
                int iScrollAmount = evt.getScrollAmount ();
                int iNewValue = horizontalScrollBar.getValue () - horizontalScrollBar.getBlockIncrement () * iScrollAmount * Math.abs (evt.getWheelRotation ());
                if (iNewValue >= 0) {
                    horizontalScrollBar.setValue (iNewValue);
                }
            }

        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14464228_14465689_18_38
14464228_14470449_19_40
Title: How to change Java Swing JScrollPane mouse wheel priority to horizontal scrolling? 
----------------------------------------

public void mouseWheelMoved (MouseWheelEvent evt) {
    if (evt.getWheelRotation () == 1) {
        int iScrollAmount = evt.getScrollAmount ();
        int iNewValue = horizontalScrollBar.getValue () + horizontalScrollBar.getBlockIncrement () * iScrollAmount;
        if (iNewValue <= horizontalScrollBar.getMaximum ()) {
            horizontalScrollBar.setValue (iNewValue);
        }
    } else if (evt.getWheelRotation () == - 1) {
        int iScrollAmount = evt.getScrollAmount ();
        int iNewValue = horizontalScrollBar.getValue () - horizontalScrollBar.getBlockIncrement () * iScrollAmount;
        if (iNewValue >= 0) {
            horizontalScrollBar.setValue (iNewValue);
        }
    }

}
----------------------------------------

public void mouseWheelMoved (MouseWheelEvent evt) {
    if (evt.getWheelRotation () >= 1) {
        int iScrollAmount = evt.getScrollAmount ();
        int iNewValue = horizontalScrollBar.getValue () + horizontalScrollBar.getBlockIncrement () * iScrollAmount * Math.abs (evt.getWheelRotation ());
        if (iNewValue <= horizontalScrollBar.getMaximum ()) {
            horizontalScrollBar.setValue (iNewValue);
        }
    } else if (evt.getWheelRotation () <= - 1) {
        int iScrollAmount = evt.getScrollAmount ();
        int iNewValue = horizontalScrollBar.getValue () - horizontalScrollBar.getBlockIncrement () * iScrollAmount * Math.abs (evt.getWheelRotation ());
        if (iNewValue >= 0) {
            horizontalScrollBar.setValue (iNewValue);
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14469663_14469664_3_17
14469663_14781441_1_14
Title: Counting the spaces in a string 
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    int i = 0, spaceCount = 0;
    while (i < word.length ()) {
        if (word.charAt (i) == ' ') {
            spaceCount ++;
        }
        i ++;
    }
    System.out.println ("Spaces in string: " + spaceCount);
}
----------------------------------------

public static void main (String [] args) {
    String word = "a b c";
    String data [];
    int k = 0;
    data = word.split ("");
    for (int i = 0;
    i < data.length; i ++) {
        if (data [i].equals (" ")) {
            k ++;
        }
    }
    System.out.println (k);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14488407_14488515_2_25
14488407_14488572_2_29
Title: min change greedy algorithm in java 
----------------------------------------

public static void main (String args []) {
    double money = 1.73;
    int dollars = (int) Math.floor (money / 1);
    money -= dollars * 1;
    int quarters = (int) Math.floor (money / 0.25);
    money -= quarters * 0.25;
    int dimes = (int) Math.floor (money / 0.10);
    money -= dimes * 0.10;
    int nickels = (int) Math.floor (money / 0.05);
    money -= nickels * 0.05;
    int pennies = (int) Math.round (money * 100);
    System.out.println ("Dollars: " + dollars);
    System.out.println ("Quarters: " + quarters);
    System.out.println ("Dimes: " + dimes);
    System.out.println ("Nickels: " + nickels);
    System.out.println ("Pennies: " + pennies);
}
----------------------------------------

public static void main (String args []) {
    double money = 1.73;
    while (money > 0.0) {
        if (money >= 1) {
            System.out.println (Math.floor (money / 1) + " dollars");
            money -= Math.floor (money / 1) * (double) 1;
        } else if (money >= .25) {
            System.out.println (Math.floor (money / .25) + " quarters");
            money -= Math.floor (money / .25) * (double) .25;
        } else if (money >= .10) {
            System.out.println (Math.floor (money / .10) + " Dimes");
            money -= Math.floor (money / .10) * (double) .10;
        } else if (money >= .05) {
            System.out.println (Math.floor (money / .05) + " Nickels");
            money -= Math.floor (money / .05) * (double) .05;
        } else if (money >= .01) {
            System.out.println (Math.round (money / .01) + " Penny");
            money -= Math.round (money / .01) * (double) .01;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14489880_39178633_1_24
14489880_46260421_1_17
Title: "Change position of Google Maps API's ""My location"" button" 
----------------------------------------

@Override
public void onMapReady (GoogleMap googleMap) {
    mMap = googleMap;
    mMap.setMyLocationEnabled (true);
    LatLng sydney = new LatLng (- 34, 151);
    mMap.addMarker (new MarkerOptions ().position (sydney).title ("Marker in Sydney"));
    mMap.moveCamera (CameraUpdateFactory.newLatLng (sydney));
    if (mapView != null && mapView.findViewById (Integer.parseInt ("1")) != null) {
        View locationButton = ((View) mapView.findViewById (Integer.parseInt ("1")).getParent ()).findViewById (Integer.parseInt ("2"));
        RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) locationButton.getLayoutParams ();
        layoutParams.addRule (RelativeLayout.ALIGN_PARENT_TOP, 0);
        layoutParams.addRule (RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE);
        layoutParams.setMargins (0, 0, 30, 30);
    }
}
----------------------------------------

@Override
public void onMapReady (final GoogleMap googleMap) {
    this.map = googleMap;
    View locationButton = ((View) mapView.findViewById (Integer.parseInt ("1")).getParent ()).findViewById (Integer.parseInt ("2"));
    RelativeLayout.LayoutParams rlp = (RelativeLayout.LayoutParams) locationButton.getLayoutParams ();
    Log.l (Arrays.toString (rlp.getRules ()), L.getLogInfo ());
    int [] ruleList = rlp.getRules ();
    for (int i = 0;
    i < ruleList.length; i ++) {
        rlp.removeRule (i);
    }
    Log.l (Arrays.toString (rlp.getRules ()), L.getLogInfo ());
    rlp.addRule (RelativeLayout.CENTER_IN_PARENT, RelativeLayout.TRUE);
    rlp.addRule (RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14492761_14492778_1_12
14492761_14493920_1_10
Title: Troubles With Two On Click Listeners In One Class 
----------------------------------------

@Override
public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonBMI :
            startActivity (new Intent (this, MainActivity.class));
            break;
        case R.id.buttonGain :
            startActivity (new Intent (this, weightgain.class));
            break;
    }
}
----------------------------------------

@Override
public void onClick (View v) {
    if (v.equals (btn)) {
        Intent intent = new Intent (this, MainActivity.class);
        startActivity (intent);
    } else if (v.equals (btn1)) {
        Intent intent = new Intent (this, weightgain.class);
        startActivity (intent);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14492761_14492778_1_12
14492761_14495226_1_12
Title: Troubles With Two On Click Listeners In One Class 
----------------------------------------

@Override
public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonBMI :
            startActivity (new Intent (this, MainActivity.class));
            break;
        case R.id.buttonGain :
            startActivity (new Intent (this, weightgain.class));
            break;
    }
}
----------------------------------------

@Override
public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonBMI :
            startActivity (new Intent (MainMenu.this, MainActivity.class));
            break;
        case R.id.buttonGain :
            startActivity (new Intent (MainMenu.this, weightgain.class));
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14492761_14493920_1_10
14492761_14495226_1_12
Title: Troubles With Two On Click Listeners In One Class 
----------------------------------------

@Override
public void onClick (View v) {
    if (v.equals (btn)) {
        Intent intent = new Intent (this, MainActivity.class);
        startActivity (intent);
    } else if (v.equals (btn1)) {
        Intent intent = new Intent (this, weightgain.class);
        startActivity (intent);
    }

}
----------------------------------------

@Override
public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonBMI :
            startActivity (new Intent (MainMenu.this, MainActivity.class));
            break;
        case R.id.buttonGain :
            startActivity (new Intent (MainMenu.this, weightgain.class));
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14501396_14501446_35_43
14501396_14501483_53_62
Title: JPanel Layout managers - how to prevent components filling space? 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Test ().display ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            TestGridBagLayout test = new TestGridBagLayout ();
            test.initUI1 ();
            test.initUI2 ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14512407_14816914_1_10
14512407_14820734_1_22
Title: How to get the first column's contents from a 2D array 
----------------------------------------

public static float [] [] data (float [] [] data, Scanner scan) {
    for (int i = 0;
    i < data.length; i ++) {
        for (int j = 0;
        j < data [i].length; j ++) {
            data [i] [j] = (float) IOUtil.skipToDouble (scan);
            System.out.print (data [i] [j] + "  ");
        }
        System.out.println ();
    }
    return data;
}
----------------------------------------

public static float [] [] data (float [] [] data, Scanner scan) {
    int count = 0;
    for (int i = 0;
    i < data.length; i ++) {
        for (int j = 0;
        j < data [0].length; j ++) {
            count ++;
            if (count < data.length * data [0].length) {
                for (int k = 0;
                k < 2; k ++) {
                    data [i] [j] = (float) IOUtil.skipToDouble (scan);
                    System.out.print (data [i] [j] + "  ");
                    j = j + 1;
                }
                System.out.println ();
            }
        }
    }
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14513542_14513703_10_23
14513542_14514294_64_98
Title: convert image to black & white 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (Exception ex) {
    }
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    JPanel gui = new JPanel (new BorderLayout (2, 2));
    JPanel images = new JPanel (new GridLayout (0, 2, 2, 2));
    gui.add (images, BorderLayout.CENTER);
    final JLabel scaled = new JLabel (new ImageIcon (scaledImage));
    final JSlider brighten = new JSlider (0, 1000, 100);
    gui.add (brighten, BorderLayout.PAGE_START);
    ChangeListener cl = new ChangeListener () {
        @Override
        public void stateChanged (ChangeEvent e) {
            int val = brighten.getValue ();
            float valFloat = val / 1000f;
            BufferedImage bi = brighten (colorImage, valFloat);
            BufferedImage bw = new BufferedImage (colorImage.getWidth (), colorImage.getHeight (), BufferedImage.TYPE_BYTE_BINARY);
            Graphics g = bw.createGraphics ();
            g.drawImage (bi, 0, 0, null);
            g.dispose ();
            scaled.setIcon (new ImageIcon (bw));
        }}

    ;
    brighten.addChangeListener (cl);
    images.add (new JLabel (new ImageIcon (colorImage)));
    images.add (scaled);
    images.add (new JLabel (new ImageIcon (grayImage)));
    images.add (new JLabel (new ImageIcon (blackAndWhiteImage)));
    JOptionPane.showMessageDialog (null, gui);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14515938_14516026_1_52
14515938_30054400_34_88
Title: How to Click on the each individual position using base adapter 
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        convertView = inflater.inflate (R.layout.messagelist_row, null);
        viewHolder = new ViewHolder ();
        viewHolder.sms_from_row = (TextView) convertView.findViewById (R.id.sms_from_txtview);
        viewHolder.sms_to_row = (TextView) convertView.findViewById (R.id.sms_sendto_txtview);
        viewHolder.sms_from_row.setOnClickListener (new View.OnClickListener () {
            @Override
            public void onClick (View v) {
            }}

        );
    } else {
        viewHolder = (ViewHolder) convertView.getTag ();
    }
    viewHolder.sms_from_row.setVisibility (View.VISIBLE);
    viewHolder.sms_to_row.setVisibility (View.VISIBLE);
    if (Constant_Variables.Sms_Status_list.get (position).equalsIgnoreCase (Twilioresponse_Utils.sms_sent)) {
        viewHolder.sms_from_row.setVisibility (View.GONE);
        viewHolder.sms_to_row.setText ("Sent: " + Constant_Variables.Sms_from_list.get (position));
    } else if (Constant_Variables.Sms_Status_list.get (position).equalsIgnoreCase (Twilioresponse_Utils.sms_received)) {
        viewHolder.sms_to_row.setVisibility (View.GONE);
        viewHolder.sms_from_row.setText ("Received: " + Constant_Variables.Sms_to_list.get (position));
    } else {
        viewHolder.sms_from_row.setText ("Message in queued.");
        viewHolder.sms_to_row.setVisibility (View.VISIBLE);
    }

    convertView.setTag (viewHolder);
    return convertView;
}
----------------------------------------

public View getView (final int position, View convertView, ViewGroup parent) {
    View row = convertView;
    ViewHolder holder = null;
    if (row == null) {
        row = inflater.inflate (R.layout.activity_home_screen, parent, false);
        holder = new ViewHolder (row);
        row.setTag (holder);
    } else {
        holder = (ViewHolder) row.getTag ();
    }
    holder.caseNumber.setText (list.get (position).getCaseNo ());
    holder.state.setText (list.get (position).getState ());
    holder.date.setText (list.get (position).getDate ());
    row.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (context, "record clicked!", Toast.LENGTH_LONG).show ();
        }}

    );
    holder.delete.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            v = (View) v.getParent ();
            TextView number = (TextView) v.findViewById (R.id.textView_case_number);
            InfoDb db = new InfoDb (context);
            db.open ();
            if (db.removeRecord (number.getText ().toString ())) {
                list.remove (position);
                Toast.makeText (context, "Record Deleted!", Toast.LENGTH_LONG).show ();
                CaseAdapter.this.notifyDataSetChanged ();
            } else Toast.makeText (context, "Record not Deleted!", Toast.LENGTH_LONG).show ();

            db.close ();
        }}

    );
    return row;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14522239_39584230_1_23
14522239_40787814_1_45
Title: Test two directory trees for equality 
----------------------------------------

private static void verifyDirsAreEqual (Path one, Path other) throws IOException {
    Files.walkFileTree (one, new SimpleFileVisitor < Path > () {
        @Override
        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
            FileVisitResult result = super.visitFile (file, attrs);
            Path relativize = one.relativize (file);
            Path fileInOther = other.resolve (relativize);
            log.debug ("=== comparing: {} to {}", file, fileInOther);
            byte [] otherBytes = Files.readAllBytes (fileInOther);
            byte [] thisBytes = Files.readAllBytes (file);
            if (! Arrays.equals (otherBytes, thisTypes)) {
                throw new AssertionFailedError (file + " is not equal to " + fileInOther);
            }
            return result;
        }}

    );
}
----------------------------------------

private static void verifyDirsAreEqual (File expected, File generated) throws IOException {
    assertTrue ("Generated Folder doesn't exist: " + generated, generated.exists ());
    assertTrue ("Generated is not a folder?!?!: " + generated, generated.isDirectory ());
    assertTrue ("Expected Folder doesn't exist: " + expected, expected.exists ());
    assertTrue ("Expected is not a folder?!?!: " + expected, expected.isDirectory ());
    Files.walkFileTree (expected.toPath (), new SimpleFileVisitor < Path > () {
        @Override
        public FileVisitResult preVisitDirectory (Path dir, BasicFileAttributes attrs) throws IOException {
            FileVisitResult result = super.preVisitDirectory (dir, attrs);
            Path relativize = expected.toPath ().relativize (dir);
            File otherDir = generated.toPath ().resolve (relativize).toFile ();
            log.debug ("=== preVisitDirectory === compare " + dir + " to " + otherDir);
            assertEquals ("Folders doesn't contain same file!?!?", Arrays.toString (dir.toFile ().list ()), Arrays.toString (otherDir.list ()));
            return result;
        }@Override
        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
            FileVisitResult result = super.visitFile (file, attrs);
            Path relativize = expected.toPath ().relativize (file);
            File fileInOther = generated.toPath ().resolve (relativize).toFile ();
            log.debug ("=== comparing: " + file + " to " + fileInOther);
            String expectedContents = FileUtils.readFileToString (file.toFile ());
            String generatedContents = FileUtils.readFileToString (fileInOther);
            assertEquals ("(" + fileInOther + ")  csv standard doesn't match expected (" + file + ")!", expectedContents, generatedContents);
            return result;
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14522239_39584230_4_21
14522239_40787814_29_43
Title: Test two directory trees for equality 
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
    FileVisitResult result = super.visitFile (file, attrs);
    Path relativize = one.relativize (file);
    Path fileInOther = other.resolve (relativize);
    log.debug ("=== comparing: {} to {}", file, fileInOther);
    byte [] otherBytes = Files.readAllBytes (fileInOther);
    byte [] thisBytes = Files.readAllBytes (file);
    if (! Arrays.equals (otherBytes, thisTypes)) {
        throw new AssertionFailedError (file + " is not equal to " + fileInOther);
    }
    return result;
}
----------------------------------------

public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {
    FileVisitResult result = super.visitFile (file, attrs);
    Path relativize = expected.toPath ().relativize (file);
    File fileInOther = generated.toPath ().resolve (relativize).toFile ();
    log.debug ("=== comparing: " + file + " to " + fileInOther);
    String expectedContents = FileUtils.readFileToString (file.toFile ());
    String generatedContents = FileUtils.readFileToString (fileInOther);
    assertEquals ("(" + fileInOther + ")  csv standard doesn't match expected (" + file + ")!", expectedContents, generatedContents);
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14522931_14523921_16_72
14522931_46402654_26_51
Title: How to add header to SOAP request? 
----------------------------------------

public boolean handleMessage (SOAPMessageContext smc) {
    Boolean outboundProperty = (Boolean) smc.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);
    if (outboundProperty.booleanValue ()) {
        SOAPMessage message = smc.getMessage ();
        try {
            SOAPEnvelope envelope = smc.getMessage ().getSOAPPart ().getEnvelope ();
            SOAPHeader header = envelope.addHeader ();
            SOAPElement security = header.addChildElement ("Security", "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd");
            SOAPElement usernameToken = security.addChildElement ("UsernameToken", "wsse");
            usernameToken.addAttribute (new QName ("xmlns:wsu"), "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd");
            SOAPElement username = usernameToken.addChildElement ("Username", "wsse");
            username.addTextNode ("test");
            SOAPElement password = usernameToken.addChildElement ("Password", "wsse");
            password.setAttribute ("Type", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText");
            password.addTextNode ("test321");
            message.writeTo (System.out);
            System.out.println ("");
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        try {
            SOAPMessage message = smc.getMessage ();
            message.writeTo (System.out);
            System.out.println ("");
        } catch (Exception ex) {
            ex.printStackTrace ();
        }
    }
    return outboundProperty;
}
----------------------------------------

public boolean handleMessage (SOAPMessageContext context) {
    Boolean outboundProperty = (Boolean) context.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);
    if (outboundProperty.booleanValue ()) {
        try {
            SOAPMessage soapMessage = context.getMessage ();
            soapMessage.removeAllAttachments ();
            SOAPPart soappart = soapMessage.getSOAPPart ();
            WSSecHeader wsSecHeader = new WSSecHeader ();
            wsSecHeader.insertSecurityHeader (soappart);
            WSSecUsernameToken token = new WSSecUsernameToken ();
            token.setPasswordType (WSConstants.PASSWORD_DIGEST);
            token.setUserInfo (usernameText, passwordText);
            token.build (soappart, wsSecHeader);
            soapMessage.saveChanges ();
        } catch (Exception e) {
            throw new RuntimeException ("Error on wsSecurityHandler: " + e.getMessage ());
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
14522931_14523921_16_72
14522931_50895904_60_123
Title: How to add header to SOAP request? 
----------------------------------------

public boolean handleMessage (SOAPMessageContext smc) {
    Boolean outboundProperty = (Boolean) smc.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);
    if (outboundProperty.booleanValue ()) {
        SOAPMessage message = smc.getMessage ();
        try {
            SOAPEnvelope envelope = smc.getMessage ().getSOAPPart ().getEnvelope ();
            SOAPHeader header = envelope.addHeader ();
            SOAPElement security = header.addChildElement ("Security", "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd");
            SOAPElement usernameToken = security.addChildElement ("UsernameToken", "wsse");
            usernameToken.addAttribute (new QName ("xmlns:wsu"), "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd");
            SOAPElement username = usernameToken.addChildElement ("Username", "wsse");
            username.addTextNode ("test");
            SOAPElement password = usernameToken.addChildElement ("Password", "wsse");
            password.setAttribute ("Type", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText");
            password.addTextNode ("test321");
            message.writeTo (System.out);
            System.out.println ("");
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        try {
            SOAPMessage message = smc.getMessage ();
            message.writeTo (System.out);
            System.out.println ("");
        } catch (Exception ex) {
            ex.printStackTrace ();
        }
    }
    return outboundProperty;
}
----------------------------------------

public boolean handleMessage (SOAPMessageContext soapMessageContext) {
    Boolean outboundProperty = (Boolean) soapMessageContext.get (MessageContext.MESSAGE_OUTBOUND_PROPERTY);
    if (outboundProperty) {
        try {
            SOAPEnvelope soapEnvelope = soapMessageContext.getMessage ().getSOAPPart ().getEnvelope ();
            SOAPHeader header = soapEnvelope.getHeader ();
            if (header == null) {
                header = soapEnvelope.addHeader ();
            }
            SOAPElement securityHeaderElement = header.addChildElement ("Security", "wsse", URL_WSSE_NAMESPACE);
            securityHeaderElement.addAttribute (soapEnvelope.createName ("S:mustUnderstand"), "1");
            javax.xml.soap.Name timestampElementName = soapEnvelope.createName ("Timestamp", "wsu", URL_WSU_NAMESPACE);
            SOAPElement timestampSOAPElement = securityHeaderElement.addChildElement (timestampElementName);
            String created = getCurrentDateTime ();
            String expires = getCurrentDateTimePlusDelay (60L * 60L);
            SOAPElement createdSOAPElement = timestampSOAPElement.addChildElement ("Created", "wsu", URL_WSU_NAMESPACE);
            createdSOAPElement.addTextNode (created);
            SOAPElement expiresSOAPElement = timestampSOAPElement.addChildElement ("Expires", "wsu", URL_WSU_NAMESPACE);
            expiresSOAPElement.addTextNode (expires);
            javax.xml.soap.Name usernameTokenElementName = soapEnvelope.createName ("UsernameToken", "wsse", URL_WSSE_NAMESPACE);
            SOAPElement usernameTokenSOAPElement = securityHeaderElement.addChildElement (usernameTokenElementName);
            SOAPElement userNameSOAPElement = usernameTokenSOAPElement.addChildElement ("Username", "wsse", URL_WSSE_NAMESPACE);
            userNameSOAPElement.addTextNode (this.usernameText);
            javax.xml.soap.Name passwordElementName = soapEnvelope.createName ("Password", "wsse", URL_WSSE_NAMESPACE);
            SOAPElement passwordSOAPElement = usernameTokenSOAPElement.addChildElement (passwordElementName);
            passwordSOAPElement.addTextNode (this.passwordText);
        } catch (Exception e) {
            throw new RuntimeException ("Error on wsSecurityHandler: " + e.getMessage ());
        }
    }
    return true;
}
----------------------------------------
