$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25971258_25971643_46_68
25971258_25971838_2_12
Title: Algorithm to split string with comma only in the outer braces 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Start tmpTest3");
    List < String > inputs = new ArrayList < String > ();
    inputs.add ("text2(text3, text4), text5(text6, text7)");
    inputs.add ("text2, text3(text4, text5(text6, text7))");
    for (int c = 0;
    c < inputs.size (); c ++) {
        System.out.println ("Running test for " + inputs.get (c));
        List < String > res = process (inputs.get (c));
        System.out.println ("Got " + res.size () + " strings as a result:");
        for (int d = 0;
        d < res.size (); d ++) {
            System.out.println (" - :" + res.get (d) + ":");
        }
        System.out.println ("----------------------");
    }
    System.out.println ("End tmpTest3");
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String subject1 = "text2(text3, text4), text5(text6, text7)";
    String subject2 = "text2, text3(text4, text5(text6, text7))";
    String p = "\\s*\\d*\\(\\)";
    String [] res = subject1.split (p);
    System.out.println (Arrays.toString (res));
    res = subject2.split (p);
    System.out.println (Arrays.toString (res));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25977310_26037852_37_59
25977310_26062618_1_44
Title: Set cursor for jTabbedPane's tab in java 
----------------------------------------

public static void main (String [] args) {
    JFrame MainScreen = new JFrame ("Custom JTabbedPane");
    MainScreen.setExtendedState (MainScreen.getExtendedState () | JFrame.MAXIMIZED_BOTH);
    JTabbedPane jtpane = new JTabbedPane (2);
    jtpane.setUI (new CustomMainMenuTabs ());
    MouseMotionListener listener = new MouseMotionAdapter () {
        public void mouseMoved (MouseEvent e) {
            JTabbedPane tabbedPane = (JTabbedPane) e.getSource ();
            if (findTabPaneIndex (e.getPoint (), tabbedPane) > - 1) {
                tabbedPane.setCursor (new Cursor ((Cursor.HAND_CURSOR)));
            } else {
                tabbedPane.setCursor (new Cursor ((Cursor.DEFAULT_CURSOR)));
            }
        }}

    ;
    jtpane.add ("1st Tabe", new JPanel ());
    jtpane.add ("2nd Tabe", new JPanel ());
    jtpane.add ("3rd Tabe", new JPanel ());
    jtpane.addMouseMotionListener (listener);
    MainScreen.getContentPane ().add (jtpane);
    MainScreen.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame MainScreen = new JFrame ("Custom JTabbedPane");
    MainScreen.setExtendedState (MainScreen.getExtendedState () | JFrame.MAXIMIZED_BOTH);
    MouseListener listener = new MouseAdapter () {
        @Override
        public void mouseClicked (MouseEvent e) {
            JTabbedPane jp = (JTabbedPane) (e.getComponent ().getParent ().getParent ());
            jp.setSelectedIndex (jp.indexAtLocation (e.getComponent ().getX (), e.getComponent ().getY ()));
        }@Override
        public void mouseEntered (MouseEvent e) {
            e.getComponent ().setCursor (new Cursor ((Cursor.HAND_CURSOR)));
        }}

    ;
    JLabel jlabel1 = new JLabel ("1st Tabe");
    jlabel1.addMouseListener (listener);
    JLabel jlabel2 = new JLabel ("2nd Tabe");
    jlabel2.addMouseListener (listener);
    JLabel jlabel3 = new JLabel ("3rd Tabe");
    jlabel3.addMouseListener (listener);
    JTabbedPane jtpane = new JTabbedPane (2);
    jtpane.setUI (new CustomMainMenuTabs ());
    jtpane.add ("1st Tabe", new JPanel ());
    jtpane.setTabComponentAt (0, jlabel1);
    jtpane.add ("2nd  Tabe", new JPanel ());
    jtpane.setTabComponentAt (1, jlabel2);
    jtpane.add ("3rd  Tabe", new JPanel ());
    jtpane.setTabComponentAt (2, jlabel3);
    MainScreen.getContentPane ().add (jtpane);
    MainScreen.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25977310_26037852_37_59
25977310_26099312_52_59
Title: Set cursor for jTabbedPane's tab in java 
----------------------------------------

public static void main (String [] args) {
    JFrame MainScreen = new JFrame ("Custom JTabbedPane");
    MainScreen.setExtendedState (MainScreen.getExtendedState () | JFrame.MAXIMIZED_BOTH);
    JTabbedPane jtpane = new JTabbedPane (2);
    jtpane.setUI (new CustomMainMenuTabs ());
    MouseMotionListener listener = new MouseMotionAdapter () {
        public void mouseMoved (MouseEvent e) {
            JTabbedPane tabbedPane = (JTabbedPane) e.getSource ();
            if (findTabPaneIndex (e.getPoint (), tabbedPane) > - 1) {
                tabbedPane.setCursor (new Cursor ((Cursor.HAND_CURSOR)));
            } else {
                tabbedPane.setCursor (new Cursor ((Cursor.DEFAULT_CURSOR)));
            }
        }}

    ;
    jtpane.add ("1st Tabe", new JPanel ());
    jtpane.add ("2nd Tabe", new JPanel ());
    jtpane.add ("3rd Tabe", new JPanel ());
    jtpane.addMouseMotionListener (listener);
    MainScreen.getContentPane ().add (jtpane);
    MainScreen.setVisible (true);
}
----------------------------------------

public static void main (String...args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new TestTabCursor ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25977310_26062618_1_44
25977310_26099312_52_59
Title: Set cursor for jTabbedPane's tab in java 
----------------------------------------

public static void main (String [] args) {
    JFrame MainScreen = new JFrame ("Custom JTabbedPane");
    MainScreen.setExtendedState (MainScreen.getExtendedState () | JFrame.MAXIMIZED_BOTH);
    MouseListener listener = new MouseAdapter () {
        @Override
        public void mouseClicked (MouseEvent e) {
            JTabbedPane jp = (JTabbedPane) (e.getComponent ().getParent ().getParent ());
            jp.setSelectedIndex (jp.indexAtLocation (e.getComponent ().getX (), e.getComponent ().getY ()));
        }@Override
        public void mouseEntered (MouseEvent e) {
            e.getComponent ().setCursor (new Cursor ((Cursor.HAND_CURSOR)));
        }}

    ;
    JLabel jlabel1 = new JLabel ("1st Tabe");
    jlabel1.addMouseListener (listener);
    JLabel jlabel2 = new JLabel ("2nd Tabe");
    jlabel2.addMouseListener (listener);
    JLabel jlabel3 = new JLabel ("3rd Tabe");
    jlabel3.addMouseListener (listener);
    JTabbedPane jtpane = new JTabbedPane (2);
    jtpane.setUI (new CustomMainMenuTabs ());
    jtpane.add ("1st Tabe", new JPanel ());
    jtpane.setTabComponentAt (0, jlabel1);
    jtpane.add ("2nd  Tabe", new JPanel ());
    jtpane.setTabComponentAt (1, jlabel2);
    jtpane.add ("3rd  Tabe", new JPanel ());
    jtpane.setTabComponentAt (2, jlabel3);
    MainScreen.getContentPane ().add (jtpane);
    MainScreen.setVisible (true);
}
----------------------------------------

public static void main (String...args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new TestTabCursor ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_10167689_5_30
2598129_14006711_1_17
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    String sent = "I love painting and badminton";
    char [] chars = sent.toCharArray ();
    System.out.println ("Before Sorting");
    showLetters (chars);
    java.util.Arrays.sort (chars);
    System.out.println ("Post Sorting");
    showLetters (chars);
    System.out.println ("Removing Duplicates");
    stripDuplicateLetters (chars);
    System.out.println ("Post Removing Duplicates");
    java.util.Arrays.sort (chars);
    showLetters (chars);
}
----------------------------------------

public static void main (String [] args) {
    String s = "aabbbeeddsfre";
    String temp2 = "";
    HashMap < Integer, Character > tc = new HashMap < Integer, Character > ();
    char [] charArray = s.toCharArray ();
    for (Character c : charArray) {
        if (! tc.containsValue (c)) {
            temp2 = temp2 + c.toString ();
            tc.put (c.hashCode (), c);
        }
    }
    System.out.println (temp2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_10167689_5_30
2598129_18217371_1_14
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    String sent = "I love painting and badminton";
    char [] chars = sent.toCharArray ();
    System.out.println ("Before Sorting");
    showLetters (chars);
    java.util.Arrays.sort (chars);
    System.out.println ("Post Sorting");
    showLetters (chars);
    System.out.println ("Removing Duplicates");
    stripDuplicateLetters (chars);
    System.out.println ("Post Removing Duplicates");
    java.util.Arrays.sort (chars);
    showLetters (chars);
}
----------------------------------------

public static void main (String [] args) {
    char [] str = {'a', 'b', 'a', 'b', 'c', 'e', 'c'};
    for (int i = 1;
    i < str.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (str [i] == str [j]) {
                str [i] = ' ';
            }
        }
    }
    System.out.println (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_10167689_5_30
2598129_50892690_2_18
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    String sent = "I love painting and badminton";
    char [] chars = sent.toCharArray ();
    System.out.println ("Before Sorting");
    showLetters (chars);
    java.util.Arrays.sort (chars);
    System.out.println ("Post Sorting");
    showLetters (chars);
    System.out.println ("Removing Duplicates");
    stripDuplicateLetters (chars);
    System.out.println ("Post Removing Duplicates");
    java.util.Arrays.sort (chars);
    showLetters (chars);
}
----------------------------------------

public static void main (String [] args) {
    String a = "GiniGinaProtijayi";
    List < Character > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        char ch = a.charAt (i);
        if (list.size () == 0) {
            list.add (ch);
        }
        if (! list.contains (ch)) {
            list.add (ch);
        }
    }
    StringBuffer sbr = new StringBuffer ();
    for (char ch : list) {
        sbr.append (ch);
    }
    System.out.println (sbr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_13623488_9_30
2598129_21955476_1_28
Title: function to remove duplicate characters in a string 
----------------------------------------

public String removeDuplicate (String s) {
    String retn = null;
    boolean [] b = new boolean [256];
    char [] ch = s.toCharArray ();
    for (int i = 0;
    i < ch.length; i ++) {
        if (b [ch [i]]) {
            ch [i] = ' ';
        } else {
            b [ch [i]] = true;
        }
    }
    retn = new String (ch);
    return retn;
}
----------------------------------------

public static void removeDuplicate (char [] inpStr) {
    if (inpStr == null) return;

    if (inpStr.Length < 2) return;

    for (int i = 0;
    i < inpStr.Length; ++ i) {
        int j, k;
        for (j = 1; j < inpStr.Length; j ++) {
            if (inpStr [i] == inpStr [j] && i != j) {
                for (k = j; k < inpStr.Length - 1; k ++) {
                    inpStr [k] = inpStr [k + 1];
                }
                inpStr [k] = ' ';
            }
        }
    }
    Console.WriteLine (inpStr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_13623488_9_30
2598129_25488960_1_33
Title: function to remove duplicate characters in a string 
----------------------------------------

public String removeDuplicate (String s) {
    String retn = null;
    boolean [] b = new boolean [256];
    char [] ch = s.toCharArray ();
    for (int i = 0;
    i < ch.length; i ++) {
        if (b [ch [i]]) {
            ch [i] = ' ';
        } else {
            b [ch [i]] = true;
        }
    }
    retn = new String (ch);
    return retn;
}
----------------------------------------

static void removeDuplicate (String s) {
    char s1 [] = s.toCharArray ();
    Arrays.sort (s1);
    int myLength = s1.length;
    int i = 0;
    int j = 0;
    while (i != myLength - 1) {
        if (s1 [i] != s1 [i + 1]) {
            s1 [j] = s1 [i];
            s1 [j + 1] = s1 [i + 1];
            j ++;
        }
        i ++;
    }
    String s4 = new String (s1);
    System.out.println (s4.substring (0, j + 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_14006711_1_17
2598129_18217371_1_14
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    String s = "aabbbeeddsfre";
    String temp2 = "";
    HashMap < Integer, Character > tc = new HashMap < Integer, Character > ();
    char [] charArray = s.toCharArray ();
    for (Character c : charArray) {
        if (! tc.containsValue (c)) {
            temp2 = temp2 + c.toString ();
            tc.put (c.hashCode (), c);
        }
    }
    System.out.println (temp2);
}
----------------------------------------

public static void main (String [] args) {
    char [] str = {'a', 'b', 'a', 'b', 'c', 'e', 'c'};
    for (int i = 1;
    i < str.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (str [i] == str [j]) {
                str [i] = ' ';
            }
        }
    }
    System.out.println (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_14006711_1_17
2598129_50892690_2_18
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    String s = "aabbbeeddsfre";
    String temp2 = "";
    HashMap < Integer, Character > tc = new HashMap < Integer, Character > ();
    char [] charArray = s.toCharArray ();
    for (Character c : charArray) {
        if (! tc.containsValue (c)) {
            temp2 = temp2 + c.toString ();
            tc.put (c.hashCode (), c);
        }
    }
    System.out.println (temp2);
}
----------------------------------------

public static void main (String [] args) {
    String a = "GiniGinaProtijayi";
    List < Character > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        char ch = a.charAt (i);
        if (list.size () == 0) {
            list.add (ch);
        }
        if (! list.contains (ch)) {
            list.add (ch);
        }
    }
    StringBuffer sbr = new StringBuffer ();
    for (char ch : list) {
        sbr.append (ch);
    }
    System.out.println (sbr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_18217371_1_14
2598129_50892690_2_18
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void main (String [] args) {
    char [] str = {'a', 'b', 'a', 'b', 'c', 'e', 'c'};
    for (int i = 1;
    i < str.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (str [i] == str [j]) {
                str [i] = ' ';
            }
        }
    }
    System.out.println (str);
}
----------------------------------------

public static void main (String [] args) {
    String a = "GiniGinaProtijayi";
    List < Character > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        char ch = a.charAt (i);
        if (list.size () == 0) {
            list.add (ch);
        }
        if (! list.contains (ch)) {
            list.add (ch);
        }
    }
    StringBuffer sbr = new StringBuffer ();
    for (char ch : list) {
        sbr.append (ch);
    }
    System.out.println (sbr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_21955476_1_28
2598129_25488960_1_33
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void removeDuplicate (char [] inpStr) {
    if (inpStr == null) return;

    if (inpStr.Length < 2) return;

    for (int i = 0;
    i < inpStr.Length; ++ i) {
        int j, k;
        for (j = 1; j < inpStr.Length; j ++) {
            if (inpStr [i] == inpStr [j] && i != j) {
                for (k = j; k < inpStr.Length - 1; k ++) {
                    inpStr [k] = inpStr [k + 1];
                }
                inpStr [k] = ' ';
            }
        }
    }
    Console.WriteLine (inpStr);
}
----------------------------------------

static void removeDuplicate (String s) {
    char s1 [] = s.toCharArray ();
    Arrays.sort (s1);
    int myLength = s1.length;
    int i = 0;
    int j = 0;
    while (i != myLength - 1) {
        if (s1 [i] != s1 [i + 1]) {
            s1 [j] = s1 [i];
            s1 [j + 1] = s1 [i + 1];
            j ++;
        }
        i ++;
    }
    String s4 = new String (s1);
    System.out.println (s4.substring (0, j + 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_2598209_4_26
2598129_2598434_1_10
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int len = str.length;
    if (len < 2) return;

    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str [i] == str [j]) break;

        }
        if (j == tail) {
            str [tail] = str [i];
            ++ tail;
        }
    }
    str [tail] = 0;
}
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_2598209_4_26
2598129_26372240_1_33
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int len = str.length;
    if (len < 2) return;

    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str [i] == str [j]) break;

        }
        if (j == tail) {
            str [tail] = str [i];
            ++ tail;
        }
    }
    str [tail] = 0;
}
----------------------------------------

private static void removeDuplicates (char [] str) {
    if (str == null || str.length < 2) {
        return;
    }
    int tail = 0;
    for (int i = 0;
    i < str.length; i ++) {
        boolean found = false;
        for (int j = 0;
        j < i; j ++) {
            if (str [j] == str [i]) {
                found = true;
                break;
            }
        }
        if (found) {
            continue;
        }
        str [tail] = str [i];
        tail ++;
    }
    str [tail] = '\0';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_2598209_4_26
2598129_30563864_1_19
Title: function to remove duplicate characters in a string 
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int len = str.length;
    if (len < 2) return;

    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str [i] == str [j]) break;

        }
        if (j == tail) {
            str [tail] = str [i];
            ++ tail;
        }
    }
    str [tail] = 0;
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int length = str.length;
    if (length < 2) return;

    for (int i = 0;
    i < length; i ++) {
        int j;
        for (j = i + 1; j < length; j ++) {
            if (str [j] == str [i]) {
                str [j] = 0;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_2598434_1_10
2598129_26372240_1_33
Title: function to remove duplicate characters in a string 
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

private static void removeDuplicates (char [] str) {
    if (str == null || str.length < 2) {
        return;
    }
    int tail = 0;
    for (int i = 0;
    i < str.length; i ++) {
        boolean found = false;
        for (int j = 0;
        j < i; j ++) {
            if (str [j] == str [i]) {
                found = true;
                break;
            }
        }
        if (found) {
            continue;
        }
        str [tail] = str [i];
        tail ++;
    }
    str [tail] = '\0';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_2598434_1_10
2598129_30563864_1_19
Title: function to remove duplicate characters in a string 
----------------------------------------

static String removeDuplicates (String s) {
    StringBuilder noDupes = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        String si = s.substring (i, i + 1);
        if (noDupes.indexOf (si) == - 1) {
            noDupes.append (si);
        }
    }
    return noDupes.toString ();
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int length = str.length;
    if (length < 2) return;

    for (int i = 0;
    i < length; i ++) {
        int j;
        for (j = i + 1; j < length; j ++) {
            if (str [j] == str [i]) {
                str [j] = 0;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2598129_26372240_1_33
2598129_30563864_1_19
Title: function to remove duplicate characters in a string 
----------------------------------------

private static void removeDuplicates (char [] str) {
    if (str == null || str.length < 2) {
        return;
    }
    int tail = 0;
    for (int i = 0;
    i < str.length; i ++) {
        boolean found = false;
        for (int j = 0;
        j < i; j ++) {
            if (str [j] == str [i]) {
                found = true;
                break;
            }
        }
        if (found) {
            continue;
        }
        str [tail] = str [i];
        tail ++;
    }
    str [tail] = '\0';
}
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) return;

    int length = str.length;
    if (length < 2) return;

    for (int i = 0;
    i < length; i ++) {
        int j;
        for (j = i + 1; j < length; j ++) {
            if (str [j] == str [i]) {
                str [j] = 0;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25982781_25982919_5_26
25982781_25982922_4_36
Title: "Trying to make a make a loan calculator Can not find symbols" 
----------------------------------------

public static void main (String [] args) {
    int P, Y;
    double R;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter loan amount: $");
    P = input.nextInt ();
    System.out.println ("Enter number of years: ");
    Y = input.nextInt ();
    System.out.println ("Enter interest rate: %");
    R = input.nextDouble ();
    double r = R / 1200;
    double n = 12 * Y;
    double payment = (P * r) / (1 - Math.pow (1 + r, - n));
    double interest = payment * n - P;
    System.out.println ("Monthly payments = " + payment);
    System.out.println ("Total interest   = " + interest);
}
----------------------------------------

public static void main (String [] args) {
    double P;
    double Y;
    double R;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter loan amount: $");
    P = input.nextDouble ();
    System.out.println ("Enter number of years: ");
    Y = input.nextDouble ();
    System.out.println ("Enter interest rate: %");
    R = input.nextDouble ();
    double r = R / 1200;
    double n = 12 * Y;
    double payment = (P * r) / (1 - Math.pow (1 + r, - n));
    double interest = payment * n - P;
    System.out.println ("Monthly payments = " + payment);
    System.out.println ("Total interest   = " + interest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25986024_25986172_5_15
25986024_25986189_5_14
Title: Im having trouble getting this txt.file to print 1-100 integers correctly 
----------------------------------------

public static void main (String [] args) throws IOException {
    PrintWriter writer = new PrintWriter (new File ("Write100Project"));
    int integer = 0;
    while (integer < 100) {
        if (integer % 10 == 0) {
            System.out.println ();
        }
        integer ++;
        System.out.print (integer + " ");
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    PrintWriter writer = new PrintWriter (new File ("Write100Project"));
    int i = 0;
    while (i < 100) {
        if (i % 10 == 0 && i != 0) {
            System.out.println (i ++ + "");
        }
        System.out.print (i ++ + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25986323_25986350_1_26
25986323_26028668_1_36
Title: java help for converting temperture 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    double F = 0;
    double C = 0;
    int ConvertFer = 0;
    int ConvertCel = 1;
    int Done = 3;
    System.out.println ("Welcome to the Temperature Converter!\n" + "Enter 0 to convert F --> C and 1 to convert from C --> F.\n" + "Enter 3 when done");
    int userChoice = - 1;
    while (true) {
        userChoice = reader.nextInt ();
        if (userChoice == ConvertFer) {
        } else if (userChoice == ConvertCel) {
        } else if (userChoice == Done) {
            break;
        } else {
            System.out.println ("Please enter a valid choice");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    double tF = 0.0001;
    double tC = 0.0001;
    int convertFer = 0;
    int convertCel = 1;
    System.out.println ("Welcome to the Temperature Converter!\n" + "Enter 0 to convert F --> C and 1 to convert from C --> F.\n" + "Enter Control-Z when done!");
    convertFer = reader.nextInt ();
    if (convertFer == 0) {
        System.out.println ("Welcome to the F --> C Converter!\n" + "Enter Values to convert:");
        while (reader.hasNext ()) {
            tC = reader.nextDouble ();
            tF = ((tC - 32) * 5) / 9;
            System.out.println (tC + " F = " + tF + " C");
        }
    } else {
        System.out.println ("Welcome to the C --> F Converter!\n" + "Enter Values to convert:");
        while (reader.hasNext ()) {
            tF = reader.nextDouble ();
            tC = ((tF * 9) / 5) + 32;
            System.out.println (tF + "C = " + tC + " F");
        }
        System.out.println ("Goodbye!");
        System.exit (0);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25987137_25987222_3_23
25987137_25987229_3_22
Title: "use while loops to calculate the sum of the odd number 1-25 and even number 1-50" 
----------------------------------------

public static void main (String [] args) {
    int oddNumber = 1;
    int totalOdd = 0;
    int evenNumber = 2;
    int totalEven = 0;
    while (oddNumber <= 25) {
        totalOdd = totalOdd + oddNumber;
        oddNumber = oddNumber + 2;
    }
    System.out.printf ("Total sum of the odd number is %d\n", totalOdd);
    while (evenNumber <= 50) {
        totalEven = totalEven + evenNumber;
        evenNumber = evenNumber + 2;
    }
    System.out.printf ("Total sum of the even number is %d\n", totalEven);
}
----------------------------------------

public static void main (String [] args) {
    int oddNumber = 0;
    int evenNumber = 0;
    int number = 1;
    while (number < 50) {
        if (number <= 25 && number % 2 != 0) {
            oddNumber = oddNumber + number;
        } else if (number % 2 == 0) {
            evenNumber = evenNumber + number;
        }

        number ++;
    }
    System.out.printf ("Total sum of the odd number is %d\n", oddNumber);
    System.out.printf ("Total sum of the even number is %d\n", evenNumber);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25987349_25987505_6_38
25987349_25987546_1_27
Title: Finding the middle letter and make it uppercase.. am stuck and the end .. :( 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > al = new ArrayList < String > ();
    al.add ("boy india apple");
    String str [] = al.toArray (new String [al.size ()]);
    String newar [];
    String delimiter = " ";
    newar = str [0].split (delimiter);
    for (int i = 0;
    i < newar.length; i ++) {
        char [] c = newar [i].toCharArray ();
        for (int j = 0;
        j < c.length; j ++) {
            if (j == c.length / 2) {
                c [j] = Character.toUpperCase (c [c.length / 2]);
            }
            System.out.print (c [j]);
            newar [i] += c [j];
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > al = new ArrayList < String > ();
    al.add ("boy india apple");
    String str [] = al.toArray (new String [al.size ()]);
    String newar [];
    String delimiter = " ";
    newar = str [0].split (delimiter);
    System.out.print ("{");
    for (int i = 0;
    i < newar.length; i ++) {
        char [] c = newar [i].toCharArray ();
        for (int j = 0;
        j < c.length; j ++) {
            if (j == c.length / 2) {
                c [j] = Character.toUpperCase (c [c.length / 2]);
            }
            System.out.print (c [j]);
        }
        newar [i] = String.valueOf (c);
        if (i < newar.length - 1) System.out.print (",");

    }
    System.out.println ("}");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25995975_26000725_37_53
25995975_26009105_33_50
Title: doInBackground and updating Interface 
----------------------------------------

protected void onPostExecute (JSONArray result) {
    super.onPostExecute (result);
    JSONObject dream = result.getJSONObject (0);
    txtName = (EditText) findViewById (R.id.inputEditName);
    txtClarety = (EditText) findViewById (R.id.inputEditClarety);
    txtDesc = (EditText) findViewById (R.id.inputEditDesc);
    txtName.setText (dream.getString (TAG_NAME));
    txtClarety.setText (dream.getString (TAG_CLARETY));
    txtDesc.setText (dream.getString (TAG_DESCRIPTION));
}
----------------------------------------

protected void onPostExecute (String result) {
    super.onPostExecute (result);
    if (result.length () > 0) {
        try {
            JSONObject dream = new JSONObject (result);
            EditText txtName = (EditText) findViewById (R.id.inputEditName);
            EditText txtClarety = (EditText) findViewById (R.id.inputEditClarety);
            EditText txtDesc = (EditText) findViewById (R.id.inputEditDesc);
            txtName.setText (dream.getString (TAG_NAME));
            txtClarety.setText (dream.getString (TAG_CLARETY));
            txtDesc.setText (dream.getString (TAG_DESCRIPTION));
        } catch (JSONException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25995975_26000725_5_35
25995975_26009105_5_31
Title: doInBackground and updating Interface 
----------------------------------------

protected JSONArray doInBackground (String...params) {
    JSONArray dreamObj;
    try {
        List < NameValuePair > param = new ArrayList < NameValuePair > ();
        param.add (new BasicNameValuePair ("pid", pid));
        JSONObject json = jsonParser.makeHttpRequest (url_dream_detials, "GET", param);
        Log.d ("Single Dream Details", json.toString ());
        success = json.getInt (TAG_SUCCESS);
        if (success == 1) {
            dreamObj = json.getJSONArray (TAG_DREAM);
            return dreamObj;
        } else {
            return dreamObj;
        }
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return dreamObj;
}
----------------------------------------

protected JSONArray doInBackground (String...params) {
    List < NameValuePair > params = new ArrayList < NameValuePair > ();
    params.add (new BasicNameValuePair ("pid", pid));
    try {
        JSONObject json = jsonParser.makeHttpRequest (url_dream_detials, "GET", params);
        Log.d ("Single Dream Details", json.toString ());
        success = json.getInt (TAG_SUCCESS);
        if (success == 1) {
            JSONArray dreamObj = json.getJSONArray (TAG_DREAM);
            JSONObject dream = dreamObj.getJSONObject (0);
            return dreamObj.toString ();
        }
    } catch (JSONException e) {
    }
    return "";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25996562_25997283_12_34
25996562_25999023_3_19
Title: Response authorization with Jersey 
----------------------------------------

public ContainerRequest filter (ContainerRequest req) {
    try (InputStream in = req.getEntityInputStream (); ByteArrayOutputStream out = new ByteArrayOutputStream ()) {
        if (in.available () > 0) {
            StringBuilder content = new StringBuilder ();
            ReaderWriter.writeTo (in, out);
            byte [] entity = out.toByteArray ();
            if (entity.length > 0) {
                content.append (new String (entity)).append ("\n");
                System.out.println (content);
            }
            req.setEntityInputStream (new ByteArrayInputStream (entity));
        }
    } catch (IOException ex) {
    }
    return req;
}
----------------------------------------

public void filter (ContainerRequestContext containerRequestContext, ContainerResponseContext containerResponseContext) throws IOException {
    Object entity = containerResponseContext.getEntity ();
    Class < ? > entityClass = containerResponseContext.getEntityClass ();
    Type entityType = containerResponseContext.getEntityType ();
    String method = containerRequestContext.getMethod ();
    UriInfo uriInfo = containerRequestContext.getUriInfo ();
    String authorizationHeaderValue = containerResponseContext.getHeaderString (HttpHeaders.AUTHORIZATION);
    authorizationHeaderValue = authorizationHeaderValue + " a signature you calculated";
    containerResponseContext.getHeaders ().putSingle (HttpHeaders.AUTHORIZATION, authorizationHeaderValue);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25999185_26000025_13_23
25999185_46502290_12_25
Title: How can I make a copy of object via Reflection API? 
----------------------------------------

private < T > T copyFields (T entity, T newEntity, Class < ? > clazz) throws IllegalAccessException {
    List < Field > fields = new ArrayList < > ();
    for (Field field : clazz.getDeclaredFields ()) {
        fields.add (field);
    }
    for (Field field : fields) {
        field.setAccessible (true);
        field.set (newEntity, field.get (entity));
    }
    return newEntity;
}
----------------------------------------

private void copyFields (Object entity, Object newEntity, Class < ? > clazz) throws IllegalAccessException, InstantiationException {
    List < Field > fields = new ArrayList < > ();
    for (Field field : clazz.getDeclaredFields ()) {
        fields.add (field);
    }
    for (Field field : fields) {
        field.setAccessible (true);
        LOG.debug ("Field name=" + field.getName ());
        LOG.debug ("Field type=" + field.getType ());
        if (! field.getType ().isPrimitive ()) {
            entity = copy (field.getType ().newInstance ());
        } else field.set (newEntity, field.get (entity));

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
25999185_26000025_1_11
25999185_46502290_1_11
Title: How can I make a copy of object via Reflection API? 
----------------------------------------

private < T > T copy (T entity) throws IllegalAccessException, InstantiationException {
    Class < ? > clazz = entity.getClass ();
    T newEntity = (T) entity.getClass ().newInstance ();
    while (clazz != null) {
        copyFields (entity, newEntity, clazz);
        clazz = clazz.getSuperclass ();
    }
    return newEntity;
}
----------------------------------------

private Object copy (Object entity) throws IllegalAccessException, InstantiationException {
    Class < ? > clazz = entity.getClass ();
    LOG.debug ("Clazz=" + clazz);
    Object newEntity = clazz.newInstance ();
    while (clazz != null) {
        copyFields (entity, newEntity, clazz);
        clazz = clazz.getSuperclass ();
    }
    return newEntity;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26004108_26004359_10_30
26004108_26004584_10_26
Title: Enable shortcuts in JTextField 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    JPanel comp = new JPanel ();
    JTextField textField = new JTextField (20);
    String keyCombination = "alt E";
    KeyStroke keyStroke = KeyStroke.getKeyStroke (keyCombination);
    textField.getInputMap ().put (keyStroke, keyCombination);
    textField.getActionMap ().put (keyCombination, new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent e) {
            textField.setText ("ALT+E was pressed");
        }}

    );
    comp.add (textField);
    frame.add (comp);
    frame.setSize (new Dimension (500, 500));
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            }
            NewJFrame frame = new NewJFrame ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26004108_26004359_10_30
26004108_26013518_59_85
Title: Enable shortcuts in JTextField 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    JPanel comp = new JPanel ();
    JTextField textField = new JTextField (20);
    String keyCombination = "alt E";
    KeyStroke keyStroke = KeyStroke.getKeyStroke (keyCombination);
    textField.getInputMap ().put (keyStroke, keyCombination);
    textField.getActionMap ().put (keyCombination, new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent e) {
            textField.setText ("ALT+E was pressed");
        }}

    );
    comp.add (textField);
    frame.add (comp);
    frame.setSize (new Dimension (500, 500));
    frame.setVisible (true);
}
----------------------------------------

public static void main (String args []) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    }
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new NewJFrame ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26004108_26004584_10_26
26004108_26013518_59_85
Title: Enable shortcuts in JTextField 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            }
            NewJFrame frame = new NewJFrame ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String args []) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger (NewJFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    }
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new NewJFrame ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26007668_26007710_1_12
26007668_26007749_9_33
Title: recursive method asking for an integer from 1 to 10 
----------------------------------------

public static int readGoodInput () {
    int value = 0;
    Scanner input = new Scanner (System.in);
    while (value < 1 || value > 10) {
        System.out.println ("Enter a value: ");
        value = input.nextInt ();
    }
    return value;
}
----------------------------------------

public static int readGoodInput () {
    int value;
    Scanner input = new Scanner (System.in);
    System.out.println ();
    System.out.println ("Enter a value: ");
    value = input.nextInt ();
    if (value <= 10 && value >= 1) {
        return value;
    } else {
        readGoodInput ();
    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013085_1_15
26012942_26013300_4_18
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String a []) {
    int [] arr = {1, 2, 2, 3, 4, 5, 5};
    for (int i = 0;
    i < arr.length; i ++) {
        boolean isDistinct = false;
        for (int j = 0;
        j < arr.length; j ++) {
            if (arr [i] == arr [j] && i != j) {
                isDistinct = true;
                break;
            }
        }
        if (! isDistinct) {
            System.out.print (arr [i] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (arr [i]);
    }
    Iterator it = set.iterator ();
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013085_1_15
26012942_26013336_4_19
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String a []) {
    int [] arr = {1, 2, 2, 3, 4, 5, 5};
    for (int i = 0;
    i < arr.length; i ++) {
        boolean isDistinct = false;
        for (int j = 0;
        j < arr.length; j ++) {
            if (arr [i] == arr [j] && i != j) {
                isDistinct = true;
                break;
            }
        }
        if (! isDistinct) {
            System.out.print (arr [i] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Map < Integer, Integer > m = new HashMap < Integer, Integer > ();
    for (int i : arr) {
        if (m.get (i) == null) m.put (i, 1);
        else m.put (i, m.get (i) + 1);

    }
    for (Map.Entry < Integer, Integer > e : m.entrySet ()) {
        if (e.getValue () == 1) System.out.print (e.getKey () + " ");

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013085_1_15
26012942_26013453_8_44
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String a []) {
    int [] arr = {1, 2, 2, 3, 4, 5, 5};
    for (int i = 0;
    i < arr.length; i ++) {
        boolean isDistinct = false;
        for (int j = 0;
        j < arr.length; j ++) {
            if (arr [i] == arr [j] && i != j) {
                isDistinct = true;
                break;
            }
        }
        if (! isDistinct) {
            System.out.print (arr [i] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    Set < Integer > remset = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        if (set.contains (arr [i])) {
            remset.add (arr [i]);
        } else {
            set.add (arr [i]);
        }
    }
    Iterator < Integer > iter = remset.iterator ();
    while (iter.hasNext ()) {
        Integer element = iter.next ();
        if (set.contains (element)) {
            set.remove (element);
        }
    }
    iter = set.iterator ();
    while (iter.hasNext ()) {
        System.out.println (iter.next () + "\t");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013300_4_18
26012942_26013336_4_19
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (arr [i]);
    }
    Iterator it = set.iterator ();
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Map < Integer, Integer > m = new HashMap < Integer, Integer > ();
    for (int i : arr) {
        if (m.get (i) == null) m.put (i, 1);
        else m.put (i, m.get (i) + 1);

    }
    for (Map.Entry < Integer, Integer > e : m.entrySet ()) {
        if (e.getValue () == 1) System.out.print (e.getKey () + " ");

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013300_4_18
26012942_26013453_8_44
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (arr [i]);
    }
    Iterator it = set.iterator ();
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    Set < Integer > remset = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        if (set.contains (arr [i])) {
            remset.add (arr [i]);
        } else {
            set.add (arr [i]);
        }
    }
    Iterator < Integer > iter = remset.iterator ();
    while (iter.hasNext ()) {
        Integer element = iter.next ();
        if (set.contains (element)) {
            set.remove (element);
        }
    }
    iter = set.iterator ();
    while (iter.hasNext ()) {
        System.out.println (iter.next () + "\t");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26012942_26013336_4_19
26012942_26013453_8_44
Title: Count the no. of occurrence and display the most repeated first no. followed by others. for Eg. input: 223331544 output: 32415 
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Map < Integer, Integer > m = new HashMap < Integer, Integer > ();
    for (int i : arr) {
        if (m.get (i) == null) m.put (i, 1);
        else m.put (i, m.get (i) + 1);

    }
    for (Map.Entry < Integer, Integer > e : m.entrySet ()) {
        if (e.getValue () == 1) System.out.print (e.getKey () + " ");

    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {5, 2, 7, 2, 4, 7, 8, 2, 3};
    Set < Integer > set = new HashSet < Integer > ();
    Set < Integer > remset = new HashSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        if (set.contains (arr [i])) {
            remset.add (arr [i]);
        } else {
            set.add (arr [i]);
        }
    }
    Iterator < Integer > iter = remset.iterator ();
    while (iter.hasNext ()) {
        Integer element = iter.next ();
        if (set.contains (element)) {
            set.remove (element);
        }
    }
    iter = set.iterator ();
    while (iter.hasNext ()) {
        System.out.println (iter.next () + "\t");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26013906_26014454_1_14
26013906_26014550_1_11
Title: Spring Error form not displayed 
----------------------------------------

@RequestMapping (value = "/addStudent", method = RequestMethod.POST)
public String addStudent (@ModelAttribute
@Valid
Student student, ModelMap model, BindingResult errors) {
    if (errors.hasErrors ()) {
        List < FieldError > lerr = errors.getFieldErrors ();
        for (FieldError err : lerr) {
        }
    }
    model.addAttribute ("name", student.getName ());
    model.addAttribute ("age", student.getAge ());
    model.addAttribute ("id", student.getId ());
    return "result";
}
----------------------------------------

@RequestMapping (value = "/addStudent", method = RequestMethod.POST)
public String addStudent (@Valid
Student student, BindingResult errors, Model model) {
    if (errors.hasErrors ()) {
        return "student";
    }
    model.addAttribute ("name", student.getName ());
    model.addAttribute ("age", student.getAge ());
    model.addAttribute ("id", student.getId ());
    return "result";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26017055_26017361_1_22
26017055_26017650_1_42
Title: Java counting program 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    System.out.print ("Enter your text: ");
    Scanner input = new Scanner (System.in);
    String str = input.nextLine ();
    int ch = 0;
    int nlines = 0;
    int nwords = 0;
    while (! str.equals (".")) {
        ch += str.length ();
        nlines ++;
        String [] words = str.split (" ");
        nwords += words.length;
        str = input.nextLine ();
    }
    System.out.println ("Number of words :" + nwords);
    System.out.println ("Number ofcharacters: " + ch);
    System.out.println ("Number of lines: " + nlines);
}
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter your text: \n");
    try (Scanner input = new Scanner (System.in)) {
        String str = input.nextLine ();
        int ch = 0;
        int nlines = 0;
        int nwords = 0;
        boolean stopCount = false;
        while (true) {
            if (str.contains (".")) {
                String [] split = str.split (".");
                if (split.length > 1) {
                    str = split [0];
                    break;
                }
                stopCount = true;
            }
            ch += str.replace (" ", "").length ();
            nlines ++;
            String [] words = str.split (" ");
            nwords += words.length;
            if (stopCount) {
                break;
            }
            str = input.nextLine ();
        }
        System.out.println ("Number of words :" + nwords);
        System.out.println ("Number ofcharacters: " + ch);
        System.out.println ("Number of lines: " + nlines);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26027046_26027149_1_10
26027046_26049846_3_20
Title: Java printing out statement from right to left 
----------------------------------------

public static void main (String [] args) {
    int size = 6;
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < i; j ++) System.out.print (" ");

        for (int j = 0;
        j < size - i; j ++) System.out.print ("*");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int r = 0;
    r < 10; r ++) {
        for (int i = 0;
        i < 10; i ++) {
            if (i >= r) {
                System.out.print ("*");
            } else if (i < r) {
                System.out.print (" ");
            }

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26033789_26063065_36_45
26033789_26063065_50_59
Title: "Adding JPanels to JFrame one after another vertically each touches the border horizontally" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    msg = new JPanel (new BorderLayout ());
    msg.setBorder (BorderFactory.createEmptyBorder (3, 3, 3, 3));
    sub = new JLabel ("Sender. . . . Message");
    sub.setBorder (BorderFactory.createLineBorder (Color.red));
    msg.add (sub, BorderLayout.WEST);
    msg.setMaximumSize (new Dimension (Integer.MAX_VALUE, (int) msg.getPreferredSize ().getHeight ()));
    center.add (msg);
    validate ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    msg = new JPanel (new BorderLayout ());
    msg.setBorder (BorderFactory.createEmptyBorder (3, 3, 3, 3));
    sub = new JLabel ("Reciver. . . . Message");
    sub.setBorder (BorderFactory.createLineBorder (Color.black));
    msg.add (sub, BorderLayout.EAST);
    msg.setMaximumSize (new Dimension (Integer.MAX_VALUE, (int) msg.getPreferredSize ().getHeight ()));
    center.add (msg);
    validate ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26034834_26035464_61_74
26034834_26035590_1_13
Title: Display ArrayList data in tree structure in java 
----------------------------------------

public static void displayTree (DTONodeDetail dto, int level) {
    List < DTONodeDetail > childs = selectChildren (dto.getNodeId ());
    String space = "";
    for (int i = 0;
    i < level; i ++) {
        space += "\t";
    }
    System.out.println (space + dto.getNodeName ());
    if (childs.size () > 0) {
        level ++;
    }
    for (DTONodeDetail obj : childs) {
        displayTree (obj, level);
    }
}
----------------------------------------

public static void displayTree (DTONodeDetail dto, int charsBeforeNodename) {
    ArrayList < DTONodeDetail > childs = selectChild (dto.getNodeId ());
    for (int i = 0;
    i <= charsBeforeNodename; i ++) {
        System.out.println ("-");
    }
    System.out.println (dto.getNodeDisplayName ());
    for (DTONodeDetail obj : childs) {
        displayTree (obj, charsBeforeNodename + dto.getNodeDisplayName ().length ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26035562_26060447_39_57
26035562_26103305_148_167
Title: How to Drag and Drop a text file in new tab using swing 
----------------------------------------

public void drop (DropTargetDropEvent e) {
    try {
        e.acceptDrop (DnDConstants.ACTION_COPY_OR_MOVE);
        java.util.List list = (java.util.List) e.getTransferable ().getTransferData (DataFlavor.javaFileListFlavor);
        File file = (File) list.get (0);
        JTextArea newTabTextArea = new JTextArea ();
        DropTarget target = new DropTarget (newTabTextArea, this);
        newTabTextArea.read (new FileReader (file), null);
        newTabTextArea.setCaretPosition (0);
        tabbedPane2.add (newTabTextArea);
        int tabIndex = tabbedPane2.indexOfComponent (newTabTextArea);
        tabbedPane2.setSelectedIndex (tabIndex);
        tabbedPane2.setTitleAt (tabIndex, file.getName ());
    } catch (Exception ex) {
    }
}
----------------------------------------

public void drop (DropTargetDropEvent e) {
    try {
        e.acceptDrop (DnDConstants.ACTION_COPY_OR_MOVE);
        java.util.List list = (java.util.List) e.getTransferable ().getTransferData (DataFlavor.javaFileListFlavor);
        File file = (File) list.get (0);
        OInternalFrame newOInternalFrame = new OInternalFrame (file.getName (), true, true);
        DropTarget target = new DropTarget (newOInternalFrame.textArea, dropListner);
        newOInternalFrame.textArea.read (new FileReader (file), null);
        newOInternalFrame.textArea.setCaretPosition (0);
        tp.add (newOInternalFrame);
        int tabIndex = tp.indexOfComponent (newOInternalFrame);
        tp.setSelectedIndex (tabIndex);
        tp.setTitleAt (tabIndex, file.getName ());
        add (tp);
    } catch (Exception ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26035562_26060447_61_84
26035562_26103305_107_129
Title: How to Drag and Drop a text file in new tab using swing 
----------------------------------------

public static void main (String args []) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger (DragAndDropFile.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger (DragAndDropFile.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger (DragAndDropFile.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger (DragAndDropFile.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    }
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new DragAndDropFile ().setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String args []) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger (OpenDemo.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger (OpenDemo.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger (OpenDemo.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger (OpenDemo.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
    }
    java.awt.EventQueue.invokeLater (new Runnable () {
        public void run () {
            new OpenDemo ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26037831_26037978_1_15
26037831_26037996_1_16
Title: How to leave out a null value in a loop in Java 
----------------------------------------

public String toString () {
    StringBuffer buffer = new StringBuffer ("The artist is called ");
    buffer.append (artist);
    if (genre != null) {
        buffer.append (" who is a ");
        buffer.append (genre);
        buffer.append (" singer");
    }
    buffer.append (" and this song is called ");
    buffer.append (title);
    buffer.append (".\n");
    return buffer.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder builder = new StringBuilder ();
    if (artist != null && ! artist.isEmpty ()) {
        builder.append ("The artist is called : " + artist);
    }
    if (genre != null && ! genre.isEmpty ()) {
        builder.append (" who is a " + genre + " singer");
    }
    if (title != null && ! title.isEmpty ()) {
        builder.append (" and this song is called " + title + ".\n");
    }
    return (builder.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26045076_26048412_15_30
26045076_26059875_4_23
Title: Update Android UI to show random numbers being generated? 
----------------------------------------

public void run () {
    if (textRoll != null) {
        int n = rand.nextInt (100) + 1;
        String roll = String.valueOf (n);
        textRoll.setText ("Random number is " + roll);
        numTimes --;
        if (numTimes > 0) {
            textRoll.postDelayed (this, delayMillis);
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 50; i ++) {
        try {
            Thread.sleep (50);
            final TextView textRoll = (TextView) findViewById (R.id.textview_roll);
            int n;
            Random rand = new Random ();
            n = rand.nextInt (100) + 1;
            final String roll = String.valueOf (n);
            textRoll.post (new Runnable () {
                @Override
                public void run () {
                    textRoll.setText ("Random number is " + roll);
                }}

            );
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26052185_26052370_1_16
26052185_26052387_2_27
Title: Negative number end the program using for loop? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int age = 1;
    System.out.print ("Enter your dog's age in human years: (or a negative number to exit)");
    for (; age >= 0;) {
        age = scan.nextInt ();
        int dogAge = age * 7;
        System.out.println ("Your dog is " + age + " in human years and " + dogAge + " in dog years!");
        if (dogAge >= 150) System.out.println ("Likely story");
        else if (dogAge >= 80 && dogAge < 150) System.out.println ("Hello grand-dog");
        else if (dogAge >= 40 && dogAge < 80) System.out.println ("Boring!");
        else if (dogAge >= 20 && dogAge < 40) System.out.println ("Get a job!");
        else if (dogAge < 20) System.out.println ("Just a pup!");

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter your dog's age in human years: ");
    int age = scan.nextInt ();
    for (; age > 0;) {
        int dogAge = age * 7;
        System.out.println ("Your dog is " + age + " in human years and " + dogAge + " in dog years!");
        System.out.println ("----------------------------");
        if (dogAge >= 150) {
            System.out.println ("Likely story");
        } else if (dogAge >= 80 && dogAge < 150) {
            System.out.println ("Hello grand-dog");
        } else if (dogAge >= 40 && dogAge < 80) {
            System.out.println ("Boring!");
        } else if (dogAge >= 20 && dogAge < 40) {
            System.out.println ("Get a job!");
        } else if (dogAge < 20) {
            System.out.println ("Just a pup!");
        }

        System.out.println ("----------------------------");
        System.out.print ("Enter your dog's age in human years: ");
        age = scan.nextInt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26059239_26059548_1_16
26059239_26060480_22_40
Title: Compare two string values and return its index in java 
----------------------------------------

public static void main (String [] args) {
    String One = "f9 d4 62 aa f9 d4 62 aa 74 10 99 8b";
    String Two = "3c 9c a7 e2 3c 9c a7 e2 b1 58 f9 d4";
    int [] x = convert (One);
    int [] y = convert (Two);
    for (int i = 0;
    i < x.length; i ++) {
        int number = x [i];
        int index = find (number, y);
        if (index > 0) {
            System.out.println ("found (" + (i + 1) + "," + index + ")");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String one = "f9 d4 62 aa f9 d4 62 aa 74 10 99 8b";
    String two = "3c 9c a7 e2 3c 9c a7 e2 b1 58 f9 d4";
    Map < String, List < Integer > > oneAsMap = indexMapOfPairs (one);
    Map < String, List < Integer > > twoAsMap = indexMapOfPairs (two);
    for (Map.Entry < String, List < Integer > > oneEntry : oneAsMap.entrySet ()) {
        String pair = oneEntry.getKey ();
        List < Integer > twoIndices = twoAsMap.get (pair);
        if (twoIndices != null) {
            for (Integer oneIndex : oneEntry.getValue ()) {
                for (Integer twoIndex : twoIndices) {
                    System.out.printf ("(%d, %d)%n", oneIndex, twoIndex);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26059300_37903834_17_24
26059300_37903834_29_36
Title: Chain a series of asynchronous calls 
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/something/else", new Callback () {
        public void onComplete (String data) {
            updateUi (somethingElse, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/yet/another/thing", new Callback () {
        public void onComplete (String data) {
            updateUi (yetAnotherThing, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26059300_37903834_17_24
26059300_37903834_5_12
Title: Chain a series of asynchronous calls 
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/something/else", new Callback () {
        public void onComplete (String data) {
            updateUi (somethingElse, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/something", new Callback () {
        public void onComplete (String data) {
            updateUi (something, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26059300_37903834_29_36
26059300_37903834_5_12
Title: Chain a series of asynchronous calls 
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/yet/another/thing", new Callback () {
        public void onComplete (String data) {
            updateUi (yetAnotherThing, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------

public void run (Void arg, final ResultHandler < Void > resultHandler) {
    get ("/something", new Callback () {
        public void onComplete (String data) {
            updateUi (something, data);
            resultHandler.reportComplete ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26067155_26331749_103_119
26067155_26331749_122_131
Title: Swing timer for display grid 
----------------------------------------

public LifePane run (int updateInterval) {
    if (timer != null) {
        timer.stop ();
        timer = null;
    }
    if (updateInterval > 0) {
        timer = new Timer (updateInterval, new ActionListener () {
            @Override
            public void actionPerformed (ActionEvent e) {
                update ();
                repaint ();
            }}

        );
        timer.start ();
    }
    return this;
}
----------------------------------------

public void run (int width, int height, int updateInterval) {
    JFrame frame = new JFrame ("Life");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLocationByPlatform (true);
    lifePane = new LifePane (width, height).run (updateInterval);
    frame.setContentPane (lifePane);
    frame.setPreferredSize (new Dimension (1024, 800));
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26089597_26089703_15_25
26089597_26089706_1_13
Title: splitting array using recursion java 
----------------------------------------

public static int sumArray3 (int [] array, int start, int end) {
    int results = 0;
    if (start == end) return array [start];

    int mid = (start + end) / 2;
    if (array.length > 0) {
        results += sumArray3 (array, start, mid) + sumArray3 (array, mid + 1, end);
    }
    return results;
}
----------------------------------------

public static int sumArray3 (int [] array, int start, int end) {
    int results = 0;
    int mid = (start + end) / 2;
    if (start < end) {
        results += sumArray3 (array, start, mid) + sumArray3 (array, mid + 1, end);
    } else results = array [start];

    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26092713_26092757_45_65
26092713_26092757_80_93
Title: Java multithreading - try to obtain lock until after some time has passed? 
----------------------------------------

public void run () {
    String name = Thread.currentThread ().getName ();
    System.out.println (name + " started");
    try {
        Thread.sleep (1000);
        synchronized (msg) {
            msg.setMsg (name + " Notify Tread 1");
            msg.notify ();
            msg.setMsg (name + " Notify Tread 2");
            msg.notify ();
            msg.setMsg (name + " Notify Tread 3");
            msg.notify ();
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    String name = Thread.currentThread ().getName ();
    synchronized (msg) {
        try {
            System.out.println (name + " waiting to get notified at time:" + System.currentTimeMillis ());
            msg.wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        System.out.println (name + " waiter thread got notified at time:" + System.currentTimeMillis ());
        System.out.println (name + " processed: " + msg.getMsg ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26101626_26101985_4_12
26101626_26102088_11_20
Title: Reuse code that performs async code and posts back to the UI thread 
----------------------------------------

public void run () {
    final String result = getResult ();
    mUIHandler.post (new Runnable () {
        @Override
        public void run () {
            processResult (result);
        }}

    );
}
----------------------------------------

public void run (final Runnable background, final Runnable ui) {
    mBackgroundThreadHandler.post (new Runnable () {
        @Override
        public void run () {
            background.run ();
            mUIHandler.post (ui);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26119991_26120188_36_46
26119991_26120188_48_188
Title: How to split sql queries using Java 
----------------------------------------

public void runScript (final Reader reader) throws SQLException {
    final boolean originalAutoCommit = this.connection.getAutoCommit ();
    try {
        if (originalAutoCommit != this.autoCommit) {
            this.connection.setAutoCommit (this.autoCommit);
        }
        this.runScript (this.connection, reader);
    } finally {
        this.connection.setAutoCommit (originalAutoCommit);
    }
}
----------------------------------------

private void runScript (final Connection conn, final Reader reader) {
    StringBuffer command = null;
    try {
        final LineNumberReader lineReader = new LineNumberReader (reader);
        String line = null;
        while ((line = lineReader.readLine ()) != null) {
            if (command == null) {
                command = new StringBuffer ();
            }
            String trimmedLine = line.trim ();
            if (trimmedLine.startsWith ("--") || trimmedLine.startsWith ("//") || trimmedLine.startsWith ("#")) {
                out.println (trimmedLine);
                out.flush ();
            } else if (trimmedLine.endsWith (this.delimiter)) {
                final Pattern pattern = Pattern.compile (SqlRunner.DELIMITER_LINE_REGEX);
                final Matcher matcher = pattern.matcher (trimmedLine);
                if (matcher.matches ()) {
                    delimiter = trimmedLine.split (SqlRunner.DELIMITER_LINE_SPLIT_REGEX) [1].trim ();
                    line = lineReader.readLine ();
                    if (line == null) {
                        break;
                    }
                    trimmedLine = line.trim ();
                }
                command.append (line.substring (0, line.lastIndexOf (this.delimiter)));
                command.append (" ");
                Statement stmt = null;
                ResultSet rs = null;
                try {
                    stmt = conn.createStatement ();
                    out.println ();
                    out.println (command);
                    out.flush ();
                    boolean hasResults = false;
                    if (this.stopOnError) {
                        hasResults = stmt.execute (command.toString ());
                    } else {
                        try {
                            stmt.execute (command.toString ());
                        } catch (final SQLException e) {
                            e.fillInStackTrace ();
                            err.println ("Error on command: " + command);
                            err.println (e);
                            err.flush ();
                        }
                    }
                    if (this.autoCommit && ! conn.getAutoCommit ()) {
                        conn.commit ();
                    }
                    rs = stmt.getResultSet ();
                    if (hasResults && rs != null) {
                        final ResultSetMetaData md = rs.getMetaData ();
                        final int cols = md.getColumnCount ();
                        for (int i = 0;
                        i < cols; i ++) {
                            final String name = md.getColumnLabel (i + 1);
                            out.print (name + "\t");
                        }
                        out.println ("");
                        out.println (StringUtils.repeat ("---------", md.getColumnCount ()));
                        out.flush ();
                        while (rs.next ()) {
                            for (int i = 1;
                            i <= cols; i ++) {
                                final String value = rs.getString (i);
                                out.print (value + "\t");
                            }
                            out.println ("");
                        }
                        out.flush ();
                    } else {
                        out.println ("Updated: " + stmt.getUpdateCount ());
                        out.flush ();
                    }
                    command = null;
                } finally {
                    if (rs != null) try {
                        rs.close ();
                    } catch (final Exception e) {
                        err.println ("Failed to close result: " + e.getMessage ());
                        err.flush ();
                    }

                    if (stmt != null) try {
                        stmt.close ();
                    } catch (final Exception e) {
                        err.println ("Failed to close statement: " + e.getMessage ());
                        err.flush ();
                    }

                }
            } else {
                final Pattern pattern = Pattern.compile (SqlRunner.DELIMITER_LINE_REGEX);
                final Matcher matcher = pattern.matcher (trimmedLine);
                if (matcher.matches ()) {
                    delimiter = trimmedLine.split (SqlRunner.DELIMITER_LINE_SPLIT_REGEX) [1].trim ();
                    line = lineReader.readLine ();
                    if (line == null) {
                        break;
                    }
                    trimmedLine = line.trim ();
                }
                command.append (line);
                command.append (" ");
            }

        }
        if (! this.autoCommit) {
            conn.commit ();
        }
    } catch (final SQLException e) {
        e.fillInStackTrace ();
        err.println ("Error on command: " + command);
        err.println (e);
        err.flush ();
    } catch (final IOException e) {
        e.fillInStackTrace ();
        err.println ("Error on command: " + command);
        err.println (e);
        err.flush ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26121246_26121283_3_15
26121246_26121753_1_15
Title: "Loop runs 2 times then Array index out of bounds exception" 
----------------------------------------

public static int [] delete (int [] a, int delValPos) {
    if (delValPos < 0 || delValPos >= a.length) throw new SomeException ();

    int [] newArray = new int [a.length - 1];
    int index = 0;
    for (int i = 0;
    i < a.length; i ++) {
        if (i != delValPos) {
            newArray [index] = a [i];
            index ++;
        }
    }
    return newArray;
}
----------------------------------------

public static int [] delete (int [] a, int delValPos) {
    int delValPos = 0;
    int [] a = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int [] newA = new int [a.length - 1];
    if (a.length > delValPos) {
        for (int i = 0;
        i < newA.length; i ++) {
            if (delValPos < i && delValPos != 0) {
                newA [i] = a [i];
            } else newA [i] = a [i + 1];

        }
    }
    return newA;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26123520_26123744_3_28
26123520_26123912_1_26
Title: Trying to create a program that sums up two items in an array 
----------------------------------------

public static void main (String [] args) {
    String input;
    int number, j = 0;
    int [] arr, arr2;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("How many numbers do you want to enter? ");
    number = keyboard.nextInt ();
    arr = new int [number];
    for (int index = 0;
    index < arr.length; index ++) {
        System.out.print ("Enter number: ");
        arr [index] = keyboard.nextInt ();
    }
    arr2 = new int [arr.length];
    for (int i = arr.length - 1;
    i >= 0; i --) {
        arr2 [j ++] = arr [i];
    }
    for (int i = 0;
    i < (arr.length / 2); i ++) {
        System.out.println ("Adding " + arr [i] + " and " + arr2 [i] + ": ");
        System.out.println (arr [i] + arr2 [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String input;
    int number, j = 0;
    int [] arr, arr2;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("How many numbers do you want to enter?");
    number = keyboard.nextInt ();
    arr = new int [number];
    for (int index = 0;
    index < arr.length; index ++) {
        System.out.print ("Enter number: ");
        arr [index] = keyboard.nextInt ();
    }
    int half = arr.length / 2;
    for (int r = 1;
    r <= half; r ++) {
        System.out.println (arr [r - 1] + arr [arr.length - r]);
    }
    if (arr.length % 2 != 0) {
        System.out.println (arr [half] + arr [half]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26125557_26125685_20_29
26125557_26126874_42_112
Title: Sorting a time intervals 
----------------------------------------

public void sort (int [] As, int [] Bs) {
    A = As;
    B = Bs;
    length = A.length;
    this.helperA = new int [length];
    this.helperB = new int [length];
    mergesort (0, length - 1);
    for (int i = 0;
    i < length; i ++) System.out.println ("(" + A [i] + "," + B [i] + ")");

}
----------------------------------------

public static void sort (int x [], int off, int len, Swapper swapper) {
    if (len < 7) {
        for (int i = off;
        i < len + off; i ++) {
            for (int j = i;
            j > off && x [j - 1] > x [j]; j --) {
                swapper.swap (x, j, j - 1);
            }
        }
        return;
    }
    int m = off + (len>> 1);
    if (len > 7) {
        int l = off;
        int n = off + len - 1;
        if (len > 40) {
            int s = len / 8;
            l = med3 (x, l, l + s, l + 2 * s);
            m = med3 (x, m - s, m, m + s);
            n = med3 (x, n - 2 * s, n - s, n);
        }
        m = med3 (x, l, m, n);
    }
    int v = x [m];
    int a = off, b = a, c = off + len - 1, d = c;
    while (true) {
        while (b <= c && x [b] <= v) {
            if (x [b] == v) {
                swapper.swap (x, a ++, b);
            }
            b ++;
        }
        while (c >= b && x [c] >= v) {
            if (x [c] == v) {
                swapper.swap (x, c, d --);
            }
            c --;
        }
        if (b > c) {
            break;
        }
        swapper.swap (x, b ++, c --);
    }
    int s, n = off + len;
    s = Math.min (a - off, b - a);
    vecswap (x, off, b - s, s, swapper);
    s = Math.min (d - c, n - d - 1);
    vecswap (x, b, n - s, s, swapper);
    if ((s = b - a) > 1) {
        sort (x, off, s, swapper);
    }
    if ((s = d - c) > 1) {
        sort (x, n - s, s, swapper);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26135900_26135970_1_11
26135900_26136126_1_13
Title: Inserting an element into an array in sorted order 
----------------------------------------

public static void insert (int val, int [] arr) {
    for (int i = arr.length - 1;
    i > 0; i --) {
        if (arr [i] == 0) continue;

        arr [i + 1] = arr [i];
        if (arr [i] <= val) {
            arr [i] = val;
            break;
        }
    }
    System.out.println (Arrays.toString (arr));
}
----------------------------------------

public static void insert (int val, int [] arr) {
    int i;
    for (i = 0; i < arr.length - 1; i ++) {
        if (arr [i] > val) break;

    }
    for (int k = arr.length - 2;
    k >= i; k --) {
        arr [k + 1] = arr [k];
    }
    arr [i] = val;
    System.out.println (Arrays.toString (arr));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26140238_26141931_10_21
26140238_39192124_5_30
Title: Calculate e^x without inbuilt functions in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner infinite = new Scanner (System.in);
    System.out.println ("what is the  value of X?");
    double x = infinite.nextDouble ();
    System.out.println ("what is the value of I?");
    int power = infinite.nextInt ();
    System.out.println (Math.exp (power));
    System.out.println ("the final value of series is: " + myCalc (x, power));
}
----------------------------------------

public static void main (String [] args) {
    Fact myexp = new Fact ();
    Scanner input = new Scanner (System.in);
    int n = 1;
    double e = 1, i = 0, x;
    int j = 1;
    System.out.println ("Enter n: ");
    n = input.nextInt ();
    System.out.println ("Enter x: ");
    x = input.nextDouble ();
    while (j <= n) {
        int a = myexp.facto (j);
        double y = Math.pow (x, j) / (double) a;
        i = i + y;
        ++ j;
    }
    e = e + i;
    System.out.println ("e^x= " + e);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26151759_26152915_55_81
26151759_26152915_61_73
Title: JTable selection interval issues with sorted table 
----------------------------------------

public void run () {
    try {
        for (int x = 0;
        x < 1000; x ++) {
            SwingUtilities.invokeLater (new Runnable () {
                public void run () {
                    int value = r.nextInt (1000);
                    int row = r.nextInt (30);
                    int column = r.nextInt (5);
                    System.out.println (value + " : " + row + " : " + column);
                    tableModel.setValueAt (value, row, column);
                    if (! isAdjusting) sorter.sort ();
                    else isModelChanged = true;

                }}

            );
            Thread.sleep (1000);
        }
    } catch (Throwable t) {
        t.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    int value = r.nextInt (1000);
    int row = r.nextInt (30);
    int column = r.nextInt (5);
    System.out.println (value + " : " + row + " : " + column);
    tableModel.setValueAt (value, row, column);
    if (! isAdjusting) sorter.sort ();
    else isModelChanged = true;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26161705_26162692_9_24
26161705_26162977_13_24
Title: How to parse three numbers to a LocalDate using a Locale? 
----------------------------------------

public static void main (String args []) {
    int [] [] dates = {{10, 02, 2014}, {02, 10, 2014}, {2014, 10, 02}};
    Locale [] locales = {Locale.ENGLISH, Locale.FRENCH, Locale.JAPANESE};
    for (int i = 0;
    i < 3; i ++) {
        int [] dateParts = dates [i];
        Locale locale = locales [i];
        String date = String.format ("%02d/%02d/%02d", dateParts [0] % 100, dateParts [1] % 100, dateParts [2] % 100);
        System.out.printf ("Locale : %s, Str Date : %s,", locale, date);
        DateTimeFormatter df = new DateTimeFormatterBuilder ().append (DateTimeFormatter.ofLocalizedDate (FormatStyle.SHORT)).toFormatter (locale);
        System.out.printf (" Parsed Date : %s\n", LocalDate.from (df.parse (date)));
    }
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    Locale enLocale = Locale.ENGLISH;
    Locale nlLocale = new Locale ("nl");
    List < String > enInput = Arrays.asList ("10", "2", "2014");
    List < String > nlInput = Arrays.asList ("2", "10", "2014");
    Map < String, Integer > enPositionMap = getPositionMap (enLocale, enInput);
    Map < String, Integer > nlPositionMap = getPositionMap (nlLocale, nlInput);
    System.out.println ("EN date " + LocalDate.of (enPositionMap.get ("y"), enPositionMap.get ("m"), enPositionMap.get ("d")));
    System.out.println ("NL date " + LocalDate.of (nlPositionMap.get ("y"), nlPositionMap.get ("m"), nlPositionMap.get ("d")));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165722_3_33
26165570_26165749_1_22
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 7;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 9;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 2;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j <= i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165722_3_33
26165570_26165930_3_13
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 7;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] ar) {
    int rows = 10;
    ReverseDiamond diamond = new ReverseDiamond ();
    for (int i = 0;
    i < rows; i ++) diamond.printLine (rows, i);

    for (int i = rows - 2;
    i >= 0; i --) diamond.printLine (rows, i);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165722_3_33
26165570_26166368_2_20
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 7;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print (SPACE);
        for (int j = 0;
        j < 10 - i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int totalStars = 9;
    int rows = 9;
    for (int r = 0, stars = - 1, gap = totalStars;
    r < rows; r ++) {
        stars += (r <= rows / 2) ? 2 : - 2;
        gap = totalStars - stars;
        printChars (' ', gap);
        printChars ('*', stars);
        printChars (' ', gap);
        int gap2 = stars + 1;
        int stars2 = gap + 1;
        printChars (' ', gap2);
        printChars ('*', stars2);
        printChars (' ', gap2);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165749_1_22
26165570_26165930_3_13
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] args) {
    for (int i = 9;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 2;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j <= i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] ar) {
    int rows = 10;
    ReverseDiamond diamond = new ReverseDiamond ();
    for (int i = 0;
    i < rows; i ++) diamond.printLine (rows, i);

    for (int i = rows - 2;
    i >= 0; i --) diamond.printLine (rows, i);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165749_1_22
26165570_26166368_2_20
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] args) {
    for (int i = 9;
    i > 0; i -= 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j < i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
    for (int i = 2;
    i < 10; i += 2) {
        for (int j = 0;
        j < 9 - i / 2; j ++) System.out.print (" ");

        for (int j = 0;
        j <= i; j ++) System.out.print ("*");

        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int totalStars = 9;
    int rows = 9;
    for (int r = 0, stars = - 1, gap = totalStars;
    r < rows; r ++) {
        stars += (r <= rows / 2) ? 2 : - 2;
        gap = totalStars - stars;
        printChars (' ', gap);
        printChars ('*', stars);
        printChars (' ', gap);
        int gap2 = stars + 1;
        int stars2 = gap + 1;
        printChars (' ', gap2);
        printChars ('*', stars2);
        printChars (' ', gap2);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26165570_26165930_3_13
26165570_26166368_2_20
Title: I need help writing a program that prints out two shapes on one line using nested loops 
----------------------------------------

public static void main (String [] ar) {
    int rows = 10;
    ReverseDiamond diamond = new ReverseDiamond ();
    for (int i = 0;
    i < rows; i ++) diamond.printLine (rows, i);

    for (int i = rows - 2;
    i >= 0; i --) diamond.printLine (rows, i);

}
----------------------------------------

public static void main (String [] args) {
    int totalStars = 9;
    int rows = 9;
    for (int r = 0, stars = - 1, gap = totalStars;
    r < rows; r ++) {
        stars += (r <= rows / 2) ? 2 : - 2;
        gap = totalStars - stars;
        printChars (' ', gap);
        printChars ('*', stars);
        printChars (' ', gap);
        int gap2 = stars + 1;
        int stars2 = gap + 1;
        printChars (' ', gap2);
        printChars ('*', stars2);
        printChars (' ', gap2);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26167056_26167139_1_21
26167056_26167334_6_24
Title: How can I get this program to print out the numbers the user entered? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    ArrayList < Integer > numbers = new ArrayList < Integer > ();
    System.out.print ("Please enter integer values (-1 to to display numbers & sum): ");
    int i = input.nextInt ();
    int j = 0;
    while (i != - 1) {
        numbers.add (i);
        j += i;
        i = input.nextInt ();
    }
    System.out.println ("Entered Numbers: ");
    for (int a = 0;
    a < numbers.size (); a ++) {
        System.out.print (" " + numbers.get (a));
    }
    System.out.println ("The Sum: " + j);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Please enter integer values (-1 to to display numbers & sum): ");
    int i = input.nextInt ();
    int j = 0;
    String numbers = "";
    while (i != - 1) {
        j += i;
        numbers = numbers + i + " ";
        i = input.nextInt ();
    }
    System.out.println ("Entered Numbers: " + numbers);
    System.out.println ("The Sum: " + j);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168762_3_18
26168701_26168818_1_19
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder even = new StringBuilder ();
    StringBuilder odd = new StringBuilder ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.append (" " + e);
        else odd.append (" " + e);

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even.toString ());
    System.out.print ("\nOdd numbers between 50 and 100: " + odd.toString ());
}
----------------------------------------

public static void main (String [] args) {
    StringBuilder evenString = new StringBuilder ("Even numbers between 50 and 100: ");
    StringBuilder oddString = new StringBuilder ("Odd numbers between 50 and 100: ");
    int e = 50;
    while (e <= 100) {
        if ((e % 2) == 0) {
            evenString.append (" " + e);
        } else {
            oddString.append (" " + e);
        }
        e ++;
    }
    System.out.println (evenString);
    System.out.println (oddString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168762_3_18
26168701_26168894_3_18
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder even = new StringBuilder ();
    StringBuilder odd = new StringBuilder ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.append (" " + e);
        else odd.append (" " + e);

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even.toString ());
    System.out.print ("\nOdd numbers between 50 and 100: " + odd.toString ());
}
----------------------------------------

public static void main (String [] args) {
    List < String > even = new ArrayList < String > ();
    List < String > odd = new ArrayList < String > ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.add (String.valueOf (e));
        else odd.add (String.valueOf (e));

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even);
    System.out.print ("\nOdd numbers between 50 and 100: " + odd);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168762_3_18
26168701_26168895_1_15
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder even = new StringBuilder ();
    StringBuilder odd = new StringBuilder ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.append (" " + e);
        else odd.append (" " + e);

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even.toString ());
    System.out.print ("\nOdd numbers between 50 and 100: " + odd.toString ());
}
----------------------------------------

public static void main (String [] args) {
    int i = 0;
    System.out.print ("Even numbers between 50 and 100: ");
    while (i <= 50) {
        if (i == 26) {
            System.out.print ("\nOdd numbers between 50 and 100: ");
        }
        if (i <= 25) {
            System.out.print (" " + (2 * i + 50));
        } else {
            System.out.print (" " + (2 * (i - 25) + 49));
        }
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168762_3_18
26168701_29118578_3_25
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder even = new StringBuilder ();
    StringBuilder odd = new StringBuilder ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.append (" " + e);
        else odd.append (" " + e);

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even.toString ());
    System.out.print ("\nOdd numbers between 50 and 100: " + odd.toString ());
}
----------------------------------------

public static void main (String [] args) {
    int e = 0;
    while (1) {
        if (e == 0) {
            System.out.print ("Even numbers between 50 and 100:");
            e = 50;
        } else if (e == 102) {
            System.out.print ("\nOdd numbers between 50 and 100:");
            e = 51;
        } else if (e == 101) {
            System.out.print ("\n");
            break;
        }

        System.out.print (" " + e);
        e += 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168818_1_19
26168701_26168894_3_18
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder evenString = new StringBuilder ("Even numbers between 50 and 100: ");
    StringBuilder oddString = new StringBuilder ("Odd numbers between 50 and 100: ");
    int e = 50;
    while (e <= 100) {
        if ((e % 2) == 0) {
            evenString.append (" " + e);
        } else {
            oddString.append (" " + e);
        }
        e ++;
    }
    System.out.println (evenString);
    System.out.println (oddString);
}
----------------------------------------

public static void main (String [] args) {
    List < String > even = new ArrayList < String > ();
    List < String > odd = new ArrayList < String > ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.add (String.valueOf (e));
        else odd.add (String.valueOf (e));

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even);
    System.out.print ("\nOdd numbers between 50 and 100: " + odd);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168818_1_19
26168701_26168895_1_15
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder evenString = new StringBuilder ("Even numbers between 50 and 100: ");
    StringBuilder oddString = new StringBuilder ("Odd numbers between 50 and 100: ");
    int e = 50;
    while (e <= 100) {
        if ((e % 2) == 0) {
            evenString.append (" " + e);
        } else {
            oddString.append (" " + e);
        }
        e ++;
    }
    System.out.println (evenString);
    System.out.println (oddString);
}
----------------------------------------

public static void main (String [] args) {
    int i = 0;
    System.out.print ("Even numbers between 50 and 100: ");
    while (i <= 50) {
        if (i == 26) {
            System.out.print ("\nOdd numbers between 50 and 100: ");
        }
        if (i <= 25) {
            System.out.print (" " + (2 * i + 50));
        } else {
            System.out.print (" " + (2 * (i - 25) + 49));
        }
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168818_1_19
26168701_29118578_3_25
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    StringBuilder evenString = new StringBuilder ("Even numbers between 50 and 100: ");
    StringBuilder oddString = new StringBuilder ("Odd numbers between 50 and 100: ");
    int e = 50;
    while (e <= 100) {
        if ((e % 2) == 0) {
            evenString.append (" " + e);
        } else {
            oddString.append (" " + e);
        }
        e ++;
    }
    System.out.println (evenString);
    System.out.println (oddString);
}
----------------------------------------

public static void main (String [] args) {
    int e = 0;
    while (1) {
        if (e == 0) {
            System.out.print ("Even numbers between 50 and 100:");
            e = 50;
        } else if (e == 102) {
            System.out.print ("\nOdd numbers between 50 and 100:");
            e = 51;
        } else if (e == 101) {
            System.out.print ("\n");
            break;
        }

        System.out.print (" " + e);
        e += 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168894_3_18
26168701_26168895_1_15
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    List < String > even = new ArrayList < String > ();
    List < String > odd = new ArrayList < String > ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.add (String.valueOf (e));
        else odd.add (String.valueOf (e));

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even);
    System.out.print ("\nOdd numbers between 50 and 100: " + odd);
}
----------------------------------------

public static void main (String [] args) {
    int i = 0;
    System.out.print ("Even numbers between 50 and 100: ");
    while (i <= 50) {
        if (i == 26) {
            System.out.print ("\nOdd numbers between 50 and 100: ");
        }
        if (i <= 25) {
            System.out.print (" " + (2 * i + 50));
        } else {
            System.out.print (" " + (2 * (i - 25) + 49));
        }
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168894_3_18
26168701_29118578_3_25
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    List < String > even = new ArrayList < String > ();
    List < String > odd = new ArrayList < String > ();
    int e = 50;
    while (e <= 100) {
        if (e % 2 == 0) even.add (String.valueOf (e));
        else odd.add (String.valueOf (e));

        e ++;
    }
    System.out.print ("Even numbers between 50 and 100: " + even);
    System.out.print ("\nOdd numbers between 50 and 100: " + odd);
}
----------------------------------------

public static void main (String [] args) {
    int e = 0;
    while (1) {
        if (e == 0) {
            System.out.print ("Even numbers between 50 and 100:");
            e = 50;
        } else if (e == 102) {
            System.out.print ("\nOdd numbers between 50 and 100:");
            e = 51;
        } else if (e == 101) {
            System.out.print ("\n");
            break;
        }

        System.out.print (" " + e);
        e += 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26168701_26168895_1_15
26168701_29118578_3_25
Title: How can I reduce this code to use only one while loop? 
----------------------------------------

public static void main (String [] args) {
    int i = 0;
    System.out.print ("Even numbers between 50 and 100: ");
    while (i <= 50) {
        if (i == 26) {
            System.out.print ("\nOdd numbers between 50 and 100: ");
        }
        if (i <= 25) {
            System.out.print (" " + (2 * i + 50));
        } else {
            System.out.print (" " + (2 * (i - 25) + 49));
        }
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int e = 0;
    while (1) {
        if (e == 0) {
            System.out.print ("Even numbers between 50 and 100:");
            e = 50;
        } else if (e == 102) {
            System.out.print ("\nOdd numbers between 50 and 100:");
            e = 51;
        } else if (e == 101) {
            System.out.print ("\n");
            break;
        }

        System.out.print (" " + e);
        e += 2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26190980_26191002_1_25
26190980_40722792_1_22
Title: i want to print all armstrong number between 1 to 1000 in a textbox using awt or swing but i only get last value by my code .So plc help me 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    StringBuilder s = new StringBuilder ();
    for (int n = 0;
    n < 10000; n ++) {
        int sum = 0;
        int number = n;
        int original = number;
        while (number > 0) {
            int r = number % 10;
            sum += r * r * r;
            number = number / 10;
        }
        if (sum == original) {
            s.append (original + " ");
        }
    }
    tf1.setText (stringBuilder.toString ());
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String s1 = tf.getText ();
    int n1 = Integer.parseInt (s1);
    for (int n = 0;
    n < 10000; n ++) {
        int sum = 0;
        int number = n;
        int original = number;
        while (number > 0) {
            int r = number % 10;
            sum += r * r * r;
            number = number / 10;
        }
        if (sum == original) {
            tf1.append (String.valueOf (original [i] + " "));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26191773_26192038_3_11
26191773_26222122_86_107
Title: What things need to keep in Mind while developing multithread Javafx application? 
----------------------------------------

protected Task < String > createTask () {
    return new Task < String > () {
        @Override
        protected String call () throws Exception {
            return "";
        }}

    ;
}
----------------------------------------

private Task < Void > createTask (AtomicInteger threadCount, ListView < String > target) {
    return new Task < Void > () {
        @Override
        public Void call () throws Exception {
            int count = threadCount.incrementAndGet ();
            AtomicBoolean pending = new AtomicBoolean (false);
            BlockingQueue < String > messages = new LinkedBlockingQueue < > ();
            for (int i = 0;
            i < NUM_ITERATIONS; i ++) {
                messages.add ("Thread number: " + count + "\tLoop counter: " + i);
                if (pending.compareAndSet (false, true)) {
                    Platform.runLater (() -> {
                        pending.set (false);
                        messages.drainTo (target.getItems ());
                        target.scrollTo (target.getItems ().size () - 1);
                    });
                }
            }
            return null;
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26193772_26193864_16_28
26193772_26193976_23_31
Title: program to remove vowels from a user input and diplay the remaining alphabets in alphabetic order in java 
----------------------------------------

private static String removeVowels (String s) {
    String finalString = "";
    for (int i = 0;
    i < s.length (); i ++) {
        if (! isVowel (Character.toLowerCase (s.charAt (i)))) {
            finalString = finalString + s.charAt (i);
        }
    }
    finalString = ascending (finalString);
    return finalString;
}
----------------------------------------

private static String removeVowels (String s) {
    String finalString = "";
    for (int i = 0;
    i < s.length (); i ++) {
        if (! isVowel (Character.toLowerCase (s.charAt (i)))) {
            finalString = finalString + s.charAt (i);
        }
    }
    return finalString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26193772_26193864_36_45
26193772_26193976_33_40
Title: program to remove vowels from a user input and diplay the remaining alphabets in alphabetic order in java 
----------------------------------------

private static boolean isVowel (char c) {
    String vowels = "aeiou";
    for (int i = 0;
    i < 5; i ++) {
        if (c == vowels.charAt (i)) return true;

    }
    return false;
}
----------------------------------------

private static boolean isVowel (char c) {
    String vowels = "aeiou";
    for (int i = 0;
    i < 5; i ++) {
        if (c == vowels.charAt (i)) return true;

    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26193772_26193864_6_15
26193772_26193976_8_21
Title: program to remove vowels from a user input and diplay the remaining alphabets in alphabetic order in java 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Sample Program to Remove Vowels from a given string \n");
    System.out.println ("Enter a line : ");
    String s = in.readLine ();
    System.out.println ("\n" + "String with Vowels removed : ");
    String r = removeVowels (s);
    System.out.println (r);
}
----------------------------------------

public static void main (String [] args) {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    try {
        System.out.println ("Sample Program to Remove Vowels");
        System.out.println ("from a given string \n");
        System.out.println ("Enter a words : ");
        String s = in.readLine ();
        System.out.println ("\n" + "String with Vowels removed : ");
        String r = removeVowels (s);
        System.out.println (r);
    } catch (IOException ed) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26196992_26197035_10_21
26196992_26197371_5_12
Title: How can I fill an array with input from the user? 
----------------------------------------

public static void main (String [] args) {
    for (int count = 0;
    count < product.length; count ++) {
        String input = JOptionPane.showInputDialog ("How many " + product [count] + "would     you like to purchase?");
        q [count] = Integer.parseInt (input);
    }
    System.out.println (Arrays.toString (q));
    System.out.println (calcTotal ());
}
----------------------------------------

public static void main (String [] a) {
    System.out.println ("How many numbers you want to enter: ");
    int n = scan.nextInt ();
    int [] array = new int [n];
    System.out.println ("Now enter " + n + " numbers: ");
    for (int i = 0;
    i < n; i ++) array [i] = scan.nextInt ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26197443_26203060_50_58
26197443_26203060_73_89
Title: Position label within TextButton? 
----------------------------------------

public LabelButton (String text, TextButtonStyle style) {
    super ();
    setStyle (style);
    this.style = style;
    label = new Label (text, new LabelStyle (style.font, style.fontColor));
    label.setAlignment (Align.top);
    add (label).expand ().fill ();
    setSize (getPrefWidth (), getPrefHeight ());
}
----------------------------------------

public LabelButton (String text, TextButtonStyle style, boolean alignament, float xLabel, float yLabel, float widthButton, float heightButton) {
    super ();
    setStyle (style);
    this.style = style;
    label = new Label (text, new LabelStyle (style.font, style.fontColor));
    if (alignament == true) {
        label.setAlignment (Align.top);
        add (label).expand ().fill ();
    } else {
        this.heightButton = heightButton;
        this.widthButton = widthButton;
        add (label).padRight (widthButton - (xLabel * 2)).padBottom (- heightButton + (yLabel * 2));
    }
    setSize (getPrefWidth (), getPrefHeight ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26198438_26198550_6_31
26198438_26199447_2_16
Title: How to populate a 2d char array with the alphabet 
----------------------------------------

public static void main (String [] args) {
    char [] c = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
    List < String > s = new ArrayList < > (9);
    for (int i = 0;
    i < c.length; i += 3) {
        try {
            s.add ("" + c [i] + c [i + 1] + c [i + 2]);
        } catch (Exception e) {
            try {
                s.add ("" + c [i] + c [i + 1]);
            } catch (Exception e1) {
                try {
                    s.add ("" + c [i]);
                } catch (Exception e2) {
                }
            }
        }
    }
    System.out.println (s);
}
----------------------------------------

public static void main (String args []) {
    char alphGrid [] [] = genArray ();
    for (int i = 0;
    i < 26; i ++) {
        for (int j = 0;
        j < 26; j ++) {
            System.out.print (alphGrid [i] [j]);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26215498_26345799_1_10
26215498_26383555_1_25
Title: Send back to MainActivity after logged in to Facebook 
----------------------------------------

private void onSessionStateChange (Session session, SessionState state, Exception exception) {
    if (state.isOpened ()) {
        Log.i (TAG, "Logged in...");
        Intent intent = new INTENT (context, NewActivity.class);
        context.startActivity (intent);
        finish ();
    } else if (state.isClosed ()) {
        Log.i (TAG, "Logged out...");
    }

}
----------------------------------------

private void onSessionStateChange (Session session, SessionState state, Exception exception) {
    if (state.isOpened ()) {
        Log.i (TAG, "Logged in...");
        Request.newMeRequest (session, new Request.GraphUserCallback () {
            @Override
            public void onCompleted (GraphUser user, Response response) {
                if (user != null) {
                    Intent pit = new Intent (getApplicationContext (), HomeActivity.class);
                    pit.putExtra ("Fb_id", user.getId ());
                    pit.putExtra ("user_name", user.getName ());
                    startActivity (pit);
                }
            }}

        ).executeAsync ();
    } else if (state.isClosed ()) {
        Log.i (TAG, "Logged out...");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26215945_26268106_238_250
26215945_26268106_253_271
Title: jSSC Not Sending Data to Arduino 
----------------------------------------

public byte [] readBytes () {
    if (inBuffer == readOffset) {
        return null;
    }
    synchronized (buffer) {
        byte [] ret = new byte [inBuffer - readOffset];
        System.arraycopy (buffer, readOffset, ret, 0, ret.length);
        inBuffer = 0;
        readOffset = 0;
        return ret;
    }
}
----------------------------------------

public int readBytes (byte [] dest) {
    if (inBuffer == readOffset) {
        return 0;
    }
    synchronized (buffer) {
        int toCopy = inBuffer - readOffset;
        if (dest.length < toCopy) {
            toCopy = dest.length;
        }
        System.arraycopy (buffer, readOffset, dest, 0, toCopy);
        readOffset += toCopy;
        if (inBuffer == readOffset) {
            inBuffer = 0;
            readOffset = 0;
        }
        return toCopy;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26219597_26219664_1_27
26219597_26219735_104_116
Title: Use different colors in same graphics (Java) 
----------------------------------------

protected void paintComponent (Graphics g) {
    int R = (int) (Math.random () * 256);
    int G = (int) (Math.random () * 256);
    int B = (int) (Math.random () * 256);
    Color color = new Color (R, G, B);
    g.setColor (color);
    int ovalA = (int) (Math.random () * 400);
    int ovalB = (int) (Math.random () * 300);
    int ovalC = (int) (Math.random () * (400 - ovalA));
    int ovalD = (int) (Math.random () * (300 - ovalB));
    g.fillOval (ovalA, ovalB, ovalC, ovalD);
    R = (int) (Math.random () * 256);
    G = (int) (Math.random () * 256);
    B = (int) (Math.random () * 256);
    color = new Color (R, G, B);
    int rectA = (int) (Math.random () * 300);
    int rectB = (int) (Math.random () * 400);
    int rectC = (int) (Math.random () * (400 - rectA));
    int rectD = (int) (Math.random () * (300 - rectB));
    super.paintComponent (g);
    g.setColor (color);
    g.fillRect (rectA, rectB, rectC, rectD);
}
----------------------------------------

protected void paintComponent (Graphics gr) {
    super.paintComponent (gr);
    Graphics2D g = (Graphics2D) gr;
    for (int i = 0;
    i < shapes.size (); i ++) {
        Shape shape = shapes.get (i);
        Color color = colors.get (i);
        g.setColor (color);
        g.fill (shape);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26220896_26221242_50_58
26220896_34286733_15_23
Title: Showing tooltips in JavaFx at specific row position in the TableView 
----------------------------------------

public void updateItem (Person person, boolean empty) {
    super.updateItem (person, empty);
    if (person == null) {
        setTooltip (null);
    } else {
        tooltip.setText (person.getFirstName () + " " + person.getLastName ());
        setTooltip (tooltip);
    }
}
----------------------------------------

protected void updateItem (T item, boolean empty) {
    super.updateItem (item, empty);
    if (item == null) {
        setTooltip (null);
    } else {
        Tooltip tooltip = new Tooltip (toolTipStringFunction.apply (item));
        setTooltip (tooltip);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_27277531_4_31
26228432_32003561_6_30
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < Integer > ();
    int count = 1;
    stack.push (H [0]);
    for (int i = 1;
    i < H.length; i ++) {
        if (stack.empty ()) {
            stack.push (H [i]);
            count ++;
        }
        if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        }
        while (H [i] < stack.peek ()) {
            stack.pop ();
            if (stack.empty ()) {
                stack.push (H [i]);
                count ++;
            } else if (H [i] > stack.peek ()) {
                stack.push (H [i]);
                count ++;
            }

        }
    }
    return count;
}
----------------------------------------

public int solution (int [] H) {
    int len = H.length;
    Stack < Integer > stack = new Stack < > (len);
    int blockCounter = 0;
    for (int i = 0;
    i < len; ++ i) {
        int element = H [i];
        if (stack.isEmpty ()) {
            stack.push (element);
            ++ blockCounter;
        } else {
            while (! stack.isEmpty () && stack.peek () > element) {
                stack.pop ();
            }
            if (! stack.isEmpty () && stack.peek () == element) {
                continue;
            } else {
                stack.push (element);
                ++ blockCounter;
            }
        }
    }
    return blockCounter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_27277531_4_31
26228432_34985090_1_31
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < Integer > ();
    int count = 1;
    stack.push (H [0]);
    for (int i = 1;
    i < H.length; i ++) {
        if (stack.empty ()) {
            stack.push (H [i]);
            count ++;
        }
        if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        }
        while (H [i] < stack.peek ()) {
            stack.pop ();
            if (stack.empty ()) {
                stack.push (H [i]);
                count ++;
            } else if (H [i] > stack.peek ()) {
                stack.push (H [i]);
                count ++;
            }

        }
    }
    return count;
}
----------------------------------------

public static int solution (int [] H) {
    Stack < Integer > s = new Stack < Integer > ();
    int count = 1;
    for (int i = 0;
    i < H.length - 1; i ++) {
        if (H [i + 1] > H [i]) {
            s.push (H [i]);
            count ++;
        } else if (H [i + 1] < H [i]) {
            if (s.empty ()) {
                s.push (H [i]);
                count ++;
            } else if (H [i + 1] > s.peek ()) {
                count ++;
            } else if (H [i + 1] < s.peek ()) {
                while (! s.empty () && H [i + 1] < s.peek ()) {
                    s.pop ();
                }
                if (s.empty ()) {
                    count ++;
                } else if (H [i + 1] > s.peek ()) {
                    count ++;
                }

            } else {
                s.pop ();
            }

        }

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_27277531_4_31
26228432_51630057_1_40
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < Integer > ();
    int count = 1;
    stack.push (H [0]);
    for (int i = 1;
    i < H.length; i ++) {
        if (stack.empty ()) {
            stack.push (H [i]);
            count ++;
        }
        if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        }
        while (H [i] < stack.peek ()) {
            stack.pop ();
            if (stack.empty ()) {
                stack.push (H [i]);
                count ++;
            } else if (H [i] > stack.peek ()) {
                stack.push (H [i]);
                count ++;
            }

        }
    }
    return count;
}
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < > ();
    stack.push (H [0]);
    int count = 1;
    int N = H.length;
    for (int i = 1;
    i < N; i ++) {
        if (H [i] == stack.peek ()) {
            continue;
        } else if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        } else {
            while (! stack.isEmpty () && H [i] < stack.peek ()) {
                stack.pop ();
            }
            if (! stack.isEmpty () && H [i] == stack.peek ()) {
                continue;
            }
            stack.push (H [i]);
            count ++;
        }

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_32003561_6_30
26228432_34985090_1_31
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public int solution (int [] H) {
    int len = H.length;
    Stack < Integer > stack = new Stack < > (len);
    int blockCounter = 0;
    for (int i = 0;
    i < len; ++ i) {
        int element = H [i];
        if (stack.isEmpty ()) {
            stack.push (element);
            ++ blockCounter;
        } else {
            while (! stack.isEmpty () && stack.peek () > element) {
                stack.pop ();
            }
            if (! stack.isEmpty () && stack.peek () == element) {
                continue;
            } else {
                stack.push (element);
                ++ blockCounter;
            }
        }
    }
    return blockCounter;
}
----------------------------------------

public static int solution (int [] H) {
    Stack < Integer > s = new Stack < Integer > ();
    int count = 1;
    for (int i = 0;
    i < H.length - 1; i ++) {
        if (H [i + 1] > H [i]) {
            s.push (H [i]);
            count ++;
        } else if (H [i + 1] < H [i]) {
            if (s.empty ()) {
                s.push (H [i]);
                count ++;
            } else if (H [i + 1] > s.peek ()) {
                count ++;
            } else if (H [i + 1] < s.peek ()) {
                while (! s.empty () && H [i + 1] < s.peek ()) {
                    s.pop ();
                }
                if (s.empty ()) {
                    count ++;
                } else if (H [i + 1] > s.peek ()) {
                    count ++;
                }

            } else {
                s.pop ();
            }

        }

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_32003561_6_30
26228432_51630057_1_40
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public int solution (int [] H) {
    int len = H.length;
    Stack < Integer > stack = new Stack < > (len);
    int blockCounter = 0;
    for (int i = 0;
    i < len; ++ i) {
        int element = H [i];
        if (stack.isEmpty ()) {
            stack.push (element);
            ++ blockCounter;
        } else {
            while (! stack.isEmpty () && stack.peek () > element) {
                stack.pop ();
            }
            if (! stack.isEmpty () && stack.peek () == element) {
                continue;
            } else {
                stack.push (element);
                ++ blockCounter;
            }
        }
    }
    return blockCounter;
}
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < > ();
    stack.push (H [0]);
    int count = 1;
    int N = H.length;
    for (int i = 1;
    i < N; i ++) {
        if (H [i] == stack.peek ()) {
            continue;
        } else if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        } else {
            while (! stack.isEmpty () && H [i] < stack.peek ()) {
                stack.pop ();
            }
            if (! stack.isEmpty () && H [i] == stack.peek ()) {
                continue;
            }
            stack.push (H [i]);
            count ++;
        }

    }
    return count;
}
----------------------------------------
