$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_23_33
21829071_22862422_26_40
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 5; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
    th.stop ();
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("y is finished.  Interrupting th.");
    th.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_23_33
21829071_22862422_6_23
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 5; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
    th.stop ();
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("Thread th was interrupted.");
            System.out.println ("y must have finished");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_3_50
21829071_21829333_5_47
Title: How to stop one thread after completion of other? 
----------------------------------------

public static void main (String [] args) {
    final Thread th = new Thread () {
        public void run () {
            for (int i = 1;
            i <= 10; i ++) {
                System.out.println ("run:" + i);
                try {
                    Thread.sleep (500);
                } catch (InterruptedException e) {
                }
            }
        }}

    ;
    Thread y = new Thread () {
        public void run () {
            for (int i = 1;
            i < 5; i ++) {
                System.out.println ("stop:" + i);
                try {
                    Thread.sleep (500);
                } catch (InterruptedException e) {
                }
            }
            th.stop ();
        }}

    ;
    th.start ();
    y.start ();
    for (int i = 0;
    i < 2; i ++) {
        System.out.println ("main:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("main completed");
}
----------------------------------------

public static void main (String [] args) {
    Thread th = new Thread () {
        public void run () {
            for (int i = 1;
            i <= 18; i ++) {
                if (! isYCompleted) {
                    System.out.println ("run:" + i);
                    try {
                        Thread.sleep (1000);
                    } catch (InterruptedException e) {
                    }
                } else {
                    break;
                }
            }
        }}

    ;
    Thread y = new Thread () {
        public void run () {
            for (int i = 1;
            i < 10; i ++) {
                System.out.println ("stop:" + i);
                try {
                    Thread.sleep (1000);
                } catch (InterruptedException e) {
                }
                if (i == 9) {
                    isYCompleted = true;
                }
            }
        }}

    ;
    th.start ();
    y.start ();
    for (int i = 0;
    i < 5; i ++) {
        System.out.println ("main:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("Main completed");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_9_20
21829071_21829333_22_34
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
        if (i == 9) {
            isYCompleted = true;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_9_20
21829071_21829333_7_18
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        if (! isYCompleted) {
            System.out.println ("run:" + i);
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
            }
        } else {
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_9_20
21829071_22862422_26_40
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("y is finished.  Interrupting th.");
    th.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829207_9_20
21829071_22862422_6_23
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 10; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("Thread th was interrupted.");
            System.out.println ("y must have finished");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829333_22_34
21829071_21829333_7_18
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
        if (i == 9) {
            isYCompleted = true;
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        if (! isYCompleted) {
            System.out.println ("run:" + i);
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
            }
        } else {
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829333_22_34
21829071_22862422_26_40
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
        if (i == 9) {
            isYCompleted = true;
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("y is finished.  Interrupting th.");
    th.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829333_22_34
21829071_22862422_6_23
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
        if (i == 9) {
            isYCompleted = true;
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("Thread th was interrupted.");
            System.out.println ("y must have finished");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829333_7_18
21829071_22862422_26_40
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        if (! isYCompleted) {
            System.out.println ("run:" + i);
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
            }
        } else {
            break;
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("y is finished.  Interrupting th.");
    th.interrupt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_21829333_7_18
21829071_22862422_6_23
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        if (! isYCompleted) {
            System.out.println ("run:" + i);
            try {
                Thread.sleep (1000);
            } catch (InterruptedException e) {
            }
        } else {
            break;
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("Thread th was interrupted.");
            System.out.println ("y must have finished");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21829071_22862422_26_40
21829071_22862422_6_23
Title: How to stop one thread after completion of other? 
----------------------------------------

public void run () {
    for (int i = 1;
    i < 10; i ++) {
        System.out.println ("stop:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    System.out.println ("y is finished.  Interrupting th.");
    th.interrupt ();
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 18; i ++) {
        System.out.println ("run:" + i);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            System.out.println ("Thread th was interrupted.");
            System.out.println ("y must have finished");
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21836891_21837152_1_13
21836891_21837242_1_10
Title: I can't figure out my error in my PrimeGenerator 
----------------------------------------

public static boolean isPrime (int n) {
    if (n % 2 == 0) {
        return false;
    }
    double root = Math.sqrt (n);
    for (int i = 3;
    i < root; i += 2) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int n) {
    int root = (int) Math.sqrt (n);
    for (int i = 2;
    i <= root; i ++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21837205_21838497_17_33
21837205_21892882_18_36
Title: Algorithm for creating permutation of arrays of integers 
----------------------------------------

public static void main (final String [] args) {
    final int nItems = 4, nGroups = 3, groupDelta = 10;
    PermutateNItemsSelectedMTimes p = new PermutateNItemsSelectedMTimes (nItems, nGroups, groupDelta);
    int selectedGroups [] = p.getNextSelection ();
    while (selectedGroups != null) {
        StringBuffer sb = new StringBuffer ();
        for (int index = 0;
        index < selectedGroups.length; index ++) {
            sb.append (String.format ("%2d", selectedGroups [index]));
            if (index < (selectedGroups.length - 1)) {
                sb.append (", ");
            }
        }
        System.out.println ("{" + sb.toString () + "}");
        p.generateNextSelection ();
        selectedGroups = p.getNextSelection ();
    }
}
----------------------------------------

public static void main (final String [] args) {
    int [] [] input = {{1, 11, 21}, {2, 12, 22}, {3, 13, 23}};
    int [] [] output = new int [100] [100];
    final int questionCat = 3, setNo = 3, groupDelta = 10;
    GenerateTestSets p = new GenerateTestSets (questionCat, setNo, groupDelta);
    int selectedGroups [] = p.getNextSelection ();
    while (selectedGroups != null) {
        for (int index = 0;
        index < selectedGroups.length; index ++) {
            output [index] [selectedGroups [index]] = input [index] [selectedGroups [index]];
            System.out.print ("\t" + (selectedGroups [index] + 1));
        }
        p.generateNextSelection ();
        selectedGroups = p.getNextSelection ();
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21837205_21838497_35_49
21837205_21892882_38_52
Title: Algorithm for creating permutation of arrays of integers 
----------------------------------------

private void generateNextSelection () {
    boolean carry = false;
    for (int index = 0;
    index < nItems; index ++) {
        selectedGroups [index] ++;
        carry = selectedGroups [index] > nGroups;
        if (carry) {
            selectedGroups [index] = 1;
        } else {
            break;
        }
    }
    if (carry) {
        selectedGroups = null;
    }
}
----------------------------------------

private void generateNextSelection () {
    boolean carry = false;
    for (int index = 0;
    index < questionCat; index ++) {
        selectedGroups [index] ++;
        carry = selectedGroups [index] > setNo;
        if (carry) {
            selectedGroups [index] = 1;
        } else {
            break;
        }
    }
    if (carry) {
        selectedGroups = null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21837205_21838497_51_62
21837205_21892882_54_65
Title: Algorithm for creating permutation of arrays of integers 
----------------------------------------

public int [] getNextSelection () {
    int [] cpy;
    if (selectedGroups == null) {
        cpy = null;
    } else {
        cpy = new int [selectedGroups.length];
        for (int index = 0;
        index < selectedGroups.length; index ++) {
            cpy [index] = index + 1 + ((selectedGroups [index] - 1) * groupDelta);
        }
    }
    return cpy;
}
----------------------------------------

public int [] getNextSelection () {
    int [] cpy;
    if (selectedGroups == null) {
        cpy = null;
    } else {
        cpy = new int [selectedGroups.length];
        for (int index = 0;
        index < selectedGroups.length; index ++) {
            cpy [index] = ((selectedGroups [index] - 1));
        }
    }
    return cpy;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21840818_21841246_5_47
21840818_21841515_6_57
Title: How can I count the frequency of words without using Collections? 
----------------------------------------

public static void main (String [] args) {
    String text = "Bear Car Bear Cat Car Dog Bear";
    StringTokenizer str = new StringTokenizer (text);
    String word [] = new String [10];
    String unique [] = new String [10];
    int wordSize = 0;
    while (str.hasMoreTokens ()) {
        String w = str.nextToken ();
        word [wordSize] = w;
        System.out.println (wordSize + ": " + word [wordSize]);
        wordSize ++;
    }
    System.out.println ("---Frequency---");
    int uniqueWordSize = 0;
    for (int i = 0;
    i < wordSize; i ++) {
        boolean found = false;
        for (int j = 0;
        j < uniqueWordSize; j ++) {
            if (word [i].equals (unique [j])) {
                found = true;
                break;
            }
        }
        if (! found) {
            unique [uniqueWordSize ++] = word [i];
        }
    }
    int [] measure = new int [10];
    for (int i = 0;
    i < uniqueWordSize; i ++) {
        for (int j = 0;
        j < wordSize; j ++) {
            if (unique [i].equals (word [j])) {
                measure [i] ++;
            }
        }
    }
    for (int i = 0;
    i < uniqueWordSize; i ++) {
        System.out.println (unique [i] + " : " + measure [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String text = "Bear Car Bear Cat Car Dog Bear";
    StringTokenizer str = new StringTokenizer (text);
    String word [] = new String [10];
    String unique [] = new String [10];
    String w;
    int count = - 1;
    while (str.hasMoreTokens ()) {
        count ++;
        w = str.nextToken ();
        word [count] = w;
        System.out.println (count + ": " + word [count]);
    }
    System.out.println ("---Frequency---");
    for (int i = 0;
    i < 7; i ++) {
        if ((! Arrays.asList (unique).contains (word [i]))) {
            unique [i] = word [i];
        }
    }
    int [] measure = new int [10];
    for (int z = 0;
    z < 7; z ++) {
        if (unique [z] != null) {
            for (int j = 0;
            j < 7; j ++) {
                if (unique [z].equals (word [j])) {
                    measure [z] += 1;
                }
            }
            System.out.println (unique [z] + " : " + measure [z]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21842105_21842157_1_14
21842105_21842196_1_12
Title: How to repeat each of the individual letters in a piece of text? in Java 
----------------------------------------

public static void repeatLetters () {
    String text = "dean";
    int n = 3;
    StringBuilder repeat = new StringBuilder ();
    for (int i = 0;
    i < text.length (); i ++) {
        for (int j = 0;
        j < n; j ++) repeat.append (text.charAt (i));

    }
    System.out.println (repeat);
}
----------------------------------------

public static void repeatLetters () {
    String text = "dean";
    int n = 3;
    StringBuilder repeat = new StringBuilder ();
    for (int i = 0;
    i < text.length (); i ++) {
        for (int j = 0;
        j < n; j ++) {
            repeat.append (text.charAt (i));
        }
    }
    System.out.println (repeat);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21843666_21843803_6_22
21843666_21843935_8_24
Title: Insertion sort debug 
----------------------------------------

public static void SortNumericalOrdernsert (String [] bn, int [] bq) {
    for (int i = 1;
    i < bq.length; i ++) {
        int next = bq [i];
        String y = bn [i];
        int j = i;
        while (j > 0 && bq [j - 1] > next) {
            bn [j] = bn [j - 1];
            bq [j] = bq [j - 1];
            j --;
        }
        bq [j] = next;
        bn [j] = y;
    }
}
----------------------------------------

public static void SortNumericalOrdernsert (String [] bn, int [] bq) {
    for (int i = 1;
    i < bq.length; i ++) {
        int next = bq [i];
        String y = bn [i];
        int j = i;
        while (j > 0 && bq [j - 1] > next) {
            bn [j] = bn [j - 1];
            bq [j] = bq [j - 1];
            j --;
        }
        bq [j] = next;
        bn [j] = y;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_104_112
21847411_35247072_95_106
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

private void addSubtreeToCheckingStateTracking (DefaultMutableTreeNode node) {
    TreeNode [] path = node.getPath ();
    TreePath tp = new TreePath (path);
    CheckedNode cn = new CheckedNode (false, node.getChildCount () > 0, false);
    nodesCheckingState.put (tp, cn);
    for (int i = 0;
    i < node.getChildCount (); i ++) {
        addSubtreeToCheckingStateTracking ((DefaultMutableTreeNode) tp.pathByAddingChild (node.getChildAt (i)).getLastPathComponent ());
    }
}
----------------------------------------

private void addSubtreeToCheckingStateTracking (DefaultMutableTreeNode node) {
    TreeNode [] path = node.getPath ();
    TreePath tp = new TreePath (path);
    CheckedNode cn = new CheckedNode (false, node.getChildCount () > 0, false);
    nodesCheckingState.put (tp, cn);
    if (isExpanded (tp)) {
        for (int i = 0;
        i < node.getChildCount (); i ++) {
            DefaultMutableTreeNode treeNode = getTreeNode (tp.pathByAddingChild (node.getChildAt (i)));
            addSubtreeToCheckingStateTracking (treeNode);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_145_191
21847411_35247072_150_222
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

public JCheckBoxTree () {
    super ();
    this.setToggleClickCount (0);
    CheckBoxCellRenderer cellRenderer = new CheckBoxCellRenderer ();
    this.setCellRenderer (cellRenderer);
    DefaultTreeSelectionModel dtsm = new DefaultTreeSelectionModel () {
        private static final long serialVersionUID = - 8190634240451667286L;
        public void setSelectionPath (TreePath path) {
        } public void addSelectionPath (TreePath path) {
        } public void removeSelectionPath (TreePath path) {
        } public void setSelectionPaths (TreePath [] pPaths) {
        }}

    ;
    this.addMouseListener (new MouseListener () {
        public void mouseClicked (MouseEvent arg0) {
            TreePath tp = selfPointer.getPathForLocation (arg0.getX (), arg0.getY ());
            if (tp == null) {
                return;
            }
            boolean checkMode = ! nodesCheckingState.get (tp).isSelected;
            checkSubTree (tp, checkMode);
            updatePredecessorsWithCheckMode (tp, checkMode);
            fireCheckChangeEvent (new CheckChangeEvent (new Object ()));
            selfPointer.repaint ();
        } public void mouseEntered (MouseEvent arg0) {
        } public void mouseExited (MouseEvent arg0) {
        } public void mousePressed (MouseEvent arg0) {
        } public void mouseReleased (MouseEvent arg0) {
        }}

    );
    this.setSelectionModel (dtsm);
}
----------------------------------------

public JCheckBoxTree (TreeModel treeModel, TreeWillExpandListener tweListener, TreeCellRenderer treeCellRenderer) {
    super (treeModel);
    this.setToggleClickCount (0);
    if (treeCellRenderer == null) treeCellRenderer = new CheckBoxCellRenderer ();

    this.setCellRenderer (treeCellRenderer);
    DefaultTreeSelectionModel dtsm = new DefaultTreeSelectionModel () {
        public void setSelectionPath (TreePath path) {
        } public void addSelectionPath (TreePath path) {
        } public void removeSelectionPath (TreePath path) {
        } public void setSelectionPaths (TreePath [] pPaths) {
        }}

    ;
    this.addMouseListener (new MouseListener () {
        public void mouseClicked (MouseEvent arg0) {
            TreePath tp = selfPointer.getPathForLocation (arg0.getX (), arg0.getY ());
            if (tp == null) {
                return;
            }
            boolean checkMode = ! getCheckMode (tp);
            checkSubTree (tp, checkMode, false);
            updatePredecessorsWithCheckMode (tp);
            fireCheckChangeEvent (new CheckChangeEvent (tp));
            selfPointer.repaint ();
        } public void mouseEntered (MouseEvent arg0) {
        } public void mouseExited (MouseEvent arg0) {
        } public void mousePressed (MouseEvent arg0) {
        } public void mouseReleased (MouseEvent arg0) {
        }}

    );
    if (tweListener == null) tweListener = new TreeWillExpandListener () {
        @Override
        public void treeWillExpand (TreeExpansionEvent event) throws ExpandVetoException {
            TreePath expandingNodePath = event.getPath ();
            boolean checkMode = getCheckMode (expandingNodePath);
            checkSubTree (expandingNodePath, checkMode, true);
        }@Override
        public void treeWillCollapse (TreeExpansionEvent event) throws ExpandVetoException {
        }}

    ;

    this.addTreeWillExpandListener (tweListener);
    this.setSelectionModel (dtsm);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_168_180
21847411_35247072_178_192
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

public void mouseClicked (MouseEvent arg0) {
    TreePath tp = selfPointer.getPathForLocation (arg0.getX (), arg0.getY ());
    if (tp == null) {
        return;
    }
    boolean checkMode = ! nodesCheckingState.get (tp).isSelected;
    checkSubTree (tp, checkMode);
    updatePredecessorsWithCheckMode (tp, checkMode);
    fireCheckChangeEvent (new CheckChangeEvent (new Object ()));
    selfPointer.repaint ();
}
----------------------------------------

public void mouseClicked (MouseEvent arg0) {
    TreePath tp = selfPointer.getPathForLocation (arg0.getX (), arg0.getY ());
    if (tp == null) {
        return;
    }
    boolean checkMode = ! getCheckMode (tp);
    checkSubTree (tp, checkMode, false);
    updatePredecessorsWithCheckMode (tp);
    fireCheckChangeEvent (new CheckChangeEvent (tp));
    selfPointer.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_194_224
21847411_35247072_262_287
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

protected void updatePredecessorsWithCheckMode (TreePath tp, boolean check) {
    TreePath parentPath = tp.getParentPath ();
    if (parentPath == null) {
        return;
    }
    CheckedNode parentCheckedNode = nodesCheckingState.get (parentPath);
    DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) parentPath.getLastPathComponent ();
    parentCheckedNode.allChildrenSelected = true;
    parentCheckedNode.isSelected = false;
    for (int i = 0;
    i < parentNode.getChildCount (); i ++) {
        TreePath childPath = parentPath.pathByAddingChild (parentNode.getChildAt (i));
        CheckedNode childCheckedNode = nodesCheckingState.get (childPath);
        if (! childCheckedNode.allChildrenSelected) {
            parentCheckedNode.allChildrenSelected = false;
        }
        if (childCheckedNode.isSelected) {
            parentCheckedNode.isSelected = true;
        }
    }
    if (parentCheckedNode.isSelected) {
        checkedPaths.add (parentPath);
    } else {
        checkedPaths.remove (parentPath);
    }
    updatePredecessorsWithCheckMode (parentPath, check);
}
----------------------------------------

protected void updatePredecessorsWithCheckMode (TreePath tp) {
    TreePath parentPath = tp.getParentPath ();
    if (parentPath == null) {
        return;
    }
    CheckedNode parentCheckedNode = getCheckedNode (parentPath);
    DefaultMutableTreeNode parentNode = getTreeNode (parentPath);
    parentCheckedNode.allChildrenSelected = true;
    parentCheckedNode.isSelected = false;
    for (int i = 0;
    i < parentNode.getChildCount (); i ++) {
        TreePath childPath = parentPath.pathByAddingChild (parentNode.getChildAt (i));
        CheckedNode childCheckedNode = getCheckedNode (childPath);
        if (! childCheckedNode.allChildrenSelected) {
            parentCheckedNode.allChildrenSelected = false;
        }
        if (childCheckedNode.isSelected) {
            parentCheckedNode.isSelected = true;
        }
    }
    updatePredecessorsWithCheckMode (parentPath);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_227_240
21847411_35247072_291_301
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

protected void checkSubTree (TreePath tp, boolean check) {
    CheckedNode cn = nodesCheckingState.get (tp);
    cn.isSelected = check;
    DefaultMutableTreeNode node = (DefaultMutableTreeNode) tp.getLastPathComponent ();
    for (int i = 0;
    i < node.getChildCount (); i ++) {
        checkSubTree (tp.pathByAddingChild (node.getChildAt (i)), check);
    }
    cn.allChildrenSelected = check;
    if (check) {
        checkedPaths.add (tp);
    } else {
        checkedPaths.remove (tp);
    }
}
----------------------------------------

protected void checkSubTree (TreePath tp, boolean check, boolean goOneLevelDown) {
    CheckedNode cn = getCheckedNode (tp);
    cn.isSelected = check;
    DefaultMutableTreeNode node = getTreeNode (tp);
    if (isExpanded (tp) || goOneLevelDown) {
        for (int i = 0;
        i < node.getChildCount (); i ++) {
            checkSubTree (tp.pathByAddingChild (node.getChildAt (i)), check, false);
        }
    }
    cn.allChildrenSelected = check;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21847411_21851201_67_74
21847411_35247072_64_71
Title: Java Swing: Need a good quality developed JTree with checkboxes 
----------------------------------------

void fireCheckChangeEvent (CheckChangeEvent evt) {
    Object [] listeners = listenerList.getListenerList ();
    for (int i = 0;
    i < listeners.length; i ++) {
        if (listeners [i] == CheckChangeEventListener.class) {
            ((CheckChangeEventListener) listeners [i + 1]).checkStateChanged (evt);
        }
    }
}
----------------------------------------

void fireCheckChangeEvent (CheckChangeEvent evt) {
    Object [] listeners = listenerList.getListenerList ();
    for (int i = 0;
    i < listeners.length; i ++) {
        if (listeners [i] == CheckChangeEventListener.class) {
            ((CheckChangeEventListener) listeners [i + 1]).checkStateChanged (evt);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21855431_21855813_23_39
21855431_21855841_5_26
Title: Java simple paint code not working 
----------------------------------------

public MyPanel () {
    addMouseMotionListener (new MouseMotionAdapter () {
        @Override
        public void mouseDragged (MouseEvent event) {
            if (image != null) {
                Graphics g = image.getGraphics ();
                g.setColor (Color.BLACK);
                g.fillOval (event.getX (), event.getY (), 22, 22);
                g.dispose ();
                repaint ();
            }
        }}

    );
}
----------------------------------------

public MyPanel () {
    addMouseMotionListener (new MouseMotionAdapter () {
        public void mouseDragged (MouseEvent event) {
            x2 = event.getX ();
            y2 = event.getY ();
            repaint ();
        }}

    );
    addMouseListener (new MouseListener () {
        @Override
        public void mousePressed (MouseEvent e) {
            x1 = e.getX ();
            y1 = e.getY ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21856105_21856436_29_52
21856105_21857107_42_82
Title: How to find the largest element locator in the case of a duplicate value 
----------------------------------------

public static List < Location > locateLargest (int rows, int columns, double [] [] a) {
    double largest = a [0] [0];
    for (int i = 0;
    i < rows; i ++) {
        for (int j = 0;
        j < columns; j ++) {
            if (largest < a [i] [j]) {
                largest = a [i] [j];
            }
        }
    }
    List < Location > locations = new ArrayList < Location > ();
    for (int i = 0;
    i < rows; i ++) {
        for (int j = 0;
        j < columns; j ++) {
            if (largest = a [i] [j]) {
                locations.add (new Location (i, j));
            }
        }
    }
    return locations;
}
----------------------------------------

public static ArrayList [] locateLargest (int rows, int columns, double [] [] a) {
    ArrayList [] location = new ArrayList [2];
    location [0] = new ArrayList ();
    location [1] = new ArrayList ();
    double largest = a [0] [0];
    for (int i = 0;
    i < rows; i ++) {
        for (int j = 0;
        j < columns; j ++) {
            if (largest < a [i] [j]) {
                location [0].clear ();
                location [1].clear ();
                largest = a [i] [j];
                Integer I = new Integer (i);
                Integer J = new Integer (j);
                location [0].add (I);
                location [1].add (J);
            } else if (largest == a [i] [j]) {
                largest = a [i] [j];
                Integer I = new Integer (i);
                Integer J = new Integer (j);
                location [0].add (I);
                location [1].add (J);
            }

        }
    }
    return location;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21856105_21856436_4_25
21856105_21857107_6_38
Title: How to find the largest element locator in the case of a duplicate value 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number of rows and columns of the array: ");
    int rows = input.nextInt ();
    int columns = input.nextInt ();
    double [] [] a = new double [rows] [columns];
    System.out.println ("Enter the array: ");
    for (int i = 0;
    i < 3; i ++) {
        for (int j = 0;
        j < 3; j ++) a [i] [j] = input.nextDouble ();

    }
    int [] location = locateLargest (rows, columns, a);
    System.out.println ("The location of the largest element is at (" + location [0] + ", " + location [1] + ")");
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number of rows and columns of the array: ");
    int rows = input.nextInt ();
    int columns = input.nextInt ();
    double [] [] a = new double [rows] [columns];
    System.out.println ("Enter the array: ");
    for (int i = 0;
    i < 3; i ++) {
        for (int j = 0;
        j < 3; j ++) a [i] [j] = input.nextDouble ();

    }
    ArrayList [] location = locateLargest (rows, columns, a);
    if (location [0].size () == 1) {
        System.out.println ("The location of the largest element is at (" + location [0].get (0) + ", " + location [1].get (0) + ")");
    } else if (location [0].size () > 1) {
        for (int i = 0;
        i < location [0].size (); i ++) {
            System.out.println ("The location of the largest element number " + i + ": (" + location [0].get (i) + ", " + location [1].get (i) + ")");
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21856596_21856790_1_10
21856596_21857439_1_15
Title: returning true with an occurance of a letter in a string? 
----------------------------------------

public static boolean contains (char c, String s) {
    boolean to_return = true;
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) != c) {
            to_return = false;
        }
    }
    return to_return;
}
----------------------------------------

public static boolean contains (char c, String s) {
    if (s == null) return false;

    if (s.equals ("")) return false;

    int size = s.length ();
    for (int i = 0;
    i < size; i ++) {
        if (s.charAt (i) == c) return true;

    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21857063_21857143_29_44
21857063_21857358_1_10
Title: Non-static variable/method cannot be refrenced from static context! What is the prob? 
----------------------------------------

public static void main (String [] args) {
    double a = 1;
    double b = 1;
    double c = 1;
    Assignment obj = new Assignment (a, b, c);
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the values to compute the pythagoras    theorem");
    obj.a = in.nextDouble ();
    obj.b = in.nextDouble ();
    obj.c = hypot (a, b);
    System.out.println ("The hypot is" + c);
}
----------------------------------------

public static void main (String [] args) {
    Assignment1 obj = new Assignment1 ();
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the values to compute the pythagoras    theorem");
    obj.a = in.nextDouble ();
    obj.b = in.nextDouble ();
    obj.c = hypot (a, b);
    System.out.println ("The hypot is" + c);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_21865948_13_25
21865470_30322723_3_36
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) {
    int imax = 5;
    for (int i = 1;
    i < imax + 1; i ++) {
        for (int j = 0;
        j < imax + 1 - i; j ++) {
            System.out.print (" ");
        }
        rec (i, i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.print ("Enter no ");
    int n = in.nextInt ();
    for (int i = 1;
    i <= n; i ++) {
        int l = n - i;
        while (l != 0) {
            System.out.print (" ");
            l --;
        }
        for (int j = i;
        j >= 2; j --) {
            System.out.print (j);
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_21865948_13_25
21865470_34961693_7_24
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) {
    int imax = 5;
    for (int i = 1;
    i < imax + 1; i ++) {
        for (int j = 0;
        j < imax + 1 - i; j ++) {
            System.out.print (" ");
        }
        rec (i, i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int n;
    InputStreamReader io = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (io);
    System.out.println ("Enter the height in the number of lines vertically");
    n = Integer.parseInt (br.readLine ());
    for (int i = 1;
    i <= n; i ++) {
        int k = i;
        for (int j = 1;
        j <= 2 * i - 1; j ++) {
            System.out.print (k);
            if (j >= (((2 * i - 1) / 2) + 1)) k ++;
            else if (j < (2 * i - 1) / 2 + 1) k --;

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_21865948_13_25
21865470_51522926_4_22
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) {
    int imax = 5;
    for (int i = 1;
    i < imax + 1; i ++) {
        for (int j = 0;
        j < imax + 1 - i; j ++) {
            System.out.print (" ");
        }
        rec (i, i);
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, j, k, l, n, a;
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    a = n;
    for (i = 1; i <= n; i ++) {
        for (j = a; j > 1; j --) {
            System.out.print (" ");
        }
        for (k = i; k != 0; k --) {
            System.out.print (k);
        }
        a --;
        for (l = 2; l <= i; l ++) {
            System.out.print (l);
        }
        System.out.println (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_30322723_3_36
21865470_34961693_7_24
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.print ("Enter no ");
    int n = in.nextInt ();
    for (int i = 1;
    i <= n; i ++) {
        int l = n - i;
        while (l != 0) {
            System.out.print (" ");
            l --;
        }
        for (int j = i;
        j >= 2; j --) {
            System.out.print (j);
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int n;
    InputStreamReader io = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (io);
    System.out.println ("Enter the height in the number of lines vertically");
    n = Integer.parseInt (br.readLine ());
    for (int i = 1;
    i <= n; i ++) {
        int k = i;
        for (int j = 1;
        j <= 2 * i - 1; j ++) {
            System.out.print (k);
            if (j >= (((2 * i - 1) / 2) + 1)) k ++;
            else if (j < (2 * i - 1) / 2 + 1) k --;

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_30322723_3_36
21865470_51522926_4_22
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.print ("Enter no ");
    int n = in.nextInt ();
    for (int i = 1;
    i <= n; i ++) {
        int l = n - i;
        while (l != 0) {
            System.out.print (" ");
            l --;
        }
        for (int j = i;
        j >= 2; j --) {
            System.out.print (j);
        }
        for (int k = 1;
        k <= i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, j, k, l, n, a;
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    a = n;
    for (i = 1; i <= n; i ++) {
        for (j = a; j > 1; j --) {
            System.out.print (" ");
        }
        for (k = i; k != 0; k --) {
            System.out.print (k);
        }
        a --;
        for (l = 2; l <= i; l ++) {
            System.out.print (l);
        }
        System.out.println (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21865470_34961693_7_24
21865470_51522926_4_22
Title: A program that prints the following pattern 
----------------------------------------

public static void main (String [] args) throws IOException {
    int n;
    InputStreamReader io = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (io);
    System.out.println ("Enter the height in the number of lines vertically");
    n = Integer.parseInt (br.readLine ());
    for (int i = 1;
    i <= n; i ++) {
        int k = i;
        for (int j = 1;
        j <= 2 * i - 1; j ++) {
            System.out.print (k);
            if (j >= (((2 * i - 1) / 2) + 1)) k ++;
            else if (j < (2 * i - 1) / 2 + 1) k --;

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int i, j, k, l, n, a;
    Scanner sc = new Scanner (System.in);
    n = sc.nextInt ();
    a = n;
    for (i = 1; i <= n; i ++) {
        for (j = a; j > 1; j --) {
            System.out.print (" ");
        }
        for (k = i; k != 0; k --) {
            System.out.print (k);
        }
        a --;
        for (l = 2; l <= i; l ++) {
            System.out.print (l);
        }
        System.out.println (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21867283_21867339_111_134
21867283_21867339_80_92
Title: Method keeps window from closing 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    if (colorListIndex == maxCount) {
        for (MyColor myColor : MyColor.values ()) {
            simonPanel.setMyColorPressed (myColor, false);
        }
        ((Timer) evt.getSource ()).stop ();
        return;
    }
    if (sliceCount == 0) {
        MyColor myColor = myColorList.get (colorListIndex);
        simonPanel.setMyColorPressed (myColor, true);
        sliceCount ++;
    } else if (sliceCount < TIME_SLICES - 1) {
        sliceCount ++;
        return;
    } else if (sliceCount == TIME_SLICES - 1) {
        sliceCount = 0;
        MyColor myColor = myColorList.get (colorListIndex);
        simonPanel.setMyColorPressed (myColor, false);
        colorListIndex ++;
        return;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    List < MyColor > colorList = new ArrayList < MyColor > ();
    for (int i = 0;
    i < random.nextInt (MAX_RANDOM_COLORS - MIN_RANDOM_COLORS) + MIN_RANDOM_COLORS; i ++) {
        int colorIndex = random.nextInt (MyColor.values ().length);
        MyColor myColor = MyColor.values () [colorIndex];
        colorList.add (myColor);
    }
    ActionListener timerListener = new TimerListener (simonPanel, colorList);
    Timer timer = new Timer (TIMER_DELAY / TIME_SLICES, timerListener);
    timer.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21869693_21874561_118_130
21869693_21874561_132_163
Title: Anti-aliased JLabel 
----------------------------------------

private BufferedImage getImage (int index) {
    JLabel input = labels [index];
    int w = input.getWidth ();
    int h = input.getHeight ();
    BufferedImage temp = new BufferedImage (w, h, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g = temp.createGraphics ();
    input.paintAll (g);
    g.dispose ();
    return temp;
}
----------------------------------------

private BufferedImage getImage (String text) {
    int w = 5;
    int h = 5;
    BufferedImage temp = new BufferedImage (w, h, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g = temp.createGraphics ();
    FontRenderContext frc = g.getFontRenderContext ();
    Font f = labels [1].getFont ();
    GlyphVector gv = f.createGlyphVector (frc, text);
    Shape s1 = gv.getOutline ();
    Shape s = gv.getOutline (- s1.getBounds ().x, - s1.getBounds ().y);
    Rectangle textBounds = s.getBounds ();
    temp = new BufferedImage (textBounds.width, textBounds.height, BufferedImage.TYPE_INT_ARGB);
    g = temp.createGraphics ();
    g.setFont (f);
    g.setRenderingHint (RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    g.setColor (Color.BLACK);
    g.drawString (text, 0, textBounds.height);
    g.dispose ();
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21869978_21870076_4_33
21869978_21870204_1_29
Title: Java Arrays: From Txt File to an Array 
----------------------------------------

public static void main (String [] args) {
    Scanner inFile = null;
    try {
        inFile = new Scanner (new File ("prg402a.dat.txt"));
    } catch (FileNotFoundException e) {
        System.out.println ("File not found!");
        System.exit (0);
    }
    int [] ids = new int [100];
    int [] scores = new int [100];
    int count = 0;
    while (inFile.hasNextInt ()) {
        ids [count] = inFile.nextInt ();
        scores [count] = inFile.nextInt ();
        count ++;
    }
    for (int index = 0;
    index < count; index ++) {
        System.out.println (ids [index] + " " + scores [index]);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader reader = null;
    try {
        reader = new BufferedReader (new FileReader (new File ("directory", "data.txt")));
    } catch (FileNotFoundException e) {
        System.out.println ("File not found!");
        System.exit (0);
    }
    List < Integer > idsList = new ArrayList < > ();
    List < Integer > scoresList = new ArrayList < > ();
    String line = reader.readLine ();
    while (line != null) {
        String [] data = line.split (" ");
        idsList.add (Integer.parseInt (data [0]));
        scoresList.add (Integer.parseInt (data [1]));
        line = reader.readLine ();
    }
    reader.close ();
    Integer [] idsArray = (Integer []) idsList.toArray (new Integer [idsList.size ()]);
    Integer [] scoresArray = (Integer []) scoresList.toArray (new Integer [idsList.size ()]);
    for (int index = 0;
    index < idsArray.length; index ++) {
        System.out.println (idsArray [index] + " " + scoresArray [index]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21870607_21870754_157_166
21870607_21870754_65_88
Title: Java test for MD5 using a file 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser chooser = new JFileChooser ();
    chooser.setCurrentDirectory (new File (System.getProperty ("user.dir")));
    chooser.setFileSelectionMode (JFileChooser.FILES_ONLY);
    switch (chooser.showOpenDialog (FilePane.this)) {
        case JFileChooser.APPROVE_OPTION :
            setFile (chooser.getSelectedFile ());
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    File source = sourcePane.getFile ();
    try (BufferedReader br = new BufferedReader (new FileReader (source))) {
        char [] buffer = new char [1024];
        StringBuilder sb = new StringBuilder (1024);
        int bytesRead = - 1;
        while ((bytesRead = br.read (buffer)) != - 1) {
            sb.append (buffer, 0, bytesRead);
        }
        String encrypted = encryptionMD5 (sb.toString ());
        File enrypt = new File (source.getPath () + ".enrypted");
        try (BufferedWriter bw = new BufferedWriter (new FileWriter (enrypt))) {
            bw.write (encrypted);
        } catch (Exception exp) {
            exp.printStackTrace ();
        }
        encryptPane.setFile (enrypt);
    } catch (Exception exp) {
        exp.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21871053_21871156_8_36
21871053_23998199_7_28
Title: Counting number of occurrences in java array 
----------------------------------------

public static void main (final String [] args) {
    final Random rnd = new Random ();
    final Map < Integer, AtomicInteger > counter = new HashMap < Integer, AtomicInteger > () {
        @Override
        public AtomicInteger get (final Object key) {
            if (! super.containsKey (key)) {
                super.put ((Integer) key, new AtomicInteger (rnd.nextInt (100)));
            }
            return super.get (key);
        }}

    ;
    final AtomicInteger nextInt = new AtomicInteger (rnd.nextInt (100));
    while (nextInt.get () != 0) {
        counter.get (nextInt.get ()).incrementAndGet ();
        if (counter.size () > 1000) {
            nextInt.set (0);
        } else {
            nextInt.set (rnd.nextInt (100));
        }
    }
    for (final Integer i : counter.keySet ()) {
        final AtomicInteger integer = counter.get (i);
        final String format = integer.get () > 1 ? "%d occurs %s times\n" : "%d occurs %s time\n";
        System.out.format (format, i, integer);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] number = new int [100];
    System.out.print ("Enter the integers between 1 and 100: ");
    for (int i = 0;
    i < number.length; i ++) {
        int a = input.nextInt ();
        number [a] += a;
        if (a == 0) break;

    }
    for (int i = 1;
    i < number.length; i ++) {
        if (number [i] != 0) {
            if (number [i] / i > 1) System.out.println (i + " occurs " + number [i] / i + " times");
            else System.out.println (i + " occurs " + number [i] / i + " time");

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21871053_21871156_8_36
21871053_26172816_3_13
Title: Counting number of occurrences in java array 
----------------------------------------

public static void main (final String [] args) {
    final Random rnd = new Random ();
    final Map < Integer, AtomicInteger > counter = new HashMap < Integer, AtomicInteger > () {
        @Override
        public AtomicInteger get (final Object key) {
            if (! super.containsKey (key)) {
                super.put ((Integer) key, new AtomicInteger (rnd.nextInt (100)));
            }
            return super.get (key);
        }}

    ;
    final AtomicInteger nextInt = new AtomicInteger (rnd.nextInt (100));
    while (nextInt.get () != 0) {
        counter.get (nextInt.get ()).incrementAndGet ();
        if (counter.size () > 1000) {
            nextInt.set (0);
        } else {
            nextInt.set (rnd.nextInt (100));
        }
    }
    for (final Integer i : counter.keySet ()) {
        final AtomicInteger integer = counter.get (i);
        final String format = integer.get () > 1 ? "%d occurs %s times\n" : "%d occurs %s time\n";
        System.out.format (format, i, integer);
    }
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {6, 22, 20, 11, 5, 18, 18, 16, 30, 9, 10, 10, 11, 5, 18, 18, 16};
    for (int i = 0;
    i < arr.length; i ++) {
        int count = 0;
        for (int j = 0;
        j < arr.length; j ++) {
            if (arr [i] == arr [j]) count ++;

        }
        System.out.println (arr [i] + "\toccures\t" + count + " times");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21871053_23998199_7_28
21871053_26172816_3_13
Title: Counting number of occurrences in java array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] number = new int [100];
    System.out.print ("Enter the integers between 1 and 100: ");
    for (int i = 0;
    i < number.length; i ++) {
        int a = input.nextInt ();
        number [a] += a;
        if (a == 0) break;

    }
    for (int i = 1;
    i < number.length; i ++) {
        if (number [i] != 0) {
            if (number [i] / i > 1) System.out.println (i + " occurs " + number [i] / i + " times");
            else System.out.println (i + " occurs " + number [i] / i + " time");

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {6, 22, 20, 11, 5, 18, 18, 16, 30, 9, 10, 10, 11, 5, 18, 18, 16};
    for (int i = 0;
    i < arr.length; i ++) {
        int count = 0;
        for (int j = 0;
        j < arr.length; j ++) {
            if (arr [i] == arr [j]) count ++;

        }
        System.out.println (arr [i] + "\toccures\t" + count + " times");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21878972_21879968_1_23
21878972_21883220_54_67
Title: Im sure there must be a much easier way java arraylist sums 
----------------------------------------

private void jButton2ActionPerformed (java.awt.event.ActionEvent evt) {
    double priceA = 20.00;
    double priceB = 25.00;
    double priceC = 30.00;
    ArrayList caselist = new ArrayList ();
    caselist.add ("Case A Total - £" + calculateTotal (priceA, txtbxCaseA.getText ()));
    caselist.add ("Case B Total - £" + calculateTotal (priceB, txtbxCaseB.getText ()));
    caselist.add ("Case C Total - £" + calculateTotal (priceC, txtbxCaseC.getText ()));
    DefaultListModel myModel = new DefaultListModel ();
    for (int i = 0;
    i < caselist.size (); i ++) {
        jTextArea3.append ((String) caselist.get (i) + ('\n'));
        myModel.addElement (caselist.get (i) + ",");
    }
}
----------------------------------------

private void jButton2ActionPerformed (ActionEvent evt) {
    caselist = new ArrayList < String > ();
    for (int i = 0;
    i < textFields.size (); i ++) {
        try {
            double total = calculateTotal (textFields.get (i).getText (), productList.get (i).getPrice ());
            caselist.add (productList.get (i).getName () + " Total - £" + total);
        } catch (NumberFormatException e) {
            caselist.add (productList.get (i).getName () + " invalid amount");
        }
    }
    for (String s : caselist) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21884720_21884799_7_31
21884720_21885525_6_28
Title: How to assign the number of elements in an array in Java? 
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    String strSize, strGrades;
    int laki = 100;
    int totalGrades = 0;
    float gradeAverage = 0;
    float [] grades = new float [laki];
    System.out.print ("How many grades will you enter?");
    strSize = dataIn.readLine ();
    laki = Integer.parseInt (strSize);
    grades = new float [laki];
    for (int i = 0;
    i < laki; i ++) {
        System.out.print ("Please enter grade # " + (i + 1) + ": ");
        strGrades = dataIn.readLine ();
        grades [i] = Float.parseFloat (strGrades);
        totalGrades += grades [i];
    }
    gradeAverage = totalGrades / laki;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader dataIn = new BufferedReader (new InputStreamReader (System.in));
    int totalGrades = 0;
    float gradeAverage = 0;
    System.out.print ("How many grades will you enter?");
    int laki = Integer.parseInt (dataIn.readLine ());
    float [] grades = new float [laki];
    int count = 0;
    while (laki > 0) {
        System.out.print ("Please enter grade # " + (count + 1) + ": ");
        grades [count] = Float.parseFloat (dataIn.readLine ());
        totalGrades += grades [count];
        laki --;
        count ++;
    }
    gradeAverage = (float) totalGrades / count;
    System.out.println ("Your grades average is " + gradeAverage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21884805_22777350_123_137
21884805_32600658_161_234
Title: LibGDX 0.9.9 - Apply cubemap in environment 
----------------------------------------

public void render (Camera camera) {
    camera.view.getRotation (q, true);
    q.conjugate ();
    worldTrans.idt ();
    worldTrans.rotate (quaternion);
    shader.begin ();
    shader.setUniformMatrix (u_worldTrans, worldTrans.translate (0, 0, - 1));
    quad.render (shader, GL20.GL_TRIANGLES);
    shader.end ();
}
----------------------------------------

public void render (Camera camera) {
    Gdx.graphics.getGL20 ().glCullFace (GL20.GL_BACK);
    program.begin ();
    program.setUniformMatrix (u_projTrans, camera.combined);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [0].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.rotate (Vector3.Y, 90);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [invert ? 3 : 2].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.rotate (Vector3.Y, - 90);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [invert ? 2 : 3].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.rotate (Vector3.X, - 90);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [5].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.rotate (Vector3.X, 90);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [4].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    tranformation.idt ();
    tranformation.translate (camera.position.x, camera.position.y, camera.position.z);
    tranformation.rotate (Vector3.Y, 180);
    tranformation.translate (0, 0, - 1);
    if (invert) tranformation.rotate (Vector3.Y, 180);

    program.setUniformMatrix (u_worldTrans, tranformation);
    textures [1].bind (0);
    program.setUniformi ("s_diffuse", 0);
    quad.render (program, GL20.GL_TRIANGLES);
    program.end ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21884805_22777350_42_53
21884805_22777350_60_82
Title: LibGDX 0.9.9 - Apply cubemap in environment 
----------------------------------------

public EnvironmentCubemap (Pixmap positiveX, Pixmap negativeX, Pixmap positiveY, Pixmap negativeY, Pixmap positiveZ, Pixmap negativeZ) {
    data [0] = positiveX;
    data [1] = negativeX;
    data [2] = positiveY;
    data [3] = negativeY;
    data [4] = positiveZ;
    data [5] = negativeZ;
    init ();
}
----------------------------------------

public EnvironmentCubemap (Pixmap cubemap) {
    int w = cubemap.getWidth ();
    int h = cubemap.getHeight ();
    for (int i = 0;
    i < 6; i ++) data [i] = new Pixmap (w / 4, h / 3, Format.RGB888);

    for (int x = 0;
    x < w; x ++) for (int y = 0;
    y < h; y ++) {
        if (x >= 0 && x <= w / 4 && y >= h / 3 && y <= h * 2 / 3) data [1].drawPixel (x, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 && y >= 0 && y <= h / 3) data [2].drawPixel (x - w / 4, y, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 && y >= h / 3 && y <= h * 2 / 3) data [4].drawPixel (x - w / 4, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 && y >= h * 2 / 3 && y <= h) data [3].drawPixel (x - w / 4, y - h * 2 / 3, cubemap.getPixel (x, y));

        if (x >= w / 2 && x <= w * 3 / 4 && y >= h / 3 && y <= h * 2 / 3) data [0].drawPixel (x - w / 2, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w * 3 / 4 && x <= w && y >= h / 3 && y <= h * 2 / 3) data [5].drawPixel (x - w * 3 / 4, y - h / 3, cubemap.getPixel (x, y));

    }

    cubemap.dispose ();
    cubemap = null;
    init ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21884805_22777350_84_96
21884805_32600658_146_158
Title: LibGDX 0.9.9 - Apply cubemap in environment 
----------------------------------------

private void init () {
    shader = new ShaderProgram (vertexShader, fragmentShader);
    if (! shader.isCompiled ()) throw new GdxRuntimeException (shader.getLog ());

    u_worldTrans = shader.getUniformLocation ("u_worldTrans");
    quad = createQuad ();
    worldTrans = new Matrix4 ();
    q = new Quaternion ();
    initCubemap ();
}
----------------------------------------

public void init () {
    program = new ShaderProgram (vertexShader, fragmentShader);
    if (! program.isCompiled ()) throw new GdxRuntimeException (program.getLog ());
    else Gdx.app.log ("shader", "shader compiled successfully!");

    u_projTrans = program.getUniformLocation ("u_projTrans");
    u_worldTrans = program.getUniformLocation ("u_worldTrans");
    u_tex = program.getUniformLocation ("s_diffuse");
    tranformation = new Matrix4 ();
    quad = createTexturedQuad ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21884805_32600658_46_78
21884805_32600658_84_125
Title: LibGDX 0.9.9 - Apply cubemap in environment 
----------------------------------------

public SkyBox (Pixmap positiveX, Pixmap negativeX, Pixmap positiveY, Pixmap negativeY, Pixmap positiveZ, Pixmap negativeZ) {
    textures = new Texture [6];
    textures [3] = new Texture (positiveX);
    textures [2] = new Texture (negativeX);
    textures [4] = new Texture (positiveY);
    textures [5] = new Texture (negativeY);
    textures [0] = new Texture (positiveZ);
    textures [1] = new Texture (negativeZ);
    positiveX.dispose ();
    positiveX = null;
    negativeX.dispose ();
    negativeX = null;
    positiveY.dispose ();
    positiveY = null;
    negativeY.dispose ();
    negativeY = null;
    positiveZ.dispose ();
    positiveZ = null;
    negativeZ.dispose ();
    negativeZ = null;
    init ();
}
----------------------------------------

public SkyBox (Pixmap cubemap) {
    int w = cubemap.getWidth ();
    int h = cubemap.getHeight ();
    Pixmap [] data = new Pixmap [6];
    for (int i = 0;
    i < 6; i ++) data [i] = new Pixmap (w / 4, h / 3, Format.RGB888);

    for (int x = 0;
    x < w; x ++) for (int y = 0;
    y < h; y ++) {
        if (x >= 0 && x <= w / 4 && y >= h / 3 && y <= h * 2 / 3) data [1].drawPixel (x, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 + 1 && y >= 0 && y <= h / 3) data [2].drawPixel (x - w / 4, y, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 && y >= h / 3 && y <= h * 2 / 3) data [4].drawPixel (x - w / 4, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w / 4 && x <= w / 2 && y >= h * 2 / 3 && y <= h) data [3].drawPixel (x - w / 4, y - h * 2 / 3, cubemap.getPixel (x, y));

        if (x >= w / 2 && x <= w * 3 / 4 && y >= h / 3 && y <= h * 2 / 3) data [0].drawPixel (x - w / 2, y - h / 3, cubemap.getPixel (x, y));

        if (x >= w * 3 / 4 && x <= w && y >= h / 3 && y <= h * 2 / 3) data [5].drawPixel (x - w * 3 / 4, y - h / 3, cubemap.getPixel (x, y));

    }

    textures = new Texture [6];
    textures [0] = new Texture (data [4]);
    textures [1] = new Texture (data [5]);
    textures [2] = new Texture (data [1]);
    textures [3] = new Texture (data [0]);
    textures [4] = new Texture (data [2]);
    textures [5] = new Texture (data [3]);
    for (int i = 0;
    i < 6; i ++) {
        data [i].dispose ();
        data [i] = null;
    }
    cubemap.dispose ();
    cubemap = null;
    init ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21889920_21890866_9_20
21889920_21891712_14_27
Title: Tokenizing text content of an XML element using Dom Java 
----------------------------------------

public static void main (String args []) throws Exception {
    String xml = "<P>(b) <E T=\"03\"><![CDATA[Filing of financial reports.</E> (1)(i) Except as provided in paragraphs (b)(3) and (h) of this section,</p>";
    Document doc = Jsoup.parse (xml);
    for (Element e : doc.select ("p")) for (Node child : e.childNodes ()) {
        if (child instanceof TextNode) {
            System.out.println (((TextNode) child).text ());
        } else {
            System.out.println (((Element) child).text ());
        }
    }

}
----------------------------------------

public static void main (final String [] args) throws Exception {
    final XPath xPath = XPathFactory.newInstance ().newXPath ();
    final DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance ();
    final DocumentBuilder builder = builderFactory.newDocumentBuilder ();
    final String expression = "//text()";
    final Document xmlDocument = builder.parse (new ByteArrayInputStream (XML.getBytes ()));
    final NodeList nodeList = (NodeList) xPath.compile (expression).evaluate (xmlDocument, XPathConstants.NODESET);
    for (int i = 0;
    i < nodeList.getLength (); i ++) {
        System.out.println ("=> " + nodeList.item (i).getTextContent ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21891246_21891845_1_17
21891246_21891995_1_18
Title: "Another Syntax error insert ""AssignmentOperator Expression"" to complete Expression" 
----------------------------------------

public Properties getProperties (String propertiesFileName) {
    try {
        Properties prop;
        prop = new Properties ();
        InputStream in = new FileInputStream (propertiesFileName);
        prop.load (in);
        in.close ();
        return prop;
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
        return null;
    } catch (IOException e) {
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------

public Properties getProperties (String propertiesFileName) {
    Properties prop;
    prop = new Properties ();
    try {
        InputStream in = new FileInputStream (propertiesFileName);
        prop.load (in);
        in.close ();
        return prop;
    } catch (IOException localIOException) {
        localIOException.printStackTrace ();
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21898116_21898215_5_29
21898116_21898536_5_41
Title: Basic I/O problems in Java 
----------------------------------------

public static void main (String [] arguments) {
    System.out.println ("Type in any integer");
    Scanner inputChar = new Scanner (System.in);
    int i;
    if (! inputChar.hasNextInt ()) System.out.println ("Not a number");
    else {
        i = inputChar.nextInt ();
        if (i != 0) {
            if (i % 2 == 0) System.out.println (i + " is even");
            else {
                System.out.println (i + " is odd");
            }
        } else {
            System.out.println ("Zeros are not allowed, bye!");
        }
    }
}
----------------------------------------

public static void main (String [] arguments) {
    Scanner inputChar = new Scanner (System.in);
    int i;
    while (true) {
        System.out.println ("Type in any integer:");
        if (! inputChar.hasNextInt ()) {
            System.out.println ("Not a number");
            inputChar.next ();
        } else {
            i = inputChar.nextInt ();
            if (i != 0) {
                if (i % 2 == 0) System.out.println (i + " is even");
                else {
                    System.out.println (i + " is odd");
                }
            } else {
                System.out.println ("Zeros are not allowed, bye!");
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21899824_21900125_56_112
21899824_31494859_1_48
Title: Java Convert a greyscale and sepia version of an image with BufferedImage 
----------------------------------------

public static BufferedImage toSepia (BufferedImage img, int sepiaIntensity) {
    BufferedImage sepia = new BufferedImage (img.getWidth (), img.getHeight (), BufferedImage.TYPE_INT_RGB);
    int sepiaDepth = 20;
    int w = img.getWidth ();
    int h = img.getHeight ();
    WritableRaster raster = sepia.getRaster ();
    int [] pixels = new int [w * h * 3];
    img.getRaster ().getPixels (0, 0, w, h, pixels);
    for (int i = 0;
    i < pixels.length; i += 3) {
        int r = pixels [i];
        int g = pixels [i + 1];
        int b = pixels [i + 2];
        int gry = (r + g + b) / 3;
        r = g = b = gry;
        r = r + (sepiaDepth * 2);
        g = g + sepiaDepth;
        if (r > 255) {
            r = 255;
        }
        if (g > 255) {
            g = 255;
        }
        if (b > 255) {
            b = 255;
        }
        b -= sepiaIntensity;
        if (b < 0) {
            b = 0;
        }
        if (b > 255) {
            b = 255;
        }
        pixels [i] = r;
        pixels [i + 1] = g;
        pixels [i + 2] = b;
    }
    raster.setPixels (0, 0, w, h, pixels);
    return sepia;
}
----------------------------------------

public static BufferedImage toSepia (BufferedImage image, int sepiaIntensity) {
    int width = image.getWidth ();
    int height = image.getHeight ();
    int sepiaDepth = 20;
    int [] imagePixels = image.getRGB (0, 0, width, height, null, 0, width);
    for (int i = 0;
    i < imagePixels.length; i ++) {
        int color = imagePixels [i];
        int r = (color>> 16) & 0xff;
        int g = (color>> 8) & 0xff;
        int b = (color) & 0xff;
        int gry = (r + g + b) / 3;
        r = g = b = gry;
        r = r + (sepiaDepth * 2);
        g = g + sepiaDepth;
        if (r > 255) {
            r = 255;
        }
        if (g > 255) {
            g = 255;
        }
        if (b > 255) {
            b = 255;
        }
        b -= sepiaIntensity;
        if (b < 0) {
            b = 0;
        }
        if (b > 255) {
            b = 255;
        }
        imagePixels [i] = (color & 0xff000000) + (r << 16) + (g << 8) + b;
    }
    BufferedImage res = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
    res.setRGB (0, 0, width, height, imagePixels, 0, width);
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21904229_21904271_17_27
21904229_21904361_23_50
Title: Making image circular in android 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.circle_layout);
    ImageView img1 = (ImageView) findViewById (R.id.imageView1);
    Bitmap bm = BitmapFactory.decodeResource (getResources (), R.drawable.hair_four);
    Bitmap resized = Bitmap.createScaledBitmap (bm, 100, 100, true);
    Bitmap conv_bm = getRoundedRectBitmap (resized, 100);
    img1.setImageBitmap (conv_bm);
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    imag = (ImageView) findViewById (R.id.image);
    BitmapFactory.Options bitopt = new BitmapFactory.Options ();
    bitopt.inSampleSize = 1;
    String filepath = "/mnt/sdcard/LOST.DIR";
    File imagefile = new File (filepath + "/logo.jpg");
    FileInputStream fis = null;
    try {
        fis = new FileInputStream (imagefile);
    } catch (FileNotFoundException e1) {
        e1.printStackTrace ();
    }
    Bitmap bi = BitmapFactory.decodeStream (fis);
    if (bi != null) {
        imag.setImageBitmap (getRoundedCornerBitmap (bi));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21904761_21907525_14_27
21904761_21907525_1_12
Title: URL decoding in Java for non-ASCII characters 
----------------------------------------

private static byte [] parse (String segment) {
    ByteArrayOutputStream buf = new ByteArrayOutputStream ();
    Matcher matcher = Pattern.compile ("%([A-Fa-f0-9][A-Fa-f0-9])").matcher (segment);
    int last = 0;
    while (matcher.find ()) {
        appendAscii (buf, segment.substring (last, matcher.start ()));
        byte hex = (byte) Integer.parseInt (matcher.group (1), 16);
        buf.write (hex);
        last = matcher.end ();
    }
    appendAscii (buf, segment.substring (last));
    return buf.toByteArray ();
}
----------------------------------------

public static String parse (String segment, Charset...encodings) {
    byte [] data = parse (segment);
    for (Charset encoding : encodings) {
        try {
            return encoding.newDecoder ().onMalformedInput (CodingErrorAction.REPORT).decode (ByteBuffer.wrap (data)).toString ();
        } catch (CharacterCodingException notThisCharset_ignore) {
        }
    }
    return segment;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21910623_21910932_1_12
21910623_21910948_1_18
Title: How to find first string in a text file with a certain length? 
----------------------------------------

public static void main (String [] args) throws java.io.FileNotFoundException {
    Scanner in = new Scanner (new FileReader ("aliceInWonderland.txt"));
    in.useDelimiter ("^\\w");
    while (in.hasNext ()) {
        String s = in.next ();
        if (s.length >= 9) {
            System.out.println ("The first long word is: " + s);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    File file = new File ("aliceInWonderland.txt");
    int threshold = 9;
    BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream (file)));
    String line;
    while ((line = br.readLine ()) != null) {
        String [] tokens = line.split ("\\s+");
        for (String token : tokens) {
            if (token.length () > threshold) {
                System.out.println ("The first long word is: " + token);
                return;
            }
        }
    }
    br.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21914842_21914970_1_17
21914842_21916230_1_18
Title: Formatting Output in Java from ArrayList 
----------------------------------------

public void load () {
    System.out.println ("");
    System.out.println ("Subject: " + subjectString);
    System.out.print ("Homework Mark: \t");
    for (int i = 0;
    i <= arrayList1.size () - 1; i ++) {
        System.out.print (arrayList1.get (i) + "\t");
    }
    System.out.println ("");
    System.out.print ("Exam Mark: \t");
    for (int i = 0;
    i <= arrayList2.size () - 1; i ++) {
        System.out.print (arrayList2.get (i) + "\t");
    }
    System.out.println ("");
}
----------------------------------------

public static void load () {
    System.out.println ("");
    System.out.println ("Subject: " + subjectString);
    System.out.printf ("%-19s", "Homework Mark: ");
    for (int i = 0;
    i < arrayList1.size (); i ++) {
        System.out.printf ("%7d", arrayList1.get (i));
    }
    System.out.println ("");
    System.out.printf ("%-19s", "Exam Mark: ");
    for (int i = 0;
    i < arrayList2.size (); i ++) {
        System.out.printf ("%7d", arrayList2.get (i));
    }
    System.out.println ("");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21920939_29742968_9_40
21920939_44728048_1_25
Title: Reverse the rows of a 2d array 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int m = sc.nextInt ();
    row = m;
    int n = sc.nextInt ();
    col = n;
    int [] [] arr = new int [row] [col];
    for (int i = 0;
    i < row; i ++) {
        for (int j = 0;
        j < col; j ++) {
            arr [i] [j] = sc.nextInt ();
            System.out.print (arr [i] [j] + " ");
        }
        System.out.println ();
    }
    for (int j = 0;
    j < arr.length; j ++) {
        for (int i = 0;
        i < arr [j].length / 2; i ++) {
            int temp = arr [j] [i];
            arr [j] [i] = arr [j] [arr [j].length - i - 1];
            arr [j] [arr [j].length - i - 1] = temp;
        }
    }
    for (int i = 0;
    i < row; i ++) {
        for (int j = 0;
        j < col; j ++) {
            System.out.print (arr [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] a = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}};
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < a.length; j ++) {
            System.out.print (a [i] [j] + ",");
        }
        System.out.println ();
    }
    System.out.println ("***************************");
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = a.length - 1;
        j >= 0; j --) {
            System.out.print (a [i] [j] + ",");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926027_1_17
21925830_21926229_1_24
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 0;
    i < n - 1; i ++) {
        num = input.nextInt ();
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the smallest is:" + smallest);
}
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 2;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) {
            large = num;
        }
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the largest is:" + large);
    System.out.println ("Smallest no is : " + smallest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926027_1_17
21925830_30883247_5_23
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 0;
    i < n - 1; i ++) {
        num = input.nextInt ();
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the smallest is:" + smallest);
}
----------------------------------------

public static void main (String args []) {
    int x, y, z;
    System.out.println ("Enter three integers ");
    Scanner in = new Scanner (System.in);
    x = in.nextInt ();
    y = in.nextInt ();
    z = in.nextInt ();
    if (x > y && x > z) System.out.println ("First number is largest.");
    else if (y > x && y > z) System.out.println ("Second number is largest.");
    else if (z > x && z > y) System.out.println ("Third number is largest.");
    else System.out.println ("Entered numbers are not distinct");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926027_1_17
21925830_39033286_7_34
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 0;
    i < n - 1; i ++) {
        num = input.nextInt ();
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the smallest is:" + smallest);
}
----------------------------------------

public static void main (String [] args) {
    int count, items;
    int newnum = 0;
    int highest = 0;
    int lowest = 0;
    input = new Scanner (System.in);
    System.out.println ("How many numbers you want to enter?");
    items = input.nextInt ();
    System.out.println ("Enter " + items + " numbers: ");
    for (count = 0; count < items; count ++) {
        newnum = input.nextInt ();
        if (highest < newnum) highest = newnum;

        if (lowest == 0) lowest = newnum;
        else if (newnum <= lowest) lowest = newnum;

    }
    System.out.println ("The highest number is " + highest);
    System.out.println ("The lowest number is " + lowest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926027_1_17
21925830_41217860_2_10
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 0;
    i < n - 1; i ++) {
        num = input.nextInt ();
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the smallest is:" + smallest);
}
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int j = 20;
    int k = 5;
    int x = (i > j && i > k) ? i : (j > k) ? j : k;
    int y = (i < j && i < k) ? i : (j < k) ? j : k;
    System.out.println ("Largetst Number : " + x);
    System.out.println ("Smallest Number : " + y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926037_5_30
21925830_29602442_5_30
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public void findLargestSmallestNo () {
    int smallest = Integer.MAX_VALUE;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) large = num;

        if (num < smallest) smallest = num;

        System.out.println ("the largest is:" + large);
        System.out.println ("Smallest no is : " + smallest);
    }
}
----------------------------------------

public void findLargestSmallestNo () {
    int smallest = Integer.MAX_VALUE;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    for (int i = 0;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) large = num;

        if (num < smallest) smallest = num;

        System.out.println ("the largest is:" + large);
        System.out.println ("Smallest no is : " + smallest);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926229_1_24
21925830_30883247_5_23
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 2;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) {
            large = num;
        }
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the largest is:" + large);
    System.out.println ("Smallest no is : " + smallest);
}
----------------------------------------

public static void main (String args []) {
    int x, y, z;
    System.out.println ("Enter three integers ");
    Scanner in = new Scanner (System.in);
    x = in.nextInt ();
    y = in.nextInt ();
    z = in.nextInt ();
    if (x > y && x > z) System.out.println ("First number is largest.");
    else if (y > x && y > z) System.out.println ("Second number is largest.");
    else if (z > x && z > y) System.out.println ("Third number is largest.");
    else System.out.println ("Entered numbers are not distinct");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926229_1_24
21925830_39033286_7_34
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 2;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) {
            large = num;
        }
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the largest is:" + large);
    System.out.println ("Smallest no is : " + smallest);
}
----------------------------------------

public static void main (String [] args) {
    int count, items;
    int newnum = 0;
    int highest = 0;
    int lowest = 0;
    input = new Scanner (System.in);
    System.out.println ("How many numbers you want to enter?");
    items = input.nextInt ();
    System.out.println ("Enter " + items + " numbers: ");
    for (count = 0; count < items; count ++) {
        newnum = input.nextInt ();
        if (highest < newnum) highest = newnum;

        if (lowest == 0) lowest = newnum;
        else if (newnum <= lowest) lowest = newnum;

    }
    System.out.println ("The highest number is " + highest);
    System.out.println ("The lowest number is " + lowest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_21926229_1_24
21925830_41217860_2_10
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int smallest = 0;
    int large = 0;
    int num;
    System.out.println ("enter the number");
    Scanner input = new Scanner (System.in);
    int n = input.nextInt ();
    num = input.nextInt ();
    smallest = num;
    for (int i = 2;
    i < n; i ++) {
        num = input.nextInt ();
        if (num > large) {
            large = num;
        }
        if (num < smallest) {
            smallest = num;
        }
    }
    System.out.println ("the largest is:" + large);
    System.out.println ("Smallest no is : " + smallest);
}
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int j = 20;
    int k = 5;
    int x = (i > j && i > k) ? i : (j > k) ? j : k;
    int y = (i < j && i < k) ? i : (j < k) ? j : k;
    System.out.println ("Largetst Number : " + x);
    System.out.println ("Smallest Number : " + y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_30883247_5_23
21925830_39033286_7_34
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String args []) {
    int x, y, z;
    System.out.println ("Enter three integers ");
    Scanner in = new Scanner (System.in);
    x = in.nextInt ();
    y = in.nextInt ();
    z = in.nextInt ();
    if (x > y && x > z) System.out.println ("First number is largest.");
    else if (y > x && y > z) System.out.println ("Second number is largest.");
    else if (z > x && z > y) System.out.println ("Third number is largest.");
    else System.out.println ("Entered numbers are not distinct");

}
----------------------------------------

public static void main (String [] args) {
    int count, items;
    int newnum = 0;
    int highest = 0;
    int lowest = 0;
    input = new Scanner (System.in);
    System.out.println ("How many numbers you want to enter?");
    items = input.nextInt ();
    System.out.println ("Enter " + items + " numbers: ");
    for (count = 0; count < items; count ++) {
        newnum = input.nextInt ();
        if (highest < newnum) highest = newnum;

        if (lowest == 0) lowest = newnum;
        else if (newnum <= lowest) lowest = newnum;

    }
    System.out.println ("The highest number is " + highest);
    System.out.println ("The lowest number is " + lowest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_30883247_5_23
21925830_41217860_2_10
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String args []) {
    int x, y, z;
    System.out.println ("Enter three integers ");
    Scanner in = new Scanner (System.in);
    x = in.nextInt ();
    y = in.nextInt ();
    z = in.nextInt ();
    if (x > y && x > z) System.out.println ("First number is largest.");
    else if (y > x && y > z) System.out.println ("Second number is largest.");
    else if (z > x && z > y) System.out.println ("Third number is largest.");
    else System.out.println ("Entered numbers are not distinct");

}
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int j = 20;
    int k = 5;
    int x = (i > j && i > k) ? i : (j > k) ? j : k;
    int y = (i < j && i < k) ? i : (j < k) ? j : k;
    System.out.println ("Largetst Number : " + x);
    System.out.println ("Smallest Number : " + y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21925830_39033286_7_34
21925830_41217860_2_10
Title: Java program to find the largest & smallest number in n numbers without using arrays 
----------------------------------------

public static void main (String [] args) {
    int count, items;
    int newnum = 0;
    int highest = 0;
    int lowest = 0;
    input = new Scanner (System.in);
    System.out.println ("How many numbers you want to enter?");
    items = input.nextInt ();
    System.out.println ("Enter " + items + " numbers: ");
    for (count = 0; count < items; count ++) {
        newnum = input.nextInt ();
        if (highest < newnum) highest = newnum;

        if (lowest == 0) lowest = newnum;
        else if (newnum <= lowest) lowest = newnum;

    }
    System.out.println ("The highest number is " + highest);
    System.out.println ("The lowest number is " + lowest);
}
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int j = 20;
    int k = 5;
    int x = (i > j && i > k) ? i : (j > k) ? j : k;
    int y = (i < j && i < k) ? i : (j < k) ? j : k;
    System.out.println ("Largetst Number : " + x);
    System.out.println ("Smallest Number : " + y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21941156_21950410_206_218
21941156_21956461_75_194
Title: Shapes and Segments in Java 
----------------------------------------

public Area [] split (Area a, Point2D p1, Point2D p2) {
    Shape str = new BasicStroke ().createStrokedShape (new Line2D.Double (p1, p2));
    Area line = new Area (str);
    Area temp = a;
    line.intersect (temp);
    temp.exclusiveOr (line);
    Area [] areas = {new Area (temp)};
    return areas;
}
----------------------------------------

private static Area [] split (Area a, Point2D p0, Point2D p1, Graphics2D g) {
    double dx = p1.getX () - p0.getX ();
    double dy = p1.getY () - p0.getY ();
    double length = Math.hypot (dx, dy);
    double dirLx = dx / length;
    double dirLy = dy / length;
    double dirPx = - dirLy;
    double dirPy = dirLx;
    double minDotL = Double.MAX_VALUE;
    double maxDotL = - Double.MAX_VALUE;
    double minDotP = Double.MAX_VALUE;
    double maxDotP = - Double.MAX_VALUE;
    Rectangle2D bounds = a.getBounds2D ();
    for (int i = 0;
    i < 4; i ++) {
        Point2D corner = getCorner (bounds, i);
        double pdx = corner.getX () - p0.getX ();
        double pdy = corner.getY () - p0.getY ();
        double dotL = dirLx * pdx + dirLy * pdy;
        minDotL = Math.min (minDotL, dotL);
        maxDotL = Math.max (maxDotL, dotL);
        double dotP = dirPx * pdx + dirPy * pdy;
        minDotP = Math.min (minDotP, dotP);
        maxDotP = Math.max (maxDotP, dotP);
    }
    Point2D extentLmin = new Point2D.Double (p0.getX () + minDotL * dirLx, p0.getY () + minDotL * dirLy);
    Point2D extentLmax = new Point2D.Double (p0.getX () + maxDotL * dirLx, p0.getY () + maxDotL * dirLy);
    Point2D extentPmin = new Point2D.Double (p0.getX () + minDotP * dirPx, p0.getY () + minDotP * dirPy);
    Point2D extentPmax = new Point2D.Double (p0.getX () + maxDotP * dirPx, p0.getY () + maxDotP * dirPy);
    Path2D half0 = new Path2D.Double ();
    half0.moveTo (extentLmin.getX (), extentLmin.getY ());
    half0.lineTo (extentLmin.getX () + minDotP * dirPx, extentLmin.getY () + minDotP * dirPy);
    half0.lineTo (extentLmax.getX () + minDotP * dirPx, extentLmax.getY () + minDotP * dirPy);
    half0.lineTo (extentLmax.getX (), extentLmax.getY ());
    half0.closePath ();
    Path2D half1 = new Path2D.Double ();
    half1.moveTo (extentLmin.getX (), extentLmin.getY ());
    half1.lineTo (extentLmin.getX () + maxDotP * dirPx, extentLmin.getY () + maxDotP * dirPy);
    half1.lineTo (extentLmax.getX () + maxDotP * dirPx, extentLmax.getY () + maxDotP * dirPy);
    half1.lineTo (extentLmax.getX (), extentLmax.getY ());
    half1.closePath ();
    Area a0 = new Area (a);
    a0.intersect (new Area (half0));
    Area a1 = new Area (a);
    a1.intersect (new Area (half1));
    if (g != null) {
        g.setColor (Color.GRAY);
        g.draw (bounds);
        g.setColor (Color.RED);
        g.draw (new Line2D.Double (extentLmin, extentLmax));
        g.setColor (Color.GREEN);
        g.draw (new Line2D.Double (extentPmin, extentPmax));
        g.setColor (Color.YELLOW.darker ());
        g.draw (half0);
        g.setColor (Color.MAGENTA);
        g.draw (half1);
        g.setColor (Color.BLUE);
        g.fill (AffineTransform.getTranslateInstance (400, - 20).createTransformedShape (a0));
        g.setColor (Color.BLUE);
        g.fill (AffineTransform.getTranslateInstance (400, + 20).createTransformedShape (a1));
    }
    return new Area [] {a0, a1};
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21941156_21950410_224_236
21941156_21956461_21_31
Title: Shapes and Segments in Java 
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            SplitArea sa = new SplitArea ();
            JOptionPane.showMessageDialog (null, sa.getGui ());
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21944642_26137716_1_11
21944642_29378498_1_10
Title: How to set cookie on DropWizard view and still return View? 
----------------------------------------

@GET
@ExceptionMetered
@Path ("/path")
@Produces (MediaType.TEXT_HTML)
public Response demoSetCookie () {
    Cookie cookie = new Cookie ("testNameCookie", "testValueCookie");
    NewCookie cookies = new NewCookie (cookie);
    return Response.status (Status.OK).type (MediaType.TEXT_HTML).entity (view).cookie (cookies).build ();
}
----------------------------------------

@GET
@ExceptionMetered
@Path ("/path")
@Produces (MediaType.TEXT_HTML)
public Response demoSetCookie (@Context
HttpServletResponse response) {
    Cookie cookie = new Cookie ("cookiemonster", "wannacookie");
    response.addCookie (cookie);
    return new MyViewResource ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21945940_21946019_1_12
21945940_21946136_1_17
Title: Riemann left sum 
----------------------------------------

public static double lefSum (Function fct, double a, double b, int n) {
    double deltaX = (b - a) / n;
    double x = a + deltaX / 2.0;
    double sum = 0.0;
    for (int i = 0;
    i < n; i ++) {
        sum = sum + fct.f (x);
        x = x + deltaX;
    }
    return sum * deltaX;
}
----------------------------------------

public static double lefSum (Function fct, double a, double b, int n) {
    double deltaX = (b - a) / n;
    double x = 0.0;
    double sum = 0.0;
    for (int i = 0;
    i < n; i ++) {
        x = a + i * deltaX;
        sum += fct.f (x) * deltaX;
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960540_3_31
21960477_21960742_5_33
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String con;
    do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF and YES to continue");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        con = input.next ();
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

    } while (con.equalsIgnoreCase ("YES"));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String prompt;
    tempLoop : do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.println ("Would you like to continue?(yes/no)");
        prompt = input.next ();
    } while (prompt.equalsIgnoreCase ("yes"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960540_3_31
21960477_21960750_5_33
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String con;
    do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF and YES to continue");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        con = input.next ();
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

    } while (con.equalsIgnoreCase ("YES"));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.print ("Would you like to continue?(yes/no) ");
        String cont = input.nextLine ();
    } while ((! (dg == 'C' || dg == 'F')) && cont.equalsIgnoreCase ("yes"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960540_3_31
21960477_21960845_1_32
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String con;
    do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF and YES to continue");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        con = input.next ();
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

    } while (con.equalsIgnoreCase ("YES"));
}
----------------------------------------

public static void main (String [] args) {
    double deg = 0;
    Scanner input = new Scanner (System.in);
    do {
        System.out.println ("Enter a number and F to convert from degF to degC or C to convert to degC to degF");
        String text = input.next ().toUpperCase ();
        try {
            deg = Double.parseDouble (text.substring (0, text.length () - 1));
        } catch (NumberFormatException e) {
            e.printStackTrace ();
        }
        if (text.endsWith ("C")) {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (text.endsWith ("F")) {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
        }

        System.out.println ("Type YES to continue");
    } while (input.next ().equalsIgnoreCase ("YES"));
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960540_3_31
21960477_39641458_7_35
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String con;
    do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF and YES to continue");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        con = input.next ();
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

    } while (con.equalsIgnoreCase ("YES"));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        do {
            if (dg == 'C') {
                double cTemp = (deg - 32) * 5.0 / 9.0;
                System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
            } else if (dg == 'F') {
                double fTemp = (deg * 9 / 5) + 32;
                System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
                continue;
            } else {
                System.out.println ("That character does not correspond to a valid unit of measure ");
                break;
            }

        } while (! (dg == 'C' || dg == 'F'));
        System.out.println ("Would you like to continue?(yes/no)");
        reply = input.next ().toUpperCase ();
    } while (reply.equals ("YES"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960742_5_33
21960477_21960750_5_33
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String prompt;
    tempLoop : do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.println ("Would you like to continue?(yes/no)");
        prompt = input.next ();
    } while (prompt.equalsIgnoreCase ("yes"));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.print ("Would you like to continue?(yes/no) ");
        String cont = input.nextLine ();
    } while ((! (dg == 'C' || dg == 'F')) && cont.equalsIgnoreCase ("yes"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960742_5_33
21960477_21960845_1_32
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String prompt;
    tempLoop : do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.println ("Would you like to continue?(yes/no)");
        prompt = input.next ();
    } while (prompt.equalsIgnoreCase ("yes"));
}
----------------------------------------

public static void main (String [] args) {
    double deg = 0;
    Scanner input = new Scanner (System.in);
    do {
        System.out.println ("Enter a number and F to convert from degF to degC or C to convert to degC to degF");
        String text = input.next ().toUpperCase ();
        try {
            deg = Double.parseDouble (text.substring (0, text.length () - 1));
        } catch (NumberFormatException e) {
            e.printStackTrace ();
        }
        if (text.endsWith ("C")) {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (text.endsWith ("F")) {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
        }

        System.out.println ("Type YES to continue");
    } while (input.next ().equalsIgnoreCase ("YES"));
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960742_5_33
21960477_39641458_7_35
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double deg;
    char dg;
    String prompt;
    tempLoop : do {
        System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
        deg = input.nextDouble ();
        String letter = input.next ().toUpperCase ();
        dg = letter.charAt (0);
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.println ("Would you like to continue?(yes/no)");
        prompt = input.next ();
    } while (prompt.equalsIgnoreCase ("yes"));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        do {
            if (dg == 'C') {
                double cTemp = (deg - 32) * 5.0 / 9.0;
                System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
            } else if (dg == 'F') {
                double fTemp = (deg * 9 / 5) + 32;
                System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
                continue;
            } else {
                System.out.println ("That character does not correspond to a valid unit of measure ");
                break;
            }

        } while (! (dg == 'C' || dg == 'F'));
        System.out.println ("Would you like to continue?(yes/no)");
        reply = input.next ().toUpperCase ();
    } while (reply.equals ("YES"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960750_5_33
21960477_21960845_1_32
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        if (dg == 'C') {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (dg == 'F') {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
            break;
        }

        System.out.print ("Would you like to continue?(yes/no) ");
        String cont = input.nextLine ();
    } while ((! (dg == 'C' || dg == 'F')) && cont.equalsIgnoreCase ("yes"));
}
----------------------------------------

public static void main (String [] args) {
    double deg = 0;
    Scanner input = new Scanner (System.in);
    do {
        System.out.println ("Enter a number and F to convert from degF to degC or C to convert to degC to degF");
        String text = input.next ().toUpperCase ();
        try {
            deg = Double.parseDouble (text.substring (0, text.length () - 1));
        } catch (NumberFormatException e) {
            e.printStackTrace ();
        }
        if (text.endsWith ("C")) {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (text.endsWith ("F")) {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
        }

        System.out.println ("Type YES to continue");
    } while (input.next ().equalsIgnoreCase ("YES"));
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21960477_21960845_1_32
21960477_39641458_7_35
Title: do-while to make a yes or no answer? java 
----------------------------------------

public static void main (String [] args) {
    double deg = 0;
    Scanner input = new Scanner (System.in);
    do {
        System.out.println ("Enter a number and F to convert from degF to degC or C to convert to degC to degF");
        String text = input.next ().toUpperCase ();
        try {
            deg = Double.parseDouble (text.substring (0, text.length () - 1));
        } catch (NumberFormatException e) {
            e.printStackTrace ();
        }
        if (text.endsWith ("C")) {
            double cTemp = (deg - 32) * 5.0 / 9.0;
            System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
        } else if (text.endsWith ("F")) {
            double fTemp = (deg * 9 / 5) + 32;
            System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
            continue;
        } else {
            System.out.println ("That character does not correspond to a valid unit of measure ");
        }

        System.out.println ("Type YES to continue");
    } while (input.next ().equalsIgnoreCase ("YES"));
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a number, a space and F to convert from degF to degC and C to convert to degC to degF");
    double deg = input.nextDouble ();
    String letter = input.next ().toUpperCase ();
    char dg = letter.charAt (0);
    tempLoop : do {
        do {
            if (dg == 'C') {
                double cTemp = (deg - 32) * 5.0 / 9.0;
                System.out.printf ("%f degC converted to degF is %.2f%n", deg, cTemp);
            } else if (dg == 'F') {
                double fTemp = (deg * 9 / 5) + 32;
                System.out.printf ("%f degF converted to degC is %.2f%n", deg, fTemp);
                continue;
            } else {
                System.out.println ("That character does not correspond to a valid unit of measure ");
                break;
            }

        } while (! (dg == 'C' || dg == 'F'));
        System.out.println ("Would you like to continue?(yes/no)");
        reply = input.next ().toUpperCase ();
    } while (reply.equals ("YES"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21967081_21967244_156_164
21967081_21967244_207_216
Title: ReOrder a List to one after another 
----------------------------------------

private int getRealIndex (int index) {
    final int typeCount = getTypeCount ();
    if (typeCount * groupSize != list.size ()) {
        throw new IllegalStateException ("There is an incomplete group. Can't establish list order.");
    }
    final int offsetInGroup = index / typeCount;
    final int groupStart = (index % typeCount) * groupSize;
    return offsetInGroup + groupStart;
}
----------------------------------------

private int getRealIndex (int index) {
    final int typeCount = getTypeCount ();
    if (index >= typeCount) {
        throw new IndexOutOfBoundsException ();
    }
    if (typeCount * groupSize != list.size ()) {
        throw new IllegalStateException ("There is an incomplete group. Can't establish list order.");
    }
    return index * groupSize + groupNumber;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21967081_21967244_175_187
21967081_21967244_194_223
Title: ReOrder a List to one after another 
----------------------------------------

public List < List < T > > getOneOfEachType () {
    return new AbstractList < List < T > > () {
        @Override
        public List < T > get (int index) {
            return getOneOfEachType (index);
        }@Override
        public int size () {
            return groupSize;
        }}

    ;
}
----------------------------------------

public List < T > getOneOfEachType (final int groupNumber) {
    return new AbstractList < T > () {
        @Override
        public T get (int index) {
            return list.get (getRealIndex (index));
        }@Override
        public T set (int index, T element) {
            return list.set (getRealIndex (index), element);
        } private int getRealIndex (int index) {
            final int typeCount = getTypeCount ();
            if (index >= typeCount) {
                throw new IndexOutOfBoundsException ();
            }
            if (typeCount * groupSize != list.size ()) {
                throw new IllegalStateException ("There is an incomplete group. Can't establish list order.");
            }
            return index * groupSize + groupNumber;
        }@Override
        public int size () {
            return getTypeCount ();
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21969320_21969532_6_27
21969320_38556366_6_27
Title: How to solve this head first java book's puzzle? 
----------------------------------------

public static void main (String [] args) {
    triangle [] ta = new triangel [4];
    int x = 0;
    while (x < 4) {
        -- -- -- -- -- -- -- -- -- ta [x].height = (x + 1) * 2;
        ta [x].length = x + 4;
        ta [x].setarea ();
        System.out.print ("tringle " + x + " , area");
        System.out.println (" = " + ta [x].area);
        x ++
    }
    int y = 28;
    x = 27;
    triangle t5 = ta [2];
    ta [2].area = 343;
    System.out.print ("y= " + y);
    System.out.println (" , t5 area = " + t5.area);
}
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    Triangle [] ta = new Triangle [4];
    while (x < 4) {
        ta [x] = new Triangle ();
        ta [x].height = (x + 1) * 2;
        ta [x].length = x + 4;
        ta [x].setArea ();
        System.out.print ("triangle " + x + ", area");
        System.out.println (" = " + ta [x].area);
        x = x + 1;
    }
    int y = x;
    x = 27;
    Triangle t5 = ta [2];
    ta [2].area = 343;
    System.out.print ("y = " + y);
    System.out.println (", t5 area = " + t5.area);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21969533_21969679_2_14
21969533_21969684_6_20
Title: How to apply modifications with init() method into toString()? 
----------------------------------------

public void init () {
    final Scanner input = new Scanner (System.in);
    System.out.println ("Enter name: ");
    String iName = input.nextLine ();
    setName (iName);
    System.out.println ("Enter number (double): ");
    double iNumber = input.nextDouble ();
    setNumber (input2.nextDouble ());
}
----------------------------------------

public void init () {
    System.out.println ("Enter name: ");
    Scanner input = new Scanner (System.in);
    if (input.hasNextLine ()) {
        setName (input.nextLine ());
    }
    System.out.println ("Enter number (double): ");
    if (input.hasNextDouble ()) {
        setNumber (input.nextDouble ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21972212_21972496_4_22
21972212_21972526_1_22
Title: "How to make this a simpler code (Java simple String input say if it's the correct one or no)" 
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < 3; i ++) {
        System.out.print ("Insert the admin pass: ");
        String test = input.nextLine ();
        if (pass.equals (test)) {
            System.out.print ("Access granted");
            i = 3;
        } else {
            System.out.println ("Incorrect password, you have " + (2 - i) + " attempts remaining");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21972212_21972496_4_22
21972212_21972539_1_23
Title: "How to make this a simpler code (Java simple String input say if it's the correct one or no)" 
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < 3; i ++) {
        System.out.print ("Insert the admin pass: ");
        String test = input.nextLine ();
        if (pass.equals (test)) {
            System.out.print ("Access granted");
            i = 3;
        } else {
            System.out.println ("Incorrect password, you have " + (2 - i) + " attempts remaining");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21972212_21972526_1_22
21972212_21972539_1_23
Title: "How to make this a simpler code (Java simple String input say if it's the correct one or no)" 
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    if (pass.equals (test)) {
        System.out.print ("Access granted");
    } else {
        for (int i = 1;
        i < 3; i ++) {
            System.out.print ("You have " + i + " try(es): ");
            test = input.nextLine ();
            if (pass.equals (test)) {
                System.out.print ("Access granted");
                break;
            } else if (i == 2) {
                System.out.print ("Access denied");
            }

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String pass = "admin";
    int maxTry = 3;
    boolean success = false;
    Scanner input = new Scanner (System.in);
    System.out.print ("Insert the admin pass: ");
    String test = input.nextLine ();
    while (maxTry > 0) {
        maxTry --;
        if (! pass.equals (test)) {
            System.out.print ("You have " + maxTry + " try(es): ");
            test = input.nextLine ();
        } else {
            success = true;
            break;
        }
    }
    if (success) {
        System.out.println ("Access granted");
    } else {
        System.out.println ("Access denied");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21987552_22012798_44_77
21987552_22028502_195_219
Title: How to make a JavaFX TableView cell editable without first pressing Enter? 
----------------------------------------

private void createTextField () {
    textField = new TextField (getString ());
    textField.setMinWidth (this.getWidth () - this.getGraphicTextGap () * 2);
    textField.setOnKeyPressed (new EventHandler < KeyEvent > () {
        @Override
        public void handle (KeyEvent t) {
            if (t.getCode () == KeyCode.ENTER) {
                commitEdit (textField.getText ());
                EditingCell.this.getTableView ().requestFocus ();
                EditingCell.this.getTableView ().getSelectionModel ().selectBelowCell ();
            } else if (t.getCode () == KeyCode.ESCAPE) {
                cancelEdit ();
            }

        }}

    );
    textField.setOnKeyReleased (new EventHandler < KeyEvent > () {
        @Override
        public void handle (KeyEvent t) {
            if (t.getCode ().isDigitKey ()) {
                if (CellField.isLessOrEqualOneSym ()) {
                    CellField.addSymbol (t.getText ());
                } else {
                    CellField.setText (textField.getText ());
                }
                textField.setText (CellField.getText ());
                textField.deselect ();
                textField.end ();
                textField.positionCaret (textField.getLength () + 2);
            }
        }}

    );
}
----------------------------------------

private void createTextField () {
    textField = new TextField (getString ());
    textField.focusedProperty ().addListener ((ObservableValue < ? extends Boolean > arg0, Boolean arg1, Boolean arg2) -> {
        if (! arg2) commitEdit (textField.getText ());

    });
    textField.setOnKeyReleased ((KeyEvent t) -> {
        if (t.getCode () == KeyCode.ENTER) {
            commitEdit (textField.getText ());
            EditingCell.this.getTableView ().getSelectionModel ().selectBelowCell ();
        }
        if (t.getCode () == KeyCode.ESCAPE) {
            cancelEdit ();
        }
    });
    textField.addEventFilter (KeyEvent.KEY_RELEASED, (KeyEvent t) -> {
        if (t.getCode () == KeyCode.DELETE) {
            t.consume ();
        }
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21987552_22012798_49_57
21987552_22012798_62_75
Title: How to make a JavaFX TableView cell editable without first pressing Enter? 
----------------------------------------

public void handle (KeyEvent t) {
    if (t.getCode () == KeyCode.ENTER) {
        commitEdit (textField.getText ());
        EditingCell.this.getTableView ().requestFocus ();
        EditingCell.this.getTableView ().getSelectionModel ().selectBelowCell ();
    } else if (t.getCode () == KeyCode.ESCAPE) {
        cancelEdit ();
    }

}
----------------------------------------

public void handle (KeyEvent t) {
    if (t.getCode ().isDigitKey ()) {
        if (CellField.isLessOrEqualOneSym ()) {
            CellField.addSymbol (t.getText ());
        } else {
            CellField.setText (textField.getText ());
        }
        textField.setText (CellField.getText ());
        textField.deselect ();
        textField.end ();
        textField.positionCaret (textField.getLength () + 2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21987552_22012798_4_15
21987552_22028502_141_159
Title: How to make a JavaFX TableView cell editable without first pressing Enter? 
----------------------------------------

public void startEdit () {
    if (! isEmpty ()) {
        super.startEdit ();
        if (textField == null) {
            createTextField ();
        }
        setText (null);
        setGraphic (textField);
        setContentDisplay (ContentDisplay.GRAPHIC_ONLY);
        textField.requestFocus ();
    }
}
----------------------------------------

public void startEdit () {
    if (! isEmpty ()) {
        super.startEdit ();
        createTextField ();
        setText (null);
        setGraphic (textField);
        Platform.runLater (() -> {
            textField.requestFocus ();
        });
        if (lastKey != null) {
            textField.setText (lastKey);
            Platform.runLater (() -> {
                textField.deselect ();
                textField.end ();
            });
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21989714_30239298_1_16
21989714_52982245_1_10
Title: Java program on name Initials 
----------------------------------------

public String getInitials (String name) {
    StringBuilder initials = new StringBuilder ();
    boolean addNext = true;
    if (name != null) {
        for (int i = 0;
        i < name.length (); i ++) {
            char c = name.charAt (i);
            if (c == ' ' || c == '-' || c == '.') {
                addNext = true;
            } else if (addNext) {
                initials.append (c);
                addNext = false;
            }

        }
    }
    return initials.toString ();
}
----------------------------------------

public String getInitials () {
    String initials = "";
    String [] parts = getFullName ().split (" ");
    char initial;
    for (int i = 0;
    i < parts.length; i ++) {
        initial = parts [i].charAt (0);
        initials += initial;
    }
    return (initials.toUpperCase ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
21999974_22069131_1_11
21999974_22071319_1_11
Title: How to check if a body has almost stopped moving in libgdx + box2d 
----------------------------------------

public Boolean isStopped (float delta) {
    boolean isMoving = (Math.abs (body.getLinearVelocity ().x) >= 0.25f || Math.abs (body.getLinearVelocity ().y) >= 0.25f);
    if (isMoving) {
        timeStopped = 0f;
        return false;
    } else {
        timeStopped += delta;
        return timeStopped >= 0.3f;
    }
}
----------------------------------------

public Boolean isStopped () {
    float storedSpd = (Float) body.getUserData ();
    float currentSpd = body.getLinearVelocity ().len ();
    if ((storedSpd > Float.MIN_VALUE) && (currentSpd > storedSpd)) {
        body.setUserData (Float.MIN_VALUE);
        return false;
    } else {
        return (currentSpd < THRESHOLD);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2200089_2200139_4_14
2200089_2200148_5_20
Title: Anyone knows which group in a regular expression actually does the matching job 
----------------------------------------

public static void main (String [] args) {
    String text = "12 ab ^&";
    String regex = "(\\d+)|([a-z]+)|(\\p{Punct}+)";
    Matcher m = Pattern.compile (regex).matcher (text);
    while (m.find ()) {
        System.out.println ("\nmatched text: " + m.group ());
        for (int i = 1;
        i <= m.groupCount (); i ++) {
            System.out.println ("   group " + i + "? " + (m.group (i) != null));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String input = "foo baz bar foo";
    String regex = "(foo)|(bar)";
    Pattern pattern = Pattern.compile (regex);
    Matcher matcher = pattern.matcher (input);
    while (matcher.find ()) {
        for (int i = 1;
        i <= matcher.groupCount (); ++ i) {
            if (matcher.group (i) != null) {
                System.out.println ("Group " + i + " matched.");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22009244_22009294_32_90
22009244_22009389_1_21
Title: get GPS location co-ordinates and store in an array 
----------------------------------------

public Location getLocation () {
    try {
        locationManager = (LocationManager) mContext.getSystemService (LOCATION_SERVICE);
        isGPSEnabled = locationManager.isProviderEnabled (LocationManager.GPS_PROVIDER);
        isNetworkEnabled = locationManager.isProviderEnabled (LocationManager.NETWORK_PROVIDER);
        if (! isGPSEnabled && ! isNetworkEnabled) {
        } else {
            this.canGetLocation = true;
            if (isNetworkEnabled) {
                locationManager.requestLocationUpdates (LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                Log.d ("Network", "Network");
                if (locationManager != null) {
                    location = locationManager.getLastKnownLocation (LocationManager.NETWORK_PROVIDER);
                    if (location != null) {
                        latitude = location.getLatitude ();
                        longitude = location.getLongitude ();
                    }
                }
            }
            if (isGPSEnabled) {
                if (location == null) {
                    locationManager.requestLocationUpdates (LocationManager.GPS_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                    Log.d ("GPS Enabled", "GPS Enabled");
                    if (locationManager != null) {
                        location = locationManager.getLastKnownLocation (LocationManager.GPS_PROVIDER);
                        if (location != null) {
                            latitude = location.getLatitude ();
                            longitude = location.getLongitude ();
                        }
                    }
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return location;
}
----------------------------------------

public double [] getLocation () {
    double [] latlon = new double [2];
    LocationManager locationManager = (LocationManager) getSystemService (LOCATION_SERVICE);
    Criteria criteria = new Criteria ();
    String bestProvider = locationManager.getBestProvider (criteria, false);
    Location location = locationManager.getLastKnownLocation (bestProvider);
    Double lat, lon;
    try {
        lat = location.getLatitude ();
        lon = location.getLongitude ();
        latlon [0] = lat;
        latlon [1] = lon;
        return latlon;
    } catch (NullPointerException e) {
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22014129_22014951_7_23
22014129_22016032_27_39
Title: Getting Type instance of implemented interface with type parameters applied 
----------------------------------------

public static void main (String args []) throws Exception {
    Dummy d = new Dummy ();
    Type [] genericInterfaces = Dummy.class.getGenericInterfaces ();
    for (Type genericInterface : genericInterfaces) {
        if (genericInterface instanceof ParameterizedType) {
            Type [] genericTypes = ((ParameterizedType) genericInterface).getActualTypeArguments ();
            for (Type genericType : genericTypes) {
                System.out.println ("Generic type: " + genericType);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Type i0 = getInterface (Foo.class, 0);
    System.out.println ("First interface implemented by Foo: " + i0);
    Method method = TypeParameterTest.class.getDeclaredMethod ("magic");
    Type returnType = method.getGenericReturnType ();
    System.out.println ("Magic method return type: " + returnType);
    Type i1 = getInterface (returnType, 0);
    System.out.println ("First interface implemented by Bar<String>: " + i1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22016091_22016608_352_367
22016091_22016608_383_399
Title: How can I save a BufferedImage to be below a particular size 
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        int maxResolution = resolutionLimitSlider.getValue ();
        imageLimiter.setMaxResolution (maxResolution);
        updateOutputImage (imageLimiter.getOutputImage ());
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        float quality = qualitySlider.getValue () / 100.0f;
        imageLimiter.setQuality (quality);
        updateOutputImage (imageLimiter.getOutputImage ());
        qualityLabel.setText ("Quality: " + String.format ("%.2f", quality));
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------
