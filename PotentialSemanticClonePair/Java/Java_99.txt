$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40966929_40966966_1_21
40966929_40968427_1_15
Title: Largest element in two array 
----------------------------------------

public static int LargestInCommon (int [] a, int [] b) {
    int i = 0;
    int k = 0;
    int greatest = - 1;
    for (i = 0; i < a.length; i ++) {
        for (k = 0; k < b.length; k ++) {
            if (a [i] == b [k]) greatest = a [i];

        }
    }
    return greatest;
}
----------------------------------------

private static int LargestInCommon (int [] a, int [] b) {
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i = 0;
    i < a.length; i ++) {
        map.put (a [i], 0);
    }
    int greatest = - 1;
    if (map.containsKey (b [0])) greatest = b [0];

    for (int i = 1;
    i < b.length; i ++) {
        if (map.containsKey (b [i])) {
            if (greatest < b [i]) greatest = b [i];

        }
    }
    return greatest;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40978062_40978218_6_22
40978062_40978247_5_21
Title: How to display n by n square pattern from numbers 1 through nine then 0 in Java 
----------------------------------------

public static void main (String [] args) {
    int n, i, j;
    Scanner yar = new Scanner (System.in);
    System.out.println ("Enter size for n square: ");
    n = yar.nextInt ();
    int [] [] f19t0 = new int [n] [n];
    for (i = 0; i < n; i ++) {
        for (j = 0; j < n; j ++) {
            f19t0 [i] [j] = (i * n + j + 1) % 10;
            System.out.print (f19t0 [i] [j] + " ");
        }
        System.out.println ();
    }
    yar.close ();
}
----------------------------------------

public static void main (String [] args) {
    int n, i, j;
    Scanner yar = new Scanner (System.in);
    System.out.println ("Enter size for n square: ");
    n = yar.nextInt ();
    int [] [] f19t0 = new int [n] [n];
    for (i = 0; i < n; i ++) {
        for (j = 0; j < n; j ++) {
            f19t0 [i] [j] = (i * n + j + 1) % 10;
            System.out.print (f19t0 [i] [j] + " ");
        }
        System.out.println ();
    }
    yar.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40985077_40985135_1_17
40985077_40985236_4_22
Title: What am I missing for this reverse order? 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    int input, n, reverse = 0;
    System.out.println ("Enter an integer: ");
    Scanner in = new Scanner (System.in);
    n = in.nextInt ();
    input = n;
    while (n != 0) {
        reverse = reverse * 10;
        reverse = reverse + n % 10;
        n = n / 10;
    }
    System.out.println (input + " in reverse order is " + reverse);
}
----------------------------------------

public static void main (String args []) {
    int n, reverse, initialNumber;
    n = reverse = initialNumber = 0;
    System.out.print ("Enter an integer:");
    Scanner in = new Scanner (System.in);
    n = in.nextInt ();
    initialNumber = n;
    while (n != 0) {
        reverse = reverse * 10;
        reverse = reverse + n % 10;
        n = n / 10;
    }
    System.out.println (initialNumber + " in reverse order is " + reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40985077_40985184_1_15
40985077_40985236_4_22
Title: What am I missing for this reverse order? 
----------------------------------------

public static void main (String [] args) {
    int n, reverse = 0;
    System.out.println ("Enter an integer: ");
    Scanner in = new Scanner (System.in);
    n = in.nextInt ();
    int number = n;
    System.out.println (n);
    while (n != 0) {
        reverse = reverse * 10;
        reverse = reverse + n % 10;
        n = n / 10;
    }
    System.out.println (number + " in reverse order is " + reverse);
}
----------------------------------------

public static void main (String args []) {
    int n, reverse, initialNumber;
    n = reverse = initialNumber = 0;
    System.out.print ("Enter an integer:");
    Scanner in = new Scanner (System.in);
    n = in.nextInt ();
    initialNumber = n;
    while (n != 0) {
        reverse = reverse * 10;
        reverse = reverse + n % 10;
        n = n / 10;
    }
    System.out.println (initialNumber + " in reverse order is " + reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40985828_40986207_18_30
40985828_40986353_9_29
Title: "Finding strings' ""permutation"" based on alphabetical order" 
----------------------------------------

public static String perm (String word) {
    int l = word.length ();
    El [] els = new El [l];
    for (int i = 0;
    i < l; i ++) {
        els [i] = new El (word.charAt (i), i);
    }
    Arrays.sort (els);
    StringBuilder sb = new StringBuilder (l);
    for (int i = 0;
    i < els.length; i ++) {
        sb.append ((char) ('A' + els [i].idx));
    }
    return sb.toString ();
}
----------------------------------------

public static String perm (String word) {
    char [] perm = new char [word.length ()];
    char [] wordArray = word.toCharArray ();
    char [] sortedWord = new char [word.length ()];
    sortedWord = word.toCharArray ();
    Arrays.sort (sortedWord);
    for (int i = 0;
    i < word.length (); i ++) {
        for (int j = 0;
        j < word.length (); j ++) {
            if (sortedWord [i] == wordArray [j]) {
                perm [j] = (char) (65 + i);
                wordArray [j] = '.';
                j = word.length ();
            }
        }
    }
    return String.valueOf (perm);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40985828_40986207_18_30
40985828_41000913_1_13
Title: "Finding strings' ""permutation"" based on alphabetical order" 
----------------------------------------

public static String perm (String word) {
    int l = word.length ();
    El [] els = new El [l];
    for (int i = 0;
    i < l; i ++) {
        els [i] = new El (word.charAt (i), i);
    }
    Arrays.sort (els);
    StringBuilder sb = new StringBuilder (l);
    for (int i = 0;
    i < els.length; i ++) {
        sb.append ((char) ('A' + els [i].idx));
    }
    return sb.toString ();
}
----------------------------------------

public static String perm (String word) {
    int l = word.length ();
    int [] els = new int [l];
    for (int i = 0;
    i < l; i ++) {
        els [i] = (word.charAt (i) << 16) | i;
    }
    Arrays.sort (els);
    char [] sb = new char [l];
    for (int i = 0;
    i < els.length; i ++) {
        sb [i] = (char) ('A' + els [i] & 0xFFFF);
    }
    return String.valueOf (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40985828_40986353_9_29
40985828_41000913_1_13
Title: "Finding strings' ""permutation"" based on alphabetical order" 
----------------------------------------

public static String perm (String word) {
    char [] perm = new char [word.length ()];
    char [] wordArray = word.toCharArray ();
    char [] sortedWord = new char [word.length ()];
    sortedWord = word.toCharArray ();
    Arrays.sort (sortedWord);
    for (int i = 0;
    i < word.length (); i ++) {
        for (int j = 0;
        j < word.length (); j ++) {
            if (sortedWord [i] == wordArray [j]) {
                perm [j] = (char) (65 + i);
                wordArray [j] = '.';
                j = word.length ();
            }
        }
    }
    return String.valueOf (perm);
}
----------------------------------------

public static String perm (String word) {
    int l = word.length ();
    int [] els = new int [l];
    for (int i = 0;
    i < l; i ++) {
        els [i] = (word.charAt (i) << 16) | i;
    }
    Arrays.sort (els);
    char [] sb = new char [l];
    for (int i = 0;
    i < els.length; i ++) {
        sb [i] = (char) ('A' + els [i] & 0xFFFF);
    }
    return String.valueOf (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40987898_40988186_7_56
40987898_40989127_4_46
Title: Loop that asks for a guess a certain number of time? 
----------------------------------------

public static void main (String [] args) {
    int guess;
    Scanner scan = new Scanner (System.in);
    System.out.print (" Please enter your name: ");
    String name = scan.next ();
    System.out.print (" Would you like to try to guess a number? (Yes or No):");
    String answer = scan.next ();
    if (answer.length () == 3) System.out.print ("How many guesses would you like? (5, 10, 20)");

    int numberOfGuesses = scan.nextInt ();
    Random random = new Random ();
    int randomNumber = random.nextInt (100 - 0 + 1) + 0;
    int actualGuessCount = 0;
    while (actualGuessCount <= numberOfGuesses) {
        actualGuessCount ++;
        System.out.print ("Enter guess #" + actualGuessCount + ":");
        guess = scan.nextInt ();
        if (guess == randomNumber) {
            System.out.println ("Congratulations, " + name + "! You guessed the magic number in " + actualGuessCount + " guesses.");
            System.exit (0);
        } else if (guess < randomNumber) {
            System.out.println ("Your guess, " + guess + ", is less than the magic number");
        } else {
            System.out.println ("Your guess, " + guess + ", is greater than the magic number");
        }

        if (actualGuessCount == numberOfGuesses) {
            System.out.println ("You consume all the guesses.");
            System.exit (0);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String name, guess;
    int choice, i, Userguess, magic;
    Scanner a = new Scanner (System.in);
    System.out.print ("Enter your name:");
    name = a.next ();
    System.out.print ("Would you like to try a guess number? (Yes or No):");
    guess = a.next ();
    if (guess.equals ("No")) {
        System.exit (0);
    }
    System.out.print ("How many guess would you like? (5 ,10 ,15): ");
    choice = a.nextInt ();
    Random number = new Random ();
    magic = 1 + number.nextInt (100);
    for (i = 0; i < choice; i ++) {
        System.out.printf ("Enter you guess #%d :", (i + 1));
        Userguess = a.nextInt ();
        if (Userguess == magic) {
            System.out.printf ("Congrulations %s ! You guessed the magic number in %d guesses \n", name, Userguess);
            System.exit (0);
        }
        if (Userguess < magic) {
            System.out.printf ("Your guess %d is less than the magic number", Userguess);
        }
        if (Userguess > magic) {
            System.out.printf ("Your guess %d is more than the magic number", Userguess);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40987902_40987965_1_14
40987902_40988548_5_35
Title: Getting Odd numbers from Array 
----------------------------------------

public static void main (String [] args) {
    Scanner console = new Scanner (System.in);
    System.out.println ("Please input a series of numbers");
    String nextLine = console.nextLine ();
    String [] nums = nextLine.split (" ");
    int oddCount = 0;
    for (String num : nums) {
        if (Integer.parseInt (num) % 2 == 1) {
            ++ oddCount;
        }
    }
    double oddPercent = 100.0 * oddCount / nums.length;
    System.out.println ("Total count of numbers: " + nums.length + ", percentage odd: " + oddPercent);
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > intList = new ArrayList < Integer > ();
    Scanner console = new Scanner (System.in);
    System.out.println ("Please input a series of numbers");
    while (console.hasNext ()) {
        String str = console.next ();
        try {
            if (str.equals ("quit")) {
                break;
            }
            int inputs = Integer.parseInt (str);
            System.out.println ("the integer values are" + inputs);
            intList.add (inputs);
        } catch (java.util.InputMismatchException | NumberFormatException e) {
            console.nextLine ();
        }
    }
    console.close ();
    double d = Oddvalues (intList);
    System.out.println ("the percent is" + d);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40988553_40988804_4_22
40988553_40988812_8_19
Title: What is wrong with this Quick Sort code 
----------------------------------------

public static void quickSort (int l, int h) {
    if (l >= h || l < 0) {
        return;
    }
    int curStandard = l;
    for (int i = h;
    i > l; i --) {
        if ((a [i] >= a [curStandard] && i > curStandard) || (a [i] <= a [curStandard] && i < curStandard)) {
        } else {
            int temp = a [i];
            a [i] = a [curStandard];
            a [curStandard] = temp;
            curStandard = i;
        }
    }
    quickSort (l, curStandard - 1);
    quickSort (curStandard + 1, h);
}
----------------------------------------

public static void quickSort (int l, int h) {
    if (l < h) {
        for (int g = l + 1;
        g < h; g ++) {
            if (a [g] <= a [l]) {
                int t = a [g];
                a [g] = a [l];
                a [l] = t;
            }
        }
        quickSort (++ l, h);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40993093_40995018_1_21
40993093_40998629_1_10
Title: Counting number of unique adjacent pairs of same elements in an array 
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    int prev = 0;
    boolean same = false;
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == 0) {
            prev = arr [i];
        } else {
            if (arr [i] == prev) {
                if (! same) {
                    result ++;
                    same = true;
                }
            } else {
                prev = arr [i];
                same = false;
            }
        }
    }
    return result;
}
----------------------------------------

static int countClamps (int [] arr) {
    int result = 0;
    for (int i = 1;
    i < arr.length; ++ i) {
        if (arr [i] == arr [i - 1] && (i == arr.length - 1 || arr [i] != arr [i + 1])) {
            ++ result;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40995088_41003797_16_31
40995088_41003797_7_39
Title: Changing variable within Event Listener? 
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    for (DataSnapshot recipeSnapshot : dataSnapshot.getChildren ()) {
        Recipe recipe = recipeSnapshot.getValue (Recipe.class);
        recipeKey = recipeSnapshot.getKey ();
        editTextName.setText (recipe.Name + ", " + recipe.Calories);
        editTextCategory.setText (recipe.Category);
        imgURL = recipe.Img;
        Picasso.with (getApplicationContext ()).load (imgURL).placeholder (R.drawable.placeholder_image).error (R.drawable.placeholder_image).into (profileImageView);
        likedRecipes.put (recipeKey, recipe);
    }
}
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    User user = dataSnapshot.getValue (User.class);
    vegan = user.Vegan;
    if (vegan == "yes") {
        veganRef = databaseReference.child ("recipe");
        veganRef.orderByChild ("Category").equalTo ("Vegan").addValueEventListener (new ValueEventListener () {
            @Override
            public void onDataChange (DataSnapshot dataSnapshot) {
                for (DataSnapshot recipeSnapshot : dataSnapshot.getChildren ()) {
                    Recipe recipe = recipeSnapshot.getValue (Recipe.class);
                    recipeKey = recipeSnapshot.getKey ();
                    editTextName.setText (recipe.Name + ", " + recipe.Calories);
                    editTextCategory.setText (recipe.Category);
                    imgURL = recipe.Img;
                    Picasso.with (getApplicationContext ()).load (imgURL).placeholder (R.drawable.placeholder_image).error (R.drawable.placeholder_image).into (profileImageView);
                    likedRecipes.put (recipeKey, recipe);
                }
            }@Override
            public void onCancelled (DatabaseError databaseError) {
                Log.w (TAG, "loadPost:onCancelled", databaseError.toException ());
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40997940_40998084_4_20
40997940_40998095_4_19
Title: generate 1000 random numbers from size 10 array and find the average of the numbers and print them on the screen 
----------------------------------------

public static void main (String args []) {
    int array [] = new int [10];
    Random rand = new Random ();
    int sum = 0;
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = rand.next (1000);
        sum = sum + array [i];
        sum = sum / array.length;
    }
    System.out.println (sum);
}
----------------------------------------

public static void main (String args []) {
    int array [] = new int [10];
    Random rand = new Random ();
    int sum = 0;
    int sum1 = 0;
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = rand.nextInt (1001);
        sum = sum + array [i];
        sum1 = sum / array.length;
    }
    System.out.println (sum1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4101060_4101199_1_24
4101060_4101284_1_10
Title: Find the longest decreasing sequence 
----------------------------------------

public int getDecSeq (double [] data) {
    int curSequence = 1;
    int maxSequence = 1;
    for (int i = 1;
    i <= data.Length - 1; i ++) {
        if (data [i] > data [i - 1]) {
            if (curSequence > maxSequence) {
                maxSequence = curSequence;
            }
            curSequence = 1;
        } else {
            curSequence += 1;
        }
    }
    if (curSequence > maxSequence) {
        maxSequence = curSequence;
    }
    return maxSequence;
}
----------------------------------------

public static int getDecSeq (int [] data) {
    int currentSeq = 1, longestSeq = 1;
    for (int i = 1;
    i < data.length; i ++) {
        currentSeq = (data [i] < data [i - 1]) ? currentSeq + 1 : 1;
        if (currentSeq > longestSeq) longestSeq = currentSeq;

    }
    return longestSeq;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41039930_41040347_8_30
41039930_41040492_10_32
Title: Java Vowel count using Collection 
----------------------------------------

public void evaluator () {
    int vn = 0;
    String vowel = "";
    List < String > vowels = new ArrayList < > ();
    List < String > vowelsList = Arrays.asList (s.split (""));
    Iterator < String > it = vowelsList.iterator ();
    while (it.hasNext ()) {
        vowel = it.next ();
        switch (vowel) {
            case "a" :
            case "e" :
            case "i" :
            case "o" :
            case "u" :
            case "y" :
            case "w" :
                vn ++;
                vowels.add (vowel);
        }
    }
    System.out.println ("Number of vowels is " + vn);
    System.out.println ("Vowels are " + vowels);
}
----------------------------------------

public void evaluator () {
    Collections.addAll (list, s.split (""));
    int vn = 0;
    String vowel;
    List < String > vowels = new ArrayList < String > ();
    Iterator < String > it = list.iterator ();
    while (it.hasNext ()) {
        vowel = it.next ();
        System.out.println ("Vowel is: " + vowel);
        switch (vowel) {
            case "a" :
            case "e" :
            case "i" :
            case "o" :
            case "u" :
            case "y" :
                vn ++;
                vowels.add (vowel);
        }
    }
    System.out.println ("Number of vowels is " + vn);
    System.out.println ("Vowels are " + vowels);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41048954_41051207_146_168
41048954_41051207_88_99
Title: JLabel's setText() method not working properly 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JButton button = ((JButton) e.getSource ());
    for (int x = 0;
    x < 8; x ++) {
        for (int y = 0;
        y < 8; y ++) {
            if (chessBoxes [x] [y] == button) {
                if ((isOnBoard (queensOnBoard, x, y) == false)) {
                    if (queensOnBoard.size () < 8) {
                        button.setIcon (queenPic);
                        queensOnBoard.add (new Boxes (x, y));
                    }
                } else {
                    removeQueen (queensOnBoard, x, y);
                    button.setIcon (null);
                }
            }
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (checkSolution (queensOnBoard) == true) {
        ifNotSafe.setText ("This Solution is correct so far");
        System.out.println ("Solution is correct");
    } else {
        ifNotSafe.setText ("This Solution is incorrect so far");
        System.out.println ("Solution is incorrect");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41050447_41050872_2_12
41050447_41052054_7_22
Title: How do I count the number of occurrences of a char in a Multiple String? 
----------------------------------------

public static void main (String [] args) {
    String str1 = "ABCD  ";
    String str2 = " BDD  ";
    String str3 = "  CDEF";
    String [] reversed = getReversed (str1, str2, str3);
    for (int i = 0;
    i < reversed.length; i ++) {
        String trimedString = reversed [i].trim ();
        System.out.println (findMaxOccurrenceCharValue (trimedString));
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > stringList = new ArrayList < String > ();
    stringList.add ("ABCD");
    stringList.add (" BDD");
    stringList.add ("  CDEF");
    stringList.add ("ABCD");
    char [] [] array = getTwoDimentionArray (stringList);
    for (int i = 0;
    i < array.length; i ++) {
        char [] cs = array [i];
        numberOfCharactorsinString (cs, i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41054047_41054173_1_26
41054047_41054570_1_19
Title: Android ButterKnife NullPointer on binding in CustomAdapter 
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    final Holder holder;
    if (null == convertView) {
        convertView = inflater.inflate (R.layout.contact_list, null);
        holder = new Holder (convertView);
        convertView.setTag (holder);
    } else {
        holder = (Holder) convertView.getTag ();
    }
    holder.tvName.setText (result.get (position));
    holder.img.setImageBitmap (imageId.get (position));
    holder.tvGroup.setText (listGroup.get (position));
    rowView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (context, "You Clicked " + result.get (position), Toast.LENGTH_LONG).show ();
        }}

    );
    return convertView;
}
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    View rowView;
    rowView = inflater.inflate (R.layout.contact_list, null);
    Holder holder = new Holder (rowView);
    holder.tvName.setText (result.get (position));
    holder.img.setImageBitmap (imageId.get (position));
    holder.tvGroup.setText (listGroup.get (position));
    rowView.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (context, "You Clicked " + result.get (position), Toast.LENGTH_LONG).show ();
        }}

    );
    return rowView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41063948_41725109_1_12
41063948_45095953_1_13
Title: how to remove a query parameter from a query string 
----------------------------------------

public String removeQueryParameter (String url, String parameterName) throws URISyntaxException {
    URIBuilder uriBuilder = new URIBuilder (url);
    List < NameValuePair > queryParameters = uriBuilder.getQueryParams ();
    for (Iterator < NameValuePair > queryParameterItr = queryParameters.iterator ();
    queryParameterItr.hasNext ();) {
        NameValuePair queryParameter = queryParameterItr.next ();
        if (queryParameter.getName ().equals (parameterName)) {
            queryParameterItr.remove ();
        }
    }
    uriBuilder.setParameters (queryParameters);
    return uriBuilder.build ().toString ();
}
----------------------------------------

public String removeQueryParameter (String url, String parameterName) throws URISyntaxException {
    URIBuilder uriBuilder = new URIBuilder (url);
    List < NameValuePair > queryParameters = uriBuilder.getQueryParams ().stream ().filter (p -> ! p.getName ().equals (parameterName)).collect (Collectors.toList ());
    if (queryParameters.isEmpty ()) {
        uriBuilder.removeQuery ();
    } else {
        uriBuilder.setParameters (queryParameters);
    }
    return uriBuilder.build ().toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41071669_41071822_6_59
41071669_41072010_4_50
Title: How do you allow the user to input negative numbers into an array and change starting index? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    Map < Integer, Integer > occur = new HashMap < > ();
    for (int i = - 25;
    i <= 25; i ++) {
        occur.put (i, 0);
    }
    for (;;) {
        System.out.println ("Enter an integer (Enter quit to quit)");
        String input = sc.nextLine ();
        if (input.equals ("quit")) {
            break;
        }
        int n = Integer.parseInt (input);
        if (n > 25 || n < - 25) {
            System.out.println ("Number was out of range, ignoring...");
            continue;
        }
        occur.put (n, occur.get (n) + 1);
    }
    System.out.println ("All Numbers entered:");
    for (int i = - 25;
    i <= 25; i ++) {
        for (int spc = 4 - Integer.toString (i).length ();
        spc > 0; spc --) {
            System.out.print (" ");
        }
        System.out.print (i);
    }
    System.out.println ();
    System.out.println ("All Occurrences: ");
    for (Map.Entry entry : occur.entrySet ()) {
        for (int spc = 4 - entry.getValue ().toString ().length ();
        spc > 0; spc --) {
            System.out.print (" ");
        }
        System.out.print (entry.getValue ());
    }
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int [] occur = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    int [] nums = {- 25, - 24, - 23, - 22, - 21, - 20, - 19, - 18, - 17, - 16, - 15, - 14, - 13, - 12, - 11, - 10, - 9, - 8, - 7, - 6, - 5, - 4, - 3, - 2, - 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    for (;;) {
        System.out.println ("Enter an integer between -25 to 25 (00 to quit)");
        String input = sc.next ();
        if (input.equals ("00")) {
            break;
        }
        int n = 0;
        try {
            n = Integer.valueOf (input);
        } catch (Exception e) {
            continue;
        }
        if (n > 25 || n < - 25) {
            System.out.println ("Out of range");
            continue;
        }
        occur [25 + n] = occur [25 + n] + 1;
    }
    System.out.println ("All Occurrences: ");
    for (int i = 0;
    i < nums.length; i ++) {
        System.out.println (nums [i] + ":" + occur [i]);
    }
    System.out.println ();
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41071787_41071874_1_15
41071787_41071885_1_13
Title: Java: Searching through unsorted integer array and returning how many numbers are greater 
----------------------------------------

public static int arrayIndex (int [] a) {
    Scanner user_input = new Scanner (System.in);
    System.out.println ("Enter a value to search: ");
    int userSearch = user_input.nextInt ();
    int numberOfCount = 0;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > userSearch) {
            ++ numberOfCount;
        }
    }
    return numberOfCount;
}
----------------------------------------

public static int arrayIndex (int userSearch, int [] a) {
    Scanner user_input = new Scanner (System.in);
    int count = 0;
    System.out.println ("Enter a value to search: ");
    userSearch = user_input.nextInt ();
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > userSearch) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41073652_41074282_2_23
41073652_41083541_16_60
Title: REST API | Jersey jar | 405 error 
----------------------------------------

public static void main (String a []) {
    Client client = ClientBuilder.newClient ();
    WebTarget resource = client.target ("https://endpoint-url/Resource");
    Form form = new Form ();
    form.param ("name", "bond");
    form.param ("ID", "007");
    Builder request = (Builder) resource.request ();
    request.accept (MediaType.APPLICATION_JSON);
    Response response = request.post (Entity.entity (form, MediaType.APPLICATION_FORM_URLENCODED));
    if (response.getStatusInfo ().getFamily () == Family.SUCCESSFUL) {
        System.out.println ("Success! " + response.getStatus ());
        System.out.println (response.readEntity (String.class));
    } else {
        System.out.println ("ERROR! " + response.getStatus ());
        System.out.println (response.readEntity (String.class));
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        URL targetUrl = new URL (targetURL);
        HttpURLConnection httpConnection = (HttpURLConnection) targetUrl.openConnection ();
        httpConnection.setDoOutput (true);
        httpConnection.setRequestMethod ("POST");
        httpConnection.setRequestProperty ("Content-Type", "application/json");
        String input = "{\"name\":\"bond\",\"Id\":007}";
        OutputStream outputStream = httpConnection.getOutputStream ();
        outputStream.write (input.getBytes ());
        outputStream.flush ();
        if (httpConnection.getResponseCode () != 200) {
            throw new RuntimeException ("Failed : HTTP error code : " + httpConnection.getResponseCode ());
        }
        BufferedReader responseBuffer = new BufferedReader (new InputStreamReader ((httpConnection.getInputStream ())));
        String output;
        System.out.println ("Output from Server:\n");
        while ((output = responseBuffer.readLine ()) != null) {
            System.out.println (output);
        }
        httpConnection.disconnect ();
    } catch (MalformedURLException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41079184_41079272_1_17
41079184_41079351_43_53
Title: Check input string to int 
----------------------------------------

public static boolean isValidNumber (String str) {
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (! (c >= '0' && c <= '9')) {
            if (i > 0) {
                return false;
            }
            if (c != '-' && c != '+') {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------

public static boolean isValidNumber (String number) {
    for (int i = 0;
    i < number.length (); i ++) {
        char c = number.charAt (i);
        if (c >= '0' && c <= '9') {
            continue;
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41083864_41083897_1_15
41083864_41084281_1_29
Title: Retrieving String Values through Integer values 
----------------------------------------

public static void main (String [] args) {
    HashMap < Integer, ArrayList < String > > duration_to_activity_map = new HashMap < > ();
    ArrayList < String > activityList = new ArrayList < > ();
    activityList.add ("A");
    activityList.add ("B");
    duration_to_activity_map.put (30, activityList);
    activityList = new ArrayList < > ();
    activityList.add ("C");
    activityList.add ("D");
    duration_to_activity_map.put (60, activityList);
    System.out.println (duration_to_activity_map.toString ());
}
----------------------------------------

public static void main (String [] args) {
    Map < Integer, List < String > > map = new HashMap < Integer, List < String > > ();
    List < String > activityMappings60 = new ArrayList < String > ();
    activityMappings60.add ("Act 1 60min");
    activityMappings60.add ("Act 2 60min");
    List < String > activityMappings15 = new ArrayList < String > ();
    activityMappings15.add ("Act 3 sprint");
    activityMappings15.add ("Act 4 sprint");
    List < String > activityMappings45 = new ArrayList < String > ();
    activityMappings45.add ("Act 5 45min");
    activityMappings45.add ("Act 6 45min");
    map.put (new Integer (60), activityMappings60);
    map.put (new Integer (15), activityMappings15);
    map.put (new Integer (45), activityMappings45);
    List < Integer > arrayInteger = Arrays.asList (60, 60, 15, 45);
    for (Integer i = 0;
    i < arrayInteger.size (); i ++) {
        List < String > list = map.get (arrayInteger.get (i));
        if (list != null && ! list.isEmpty ()) {
            System.out.println (list.remove (0));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41085195_41087153_52_65
41085195_41087153_70_86
Title: Android App stops after savedInstanceState is implemented 
----------------------------------------

public void onClick (View v) {
    edCourse1.setText ("");
    edCourse2.setText ("");
    edCourse3.setText ("");
    edCourse4.setText ("");
    AlertDialog.Builder d = new AlertDialog.Builder (AddCourse.this);
    d.setTitle ("Success");
    d.setMessage ("Courses have been added");
    d.setPositiveButton ("OK", null);
}
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder c = new AlertDialog.Builder (AddCourse.this);
    c.setTitle ("Confirmation");
    c.setMessage ("Would you like to clear all fields?");
    c.setPositiveButton ("YES", new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int which) {
            edCourse1.setText ("");
            edCourse2.setText ("");
            edCourse3.setText ("");
            edCourse4.setText ("");
        }}

    );
    c.setNegativeButton ("NO", null);
    c.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41085912_41086657_5_62
41085912_41092175_5_33
Title: JavaFX BorderPane right side all height 
----------------------------------------

@Override
public void start (Stage primaryStage) {
    GridPane gridPane = new GridPane ();
    RowConstraints rConstranits1 = new RowConstraints ();
    rConstranits1.setVgrow (Priority.NEVER);
    RowConstraints rConstranits2 = new RowConstraints ();
    rConstranits2.setVgrow (Priority.ALWAYS);
    RowConstraints rConstranits3 = new RowConstraints ();
    rConstranits3.setVgrow (Priority.NEVER);
    ColumnConstraints cConstraints1 = new ColumnConstraints ();
    cConstraints1.setHgrow (Priority.NEVER);
    ColumnConstraints cConstraints2 = new ColumnConstraints ();
    cConstraints2.setHgrow (Priority.ALWAYS);
    ColumnConstraints cConstraints3 = new ColumnConstraints ();
    cConstraints3.setHgrow (Priority.NEVER);
    gridPane.getColumnConstraints ().addAll (cConstraints1, cConstraints2, cConstraints3);
    gridPane.getRowConstraints ().addAll (rConstranits1, rConstranits2, rConstranits3);
    Region top = new Region ();
    top.setPrefSize (300, 100);
    setBackground (top, Color.RED);
    Region bottom = new Region ();
    bottom.setPrefSize (400, 50);
    setBackground (bottom, Color.YELLOW);
    Region center = new Region ();
    setBackground (center, Color.BLUE);
    Region right = new Region ();
    setBackground (right, Color.LIME);
    right.setPrefSize (200, 500);
    Region left = new Region ();
    setBackground (left, Color.BROWN);
    left.setPrefSize (200, 400);
    gridPane.add (right, 2, 0, 1, 3);
    cConstraints3.maxWidthProperty ().bind (right.prefWidthProperty ());
    cConstraints3.minWidthProperty ().bind (right.prefWidthProperty ());
    gridPane.add (top, 0, 0, 2, 1);
    rConstranits1.minHeightProperty ().bind (top.prefHeightProperty ());
    rConstranits1.maxHeightProperty ().bind (top.prefHeightProperty ());
    gridPane.add (bottom, 0, 2, 2, 1);
    rConstranits3.minHeightProperty ().bind (bottom.prefHeightProperty ());
    rConstranits3.maxHeightProperty ().bind (bottom.prefHeightProperty ());
    gridPane.add (center, 1, 1);
    gridPane.add (left, 0, 1);
    cConstraints1.minWidthProperty ().bind (left.prefWidthProperty ());
    cConstraints1.maxWidthProperty ().bind (left.prefWidthProperty ());
    Scene scene = new Scene (gridPane);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) {
    BorderPane outer = new BorderPane ();
    BorderPane inner = new BorderPane ();
    Region top = new Region ();
    top.setPrefSize (300, 300);
    setBackground (top, Color.RED);
    Region bottom = new Region ();
    bottom.setPrefSize (400, 200);
    setBackground (bottom, Color.YELLOW);
    Region right = new Region ();
    setBackground (right, Color.BLUE);
    right.setPrefSize (200, 500);
    inner.setCenter (top);
    inner.setBottom (bottom);
    outer.setCenter (inner);
    outer.setRight (right);
    Scene s = new Scene (outer);
    primaryStage.setScene (s);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41090670_41090793_1_14
41090670_41090879_25_45
Title: Java Bubble Sort Algorithm Implementation 
----------------------------------------

public int [] bubbleSort (int [] arr) {
    int size = arr.length;
    for (int pass = 1;
    pass < size; pass ++) {
        for (int i = 0;
        i < size - pass; i ++) {
            if (arr [i] > arr [i + 1]) {
                int temp = arr [i];
                arr [i] = arr [i + 1];
                arr [i + 1] = temp;
            }
        }
    }
    return arr;
}
----------------------------------------

public static void bubbleSort (int [] randomNumbers) {
    int n = randomNumbers.length;
    int temp = 0;
    for (int i = 0;
    i < n; i ++) {
        for (int j = 1;
        j < (n - 1); j ++) {
            if (randomNumbers [j - 1] > randomNumbers [j]) {
                temp = randomNumbers [j - 1];
                randomNumbers [j - 1] = randomNumbers [j];
                randomNumbers [j] = temp;
            }
        }
    }
    for (int k = 0;
    k < randomNumbers.length; k ++) {
        System.out.print (randomNumbers [k] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41093551_41093708_44_54
41093551_41093708_74_83
Title: Are Overriden methods in the subclass used for other subclass? 
----------------------------------------

public boolean hit (int row, int column) {
    System.out.printf ("%s: %s%n", getName (), "From Battleship");
    Part newpart = new Part (row, column);
    for (int i = 0;
    i < part.length; i ++) {
        if (part [i].equals (newpart)) {
            part [i].setDestroyed (true);
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean hit (int row, int column) {
    System.out.printf ("%s: %s%n", getName (), "From Minesweeper");
    double random = Math.random ();
    if (random > 0.5) {
        super.hit (row, column);
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41107860_41108019_1_10
41107860_41108465_1_22
Title: Check parameters of method with 6 input Boolean parameters 
----------------------------------------

public boolean method (boolean b1, boolean b2, boolean b3, boolean b4, boolean b5, boolean b6) {
    boolean [] array = {b1, b2, b3, b4, b5, b6};
    int count = 0;
    for (boolean item : array) {
        if (item) {
            count ++;
        }
    }
    return count == 2;
}
----------------------------------------

public boolean method (boolean a, boolean b, boolean c, boolean d, boolean e, boolean f) {
    if ((a || b || c) && (d || e || f)) {
        return true;
    } else if ((a || b || c)) {
        if (a && b) {
            return true;
        } else if (b && c) {
            return true;
        } else if (a && c) {
            return true;
        }

    } else if ((d || e || f)) {
        if (d && e) {
            return true;
        } else if (e && f) {
            return true;
        } else if (d && f) {
            return true;
        }

    }

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41111822_41112126_5_20
41111822_41112221_1_11
Title: A simple cypher program in java 
----------------------------------------

public static void main (String [] args) {
    hMap.put ("1", "a");
    hMap.put ("2", "b");
    hMap.put ("3", "c");
    String [] numo = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26",};
    for (int i = 0;
    i < numo.length; i ++) {
        numo [i] = hMap.get (numo [i]);
        System.out.println (numo [i]);
    }
}
----------------------------------------

public static void main (String args []) {
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i = 1;
    i <= 25; i ++) {
        int cypher = i * i + 1;
        map.put (i, cypher);
    }
    map.values ().stream ().forEach (cypher -> System.out.println (cypher));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4111210_4111239_7_17
4111210_4111242_11_23
Title: Find largest common subsequence 
----------------------------------------

private static int score (char [] a, char [] b, int i, int j) {
    if (i == a.length || j == b.length) {
        return 0;
    } else if (a [i] == b [j]) {
        return 1 + score (a, b, i + 1, j + 1);
    } else {
        return max (score (a, b, i + 1, j), score (a, b, i, j + 1));
    }

}
----------------------------------------

public static int score (final String gene1, final String gene2) {
    final char [] a;
    final char [] b;
    final int s;
    a = gene1.toCharArray ();
    b = gene2.toCharArray ();
    s = score (a, b, 0, 0);
    return (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4111210_4111239_7_17
4111210_4111242_25_68
Title: Find largest common subsequence 
----------------------------------------

private static int score (char [] a, char [] b, int i, int j) {
    if (i == a.length || j == b.length) {
        return 0;
    } else if (a [i] == b [j]) {
        return 1 + score (a, b, i + 1, j + 1);
    } else {
        return max (score (a, b, i + 1, j), score (a, b, i, j + 1));
    }

}
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }

    return (value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4111210_4111242_11_23
4111210_4111242_25_68
Title: Find largest common subsequence 
----------------------------------------

public static int score (final String gene1, final String gene2) {
    final char [] a;
    final char [] b;
    final int s;
    a = gene1.toCharArray ();
    b = gene2.toCharArray ();
    s = score (a, b, 0, 0);
    return (s);
}
----------------------------------------

private static int score (final char [] a, final char [] b, final int idxA, final int idxB) {
    final int value;
    if (idxA >= a.length || idxB >= b.length) {
        value = 0;
    } else if (a [idxA] == b [idxB]) {
        value = 1 + score (a, b, idxA + 1, idxB + 1);
    } else {
        final int x;
        final int y;
        x = score (a, b, idxA + 1, idxB);
        y = score (a, b, idxB, idxB + 1);
        value = max (x, y);
    }

    return (value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41116503_41116747_1_10
41116503_41117122_1_15
Title: RecyclerView show data from 2 different layouts 
----------------------------------------

@Override
public RecyclerView.ViewHolder onCreateViewHolder (ViewGroup parent, int viewType) {
    if (viewType == VIEWHOLDER1) {
        View v = LayoutInflater.from (activity).inflate (R.layout.layout1, parent, false);
        return new ViewHolder1 (v);
    } else if (viewType == VIEWHOLDER2) {
        View v = LayoutInflater.from (activity).inflate (R.layout.layout2, parent, false);
        return new ViewHolder2 (v);
    }

}
----------------------------------------

@Override
public RecyclerView.ViewHolder onCreateViewHolder (ViewGroup parent, int viewType) {
    RecyclerView.ViewHolder vh = null;
    if (viewType == 1) {
        View view = LayoutInflater.from (parent.getContext ()).inflate (R.layout.recyclerview_layout_one, parent, false);
        vh = new MyViewHolder_LayoutOne (view);
    } else if (viewType == 2) {
        View view = LayoutInflater.from (parent.getContext ()).inflate (R.layout.recyclerview_layout_two, parent, false);
        vh = new MyViewHolder_LayoutTwo (view);
    }

    return vh;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41128240_41128345_1_10
41128240_41128403_1_10
Title: Java Count the x's in a given string recusively 
----------------------------------------

public int countX (String str) {
    if (str.length () == 0) {
        return 0;
    } else if (str.charAt (0) == 'x') {
        return 1 + countX (str.substring (1));
    } else {
        assert str.charAt (0) != 'x';
        return countX (str.substring (1));
    }

}
----------------------------------------

public int countX (String str) {
    int sum = 0;
    if (str.length () - 1 != 0) {
        sum = countX (str.substring (1));
        if (str.charAt (0) == 'x') {
            sum += 1;
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41128240_41128345_1_10
41128240_41128453_1_11
Title: Java Count the x's in a given string recusively 
----------------------------------------

public int countX (String str) {
    if (str.length () == 0) {
        return 0;
    } else if (str.charAt (0) == 'x') {
        return 1 + countX (str.substring (1));
    } else {
        assert str.charAt (0) != 'x';
        return countX (str.substring (1));
    }

}
----------------------------------------

public static int countX (final String str) {
    if (str.length () == 0) {
        return 0;
    } else if (str.length () == 1) {
        return str.charAt (0) == 'x' ? 1 : 0;
    }

    return str.charAt (0) == 'x' ? 1 + countX (str.substring (1)) : countX (str.substring (1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41128240_41128403_1_10
41128240_41128453_1_11
Title: Java Count the x's in a given string recusively 
----------------------------------------

public int countX (String str) {
    int sum = 0;
    if (str.length () - 1 != 0) {
        sum = countX (str.substring (1));
        if (str.charAt (0) == 'x') {
            sum += 1;
        }
    }
    return sum;
}
----------------------------------------

public static int countX (final String str) {
    if (str.length () == 0) {
        return 0;
    } else if (str.length () == 1) {
        return str.charAt (0) == 'x' ? 1 : 0;
    }

    return str.charAt (0) == 'x' ? 1 + countX (str.substring (1)) : countX (str.substring (1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41128487_41129067_1_29
41128487_41129190_1_34
Title: Using BufferedReader to read a paragraph from a text file 
----------------------------------------

public static void getDailyHoroscope () throws IOException {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please input your zodiac sign:");
    String sign = sc.nextLine ();
    String file = ".txt file";
    try {
        BufferedReader br = new BufferedReader (new FileReader (file));
        String line;
        boolean print = false;
        while ((line = br.readLine ()) != null) {
            if ((! print) && line.trim ().equalsIgnoreCase (sign)) {
                print = true;
            }
            if (print) {
                if (line.trim ().isEmpty ()) {
                    print = false;
                }
                System.out.println (line);
            }
        }
        br.close ();
    } catch (FileNotFoundException e) {
        System.out.println ("Cannot find" + file);
    }
}
----------------------------------------

public static void getDailyHoroscope () throws IOException {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please input your zodiac sign:");
    String sign = sc.nextLine ();
    String file = "C:/Users/Laptop/Downloads/horoscope.txt";
    sc.close ();
    try {
        BufferedReader br = new BufferedReader (new FileReader (file));
        String line;
        boolean existSign = false;
        while ((line = br.readLine ()) != null) {
            if (line.equalsIgnoreCase (sign)) {
                br.readLine ();
                line = br.readLine ();
                while (line != null && ! (line.isEmpty ())) {
                    System.out.println ("\n" + line);
                    line = br.readLine ();
                }
                existSign = true;
                break;
            }
        }
        if (! existSign) System.out.println ("Please input zodiac sign which exists");

        br.close ();
    } catch (FileNotFoundException e) {
        System.out.println ("Cannot find" + file);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41136528_41136880_1_18
41136528_41136986_1_12
Title: Find the count occurrence of a given number in a list best solution 
----------------------------------------

private static void findCountOfNumber (final List < List < Number > > lists, final Number num) {
    for (List < Number > list : lists) {
        int count = 0;
        for (Number number : list) {
            if (number == num) count ++;

        }
        if (count == 0) {
            System.err.printf ("Number %d is not common", num);
        } else {
            System.out.println ("List have-" + count);
        }
    }
}
----------------------------------------

private static void findCountOfNumber (final List < List < Number > > lists, final Number num) {
    int count = 0, listNumber = 0;
    for (List < Number > list : lists) {
        listNumber ++;
        count = Collections.frequency (list, num);
        if (count == 0) {
            System.err.printf ("Number %d is not common in list %d", num, listNumber);
        } else {
            System.out.println ("List " + listNumber + " has count : " + count);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41151018_41151213_27_47
41151018_41151368_31_48
Title: Calling variable outside of class 
----------------------------------------

public void calculate () {
    switch (operation) {
        case 1 :
            System.out.println (myCalculator.addNumbers (quantity1, quantity2));
        case 2 :
            System.out.println (myCalculator.subtractNumbers (quantity1, quantity2));
        case 3 :
            System.out.println (myCalculator.multiplyNumbers (quantity1, quantity2));
        case 4 :
            System.out.println (myCalculator.divideNumbers (quantity1, quantity2));
        case 5 :
            System.exit (0);
    }
}
----------------------------------------

public void calculate () {
    switch (operation) {
        case 1 :
            System.out.println (addNumbers (operand1, operand2));
            break;
        case 2 :
            System.out.println (subtractNumbers (operand1, operand2));
            break;
        case 3 :
            System.out.println (multiplyNumbers (operand1, operand2));
            break;
        case 4 :
            System.out.println (divideNumbers (operand1, operand2));
            break;
        default :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41154081_41154191_1_12
41154081_41154249_1_11
Title: How to convert a string to uppercase without using the toUpperCase method? 
----------------------------------------

public String toUpperCase (String str) {
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if ('a' <= c && c <= 'z') {
            chars [i] = (char) (c - 'a' + 'A');
        }
    }
    return new String (chars);
}
----------------------------------------

public static String toUpperCase (String s) {
    String str = "";
    for (int x = 0;
    x < s.length (); x ++) {
        char ch = s.charAt (x);
        if (ch >= 'a' && ch <= 'z') str += "" + (char) (ch - 32);
        else str += "" + ch;

    }
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41154081_41154191_1_12
41154081_41154816_1_12
Title: How to convert a string to uppercase without using the toUpperCase method? 
----------------------------------------

public String toUpperCase (String str) {
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        char c = chars [i];
        if ('a' <= c && c <= 'z') {
            chars [i] = (char) (c - 'a' + 'A');
        }
    }
    return new String (chars);
}
----------------------------------------

public static String toUpperCase (String str) {
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        int v = str.charAt (i);
        if (v > 96 && v < 123) {
            v -= 32;
        }
        result += (char) v;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41154081_41154249_1_11
41154081_41154816_1_12
Title: How to convert a string to uppercase without using the toUpperCase method? 
----------------------------------------

public static String toUpperCase (String s) {
    String str = "";
    for (int x = 0;
    x < s.length (); x ++) {
        char ch = s.charAt (x);
        if (ch >= 'a' && ch <= 'z') str += "" + (char) (ch - 32);
        else str += "" + ch;

    }
    return str;
}
----------------------------------------

public static String toUpperCase (String str) {
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        int v = str.charAt (i);
        if (v > 96 && v < 123) {
            v -= 32;
        }
        result += (char) v;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41168319_41172020_12_23
41168319_41172020_28_40
Title: Maintaining sequence in pushing and printing values of two arraylists 
----------------------------------------

public void changed (ObservableValue < ? extends String > observable, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            if (newValue != null) {
                title.add (newValue);
            }
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends String > ov, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            if (title.size () == titleUrl.size () + 1) {
                titleUrl.add (newValue);
            }
            locationTextField.setText (newValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41173494_41173937_3_35
41173494_41173962_1_17
Title: multiply chars by numbers in string 
----------------------------------------

public static void main (String [] args) {
    String txt = "a10b10";
    char ch;
    char tempChar = ' ';
    int temp = - 1;
    for (int i = 0;
    i < txt.length (); i ++) {
        ch = txt.charAt (i);
        if (((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z'))) {
            temp = - 1;
            tempChar = ch;
        } else if (ch >= '0' && ch <= '9') {
            int count = Character.getNumericValue (ch);
            if (temp != - 1) {
                count = ((10 * temp) - temp);
            }
            for (int j = 0;
            j < count; j ++) {
                System.out.print (tempChar);
            }
            temp = count;
        } else {
            System.out.println ("not a letter");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    String txt = "a3b10";
    String patt = "([a-z])([0-9]*)";
    Pattern pattern = Pattern.compile (patt);
    Matcher matcher = pattern.matcher (txt);
    while (matcher.find ()) {
        String letter = matcher.group (1);
        String number = matcher.group (2);
        int num = Integer.valueOf (number);
        while (num > 0) {
            System.out.print (letter);
            num --;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41175632_41176329_20_94
41175632_41180125_1_29
Title: JavaFX autoresize & auto-position 
----------------------------------------

public void start (Stage primaryStage) {
    GridPane calendar = new GridPane ();
    for (DayOfWeek dayOfWeek = DayOfWeek.MONDAY;
    dayOfWeek.getValue () <= DayOfWeek.FRIDAY.getValue (); dayOfWeek = DayOfWeek.of (dayOfWeek.getValue () + 1)) {
        Label label = new Label (dayOfWeek.toString ());
        label.setAlignment (Pos.CENTER);
        label.setMaxSize (Double.MAX_VALUE, Double.MAX_VALUE);
        label.setStyle ("-fx-background-color: black, darkgray; -fx-background-insets: 0, 0 0 1 1 ;");
        calendar.add (label, dayOfWeek.getValue (), 0);
    }
    DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern ("hh:mm");
    int rowCount = 0;
    for (LocalTime time = LocalTime.of (8, 0);
    time.isBefore (LocalTime.of (17, 0)); time = time.plusMinutes (30)) {
        rowCount ++;
        Label label = new Label (timeFormatter.format (time));
        label.setMaxSize (Double.MAX_VALUE, Double.MAX_VALUE);
        label.setAlignment (Pos.CENTER);
        String color = rowCount % 2 == 0 ? "darkgray" : "lightgray";
        label.setStyle ("-fx-background-color: black, " + color + "; -fx-background-insets: 0, 0 0 1 1;");
        calendar.add (label, 0, rowCount);
    }
    for (int x = 1;
    x <= 5; x ++) {
        for (int y = 1;
        y <= rowCount; y ++) {
            Region region = new Region ();
            String color = y % 2 == 0 ? "darkgray" : "lightgray";
            region.setStyle ("-fx-background-color: black, " + color + "; -fx-background-insets: 0, 0 0 1 1 ;");
            calendar.add (region, x, y);
        }
    }
    for (int x = 0;
    x <= 5; x ++) {
        ColumnConstraints cc = new ColumnConstraints ();
        cc.setPercentWidth (100.0 / 6);
        cc.setFillWidth (true);
        calendar.getColumnConstraints ().add (cc);
    }
    for (int y = 0;
    y <= rowCount; y ++) {
        RowConstraints rc = new RowConstraints ();
        rc.setPercentHeight (100.0 / (rowCount + 1));
        rc.setFillHeight (true);
        calendar.getRowConstraints ().add (rc);
    }
    DayOfWeek appointmentDay = DayOfWeek.FRIDAY;
    LocalTime startTime = LocalTime.of (10, 0);
    LocalTime endTime = LocalTime.of (13, 0);
    String appointmentText = "Fridays need really long coffee breaks";
    Label appointment = new Label (appointmentText);
    appointment.setTooltip (new Tooltip (appointmentText));
    appointment.setWrapText (true);
    appointment.setMaxSize (Double.MAX_VALUE, Double.MAX_VALUE);
    appointment.setStyle ("-fx-background: red; -fx-background-color: -fx-background; ");
    GridPane.setMargin (appointment, new Insets (2, 5, 2, 2));
    Scene scene = new Scene (calendar, 600, 600);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) {
    Region region1 = new Region ();
    VBox.setVgrow (region1, Priority.ALWAYS);
    region1.setStyle ("-fx-background-color: blue;");
    Region region2 = new Region ();
    VBox.setVgrow (region2, Priority.ALWAYS);
    region2.setStyle ("-fx-background-color: lime;");
    Region regionOverlay = new Region ();
    regionOverlay.setStyle ("-fx-background-color: red;");
    regionOverlay.setManaged (false);
    VBox root = new VBox (region1, region2, regionOverlay);
    root.layoutBoundsProperty ().addListener ((observable, oldValue, newValue) -> {
        regionOverlay.setPrefSize (newValue.getWidth () - 20, newValue.getHeight () / 3);
        regionOverlay.setLayoutX (10);
        regionOverlay.setLayoutY (newValue.getHeight () / 2);
        regionOverlay.autosize ();
    });
    root.setPrefSize (400, 400);
    Scene scene = new Scene (root);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41181863_41182196_7_34
41181863_41182253_1_26
Title: Name and age application with specific output using arrays and output 
----------------------------------------

public static void main (String [] args) {
    String [] name = new String [10];
    int [] age = new int [10];
    Scanner in = new Scanner (System.in);
    String NAME_REQUEST = "Please enter name";
    String AGE_REQUEST = "Please enter age";
    int count = 0;
    while (count < 10) {
        System.out.println (NAME_REQUEST);
        String nameInput = in.next ();
        if (nameInput.equalsIgnoreCase ("done")) {
            break;
        }
        name [count] = nameInput;
        System.out.println (AGE_REQUEST);
        age [count] = in.nextInt ();
        count ++;
    }
    int [] minAndMaxIndex = findMinAndMaxIndex (age, count);
    System.out.println ("Youngest Person: " + name [minAndMaxIndex [0]]);
    System.out.println ("Oldest Person: " + name [minAndMaxIndex [1]]);
}
----------------------------------------

public static void main (String [] args) {
    int youngest = 0, older = 0;
    String [] name = new String [10];
    int [] age = new int [10];
    String NAME_REQUEST = ("Please enter name");
    String AGE_REQUEST = ("Please enter age");
    for (int i = 0;
    i < 10; i ++) {
        Scanner in = new Scanner (System.in);
        System.out.println (NAME_REQUEST);
        String tmpName = in.nextLine ();
        if (tmpName.equalsIgnoreCase ("done")) break;

        name [i] = tmpName;
        System.out.println (AGE_REQUEST);
        age [i] = in.nextInt ();
        if (age [i] > age [older]) older = i;

        if (age [i] < age [youngest]) youngest = i;

    }
    System.out.println ("OLDER is  : " + name [older]);
    System.out.println ("Younger : " + name [youngest]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41187364_41188057_1_11
41187364_41188220_1_11
Title: How to do more comparisons in compareTo()? 
----------------------------------------

@Override
public int compareTo (Songs o) {
    int compare;
    if ((compare = this.getSinger ().compareTo (o.getSinger ())) != 0) {
        return compare;
    } else if ((compare = this.getTitle ().compareTo (o.getTitle ())) != 0) {
        return compare;
    }

    return this.getYear () - o.getYear ();
}
----------------------------------------

@Override
public int compareTo (Songs song) {
    int val = 0;
    if (! singer.equals (song.getSinger ())) {
        return singer.compareTo (song.getSinger ());
    } else if (! title.equals (song.getTitle ())) {
        return title.compareTo (song.getTitle ());
    } else {
        return - 1 * song.getYear ().compareTo (year);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41197010_41197066_6_21
41197010_41306598_4_28
Title: Make the product of two most maximum value in array(Java) 
----------------------------------------

public static void main (String args []) {
    double array [] = {2, 98, 1, 5, 3, 6};
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [j] > array [i]) {
                double temp = array [i];
                array [i] = array [j];
                array [j] = temp;
            }
        }
    }
    double product = array [0] * array [1];
    System.out.println (product);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double [] array = new double [5];
    for (int i = 0;
    i < 5; i ++) {
        array [i] = scan.nextDouble ();
    }
    double max = array [0];
    for (int i = 1;
    i < 5; i ++) {
        if (array [i] > max) {
            max = array [i];
        }
    }
    double prev = array [0];
    for (int i = 1;
    i < 5; i ++) {
        if (array [i] > prev && array [i] < max) {
            prev = array [i];
        }
    }
    System.out.println (max * prev);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41198379_41200394_1_21
41198379_42483184_26_61
Title: Sorting Version Numbers 
----------------------------------------

public static int compareVersion (String version1, String version2) {
    String [] arr1 = version1.split ("\\.");
    String [] arr2 = version2.split ("\\.");
    if (arr1.length < arr2.length) return - 1;

    if (arr1.length > arr2.length) return 1;

    for (int i = 0;
    i < arr1.length; i ++) {
        if (Integer.parseInt (arr1 [i]) < Integer.parseInt (arr2 [i])) return - 1;

        if (Integer.parseInt (arr1 [i]) > Integer.parseInt (arr2 [i])) return 1;

    }
    return 0;
}
----------------------------------------

public static int compareVersion (String version1, String version2) {
    String [] arr1 = version1.split ("\\.");
    String [] arr2 = version2.split ("\\.");
    try {
        int i = 0;
        while (i < arr1.length || i < arr2.length) {
            if (i < arr1.length && i < arr2.length) {
                if (Integer.parseInt (arr1 [i]) < Integer.parseInt (arr2 [i])) {
                    return - 1;
                } else if (Integer.parseInt (arr1 [i]) > Integer.parseInt (arr2 [i])) {
                    return 1;
                } else if (Integer.parseInt (arr1 [i]) == Integer.parseInt (arr2 [i])) {
                    int result = specialCompare (version1, version2);
                    if (result != 0) {
                        return result;
                    }
                }

            } else if (i < arr1.length) {
                if (Integer.parseInt (arr1 [i]) != 0) {
                    return 1;
                }
            } else if (i < arr2.length) {
                if (Integer.parseInt (arr2 [i]) != 0) {
                    return - 1;
                }
            }

            i ++;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41198379_42483184_1_23
41198379_48946673_4_35
Title: Sorting Version Numbers 
----------------------------------------

@Override
public int compare (String o1, String o2) {
    if (o1 == null && o2 == null) {
        return 0;
    } else if (o1 == null && o2 != null) {
        return - 1;
    } else if (o1 != null && o2 == null) {
        return 1;
    } else {
        if (o1.length () == 0 && o2.length () == 0) {
            return 0;
        } else if (o1.length () == 0 && o2.length () > 0) {
            return - 1;
        } else if (o1.length () > 0 && o2.length () == 0) {
            return 1;
        } else {
            return compareVersion (o1, o2);
        }

    }

}
----------------------------------------

public final int compare (String o1, String o2) {
    if (o1 == null || o2 == null) return o1 == null ? o2 == null ? 0 : - 1 : 1;

    String [] split1 = NUMBERS.split (o1);
    String [] split2 = NUMBERS.split (o2);
    for (int i = 0;
    i < Math.min (split1.length, split2.length); i ++) {
        char c1 = split1 [i].charAt (0);
        char c2 = split2 [i].charAt (0);
        int cmp = 0;
        if (c1 >= '0' && c1 <= '9' && c2 >= 0 && c2 <= '9') cmp = new BigInteger (split1 [i]).compareTo (new BigInteger (split2 [i]));

        if (cmp == 0) cmp = split1 [i].compareTo (split2 [i]);

        if (cmp != 0) return cmp;

    }
    return split1.length - split2.length;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41201304_41201421_1_18
41201304_41201521_5_52
Title: How to use a String inside a Switch Statement in Java 
----------------------------------------

public static void main (String [] args) {
    boolean digitEntered = false;
    String input = "You enetred number : ";
    while (digitEntered == false) {
        System.out.print ("Type a number between 0 and 9 : ");
        Scanner scan = new Scanner (System.in);
        int x = scan.nextInt ();
        if (x >= 0 && x <= 9) {
            digitEntered = true;
            input += x;
        } else {
            System.out.println ("Your number was bigger than 9 ");
        }
    }
    System.out.println (input);
}
----------------------------------------

public static void main (String [] args) {
    tryagain : while (true) {
        System.out.print ("Type a number between 0 and 9 : ");
        Scanner scan = new Scanner (System.in);
        int x = scan.nextInt ();
        int output = x;
        input = "You enetred number : ";
        switch (x) {
            case 0 :
                input += output;
                break tryagain;
            case 1 :
                input += output;
                break tryagain;
            case 2 :
                input += output;
                break tryagain;
            case 3 :
                input += output;
                break tryagain;
            case 4 :
                input += output;
                break tryagain;
            case 5 :
                input += output;
                break tryagain;
            case 6 :
                input += output;
                break tryagain;
            case 7 :
                input += output;
                break tryagain;
            case 8 :
                input += output;
                break tryagain;
            case 9 :
                input += output;
                break tryagain;
            default :
                System.out.println ("Your number was bigger than 9 ");
                break;
        }
    }
    System.out.println (input);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41202746_41202808_1_10
41202746_41202840_3_25
Title: Iterate through a 3d array? 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    int [] [] [] array = new int [9] [3] [3];
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array [i].length; j ++) {
            for (int k = 0;
            k < array [i] [j].length; k ++) {
                System.out.println ("[" + i + "][" + j + "][" + k + "]:" + array [i] [j] [k]);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] [] board = new int [3] [3] [9];
    for (int i = 0;
    i < 3; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            System.out.println (board [0] [i] [j]);
        }
    }
    for (int i = 0;
    i < 3; i ++) {
        for (int j = 0;
        j < 9; j ++) {
            System.out.println (board [i] [1] [j]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41209434_41217008_37_48
41209434_41217008_87_98
Title: Multiple buttons/textviews on a single xml code 
----------------------------------------

public void onClick (View view) {
    TextView txt = (TextView) view;
    myDisplayText.setText ("PRESS " + txt.getTag ().toString ());
    if (count < 24) {
        createView ();
    } else {
        dialogBox ();
    }
}
----------------------------------------

public void onClick (View view) {
    TextView txt = (TextView) view;
    myDisplayText.setText ("PRESS " + txt.getTag ().toString ());
    if (count < 24) {
        createView ();
    } else {
        dialogBox ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41212636_41212717_1_11
41212636_41212802_1_10
Title: Creating a recursive sequence in Java? 
----------------------------------------

public static void createSequence (int n) {
    if (n == 0) {
        System.out.println (n);
        return;
    } else {
        System.out.println (n);
        createSequence (n - 1);
        System.out.println (- n);
    }
}
----------------------------------------

public static void createSequence (int n) {
    if (n == 0) {
        System.out.println (0);
        return;
    } else {
        System.out.println (n);
        createSequence (n - 1);
        System.out.println (n * - 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41213937_41214138_13_21
41213937_41214138_23_31
Title: How to make sure each thread works on different process object to avoid thread safety issue? 
----------------------------------------

public ProcessHandler (ProcessA process, int poolSize) {
    this.executorServiceProcess = Executors.newFixedThreadPool (poolSize);
    Runtime.getRuntime ().addShutdownHook (shutdownHook);
    for (int i = 0;
    i < poolSize; i ++) {
        ProcessA p = new ProcessA (process.getName (), process.getProperties ());
        processes.add (p);
        executorServiceProcess.submit (p);
    }
}
----------------------------------------

public ProcessHandler (ProcessB process, int poolSize) {
    this.executorServiceProcess = Executors.newFixedThreadPool (poolSize);
    Runtime.getRuntime ().addShutdownHook (shutdownHook);
    for (int i = 0;
    i < poolSize; i ++) {
        ProcessB p = new ProcessB (process.getName (), process.getProperties ());
        processes.add (p);
        executorServiceProcess.submit (p);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41219269_41219349_1_20
41219269_41219919_1_22
Title: Changing between items in drawer menu android 
----------------------------------------

@Override
public boolean onNavigationItemSelected (MenuItem item) {
    int id = item.getItemId ();
    if (id == R.id.nav_home) {
        getSupportFragmentManager.beginTransaction ().replace (containerId, yourFragmentInstance).commit ();
    } else if (id == R.id.nav_points) {
    } else if (id == R.id.nav_coupons) {
    } else if (id == R.id.nav_about) {
    }

    DrawerLayout drawer = (DrawerLayout) findViewById (R.id.drawer_layout);
    drawer.closeDrawer (GravityCompat.START);
    return true;
}
----------------------------------------

public boolean onNavigationItemSelected (MenuItem item) {
    FragmentTransaction fragmentTransaction = getSupportFragmentManager ().beginTransaction ();
    Fragment fragment = null;
    int id = item.getItemId ();
    if (id == R.id.nav_home) {
        fragment = new HomeFragment ();
    } else if (id == R.id.nav_points) {
        fragment = new PointFragment ();
    } else if (id == R.id.nav_coupons) {
        fragment = new CouponFragment ();
    } else if (id == R.id.nav_about) {
        fragment = new AboutFragment ();
    }

    fragmentTransaction.replace (containerId, fragment, fragment.getClass ().getSimpleName ());
    fragmentTransaction.commit ();
    DrawerLayout drawer = (DrawerLayout) findViewById (R.id.drawer_layout);
    drawer.closeDrawer (GravityCompat.START);
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41229438_41230592_168_304
41229438_41230592_309_322
Title: Error on getting values from an array in a thread (JAVA GUI SLOT MACHINE GAME) 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    Thread thread1 = new Thread (new Runnable () {
        Reel spinner1 = new Reel ();
        Symbol [] url1 = spinner1.spin ();
        @Override
        public void run () {
            for (Symbol symbol : url1) {
                try {
                    ImageIcon a = symbol.getImage ();
                    Thread.sleep (100);
                    val1 = symbol.getValue ();
                    SwingUtilities.invokeLater (new Runnable () {
                        @Override
                        public void run () {
                            symLbl.setIcon (a);
                        }}

                    );
                } catch (InterruptedException ex) {
                    Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
                }
            }
        }}

    );
    picVal1 = val1;
    System.out.println (picVal1);
    Thread thread2 = new Thread (new Runnable () {
        Reel spinner2 = new Reel ();
        Symbol [] url2 = spinner2.spin ();
        @Override
        public void run () {
            for (Symbol symbol : url2) {
                try {
                    ImageIcon a = symbol.getImage ();
                    Thread.sleep (100);
                    val2 = symbol.getValue ();
                    SwingUtilities.invokeLater (new Runnable () {
                        @Override
                        public void run () {
                            symLb2.setIcon (a);
                        }}

                    );
                } catch (InterruptedException ex) {
                    Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
                }
            }
        }}

    );
    picVal1 = val2;
    System.out.println (picVal1);
    Thread thread3 = new Thread (new Runnable () {
        Reel spinner3 = new Reel ();
        Symbol [] url3 = spinner3.spin ();
        @Override
        public void run () {
            for (Symbol symbol : url3) {
                try {
                    ImageIcon a = symbol.getImage ();
                    Thread.sleep (100);
                    val3 = symbol.getValue ();
                    SwingUtilities.invokeLater (new Runnable () {
                        @Override
                        public void run () {
                            symLb3.setIcon (a);
                        }}

                    );
                } catch (InterruptedException ex) {
                    Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
                }
            }
        }}

    );
    picVal3 = val3;
    System.out.println (picVal3);
    System.out.println ();
    Thread resultThread = new Thread (new Runnable () {
        @Override
        public void run () {
            thread1.start ();
            thread2.start ();
            thread3.start ();
            try {
                thread1.join ();
                thread2.join ();
                thread3.join ();
                if (val1 == val2 && val2 == val3 && val3 == val1) {
                    System.out.println ("samanaaaaaaai");
                    wonCredit = ((count) * picVal1);
                    creditV += wonCredit;
                    SwingUtilities.invokeLater (new Runnable () {
                        @Override
                        public void run () {
                            creditValLbl.setText (String.valueOf (creditV));
                            betValLbl.setText (String.valueOf (0));
                            JOptionPane.showMessageDialog (startBtn, "You won " + wonCredit + " credits", "!!JACKPOT!!", JOptionPane.PLAIN_MESSAGE);
                        }}

                    );
                }
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }}

    );
    resultThread.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (count < 4) {
        betValLbl.setText (String.valueOf (count));
        creditV --;
        creditValLbl.setText (String.valueOf (creditV));
        count ++;
    } else {
        count --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41229438_41230592_176_196
41229438_41230592_268_300
Title: Error on getting values from an array in a thread (JAVA GUI SLOT MACHINE GAME) 
----------------------------------------

public void run () {
    for (Symbol symbol : url1) {
        try {
            ImageIcon a = symbol.getImage ();
            Thread.sleep (100);
            val1 = symbol.getValue ();
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    symLbl.setIcon (a);
                }}

            );
        } catch (InterruptedException ex) {
            Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------

public void run () {
    thread1.start ();
    thread2.start ();
    thread3.start ();
    try {
        thread1.join ();
        thread2.join ();
        thread3.join ();
        if (val1 == val2 && val2 == val3 && val3 == val1) {
            System.out.println ("samanaaaaaaai");
            wonCredit = ((count) * picVal1);
            creditV += wonCredit;
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    creditValLbl.setText (String.valueOf (creditV));
                    betValLbl.setText (String.valueOf (0));
                    JOptionPane.showMessageDialog (startBtn, "You won " + wonCredit + " credits", "!!JACKPOT!!", JOptionPane.PLAIN_MESSAGE);
                }}

            );
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41229438_41230592_209_229
41229438_41230592_268_300
Title: Error on getting values from an array in a thread (JAVA GUI SLOT MACHINE GAME) 
----------------------------------------

public void run () {
    for (Symbol symbol : url2) {
        try {
            ImageIcon a = symbol.getImage ();
            Thread.sleep (100);
            val2 = symbol.getValue ();
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    symLb2.setIcon (a);
                }}

            );
        } catch (InterruptedException ex) {
            Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------

public void run () {
    thread1.start ();
    thread2.start ();
    thread3.start ();
    try {
        thread1.join ();
        thread2.join ();
        thread3.join ();
        if (val1 == val2 && val2 == val3 && val3 == val1) {
            System.out.println ("samanaaaaaaai");
            wonCredit = ((count) * picVal1);
            creditV += wonCredit;
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    creditValLbl.setText (String.valueOf (creditV));
                    betValLbl.setText (String.valueOf (0));
                    JOptionPane.showMessageDialog (startBtn, "You won " + wonCredit + " credits", "!!JACKPOT!!", JOptionPane.PLAIN_MESSAGE);
                }}

            );
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41229438_41230592_240_259
41229438_41230592_268_300
Title: Error on getting values from an array in a thread (JAVA GUI SLOT MACHINE GAME) 
----------------------------------------

public void run () {
    for (Symbol symbol : url3) {
        try {
            ImageIcon a = symbol.getImage ();
            Thread.sleep (100);
            val3 = symbol.getValue ();
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    symLb3.setIcon (a);
                }}

            );
        } catch (InterruptedException ex) {
            Logger.getLogger (SlotMachineGUI.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------

public void run () {
    thread1.start ();
    thread2.start ();
    thread3.start ();
    try {
        thread1.join ();
        thread2.join ();
        thread3.join ();
        if (val1 == val2 && val2 == val3 && val3 == val1) {
            System.out.println ("samanaaaaaaai");
            wonCredit = ((count) * picVal1);
            creditV += wonCredit;
            SwingUtilities.invokeLater (new Runnable () {
                @Override
                public void run () {
                    creditValLbl.setText (String.valueOf (creditV));
                    betValLbl.setText (String.valueOf (0));
                    JOptionPane.showMessageDialog (startBtn, "You won " + wonCredit + " credits", "!!JACKPOT!!", JOptionPane.PLAIN_MESSAGE);
                }}

            );
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41229923_41230409_27_49
41229923_41232929_11_31
Title: What is the correct syntax for validating user input? 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Input as follows; ");
    System.out.println ("Home team : Away team : Home score : Away score");
    String str = scanner.nextLine ();
    String array [] = str.split (":");
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i].equals (" ")) {
            ismissing (i);
            System.exit (0);
        }
    }
    System.out.println ("Correct Input");
}
----------------------------------------

public static void main (String [] args) {
    numberOfGames = GetUserInt ("How many games do you want to enter - 100 or less: ");
    if (numberOfGames > 100) numberOfGames = 100;

    allGames = new Game [numberOfGames];
    for (int i = 0;
    i < numberOfGames; i ++) {
        homeTeam = GetUserString ("Enter the home team name: ");
        homeScore = GetUserInt ("Enter the home team score: ");
        awayTeam = GetUserString ("Enter the away team name: ");
        awayScore = GetUserInt ("Enter the away team score: ");
        allGames [i] = new Game (homeTeam, homeScore, awayTeam, awayScore);
    }
    for (Game curGame : allGames) {
        if (curGame != null) System.out.println (curGame.toString ());

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41231097_41231442_1_11
41231097_41231580_1_11
Title: implementing method getMessages java 
----------------------------------------

public List < Message > getMessages () {
    List < Message > temp = null;
    for (Message m : inbox) {
        if (m.getStatus.PENDING) {
            temp.add (m);
        }
    }
    return temp;
}
----------------------------------------

public List < Message > getMessages () {
    List < Message > messageList = new ArrayList < Message > ();
    for (Message message : YOUR_MESSAGE_LIST) {
        if (! message.isRead ()) {
            messageList.add (message);
        }
    }
    return messageList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41239299_41239634_1_20
41239299_41239786_2_27
Title: How do I test the user's input to see if its words are within a specified range 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("\t\tPlease enter the maximum: ");
    int max = input.nextInt ();
    System.out.print ("\t\tPlease enter the minimum: ");
    int min = input.nextInt ();
    System.out.print ("enter: ");
    Scanner lineInput = new Scanner (System.in);
    String word = lineInput.nextLine ();
    String [] lengthword = word.split ("\\s+");
    int countwords = lengthword.length;
    if (countwords <= max && countwords >= min) {
        System.out.println ("YAY!!!!!!!!! YOU'RE WTHIN THE RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    } else {
        System.out.println ("Ohh!!!!!!!!! YOU'RE Not in RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("\t\tPlease enter the maximum: ");
    int max = input.nextInt ();
    System.out.print ("\t\tPlease enter the minimum: ");
    int min = input.nextInt ();
    System.out.print ("enter: ");
    input.nextLine ();
    String word = input.nextLine ();
    System.out.print (word);
    int countwords = 0;
    for (int i = 0;
    i < word.length (); i ++) {
        if (word.charAt (i) == ' ') {
            countwords ++;
        }
    }
    countwords ++;
    System.out.println (countwords);
    if (countwords <= max && countwords >= min) {
        System.out.println ("YAY!!!!!!!!! YOU'RE WTHIN THE RAAAANGE!!!!!!!!!!!!!!!!!!!!!!!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41259861_41260124_1_17
41259861_41260239_1_11
Title: Check for a valid double in Java 
----------------------------------------

private boolean isDouble (String str) {
    try {
        double x = Double.parseDouble (str);
        if (x == (int) x) return false;

        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}
----------------------------------------

private boolean isDouble (String str) {
    try {
        double myDouble = Double.parseDouble (str);
        myDouble -= (int) myDouble;
        return myDouble != (double) 0.00;
    } catch (NumberFormatException e) {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41277460_41277543_1_12
41277460_41277629_1_12
Title: How do I check if a string contains keywords? 
----------------------------------------

static int keywordsChecker (String shortEssay, String keywords) {
    int count = 0;
    String [] ary = keywords.split (",");
    for (int i = 0;
    i < ary.length; i ++) {
        if (shortEssay.contains (ary [i])) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

static int keywordsChecker (String shortEssay, String keywords) {
    int count = 0;
    String [] ary = keywords.split (",");
    for (int i = 0;
    i < ary.length; i ++) {
        if (shortEssay.contains (ary [i])) {
            count ++;
        }
    }
    System.out.println (count);
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41277460_41277543_1_12
41277460_41277688_1_11
Title: How do I check if a string contains keywords? 
----------------------------------------

static int keywordsChecker (String shortEssay, String keywords) {
    int count = 0;
    String [] ary = keywords.split (",");
    for (int i = 0;
    i < ary.length; i ++) {
        if (shortEssay.contains (ary [i])) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

static int keywordsChecker (String shortEssay, String keywords) {
    int count = 0;
    String [] ary = keywords.split (",");
    for (int i = 0;
    i < ary.length; i ++) {
        if (shortEssay.contains (ary [i])) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41284354_41284608_13_23
41284354_41284608_1_11
Title: Recursive Fibonacci using BigInteger in Java 
----------------------------------------

private static BigInteger fibonacci (BigInteger n, Map < BigInteger, BigInteger > computedValues) {
    if (computedValues.containsKey (n)) return computedValues.get (n);

    BigInteger n1 = n.subtract (BigInteger.ONE);
    BigInteger n2 = n.subtract (BigInteger.ONE).subtract (BigInteger.ONE);
    computedValues.put (n1, fibonacci (n1, computedValues));
    computedValues.put (n2, fibonacci (n2, computedValues));
    BigInteger newValue = computedValues.get (n1).add (computedValues.get (n2));
    computedValues.put (n, newValue);
    return newValue;
}
----------------------------------------

public static BigInteger fibonacci (BigInteger n) {
    if (n.compareTo (BigInteger.valueOf (3L)) < 0) {
        return BigInteger.ONE;
    }
    Map < BigInteger, BigInteger > computedValues = new HashMap < BigInteger, BigInteger > ();
    computedValues.put (BigInteger.ONE, BigInteger.ONE);
    computedValues.put (BigInteger.valueOf (2L), BigInteger.ONE);
    return fibonacci (n, computedValues);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41286059_41439823_1_20
41286059_41439823_22_36
Title: SparseBooleanArray.equals() not working as expected 
----------------------------------------

public static boolean equals (SparseArray arrayOne, SparseArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        }
        final Object valueOne = arrayOne.valueAt (i);
        final Object valueTwo = arrayTwo.valueAt (i);
        if (valueOne != null && ! valueOne.equals (valueTwo)) {
            return false;
        } else if (valueTwo != null && ! valueTwo.equals (valueOne)) {
            return false;
        }

    }
    return true;
}
----------------------------------------

public static boolean equals (SparseBooleanArray arrayOne, SparseBooleanArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        } else if (arrayOne.valueAt (i) != arrayTwo.valueAt (i)) {
            return false;
        }

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41286059_41439823_1_20
41286059_41439823_38_52
Title: SparseBooleanArray.equals() not working as expected 
----------------------------------------

public static boolean equals (SparseArray arrayOne, SparseArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        }
        final Object valueOne = arrayOne.valueAt (i);
        final Object valueTwo = arrayTwo.valueAt (i);
        if (valueOne != null && ! valueOne.equals (valueTwo)) {
            return false;
        } else if (valueTwo != null && ! valueTwo.equals (valueOne)) {
            return false;
        }

    }
    return true;
}
----------------------------------------

public static boolean equals (SparseIntArray arrayOne, SparseIntArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        } else if (arrayOne.valueAt (i) != arrayTwo.valueAt (i)) {
            return false;
        }

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41286059_41439823_22_36
41286059_41439823_38_52
Title: SparseBooleanArray.equals() not working as expected 
----------------------------------------

public static boolean equals (SparseBooleanArray arrayOne, SparseBooleanArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        } else if (arrayOne.valueAt (i) != arrayTwo.valueAt (i)) {
            return false;
        }

    }
    return true;
}
----------------------------------------

public static boolean equals (SparseIntArray arrayOne, SparseIntArray arrayTwo) {
    if (arrayOne == arrayTwo) {
        return true;
    } else if (arrayOne.size () != arrayTwo.size ()) {
        return false;
    }

    for (int i = 0;
    i < arrayOne.size (); i ++) {
        if (arrayOne.keyAt (i) != arrayTwo.keyAt (i)) {
            return false;
        } else if (arrayOne.valueAt (i) != arrayTwo.valueAt (i)) {
            return false;
        }

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41287372_41292220_186_209
41287372_41292220_86_169
Title: How to take snapshot of selected area of screen in javafx? 
----------------------------------------

public void handle (long timestamp) {
    frameCount ++;
    if (frameCount >= 5) {
        stop ();
        BufferedImage image;
        int [] rect = getRectangleBounds ();
        try {
            image = new Robot ().createScreenCapture (new Rectangle (rect [0], rect [1], rect [2], rect [3]));
        } catch (AWTException ex) {
            Logger.getLogger (getClass ().getName ()).log (Level.INFO, null, ex);
            return;
        } finally {
            mainCanvas.setDisable (false);
        }
        captureService.startService (image);
    }
}
----------------------------------------

public void handle (long nanos) {
    System.out.println ("TimeStamp: " + nanos + " Current: " + nextSecond);
    System.out.println ("Milliseconds Delay: " + precisionLevel / 1_000_000);
    if (nanos >= nextSecond) {
        nextSecond = nanos + precisionLevel;
        if (model.rightPressed.get ()) {
            if (model.shiftPressed.get ()) {
                if (model.mouseXNow > model.mouseXPressed) {
                    model.mouseXPressed += 1;
                } else {
                    model.mouseXNow += 1;
                }
            } else {
                if (model.mouseXNow > model.mouseXPressed) {
                    model.mouseXNow += 1;
                } else {
                    model.mouseXPressed += 1;
                }
            }
        }
        if (model.leftPressed.get ()) {
            if (model.shiftPressed.get ()) {
                if (model.mouseXNow > model.mouseXPressed) {
                    model.mouseXPressed -= 1;
                } else {
                    model.mouseXNow -= 1;
                }
            } else {
                if (model.mouseXNow > model.mouseXPressed) {
                    model.mouseXNow -= 1;
                } else {
                    model.mouseXPressed -= 1;
                }
            }
        }
        if (model.upPressed.get ()) {
            if (model.shiftPressed.get ()) {
                if (model.mouseYNow > model.mouseYPressed) {
                    model.mouseYNow -= 1;
                } else {
                    model.mouseYPressed -= 1;
                }
            } else {
                if (model.mouseYNow > model.mouseYPressed) {
                    model.mouseYPressed -= 1;
                } else {
                    model.mouseYNow -= 1;
                }
            }
        }
        if (model.downPressed.get ()) {
            if (model.shiftPressed.get ()) {
                if (model.mouseYNow > model.mouseYPressed) {
                    model.mouseYNow += 1;
                } else {
                    model.mouseYPressed += 1;
                }
            } else {
                if (model.mouseYNow > model.mouseYPressed) {
                    model.mouseYPressed += 1;
                } else {
                    model.mouseYNow += 1;
                }
            }
        }
        repaintCanvas ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41294181_41294412_8_22
41294181_41294440_1_21
Title: number of paths in a binary tree with a given sum 
----------------------------------------

public static int pathSum (TreeNode root, int sum, int count, ArrayList < Integer > arr) {
    arr.add (root.val);
    int acc = 0;
    for (int i = arr.size () - 1;
    i >= 0; i --) {
        acc += arr.get (i);
        if (acc == sum) count ++;

    }
    if (root.left != null) count = pathSum (root.left, sum, count, arr);

    if (root.right != null) count = pathSum (root.right, sum, count, arr);

    arr.remove (arr.size () - 1);
    return count;
}
----------------------------------------

public static int pathSum (TreeNode root, int sum, boolean tamperedSum) {
    int path = 0;
    if (root.val == sum) path = 1;

    if (root.left == null && root.right == null) return path;

    if (root.left != null) {
        path += pathSum (root.left, sum - root.val, true);
        if (! tamperedSum) path += pathSum (root.left, sum, false);

    }
    if (root.right != null) {
        path += pathSum (root.right, sum - root.val, true);
        if (! tamperedSum) path += pathSum (root.right, sum, false);

    }
    return path;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41298422_41298813_29_50
41298422_41298915_1_43
Title: String value time zone sorting 
----------------------------------------

public int compareTo (Object object) {
    TimeZoneModel timezoneModel = null;
    if (object instanceof TimeZoneModel) {
        timezoneModel = (TimeZoneModel) object;
    }
    if (timezoneModel.getValue () != null) {
        char sign = timezoneModel.getValue ().charAt (0);
        if (sign == '+') {
            if (value.charAt (0) == '+') return value.compareTo (timezoneModel.getValue ());
            else return - 1;

        } else if (sign == '-') if (value.charAt (0) == '-') return - value.compareTo (timezoneModel.getValue ());
        else return 1;

    }
    return "".compareTo (value);
}
----------------------------------------

@Override
public int compareTo (Object object) {
    TimeZoneModel timezoneModel = null;
    Double val1 = 0d;
    Double val2 = 0d;
    if (object instanceof TimeZoneModel) {
        timezoneModel = (TimeZoneModel) object;
        String strVal = timezoneModel.getValue ();
        if (strVal != null) {
            strVal = strVal.replace (":", ".");
            if (strVal.contains ("-")) {
                val1 = Double.valueOf (strVal.replace ("-", ""));
                val1 = val1 * - 1;
            } else {
                val1 = Double.valueOf (strVal.replace ("+", ""));
            }
        }
        String value = this.value.replace (":", ".");
        if (value.contains ("-")) {
            val2 = Double.valueOf (value.replace ("-", ""));
            val2 = val2 * - 1;
        } else {
            val2 = Double.valueOf (value.replace ("+", ""));
        }
    }
    return val2.compareTo (val1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41298980_41300013_127_180
41298980_41300013_58_122
Title: How to create a new sheet in an excel file using apache poi in selenium webdriver with java 
----------------------------------------

public String getCellData (String sheetName, int colNum, int rowNum) {
    try {
        if (rowNum <= 0) return "";

        int index = workbook.getSheetIndex (sheetName);
        if (index == - 1) return "";

        sheet = workbook.getSheetAt (index);
        row = sheet.getRow (rowNum - 1);
        if (row == null) return "";

        cell = row.getCell (colNum);
        if (cell == null) return "";

        if (cell.getCellType () == Cell.CELL_TYPE_STRING) return cell.getStringCellValue ();
        else if (cell.getCellType () == Cell.CELL_TYPE_NUMERIC || cell.getCellType () == Cell.CELL_TYPE_FORMULA) {
            String cellText = String.valueOf (cell.getNumericCellValue ());
            if (HSSFDateUtil.isCellDateFormatted (cell)) {
                double d = cell.getNumericCellValue ();
                Calendar cal = Calendar.getInstance ();
                cal.setTime (HSSFDateUtil.getJavaDate (d));
                cellText = (String.valueOf (cal.get (Calendar.YEAR))).substring (2);
                cellText = cal.get (Calendar.MONTH) + 1 + "/" + cal.get (Calendar.DAY_OF_MONTH) + "/" + cellText;
            }
            return cellText;
        } else if (cell.getCellType () == Cell.CELL_TYPE_BLANK) return "";
        else return String.valueOf (cell.getBooleanCellValue ());

    } catch (Exception e) {
        e.printStackTrace ();
        return "row " + rowNum + " or column " + colNum + " does not exist  in xls";
    }
}
----------------------------------------

public String getCellData (String sheetName, String colName, int rowNum) {
    try {
        if (rowNum <= 0) return "";

        int index = workbook.getSheetIndex (sheetName);
        int col_Num = - 1;
        if (index == - 1) return "";

        sheet = workbook.getSheetAt (index);
        row = sheet.getRow (0);
        for (int i = 0;
        i < row.getLastCellNum (); i ++) {
            if (row.getCell (i).getStringCellValue ().trim ().equals (colName.trim ())) col_Num = i;

        }
        if (col_Num == - 1) return "";

        sheet = workbook.getSheetAt (index);
        row = sheet.getRow (rowNum - 1);
        if (row == null) return "";

        cell = row.getCell (col_Num);
        if (cell == null) return "";

        if (cell.getCellType () == Cell.CELL_TYPE_STRING) return cell.getStringCellValue ();
        else if (cell.getCellType () == Cell.CELL_TYPE_NUMERIC || cell.getCellType () == Cell.CELL_TYPE_FORMULA) {
            String cellText = String.valueOf (cell.getNumericCellValue ());
            if (HSSFDateUtil.isCellDateFormatted (cell)) {
                double d = cell.getNumericCellValue ();
                Calendar cal = Calendar.getInstance ();
                cal.setTime (HSSFDateUtil.getJavaDate (d));
                cellText = (String.valueOf (cal.get (Calendar.YEAR))).substring (2);
                cellText = cal.get (Calendar.DAY_OF_MONTH) + "/" + cal.get (Calendar.MONTH) + 1 + "/" + cellText;
            }
            return cellText;
        } else if (cell.getCellType () == Cell.CELL_TYPE_BLANK) return "";
        else return String.valueOf (cell.getBooleanCellValue ());

    } catch (Exception e) {
        e.printStackTrace ();
        return "row " + rowNum + " or column " + colName + " does not exist in xls";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41300740_41300835_1_14
41300740_41301078_5_16
Title: Test to see if input is a positive integer 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    int value = - 1;
    do {
        System.out.print ("Input: ");
        String input = scanner.next ();
        try {
            value = Integer.parseInt (input);
        } catch (NumberFormatException e) {
            System.out.println ("Error, try again: " + input);
        }
    } while (value < 1);
    System.out.println (value + " is a positive integer.");
}
----------------------------------------

public static void main (String [] args) {
    while (true) {
        @SuppressWarnings ("resource")
        Scanner reader = new Scanner (System.in);
        System.out.println ("Enter a number: ");
        String input = reader.next ();
        tryParseInt (input);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41300740_41300835_1_14
41300740_41301269_6_21
Title: Test to see if input is a positive integer 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    int value = - 1;
    do {
        System.out.print ("Input: ");
        String input = scanner.next ();
        try {
            value = Integer.parseInt (input);
        } catch (NumberFormatException e) {
            System.out.println ("Error, try again: " + input);
        }
    } while (value < 1);
    System.out.println (value + " is a positive integer.");
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Input: ");
    String value = "";
    boolean positiveIntegerNoDecimals = false;
    while (positiveIntegerNoDecimals == false) {
        value = scanner.next ();
        positiveIntegerNoDecimals = isPositiveIntegerNoDecimals (value);
        if (positiveIntegerNoDecimals == false) System.out.print ("Error, try again:");

    }
    System.out.println (value + " is a positive integer.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41300740_41301078_5_16
41300740_41301269_6_21
Title: Test to see if input is a positive integer 
----------------------------------------

public static void main (String [] args) {
    while (true) {
        @SuppressWarnings ("resource")
        Scanner reader = new Scanner (System.in);
        System.out.println ("Enter a number: ");
        String input = reader.next ();
        tryParseInt (input);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Input: ");
    String value = "";
    boolean positiveIntegerNoDecimals = false;
    while (positiveIntegerNoDecimals == false) {
        value = scanner.next ();
        positiveIntegerNoDecimals = isPositiveIntegerNoDecimals (value);
        if (positiveIntegerNoDecimals == false) System.out.print ("Error, try again:");

    }
    System.out.println (value + " is a positive integer.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41315187_41315226_1_16
41315187_41315613_1_14
Title: Selection sort algorithm problems 
----------------------------------------

public static void selectionSort (int [] arrayToSort) {
    int smallest;
    for (int i = 0;
    i < arrayToSort.length; i ++) {
        smallest = i;
        for (int j = i + 1;
        j < arrayToSort.length; j ++) {
            if (arrayToSort [j] < arrayToSort [smallest]) {
                smallest = j;
            }
        }
        if (smallest != i) {
            int temp = arrayToSort [i];
            arrayToSort [i] = arrayToSort [smallest];
            arrayToSort [smallest] = temp;
        }
    }
}
----------------------------------------

public static void selectionSort (int [] arr) {
    for (int i = 0;
    i < arr.length - 1; i ++) {
        int index = i;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [j] < arr [index]) {
                index = j;
            }
        }
        int smallerNumber = arr [index];
        arr [index] = arr [i];
        arr [i] = smallerNumber;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41318904_41318920_1_13
41318904_41318956_24_42
Title: Bubble Sort is returning the same array again? 
----------------------------------------

public static int [] SwapSort (int [] array, int length) {
    int temp;
    for (int i = 0;
    i < length - 1; i ++) {
        for (int j = i + 1;
        j < length; j ++) {
            if (array [i] > array [j]) {
                temp = array [i];
                array [i] = array [j];
                array [j] = temp;
            }
        }
    }
    return array;
}
----------------------------------------

public static int [] SwapSort (int [] array, int length) {
    int temp;
    for (int i = 0;
    i < length; i ++) {
        for (int j = 1;
        j < length; j ++) {
            if (array [i] > array [j]) {
                temp = array [i];
                array [i] = array [j];
                array [j] = temp;
            }
        }
    }
    System.out.println ("");
    for (int i = 0;
    i < length; i ++) {
        System.out.print (array [i] + ", ");
    }
    System.out.println ();
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41336187_41336363_2_14
41336187_41336397_5_18
Title: "java error cannot find symbol when using System.in.read(buffer 0 255)" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("请在下面输入一行字符 ：\n");
    byte [] buffer = new byte [256];
    try {
        System.in.read (buffer, 0, 255);
    } catch (Exception e) {
        System.out.println ("读取输入字符出错，错误信息为 ：" + e.toString () + "\n");
    }
    System.out.println ("您刚才输入的一行字符为 ：\n");
    String inputStr = new String (buffer, 0);
    System.out.println (inputStr);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("请在下面输入一行字符 ：\n");
    BufferedReader br;
    String inputLine = "";
    try {
        br = new BufferedReader (new InputStreamReader (System.in));
        inputLine = br.readLine ();
    } catch (Exception e) {
        System.out.println ("读取输入字符出错，错误信息为 ：" + e.toString () + "\n");
    }
    System.out.println ("您刚才输入的一行字符为 ：\n" + inputLine);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41337516_41337581_1_17
41337516_41337582_10_28
Title: Reversing some words in a string 
----------------------------------------

public static String spinWords (String sentence) {
    String [] splitWords = sentence.split (" ");
    String reversedSentence = "";
    String reversedWord;
    for (String str : splitWords) {
        if (str.length () >= 5) {
            reversedWord = "";
            for (int i = str.length () - 1;
            i >= 0; i --) {
                reversedWord += (str.charAt (i));
            }
            reversedSentence += " " + reversedWord;
        } else {
            reversedSentence += " " + str;
        }
    }
    return reversedSentence;
}
----------------------------------------

public static String spinWords (String sentence) {
    String [] splitWords = sentence.split (" ");
    String reversedSentence = "";
    StringBuilder sb = new StringBuilder ();
    String space = "";
    String reversedWord = "";
    for (String str : splitWords) {
        if (str.length () >= 5) {
            for (int i = str.length () - 1;
            i >= 0; i --) {
                reversedWord += (str.charAt (i));
            }
            sb.append (space + reversedWord);
        } else {
            sb.append (space + str);
        }
        space = " ";
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41340145_41340762_5_26
41340145_41340861_5_18
Title: Two different outputs 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int No = sc.nextInt ();
    int fNo1 = 1;
    int fNo2 = 1;
    int fNo3 = fNo1 + fNo2;
    int sumofEvenNo = 0;
    int i;
    while (fNo3 < No) {
        if (fNo3 % 2 == 0) sumofEvenNo += fNo3;

        fNo1 = fNo2;
        fNo2 = fNo3;
        fNo3 = fNo1 + fNo2;
    }
    System.out.println ("Sum of all even nos = " + sumofEvenNo);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program will calculate the even sum of given fibonacci series index ( index starts at 1) ");
    System.out.println ("Please enter how many times do you want to calculate the sum: ");
    Scanner scan = new Scanner (System.in);
    int iterationTimes = scan.nextInt ();
    for (; iterationTimes > 0; iterationTimes --) {
        System.out.println ("Please, enter the index on fibonacci: ");
        System.out.println ("Even sum: " + getEvenSum (scan.nextInt ()));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41362358_41362506_1_24
41362358_41366704_5_25
Title: "After filtering the list if want to check original list returns wrong list size" 
----------------------------------------

@Override
protected FilterResults performFiltering (CharSequence constraint) {
    final FilterResults oReturn = new FilterResults ();
    final ArrayList < Merchants > results = new ArrayList < > ();
    if (charSequence != null && charSequence.length () > 0) {
        if (baselist != null && baselist.size () > 0) {
            for (final Merchants g : baselist) {
                if (g.getKirana_name ().contains (constraint.toString ()) || g.getMerchant_address ().contains (constraint.toString ())) results.add (g);

            }
        }
        oReturn.values = results;
        oReturn.count = results.size ();
    } else {
        oReturn.values = baselist;
        oReturn.count = baselist.size ();
    }
    return oReturn;
}
----------------------------------------

protected FilterResults performFiltering (CharSequence constraint) {
    final FilterResults oReturn = new FilterResults ();
    final ArrayList < Merchants > results = new ArrayList < > ();
    if (TextUtils.isEmpty (constraint)) {
        oReturn.values = baselist == null ? new ArrayList () : baselist;
        return oReturn.values;
    }
    if (constraint != null) {
        if (baselist != null && baselist.size () > 0) {
            for (final Merchants g : baselist) {
                if (g.getKirana_name ().contains (constraint.toString ()) || g.getMerchant_address ().contains (constraint.toString ())) results.add (g);

            }
        }
        oReturn.values = results;
    }
    return oReturn;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_15355427_4_18
4138827_34081338_6_44
Title: Check string for palindrome 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("ENTER YOUR STRING: ");
    String a = in.nextLine ();
    System.out.println ("GIVEN STRING IS: " + a);
    StringBuffer str = new StringBuffer (a);
    StringBuffer str2 = new StringBuffer (str.reverse ());
    String s2 = new String (str2);
    System.out.println ("THE REVERSED STRING IS: " + str2);
    if (a.equals (s2)) System.out.println ("ITS A PALINDROME");
    else System.out.println ("ITS NOT A PALINDROME");

}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String str = in.nextLine ();
    int x = str.length ();
    if (x % 2 != 0) {
        for (int i = 0;
        i < x / 2; i ++) {
            if (str.charAt (i) == str.charAt (x - 1 - i)) {
                continue;
            } else {
                System.out.println ("String is not a palindrom");
                break;
            }
        }
    } else {
        for (int i = 0;
        i <= x / 2; i ++) {
            if (str.charAt (i) == str.charAt (x - 1 - i)) {
                continue;
            } else {
                System.out.println ("String is not a palindrom");
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_15355427_4_18
4138827_41305719_4_30
Title: Check string for palindrome 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("ENTER YOUR STRING: ");
    String a = in.nextLine ();
    System.out.println ("GIVEN STRING IS: " + a);
    StringBuffer str = new StringBuffer (a);
    StringBuffer str2 = new StringBuffer (str.reverse ());
    String s2 = new String (str2);
    System.out.println ("THE REVERSED STRING IS: " + str2);
    if (a.equals (s2)) System.out.println ("ITS A PALINDROME");
    else System.out.println ("ITS NOT A PALINDROME");

}
----------------------------------------

public static void main (String args []) {
    String original, reverse = "";
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter How Many number of Input you want : ");
    int numOfInt = in.nextInt ();
    original = in.nextLine ();
    do {
        if (numOfInt == 0) {
            System.out.println ("Your Input Conplete");
        } else {
            System.out.println ("Enter a string to check palindrome");
            original = in.nextLine ();
            StringBuffer buffer = new StringBuffer (original);
            reverse = buffer.reverse ().toString ();
            if (original.equalsIgnoreCase (reverse)) {
                System.out.println ("The entered string is Palindrome:" + reverse);
            } else {
                System.out.println ("The entered string is not Palindrome:" + reverse);
            }
        }
        numOfInt --;
    } while (numOfInt >= 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_15355427_4_18
4138827_43512842_10_23
Title: Check string for palindrome 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("ENTER YOUR STRING: ");
    String a = in.nextLine ();
    System.out.println ("GIVEN STRING IS: " + a);
    StringBuffer str = new StringBuffer (a);
    StringBuffer str2 = new StringBuffer (str.reverse ());
    String s2 = new String (str2);
    System.out.println ("THE REVERSED STRING IS: " + str2);
    if (a.equals (s2)) System.out.println ("ITS A PALINDROME");
    else System.out.println ("ITS NOT A PALINDROME");

}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    String str = in.nextLine ();
    str.replaceAll ("\\s+", "");
    Stack < String > stack = new Stack < String > ();
    stack.push (str);
    String str_rev = stack.pop ();
    if (str.equals (str_rev)) {
        System.out.println ("Palindrome");
    } else {
        System.out.println ("Not Palindrome");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_15355427_4_18
4138827_48009569_5_22
Title: Check string for palindrome 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("ENTER YOUR STRING: ");
    String a = in.nextLine ();
    System.out.println ("GIVEN STRING IS: " + a);
    StringBuffer str = new StringBuffer (a);
    StringBuffer str2 = new StringBuffer (str.reverse ());
    String s2 = new String (str2);
    System.out.println ("THE REVERSED STRING IS: " + str2);
    if (a.equals (s2)) System.out.println ("ITS A PALINDROME");
    else System.out.println ("ITS NOT A PALINDROME");

}
----------------------------------------

public static void main (String [] args) {
    String s = "madam";
    String t = "";
    for (int i = s.length () - 1;
    i >= 0; i --) {
        t = t + s.charAt (i);
    }
    System.out.println ("reversed word is " + t);
    if (t.matches (s)) {
        System.out.println ("pallindrome");
    } else {
        System.out.println ("not pallindrome");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_30518998_1_12
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public boolean isPalindrome (String abc) {
    if (abc != null && abc.length () > 0) {
        char [] arr = abc.toCharArray ();
        for (int i = 0;
        i < arr.length / 2; i ++) {
            if (arr [i] != arr [arr.length - 1 - i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_37451272_1_11
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String s) {
    for (int i = 0, j = s.length () - 1;
    i < j; i ++, j --) {
        if (s.charAt (i) != s.charAt (j)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_40329718_1_14
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

private boolean isPalindrome (String s) {
    int length = s.length ();
    if (length < 2) return true;
    else {
        if (s.charAt (0) != s.charAt (length - 1)) return false;
        else return isPalindrome (s.substring (1, length - 1));

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_44201746_1_12
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (String word) {
    String str = "";
    for (int i = word.length () - 1;
    i >= 0; i --) {
        str = str + word.charAt (i);
    }
    if (str.equalsIgnoreCase (word)) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_44334413_1_12
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public int isPalindrome (String a) {
    String ab = a.replaceAll ("[^A-Za-z0-9]", "").toLowerCase ();
    for (int i = 0;
    i < ab.length () / 2; i ++) {
        if (ab.charAt (i) != ab.charAt ((ab.length () - 1) - i)) {
            return 0;
        }
    }
    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_50087122_1_12
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public boolean isPalindrome (String input) {
    char [] inputChars = input.toCharArray ();
    int inputLength = inputChars.length;
    int inputMid = inputLength / 2;
    for (int i = 0;
    i <= inputMid; i ++) {
        if (inputChars [i] != inputChars [inputLength - i - 1]) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_27496424_6_29
4138827_53577305_1_11
Title: Check string for palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

public static boolean isPalindrome (Object obj) {
    String s = String.valueOf (obj);
    for (int left = 0, right = s.length () - 1;
    left < right; left ++, right --) {
        if (s.charAt (left ++) != s.charAt (right --)) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_30518998_1_12
4138827_37451272_1_11
Title: Check string for palindrome 
----------------------------------------

public boolean isPalindrome (String abc) {
    if (abc != null && abc.length () > 0) {
        char [] arr = abc.toCharArray ();
        for (int i = 0;
        i < arr.length / 2; i ++) {
            if (arr [i] != arr [arr.length - 1 - i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

public static boolean isPalindrome (String s) {
    for (int i = 0, j = s.length () - 1;
    i < j; i ++, j --) {
        if (s.charAt (i) != s.charAt (j)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_30518998_1_12
4138827_40329718_1_14
Title: Check string for palindrome 
----------------------------------------

public boolean isPalindrome (String abc) {
    if (abc != null && abc.length () > 0) {
        char [] arr = abc.toCharArray ();
        for (int i = 0;
        i < arr.length / 2; i ++) {
            if (arr [i] != arr [arr.length - 1 - i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

private boolean isPalindrome (String s) {
    int length = s.length ();
    if (length < 2) return true;
    else {
        if (s.charAt (0) != s.charAt (length - 1)) return false;
        else return isPalindrome (s.substring (1, length - 1));

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_30518998_1_12
4138827_44201746_1_12
Title: Check string for palindrome 
----------------------------------------

public boolean isPalindrome (String abc) {
    if (abc != null && abc.length () > 0) {
        char [] arr = abc.toCharArray ();
        for (int i = 0;
        i < arr.length / 2; i ++) {
            if (arr [i] != arr [arr.length - 1 - i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

public static boolean isPalindrome (String word) {
    String str = "";
    for (int i = word.length () - 1;
    i >= 0; i --) {
        str = str + word.charAt (i);
    }
    if (str.equalsIgnoreCase (word)) {
        return true;
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4138827_30518998_1_12
4138827_44334413_1_12
Title: Check string for palindrome 
----------------------------------------

public boolean isPalindrome (String abc) {
    if (abc != null && abc.length () > 0) {
        char [] arr = abc.toCharArray ();
        for (int i = 0;
        i < arr.length / 2; i ++) {
            if (arr [i] != arr [arr.length - 1 - i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
----------------------------------------

public int isPalindrome (String a) {
    String ab = a.replaceAll ("[^A-Za-z0-9]", "").toLowerCase ();
    for (int i = 0;
    i < ab.length () / 2; i ++) {
        if (ab.charAt (i) != ab.charAt ((ab.length () - 1) - i)) {
            return 0;
        }
    }
    return 1;
}
----------------------------------------
