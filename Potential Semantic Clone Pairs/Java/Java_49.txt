$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24049032_24050204_151_167
24049032_24050204_38_58
Title: Java: white frames while painting canvas 
----------------------------------------

public void run () {
    createBufferStrategy (3);
    BufferStrategy bs = null;
    while (running) {
        bs = getBufferStrategy ();
        Graphics g = bs.getDrawGraphics ();
        g.drawImage (bg, 0, 0, getWidth (), getHeight (), null);
        FontMetrics fm = g.getFontMetrics ();
        g.setColor (Color.RED);
        g.drawString (String.valueOf (averageFPS), 0, fm.getAscent ());
        g.dispose ();
        bs.show ();
        tick ();
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    Frame frame = new Frame ("Testing");
    frame.addWindowListener (new WindowAdapter () {
        @Override
        public void windowClosing (WindowEvent e) {
            System.exit (0);
        }}

    );
    Screen screen = new Screen ();
    frame.add (screen);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    screen.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24051701_24051864_14_45
24051701_24055384_8_69
Title: "Given several pairs of dates how to count number of days in between but don't count overlapping days?" 
----------------------------------------

public static void main (String args []) throws ParseException {
    Calendar cal1 = new GregorianCalendar ();
    Calendar cal2 = new GregorianCalendar ();
    SimpleDateFormat sdf = new SimpleDateFormat ("ddMMyyyy");
    Date date = sdf.parse ("07122012");
    cal1.setTime (date);
    date = sdf.parse ("15122012");
    cal2.setTime (date);
    int daysBetween = daysBetween (cal1.getTime (), cal2.getTime ());
    int interval = daysBetween (cal1.getTime (), cal2.getTime ());
    System.out.println ("Interval1 == " + interval);
    date = sdf.parse ("12122012");
    cal1.setTime (date);
    date = sdf.parse ("16122012");
    cal2.setTime (date);
    daysBetween += daysBetween (cal1.getTime (), cal2.getTime ());
    interval = daysBetween (cal1.getTime (), cal2.getTime ());
    System.out.println ("Interval2 == " + interval);
    date = sdf.parse ("16122012");
    cal1.setTime (date);
    date = sdf.parse ("24122012");
    cal2.setTime (date);
    daysBetween += daysBetween (cal1.getTime (), cal2.getTime ());
    interval = daysBetween (cal1.getTime (), cal2.getTime ());
    System.out.println ("Interval3 == " + interval);
    System.out.println ("Total Interval == " + daysBetween);
}
----------------------------------------

public static void main (String args []) {
    String d [] = new String [6];
    d [0] = "7/12/2012";
    d [1] = "15/12/2012";
    d [2] = "12/12/2012";
    d [3] = "16/12/2012";
    d [4] = "16/12/2012";
    d [5] = "24/12/2012";
    int num [] = new int [6];
    int counter = 0;
    for (int i = 0;
    i < d.length; i ++) {
        for (int j = 0;
        j < d [i].length (); j ++) {
            if (d [i].charAt (j) == '/') {
                num [counter] = Integer.parseInt (d [i].substring (0, j));
                counter ++;
                break;
            }
        }
    }
    int sum1 = 0;
    for (int m = 0;
    m < counter - 1; m ++) {
        if (m > 0 && m % 2 != 0) {
            if (num [m + 1] <= num [m]) {
                sum1 = sum1 + (num [m] - num [m + 1] + 1);
            }
        }
    }
    System.out.println ("Number of overlapping days........=" + sum1);
    long sum2 = 0;
    for (int n = 0;
    n < counter - 1; n = n + 2) {
        SimpleDateFormat format = new SimpleDateFormat ("dd/mm/yyyy");
        Date d1 = null;
        Date d2 = null;
        try {
            d1 = format.parse (d [n]);
            d2 = format.parse (d [n + 1]);
            long diff = d2.getTime () - d1.getTime ();
            long diffDays = diff / (24 * 60 * 60 * 1000);
            sum2 = sum2 + diffDays + 1;
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    System.out.println ("Complete Difference = " + sum2);
    System.out.println ("Exact Difference = " + (sum2 - sum1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24061149_24061355_2_18
24061149_24061484_1_16
Title: Find the smallest missing number with Duplicates 
----------------------------------------

public static void main (String [] args) {
    int m = 5;
    int [] data = new int [] {0, 1, 1, 2, 3, 3, 4, 5};
    int current = 0;
    for (int i = 0;
    i < data.length; ++ i) {
        if (current == data [i]) {
            current ++;
        }
    }
    if (current >= m) {
        System.out.println ("All is here");
    } else {
        System.out.println (current);
    }
}
----------------------------------------

public static void main (String [] args) {
    Collection < Integer > input = new LinkedList < Integer > (Arrays.asList (10, 9, 7, 6, 5, 4, 3, 2, 1));
    NavigableSet < Integer > sortedOriginal = new TreeSet < Integer > (input);
    NavigableSet < Integer > numbers = new TreeSet < Integer > ();
    for (int i = sortedOriginal.first ();
    i <= sortedOriginal.last (); i ++) {
        numbers.add (i);
    }
    for (Integer x : numbers) {
        if (! sortedOriginal.contains (x)) {
            System.out.println (x);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2406432_30424041_3_19
2406432_40210480_1_13
Title: Converting an int to a binary string representation in Java? 
----------------------------------------

public static String toBinary (int n, int l) throws Exception {
    double pow = Math.pow (2, l);
    StringBuilder binary = new StringBuilder ();
    if (pow < n) {
        throw new Exception ("The length must be big from number ");
    }
    int shift = l - 1;
    for (; shift >= 0; shift --) {
        int bit = (n>> shift) & 1;
        if (bit == 1) {
            binary.append ("1");
        } else {
            binary.append ("0");
        }
    }
    return binary.toString ();
}
----------------------------------------

public static String toBinary (int number) {
    StringBuilder sb = new StringBuilder ();
    if (number == 0) return "0";

    while (number >= 1) {
        sb.append (number % 2);
        number = number / 2;
    }
    return sb.reverse ().toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2406432_35241540_3_14
2406432_47365175_5_20
Title: Converting an int to a binary string representation in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner d = new Scanner (System.in);
    int n;
    n = d.nextInt ();
    StringBuilder sb = new StringBuilder ();
    while (n > 0) {
        int r = n % 2;
        sb.append (r);
        n = n / 2;
    }
    System.out.println (sb.reverse ());
}
----------------------------------------

public static void main (String [] args) {
    int num;
    String str = "";
    Scanner sc = new Scanner (System.in);
    System.out.print ("Please enter the a number : ");
    num = sc.nextInt ();
    while (num > 0) {
        int y = num % 2;
        str = y + str;
        num = num / 2;
    }
    System.out.println ("The binary conversion is : " + str);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24069210_24069629_52_60
24069210_24069705_9_18
Title: Simple Java multihreading test not working 
----------------------------------------

public void run () {
    count = 0L;
    startTime = System.currentTimeMillis ();
    endTime = startTime;
    while (endTime - startTime < 1000L) {
        count += 1L;
        endTime = System.currentTimeMillis ();
    }
}
----------------------------------------

public void run () {
    while (oneSecondCompleted <= 1) {
        if (oneSecondCompleted == 1) {
            while (oneSecondCompleted == 1) {
                this.value ++;
            }
        }
    }
    System.out.println (Thread.currentThread ().getName () + " Value :" + value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24072670_24072770_13_28
24072670_24072829_1_18
Title: Aid my use of generic data types 
----------------------------------------

public static void main (String [] args) {
    int [] five = new int [] {1, 2, 37};
    int [] ten = new int [] {1, 37, 5};
    float [] fifteen = new float [] {1.0f, 2.2f, 0f, 4f};
    int result1 = linearSearch (five, 37);
    int result2 = linearSearch (ten, 37);
    int result3 = linearSearch (fifteen, 37);
    System.out.println (Arrays.toString (five) + " " + result1);
    System.out.println (Arrays.toString (ten) + " " + result2);
    System.out.println (Arrays.toString (fifteen) + " " + result3);
}
----------------------------------------

public static void main (String [] args) {
    Integer [] five = new Integer [5];
    Integer [] ten = new Integer [10];
    Integer [] fifteen = new Integer [15];
    fillArray (five);
    fillArray (ten);
    fillArray (fifteen);
    int result1 = linearSearch (five, 37);
    int result2 = linearSearch (ten, 37);
    int result3 = linearSearch (fifteen, 37);
    System.out.println (Arrays.toString (five) + " " + result1);
    System.out.println (Arrays.toString (ten) + " " + result2);
    System.out.println (Arrays.toString (fifteen) + " " + result3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24080111_24080295_5_15
24080111_24080417_3_13
Title: Accessing the index position of an object within an Array 
----------------------------------------

public static int get (String sk) {
    int j;
    for (j = 0; j < 3; j ++) {
        if (a [j].equals (sk)) {
            return j;
        }
    }
    return - 1;
}
----------------------------------------

public static int get (String sk, String a [], int n) {
    int j;
    for (j = 0; j < n; j ++) {
        if (a [j].equals (sk)) {
            return j;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24080387_24080968_1_18
24080387_24081015_1_19
Title: Trying to return an array with stored elements (java) 
----------------------------------------

public int [] method (int a) {
    int [] newarray = new int [count];
    for (int i = 1;
    i <= a; i ++) {
        if (a % i == 0) {
            for (int m = 0;
            m < count; m ++) {
                if (newarray [m] == 0) {
                    newarray [m] = a / i;
                    break;
                }
            }
            break;
        }
    }
    return newarray;
}
----------------------------------------

public int [] method (int a) {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 1;
    i <= a; i ++) {
        if (a % i == 0) {
            int value = a / i;
            for (int m = 0;
            m < count; m ++) {
                list.add (value);
            }
        }
    }
    int [] newArray = new int [list.size ()];
    int index = 0;
    for (Integer i : list) {
        newArray [index ++] = i;
    }
    Arrays.sort (newArray);
    return newArray;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24082063_24093256_16_38
24082063_31233737_5_20
Title: Chessboard with automatic resizing 
----------------------------------------

public void start (Stage primaryStage) {
    GridPane root = new GridPane ();
    final int size = 8;
    for (int row = 0;
    row < size; row ++) {
        for (int col = 0;
        col < size; col ++) {
            StackPane square = new StackPane ();
            String color;
            if ((row + col) % 2 == 0) {
                color = "white";
            } else {
                color = "black";
            }
            square.setStyle ("-fx-background-color: " + color + ";");
            root.add (square, col, row);
        }
    }
    for (int i = 0;
    i < size; i ++) {
        root.getColumnConstraints ().add (new ColumnConstraints (5, Control.USE_COMPUTED_SIZE, Double.POSITIVE_INFINITY, Priority.ALWAYS, HPos.CENTER, true));
        root.getRowConstraints ().add (new RowConstraints (5, Control.USE_COMPUTED_SIZE, Double.POSITIVE_INFINITY, Priority.ALWAYS, VPos.CENTER, true));
    }
    primaryStage.setScene (new Scene (root, 400, 400));
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    for (int row = 0;
    row < size; row ++) {
        for (int col = 0;
        col < size; col ++) {
            Rectangle square = new Rectangle ();
            Color color;
            if ((row + col) % 2 == 0) color = Color.WHITE;
            else color = Color.BLACK;

            square.setFill (color);
            root.add (square, col, row);
            square.widthProperty ().bind (root.widthProperty ().divide (size));
            square.heightProperty ().bind (root.heightProperty ().divide (size));
        }
    }
    primaryStage.setScene (new Scene (root, 400, 400));
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24084293_24087667_160_170
24084293_24087667_182_197
Title: java swing calculator two digit 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    String i = event.getActionCommand ();
    if (isOperatorActive) {
        numberCalculator.setText (i);
        isOperatorActive = false;
    } else {
        numberCalculator.setText (numberCalculator.getText () + i);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    isOperatorActive = true;
    switch (operators) {
        case 6 :
            numberCalculator.setText ("");
            currentCalculation = 0;
            calculatorOpr = 0;
            break;
        case 8 :
            isOperatorActive = false;
        default :
            currentCalculation = Integer.parseInt (numberCalculator.getText ());
            calculatorOpr = operators;
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24084293_24087667_160_170
24084293_24087667_74_126
Title: java swing calculator two digit 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    String i = event.getActionCommand ();
    if (isOperatorActive) {
        numberCalculator.setText (i);
        isOperatorActive = false;
    } else {
        numberCalculator.setText (numberCalculator.getText () + i);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    isOperatorActive = true;
    if (! numberCalculator.getText ().isEmpty ()) {
        int number = Integer.parseInt (numberCalculator.getText ());
        int calculate = 0;
        switch (calculatorOpr) {
            case 1 :
                calculate = currentCalculation + number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 2 :
                calculate = currentCalculation - number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 3 :
                calculate = currentCalculation * number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 4 :
                calculate = currentCalculation / number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 5 :
                calculate = currentCalculation * currentCalculation;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 7 :
                calculate = (int) Math.sqrt (Integer.parseInt (numberCalculator.getText ()));
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 8 :
                numberCalculator.append (".");
                break;
            default :
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24084293_24087667_182_197
24084293_24087667_74_126
Title: java swing calculator two digit 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    isOperatorActive = true;
    switch (operators) {
        case 6 :
            numberCalculator.setText ("");
            currentCalculation = 0;
            calculatorOpr = 0;
            break;
        case 8 :
            isOperatorActive = false;
        default :
            currentCalculation = Integer.parseInt (numberCalculator.getText ());
            calculatorOpr = operators;
            break;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    isOperatorActive = true;
    if (! numberCalculator.getText ().isEmpty ()) {
        int number = Integer.parseInt (numberCalculator.getText ());
        int calculate = 0;
        switch (calculatorOpr) {
            case 1 :
                calculate = currentCalculation + number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 2 :
                calculate = currentCalculation - number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 3 :
                calculate = currentCalculation * number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 4 :
                calculate = currentCalculation / number;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 5 :
                calculate = currentCalculation * currentCalculation;
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 7 :
                calculate = (int) Math.sqrt (Integer.parseInt (numberCalculator.getText ()));
                numberCalculator.setText (Integer.toString (calculate));
                break;
            case 8 :
                numberCalculator.append (".");
                break;
            default :
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24085571_24085699_26_36
24085571_24085699_48_56
Title: Synchronizing queue in Java on multiple threads 
----------------------------------------

public void run () {
    try {
        queue.put ("1");
        Thread.sleep (1000);
        queue.put ("2");
        Thread.sleep (1000);
        queue.put ("3");
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println (queue.take ());
        System.out.println (queue.take ());
        System.out.println (queue.take ());
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24087573_24087677_1_12
24087573_24088217_1_12
Title: Correct implementation of lock for semaphore? 
----------------------------------------

public void acquire () throws InterruptedException {
    lock.lockInterruptibly ();
    try {
        while (permits == 0) {
            condition.await ();
        }
        permits --;
    } finally {
        lock.unlock ();
    }
}
----------------------------------------

public void acquire () throws InterruptedException {
    lock.lockInterruptibly ();
    while (permits == 0) {
        condition.await ();
    }
    try {
        permits --;
    } finally {
        lock.unlock ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24093945_1_30
24093694_24094421_1_13
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    boolean lastIsStar = false;
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (lastIsStar) {
            if (c != '*') {
                lastIsStar = false;
            }
        } else if (c == '*') {
            lastIsStar = true;
            if (i - 1 > - 1) {
                result = result.substring (0, result.length () - 1);
            }
        } else {
            result += c;
            lastIsStar = false;
        }

    }
    return result;
}
----------------------------------------

public static String starOut (String s) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == '*') continue;

        if (i > 0 && s.charAt (i - 1) == '*') continue;

        if (i < s.length () - 1 && s.charAt (i + 1) == '*') continue;

        sb.append (s.charAt (i));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24093945_1_30
24093694_26683528_1_13
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    boolean lastIsStar = false;
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (lastIsStar) {
            if (c != '*') {
                lastIsStar = false;
            }
        } else if (c == '*') {
            lastIsStar = true;
            if (i - 1 > - 1) {
                result = result.substring (0, result.length () - 1);
            }
        } else {
            result += c;
            lastIsStar = false;
        }

    }
    return result;
}
----------------------------------------

public String starOut (String str) {
    int i = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == '*') continue;

        if (i + 1 < str.length () && str.charAt (i + 1) == '*') continue;

        if (i > 0 && str.charAt (i - 1) != '*') continue;

        ret += str.charAt (i);
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24093945_1_30
24093694_26837065_1_14
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    boolean lastIsStar = false;
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (lastIsStar) {
            if (c != '*') {
                lastIsStar = false;
            }
        } else if (c == '*') {
            lastIsStar = true;
            if (i - 1 > - 1) {
                result = result.substring (0, result.length () - 1);
            }
        } else {
            result += c;
            lastIsStar = false;
        }

    }
    return result;
}
----------------------------------------

public String starOut (String str) {
    String ret = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (! ('*' == str.charAt (i) || i + 1 < str.length () && '*' == str.charAt (i + 1) || i > 0 && '*' == str.charAt (i - 1))) {
            ret = ret + str.charAt (i);
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24093945_1_30
24093694_38808660_1_24
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    boolean lastIsStar = false;
    String result = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        if (lastIsStar) {
            if (c != '*') {
                lastIsStar = false;
            }
        } else if (c == '*') {
            lastIsStar = true;
            if (i - 1 > - 1) {
                result = result.substring (0, result.length () - 1);
            }
        } else {
            result += c;
            lastIsStar = false;
        }

    }
    return result;
}
----------------------------------------

public String starOut (String str) {
    String b = "";
    if (str.length () == 1 && ! str.equals ("*")) {
        b = str;
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) != '*' && str.charAt (i + 1) != '*') {
            b = b + str.charAt (i);
        }
        if (str.charAt (i) == '*' && str.charAt (i + 1) != '*') {
            i = i + 1;
        }
    }
    if (str.length () > 1 && str.charAt (str.length () - 2) != '*' && str.charAt (str.length () - 1) != '*') {
        b = b + str.substring (str.length () - 1);
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24094421_1_13
24093694_26683528_1_13
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public static String starOut (String s) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == '*') continue;

        if (i > 0 && s.charAt (i - 1) == '*') continue;

        if (i < s.length () - 1 && s.charAt (i + 1) == '*') continue;

        sb.append (s.charAt (i));
    }
    return sb.toString ();
}
----------------------------------------

public String starOut (String str) {
    int i = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == '*') continue;

        if (i + 1 < str.length () && str.charAt (i + 1) == '*') continue;

        if (i > 0 && str.charAt (i - 1) != '*') continue;

        ret += str.charAt (i);
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24094421_1_13
24093694_26837065_1_14
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public static String starOut (String s) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == '*') continue;

        if (i > 0 && s.charAt (i - 1) == '*') continue;

        if (i < s.length () - 1 && s.charAt (i + 1) == '*') continue;

        sb.append (s.charAt (i));
    }
    return sb.toString ();
}
----------------------------------------

public String starOut (String str) {
    String ret = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (! ('*' == str.charAt (i) || i + 1 < str.length () && '*' == str.charAt (i + 1) || i > 0 && '*' == str.charAt (i - 1))) {
            ret = ret + str.charAt (i);
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_24094421_1_13
24093694_38808660_1_24
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public static String starOut (String s) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == '*') continue;

        if (i > 0 && s.charAt (i - 1) == '*') continue;

        if (i < s.length () - 1 && s.charAt (i + 1) == '*') continue;

        sb.append (s.charAt (i));
    }
    return sb.toString ();
}
----------------------------------------

public String starOut (String str) {
    String b = "";
    if (str.length () == 1 && ! str.equals ("*")) {
        b = str;
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) != '*' && str.charAt (i + 1) != '*') {
            b = b + str.charAt (i);
        }
        if (str.charAt (i) == '*' && str.charAt (i + 1) != '*') {
            i = i + 1;
        }
    }
    if (str.length () > 1 && str.charAt (str.length () - 2) != '*' && str.charAt (str.length () - 1) != '*') {
        b = b + str.substring (str.length () - 1);
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_26683528_1_13
24093694_26837065_1_14
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    int i = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == '*') continue;

        if (i + 1 < str.length () && str.charAt (i + 1) == '*') continue;

        if (i > 0 && str.charAt (i - 1) != '*') continue;

        ret += str.charAt (i);
    }
    return ret;
}
----------------------------------------

public String starOut (String str) {
    String ret = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (! ('*' == str.charAt (i) || i + 1 < str.length () && '*' == str.charAt (i + 1) || i > 0 && '*' == str.charAt (i - 1))) {
            ret = ret + str.charAt (i);
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_26683528_1_13
24093694_38808660_1_24
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    int i = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == '*') continue;

        if (i + 1 < str.length () && str.charAt (i + 1) == '*') continue;

        if (i > 0 && str.charAt (i - 1) != '*') continue;

        ret += str.charAt (i);
    }
    return ret;
}
----------------------------------------

public String starOut (String str) {
    String b = "";
    if (str.length () == 1 && ! str.equals ("*")) {
        b = str;
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) != '*' && str.charAt (i + 1) != '*') {
            b = b + str.charAt (i);
        }
        if (str.charAt (i) == '*' && str.charAt (i + 1) != '*') {
            i = i + 1;
        }
    }
    if (str.length () > 1 && str.charAt (str.length () - 2) != '*' && str.charAt (str.length () - 1) != '*') {
        b = b + str.substring (str.length () - 1);
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24093694_26837065_1_14
24093694_38808660_1_24
Title: Efficient solution to codingBat riddle starOut in Java 
----------------------------------------

public String starOut (String str) {
    String ret = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (! ('*' == str.charAt (i) || i + 1 < str.length () && '*' == str.charAt (i + 1) || i > 0 && '*' == str.charAt (i - 1))) {
            ret = ret + str.charAt (i);
        }
    }
    return ret;
}
----------------------------------------

public String starOut (String str) {
    String b = "";
    if (str.length () == 1 && ! str.equals ("*")) {
        b = str;
    }
    for (int i = 0;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) != '*' && str.charAt (i + 1) != '*') {
            b = b + str.charAt (i);
        }
        if (str.charAt (i) == '*' && str.charAt (i + 1) != '*') {
            i = i + 1;
        }
    }
    if (str.length () > 1 && str.charAt (str.length () - 2) != '*' && str.charAt (str.length () - 1) != '*') {
        b = b + str.substring (str.length () - 1);
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24118719_24118960_7_20
24118719_24119059_7_22
Title: Reading a file from my desktop and printing each line from it 
----------------------------------------

public static void main (String args []) {
    File file = new File ("C:\\some_folder\\flowers_petal.txt");
    Scanner in;
    try {
        in = new Scanner (file);
        while (in.hasNext ()) {
            String line = in.nextLine ();
            System.out.println (line);
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try (BufferedReader br = new BufferedReader (new FileReader ("C:\\testing.txt"))) {
        String sCurrentLine;
        while ((sCurrentLine = br.readLine ()) != null) {
            System.out.println (sCurrentLine);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24135759_24136935_1_12
24135759_24136942_1_10
Title: Java Calculator minus error 
----------------------------------------

private void btMinusActionPerformed (java.awt.event.ActionEvent evt) {
    firstNumber = Float.parseFloat (calScreen.getText ());
    OP = "-";
    numberClick += 1;
    if (! calScreen.getText ().equals ("-") && numberClick == 2) {
        btEqual.doClick ();
    } else {
        calScreen.setText ("-");
    }
}
----------------------------------------

private void btMinusActionPerformed (java.awt.event.ActionEvent evt) {
    firstNumber = Float.parseFloat (calScreen.getText ());
    OP = "-";
    numberClick += 1;
    if (! calScreen.getText ().equals ("-") && numberClick == 2) {
        btEqual.doClick ();
    } else {
        calScreen.setText ("-");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2413802_2413863_1_20
2413802_2413933_4_25
Title: Whats wrong with my syntax and am i doing this efficiently? 
----------------------------------------

public static boolean prime (int a, int b) {
    if (a == 0) {
        return false;
    } else if (a % (b - 1) == 0) {
        return false;
    } else if (b > 1) {
        return prime (a, b - 1);
    } else {
        return true;
    }

}
----------------------------------------

public static boolean prime (int a, int b) {
    if (a == 0) {
        return false;
    } else if (a % (b - 1) == 0) {
        return false;
    } else if (b > 1) {
        return prime (a, b - 1);
    } else {
        return true;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24153328_24153467_1_48
24153328_24153769_1_56
Title: Print formatted strings/char arrays in java 
----------------------------------------

public static String formattedString (char [] c, int len1, char [] d, int len2, char [] e, int len3) {
    List < Character > charlist = new ArrayList < Character > (len1);
    for (int i = 0;
    i < len1; i ++) {
        if (c.length == len1 || c.length > len1) {
            charlist.add (c [i]);
        } else if (c.length < len1) {
            if (c.length < len1) charlist.add (c [i]);
            else charlist.add (' ');

        } else {
            charlist.add ('#');
        }

    }
    List < Character > charlist2 = new ArrayList < Character > (len2);
    for (int i = 0;
    i < len2; i ++) {
        if (d.length == len2 || d.length > len2) {
            charlist2.add (d [i]);
        } else if (d.length < len2) {
            if (d.length < len2) charlist2.add (d [i]);
            else charlist2.add (' ');

        } else {
            charlist2.add ('#');
        }

    }
    List < Character > charlist3 = new ArrayList < Character > (len3);
    for (int i = 0;
    i < len3; i ++) {
        if (e.length == len3 || e.length > len3) {
            charlist3.add (e [i]);
        } else if (e.length < len3) {
            if (i < len3) charlist3.add (e [i]);
            else charlist3.add (' ');

        } else {
            charlist3.add ('#');
        }

    }
    String s = charlist.toString () + charlist2.toString () + charlist3.toString () + '\n';
    return s;
}
----------------------------------------

public static String formattedString (char [] c, int len1, char [] d, int len2, char [] e, int len3) {
    char [] charlist = new char [len1];
    for (int i = 0;
    i < len1; i ++) {
        if (c.length == len1 || c.length > len1) {
            charlist [i] = (c [i]);
        } else if (c.length < len1) {
            if (c.length > i) charlist [i] = (c [i]);
            else charlist [i] = ' ';

        } else {
            charlist [i] = '#';
        }

    }
    char [] charlist2 = new char [len2];
    for (int i = 0;
    i < len2; i ++) {
        if (d.length == len2 || d.length > len2) {
            charlist2 [i] = (d [i]);
        } else if (d.length < len2) {
            if (d.length > i) charlist2 [i] = (d [i]);
            else charlist2 [i] = ' ';

        } else {
            charlist2 [i] = '#';
        }

    }
    char [] charlist3 = new char [len3];
    for (int i = 0;
    i < len3; i ++) {
        if (e.length == len3 || e.length > len3) {
            charlist3 [i] = (e [i]);
        } else if (e.length > i) {
            if (i < len3) charlist3 [i] = (e [i]);
            else charlist3 [i] = ' ';

        } else {
            charlist3 [i] = '#';
        }

    }
    String s = "";
    int i = 0;
    for (char a : charlist) {
        s += a;
    }
    for (char a : charlist2) {
        s += a;
    }
    for (char a : charlist3) {
        s += a;
    }
    return s + '\n';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24157817_24173645_7_37
24157817_44217670_9_29
Title: Jackson databind enum case insensitive 
----------------------------------------

public static void main (String [] args) throws IOException {
    List < DataType > types = Arrays.asList (JSON, HTML);
    ObjectMapper mapper = new ObjectMapper ();
    SimpleModule module = new SimpleModule ();
    module.setDeserializerModifier (new BeanDeserializerModifier () {
        @Override
        public JsonDeserializer < Enum > modifyEnumDeserializer (DeserializationConfig config, final JavaType type, BeanDescription beanDesc, final JsonDeserializer < ? > deserializer) {
            return new JsonDeserializer < Enum > () {
                @Override
                public Enum deserialize (JsonParser jp, DeserializationContext ctxt) throws IOException {
                    Class < ? extends Enum > rawClass = (Class < Enum < ? > >) type.getRawClass ();
                    return Enum.valueOf (rawClass, jp.getValueAsString ().toUpperCase ());
                }}

            ;
        }}

    );
    module.addSerializer (Enum.class, new StdSerializer < Enum > (Enum.class) {
        @Override
        public void serialize (Enum value, JsonGenerator jgen, SerializerProvider provider) throws IOException {
            jgen.writeString (value.name ().toLowerCase ());
        }}

    );
    mapper.registerModule (module);
    String json = mapper.writeValueAsString (types);
    System.out.println (json);
    List < DataType > types2 = mapper.readValue (json, new TypeReference < List < DataType > > () {
    }

    );
    System.out.println (types2);
}
----------------------------------------

public static void main (String [] args) {
    ObjectMapper objectMapper = new ObjectMapper ();
    objectMapper.enable (MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS);
    try {
        TestObject uppercase = objectMapper.readValue ("{ \"testEnum\": \"ONE\" }", TestObject.class);
        TestObject lowercase = objectMapper.readValue ("{ \"testEnum\": \"one\" }", TestObject.class);
        TestObject mixedcase = objectMapper.readValue ("{ \"testEnum\": \"oNe\" }", TestObject.class);
        if (uppercase.testEnum != TestEnum.ONE) throw new Exception ("cannot deserialize uppercase value");

        if (lowercase.testEnum != TestEnum.ONE) throw new Exception ("cannot deserialize lowercase value");

        if (mixedcase.testEnum != TestEnum.ONE) throw new Exception ("cannot deserialize mixedcase value");

        System.out.println ("Success: all deserializations worked");
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24178977_24180156_1_11
24178977_24180269_1_10
Title: Retuning an arraylist with objects specified parameters from another constructor 
----------------------------------------

public ArrayList < Lamborghini > getCarsFromThisYear (int year) {
    ArrayList < Lamborghini > thisYearLamb = new ArrayList < Lamborghini > ();
    for (Lamborghini cars : inventory) {
        if (cars.getModelYear () == year) {
            thisYearLamb.add (cars);
        }
    }
    return thisYearLamb;
}
----------------------------------------

public ArrayList < Lamborghini > getCarsFromThisYear (int year) {
    ArrayList < Lamborghini > list = new ArrayList < Lamborghini > ();
    for (Lamborghini car : inventory) {
        if (car.getModelYear () == year) {
            list.add (car);
        }
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24180499_24212897_5_17
24180499_24213085_5_28
Title: How to auto increment id in XML using jaxb 
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Messages.class);
    Messages messages = new Messages ();
    messages.getMessages ().add (new Message ());
    messages.getMessages ().add (new Message ());
    messages.getMessages ().add (new Message ());
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.setAdapter (new IDAdapter ());
    marshaller.marshal (messages, System.out);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Messages.class);
    Messages messages = new Messages ();
    messages.getMessages ().add (new Message ());
    messages.getMessages ().add (new Message ());
    messages.getMessages ().add (new Message ());
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setListener (new Marshaller.Listener () {
        private int counter = 1;
        public void beforeMarshal (Object object) {
            if (object instanceof Message) {
                ((Message) object).setId (counter ++);
            }
        }}

    );
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.setAdapter (new IDAdapter ());
    marshaller.marshal (messages, System.out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24182902_24183670_18_38
24182902_49951700_1_23
Title: How to remove all key and its value of a particular keyname from json string(with children) in java 
----------------------------------------

public static void removeJSONField (JSONObject obj) throws JSONException {
    obj.remove ("id");
    Iterator < String > it = obj.keys ();
    while (it.hasNext ()) {
        String key = it.next ();
        Object childObj = obj.get (key);
        if (childObj instanceof JSONArray) {
            JSONArray arrayChildObjs = ((JSONArray) childObj);
            int size = arrayChildObjs.length ();
            for (int i = 0;
            i < size; i ++) {
                removeJSONField (arrayChildObjs.getJSONObject (i));
            }
        }
        if (childObj instanceof JSONObject) {
            removeJSONField (((JSONObject) childObj));
        }
    }
}
----------------------------------------

public static void removeJSONField (JSONObject obj) throws JSONException {
    obj.remove ("id");
    Iterator < String > it = obj.keys ();
    while (it.hasNext ()) {
        String key = it.next ();
        Object childObj = obj.get (key);
        if (childObj instanceof JSONArray) {
            JSONArray arrayChildObjs = ((JSONArray) childObj);
            int size = arrayChildObjs.length ();
            for (int i = 0;
            i < size; i ++) {
                if (arrayChildObjs.get (i) instanceof JSONObject) {
                    removeJSONField (arrayChildObjs.getJSONObject (i));
                }
            }
        }
        if (childObj instanceof JSONObject) {
            removeJSONField (((JSONObject) childObj));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24183246_24186069_75_87
24183246_38525506_28_43
Title: CompletableFuture swallows exceptions? 
----------------------------------------

private static CompletableFuture < String > readPage () {
    return CompletableFuture.supplyAsync (new Supplier < String > () {
        @Override
        public String get () {
            System.out.println ("Getting page...");
            dummySleep (1000);
            return "page";
        }}

    );
}
----------------------------------------

private static CompletableFuture < String > readPage () {
    CompletableFuture < String > future = new CompletableFuture < > ();
    new Thread (() -> {
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
        }
        future.complete ("page");
    }).start ();
    return future;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24183246_24186069_9_61
24183246_38525506_11_26
Title: CompletableFuture swallows exceptions? 
----------------------------------------

public static void main (String [] args) throws InterruptedException, ExecutionException {
    CompletableFuture < String > contentsCF = readPage ();
    CompletableFuture < List < String > > linksCF = contentsCF.thenApply (CompletableFutureTest :: getLinks);
    CompletableFuture < Void > completionStage = linksCF.thenAccept (list -> {
        String a = null;
        System.out.println (a.toString ());
    });
    List < String > result = linksCF.get ();
    System.out.println ("Got " + result);
    try {
        completionStage.get ();
    } catch (ExecutionException e) {
        System.out.println ("Caught " + e);
        Throwable cause = e.getCause ();
        System.out.println ("cause: " + cause);
    }
    completionStage.exceptionally (e -> {
        System.out.println ("Future exceptionally finished: " + e);
        return null;
    });
    try {
        completionStage.get ();
    } catch (Throwable t) {
        System.out.println ("Already handled by the future " + t);
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException, ExecutionException {
    CompletableFuture < String > future = readPage ();
    CompletableFuture < Void > future2 = future.thenAccept (page -> {
        System.out.println (page);
        throw new IllegalArgumentException ("unexpected exception");
    });
    future2.exceptionally (e -> {
        e.printStackTrace (System.err);
        return null;
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24192824_24195295_162_192
24192824_24195295_269_289
Title: "JLabel FlowLayout. Centering the JLabel?" 
----------------------------------------

private void createPartControl () {
    panel = new JPanel ();
    panel.setLayout (new BorderLayout ());
    JPanel labelPanel = new JPanel ();
    labelPanel.setLayout (new BoxLayout (labelPanel, BoxLayout.PAGE_AXIS));
    JLabel writtenLabel = new JLabel ("Written by: Samy");
    writtenLabel.setAlignmentX (JLabel.CENTER_ALIGNMENT);
    labelPanel.add (writtenLabel);
    labelPanel.add (Box.createVerticalStrut (20));
    JLabel prizeLabel = new JLabel ("Prize Table");
    prizeLabel.setFont (new Font ("default", Font.BOLD, 32));
    prizeLabel.setAlignmentX (JLabel.CENTER_ALIGNMENT);
    labelPanel.add (prizeLabel);
    panel.add (labelPanel, BorderLayout.NORTH);
    LotteryTableModel tableModel = new LotteryTableModel (model);
    JTable lotteryTable = new JTable (tableModel);
    int height = tableModel.getRowCount () * lotteryTable.getRowHeight ();
    lotteryTable.setPreferredScrollableViewportSize (new Dimension (300, height));
    JScrollPane scrollPane = new JScrollPane (lotteryTable);
    panel.add (scrollPane, BorderLayout.CENTER);
}
----------------------------------------

private void createPartControl () {
    panel = new JPanel ();
    panel.setLayout (new BoxLayout (panel, BoxLayout.PAGE_AXIS));
    panel.add (Box.createVerticalStrut (10));
    JButton playButton = new JButton ("Pick Number");
    playButton.addActionListener (new PickNumberActionListener ());
    playButton.setAlignmentX (JButton.CENTER_ALIGNMENT);
    panel.add (playButton);
    panel.add (Box.createVerticalStrut (20));
    numberLabel = new JLabel (" ");
    numberLabel.setAlignmentX (JLabel.CENTER_ALIGNMENT);
    panel.add (numberLabel);
    prizeLabel = new JLabel (" ");
    prizeLabel.setAlignmentX (JLabel.CENTER_ALIGNMENT);
    panel.add (prizeLabel);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2419353_31111560_5_15
2419353_35984730_8_26
Title: make ArrayList Read only 
----------------------------------------

public static void main (String [] argv) throws Exception {
    List stuff = Arrays.asList (new String [] {"a", "b"});
    List list = new ArrayList (stuff);
    list = Collections.unmodifiableList (list);
    Set set = new HashSet (stuff);
    set = Collections.unmodifiableSet (set);
    Map map = new HashMap ();
    map = Collections.unmodifiableMap (map);
    System.out.println ("Collection is read-only now.");
}
----------------------------------------

public static void main (String [] args) {
    List < Integer > objList = new ArrayList < Integer > ();
    objList.add (4);
    objList.add (5);
    objList.add (6);
    objList.add (7);
    objList = Collections.unmodifiableList (objList);
    System.out.println ("List contents " + objList);
    try {
        objList.add (9);
    } catch (UnsupportedOperationException e) {
        e.printStackTrace ();
        System.out.println ("Exception occured");
    }
    System.out.println ("List contents " + objList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24216180_24216238_21_47
24216180_24216461_16_37
Title: how can i change fontcolor and font type of my listview 
----------------------------------------

public View getView (int position, View convertView, ViewGroup viewGroup) {
    if (convertView == null) {
        LayoutInflater inflater = (LayoutInflater) context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflater.inflate (R.layout.simple_dropdown_item_1line, null);
        holder = new ViewHolder ();
        holder.message = (TextView) convertView.findViewById (R.id.text1);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    holder.message.setText (data.get (position));
    holder.message.setTextColor (Color.BLUE);
    Typeface face = Typeface.createFromAsset (getAssets (), "fonts/HandmadeTypewriter.ttf");
    holder.message.setTypeface (face);
    return convertView;
}
----------------------------------------

public View getView (int position, View v, ViewGroup parent) {
    View mView = v;
    if (mView == null) {
        LayoutInflater vi = (LayoutInflater) mContext.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        mView = vi.inflate (id, null);
    }
    TextView text = (TextView) mView.findViewById (R.id.textView);
    if (items.get (position) != null) {
        text.setTextColor (Color.WHITE);
        text.setText (items.get (position));
        text.setBackgroundColor (Color.RED);
        int color = Color.argb (200, 255, 64, 64);
        text.setBackgroundColor (color);
    }
    return mView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24234416_24308431_15_27
24234416_24308431_1_13
Title: Retrieve part of URL path in JSP 
----------------------------------------

@RequestMapping (value = "listagem.json", method = RequestMethod.GET)
@PreAuthorize ("hasPermission(#user, 'listagem_'+#this.this.name)")
public ModelAndView listagem_json (@RequestParam ("pagina")
String pagina,@RequestParam ("items")
String items,@RequestParam ("ordem")
String ordem) {
    ModelAndView mav = new ModelAndView ();
    mav.setViewName (this.getName () + "/listagem");
    mav.addObject ("lista", serv.listagem ());
    mav.addObject ("pagina", pagina);
    mav.addObject ("items", items);
    mav.addObject ("ordem", ordem);
    return mav;
}
----------------------------------------

@RequestMapping (value = "listagem/{pagina}/{items}/{ordem}")
@PreAuthorize ("hasPermission(#user, 'listagem_'+#this.this.name)")
public ModelAndView listagem (@PathVariable ("pagina")
String pagina,@PathVariable ("items")
String items,@PathVariable ("ordem")
String ordem) {
    ModelAndView mav = new ModelAndView ();
    mav.setViewName ("privado/" + this.getName () + "/listagem");
    mav.addObject ("lista", serv.listagem ());
    mav.addObject ("pagina", pagina);
    mav.addObject ("items", items);
    mav.addObject ("ordem", ordem);
    return mav;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24234586_24234878_12_65
24234586_24234925_14_40
Title: Exit Button not working from Frame to Panel 
----------------------------------------

public StudentGUI () {
    super ("StudentGUI Frame");
    TopPanel tp;
    tp = new TopPanel ();
    Dimension d = new Dimension (800, 600);
    tp.setPreferredSize (d);
    this.add (tp, BorderLayout.NORTH);
    tp.setVisible (true);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setSize (800, 600);
    setBackground (Color.PINK);
    tp.setVisible (true);
    BottomPanel bp;
    bp = new BottomPanel ();
    this.add (bp, BorderLayout.SOUTH);
    tp.setVisible (true);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setSize (800, 600);
    MiddlePanel mp;
    mp = new MiddlePanel ();
    this.add (mp, BorderLayout.CENTER);
    mp.setVisible (true);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setSize (800, 600);
    this.setVisible (true);
    bp.exitBtn.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int selectedOption = JOptionPane.showConfirmDialog (null, "Do you want to close the window?", "Choose", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) {
                System.exit (1);
            }
        }}

    );
}
----------------------------------------

public StudentGUI () {
    super ("StudentGUI Frame");
    Dimension d = new Dimension (800, 600);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setSize (800, 600);
    setBackground (Color.PINK);
    this.setVisible (true);
    BottomPanel bp;
    bp = new BottomPanel ();
    this.add (bp, BorderLayout.SOUTH);
    bp.exitBtn.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int selectedOption = JOptionPane.showConfirmDialog (null, "Do you want to close the window?", "Choose", JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) System.exit (1);

            return;
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24245708_24245742_2_25
24245708_24245877_3_16
Title: switch case with byte datatype 
----------------------------------------

public static void main (String args []) {
    byte by = 10;
    byte result = (byte) (by + 118);
    System.out.println ("Result: " + result);
    switch (result) {
        default :
            System.out.println ("default");
            break;
        case 0 :
            System.out.println ("0");
            break;
        case - 128 :
            System.out.println ("-128");
            break;
    }
}
----------------------------------------

public static void main (String args []) {
    byte by = 10;
    switch ((byte) (by + 118)) {
        default :
            System.out.println ("Sunday");
        case (byte) 0 :
            System.out.println ("Monday");
        case (byte) 128 :
            System.out.println ("Thank u");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24255211_24255383_8_33
24255211_24256245_8_47
Title: Not able to sort array of strings taken as input from user 
----------------------------------------

public static void main (String [] args) {
    try {
        List < String > list = new ArrayList < String > ();
        Scanner in = new Scanner (System.in);
        do {
            System.out.println ("Current list is" + list);
            System.out.println ("Add more(y/n)");
            if (in.next ().startsWith ("y")) {
                System.out.println ("Enter:");
                list.add (in.next ());
            } else {
                break;
            }
        } while (true);
        System.out.println ("List is " + list);
        String [] Arr = list.toArray (new String [0]);
        System.out.println ("Array is" + Arrays.toString (Arr));
        String str = Arr.toString ();
        Arrays.sort (Arr);
        System.out.println ("Sorted Array is" + Arrays.toString (Arr));
    } catch (Exception e) {
        e.toString ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        List < String > list = new ArrayList < String > ();
        Scanner in = new Scanner (System.in);
        do {
            System.out.println ("Current list is" + list);
            System.out.println ("Add more(y/n)");
            if (in.next ().startsWith ("y")) {
                System.out.println ("Enter:");
                list.add (in.next ());
            } else {
                break;
            }
        } while (true);
        System.out.println ("List is " + list);
        String [] Arr = list.toArray (new String [list.size ()]);
        System.out.println ("Array is" + Arrays.toString (Arr));
        String [] strArr = new String [Arr.length];
        for (int i = 0;
        i < Arr.length; i ++) {
            for (int j = i + 1;
            j < Arr.length; j ++) {
                if (Arr [i].trim ().compareTo (Arr [j].trim ()) > 0) {
                    String temp = Arr [j];
                    Arr [j] = Arr [i];
                    Arr [i] = temp;
                }
            }
            strArr [i] = Arr [i];
        }
        System.out.println ("After sorting : ");
        for (String ss : strArr) {
            System.out.print (ss + " ");
        }
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24256199_24256921_8_22
24256199_24257051_1_24
Title: split string and store in arraylist 
----------------------------------------

public static void main (String [] args) {
    String s = "Tamilnadu;chennai-madurai-salem::Kerala;cochin-tiruvandrum-calicut";
    ArrayList < String > x1 = new ArrayList < String > ();
    ArrayList < String > x2 = new ArrayList < String > ();
    String string [] = s.split ("::");
    for (String y : string) {
        try {
            String [] temp = y.split (";");
            x1.add (temp [0]);
            x2.add (temp [1]);
        } catch (Exception e) {
        }
    }
    System.out.println (x1.toString ());
    System.out.println (x2.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String city = "Tamilnadu;chennai-madurai-salem::Kerala;cochin-tiruvandrum-calicut";
    ArrayList < String > mState = new ArrayList < String > ();
    ArrayList < String > mCity = new ArrayList < String > ();
    List < String > bothList = Arrays.asList (city.split ("::"));
    for (String string : bothList) {
        String both [] = string.split (";");
        String state = both [0];
        List < String > tempCityList = Arrays.asList (both [1].split ("-"));
        mState.add (state);
        mCity.addAll (tempCityList);
    }
    System.out.println ("Your states");
    for (String string : mState) {
        System.out.print (string + " ");
    }
    System.out.println ("\nYour cities");
    for (String string : mCity) {
        System.out.print (string + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24256469_24256737_1_16
24256469_24257118_1_14
Title: Replacing contents inside curly braces (for e.g. {1}) with something else 
----------------------------------------

public static void main (String [] args) {
    String s = "Hey {1}, you are {2}.";
    HashMap < Integer, String > hm = new HashMap ();
    hm.put (1, "one");
    hm.put (2, "two");
    Pattern p = Pattern.compile ("(\\{\\d+\\})");
    Matcher m = p.matcher (s);
    while (m.find ()) {
        System.out.println (m.group ());
        String val1 = m.group ().replace ("{", "").replace ("}", "");
        System.out.println (val1);
        s = (s.replace (m.group (), hm.get (Integer.parseInt (val1))));
        System.out.println (s);
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "Hey {1} your {2} is {3}  clear to {4}  ";
    Map < Integer, String > map = new LinkedHashMap < Integer, String > ();
    map.put (1, "Smrita");
    map.put (2, "question");
    map.put (3, "not");
    map.put (4, "anyone");
    while (str.contains ("{")) {
        Integer i = Integer.parseInt (str.substring (str.indexOf ("{") + 1, str.indexOf ("{") + 2));
        str = str.replace ("{" + i + "}", map.get (i));
    }
    System.out.println (str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24257469_24257609_1_16
24257469_24257723_10_22
Title: return duplicates from an array in efficient way in java 
----------------------------------------

private static Set < Integer > checkDuplicate (int [] intArray) {
    HashMap < Integer, Integer > values = new HashMap < Integer, Integer > ();
    Set < Integer > values2 = new HashSet < Integer > ();
    for (Integer i : intArray) {
        if (values.get (i) != null) values2.add (i);
        else values.put (i, i);

    }
    return values2;
}
----------------------------------------

private static Set < Integer > checkDuplicate (int [] intArray) {
    Set < Integer > duplicates = new HashSet < Integer > ();
    Set < Integer > tmp = new HashSet < Integer > ();
    for (Integer i : intArray) {
        if (! tmp.add (i)) {
            duplicates.add (i);
        }
    }
    return duplicates;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24269147_24269604_38_64
24269147_24269604_77_103
Title: Is there a data structure similar to a queue that can do multicast to different threads? 
----------------------------------------

public void run () {
    StringBuilder sb;
    while (true) {
        sb = getStringBuilder ();
        sb.setLength (0);
        sb.append ("Hello!");
        splitter.flush ();
        sb = getStringBuilder ();
        sb.setLength (0);
        sb.append ("Hi!");
        sb = getStringBuilder ();
        sb.setLength (0);
        sb.append ("Hi again!");
        splitter.flush ();
    }
}
----------------------------------------

public void run () {
    while (true) {
        long avail;
        while ((avail = splitter.availableToPoll (index)) == 0) {
        }
        for (int i = 0;
        i < avail; i ++) {
            StringBuilder sb = splitter.poll (index);
        }
        splitter.donePolling (index);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24277129_24277152_1_25
24277129_24277225_1_38
Title: How to read contents from a text file in java from a specified location in hard drive using netbeans IDE 
----------------------------------------

public static void main (String [] args) {
    BufferedReader br = null;
    try {
        String sCurrentLine;
        br = new BufferedReader (new FileReader ("D:\\input.txt"));
        while ((sCurrentLine = br.readLine ()) != null) {
            System.out.println (sCurrentLine);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (br != null) br.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    FileInputStream in = null;
    FileOutputStream out = null;
    try {
        in = new FileInputStream ("D:\\input.txt");
        out = new FileOutputStream ("D:\\output.txt");
        int c;
        while ((c = in.read ()) != - 1) {
            out.write (c);
        }
    } catch (FileNotFoundException fe) {
        fe.printStackTrace ();
    } catch (IOException ie) {
        ie.printStackTrace ();
    } finally {
        if (in != null) {
            try {
                in.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
        if (out != null) {
            try {
                out.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24320014_24320562_18_53
24320014_42764530_1_19
Title: How to call launch() more than once in java 
----------------------------------------

public void start (final Stage stage) {
    mainStage = stage;
    mainStage.setAlwaysOnTop (true);
    Platform.setImplicitExit (false);
    Timer timer = new Timer ();
    timer.schedule (new WumpusAttack (), 0, 5_000);
    cowerInFear.setPadding (SAFETY_ZONE);
    cowerInFear.textProperty ().addListener ((observable, oldValue, newValue) -> {
        PauseTransition pause = new PauseTransition (Duration.seconds (2));
        pause.setOnFinished (event -> stage.hide ());
        pause.play ();
    });
    cowerInFear.setOnMouseClicked (event -> {
        timer.cancel ();
        Platform.exit ();
    });
    stage.setScene (new Scene (cowerInFear));
}
----------------------------------------

@Override
public void start () {
    super.start ();
    try {
        new JFXPanel ();
        Platform.runLater (new Runnable () {
            @Override
            public void run () {
                new ArtisanArmourerInterface ().start (new Stage ());
            }}

        );
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24323516_24323617_4_28
24323516_24323693_1_31
Title: Using a nested if and else if statement inside of a while statement 
----------------------------------------

public static void main (String test []) {
    @SuppressWarnings ("resource")
    Scanner scanner = new Scanner (System.in);
    int AddName = 0;
    while (AddName < 3) {
        System.out.print ("Do you want to add a new name (Y/N)");
        String newname = scanner.next ();
        if (newname.equalsIgnoreCase ("y")) {
            System.out.println ("Enter first name: ");
            String fname = scanner.next ();
            System.out.println ("Enter last name: ");
            String lname = scanner.next ();
            AddName = AddName + 1;
        } else if (newname.equalsIgnoreCase ("n")) {
            System.out.println ("Goodbye");
            AddName = AddName + 3;
        }

    }
}
----------------------------------------

public static void main (String test []) {
    @SuppressWarnings ("resource")
    Scanner scanner = new Scanner (System.in);
    int AddName = 0;
    do {
        System.out.print ("Do you want to add a new name (Y/N)");
        String newname = scanner.next ();
        if (newname.equalsIgnoreCase ("y")) {
            System.out.println ("Enter first name: ");
            String fname = scanner.next ();
            System.out.println ("Enter last name: ");
            String lname = scanner.next ();
            AddName = AddName + 1;
        } else if (newname.equalsIgnoreCase ("n")) {
            System.out.println ("Goodbye");
            AddName = AddName + 3;
        }

    } while (AddName < 3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24328307_24330611_272_299
24328307_24330611_306_319
Title: java.lang.IllegalArgumentException: Tree must not already contain child 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Collection picked = new HashSet (vv.getPickedVertexState ().getPicked ());
    if (picked.size () == 1) {
        Object root = picked.iterator ().next ();
        Forest inGraph = (Forest) layout.getGraph ();
        try {
            collapser.collapse (vv.getGraphLayout (), inGraph, root);
        } catch (InstantiationException e1) {
            e1.printStackTrace ();
        } catch (IllegalAccessException e1) {
            e1.printStackTrace ();
        }
        vv.getPickedVertexState ().clear ();
        vv.repaint ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Collection picked = vv.getPickedVertexState ().getPicked ();
    for (Object v : picked) {
        if (v instanceof Forest) {
            Forest inGraph = (Forest) layout.getGraph ();
            collapser.expand (inGraph, (Forest) v);
        }
        vv.getPickedVertexState ().clear ();
        vv.repaint ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24339486_24339574_22_55
24339486_24339574_71_94
Title: Handling EditText Dynamically in Android 
----------------------------------------

public void onClick (View v) {
    if (dynamicLayoutsTags.size () > 0) {
        for (int i = 0;
        i < dynamicLayoutsTags.size (); i ++) {
            View getView = Container.findViewWithTag (dynamicLayoutsTags.get (i));
            EditText editText1 = (EditText) getView.findViewById (R.id.editText1);
            EditText editText2 = (EditText) getView.findViewById (R.id.editText2);
            EditText editText3 = (EditText) getView.findViewById (R.id.editText3);
            Toast.makeText (SecondActivity.this, "Row " + i + " : " + "editext 1 is : " + editText1.getText () + " editext 2 is : " + editText2.getText () + " editext 3 is : " + editText3.getText (), Toast.LENGTH_LONG).show ();
        }
    }
    Intent intent = new Intent (SecondActivity.this, MainActivity.class);
    startActivity (intent);
    Toast.makeText (SecondActivity.this, "The Result: " + all, Toast.LENGTH_LONG).show ();
    finish ();
}
----------------------------------------

public void onClick (View v) {
    LayoutInflater layoutInflater = (LayoutInflater) getBaseContext ().getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    final View addView = layoutInflater.inflate (R.layout.row, null);
    Button buttonRemove = (Button) addView.findViewById (R.id.remove);
    addView.setTag (tag);
    buttonRemove.setTag (tag);
    dynamicLayoutsTags.add (tag);
    Container.addView (addView);
    tag ++;
    buttonRemove.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            Integer removeTag = (Integer) v.getTag ();
            View deleteView = Container.findViewWithTag (removeTag);
            Container.removeView (deleteView);
            dynamicLayoutsTags.remove (removeTag);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24339990_38281222_1_16
24339990_41373452_1_18
Title: How to convert a multipart file to File? 
----------------------------------------

public File getTempFile (MultipartFile multipartFile) {
    CommonsMultipartFile commonsMultipartFile = (CommonsMultipartFile) multipartFile;
    FileItem fileItem = commonsMultipartFile.getFileItem ();
    DiskFileItem diskFileItem = (DiskFileItem) fileItem;
    String absPath = diskFileItem.getStoreLocation ().getAbsolutePath ();
    File file = new File (absPath);
    if (! file.exists ()) {
        file.createNewFile ();
        multipartFile.transferTo (file);
    }
    return file;
}
----------------------------------------

public File getTempFile (MultipartFile multipartFile) {
    CommonsMultipartFile commonsMultipartFile = (CommonsMultipartFile) multipartFile;
    FileItem fileItem = commonsMultipartFile.getFileItem ();
    DiskFileItem diskFileItem = (DiskFileItem) fileItem;
    String absPath = diskFileItem.getStoreLocation ().getAbsolutePath ();
    File file = new File (absPath);
    if (! file.exists ()) {
        file.createNewFile ();
        multipartFile.transferTo (file);
    }
    return file;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24341033_24344967_236_250
24341033_24344967_252_263
Title: "Texture deforming 4 points" 
----------------------------------------

Matrix3D (double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22) {
    this.m00 = m00;
    this.m01 = m01;
    this.m02 = m02;
    this.m10 = m10;
    this.m11 = m11;
    this.m12 = m12;
    this.m20 = m20;
    this.m21 = m21;
    this.m22 = m22;
}
----------------------------------------

Matrix3D (Matrix3D m) {
    this.m00 = m.m00;
    this.m01 = m.m01;
    this.m02 = m.m02;
    this.m10 = m.m10;
    this.m11 = m.m11;
    this.m12 = m.m12;
    this.m20 = m.m20;
    this.m21 = m.m21;
    this.m22 = m.m22;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24341033_24344967_298_311
24341033_24344967_330_353
Title: "Texture deforming 4 points" 
----------------------------------------

final void mul (double factor) {
    m00 *= factor;
    m01 *= factor;
    m02 *= factor;
    m10 *= factor;
    m11 *= factor;
    m12 *= factor;
    m20 *= factor;
    m21 *= factor;
    m22 *= factor;
}
----------------------------------------

void mul (Matrix3D m) {
    double nm00 = m00 * m.m00 + m01 * m.m10 + m02 * m.m20;
    double nm01 = m00 * m.m01 + m01 * m.m11 + m02 * m.m21;
    double nm02 = m00 * m.m02 + m01 * m.m12 + m02 * m.m22;
    double nm10 = m10 * m.m00 + m11 * m.m10 + m12 * m.m20;
    double nm11 = m10 * m.m01 + m11 * m.m11 + m12 * m.m21;
    double nm12 = m10 * m.m02 + m11 * m.m12 + m12 * m.m22;
    double nm20 = m20 * m.m00 + m21 * m.m10 + m22 * m.m20;
    double nm21 = m20 * m.m01 + m21 * m.m11 + m22 * m.m21;
    double nm22 = m20 * m.m02 + m21 * m.m12 + m22 * m.m22;
    m00 = nm00;
    m01 = nm01;
    m02 = nm02;
    m10 = nm10;
    m11 = nm11;
    m12 = nm12;
    m20 = nm20;
    m21 = nm21;
    m22 = nm22;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24341460_24343302_4_12
24341460_24443126_1_13
Title: Using Hibernate To Save Failed 
----------------------------------------

public void save (Team t) {
    Session session = HibernateUtil.getCurrentSession ();
    session.getTransaction ().begin ();
    teamDAO.save (t);
    session.flush ();
    session.clear ();
    session.getTransaction ().commit ();
    session.close ();
}
----------------------------------------

public void save (Classes transientInstance) {
    log.debug ("saving Classes instance");
    try {
        HibernateUtil.getCurrentSession ().save (transientInstance);
        log.debug ("save successful");
    } catch (RuntimeException re) {
        log.error ("save failed", re);
        throw re;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24347769_24348069_5_42
24347769_24348493_4_42
Title: In need to create a java program that uses a loop to check if a password is correct. The program runs but the output isn't correct 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    boolean length;
    boolean pass = true;
    String s1;
    System.out.print ("Enter password: ");
    s1 = input.nextLine ();
    boolean [] digit = new boolean [s1.length ()];
    boolean [] lowercase = new boolean [s1.length ()];
    boolean [] uppercase = new boolean [s1.length ()];
    char [] ch = new char [s1.length ()];
    for (int i = 0;
    i < s1.length (); i ++) {
        ch [i] = s1.charAt (i);
        digit [i] = Character.isDigit (ch [i]);
        lowercase [i] = Character.isLowerCase (ch [i]);
        uppercase [i] = Character.isUpperCase (ch [i]);
    }
    length = s1.length () >= 8;
    if (length == false && s1.length () > 0) {
        int i;
        for (i = 0; i < s1.length (); i ++) {
            if (digit [i] == true || lowercase [i] == false || uppercase [i] == true) pass = false;

        }
        if (pass == true) System.out.println ("Valid password");
        else {
            System.out.println ("Invalid password");
        }
    } else {
        System.out.println ("Invalid password");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    boolean length = false;
    boolean digit = false;
    boolean lowercase = false;
    boolean uppercase = false;
    char ch = 0;
    String s1;
    System.out.print ("Enter password: ");
    s1 = input.nextLine ();
    for (int i = 0;
    i < s1.length (); i ++) {
        ch = s1.charAt (i);
        if (Character.isDigit (ch)) {
            digit = true;
        }
        if (Character.isLowerCase (ch)) {
            lowercase = true;
        }
        if (Character.isUpperCase (ch)) {
            uppercase = true;
        }
    }
    if (s1.length () >= 8) {
        length = true;
    }
    if (digit == true && lowercase == true && uppercase == true && length == true) System.out.println ("Valid password");
    else System.out.println ("Invalid password");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24354565_24354711_15_23
24354565_24354711_3_11
Title: java mulithreading deadlock 
----------------------------------------

public void run () {
    synchronized (Integer.class) {
        System.out.println ("Thread 2 after acquiring Integer lock");
        Thread.sleep (5000);
        synchronized (String.class) {
            System.out.println ("Thread 2 after acquiring String lock");
        }
    }
}
----------------------------------------

public void run () {
    synchronized (String.class) {
        System.out.println ("Thread 1 after acquiring String lock");
        Thread.sleep (5000);
        synchronized (Integer.class) {
            System.out.println ("Thread 1 after acquiring Integer lock");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24361899_24362101_7_36
24361899_24388952_4_16
Title: Frame always on top of my program only 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            mainFrame = new JFrame ("test");
            mainFrame.setSize (800, 600);
            mainFrame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            mainFrame.setVisible (true);
            final A a = new A ();
            mainFrame.addWindowListener (new WindowAdapter () {
                @Override
                public void windowDeactivated (WindowEvent e) {
                    a.setAlwaysOnTop (false);
                }@Override
                public void windowActivated (WindowEvent e) {
                    a.setAlwaysOnTop (true);
                }}

            );
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            mainFrame = new JFrame ("test");
            mainFrame.setSize (800, 600);
            mainFrame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            mainFrame.setVisible (true);
            A a = new A ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24363149_24363215_3_25
24363149_24363239_4_22
Title: Nooby Java programmer confused at output (Constructors) 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Are you sure (y - yes, n - no)?");
    try {
        int ch = System.in.read ();
        switch (ch) {
            case 'Y' :
            case 'y' :
                System.out.println ("I am sure.");
                break;
            case 'N' :
            case 'n' :
                System.out.println ("I am not sure.");
                break;
            default :
                System.out.println ("Incorrect choice.");
        }
    } catch (IOException e) {
        System.out.println ("Error reading from user");
    }
}
----------------------------------------

public static final void main (String [] args) {
    try {
        System.out.println ("Are you sure (y - yes, n - no)?");
        int ch = System.in.read ();
        switch (ch) {
            case 'Y' :
            case 'y' :
                System.out.println ("I am sure.");
                break;
            case 'N' :
            case 'n' :
                System.out.println ("I am not sure.");
                break;
            default :
                System.out.println ("Incorrect choice.");
        }
    } catch (IOException e) {
        System.out.println ("An exception occurred.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24379372_24379605_5_31
24379372_24379834_10_21
Title: How to find i maximum values from a file 
----------------------------------------

public static void main (String ar []) {
    ArrayList < Integer > i = new ArrayList < Integer > ();
    i.add (200);
    i.add (203);
    i.add (250);
    i.add (270);
    i.add (20);
    i.add (300);
    i.add (60);
    i.add (10);
    System.out.println (i);
    Collections.sort (i);
    System.out.println (i);
    int someValue = 3;
    if (i.size () >= someValue) {
        for (int j = i.size () - 1;
        someValue > 0; j --) {
            someValue --;
            System.out.println (i.get (j));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Test1 test1 = new Test1 ();
    List < Integer > list = new ArrayList < Integer > ();
    list.add (56);
    list.add (5);
    list.add (90);
    list.add (12);
    list.add (234);
    list.add (90);
    test1.findTopN (list, 2);
    test1.findTopN (list, 4);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24389995_24390124_1_11
24389995_24390189_1_13
Title: How to avoid NULLs in String representation of Binary Search Tree? 
----------------------------------------

public String toString () {
    if (this.left == null) {
        return this.val + this.right;
    } else if (this.right == null) {
        return this.left + this.val;
    } else if (this.left == null && this.right == null) {
        return "";
    } else {
        return this.left + " " + this.val + " " + this.right;
    }

}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    if (this.left != null) {
        sb.append (this.left);
        sb.append (' ');
    }
    sb.append (this.val);
    if (this.right != null) {
        sb.append (' ');
        sb.append (this.right);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24404913_43246818_29_38
24404913_43275560_29_40
Title: Standard FTP Login java class 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter name:");
    String s = sc.next ();
    System.out.println ("Enter pid:");
    int i = sc.nextInt ();
    users obj = new users (s, i);
    System.out.println (obj.auth ());
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter a name s:");
    String s = sc.next ();
    System.out.println ("Enter a password p:");
    String p = sc.next ();
    Login obj = new Login ();
    boolean status = obj.checkValue (s, p);
    System.out.println (status);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
244115_244236_6_21
244115_247495_62_76
Title: How do I tokenize input using Java's Scanner class and regular expressions? 
----------------------------------------

public static void main (String [] args) {
    String textToTokenize = "This is a text that will be tokenized. I will use 1-2 methods.";
    Scanner scanner = new Scanner (textToTokenize);
    scanner.useDelimiter ("i.");
    while (scanner.hasNext ()) {
        System.out.println (scanner.next ());
    }
    System.out.println (" **************** ");
    String [] sSplit = textToTokenize.split ("i.");
    for (String token : sSplit) {
        System.out.println (token);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    List < Rule > rules = new ArrayList < Rule > ();
    rules.add (new Rule ("WORD", "[A-Za-z]+"));
    rules.add (new Rule ("QUOTED", "\"[^\"]*+\""));
    rules.add (new Rule ("COMMENT", "//.*"));
    rules.add (new Rule ("WHITESPACE", "\\s+"));
    String str = "foo //in \"comment\"\nbar \"no //comment\" end";
    List < Token > result = RETokenizer.tokenize (str, rules);
    for (Token t : result) {
        System.out.println (t);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24414299_24414523_1_12
24414299_30616046_1_17
Title: Java Scanner exception handling 
----------------------------------------

private static double inputAmount () {
    Scanner input = new Scanner (System.in);
    while (true) {
        System.out.println ("Insert amount:");
        try {
            return input.nextDouble ();
        } catch (java.util.InputMismatchException e) {
            input.nextLine ();
        }
    }
}
----------------------------------------

private static double inputAmount () {
    Scanner input = new Scanner (System.in);
    while (true) {
        System.out.println ("Insert amount:");
        try {
            double amount = input.nextDouble ();
            return amount;
        } catch (java.util.InputMismatchException e) {
            input.nextLine ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_18610749_8_15
2441501_20601887_1_25
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String b) {
    String j = "";
    int a = b.length ();
    for (int x = a;
    x > 0; x --) {
        j = j + b.substring (x - 1, x);
    }
    return j;
}
----------------------------------------

public String reverse (String arg) {
    char [] s = arg.toCharArray ();
    StringBuilder sb = new StringBuilder ();
    boolean reverse = false;
    boolean isChar = false;
    int insertPos = 0;
    for (int i = 0;
    i < s.length; i ++) {
        isChar = Character.isAlphabetic (s [i]);
        if (! reverse && isChar) {
            sb.append (s [i]);
            insertPos = i;
            reverse = true;
        } else if (reverse && isChar) {
            sb.insert (insertPos, s [i]);
        } else if (! reverse && ! isChar) {
            sb.append (s [i]);
        } else if (reverse && ! isChar) {
            reverse = false;
            sb.append (s [i]);
        }

    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_18610749_8_15
2441501_2441516_1_13
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String b) {
    String j = "";
    int a = b.length ();
    for (int x = a;
    x > 0; x --) {
        j = j + b.substring (x - 1, x);
    }
    return j;
}
----------------------------------------

public String reverse (String word) {
    char [] chs = word.toCharArray ();
    int i = 0, j = chs.length - 1;
    while (i < j) {
        char t = chs [i];
        chs [i] = chs [j];
        chs [j] = t;
        i ++;
        j --;
    }
    return String.valueOf (chs);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_18610749_8_15
2441501_2441518_1_10
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String b) {
    String j = "";
    int a = b.length ();
    for (int x = a;
    x > 0; x --) {
        j = j + b.substring (x - 1, x);
    }
    return j;
}
----------------------------------------

public String reverse (String s) {
    int length = s.length (), last = length - 1;
    char [] chars = s.toCharArray ();
    for (int i = 0;
    i < length / 2; i ++) {
        char c = chars [i];
        chars [i] = chars [last - i];
        chars [last - i] = c;
    }
    return new String (chars);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_18610749_8_15
2441501_2442527_1_28
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String b) {
    String j = "";
    int a = b.length ();
    for (int x = a;
    x > 0; x --) {
        j = j + b.substring (x - 1, x);
    }
    return j;
}
----------------------------------------

public static String reverse (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    StringBuilder wsb = new StringBuilder (string.length ());
    for (int i = 0;
    i < string.length (); i ++) {
        char c = string.charAt (i);
        if (c == '\t' || c == ' ') {
            if (wsb.length () > 0) {
                sb.append (wsb.reverse ().toString ());
                wsb = new StringBuilder (string.length () - sb.length ());
            }
            sb.append (c);
        } else {
            wsb.append (c);
        }
    }
    if (wsb.length () > 0) {
        sb.append (wsb.reverse ().toString ());
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_18610749_8_15
2441501_7225549_1_33
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String b) {
    String j = "";
    int a = b.length ();
    for (int x = a;
    x > 0; x --) {
        j = j + b.substring (x - 1, x);
    }
    return j;
}
----------------------------------------

public static String reverse (String str_words) {
    char [] c_array = str_words.toCharArray ();
    int pos_start = 0;
    int pos_end;
    char c, c_tmp;
    int i, j, rev_length;
    for (i = 0; i < c_array.length; i ++) {
        c = c_array [i];
        if (c == ' ' || c == '\n') {
            if (pos_start != i) {
                pos_end = i - 1;
                rev_length = (i - pos_start) / 2;
                for (j = 0; j < rev_length; j ++) {
                    c_tmp = c_array [pos_start + j];
                    c_array [pos_start + j] = c_array [pos_end - j];
                    c_array [pos_end - j] = c_tmp;
                }
            }
            pos_start = i + 1;
        }
    }
    if (pos_start != i) {
        pos_end = i - 1;
        rev_length = (i - pos_start) / 2;
        for (j = 0; j < rev_length; j ++) {
            c_tmp = c_array [pos_start + j];
            c_array [pos_start + j] = c_array [pos_end - j];
            c_array [pos_end - j] = c_tmp;
        }
    }
    return new String (c_array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_20601887_1_25
2441501_2441516_1_13
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String arg) {
    char [] s = arg.toCharArray ();
    StringBuilder sb = new StringBuilder ();
    boolean reverse = false;
    boolean isChar = false;
    int insertPos = 0;
    for (int i = 0;
    i < s.length; i ++) {
        isChar = Character.isAlphabetic (s [i]);
        if (! reverse && isChar) {
            sb.append (s [i]);
            insertPos = i;
            reverse = true;
        } else if (reverse && isChar) {
            sb.insert (insertPos, s [i]);
        } else if (! reverse && ! isChar) {
            sb.append (s [i]);
        } else if (reverse && ! isChar) {
            reverse = false;
            sb.append (s [i]);
        }

    }
    return sb.toString ();
}
----------------------------------------

public String reverse (String word) {
    char [] chs = word.toCharArray ();
    int i = 0, j = chs.length - 1;
    while (i < j) {
        char t = chs [i];
        chs [i] = chs [j];
        chs [j] = t;
        i ++;
        j --;
    }
    return String.valueOf (chs);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_20601887_1_25
2441501_2441518_1_10
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String arg) {
    char [] s = arg.toCharArray ();
    StringBuilder sb = new StringBuilder ();
    boolean reverse = false;
    boolean isChar = false;
    int insertPos = 0;
    for (int i = 0;
    i < s.length; i ++) {
        isChar = Character.isAlphabetic (s [i]);
        if (! reverse && isChar) {
            sb.append (s [i]);
            insertPos = i;
            reverse = true;
        } else if (reverse && isChar) {
            sb.insert (insertPos, s [i]);
        } else if (! reverse && ! isChar) {
            sb.append (s [i]);
        } else if (reverse && ! isChar) {
            reverse = false;
            sb.append (s [i]);
        }

    }
    return sb.toString ();
}
----------------------------------------

public String reverse (String s) {
    int length = s.length (), last = length - 1;
    char [] chars = s.toCharArray ();
    for (int i = 0;
    i < length / 2; i ++) {
        char c = chars [i];
        chars [i] = chars [last - i];
        chars [last - i] = c;
    }
    return new String (chars);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_20601887_1_25
2441501_2442527_1_28
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String arg) {
    char [] s = arg.toCharArray ();
    StringBuilder sb = new StringBuilder ();
    boolean reverse = false;
    boolean isChar = false;
    int insertPos = 0;
    for (int i = 0;
    i < s.length; i ++) {
        isChar = Character.isAlphabetic (s [i]);
        if (! reverse && isChar) {
            sb.append (s [i]);
            insertPos = i;
            reverse = true;
        } else if (reverse && isChar) {
            sb.insert (insertPos, s [i]);
        } else if (! reverse && ! isChar) {
            sb.append (s [i]);
        } else if (reverse && ! isChar) {
            reverse = false;
            sb.append (s [i]);
        }

    }
    return sb.toString ();
}
----------------------------------------

public static String reverse (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    StringBuilder wsb = new StringBuilder (string.length ());
    for (int i = 0;
    i < string.length (); i ++) {
        char c = string.charAt (i);
        if (c == '\t' || c == ' ') {
            if (wsb.length () > 0) {
                sb.append (wsb.reverse ().toString ());
                wsb = new StringBuilder (string.length () - sb.length ());
            }
            sb.append (c);
        } else {
            wsb.append (c);
        }
    }
    if (wsb.length () > 0) {
        sb.append (wsb.reverse ().toString ());
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_20601887_1_25
2441501_7225549_1_33
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String arg) {
    char [] s = arg.toCharArray ();
    StringBuilder sb = new StringBuilder ();
    boolean reverse = false;
    boolean isChar = false;
    int insertPos = 0;
    for (int i = 0;
    i < s.length; i ++) {
        isChar = Character.isAlphabetic (s [i]);
        if (! reverse && isChar) {
            sb.append (s [i]);
            insertPos = i;
            reverse = true;
        } else if (reverse && isChar) {
            sb.insert (insertPos, s [i]);
        } else if (! reverse && ! isChar) {
            sb.append (s [i]);
        } else if (reverse && ! isChar) {
            reverse = false;
            sb.append (s [i]);
        }

    }
    return sb.toString ();
}
----------------------------------------

public static String reverse (String str_words) {
    char [] c_array = str_words.toCharArray ();
    int pos_start = 0;
    int pos_end;
    char c, c_tmp;
    int i, j, rev_length;
    for (i = 0; i < c_array.length; i ++) {
        c = c_array [i];
        if (c == ' ' || c == '\n') {
            if (pos_start != i) {
                pos_end = i - 1;
                rev_length = (i - pos_start) / 2;
                for (j = 0; j < rev_length; j ++) {
                    c_tmp = c_array [pos_start + j];
                    c_array [pos_start + j] = c_array [pos_end - j];
                    c_array [pos_end - j] = c_tmp;
                }
            }
            pos_start = i + 1;
        }
    }
    if (pos_start != i) {
        pos_end = i - 1;
        rev_length = (i - pos_start) / 2;
        for (j = 0; j < rev_length; j ++) {
            c_tmp = c_array [pos_start + j];
            c_array [pos_start + j] = c_array [pos_end - j];
            c_array [pos_end - j] = c_tmp;
        }
    }
    return new String (c_array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2441516_1_13
2441501_2441518_1_10
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String word) {
    char [] chs = word.toCharArray ();
    int i = 0, j = chs.length - 1;
    while (i < j) {
        char t = chs [i];
        chs [i] = chs [j];
        chs [j] = t;
        i ++;
        j --;
    }
    return String.valueOf (chs);
}
----------------------------------------

public String reverse (String s) {
    int length = s.length (), last = length - 1;
    char [] chars = s.toCharArray ();
    for (int i = 0;
    i < length / 2; i ++) {
        char c = chars [i];
        chars [i] = chars [last - i];
        chars [last - i] = c;
    }
    return new String (chars);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2441516_1_13
2441501_2442527_1_28
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String word) {
    char [] chs = word.toCharArray ();
    int i = 0, j = chs.length - 1;
    while (i < j) {
        char t = chs [i];
        chs [i] = chs [j];
        chs [j] = t;
        i ++;
        j --;
    }
    return String.valueOf (chs);
}
----------------------------------------

public static String reverse (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    StringBuilder wsb = new StringBuilder (string.length ());
    for (int i = 0;
    i < string.length (); i ++) {
        char c = string.charAt (i);
        if (c == '\t' || c == ' ') {
            if (wsb.length () > 0) {
                sb.append (wsb.reverse ().toString ());
                wsb = new StringBuilder (string.length () - sb.length ());
            }
            sb.append (c);
        } else {
            wsb.append (c);
        }
    }
    if (wsb.length () > 0) {
        sb.append (wsb.reverse ().toString ());
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2441516_1_13
2441501_7225549_1_33
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String word) {
    char [] chs = word.toCharArray ();
    int i = 0, j = chs.length - 1;
    while (i < j) {
        char t = chs [i];
        chs [i] = chs [j];
        chs [j] = t;
        i ++;
        j --;
    }
    return String.valueOf (chs);
}
----------------------------------------

public static String reverse (String str_words) {
    char [] c_array = str_words.toCharArray ();
    int pos_start = 0;
    int pos_end;
    char c, c_tmp;
    int i, j, rev_length;
    for (i = 0; i < c_array.length; i ++) {
        c = c_array [i];
        if (c == ' ' || c == '\n') {
            if (pos_start != i) {
                pos_end = i - 1;
                rev_length = (i - pos_start) / 2;
                for (j = 0; j < rev_length; j ++) {
                    c_tmp = c_array [pos_start + j];
                    c_array [pos_start + j] = c_array [pos_end - j];
                    c_array [pos_end - j] = c_tmp;
                }
            }
            pos_start = i + 1;
        }
    }
    if (pos_start != i) {
        pos_end = i - 1;
        rev_length = (i - pos_start) / 2;
        for (j = 0; j < rev_length; j ++) {
            c_tmp = c_array [pos_start + j];
            c_array [pos_start + j] = c_array [pos_end - j];
            c_array [pos_end - j] = c_tmp;
        }
    }
    return new String (c_array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2441518_1_10
2441501_2442527_1_28
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String s) {
    int length = s.length (), last = length - 1;
    char [] chars = s.toCharArray ();
    for (int i = 0;
    i < length / 2; i ++) {
        char c = chars [i];
        chars [i] = chars [last - i];
        chars [last - i] = c;
    }
    return new String (chars);
}
----------------------------------------

public static String reverse (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    StringBuilder wsb = new StringBuilder (string.length ());
    for (int i = 0;
    i < string.length (); i ++) {
        char c = string.charAt (i);
        if (c == '\t' || c == ' ') {
            if (wsb.length () > 0) {
                sb.append (wsb.reverse ().toString ());
                wsb = new StringBuilder (string.length () - sb.length ());
            }
            sb.append (c);
        } else {
            wsb.append (c);
        }
    }
    if (wsb.length () > 0) {
        sb.append (wsb.reverse ().toString ());
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2441518_1_10
2441501_7225549_1_33
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public String reverse (String s) {
    int length = s.length (), last = length - 1;
    char [] chars = s.toCharArray ();
    for (int i = 0;
    i < length / 2; i ++) {
        char c = chars [i];
        chars [i] = chars [last - i];
        chars [last - i] = c;
    }
    return new String (chars);
}
----------------------------------------

public static String reverse (String str_words) {
    char [] c_array = str_words.toCharArray ();
    int pos_start = 0;
    int pos_end;
    char c, c_tmp;
    int i, j, rev_length;
    for (i = 0; i < c_array.length; i ++) {
        c = c_array [i];
        if (c == ' ' || c == '\n') {
            if (pos_start != i) {
                pos_end = i - 1;
                rev_length = (i - pos_start) / 2;
                for (j = 0; j < rev_length; j ++) {
                    c_tmp = c_array [pos_start + j];
                    c_array [pos_start + j] = c_array [pos_end - j];
                    c_array [pos_end - j] = c_tmp;
                }
            }
            pos_start = i + 1;
        }
    }
    if (pos_start != i) {
        pos_end = i - 1;
        rev_length = (i - pos_start) / 2;
        for (j = 0; j < rev_length; j ++) {
            c_tmp = c_array [pos_start + j];
            c_array [pos_start + j] = c_array [pos_end - j];
            c_array [pos_end - j] = c_tmp;
        }
    }
    return new String (c_array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_2442527_1_28
2441501_7225549_1_33
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static String reverse (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    StringBuilder wsb = new StringBuilder (string.length ());
    for (int i = 0;
    i < string.length (); i ++) {
        char c = string.charAt (i);
        if (c == '\t' || c == ' ') {
            if (wsb.length () > 0) {
                sb.append (wsb.reverse ().toString ());
                wsb = new StringBuilder (string.length () - sb.length ());
            }
            sb.append (c);
        } else {
            wsb.append (c);
        }
    }
    if (wsb.length () > 0) {
        sb.append (wsb.reverse ().toString ());
    }
    return sb.toString ();
}
----------------------------------------

public static String reverse (String str_words) {
    char [] c_array = str_words.toCharArray ();
    int pos_start = 0;
    int pos_end;
    char c, c_tmp;
    int i, j, rev_length;
    for (i = 0; i < c_array.length; i ++) {
        c = c_array [i];
        if (c == ' ' || c == '\n') {
            if (pos_start != i) {
                pos_end = i - 1;
                rev_length = (i - pos_start) / 2;
                for (j = 0; j < rev_length; j ++) {
                    c_tmp = c_array [pos_start + j];
                    c_array [pos_start + j] = c_array [pos_end - j];
                    c_array [pos_end - j] = c_tmp;
                }
            }
            pos_start = i + 1;
        }
    }
    if (pos_start != i) {
        pos_end = i - 1;
        rev_length = (i - pos_start) / 2;
        for (j = 0; j < rev_length; j ++) {
            c_tmp = c_array [pos_start + j];
            c_array [pos_start + j] = c_array [pos_end - j];
            c_array [pos_end - j] = c_tmp;
        }
    }
    return new String (c_array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_30879885_1_27
2441501_34478674_6_28
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static void main (String args []) {
    String s, rev = "";
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string to reverse");
    s = in.nextLine ();
    int length = s.length ();
    int l, r;
    int i = 0;
    while (i < length) {
        l = i;
        while (i < length && s.charAt (i) != ' ') {
            i ++;
        }
        r = i - 1;
        for (int j = r;
        j >= l; j --) {
            rev = rev + s.charAt (j);
        }
        rev = rev + " ";
        i ++;
    }
    System.out.println ("Reverse of entered string is: " + rev);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String inputStr = "Hello World";
    String reversed = "";
    ArrayList < String > alist = new ArrayList < String > ();
    for (int i = inputStr.length () - 1;
    i >= 0; i --) {
        if (inputStr.charAt (i) != ' ') {
            reversed = reversed + inputStr.charAt (i);
        } else {
            alist.add (reversed);
            reversed = "";
        }
    }
    alist.add (reversed);
    String result = "";
    for (int i = alist.size () - 1;
    i >= 0; i --) {
        result = result + alist.get (i);
        result = result + " ";
    }
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_30879885_1_27
2441501_38341695_1_17
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static void main (String args []) {
    String s, rev = "";
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a string to reverse");
    s = in.nextLine ();
    int length = s.length ();
    int l, r;
    int i = 0;
    while (i < length) {
        l = i;
        while (i < length && s.charAt (i) != ' ') {
            i ++;
        }
        r = i - 1;
        for (int j = r;
        j >= l; j --) {
            rev = rev + s.charAt (j);
        }
        rev = rev + " ";
        i ++;
    }
    System.out.println ("Reverse of entered string is: " + rev);
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "Hello how are you";
    String [] string2 = string1.split (" ");
    String result = "";
    for (int i = 0;
    i < string2.length; i ++) {
        StringBuilder stringBuilder = new StringBuilder (string2 [i]);
        result = (i == 0) ? (result + stringBuilder.reverse ().toString ()) : (result + " " + stringBuilder.reverse ().toString ());
    }
    System.out.println ("Result line:" + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2441501_34478674_6_28
2441501_38341695_1_17
Title: "Reverse each individual word of ""Hello World"" string with Java" 
----------------------------------------

public static void main (String [] args) throws IOException {
    String inputStr = "Hello World";
    String reversed = "";
    ArrayList < String > alist = new ArrayList < String > ();
    for (int i = inputStr.length () - 1;
    i >= 0; i --) {
        if (inputStr.charAt (i) != ' ') {
            reversed = reversed + inputStr.charAt (i);
        } else {
            alist.add (reversed);
            reversed = "";
        }
    }
    alist.add (reversed);
    String result = "";
    for (int i = alist.size () - 1;
    i >= 0; i --) {
        result = result + alist.get (i);
        result = result + " ";
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    String string1 = "Hello how are you";
    String [] string2 = string1.split (" ");
    String result = "";
    for (int i = 0;
    i < string2.length; i ++) {
        StringBuilder stringBuilder = new StringBuilder (string2 [i]);
        result = (i == 0) ? (result + stringBuilder.reverse ().toString ()) : (result + " " + stringBuilder.reverse ().toString ());
    }
    System.out.println ("Result line:" + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24424592_24425096_1_16
24424592_24425666_29_38
Title: Screenshot of a panel with opened comboboxes 
----------------------------------------

@Override
public void actionPerformed (ActionEvent arg0) {
    Point p = new Point (0, 0);
    SwingUtilities.convertPointToScreen (p, JMainPanel);
    Rectangle screenBounds = new Rectangle (p.x, p.y, JMainPanel.getSize ().width, JMainPanel.getSize ().height);
    try {
        Robot robot = new Robot ();
        BufferedImage screenCapture = robot.createScreenCapture (screenBounds);
        jImage.getGraphics ().drawImage (screenCapture, 0, 0, jImage);
    } catch (AWTException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    final BufferedImage bf = new BufferedImage (400, 400, BufferedImage.TYPE_INT_RGB);
    javax.swing.SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            jf.getRootPane ().paint (bf.getGraphics ());
            jImage.getGraphics ().drawImage (bf, 0, 0, jImage);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24437097_24448605_1_51
24437097_24509827_6_43
Title: Page link : easy with HTML but not with Java SWT 
----------------------------------------

public static void main (String [] args) {
    final Display display = new Display ();
    final Shell shell = new Shell (display);
    shell.setText ("StackOverflow");
    shell.setLayout (new GridLayout ());
    final Composite parent = new Composite (shell, SWT.NONE);
    parent.setLayoutData (new GridData (SWT.FILL, SWT.FILL, true, true));
    final StackLayout layout = new StackLayout ();
    parent.setLayout (layout);
    final Composite [] pages = new Composite [5];
    for (int i = 0;
    i < pages.length; i ++) {
        pages [i] = new Composite (parent, SWT.NONE);
        pages [i].setLayout (new GridLayout (3, true));
        pages [i].setLayoutData (new GridData (SWT.FILL, SWT.FILL, true, true));
        for (int j = 0;
        j < 9; j ++) new Label (pages [i], SWT.NONE).setText ("C" + i + " B" + j);

        Button goToNext = new Button (pages [i], SWT.PUSH);
        goToNext.setText ("Go to next");
        goToNext.addListener (SWT.Selection, new Listener () {
            @Override
            public void handleEvent (Event arg0) {
                current = (current + 1) % pages.length;
                layout.topControl = pages [current];
                parent.layout ();
            }}

        );
    }
    layout.topControl = pages [0];
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
    display.dispose ();
}
----------------------------------------

public static void main (String [] args) {
    Display display = Display.getDefault ();
    Shell shell = new Shell ();
    shell.setText ("SWT Application");
    shell.setLayout (new GridLayout ());
    parent = new Composite (shell, SWT.NONE);
    stackLayout = new StackLayout ();
    parent.setLayout (stackLayout);
    final Page1 page1 = new Page1 (parent, SWT.NONE);
    page1.setLayout (new GridLayout ());
    final Page2 page2 = new Page2 (parent, SWT.NONE);
    page2.setLayout (new GridLayout ());
    final Vector < Composite > pageVector = new Vector < Composite > ();
    pageVector.add (0, page1);
    pageVector.add (1, page2);
    page1.addLink (pageVector);
    page2.addLink (pageVector);
    stackLayout.topControl = page1;
    shell.open ();
    shell.layout ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24464279_24466555_4_14
24464279_24467730_8_17
Title: How to get nth element of a Set 
----------------------------------------

public static < T > T nthElement (Set < T > set, int n) {
    if (null != set && n >= 0 && n < set.size ()) {
        int count = 0;
        for (T element : set) {
            if (n == count) return element;

            count ++;
        }
    }
    return null;
}
----------------------------------------

public static final < T > T nthElement (Iterable < T > data, int n) {
    int index = 0;
    for (T element : data) {
        if (index == n) {
            return element;
        }
        index ++;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24468340_24468372_13_19
24468340_24468372_1_11
Title: Spring:Propagation.REQUIRED not working 
----------------------------------------

@Transactional (propagation = Propagation.REQUIRED)
public void saveRecords () {
    saveDepartment (dept);
    try {
        saveEmployee (empl);
    } catch (Exception e) {
        Logger.log ("Fail to save emp !");
    }
}
----------------------------------------

@Transactional (propagation = Propagation.REQUIRES_NEW)
public void saveEmployee (Employee empl) {
    try {
        jdbcTemplate.update ("INSERT INTO EMP VALUES(?,?,?,?,?)", empl.getEmpId (), empl.getEmpName (), empl.getDeptId (), empl.getAge (), empl.getSex ());
    } catch (DataAccessException e) {
        e.printStackTrace ();
        throw e;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24473364_24473390_1_10
24473364_24473451_1_10
Title: Finding if Multiple Keys Map to the Same Value 
----------------------------------------

public static < K, V > boolean isUnique (Map < K, V > input) {
    if (input == null || input.isEmpty ()) {
        return true;
    }
    Set < V > set = new HashSet < V > ();
    for (V value : input.values ()) {
        set.add (value);
    }
    return set.size () == input.size ();
}
----------------------------------------

public static boolean isUnique (Map < String, String > input) {
    Set < String > uniqueValues = new HashSet < String > ();
    for (String value : input.values ()) {
        if (uniqueValues.contains (value)) {
            return false;
        }
        uniqueValues.add (value);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24473364_24473390_1_10
24473364_43441797_1_11
Title: Finding if Multiple Keys Map to the Same Value 
----------------------------------------

public static < K, V > boolean isUnique (Map < K, V > input) {
    if (input == null || input.isEmpty ()) {
        return true;
    }
    Set < V > set = new HashSet < V > ();
    for (V value : input.values ()) {
        set.add (value);
    }
    return set.size () == input.size ();
}
----------------------------------------

public static boolean isUnique (Map < String, String > map) {
    Map < String, Integer > check = new HashMap < String, Integer > ();
    for (String v : map.values ()) {
        if (check.containsKey (v)) {
            return false;
        } else {
            check.put (v, 1);
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24488050_24488582_1_25
24488050_24488855_12_35
Title: random sampling a subset of arraylist w/o replacement 
----------------------------------------

public static void main (String [] args) {
    List < String > wholeList = new ArrayList < > ();
    wholeList.add ("AAA");
    wholeList.add ("BBB");
    wholeList.add ("CCC");
    wholeList.add ("DDD");
    wholeList.add ("EEE");
    wholeList.add ("FFF");
    wholeList.add ("GGG");
    int randomLimit = wholeList.size ();
    Random r = new Random ();
    for (int i = 0;
    i < 1000; i ++) {
        int u = r.nextInt (randomLimit);
        int v = r.nextInt (randomLimit);
        int w = r.nextInt (randomLimit);
        System.out.print (wholeList.get (u) + "\t");
        System.out.print (wholeList.get (v) + "\t");
        System.out.println (wholeList.get (w));
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner scan1 = new Scanner (new File ("YOUR_INPUT_FILE"));
    ArrayList < String > wholeList = new ArrayList < String > ();
    String line = "";
    while (scan1.hasNextLine ()) {
        line = scan1.nextLine ();
        wholeList.add (line);
    }
    try {
        FileWriter stream = new FileWriter ("YOUR_OUTPUT_FILE");
        BufferedWriter out = new BufferedWriter (stream);
        for (int i = 0, n = wholeList.size ();
        i < n; i ++) {
            Random r = new Random ();
            Collections.shuffle (wholeList);
            out.append (wholeList.get (r.nextInt (wholeList.size ())) + "\t");
            out.append (wholeList.get (r.nextInt (wholeList.size ())) + "\t");
            out.append (wholeList.get (r.nextInt (wholeList.size ())) + "\t");
            out.append ("\n");
        }
        out.close ();
    } catch (IOException e) {
        System.err.println ("Error: " + e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24488317_24488630_1_33
24488317_24488786_1_21
Title: How do I sorting an array using this way only ...? 
----------------------------------------

public static void main (String [] args) {
    int [] RandomArray = new int [5];
    for (int i = 0;
    i < RandomArray.length; i ++) {
        String element = JOptionPane.showInputDialog ("Please insert any number " + (i + 1));
        RandomArray [i] = Integer.parseInt (element);
    }
    int [] SortedArray = new int [5];
    int sortArrayLength = 0;
    for (int d = 0;
    d < RandomArray.length; d ++) {
        int i = 0;
        int small = RandomArray [i];
        while (sortContains (small, SortedArray)) {
            small = RandomArray [++ i];
        }
        for (int k = 0;
        k < RandomArray.length; k ++) {
            int temp = RandomArray [k];
            if (sortContains (temp, SortedArray)) {
                continue;
            } else {
                if (temp < small) {
                    small = temp;
                }
            }
        }
        SortedArray [sortArrayLength ++] = small;
    }
    for (int k = 0;
    k < SortedArray.length; k ++) {
        System.out.println (SortedArray [k]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers = {10, 5, 6, 11, 2, 5, 1};
    int [] sortedNumbers = new int [numbers.length];
    Arrays.fill (sortedNumbers, Integer.MAX_VALUE);
    for (int n : numbers) {
        if (n < sortedNumbers [numbers.length - 1]) {
            sortedNumbers [numbers.length - 1] = n;
            Arrays.sort (sortedNumbers);
        }
    }
    System.out.println (Arrays.toString (numbers));
    System.out.println (Arrays.toString (sortedNumbers));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24488825_40212870_25_39
24488825_48722399_27_47
Title: How to open new stage and close previous stage between classes 
----------------------------------------

public void start (Stage primaryStage) {
    try {
        this.primaryStage = primaryStage;
        scene = initStage ();
        scene.getStylesheets ().add (getClass ().getResource ("application.css").toExternalForm ());
        primaryStage.setScene (scene);
        primaryStage.show ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    Button btnLogin = new Button ();
    btnLogin.setText ("Login");
    btnLogin.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            showLoginScreen ();
        }}

    );
    StackPane root = new StackPane ();
    root.getChildren ().add (btnLogin);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("JavaFX Demo");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24489841_24490201_1_20
24489841_24490223_1_19
Title: How to check for a certain value and then exchange to money values in Java? 
----------------------------------------

public static void main (String [] args) {
    List < Integer > availNote = new ArrayList < Integer > ();
    availNote.addAll (Arrays.asList (500, 200, 100, 50, 20, 10, 5, 2, 1));
    System.out.println (availNote);
    Scanner in = new Scanner (System.in);
    int znesek = Integer.parseInt (in.next ());
    System.out.print ("Potrebovali bi bankovce za: ");
    List < Integer > splitedAmount = new ArrayList < Integer > ();
    while (znesek != 0) {
        for (int i = 0;
        i < availNote.size (); i ++) {
            if (znesek >= availNote.get (i)) {
                splitedAmount.add (availNote.get (i));
                znesek = znesek - availNote.get (i);
            }
        }
    }
    System.out.println (splitedAmount);
}
----------------------------------------

public static void main (String [] args) {
    int [] bills = {500, 200, 100, 50, 20, 10, 5, 2, 1};
    int amount = 250;
    int sum = 0;
    System.out.print ("We will need bills for: ");
    while (sum < amount) {
        for (int i = 0;
        i < bills.length; i ++) {
            if (sum + bills [i] <= amount) {
                sum += bills [i];
                System.out.print (bills [i] + ", ");
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24502811_24502998_1_13
24502811_24503037_1_13
Title: String splitting and wrapping 
----------------------------------------

public static void main (String [] args) {
    String A_Old = "010.011.100.000.111.001.011.000.101.110";
    String A_new = "";
    String newe [] = A_Old.split ("\\.000");
    for (int i = newe.length - 1;
    i >= 0; i --) {
        A_new += newe [i];
    }
    System.out.print (A_new.replaceFirst ("\\.", ""));
}
----------------------------------------

public static void main (String [] args) {
    String inString = "010.011.100.000.111";
    String outString = "";
    String [] arr = inString.split ("\\.000\\.");
    outString = arr [0];
    for (int i = 1;
    i < arr.length; i ++) {
        outString = outString + arr [i];
    }
    System.out.println (outString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24506600_24507346_36_50
24506600_24507346_7_23
Title: Read file with BufferReader when multiple thread writing to the file 
----------------------------------------

public void run () {
    try {
        FileReader reader = new FileReader ("D:\\text.txt");
        BufferedReader br = new BufferedReader (reader);
        String detail;
        while ((detail = br.readLine ()) != null) {
            System.out.println (detail);
        }
        br.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    FileWriter writer;
    try {
        int i = 1;
        writer = new FileWriter ("D:\\text.txt");
        writer.append ("line" + i ++ + "\n");
        writer.flush ();
        while (true) {
            writer.append ("line" + i ++ + "\n");
            writer.flush ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24506600_24507346_3_53
24506600_24523783_7_18
Title: Read file with BufferReader when multiple thread writing to the file 
----------------------------------------

public static void main (String [] args) {
    new Thread (new Runnable () {
        @Override
        public void run () {
            FileWriter writer;
            try {
                int i = 1;
                writer = new FileWriter ("D:\\text.txt");
                writer.append ("line" + i ++ + "\n");
                writer.flush ();
                while (true) {
                    writer.append ("line" + i ++ + "\n");
                    writer.flush ();
                }
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }}

    ).start ();
    try {
        Thread.sleep (500);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                FileReader reader = new FileReader ("D:\\text.txt");
                BufferedReader br = new BufferedReader (reader);
                String detail;
                while ((detail = br.readLine ()) != null) {
                    System.out.println (detail);
                }
                br.close ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }}

    ).start ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    StringBuffer intiLine = new StringBuffer ("");
    FileReader reader = new FileReader ("D:\\logs\\notify-subscription.log");
    BufferedReader br = new BufferedReader (reader);
    String detail;
    while ((detail = br.readLine ()) != null) {
        System.out.println (detail);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24514118_24514411_1_33
24514118_24514477_1_11
Title: How to take in information using an array of objects in Java? 
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner input = new Scanner (System.in);
    System.out.print ("How many people are you entering? ");
    int people = input.nextInt ();
    Human [] person = new Human [people];
    for (int i = 0;
    i < people; i ++) {
        System.out.println ("Creating new human number : " + i);
        Human h = new Human ();
        person [i] = h;
        System.out.print ("Please enter an age: ");
        person [i].age = input.nextInt ();
        System.out.print ("Please enter a name: ");
        person [i].name = input.next ();
        System.out.print ("Please enter a gender: ");
        person [i].gender = input.next ();
    }
    System.out.println ("Here are the people that you entered: ");
    for (int i = 0;
    i < person.length; i ++) {
        System.out.print (person [i].age + " ");
        System.out.print (person [i].name + " ");
        System.out.println (person [i].gender);
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Human > list = new ArrayList < > ();
    Scanner in = new Scanner (System.in);
    for (int i = 0;
    i < 3; i ++) {
        list.add (new Human ());
        System.out.print ("Name: ");
        list.get (i).name = in.next ();
        System.out.print ("Age: ");
        list.get (i).age = Integer.parseInt (in.next ());
        System.out.print ("Gender: ");
        list.get (i).gender = in.next ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24518576_24518641_3_23
24518576_24518801_3_32
Title: Replacing a number with a word Java 
----------------------------------------

public static void main (String [] args) {
    int counter = 0;
    int max = 100;
    for (int i = 1;
    i <= max; i ++) {
        if (counter % 3 == 0 && counter % 5 == 0) {
            System.out.println ("CracklePop");
        } else if (counter % 3 == 0) {
            System.out.println ("Crackle");
        } else if (counter % 5 == 0) {
            System.out.println ("Pop");
        }

        System.out.println (counter);
        counter ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    int max = 100;
    boolean flag = false;
    for (int i = 1;
    i <= max; i ++) {
        if (i % 3 == 0) {
            System.out.print ("Crackle");
            flag = true;
        }
        if (i % 5 == 0) {
            System.out.print ("Pop");
            flag = true;
        }
        if (! flag) System.out.print ("" + i);

        flag = false;
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2451892_2451962_6_35
2451892_50914443_6_20
Title: How do I connect to a SQL Server 2008 database using JDBC? 
----------------------------------------

public static void main (String args []) {
    String dbtime;
    String dbUrl = "jdbc:mysql://your.database.domain/yourDBname";
    String dbClass = "com.mysql.jdbc.Driver";
    String query = "Select * FROM users";
    try {
        Class.forName ("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection (dbUrl);
        Statement stmt = con.createStatement ();
        ResultSet rs = stmt.executeQuery (query);
        while (rs.next ()) {
            dbtime = rs.getString (1);
            System.out.println (dbtime);
        }
        con.close ();
    } catch (ClassNotFoundException e) {
        e.printStackTrace ();
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws InstantiationException, IllegalAccessException, ClassNotFoundException {
    Connection conn = null;
    try {
        Class.forName ("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance ();
        conn = DriverManager.getConnection ("jdbc:sqlserver://localhost:1433;databaseName=company", "sa", "root");
        if (conn != null) System.out.println ("Database Successfully connected");

    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
24520129_24520254_1_21
24520129_24520254_23_54
Title: Java Threads: synchronized reading and writing of value on the same object 
----------------------------------------

@Override
public void run () {
    int i = 0;
    while (i < 100) {
        synchronized (stored_integer) {
            System.out.format ("%s: Writing %d to StoredInteger\n", this.getClass ().getSimpleName (), i);
            stored_integer.value = i;
            i ++;
            stored_integer.notify ();
            try {
                stored_integer.wait ();
            } catch (InterruptedException ex) {
            }
        }
    }
}
----------------------------------------

@Override
public void run () {
    synchronized (stored_integer) {
        try {
            stored_integer.wait ();
        } catch (InterruptedException ex) {
        }
    }
    int i = 0;
    while (i < 100) {
        synchronized (stored_integer) {
            System.out.format ("%s: Reading %d from StoredInteger\n", this.getClass ().getSimpleName (), stored_integer.value);
            i ++;
            stored_integer.notify ();
            if (i < 100) {
                try {
                    stored_integer.wait ();
                } catch (InterruptedException ex) {
                }
            }
        }
    }
}
----------------------------------------
