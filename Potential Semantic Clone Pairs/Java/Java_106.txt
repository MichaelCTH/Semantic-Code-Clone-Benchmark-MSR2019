$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43785090_43786713_1_23
43785090_43787850_19_37
Title: Storing bits in array of int 
----------------------------------------

public static void inBinary (int number) {
    if (number < 0) {
        throw new IllegalArgumentException ("Negative numbers not possible!");
    }
    List < Integer > binaryDigitsList = new ArrayList < Integer > ();
    while (number != 0) {
        int digit = number % 2;
        binaryDigitsList.add (digit);
        number = number / 2;
    }
    int [] binaryArr = new int [binaryDigitsList.size ()];
    for (int k = binaryDigitsList.size () - 1, index = 0;
    k >= 0; k --) {
        binaryArr [index] = binaryDigitsList.get (k);
        index ++;
    }
    for (int index = 0;
    index < binaryArr.length; index ++) System.out.println ("BinaryArray[" + index + "] = " + binaryArr [index]);

}
----------------------------------------

public static void inBinary (int number) {
    int binary [] = new int [1];
    int index = 0;
    while (number > 0) {
        binary = (int []) resizeArray (binary, index + 1);
        binary [index ++] = number % 2;
        number = number / 2;
    }
    for (int i = index - 1;
    i >= 0; i --) {
        System.out.print (binary [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43788700_43788810_4_11
43788700_43806897_8_18
Title: Improper synchronization in java 
----------------------------------------

private static synchronized void update () {
    int v = count;
    try {
        sleep (10);
    } catch (Exception e) {
    }
    v ++;
    count = v;
}
----------------------------------------

private void update () {
    synchronized (LOCK) {
        int v = count;
        try {
            sleep (10);
        } catch (Exception e) {
        }
        v ++;
        count = v;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43808958_43809552_26_40
43808958_43809670_27_46
Title: How to solve for sorted anagrams 
----------------------------------------

private void solveChallenge (List < String > words) {
    for (int i = 0;
    i < (words.size () - 1); i ++) {
        Set < String > result = new TreeSet < > ();
        int j = i + 1;
        while (j < words.size ()) {
            if (isAnagram (words.get (i), words.get (j))) {
                result.add (words.get (i) + " " + words.get (j));
                System.out.println (result);
                words.remove (j);
            } else {
                j ++;
            }
        }
    }
}
----------------------------------------

private void solveChallenge (List < String > words) {
    List < String > result = new ArrayList < > ();
    for (int i = 0;
    i < (words.size ()); i ++) {
        List < String > resultant_strings = new ArrayList < > ();
        resultant_strings.add (words.get (i));
        for (int j = (i + 1);
        j < words.size (); j ++) {
            if (isAnagram (words.get (i), words.get (j))) {
                resultant_strings.add (words.get (j));
                words.remove (j);
                j --;
            }
        }
        Collections.sort (resultant_strings);
        String resultant_string = resultant_strings.toString ();
        result.add (resultant_string);
    }
    Collections.sort (result);
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43825689_43825710_1_11
43825689_43825725_1_13
Title: If Else AssignmentOperator Issues - Java 
----------------------------------------

public double pointsEarned () {
    if (this.finishOrder == 1) {
        return (this.time - 10);
    } else if (this.finishOrder == 2) {
        return (this.time - 7);
    } else if (this.finishOrder == 3) {
        return (this.time - 3);
    } else {
        return this.time;
    }

}
----------------------------------------

public double pointsEarned () {
    switch (this.finishOrder) {
        case 1 :
            return (this.time - 10);
        case 2 :
            return (this.time - 7);
        case 3 :
            return (this.time - 3);
        default :
            break;
    }
    return this.time;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43826590_43826688_15_26
43826590_43826688_28_37
Title: Trying to draw a board 
----------------------------------------

public DrawPanel (int rows, int cols, int xSize, int ySize) {
    super ();
    this.rows = rows;
    this.cols = cols;
    this.xSize = xSize;
    this.ySize = ySize;
    this.board = new char [rows] [cols];
    init ();
    initRandomTiles ();
}
----------------------------------------

public DrawPanel (String filename) {
    super ();
    try {
        loadBoard (filename);
        init ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43827409_43827432_1_16
43827409_43827434_1_11
Title: How can I remove items from arrayList by StudentID? 
----------------------------------------

public static void remove (int StudentID) {
    int initialSize = myRoster.size ();
    for (int i = 0;
    i < myRoster.size (); i ++) {
        if (myRoster.get (i).getStudentID == StudentID) {
            myRoster.remove (i);
        }
    }
    if (initialSize == myRoster.size ()) {
        System.out.println ("Student with ID " + StudentID + " was not found");
    }
}
----------------------------------------

public static void remove (int StudentID) {
    Iterator < Student > it = myRoster.iterator ();
    while (it.hasNext ()) {
        Student stud = (Student) it.next ();
        if (stud.getStudentID () == StudentID) {
            it.remove ();
            return;
        }
    }
    System.out.println ("Student with ID " + StudentID + " was not found");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43828214_43828370_1_23
43828214_43828403_1_30
Title: Multiple Java errors that I am having trouble resolving 
----------------------------------------

public static void main (String [] args) {
    String name;
    int love;
    Scanner scanIn = new Scanner (System.in);
    System.out.println ("How much love do you need?");
    love = scanIn.nextInt ();
    for (love = 0; love < 0;) System.out.println ("Everybody needs some love!");

    for (; love > 10;) System.out.println ("You cannot handle that much love!");

    for (; love > 0 && love < 10;) System.out.println ("I love you " + love + " ways");

    scanIn.close ();
}
----------------------------------------

public static void main (String [] args) {
    String name;
    int love;
    Scanner scanIn = new Scanner (System.in);
    System.out.println ("How much love do you need?");
    love = scanIn.nextInt ();
    for (int i = 1;
    i <= love; i ++) {
        System.out.println ("Everybody needs some love!");
    }
    if (love > 10) {
        System.out.println ("You cannot handle that much love!");
    }
    for (int i = 1;
    i <= love; i ++) {
        System.out.println ("I love you " + love + " ways");
    }
    scanIn.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43833884_43851271_112_155
43833884_43851271_87_108
Title: Algorithm for pathfinding in 2D Array 
----------------------------------------

private boolean findPath (int row, int col) {
    if (board [row] [col] != originToken) {
        return false;
    }
    int [] cell = new int [] {row, col};
    if (checked.contains (cell)) {
        return false;
    }
    CellsList neighbors = getNeighbors (row, col);
    if ((path.size () > MIN_PATH_LEGTH) && neighbors.contains (origin)) {
        path.add (cell);
        return true;
    }
    checked.add (cell);
    path.add (cell);
    for (int [] neighbor : neighbors) {
        boolean found = findPath (neighbor [0], neighbor [1]);
        if (found) {
            return true;
        }
    }
    path.pop ();
    return false;
}
----------------------------------------

private void findPath (int [] origin) {
    path = new Stack < > ();
    this.origin = origin;
    int row = origin [0], col = origin [1];
    originToken = board [row] [col];
    checked = new CellsList ();
    boolean found = findPath (row, col);
    if (found) {
        printPath ();
    } else {
        System.out.println ("No path found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43834700_43835511_29_44
43834700_43837607_45_62
Title: printing alternative output from 2 threads using semaphores 
----------------------------------------

public void run () {
    int z = 0;
    while (true) {
        try {
            for (int i = 0;
            i < 10; i ++) {
                if (order == Solution.order) {
                    System.out.print (line + " ");
                    Solution.order = ! order;
                }
            }
            sleep (100);
        } catch (Exception e) {
            System.out.println (e.toString ());
        }
    }
}
----------------------------------------

public void run () {
    if (odd) {
        other.release ();
    }
    int i = 0;
    try {
        while (i < MAX_LOOPS) {
            i ++;
            other.acquire ();
            System.out.print (odd ? "G " : "H ");
            release ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    DONE_LATCH.countDown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43840021_43840361_17_102
43840021_43970251_17_92
Title: Calculate average after reading XML file using java 
----------------------------------------

public static void main (String argv []) {
    try {
        File fXmlFile = new File ("C:/Users/Lenovo/Desktop/marks.xml");
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        Document doc = dBuilder.parse (fXmlFile);
        doc.getDocumentElement ().normalize ();
        NodeList nList = doc.getElementsByTagName ("student");
        System.out.println (" STUDENT MARKS");
        System.out.println ("----------------------------");
        Map < String, List < Integer > > matricNOToMarkList = new HashMap < > ();
        Map < String, List < Integer > > courseCodeToMarkList = new HashMap < > ();
        for (int temp = 0;
        temp < nList.getLength (); temp ++) {
            Node nNode = nList.item (temp);
            if (nNode.getNodeType () == Node.ELEMENT_NODE) {
                Element eElement = (Element) nNode;
                String matricNO = eElement.getElementsByTagName ("matricNO").item (0).getTextContent ();
                String mark = eElement.getElementsByTagName ("mark").item (0).getTextContent ();
                String courseCode = eElement.getElementsByTagName ("courseCode").item (0).getTextContent ();
                System.out.println ("Matric Number : " + matricNO);
                System.out.println ("Course Code   : " + courseCode);
                System.out.println ("Marks         : " + mark);
                System.out.println ("\n");
                List < Integer > markList = matricNOToMarkList.get (matricNO);
                if (markList == null) {
                    markList = new ArrayList < > ();
                    matricNOToMarkList.put (matricNO, markList);
                }
                markList.add (Integer.parseInt (mark));
                List < Integer > markList1 = courseCodeToMarkList.get (courseCode);
                if (markList1 == null) {
                    markList1 = new ArrayList < > ();
                    courseCodeToMarkList.put (courseCode, markList1);
                }
                markList1.add (Integer.parseInt (mark));
            }
        }
        for (String matricNo : matricNOToMarkList.keySet ()) {
            List < Integer > markList = matricNOToMarkList.get (matricNo);
            int sum = 0;
            for (Integer mark : markList) {
                sum += mark;
            }
            System.out.println ("Average Marks for MatricNo : " + matricNo + " is : " + (sum / markList.size ()));
        }
        for (String courseCode : courseCodeToMarkList.keySet ()) {
            List < Integer > markList = courseCodeToMarkList.get (courseCode);
            int sum = 0;
            for (Integer mark : markList) {
                sum += mark;
            }
            System.out.println ("Average Marks for courseCode : " + courseCode + " is : " + (sum / markList.size ()));
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String argv []) {
    try {
        File fXmlFile = new File ("C:/Users/Lenovo/Desktop/marks.xml");
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        Document doc = dBuilder.parse (fXmlFile);
        doc.getDocumentElement ().normalize ();
        NodeList nList = doc.getElementsByTagName ("student");
        System.out.println (" STUDENT MARKS");
        System.out.println ("----------------------------");
        Map < String, List < Integer > > matricNOToMarkList = new HashMap < > ();
        Map < String, List < Integer > > courseCodeToMarkList = new HashMap < > ();
        for (int temp = 0;
        temp < nList.getLength (); temp ++) {
            Node nNode = nList.item (temp);
            if (nNode.getNodeType () == Node.ELEMENT_NODE) {
                Element eElement = (Element) nNode;
                String matricNO = eElement.getElementsByTagName ("matricNO").item (0).getTextContent ();
                String mark = eElement.getElementsByTagName ("mark").item (0).getTextContent ();
                String courseCode = eElement.getElementsByTagName ("courseCode").item (0).getTextContent ();
                System.out.println ("Matric Number : " + matricNO);
                System.out.println ("Course Code   : " + courseCode);
                System.out.println ("Marks         : " + mark);
                System.out.println ("\n");
                List < Integer > markList = matricNOToMarkList.get (matricNO);
                if (markList == null) {
                    markList = new ArrayList < > ();
                    matricNOToMarkList.put (matricNO, markList);
                }
                markList.add (Integer.parseInt (mark));
                List < Integer > markList1 = courseCodeToMarkList.get (courseCode);
                if (markList1 == null) {
                    markList1 = new ArrayList < > ();
                    courseCodeToMarkList.put (courseCode, markList1);
                }
                markList1.add (Integer.parseInt (mark));
            }
        }
        for (String matricNo : matricNOToMarkList.keySet ()) {
            List < Integer > markList = matricNOToMarkList.get (matricNo);
            float sum = 0;
            for (Integer mark : markList) {
                sum += mark;
            }
            System.out.println ("Average Marks is : " + (sum / markList.size ()));
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43849001_43869675_21_45
43849001_43869675_51_63
Title: DELAY BY 1 minute BEFORE SENDING BULK SMS TO EACH NUMBER IN ANDROID 
----------------------------------------

public void onReceive (Context arg0, Intent arg1) {
    switch (getResultCode ()) {
        case Activity.RESULT_OK :
            Toast.makeText (getBaseContext (), "SMS sent", Toast.LENGTH_SHORT).show ();
            break;
        case SmsManager.RESULT_ERROR_GENERIC_FAILURE :
            Toast.makeText (getBaseContext (), "Generic failure - Please check your delimiter settings or check your account balance.", Toast.LENGTH_LONG).show ();
            break;
        case SmsManager.RESULT_ERROR_NO_SERVICE :
            Toast.makeText (getBaseContext (), "No service", Toast.LENGTH_SHORT).show ();
            break;
        case SmsManager.RESULT_ERROR_NULL_PDU :
            Toast.makeText (getBaseContext (), "Null PDU", Toast.LENGTH_SHORT).show ();
            break;
        case SmsManager.RESULT_ERROR_RADIO_OFF :
            Toast.makeText (getBaseContext (), "Radio off", Toast.LENGTH_SHORT).show ();
            break;
    }
}
----------------------------------------

public void onReceive (Context arg0, Intent arg1) {
    switch (getResultCode ()) {
        case Activity.RESULT_OK :
            Toast.makeText (getBaseContext (), "SMS delivered", Toast.LENGTH_LONG).show ();
            break;
        case Activity.RESULT_CANCELED :
            Toast.makeText (getBaseContext (), "SMS not delivered", Toast.LENGTH_LONG).show ();
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43855034_43855158_1_12
43855034_43855398_1_12
Title: Recursion Logical Error Java 
----------------------------------------

public int binarySearch (int [] targetArray, int targetValue, int lowIndex, int highIndex) {
    if (lowIndex > highIndex) return - 1;

    int midIndex = lowIndex + (highIndex - lowIndex) / 2;
    if (targetValue == targetArray [midIndex]) return midIndex;

    if (targetArray [midIndex] > targetValue) return binarySearch (targetArray, targetValue, lowIndex, midIndex - 1);
    else return binarySearch (targetArray, targetValue, midIndex + 1, highIndex);

}
----------------------------------------

public int binarySearch (Integer [] targetArray, int targetValue, int lowIndex, int highIndex) {
    if (lowIndex > highIndex) return - 1;

    int midIndex = lowIndex + (highIndex - lowIndex) / 2;
    if (targetValue == targetArray [midIndex]) return midIndex;

    if (targetArray [midIndex] > targetValue) return binarySearch (targetArray, targetValue, lowIndex, midIndex - 1);
    else return binarySearch (targetArray, targetValue, midIndex + 1, highIndex);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43857879_43858006_1_22
43857879_43858227_1_34
Title: How to set a tag to a row in a custom adapter Android Studio Java 
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    LayoutInflater layoutInflater = LayoutInflater.from (getContext ());
    View customView = layoutInflater.inflate (R.layout.my_row, parent, false);
    ViewHolder holder = new ViewHolder ();
    holder.name = (TextView) customView.findViewById (R.id.nameTextView);
    holder.picture = (ImageView) customView.findViewById (R.id.pictureImageView);
    holder.name.setText (allNames.get (position));
    holder.picture.setImageResource (allPictures.get (position));
    customView.setTag (Integer.valueOf (counter));
    counter ++;
    return customView;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolder holder;
    if (convertView == null) {
        LayoutInflater layoutInflater = LayoutInflater.from (getContext ());
        convertView = layoutInflater.inflate (R.layout.my_row, parent, false);
        holder = new ViewHolder ();
        holder.name = (TextView) convertView.findViewById (R.id.nameTextView);
        holder.picture = (ImageView) convertView.findViewById (R.id.pictureImageView);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    holder.name.setText (allNames.get (position));
    holder.picture.setImageResource (allPictures.get (position));
    holder.name.setTag (counter);
    counter ++;
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43885324_43885481_11_25
43885324_43885850_9_21
Title: The searchValue method array come out all is 0 
----------------------------------------

public static void main (String [] args) {
    randomFill ();
    Scanner scanner = new Scanner (System.in);
    for (int i = 0;
    i < userNumber.length; i ++) {
        System.out.print ("Enter number to check " + (i + 1) + " : ");
        userNumber [i] = scanner.nextInt ();
    }
    searchValue (anArray, userNumber);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    for (int i = 0;
    i < userNumber.length; i ++) {
        System.out.print ("Enter number to check " + (i + 1) + " :                       ");
        userNumber [i] = scanner.nextInt ();
    }
    randomFill ();
    searchValue ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43885324_43885481_40_61
43885324_43885850_32_40
Title: The searchValue method array come out all is 0 
----------------------------------------

public static int [] searchValue (int [] randomFill, int [] userNumber) {
    for (int i = 0;
    i < anArray.length; i ++) {
        if (anArray [i] == userNumber [i]) {
            System.out.println ("Number exist ");
            return anArray;
        } else {
            System.out.println (anArray [i]);
        }
    }
    System.out.println ("Number do not exist ");
    return anArray;
}
----------------------------------------

public static void searchValue () {
    for (int i = 0;
    i < userNumber.length; i ++) {
        for (int j = 0;
        j < anArray.length; j ++) {
            if (userNumber [i] == anArray [j]) {
                System.out.println ("Usernumber " + userNumber [i] + " exists at  ArrayIndex :" + j);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43886303_43886455_1_20
43886303_43886520_1_16
Title: Java converting a group of string to String Array Integer Array 
----------------------------------------

public static void main (final String [] args) {
    final String strings = "one*10*two*11*three*12";
    final String [] split = strings.split ("\\*");
    final List < String > resultStrings = new ArrayList < > ();
    final List < String > resultInt = new ArrayList < > ();
    for (int i = 0;
    i < split.length; i ++) {
        if (i % 2 == 0) {
            resultInt.add (split [i]);
        } else {
            resultStrings.add (split [i]);
        }
    }
    System.out.println (resultInt);
    System.out.println (resultStrings);
}
----------------------------------------

public static void main (String [] args) {
    String strings = "one*10*two*11*three*12";
    String [] spl = strings.split ("\\*");
    ArrayList < Integer > arrli = new ArrayList < > ();
    List < String > al = new ArrayList < > ();
    for (String s : spl) {
        if (s.matches ("\\d+")) {
            arrli.add (Integer.parseInt (s));
        } else {
            al.add (s);
        }
    }
    System.out.println (al);
    System.out.println (arrli);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43892154_43892675_58_87
43892154_43905084_49_81
Title: CustomAdapter cannot be appllied to Fragment in Android JSON News app 
----------------------------------------

public void onResponse (JSONObject response) {
    try {
        JSONArray newsItem = response.getJSONArray ("newsItems");
        for (int i = 0;
        i < newsItem.length (); i ++) {
            JSONObject temp = newsItem.getJSONObject (i);
            String title = temp.getString ("title");
            String description = temp.getString ("description");
            String url = temp.getString ("url");
            String urlToImage = temp.getString ("urlToImage");
            newsFeed.add (new newsItem (title, description, url, urlToImage));
            ArrayAdapter < newsItem > adapter = new customAdapter (newsFeed, getActivity ());
            ListView newsItems = (ListView) (getActivity ().findViewById (R.id.newsItems));
            newsItems.setAdapter (adapter);
        }
    } catch (JSONException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void onResponse (JSONObject response) {
    try {
        JSONArray newsItem = response.getJSONObject ("root").getJSONArray ("articles");
        for (int i = 0;
        i < newsItem.length (); i ++) {
            JSONObject temp = newsItem.getJSONObject (i);
            String title = temp.getString ("title");
            String description = temp.getString ("description");
            String url = temp.getString ("url");
            String urlToImage = temp.getString ("urlToImage");
            newsFeed.add (new newsItem (title, description, url, urlToImage));
        }
        RecyclerView.Adapter adapter = new customAdapter (MainActivity.this, newsFeed);
        RecyclerView newsItems = (RecyclerView) findViewById (R.id.newsItems);
        LinearLayoutManager llm = new LinearLayoutManager (MainActivity.this);
        newsItems.setLayoutManager (llm);
        newsItems.setAdapter (adapter);
    } catch (JSONException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43899991_43900121_1_15
43899991_43900159_1_12
Title: Printing the position of character in a String 
----------------------------------------

public static List < Integer > strpos (String text, char z) {
    List < Integer > indices = new ArrayList < > ();
    char [] array = text.toCharArray ();
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] != z) {
            continue;
        }
        list.add (i);
    }
    return indices.isEmpty () ? Arrays.asList (- 1) : indices;
}
----------------------------------------

List < Integer > strpos (String text, char z) {
    List < Integer > indexes = new ArrayList < > ();
    int index = - 1;
    while (true) {
        index = text.indexOf (z, index + 1);
        if (index == - 1) {
            break;
        }
        indexes.add (index);
    }
    return indexes;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43904996_43905086_1_14
43904996_43911277_1_14
Title: Issues with my simple 2D array 
----------------------------------------

public static void main (String [] args) {
    int temp = 5;
    int temp2 = 10;
    for (int i = 0;
    i < temp2; ++ i) {
        for (int k = 0;
        k < temp; ++ k) {
            System.out.print ("|_|");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int temp = 5;
    int temp2 = 10;
    for (int i = 0;
    i < temp2; ++ i) {
        StringBuilder row = new StringBuilder ();
        for (int k = 0;
        k < temp; ++ k) {
            row.append ("|_|");
        }
        System.out.println (row.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43914616_43915147_24_36
43914616_43915147_6_19
Title: Time Deley Loop BlueJ 
----------------------------------------

public static void main () {
    System.out.println ("A");
    try {
        Thread.sleep (12);
    } catch (InterruptedException e) {
        System.out.println (e);
    }
    System.out.println ("B");
}
----------------------------------------

public static void main () {
    System.out.println ("A");
    try {
        java.util.concurrent.TimeUnit.SECONDS.sleep (12);
    } catch (InterruptedException e) {
        System.out.println (e);
    }
    System.out.println ("B");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43915381_43915581_2_15
43915381_43915650_4_19
Title: replace a particular word in string 
----------------------------------------

public static void main (String [] args) {
    String newurl = "";
    String url = "http://www.example.com/conditions/redirecting/home/ovc-20197858";
    String home = "home";
    String definition = "definition";
    boolean check = url.contains ("home");
    if (check == true) {
        newurl = url.replace (home, "place-for-you");
    } else {
        newurl = url.replace (definition, "place");
    }
    System.out.print (newurl);
}
----------------------------------------

public static void main (String args []) {
    String newurl = "";
    String url = "http://www.example.com/conditions/redirecting/home/ovc-20197858";
    String home = "home";
    String definition = "definition";
    boolean check = url.contains ("home");
    if (check == true) newurl = url.replace (home, "place-for-you");
    else newurl = url.replace (definition, "place");

    System.out.println ("Old URL : " + url);
    System.out.println ("New URL : " + newurl);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43915508_43915586_1_14
43915508_43915722_1_10
Title: "Basic Java Library searching method does not work" 
----------------------------------------

public Book search (String title) {
    Book found = null;
    for (int i = 0;
    i < this.Volume && book == null; i ++) {
        if (title.equals (this.storage [i].toString ())) {
            System.out.println ("The book with the title " + title + " exists in the library!");
            found = this.storage [i];
        }
    }
    if (found == null) {
        System.out.println ("The book with the title " + title + " does not exist in the library!");
    }
    return found;
}
----------------------------------------

public Book search (String title) {
    for (int i = 0;
    i < this.Volume; i ++) {
        if (title.equals (this.storage [i].toString ())) {
            System.out.println ("The book with the title " + title + " exists in the library!");
            return this.storage [i];
        }
    }
    System.out.println ("The book with the title " + title + " does not exist in the library!");
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43916170_43916467_1_21
43916170_43916670_1_29
Title: Java Converting a group of String by replace the speacial characters 
----------------------------------------

public static void main (String [] args) {
    String str = "astv*12atthh124ggh*dhr1234sfff123*dgdfg1234*mnaoj";
    String [] spl = str.split ("\\*");
    List < String > strings = new ArrayList < > ();
    List < Integer > nums = new ArrayList < > ();
    for (String s : spl) {
        String tmp = s.replaceAll ("\\d+", "");
        if (! tmp.trim ().isEmpty ()) {
            strings.add (tmp);
        }
        tmp = s.replaceAll ("[a-z]+", "");
        if (! tmp.trim ().isEmpty ()) {
            nums.add (Integer.parseInt (tmp));
        }
    }
    System.out.println (nums);
    System.out.println (strings);
}
----------------------------------------

public static void main (String [] args) {
    String str = "astv*12atthh124ggh*dhr1234sfff123*dgdfg1234*mnaoj";
    List < String > strings = new ArrayList < > ();
    List < Integer > nums = new ArrayList < > ();
    Pattern digitPattern = Pattern.compile ("\\d+");
    Pattern alphaPattern = Pattern.compile ("[a-z]+");
    String [] splittedArray = str.split ("\\*");
    for (String nextSplittedString : splittedArray) {
        Matcher digitMatcher = digitPattern.matcher (nextSplittedString);
        Matcher alphaMatcher = alphaPattern.matcher (nextSplittedString);
        String nextDigitAsString = "";
        while (digitMatcher.find ()) {
            nextDigitAsString += digitMatcher.group ();
        }
        if (! nextDigitAsString.isEmpty ()) {
            nums.add (Integer.parseInt (nextDigitAsString));
        }
        String nextString = "";
        while (alphaMatcher.find ()) {
            nextString += alphaMatcher.group ();
        }
        if (! nextString.isEmpty ()) {
            strings.add (nextString);
        }
    }
    System.out.println (nums);
    System.out.println (strings);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43926154_43927027_54_105
43926154_43927027_77_102
Title: How to create a lock with user input on JPanel? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    loginButton.setVisible (false);
    userText.setVisible (false);
    userLabel.setVisible (false);
    JTextField userText1 = new JTextField (20);
    userText1.setBounds (100, 10, 160, 25);
    panel.add (userText1);
    JLabel userLabel1 = new JLabel ("Password");
    userLabel1.setBounds (10, 10, 80, 25);
    panel.add (userLabel1);
    JButton loginButton1 = new JButton ("Enter");
    loginButton1.setBounds (10, 80, 80, 25);
    panel.add (loginButton1);
    String check = userText1.getText ();
    loginButton1.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            userText1.setVisible (false);
            userLabel1.setVisible (false);
            loginButton1.setVisible (false);
            String good;
            if (name.equals (check)) {
                good = "Welcome";
            } else {
                good = "False. Error";
            }
            JLabel label1 = new JLabel (good);
            label1.setBounds (100, 40, 100, 100);
            label1.setVisible (true);
            panel.add (label1);
        }}

    );
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    userText1.setVisible (false);
    userLabel1.setVisible (false);
    loginButton1.setVisible (false);
    String good;
    if (name.equals (check)) {
        good = "Welcome";
    } else {
        good = "False. Error";
    }
    JLabel label1 = new JLabel (good);
    label1.setBounds (100, 40, 100, 100);
    label1.setVisible (true);
    panel.add (label1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43930547_43930793_25_36
43930547_43930793_53_61
Title: How to implement a binary tree structure with objects? 
----------------------------------------

void print (int indent) {
    for (int i = 0;
    i < indent; ++ i) {
        System.out.print ("    ");
    }
    System.out.println (list);
    if (left != null) {
        left.print (indent + 1);
    }
    if (right != null) {
        right.print (indent + 1);
    }
}
----------------------------------------

public void print () {
    System.out.println (list);
    if (left != null) {
        left.print (1);
    }
    if (right != null) {
        right.print (1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43942176_43942375_1_11
43942176_43943142_1_11
Title: How can I write shorter code by using loops in a board game 
----------------------------------------

public static boolean ComuterrowWin (char [] [] board) {
    for (int row = 0;
    row <= 2; row ++) {
        if ((board [row] [0] == 'O' && board [row] [1] == 'O') && board [row] [2] != 'X') {
            board [row] [2] = 'O';
            return true;
        }
        if ((board [row] [1] == 'O' && board [row] [2] == 'O') && board [row] [0] != 'X') {
            board [row] [0] = 'O';
            return true;
        }
        if ((board [row] [0] == 'O' && board [row] [2] == 'O') && board [row] [1] != 'X') {
            board [row] [1] = 'O';
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean ComuterrowWin (char [] [] board) {
    int [] [] win = {{0, 1, 2}, {1, 2, 0}, {0, 2, 1}};
    for (int row = 0;
    row < 3; row ++) {
        for (int i = 0;
        i < 3; i ++) {
            if ((board [row] [win [i] [0]] == 'O' && board [row] [win [i] [1]] == 'O') && board [row] [win [i] [2]] != 'X') {
                board [row] [win [i] [2]] = 'O';
                return true;
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43944345_43944387_4_14
43944345_43945773_17_29
Title: Cannot Resolve Symbol 'setOnClickListener' 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final Button SuSe = (Button) findViewById (R.id.SuSe);
    SuSe.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    SuSe = (Button) findViewById (R.id.SuSe);
    SuSe.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43945130_43946919_1_25
43945130_43950387_17_25
Title: Java: Graphics2D - JPopupMenu - Color Changing 
----------------------------------------

public PaintPanel () {
    super ();
    addMouseListener (this);
    addMouseMotionListener (this);
    addMouseWheelListener (this);
    setLayout (new BorderLayout ());
    setBackground (bgColor);
    colorMenu.addChangeListener (new ChangeListener () {
        @Override
        public void stateChanged (ChangeEvent event) {
            if (selectedIndex >= 0) {
                Shape figure = figures.get (selectedIndex);
                if (figure instanceof MyEllipse2D) ((MyEllipse2D) figure).color = colorMenu.color;
                else if (figure instanceof MyRectangle2D) ((MyRectangle2D) figure).color = colorMenu.color;
                else if (figure instanceof MyPolygon2D) ((MyPolygon2D) figure).color = colorMenu.color;

            }
        }}

    );
}
----------------------------------------

public PaintPanel () {
    super ();
    addMouseListener (this);
    addMouseMotionListener (this);
    addMouseWheelListener (this);
    setLayout (new BorderLayout ());
    setBackground (bgColor);
    setComponentPopupMenu (makePopupMenu ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43947777_43951731_1_16
43947777_43957238_8_27
Title: How to print space in between words after reversing a sentence of words 
----------------------------------------

private static void reverseWords (String str) {
    String [] words = str.split ("\\s");
    String reverse = "";
    int len = words.length;
    for (int i = 0;
    i < len; i ++) {
        reverse = reverse + new StringBuilder (words [i]).reverse ().toString ();
        if (i < len - 1) {
            reverse = reverse + " ";
        }
    }
    System.out.println (str);
    System.out.println (reverse);
}
----------------------------------------

private static void reverseWords (String str) {
    char [] charArray = str.toCharArray ();
    boolean flag = false;
    int start = 0;
    int end = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (charArray [i] == ' ' && ! flag) {
            flag = true;
            end = i - 1;
            reverseWord (charArray, start, end);
        }
        if (charArray [i] != ' ' && flag) {
            start = i;
            flag = false;
        }
    }
    reverseWord (charArray, start, charArray.length - 1);
    System.out.println (str);
    System.out.println (String.valueOf (charArray));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43947925_43948189_27_130
43947925_43948236_30_170
Title: Issue in Radio Button Action Listener 
----------------------------------------

private void initialize () {
    frame = new JFrame ();
    frame.setBounds (0, 0, 1000, 800);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().setLayout (null);
    JPanel panel = new JPanel ();
    panel.setBorder (new LineBorder (new Color (0, 0, 0), 3));
    panel.setBounds (30, 11, 414, 36);
    frame.getContentPane ().add (panel);
    panel.setLayout (null);
    JLabel lblEmployeeDatabase = new JLabel ("Employee Database");
    lblEmployeeDatabase.setFont (new Font ("Tahoma", Font.PLAIN, 15));
    lblEmployeeDatabase.setBounds (157, 7, 193, 25);
    panel.add (lblEmployeeDatabase);
    JPanel panel_1 = new JPanel ();
    panel_1.setBorder (new LineBorder (new Color (0, 0, 0), 3));
    panel_1.setBounds (10, 61, 464, 230);
    frame.getContentPane ().add (panel_1);
    panel_1.setLayout (null);
    JLabel jlblEmpName = new JLabel ("Employee Name");
    jlblEmpName.setBounds (10, 11, 110, 14);
    panel_1.add (jlblEmpName);
    jtxtName = new JTextField ();
    jtxtName.setBounds (114, 8, 120, 20);
    panel_1.add (jtxtName);
    jtxtName.setColumns (10);
    JLabel jlblEmpAge = new JLabel ("Employee Age");
    jlblEmpAge.setBounds (10, 52, 110, 14);
    panel_1.add (jlblEmpAge);
    jtxtAge = new JTextField ();
    jtxtAge.setColumns (10);
    jtxtAge.setBounds (114, 49, 120, 20);
    panel_1.add (jtxtAge);
    JLabel jlblEmpType = new JLabel ("Employee Type");
    jlblEmpType.setBounds (10, 95, 110, 14);
    panel_1.add (jlblEmpType);
    JRadioButton jrdbuttonFullTime = new JRadioButton ("Full Time");
    JRadioButton jrdbtnContract = new JRadioButton ("Contract ");
    JLabel jlblEmpHour = new JLabel ("Hourly Rate");
    jlblEmpHour.setBounds (5, 121, 66, 14);
    ButtonGroup group = new ButtonGroup ();
    JLabel jlblEmpSal = new JLabel ("Salary");
    jlblEmpSal.setBounds (114, 121, 66, 14);
    JLabel jlblEmpWork = new JLabel ("Hours Worked");
    jlblEmpWork.setBounds (150, 120, 86, 24);
    jtxtSal = new JTextField ();
    jtxtSal.setColumns (10);
    jtxtSal.setBounds (164, 121, 109, 23);
    jtxtHour_Pay = new JTextField ();
    jtxtHour_Pay.setColumns (10);
    jtxtHour_Pay.setBounds (75, 121, 59, 23);
    jtxtHour_Worked = new JTextField ();
    jtxtHour_Worked.setColumns (10);
    jtxtHour_Worked.setBounds (243, 121, 109, 23);
    group.add (jrdbuttonFullTime);
    group.add (jrdbtnContract);
    panel_1.add (jlblEmpSal);
    panel_1.add (jtxtSal);
    panel_1.add (jlblEmpHour);
    panel_1.add (jtxtHour_Pay);
    panel_1.add (jlblEmpWork);
    panel_1.add (jtxtHour_Worked);
    ActionListener myAction = new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            jlblEmpHour.setVisible (jrdbtnContract.isSelected ());
            jtxtHour_Pay.setVisible (jrdbtnContract.isSelected ());
            jtxtHour_Worked.setVisible (jrdbtnContract.isSelected ());
            jlblEmpWork.setVisible (jrdbtnContract.isSelected ());
            jlblEmpSal.setVisible (jrdbuttonFullTime.isSelected ());
            jtxtSal.setVisible (jrdbuttonFullTime.isSelected ());
        }}

    ;
    myAction.actionPerformed (null);
    jrdbuttonFullTime.addActionListener (myAction);
    jrdbtnContract.addActionListener (myAction);
    jrdbtnContract.setBounds (218, 91, 109, 23);
    jrdbuttonFullTime.setBounds (113, 91, 109, 23);
    panel_1.add (jrdbuttonFullTime);
    panel_1.add (jrdbtnContract);
}
----------------------------------------

private void initialize () {
    frame = new JFrame ();
    frame.setBounds (0, 0, 1000, 800);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().setLayout (null);
    JPanel panel = new JPanel ();
    panel.setBorder (new LineBorder (new Color (0, 0, 0), 3));
    panel.setBounds (30, 11, 414, 36);
    frame.getContentPane ().add (panel);
    panel.setLayout (null);
    JLabel lblEmployeeDatabase = new JLabel ("Employee Database");
    lblEmployeeDatabase.setFont (new Font ("Tahoma", Font.PLAIN, 15));
    lblEmployeeDatabase.setBounds (157, 7, 193, 25);
    panel.add (lblEmployeeDatabase);
    JPanel panel_1 = new JPanel ();
    panel_1.setBorder (new LineBorder (new Color (0, 0, 0), 3));
    panel_1.setBounds (10, 61, 464, 230);
    frame.getContentPane ().add (panel_1);
    panel_1.setLayout (null);
    JLabel jlblEmpName = new JLabel ("Employee Name");
    jlblEmpName.setBounds (10, 11, 110, 14);
    panel_1.add (jlblEmpName);
    jtxtName = new JTextField ();
    jtxtName.setBounds (114, 8, 120, 20);
    panel_1.add (jtxtName);
    jtxtName.setColumns (10);
    JLabel jlblEmpAge = new JLabel ("Employee Age");
    jlblEmpAge.setBounds (10, 52, 110, 14);
    panel_1.add (jlblEmpAge);
    jtxtAge = new JTextField ();
    jtxtAge.setColumns (10);
    jtxtAge.setBounds (114, 49, 120, 20);
    panel_1.add (jtxtAge);
    JLabel jlblEmpType = new JLabel ("Employee Type");
    jlblEmpType.setBounds (10, 95, 110, 14);
    panel_1.add (jlblEmpType);
    JRadioButton jrdbuttonFullTime = new JRadioButton ("Full Time");
    JRadioButton jrdbtnContract = new JRadioButton ("Contract ");
    JLabel jlblEmpHour = new JLabel ("Hourly Rate");
    jlblEmpHour.setBounds (5, 121, 66, 14);
    ButtonGroup group = new ButtonGroup ();
    JLabel jlblEmpSal = new JLabel ("Salary");
    jlblEmpSal.setBounds (114, 121, 66, 14);
    JLabel jlblEmpWork = new JLabel ("Hours Worked");
    jlblEmpWork.setBounds (150, 120, 86, 24);
    jtxtSal = new JTextField ();
    jtxtSal.setColumns (10);
    jtxtSal.setBounds (164, 121, 109, 23);
    jtxtHour_Pay = new JTextField ();
    jtxtHour_Pay.setColumns (10);
    jtxtHour_Pay.setBounds (75, 121, 59, 23);
    jtxtHour_Worked = new JTextField ();
    jtxtHour_Worked.setColumns (10);
    jtxtHour_Worked.setBounds (243, 121, 109, 23);
    jlblEmpSal.setVisible (false);
    panel_1.add (jlblEmpSal);
    jtxtSal.setVisible (false);
    panel_1.add (jtxtSal);
    panel_1.add (jlblEmpHour);
    jlblEmpHour.setVisible (false);
    panel_1.add (jtxtHour_Pay);
    jtxtHour_Pay.setVisible (false);
    panel_1.add (jlblEmpWork);
    jlblEmpWork.setVisible (false);
    jtxtHour_Worked.setVisible (false);
    panel_1.add (jtxtHour_Worked);
    group.add (jrdbuttonFullTime);
    group.add (jrdbtnContract);
    jrdbuttonFullTime.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            if (jrdbuttonFullTime.isSelected ()) {
                jlblEmpSal.setVisible (true);
                jtxtSal.setVisible (true);
                jlblEmpHour.setVisible (false);
                jtxtHour_Pay.setVisible (false);
                jtxtHour_Worked.setVisible (false);
                jlblEmpWork.setVisible (false);
            }
        }}

    );
    jrdbuttonFullTime.setBounds (113, 91, 109, 23);
    panel_1.add (jrdbuttonFullTime);
    jrdbtnContract.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            if (jrdbtnContract.isSelected ()) {
                jlblEmpHour.setVisible (true);
                jtxtHour_Pay.setVisible (true);
                jlblEmpWork.setVisible (true);
                jtxtHour_Worked.setVisible (true);
                jlblEmpSal.setVisible (false);
                jtxtSal.setVisible (false);
            }
        }}

    );
    jrdbtnContract.setBounds (218, 91, 109, 23);
    panel_1.add (jrdbtnContract);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43955699_43955742_1_14
43955699_43955926_2_11
Title: Java- unable to use StringBuilder correctly with Arrays 
----------------------------------------

public static void main (String [] args) {
    for (int r = 0;
    r < 10; r ++) {
        StringBuilder s = new StringBuilder ();
        for (int c = 0;
        c < 10; c ++) {
            s.append ("-");
        }
        System.out.print (" " + s);
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    StringBuilder s = new StringBuilder ();
    for (int r = 0;
    r < 10; r ++) {
        for (int c = 0;
        c < 10; c ++) {
            s.append ("- ");
        }
        s.append ("\n");
    }
    System.out.print (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43957013_43957830_30_52
43957013_43958102_1_50
Title: Code to form a set from a list of element pairs in java 
----------------------------------------

public static List < Set < Integer > > answer (String [] pairs) {
    init ();
    List < Set < Integer > > list = new LinkedList < > ();
    Set < Integer > elements = new HashSet < Integer > ();
    for (int i = 0;
    i < pairs.length; i ++) {
        String [] splitted = pairs [i].split (" ");
        int u = Integer.parseInt (splitted [0]);
        int v = Integer.parseInt (splitted [1]);
        adj.get (u).add (v);
        adj.get (v).add (u);
        visited [u] = visited [v] = false;
        elements.add (u);
        elements.add (v);
    }
    for (int e : elements) {
        if (! visited [e]) {
            Set < Integer > tmp = new HashSet < Integer > ();
            dfs (e, tmp);
            list.add (tmp);
        }
    }
    return list;
}
----------------------------------------

public static List < Set < Integer > > answer (String [] pairs) {
    List < Set < Integer > > list = new LinkedList < > ();
    Set < Integer > init = new HashSet < > ();
    String [] splitted = pairs [0].split (" ");
    init.add (Integer.parseInt (splitted [0]));
    init.add (Integer.parseInt (splitted [1]));
    list.add (init);
    List < Set < Integer > > setsRecord = new LinkedList < > ();
    boolean found = false;
    Integer i1, i2;
    for (String s : pairs) {
        i1 = Integer.parseInt ((splitted = s.split (" ")) [0]);
        i2 = i2 = Integer.parseInt (splitted [1]);
        for (Set < Integer > set : list) {
            if (set.contains (i1) || set.contains (i2)) {
                if (setsRecord.size () >= 1) {
                    setsRecord.get (0).addAll (set);
                    list.remove (set);
                } else {
                    set.add (i1);
                    set.add (i2);
                    setsRecord.add (set);
                }
                found = true;
            }
        }
        setsRecord.clear ();
        if (! found) {
            Set < Integer > newSet = new HashSet < Integer > ();
            newSet.add (i1);
            newSet.add (i2);
            list.add (newSet);
        }
        found = false;
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43958950_43960174_330_350
43958950_43960174_354_397
Title: "Storing ""path"" from a 2D array grid into a list" 
----------------------------------------

boolean findPath (int [] origin) {
    int row = origin [0], col = origin [1];
    this.origin = new Cell (col, row);
    originToken = grid [row] [col];
    checked = new ArrayList < > ();
    boolean found = findPath (row, col);
    if (found) {
        printPath ();
    } else {
        System.out.println ("No path found");
    }
    return found;
}
----------------------------------------

private boolean findPath (int row, int col) {
    if (grid [row] [col] != originToken) {
        return false;
    }
    Cell cell = new Cell (col, row);
    if (checked.contains (cell)) {
        return false;
    }
    ArrayList < Cell > neighbors = getNeighbors (row, col);
    if ((size () >= MIN_PATH_LEGTH) && neighbors.contains (origin)) {
        add (cell);
        return true;
    }
    checked.add (cell);
    add (cell);
    for (Cell neighbor : neighbors) {
        boolean found = findPath (neighbor.getY (), neighbor.getX ());
        if (found) {
            return true;
        }
    }
    pop ();
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43959545_43959573_18_28
43959545_43959577_15_25
Title: Pass data from input scanner to another method 
----------------------------------------

public static double calculationMethod () {
    double itemDiscount = 0.75;
    double payRate = 14.00;
    double shipHandle = 6.00;
    double firstPrice = payRate * hoursWorked;
    double secondPrice = costMaterials + firstPrice;
    final double thirdPrice = itemDiscount * secondPrice + shipHandle;
    return thirdPrice;
}
----------------------------------------

public static double calculationMethod (double costMaterials, double hoursWorked) {
    double itemDiscount = 0.75;
    double payRate = 14.00;
    double shipHandle = 6.00;
    double firstPrice = payRate * hoursWorked;
    double secondPrice = costMaterials + firstPrice;
    final double thirdPrice = itemDiscount * secondPrice + shipHandle;
    return thirdPrice;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43960895_43960972_4_20
43960895_43960996_7_21
Title: How to make my random number unique and sort the number 
----------------------------------------

public static void main (String [] args) {
    int max = 65;
    int min = 0;
    int size = 7;
    Set < Integer > set = new HashSet < Integer > ();
    Random random = new Random ();
    while (set.size () < size) {
        int randomNum = random.nextInt ((max - min) + 1) + min;
        set.add (randomNum);
    }
    Integer [] intArray = set.toArray (new Integer [set.size ()]);
    Arrays.sort (intArray);
    for (int i = 0;
    i < size; i ++) {
        System.out.println (intArray [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [7];
    Random rand = new Random ();
    Set < Integer > set = new HashSet < > ();
    while (set.size () < array.length) {
        set.add (rand.nextInt (65) + 1);
    }
    int i = 0;
    for (Integer integer : set) {
        array [i] = integer;
        i ++;
    }
    Arrays.sort (array);
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43960895_43960972_4_20
43960895_43961250_1_22
Title: How to make my random number unique and sort the number 
----------------------------------------

public static void main (String [] args) {
    int max = 65;
    int min = 0;
    int size = 7;
    Set < Integer > set = new HashSet < Integer > ();
    Random random = new Random ();
    while (set.size () < size) {
        int randomNum = random.nextInt ((max - min) + 1) + min;
        set.add (randomNum);
    }
    Integer [] intArray = set.toArray (new Integer [set.size ()]);
    Arrays.sort (intArray);
    for (int i = 0;
    i < size; i ++) {
        System.out.println (intArray [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [7];
    int randomNum;
    Set < Integer > numbers = new HashSet < > ();
    Random rand = new Random ();
    for (int i = 0;
    i < array.length; i ++) {
        randomNum = rand.nextInt (65) + 1;
        numbers.add (randomNum);
        if (! numbers.contains (randomNum)) {
            array [i] = randomNum;
        } else {
            while (numbers.contains (randomNum)) {
                randomNum = rand.nextInt (65) + 1;
            }
            numbers.add (randomNum);
            array [i] = randomNum;
        }
    }
    Arrays.sort (array);
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43960895_43960996_7_21
43960895_43961250_1_22
Title: How to make my random number unique and sort the number 
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [7];
    Random rand = new Random ();
    Set < Integer > set = new HashSet < > ();
    while (set.size () < array.length) {
        set.add (rand.nextInt (65) + 1);
    }
    int i = 0;
    for (Integer integer : set) {
        array [i] = integer;
        i ++;
    }
    Arrays.sort (array);
    System.out.println (Arrays.toString (array));
}
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [7];
    int randomNum;
    Set < Integer > numbers = new HashSet < > ();
    Random rand = new Random ();
    for (int i = 0;
    i < array.length; i ++) {
        randomNum = rand.nextInt (65) + 1;
        numbers.add (randomNum);
        if (! numbers.contains (randomNum)) {
            array [i] = randomNum;
        } else {
            while (numbers.contains (randomNum)) {
                randomNum = rand.nextInt (65) + 1;
            }
            numbers.add (randomNum);
            array [i] = randomNum;
        }
    }
    Arrays.sort (array);
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43966917_43993901_45_66
43966917_44033755_71_98
Title: Drawing a Path with multiple colors 
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            x = event.getX ();
            y = event.getY ();
            path.moveTo (x, y);
            break;
        case MotionEvent.ACTION_MOVE :
            x = event.getX ();
            y = event.getY ();
            path.lineTo (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            paths.add (path);
            colors.add (currentColor);
            invalidate ();
            break;
    }
    invalidate ();
    return true;
}
----------------------------------------

public boolean onTouchEvent (MotionEvent event) {
    switch (event.getAction ()) {
        case MotionEvent.ACTION_DOWN :
            x = event.getX ();
            y = event.getY ();
            path.moveTo (x, y);
            break;
        case MotionEvent.ACTION_MOVE :
            x = event.getX ();
            y = event.getY ();
            path.lineTo (x, y);
            invalidate ();
            break;
        case MotionEvent.ACTION_UP :
            color.add (currentColor);
            paths.add (path);
            widthSize.add (width);
            break;
        default :
            return false;
    }
    invalidate ();
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43970789_43970868_8_23
43970789_43971331_1_10
Title: How do I assign multiple objects a part of a split string in java? 
----------------------------------------

public void decoder (String codedMessage) {
    String [] parts = codedMessage.split (" ");
    int numberOfCharactersRemaining = parts.length;
    int count = 0;
    int n = 0;
    while (count < numberOfCharactersRemaining) {
        System.out.print (parts [n] + " ");
        n = n + 1;
        count = count + 1;
    }
}
----------------------------------------

public void decoder (String codedMessage) {
    String [] parts = codedMessage.split (" ");
    int numberOfCharactersRemaining = parts.length;
    int count = 0;
    while (count < numberOfCharactersRemaining) {
        System.out.println (parts [count]);
        count = count + 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43980769_43982125_1_40
43980769_43982739_2_24
Title: Check if the input number is in a valid binary format 
----------------------------------------

public static void main (String args []) {
    boolean binary = true;
    String input;
    int counter = 0;
    int target = 5;
    Scanner in = new Scanner (System.in);
    input = in.nextLine ();
    for (char digit : input.toCharArray ()) {
        if (! Character.isDigit (digit)) {
            System.out.println ("Illegal Input Found!");
            System.exit (0);
        }
        if (digit != '0' && digit != '1') {
            binary = false;
        }
    }
    if (input.charAt (0) == '0') {
        while (input.charAt (counter) == '0') {
            counter ++;
            if (counter > target && binary) {
                System.out.println ("Illegal Leading Zeros!");
                System.exit (0);
            }
        }
    }
    if (binary) {
        System.out.println ("It is a binary number");
    } else {
        System.out.println ("It is NOT a binary number");
    }
}
----------------------------------------

public static void main (String args []) {
    int r = 0, c = 0, num, b;
    Scanner sl = new Scanner (System.in);
    String input = sl.next ();
    num = Integer.parseInt (input);
    String firstDigit = (input.length () > 0 ? input.substring (0, 1) : "");
    if (firstDigit.equals ("0")) {
        System.out.printf ("WARNING: The number starts with 0");
    } else {
        while (num > 0) {
            if ((num % 10 == 0) || (num % 10 == 1)) c ++;

            r ++;
            num = num / 10;
        }
        if (c == r) {
            System.out.println (true);
        } else System.out.println (false);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43981739_43981808_12_30
43981739_43982297_12_27
Title: How to return a specific result from a list of results generated by a recursion in java 
----------------------------------------

private static String aMethod (final String s, int count) {
    String t = "";
    int iteration = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char f = s.charAt (i);
        int tt = 1 - Integer.parseInt (String.valueOf (f));
        t += String.valueOf (tt);
    }
    String finalBinaryString = s + t;
    if (iteration < count) {
        finalBinaryString = aMethod (finalBinaryString, -- count);
    }
    return finalBinaryString;
}
----------------------------------------

private static String aMethod (String s, int count) {
    String t = "";
    int iteration = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char f = s.charAt (i);
        int tt = 1 - Integer.parseInt (String.valueOf (f));
        t += String.valueOf (tt);
    }
    finalBinaryString = s + t;
    if (iteration < count) aMethod (finalBinaryString, -- count);

    return finalBinaryString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43992345_43992383_7_15
43992345_43995161_10_39
Title: XML to JSON Conversion with Conditions 
----------------------------------------

public static void main (String [] args) {
    try {
        JSONObject xmlJSONObj = XML.toJSONObject (TEST_XML_STRING);
        String jsonPrettyPrintString = xmlJSONObj.toString (PRETTY_PRINT_INDENT_FACTOR);
        System.out.println (jsonPrettyPrintString);
    } catch (JSONException je) {
        System.out.println (je.toString ());
    }
}
----------------------------------------

public static void main (String [] args) throws JAXBException, JsonProcessingException {
    Context c = new Context ();
    List < Item > offer = new ArrayList < > ();
    Item pr = new Item ();
    pr.properties = new ArrayList < > ();
    Property p = new Property ();
    p.name = "asdf";
    p.value = "va1";
    pr.properties.add (p);
    p = new Property ();
    p.name = "asdf1";
    p.value = "va11";
    pr.properties.add (p);
    offer.add (pr);
    c.offer = offer;
    try {
        SimpleModule module = new SimpleModule ();
        module.addSerializer (Context.class, new ContextSerializer ());
        ObjectMapper objectMapper = new ObjectMapper ();
        objectMapper.registerModule (module);
        objectMapper.setSerializationInclusion (Include.NON_DEFAULT);
        String json = objectMapper.writeValueAsString (c);
        System.out.println (json);
    } catch (Exception e) {
        System.out.println ("" + e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
43996622_43996915_1_12
43996622_43997735_1_13
Title: java.sql.BatchUpdateException: invalid argument(s) in call 
----------------------------------------

public void insert (List < Employee > str, Connection con) throws SQLException {
    String sql = "insert into tbl_list values (?,?)";
    PreparedStatement ps = con.prepareStatement (sql);
    for (Employee e : str) {
        ps.setString (1, e.getName ());
        ps.setLong (2, e.getId ());
        ps.addBatch ();
    }
    ps.executeBatch ();
    ps.close ();
    con.close ();
}
----------------------------------------

public void insert (List < Employee > str, Connection con) throws SQLException {
    String sql = "insert into tbl_list(e_name,e_id) values (?,?)";
    Statement ps = con.createStatement ();
    for (int i = 0;
    i <= str.size (); i ++) {
        ps.setString (1, str.get (i).getName ());
        ps.setString (2, str.get (i).getId ());
        ps.addBatch (sql);
    }
    ps.executeBatch ();
    ps.close ();
    con.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4401558_4401712_15_23
4401558_4401712_25_40
Title: Parse a badly formatted XML document (like an HTML file) 
----------------------------------------

public static void sanitize (Reader r, Writer w) {
    try {
        sanitize (new Source (r)).writeTo (w);
        w.flush ();
        r.close ();
    } catch (IOException ioe) {
        throw new RuntimeException ("error during sanitize", ioe);
    }
}
----------------------------------------

public static OutputDocument sanitize (Source source) {
    source.fullSequentialParse ();
    OutputDocument doc = new OutputDocument (source);
    List < Tag > tags = source.getAllTags ();
    int pos = 0;
    for (Tag tag : tags) {
        if (processTag (tag, doc)) tag.setUserData (VALID_MARKER);
        else doc.remove (tag);

        reencodeTextSegment (source, doc, pos, tag.getBegin ());
        pos = tag.getEnd ();
    }
    reencodeTextSegment (source, doc, pos, source.getEnd ());
    return doc;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44016344_44016523_7_39
44016344_44019847_5_32
Title: Cannot break small payroll system in different methods 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    println ("Employee position please...");
    println (buildString ("Press 1 for IT ", "\n", "Press 2 for Tech", "\n", "Press 3 for engineer"));
    String ePosition = input.nextLine ();
    RateSystem raul = new RateSystem ();
    int getPay = raul.salaryRate (ePosition);
    println ("How many hours did he work for the week?...");
    int weekHours = input.nextInt ();
    int totalPay = 0;
    if (weekHours <= 40) {
        totalPay = getPay * weekHours;
        println (buildString ("Employee salary is ", String.valueOf (totalPay)));
    } else {
        int overTimeHours = weekHours - 40;
        int extra$$PerOverTime = overTimeHours * getPay + (overTimeHours * getPay / 2);
        totalPay = getPay * (weekHours - overTimeHours);
        println (buildString ("The employee accumulated 40 hours equivalent to $", String.valueOf (totalPay), " plus $", String.valueOf (extra$$PerOverTime), " overtime hours, a total of $", String.valueOf ((extra$$PerOverTime + totalPay))));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Employee position please...");
    System.out.println ("Press 1 for IT " + "\n" + "Press 2 for Tech" + "\n" + "Press 3 for engineer");
    String position = input.nextLine ();
    RateSystem rateSystem = new RateSystem ();
    rateSystem.setEmployeePosition (position);
    System.out.println ("How many hours did he work for the week?...");
    int weekHours = input.nextInt ();
    rateSystem.setWeekHours (weekHours);
    rateSystem.calculateSalary ();
    int totalPay = rateSystem.getTotalPay ();
    int overTime = rateSystem.getOvertime ();
    if (overTime > 0) {
        System.out.println ("The employee accumulated 40 hours equivalent to $" + totalPay + " plus $" + overTime + " overtime hours, a total of $" + (overTime + totalPay));
    } else {
        System.out.println ("Employee salary is " + totalPay);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44016765_44016829_1_50
44016765_44119115_41_76
Title: How to Handle multiple click listeners in a listView 
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        inflater = LayoutInflater.from (context123);
        convertView = inflater.inflate (R.layout.checkout_screen_for_addition, null);
    }
    holder = new ViewHolder ();
    holder.item_name = (TextView) convertView.findViewById (R.id.item_name_tv);
    holder.item_quantity = (TextView) convertView.findViewById (R.id.item_quantity_tv);
    holder.item_description = (TextView) convertView.findViewById (R.id.description_tv_edt);
    holder.item_price = (TextView) convertView.findViewById (R.id.price_tv_edt);
    holder.add_btn = (Button) convertView.findViewById (R.id.add_btn);
    holder.subtract_btn = (Button) convertView.findViewById (R.id.subtract_btn);
    holder.item_name.setText (i_List.get (position).getItem_name ());
    holder.item_quantity.setText ("" + i_List.get (position).getItem_quantity ());
    holder.item_description.setText (i_List.get (position).getItem_description ());
    holder.item_price.setText ("Rs." + i_List.get (position).getItem_price ());
    holder.add_btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
    holder.subtract_btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
        }}

    );
    return convertView;
}
----------------------------------------

public View getView (final int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        inflater = LayoutInflater.from (context123);
        convertView = inflater.inflate (R.layout.checkout_screen_for_addition, null);
    }
    holder = new ViewHolder ();
    holder.item_name = (TextView) convertView.findViewById (R.id.item_name_tv);
    holder.item_quantity = (TextView) convertView.findViewById (R.id.item_quantity_tv);
    holder.item_description = (TextView) convertView.findViewById (R.id.description_tv_edt);
    holder.item_price = (TextView) convertView.findViewById (R.id.price_tv_edt);
    holder.add_btn = (Button) convertView.findViewById (R.id.add_btn);
    holder.subtract_btn = (Button) convertView.findViewById (R.id.subtract_btn);
    holder.item_name.setText (i_List.get (position).getItem_name ());
    holder.item_quantity.setText ("" + i_List.get (position).getItem_quantity ());
    holder.item_description.setText (i_List.get (position).getItem_description ());
    holder.item_price.setText ("Rs." + i_List.get (position).getItem_price ());
    holder.add_btn.setOnClickListener (new OnItemClickListener (position, holder.item_quantity, "+"));
    holder.subtract_btn.setOnClickListener (new OnItemClickListener (position, holder.item_quantity, "-"));
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44029447_44035432_40_50
44029447_44035432_59_69
Title: How to generate rectangle with user values in output? 
----------------------------------------

public void handle (KeyEvent event) {
    if (textfield1.getText ().length () > 0 && textfield2.getText ().length () > 0) {
        Rectangle rectangle = new Rectangle ();
        rectangle.setHeight (Double.parseDouble (textfield1.getText ()));
        rectangle.setWidth (Double.parseDouble (textfield2.getText ()));
        rectangle.setFill (Color.BLUE);
        root.setCenter (rectangle);
    }
}
----------------------------------------

public void handle (KeyEvent event) {
    if (textfield1.getText ().length () > 0 && textfield2.getText ().length () > 0) {
        Rectangle rectangle = new Rectangle ();
        rectangle.setHeight (Double.parseDouble (textfield1.getText ()));
        rectangle.setWidth (Double.parseDouble (textfield2.getText ()));
        rectangle.setFill (Color.BLUE);
        root.setCenter (rectangle);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44059003_44059154_361_372
44059003_44059154_395_404
Title: Why doesn't ArrayDeque implement List? 
----------------------------------------

public E next () {
    if (cursor == fence) throw new NoSuchElementException ();

    E result = elements [cursor];
    if (tail != fence || result == null) throw new ConcurrentModificationException ();

    lastRet = cursor;
    cursor = (cursor + 1) & (elements.length - 1);
    return result;
}
----------------------------------------

public E next () {
    if (cursor == fence) throw new NoSuchElementException ();

    cursor = (cursor - 1) & (elements.length - 1);
    E result = elements [cursor];
    if (head != fence || result == null) throw new ConcurrentModificationException ();

    lastRet = cursor;
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44059003_44059154_374_382
44059003_44059154_406_414
Title: Why doesn't ArrayDeque implement List? 
----------------------------------------

public void remove () {
    if (lastRet < 0) throw new IllegalStateException ();

    if (delete (lastRet)) {
        cursor = (cursor - 1) & (elements.length - 1);
        fence = tail;
    }
    lastRet = - 1;
}
----------------------------------------

public void remove () {
    if (lastRet < 0) throw new IllegalStateException ();

    if (! delete (lastRet)) {
        cursor = (cursor + 1) & (elements.length - 1);
        fence = head;
    }
    lastRet = - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44064601_44070255_1_18
44064601_44070255_20_42
Title: Android EditText Destroys Webview Actionmode 
----------------------------------------

@Override
public ActionMode startActionMode (ActionMode.Callback callback) {
    if (enableWebviewActionmodeInline) {
        Log.i (TAG, "startActionMode() enableWebviewActionmodeInline");
        return super.startActionMode (new MyActionmodeCallback (mainActivity, this, editLayout, editText));
    }
    if (enableWebviewActionmodeActionbar) {
        Log.i (TAG, "startActionMode() enableWebviewActionmodeActionbar");
        return super.startActionMode (new MyActionmodeCallback (mainActivity, this, editLayout, editText));
    }
    Log.i (TAG, "startActionMode() default");
    return super.startActionMode (callback);
}
----------------------------------------

@Override
public ActionMode startActionMode (ActionMode.Callback callback, int type) {
    if (enableWebviewActionmodeInline) {
        Log.i (TAG, "startActionMode()_type enableWebviewActionmodeInline");
        return super.startActionMode (new MyActionmodeCallback (mainActivity, this, editLayout, editText), type);
    }
    if (enableWebviewActionmodeActionbar) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            Log.i (TAG, "startActionMode()_type enableWebviewActionmodeActionbar Build.VERSION_CODES.M");
            return super.startActionMode (new MyActionmodeCallback (mainActivity, this, editLayout, editText), TYPE_PRIMARY);
        } else {
            Log.i (TAG, "startActionMode()_type enableWebviewActionmodeActionbar");
            return super.startActionMode (new MyActionmodeCallback (mainActivity, this, editLayout, editText));
        }
    }
    Log.i (TAG, "startActionMode()_type default");
    return super.startActionMode (callback, type);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4407839_11962756_5_22
4407839_28121186_4_21
Title: How can I find the Square Root of a Java BigInteger? 
----------------------------------------

public static BigInteger bigIntSqRootFloor (BigInteger x) throws IllegalArgumentException {
    if (x.compareTo (BigInteger.ZERO) < 0) {
        throw new IllegalArgumentException ("Negative argument.");
    }
    if (x.equals (BigInteger.ZERO) || x.equals (BigInteger.ONE)) {
        return x;
    }
    BigInteger two = BigInteger.valueOf (2L);
    BigInteger y;
    for (y = x.divide (two); y.compareTo (x.divide (y)) > 0; y = ((x.divide (y)).add (y)).divide (two));

    return y;
}
----------------------------------------

public static BigInteger bigIntSqRootFloor (BigInteger x) throws IllegalArgumentException {
    if (checkTrivial (x)) {
        return x;
    }
    if (x.bitLength () < 64) {
        double sqrt = Math.sqrt (x.longValue ());
        return BigInteger.valueOf (Math.round (sqrt));
    }
    BigInteger y = x.divide (two);
    BigInteger value = x.divide (y);
    while (y.compareTo (value) > 0) {
        y = value.add (y).divide (two);
        value = x.divide (y);
    }
    return y;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4407839_13023513_1_31
4407839_51223392_16_44
Title: How can I find the Square Root of a Java BigInteger? 
----------------------------------------

public static void main (String args []) {
    BigInteger N = new BigInteger ("17976931348623159077293051907890247336179769789423065727343008115" + "77326758055056206869853794492129829595855013875371640157101398586" + "47833778606925583497541085196591615128057575940752635007475935288" + "71082364994994077189561705436114947486504671101510156394068052754" + "0071584560878577663743040086340742855278549092581");
    System.out.println (N.toString (10).length ());
    String sqrt = "";
    BigInteger divisor = BigInteger.ZERO;
    BigInteger toDivide = BigInteger.ZERO;
    String Nstr = N.toString (10);
    if (Nstr.length () % 2 == 1) Nstr = "0" + Nstr;

    for (int digitCount = 0;
    digitCount < Nstr.length (); digitCount += 2) {
        toDivide = toDivide.multiply (BigInteger.TEN).multiply (BigInteger.TEN);
        toDivide = toDivide.add (new BigInteger (Nstr.substring (digitCount, digitCount + 2)));
        String div = divisor.toString (10);
        divisor = divisor.add (new BigInteger (div.substring (div.length () - 1)));
        int into = tryMax (divisor, toDivide);
        divisor = divisor.multiply (BigInteger.TEN).add (BigInteger.valueOf (into));
        toDivide = toDivide.subtract (divisor.multiply (BigInteger.valueOf (into)));
        sqrt = sqrt + into;
    }
    System.out.println (String.format ("Sqrt(%s) = %s", N, sqrt));
}
----------------------------------------

public static void main (String [] args) {
    List < BigInteger > listOfSquares = new ArrayList < BigInteger > ();
    listOfSquares.add (BigInteger.valueOf (5).multiply (BigInteger.valueOf (5)).pow (2));
    listOfSquares.add (BigInteger.valueOf (11).multiply (BigInteger.valueOf (11)).pow (2));
    listOfSquares.add (BigInteger.valueOf (15485863).multiply (BigInteger.valueOf (10000019)).pow (2));
    listOfSquares.add (BigInteger.valueOf (533000401).multiply (BigInteger.valueOf (982451653)).pow (2));
    listOfSquares.add (BigInteger.valueOf (11).multiply (BigInteger.valueOf (23)));
    listOfSquares.add (BigInteger.valueOf (11).multiply (BigInteger.valueOf (23)).pow (2));
    for (BigInteger bigIntegerNumber : listOfSquares) {
        BigInteger squareRoot = calculateSquareRoot (bigIntegerNumber);
        System.out.println ("Result :" + bigIntegerNumber + ":" + squareRoot);
    }
    System.out.println ("*********************************************************************");
    for (BigInteger bigIntegerNumber : listOfSquares) {
        BigInteger squareRoot = determineClosestWholeNumberSquareRoot (bigIntegerNumber);
        System.out.println ("Result :" + bigIntegerNumber + ":" + squareRoot);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4407839_15591589_1_10
4407839_16804098_1_13
Title: How can I find the Square Root of a Java BigInteger? 
----------------------------------------

public static BigInteger sqrt (BigInteger n) {
    BigInteger a = BigInteger.ONE;
    BigInteger b = new BigInteger (n.shiftRight (5).add (new BigInteger ("8")).toString ());
    while (b.compareTo (a) >= 0) {
        BigInteger mid = new BigInteger (a.add (b).shiftRight (1).toString ());
        if (mid.multiply (mid).compareTo (n) > 0) b = mid.subtract (BigInteger.ONE);
        else a = mid.add (BigInteger.ONE);

    }
    return a.subtract (BigInteger.ONE);
}
----------------------------------------

public static BigInteger sqrt (BigInteger x) {
    BigInteger div = BigInteger.ZERO.setBit (x.bitLength () / 2);
    BigInteger div2 = div;
    for (;;) {
        BigInteger y = div.add (x.divide (div)).shiftRight (1);
        if (y.equals (div) || y.equals (div2)) return y;

        div2 = div;
        div = y;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4407839_16804098_1_13
4407839_36187890_1_12
Title: How can I find the Square Root of a Java BigInteger? 
----------------------------------------

public static BigInteger sqrt (BigInteger x) {
    BigInteger div = BigInteger.ZERO.setBit (x.bitLength () / 2);
    BigInteger div2 = div;
    for (;;) {
        BigInteger y = div.add (x.divide (div)).shiftRight (1);
        if (y.equals (div) || y.equals (div2)) return y;

        div2 = div;
        div = y;
    }
}
----------------------------------------

public static BigInteger sqrt (BigInteger n) {
    BigInteger a = BigInteger.ONE;
    BigInteger b = n.shiftRight (1).add (new BigInteger ("2"));
    while (b.compareTo (a) >= 0) {
        BigInteger mid = a.add (b).shiftRight (1);
        if (mid.multiply (mid).compareTo (n) > 0) b = mid.subtract (BigInteger.ONE);
        else a = mid.add (BigInteger.ONE);

    }
    return a.subtract (BigInteger.ONE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44086525_44086559_3_12
44086525_44086804_3_12
Title: Error :: Main method not found in class 
----------------------------------------

public void printPhoto (int width, int height, boolean inColor) {
    System.out.println ("Width = " + width + " cm");
    System.out.println ("Height = " + height + " cm");
    if (inColor) {
        System.out.println ("Print is Full color.");
    } else {
        System.out.println ("Print is black and white.");
    }
}
----------------------------------------

public Test printPhoto (int width, int height, boolean inColor) {
    System.out.println ("Width = " + width + " cm");
    System.out.println ("Height = " + height + " cm");
    if (inColor) {
        System.out.println ("Print is Full color.");
    } else {
        System.out.println ("Print is black and white.");
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44087234_44087410_2_15
44087234_44087478_6_27
Title: Average Word value in a sentence based on ASCII value for each letter 
----------------------------------------

public static void main (String [] args) {
    String str = "Hello World";
    double average = 0;
    for (char c : str.toCharArray ()) {
        if (c != ' ') {
            average += (int) c;
        }
    }
    average /= str.replace (" ", "").length ();
    System.out.println (average);
}
----------------------------------------

public static void main (String [] args) {
    String str = "Hello World";
    String [] s = str.split (" ");
    int [] average = new int [s.length];
    for (int i = 0;
    i < s.length; i ++) {
        int wordAverage = 0;
        System.out.println (s [i]);
        for (int j = 0;
        j < s [i].length (); j ++) {
            wordAverage += (int) s [i].charAt (j);
        }
        average [i] = wordAverage / s [i].length ();
        System.out.println (average [i]);
    }
    int finalAverage = 0;
    for (int i = 0;
    i < average.length; i ++) finalAverage += average [i];

    finalAverage /= average.length;
    System.out.println (finalAverage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44093010_44093363_45_72
44093010_44093363_76_124
Title: Invalidate an element forming a path if it is surrounded 
----------------------------------------

boolean findPath (int [] origin) {
    this.origin = origin;
    int row = origin [0], col = origin [1];
    originToken = grid [row] [col];
    checked = new CellsList ();
    boolean found = findPath (row, col);
    if (found) {
        findContainedWithin ();
        allContainedWithin.addAll (containedWithin);
        printPath ();
    } else {
        System.out.println ("No path found");
    }
    return found;
}
----------------------------------------

private boolean findPath (int row, int col) {
    if (grid [row] [col] != originToken) {
        return false;
    }
    int [] cell = new int [] {row, col};
    if (checked.contains (cell)) {
        return false;
    }
    if (allContainedWithin.contains (cell)) {
        return false;
    }
    CellsList neighbors = getNeighbors (row, col);
    if ((size () >= MIN_PATH_LEGTH) && neighbors.contains (origin)) {
        add (cell);
        return true;
    }
    checked.add (cell);
    add (cell);
    for (int [] neighbor : neighbors) {
        boolean found = findPath (neighbor [0], neighbor [1]);
        if (found) {
            return true;
        }
    }
    pop ();
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44097418_44097465_1_52
44097418_44097602_7_19
Title: Use switch case within while loop 
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    while (true) {
        System.out.println ("Main Menu:");
        System.out.println ("1. Addition");
        System.out.println ("2. Substraction");
        System.out.println ("3. Multipication");
        System.out.println ("4. Division");
        System.out.println ("Enter your choice: ");
        int i = s.nextInt ();
        System.out.println ("ENTER FIRST NUMBER ");
        int a = s.nextInt ();
        System.out.println ("ENTER SECOND NUMBER ");
        int b = s.nextInt ();
        int result = 0;
        switch (i) {
            case 1 :
                result = a + b;
                break;
            case 2 :
                result = a - b;
                break;
            case 3 :
                result = a * b;
                break;
            case 4 :
                result = a / b;
                break;
            default :
                System.out.println ("Wrong Choice.");
        }
        System.out.println ("Answer is " + result);
        System.out.println ("Go again?");
        String goAgain = s.next ();
        if (! goAgain.equals ("y")) {
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Calculator calc = new Calculator ();
    Scanner s = new Scanner (System.in);
    while (true) {
        String res = calc.runCalc (s);
        if (res.equals (EXIT)) {
            break;
        } else {
            System.out.println (res);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44097418_44097602_7_19
44097418_44097723_1_48
Title: Use switch case within while loop 
----------------------------------------

public static void main (String [] args) {
    Calculator calc = new Calculator ();
    Scanner s = new Scanner (System.in);
    while (true) {
        String res = calc.runCalc (s);
        if (res.equals (EXIT)) {
            break;
        } else {
            System.out.println (res);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    int result = 0;
    do {
        System.out.println ("Main Menu:");
        System.out.println ("-1. complete and calculate");
        System.out.println ("1. Addition");
        System.out.println ("2. Substraction");
        System.out.println ("3. Multipication");
        System.out.println ("4. Division");
        System.out.println ("Enter your choice: ");
        int i = s.nextInt ();
        if (i == - 1) {
            System.out.println ("Answer is " + result);
            return;
        }
        System.out.println ("ENTER FIRST NUMBER ");
        int a = s.nextInt ();
        System.out.println ("ENTER SECOND NUMBER ");
        int b = s.nextInt ();
        switch (i) {
            case 1 :
                result = a + b;
                break;
            case 2 :
                result = a - b;
                break;
            case 3 :
                result = a * b;
                break;
            case 4 :
                result = a / b;
                break;
            default :
                System.out.println ("Wrong Choice.");
                break;
        }
    } while (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44099008_44099964_23_121
44099008_44100161_20_136
Title: how to retrive data from a file 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("1.Please register for new staff\n2.Staff login\n");
    Scanner input1 = new Scanner (System.in);
    FileWriter fWriter = null;
    BufferedWriter writer = null;
    int choice = input1.nextInt ();
    StringBuilder sb = new StringBuilder ();
    String text = "";
    if (choice == 1) {
        System.out.println ("======================Staff Registration==================\n");
        System.out.println ("Please enter your personal details below:\n");
        System.out.println ("Enter your first name:\n");
        text = input1.next ();
        sb.append (text + "  ");
        System.out.println ("Enter your last name:\n");
        text = input1.next ();
        sb.append (text + "   ");
        System.out.println ("Enter your NRIC:\n");
        text = input1.next ();
        sb.append (text + "   ");
        System.out.println ("Enter your Staff ID:\n");
        text = input1.next ();
        sb.append (text + "   ");
        System.out.println ("Enter your position:\n");
        text = input1.next ();
        sb.append (text + "   ");
        input1.close ();
        try {
            fWriter = new FileWriter ("text1.txt");
            writer = new BufferedWriter (fWriter);
            writer.write (sb.toString ());
            writer.newLine ();
            writer.close ();
            System.err.println ("Your input data " + sb.length () + " was saved.");
        } catch (Exception e) {
            System.out.println ("Error!");
        }
    } else {
        String savedName = "";
        String savedPassword = "";
        try {
            FileInputStream fis = new FileInputStream (new File ("text1.txt"));
            BufferedReader bufferedReader = new BufferedReader (new InputStreamReader (fis, "UTF-8"));
            String word = "";
            String [] arr = null;
            while ((word = bufferedReader.readLine ()) != null) {
                arr = word.split ("\\s+");
            }
            savedName = arr [0];
            savedPassword = arr [2];
            bufferedReader.close ();
        } catch (Exception e) {
        }
        System.out.println ("======================Staff Login===========================");
        System.out.println ("\nLogin(Use your first name as username and id as password)");
        System.out.println ("Enter Username : ");
        String userName = input1.next ();
        System.out.println ("Enter Password : ");
        String password = input1.next ();
        if (userName.equals (savedName) && password.equals (savedPassword)) {
            clear ();
            System.out.println ("Access Granted! Welcome!");
        } else if (userName.equals (savedName) && ! password.equals (savedPassword)) {
            System.out.println ("Invalid Password!");
        } else if (! userName.equals (savedName) && password.equals (savedPassword)) {
            System.out.println ("Invalid Username!");
        } else {
            System.out.println ("Please register first!\n");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("1.Please register for new staff\n2.Staff login\n");
    Scanner input1 = new Scanner (System.in);
    FileWriter fWriter = null;
    BufferedWriter writer = null;
    int choice = input1.nextInt ();
    if (choice == 1) {
        System.out.println ("======================Staff Registration==================\n");
        System.out.println ("Please enter your personal details below:\n");
        System.out.println ("Enter your first name:\n");
        Scanner scan = new Scanner (System.in);
        String text = scan.nextLine ();
        System.out.println ("Enter your last name:\n");
        Scanner scan1 = new Scanner (System.in);
        String text1 = scan.nextLine ();
        System.out.println ("Enter your NRIC:\n");
        Scanner scan2 = new Scanner (System.in);
        String text2 = scan.nextLine ();
        System.out.println ("Enter your Staff ID:\n");
        Scanner scan3 = new Scanner (System.in);
        String text3 = scan.nextLine ();
        System.out.println ("Enter your position:\n");
        Scanner scan4 = new Scanner (System.in);
        String text4 = scan.nextLine ();
        try {
            fWriter = new FileWriter ("text1.txt");
            writer = new BufferedWriter (fWriter);
            writer.write (text);
            writer.write ("#");
            writer.write (text1);
            writer.write ("#");
            writer.write (text2);
            writer.write ("#");
            writer.write (text3);
            writer.write ("#");
            writer.write (text4);
            writer.close ();
            System.err.println ("Your input data " + text.length () + " was saved.");
        } catch (Exception e) {
            System.out.println ("Error!");
        }
    } else {
        System.out.println ("======================Staff Login===========================");
        System.out.println ("\nLogin(Use your first name as username and id as password)");
        System.out.println ("Enter Username : ");
        Scanner scan = new Scanner (System.in);
        String text = scan.nextLine ();
        System.out.println ("Enter Password : ");
        Scanner scan3 = new Scanner (System.in);
        String text3 = scan.nextLine ();
        String datafile = "";
        try {
            FileReader fr = new FileReader ("text1.txt");
            int i;
            while ((i = fr.read ()) != - 1) {
                datafile = datafile + (char) i;
            }
        } catch (Exception e) {
            System.out.println ("Error In Login : " + e);
        }
        String [] userval = datafile.split ("#");
        for (int i = 0;
        i < userval.length; i ++) {
            System.out.println (i + "><![CDATA[>>>>" + userval [i]);
        }
        if (text.equals (userval [0]) && text3.equals (userval [3])) {
            clear ();
            System.out.println ("Access Granted! Welcome!");
        } else {
            System.out.println ("Please register first!\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44102322_44102449_1_33
44102322_44102663_1_16
Title: Bunch of elements in array Java 
----------------------------------------

public int countBunches (int [] myArray) {
    int count = 0;
    int lastItem;
    boolean lastItemMatched;
    for (int i = 0;
    i < myArray.length; i ++) {
        if (i == 0) {
            lastItem = myArray [0];
            lastItemMatched = false;
        } else {
            if (lastItem == myArray [i]) {
                if (! lastItemMatched) {
                    count ++;
                }
                lastItemMatched = true;
            } else {
                lastItemMatched = false;
            }
            lastItem = myArray [i];
        }
    }
    return count;
}
----------------------------------------

private static int countBunches (int [] numbers) {
    Integer previous = null;
    int bunch = 0;
    for (int i = 0;
    i < numbers.length; i ++) {
        if (previous != null) {
            if (previous == numbers [i]) {
                bunch ++;
                while (i < numbers.length && previous == numbers [i ++]) {
                }
            }
        }
        if (i < numbers.length) {
            previous = numbers [i];
        }
    }
    return bunch;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44122400_44123783_12_22
44122400_44123783_46_59
Title: Java opening socket streams in both ways 
----------------------------------------

public void run () {
    p ("acceptor running on: " + serverSocket);
    while (true) try {
        Socket socket = serverSocket.accept ();
        if (consumer != null) consumer.accept (socket);

    } catch (IOException e) {
        p (getName () + " caught: " + e);
        break;
    }

}
----------------------------------------

public void run () {
    p ("connection on: " + socket + " is runing.");
    String string = null;
    try {
        p ("connection on: " + socket + " is trying to read.");
        while ((string = in.readLine ()) != null) {
            process (string);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    process (null);
    p ("connection on: " + socket + " is exiting run()");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44122782_44123377_1_29
44122782_44123725_4_30
Title: Jackson deserialize based on type 
----------------------------------------

public static < T > T deserialize (String xml, Object obj) throws JAXBException {
    T result = null;
    try {
        int start = jsonString.indexOf ("type");
        int end = jsonString.indexOf ("data");
        Class actualClass = Class.forName (jsonString.substring (start + 4, end - 2));
        JAXBContextFactory factory = JAXBContextFactory.getInstance ();
        JAXBContext jaxbContext = factory.getJaxBContext (actualClass);
        Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller ();
        try (StringReader reader = new StringReader (xml)) {
            result = (T) jaxbUnmarshaller.unmarshal (reader);
        }
    } catch (JAXBException e) {
        log.error (String.format ("Exception while deserialising the object[JAXBException] %s\n\r%s", e.getMessage ()));
    }
    return result;
}
----------------------------------------

public Model deserialize (JsonParser jp, DeserializationContext ctxt) throws IOException, JsonMappingException {
    ObjectCodec codec = jp.getCodec ();
    JsonNode node = codec.readTree (jp);
    String type = ((Wrapper) jp.getParsingContext ().getParent ().getCurrentValue ()).getType ();
    switch (type) {
        case "Foo" :
            return codec.treeToValue (node, Foo.class);
        case "Bar" :
            return codec.treeToValue (node, Bar.class);
        default :
            throw new JsonMappingException (jp, "Invalid value for the \"type\" property");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44133367_44133762_1_16
44133367_44133777_2_34
Title: Catch 404 error from BufferedInputStream 
----------------------------------------

public static void down (final String filename, final String urlString) throws IOException {
    try (BufferedInputStream in = new BufferedInputStream (new URL (urlString).openStream ()); FileOutputStream fout = new FileOutputStream (new File (filename))) {
        final byte data [] = new byte [1024];
        int count;
        while ((count = in.read (data, 0, 1024)) != - 1) {
            fout.write (data, 0, count);
        }
    } catch (IOException e) {
        System.err.println ("Caught IOException: " + e.getMessage ());
    } catch (IndexOutOfBoundsException e) {
        System.err.println ("IndexOutOfBoundsException: " + e.getMessage ());
    }
}
----------------------------------------

public static void down (final String filename, final String urlString) throws MalformedURLException, IOException {
    BufferedInputStream in = null;
    FileOutputStream fout = null;
    try {
        in = new BufferedInputStream (new URL (urlString).openStream ());
        fout = new FileOutputStream (new File (filename));
        final byte data [] = new byte [1024];
        int count;
        while ((count = in.read (data, 0, 1024)) != - 1) {
            fout.write (data, 0, count);
        }
    } catch (FileNotFoundException ex) {
        System.err.println ("Caught 404: " + e.getMessage ());
    } catch (IOException ex) {
        System.err.println ("Caught IOException: " + e.getMessage ());
    } catch (IndexOutOfBoundsException e) {
        System.err.println ("IndexOutOfBoundsException: " + e.getMessage ());
    } finally {
        if (in != null) try {
            in.close ();
        } catch (IOException e) {
        }

        if (fout != null) try {
            fout.close ();
        } catch (IOException e) {
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4414673_38536770_10_30
4414673_7871291_6_15
Title: "android color between two colors based on percentage?" 
----------------------------------------

private int interpolateColor (int a, int b, float proportion) {
    if (proportion > 1 || proportion < 0) {
        throw new IllegalArgumentException ("proportion must be [0 - 1]");
    }
    float [] hsva = new float [3];
    float [] hsvb = new float [3];
    float [] hsv_output = new float [3];
    Color.colorToHSV (a, hsva);
    Color.colorToHSV (b, hsvb);
    for (int i = 0;
    i < 3; i ++) {
        hsv_output [i] = interpolate (hsva [i], hsvb [i], proportion);
    }
    int alpha_a = Color.alpha (a);
    int alpha_b = Color.alpha (b);
    float alpha_output = interpolate (alpha_a, alpha_b, proportion);
    return Color.HSVToColor ((int) alpha_output, hsv_output);
}
----------------------------------------

private int interpolateColor (int a, int b, float proportion) {
    float [] hsva = new float [3];
    float [] hsvb = new float [3];
    Color.colorToHSV (a, hsva);
    Color.colorToHSV (b, hsvb);
    for (int i = 0;
    i < 3; i ++) {
        hsvb [i] = interpolate (hsva [i], hsvb [i], proportion);
    }
    return Color.HSVToColor (hsvb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44150583_44150693_6_24
44150583_44151840_15_60
Title: android studio buttons not working 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.admin_menu);
    b1 = (Button) findViewById (R.id.staff);
    b2 = (Button) findViewById (R.id.stock);
    b3 = (Button) findViewById (R.id.incoming);
    b4 = (Button) findViewById (R.id.outgoing);
    b5 = (Button) findViewById (R.id.logout1);
    b1.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Redirecting...", Toast.LENGTH_SHORT).show ();
            Intent intent = new Intent (AdminMenu.this, StaffSelection.class);
            startActivity (intent);
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_admin_menu);
    b1 = (Button) findViewById (R.id.staff);
    b2 = (Button) findViewById (R.id.stock);
    b3 = (Button) findViewById (R.id.incoming);
    b4 = (Button) findViewById (R.id.outgoing);
    b5 = (Button) findViewById (R.id.logout1);
    b1.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Redirecting...", Toast.LENGTH_SHORT).show ();
            navigateToActivity (CreateStaffActivity.class);
        }}

    );
    b2.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Redirecting...", Toast.LENGTH_SHORT).show ();
            navigateToActivity (CreateStockActivity.class);
        }}

    );
    b3.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Redirecting...", Toast.LENGTH_SHORT).show ();
            navigateToActivity (CreateIncomingActivity.class);
        }}

    );
    b4.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Redirecting...", Toast.LENGTH_SHORT).show ();
            navigateToActivity (CreateOutgoingActivity.class);
        }}

    );
    b5.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (getApplicationContext (), "Logging Out...", Toast.LENGTH_SHORT).show ();
            navigateToActivity (LoginActivity.class);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44151277_44151329_1_11
44151277_44151435_1_12
Title: How to print all output at same time 
----------------------------------------

public static void main (String [] args) {
    String str = "";
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    for (int i = 0;
    i < r; i ++) {
        str += sc.next ();
    }
    print (str);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    String str = "";
    for (int i = 0;
    i < tot; i ++) {
        str += "String is: ";
        str += sc.next ();
        str += "\n";
    }
    print (str);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44151277_44151329_1_11
44151277_44173226_1_19
Title: How to print all output at same time 
----------------------------------------

public static void main (String [] args) {
    String str = "";
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    for (int i = 0;
    i < r; i ++) {
        str += sc.next ();
    }
    print (str);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    int counter = 0;
    String str = "";
    for (int i = 0;
    i < tot; i ++) {
        counter ++;
        str += "String is: ";
        str += sc.next ();
        str += "\n";
        if (counter == tot) {
            print (str);
        }
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44151277_44151435_1_12
44151277_44173226_1_19
Title: How to print all output at same time 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    String str = "";
    for (int i = 0;
    i < tot; i ++) {
        str += "String is: ";
        str += sc.next ();
        str += "\n";
    }
    print (str);
    sc.close ();
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    int tot = sc.nextInt ();
    int counter = 0;
    String str = "";
    for (int i = 0;
    i < tot; i ++) {
        counter ++;
        str += "String is: ";
        str += sc.next ();
        str += "\n";
        if (counter == tot) {
            print (str);
        }
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44157182_44157219_1_11
44157182_44157455_1_12
Title: removing a return statement from the loop 
----------------------------------------

private boolean productFitsAt (int lOrigin, int wOrigin, int [] product) {
    boolean result = true;
    for (int i = wOrigin;
    i < wOrigin + product [Data.WID] && result; i ++) {
        for (int j = lOrigin;
        j < lOrigin + product [Data.LEN] && result; j ++) {
            if (i >= BOX_WIDTH || j >= BOX_LENGHT || BOX [i] [j] != EMPTY) {
                result = false;
            }
        }
    }
    return result;
}
----------------------------------------

private boolean productFitsAt (int lOrigin, int wOrigin, int [] product) {
    boolean result = true;
    outer : for (int i = wOrigin;
    i < wOrigin + product [Data.WID]; i ++) {
        for (int j = lOrigin;
        j < lOrigin + product [Data.LEN]; j ++) {
            if (i >= BOX_WIDTH || j >= BOX_LENGHT || BOX [i] [j] != EMPTY) {
                result = false;
                break outer;
            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44182596_44183390_1_35
44182596_44191530_4_26
Title: JOption Panel for a game 
----------------------------------------

public static void main (String [] args) {
    String user_name;
    String name_answer;
    String yes_no;
    String rules_yes;
    String rules_no;
    char [] input;
    char Yes = 0;
    {
        user_name = JOptionPane.showInputDialog ("Enter Your Name");
        name_answer = ("Hello " + user_name + " Welcome to Tic-Tac-Toe, Click OK to Start");
        JOptionPane.showMessageDialog (null, name_answer);
    } {
        yes_no = JOptionPane.showInputDialog ("Would you like the rules (Y/N)");
        input = yes_no.toCharArray ();
        if (input [0] == Yes) {
            rules_yes = ("Yes? The Rules: X goes first, each player takes turns to put their symbol in one of nine boxes, you cannot put your symbol in a box which already contains a symbol, the first one to make a row of three wins");
            JOptionPane.showMessageDialog (null, rules_yes);
        } else {
            rules_no = ("No? Well too bad, here are the rules, The Rules: X goes first, each player takes turns to put their symbol in one of nine boxes, you cannot put your symbol in a box which already contains a symbol, the first one to make a row of three wins");
            JOptionPane.showMessageDialog (null, rules_no);
        }
    }}
----------------------------------------

public static void main (String [] args) {
    String userName;
    String nameAnswer;
    String rulesYes;
    String rulesNo;
    String yesNo;
    userName = JOptionPane.showInputDialog ("Enter Your Name");
    nameAnswer = ("Hello " + userName + " Welcome to Tic-Tac-Toe, Click OK to Start");
    JOptionPane.showMessageDialog (null, nameAnswer);
    yesNo = JOptionPane.showInputDialog ("Would you like the rules (Y/N)");
    if (yesNo.equalsIgnoreCase ("y")) {
        rulesYes = ("Yes? The Rules: X goes first, each player takes turns to put their symbol in one of nine boxes, you cannot put your symbol in a box which already contains a symbol, the first one to make a row of three wins");
        JOptionPane.showMessageDialog (null, rulesYes);
    } else {
        rulesNo = ("No? Well too bad, here are the rules, The Rules: X goes first, each player takes turns to put their symbol in one of nine boxes, you cannot put your symbol in a box which already contains a symbol, the first one to make a row of three wins");
        JOptionPane.showMessageDialog (null, rulesNo);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44186933_44187097_3_27
44186933_44187121_7_22
Title: Find the number of times a given weekday falls in a specified year 
----------------------------------------

public static void main (String [] args) {
    String weekday = "Sunday";
    int year = 2017;
    int month = 0;
    for (month = 0; month < 12; month ++) {
        Calendar cal = Calendar.getInstance ();
        cal.set (Calendar.DATE, 01);
        cal.set (Calendar.MONTH, month);
        cal.set (Calendar.YEAR, year);
        cal.set (Calendar.DAY_OF_MONTH, 1);
        Date firstDayOfMonth = cal.getTime ();
        DateFormat sdf = new SimpleDateFormat ("EEEEEEEE");
        System.out.println ("First Day of Month " + month.toString () + ": " + sdf.format (firstDayOfMonth));
        if (weekday.equals (sdf.format (firstDayOfMonth))) {
            System.out.println ("This day falls on the first of the month");
        } else System.out.println ("This day does not fall on the first of the month");

    }
}
----------------------------------------

public static void main (String [] args) {
    String userInput = "Sunday";
    DayOfWeek inputDayOfWeek = toDayOfWeek (userInput);
    int inputYear = 2017;
    int occurrences = 0;
    for (Month month : Month.values ()) {
        LocalDate date = LocalDate.of (inputYear, month, 1);
        DayOfWeek dayOfWeek = date.getDayOfWeek ();
        if (dayOfWeek == inputDayOfWeek) {
            occurrences ++;
        }
    }
    System.out.println (userInput + " is the first day of a month " + occurrences + " times in " + inputYear);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44206583_44206690_1_13
44206583_44206800_6_24
Title: How to loop string input into string array and then output it? 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    List < String > buffer = new ArrayList < > ();
    while (true) {
        System.out.print ("Enter string: ");
        String line = scanner.nextLine ();
        if ("quit".equals (line)) {
            break;
        }
        buffer.add (line);
    }
    System.out.println (buffer);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String word = null;
    ArrayList < String > words = new ArrayList < String > ();
    do {
        System.out.print ("Type your word: ");
        word = keyboard.next ();
        if (word.equalsIgnoreCase ("Quit")) break;

        words.add (word);
    } while (true);
    System.out.println ("You typed: ");
    for (String w : words) {
        System.out.print (w + ",");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44210811_44210918_1_41
44210811_44210933_5_36
Title: Getting the minimum and maximum values in a randomly generated array in java 
----------------------------------------

public static void main (String [] args) {
    int arr [] = new int [10];
    Random Rand = new Random ();
    int max = 0;
    int min = 11;
    for (int i = 0;
    i < 10; i ++) {
        int RandNum = Rand.nextInt (10);
        arr [i] = RandNum;
        if (i == 0) {
            System.out.print ("[");
        }
        System.out.print (arr [i] + " ");
        if (i == 9) {
            System.out.println ("]");
        }
        if (RandNum > max) {
            max = RandNum;
        }
        if (RandNum < min) {
            min = RandNum;
        }
    }
    System.out.println ("Minimum number: " + min);
    System.out.println ("Maximum number: " + max);
}
----------------------------------------

public static void main (String...args) {
    int count = 10;
    int arr [] = new int [count];
    Random random = new Random ();
    int max = arr [0];
    int min = arr [0];
    for (int i = 0;
    i < count; i ++) {
        int number = random.nextInt (20);
        arr [i] = number;
        if (i == 0) {
            System.out.print ("Array: [ " + number + " ");
        } else if (i == count - 1) {
            System.out.println (number + " ]");
        } else {
            System.out.print (number + " ");
        }

        if (max < number) {
            max = number;
        }
        if (min > number) {
            min = number;
        }
    }
    System.out.println ("Minimum number: " + min);
    System.out.println ("Maximum number: " + max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4421219_4421249_1_12
4421219_4421286_1_12
Title: missing variable 
----------------------------------------

public static int [] intial (int [] b) {
    int Per [] = new int [64];
    int index, b;
    for (int i = 0;
    i < b.length; i ++) index = itable (i);

    Per [index - 1] = b [i];
    return Per;
}
----------------------------------------

public static int [] intial (int [] b) {
    int [] Per = new int [64];
    int index;
    for (int i = 0;
    i < b.length; i ++) {
        index = itable (i);
        Per [index - 1] = b [i];
    }
    return Per;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44218022_44218886_20_30
44218022_44219146_24_60
Title: Replay loop that allows script to be exit at any time 
----------------------------------------

public void userguess () {
    if ("y".equalsIgnoreCase (play)) {
        System.out.println ("Please guess a number between 1 and 100");
        String input = scan.next ();
        if ("e".equalsIgnoreCase (input)) exit ();
        else usernumber = Integer.parseInt (input);

        highorlow ();
    } else if ("e".equalsIgnoreCase (play)) exit ();

}
----------------------------------------

public void userguess () {
    if (play == 'y') {
        boolean correctNumber = false;
        while (! correctNumber) {
            System.out.println ("Please guess a number between 1 and 100");
            String inputFromUser = scan.next ();
            try {
                usernumber = Integer.parseInt (inputFromUser);
                correctNumber = true;
            } catch (NumberFormatException e) {
                if (inputFromUser.equals ("e")) {
                    exit ();
                } else {
                    System.out.println (" Please input a correct number Please !!! ");
                }
            }
        }
    } else {
        exit ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44218022_44218886_81_93
44218022_44219146_125_157
Title: Replay loop that allows script to be exit at any time 
----------------------------------------

public void play () {
    if (replay == false) {
        exit ();
    }
    instructions ();
    computerguess ();
    userguess ();
    printscore ();
    replay ();
}
----------------------------------------

public void play () {
    if (replay == true) {
        instructions ();
        computerguess ();
        while (true) {
            userguess ();
            highorlow ();
            if (usernumber == computernumber) {
                break;
            }
        }
        printscore ();
        replay ();
    } else {
        if (replay == false) {
            System.exit (3);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44219299_44219559_27_59
44219299_44221280_16_34
Title: Simple MultiThreads program wrong output 
----------------------------------------

public void run () {
    time = System.nanoTime ();
    boolean done = false;
    while (! done) {
        lock.lock ();
        try {
            if (counter > 0) {
                incrementCounter ();
                value ++;
            } else {
                done = true;
            }
        } finally {
            lock.unlock ();
        }
    }
    endtime = System.nanoTime () - time;
    finaltime = endtime;
    System.out.println (finaltime / 1000000000 + "  sekundy");
    System.out.println (Thread.currentThread ().getName () + " updated counter " + value + " times.");
}
----------------------------------------

public void run () {
    long startTime, endTime, timeDiff;
    startTime = System.currentTimeMillis ();
    while (counter >= 0) {
        incrementCounter ();
        -- counter;
        ++ counterDecrements;
    }
    endTime = System.currentTimeMillis ();
    timeDiff = startTime - endTime;
    System.out.println ((timeDiff / 1000000000) + "  sekundy");
    System.out.println (Thread.currentThread ().getName () + " Decremented counter " + counterDecrements + " times.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44219299_44219559_61_79
44219299_44221280_36_53
Title: Simple MultiThreads program wrong output 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread thread1 = new Thread (new ThreadsExample (), "thread-1");
    Thread thread2 = new Thread (new ThreadsExample (), "thread-2");
    Thread thread3 = new Thread (new ThreadsExample (), "thread-3");
    Thread thread4 = new Thread (new ThreadsExample (), "thread-4");
    thread1.start ();
    thread2.start ();
    thread3.start ();
    thread4.start ();
    if (counter <= 0) {
        System.out.println ("Thread 1,2,3,4^^^");
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread thread1 = new Thread (new ThreadsExample (), "thread-1");
    Thread thread2 = new Thread (new ThreadsExample (), "thread-2");
    Thread thread3 = new Thread (new ThreadsExample (), "thread-3");
    Thread thread4 = new Thread (new ThreadsExample (), "thread-4");
    thread1.start ();
    thread2.start ();
    thread3.start ();
    thread4.start ();
    if (counter == 0) {
        System.out.println ("Thread 1,2,3,4^^^^");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44222355_44222452_3_20
44222355_44222489_1_25
Title: Java basic usage of string 
----------------------------------------

public static void main (String [] args) {
    java.util.Scanner scanner = new java.util.Scanner (System.in);
    String sum = "";
    System.out.println ("Type in a word");
    String string = scanner.nextLine ();
    while (! string.equals ("quit")) {
        sum = sum + " " + string;
        System.out.println (sum);
        System.out.println ("Type in another word");
        string = scanner.nextLine ();
    }
    System.out.println ("Ending system");
    scanner.close ();
    System.out.println ("Stopping... due to the word quit");
    System.out.println ("all the words typed are " + sum);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String sum = "";
    System.out.println ("Type in a word");
    String stringextra = scanner.nextLine ();
    if (stringextra.equalsIgnoreCase ("quit")) {
        System.out.println ("Bye bye");
        System.exit (0);
    } else {
        do {
            sum = sum + " " + stringextra;
            System.out.println (sum);
            System.out.println ("Type in another word");
            stringextra = scanner.nextLine ();
        } while (! stringextra.equalsIgnoreCase ("quit"));
    }
    scanner.close ();
    System.out.println ("Stopping... due to the word quit");
    System.out.println ("all the words typed are " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44222355_44222489_1_25
44222355_44222556_1_24
Title: Java basic usage of string 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String sum = "";
    System.out.println ("Type in a word");
    String stringextra = scanner.nextLine ();
    if (stringextra.equalsIgnoreCase ("quit")) {
        System.out.println ("Bye bye");
        System.exit (0);
    } else {
        do {
            sum = sum + " " + stringextra;
            System.out.println (sum);
            System.out.println ("Type in another word");
            stringextra = scanner.nextLine ();
        } while (! stringextra.equalsIgnoreCase ("quit"));
    }
    scanner.close ();
    System.out.println ("Stopping... due to the word quit");
    System.out.println ("all the words typed are " + sum);
}
----------------------------------------

public static void main (String [] args) {
    java.util.Scanner scanner = new java.util.Scanner (System.in);
    String sum = "";
    System.out.println ("Type in a word");
    String string = scanner.nextLine ();
    while (! string.equalsIgnoreCase ("quit")) {
        sum = sum + " " + string;
        System.out.println (sum);
        System.out.println ("Type in another word");
        string = scanner.nextLine ();
        if (string.equalsIgnoreCase ("ends")) {
            string = "quit";
        }
    }
    System.out.println ("Ending system");
    scanner.close ();
    System.out.println ("Stopping... due to the word quit");
    System.out.println ("all the words typed are " + sum);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44224952_44225366_10_18
44224952_44225366_23_34
Title: Consequences of updating other key(s) in ConcurrentHashMap#computeIfAbsent 
----------------------------------------

public void run () {
    map.computeIfAbsent (1, e -> {
        String valueForKey2 = map.get (2);
        System.out.println ("thread1 : get() returns with value for key 2 = " + valueForKey2);
        String oldValueForKey2 = map.put (2, "newValue");
        System.out.println ("thread1 : after put() returns, previous value for key 2 = " + oldValueForKey2);
        return map.get (2);
    });
}
----------------------------------------

public void run () {
    map.computeIfAbsent (2, e -> {
        try {
            Thread.sleep (5000);
        } catch (Exception e1) {
            e1.printStackTrace ();
        }
        String value = "valueSetByThread2";
        System.out.println ("thread2 : computeIfAbsent() returns with value for key 2 = " + value);
        return value;
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239164_1_15
44239008_44239289_1_16
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    String keyword = choices.next ();
    if (keyword.startsWith ("c")) {
        cmethod ();
    } else if (keyword.startsWith ("n")) {
        nmethod ();
    } else {
        System.out.println ("Keyword is wrong.");
    }

}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    switch (choices.next ().charAt (0)) {
        case 'c' :
            cmethod ();
            break;
        case 'n' :
            nmethod ();
            break;
        default :
            System.out.println ("Keyword is wrong.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239164_1_15
44239008_44239357_3_17
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    String keyword = choices.next ();
    if (keyword.startsWith ("c")) {
        cmethod ();
    } else if (keyword.startsWith ("n")) {
        nmethod ();
    } else {
        System.out.println ("Keyword is wrong.");
    }

}
----------------------------------------

public static void main (String [] args) {
    Object obj = new Test ();
    java.lang.reflect.Method method;
    try {
        method = obj.getClass ().getMethod ("tryone1");
        System.out.println ("Found");
    } catch (SecurityException e) {
        System.out.println (" SecurityException Found");
    } catch (NoSuchMethodException e) {
        System.out.println ("Not Found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239164_1_15
44239008_44239445_1_20
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    String keyword = choices.next ();
    if (keyword.startsWith ("c")) {
        cmethod ();
    } else if (keyword.startsWith ("n")) {
        nmethod ();
    } else {
        System.out.println ("Keyword is wrong.");
    }

}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    try {
        String s = br.readLine ();
        if (s.startsWith ("c")) {
            System.out.println ("c");
            System.exit (1);
        }
        if (s.startsWith ("n")) {
            System.out.println ("n");
            System.exit (1);
        } else {
            System.out.println ("Keyword is wrong.");
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239289_1_16
44239008_44239357_3_17
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    switch (choices.next ().charAt (0)) {
        case 'c' :
            cmethod ();
            break;
        case 'n' :
            nmethod ();
            break;
        default :
            System.out.println ("Keyword is wrong.");
    }
}
----------------------------------------

public static void main (String [] args) {
    Object obj = new Test ();
    java.lang.reflect.Method method;
    try {
        method = obj.getClass ().getMethod ("tryone1");
        System.out.println ("Found");
    } catch (SecurityException e) {
        System.out.println (" SecurityException Found");
    } catch (NoSuchMethodException e) {
        System.out.println ("Not Found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239289_1_16
44239008_44239445_1_20
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    Scanner choices = new Scanner (System.in);
    switch (choices.next ().charAt (0)) {
        case 'c' :
            cmethod ();
            break;
        case 'n' :
            nmethod ();
            break;
        default :
            System.out.println ("Keyword is wrong.");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    try {
        String s = br.readLine ();
        if (s.startsWith ("c")) {
            System.out.println ("c");
            System.exit (1);
        }
        if (s.startsWith ("n")) {
            System.out.println ("n");
            System.exit (1);
        } else {
            System.out.println ("Keyword is wrong.");
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44239008_44239357_3_17
44239008_44239445_1_20
Title: "If user input doesn't meet conditions return message" 
----------------------------------------

public static void main (String [] args) {
    Object obj = new Test ();
    java.lang.reflect.Method method;
    try {
        method = obj.getClass ().getMethod ("tryone1");
        System.out.println ("Found");
    } catch (SecurityException e) {
        System.out.println (" SecurityException Found");
    } catch (NoSuchMethodException e) {
        System.out.println ("Not Found");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("This program can randomize characters or numbers.");
    System.out.println ("Please input \"c\" for characters, and \"n\" for numbers. ");
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    try {
        String s = br.readLine ();
        if (s.startsWith ("c")) {
            System.out.println ("c");
            System.exit (1);
        }
        if (s.startsWith ("n")) {
            System.out.println ("n");
            System.exit (1);
        } else {
            System.out.println ("Keyword is wrong.");
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44242647_44242875_1_13
44242647_44280109_1_19
Title: Java generics - Type casting issue 
----------------------------------------

public < T extends TimeManipulator > void find (T p, List < String > fieldsToBeUpdated) {
    fieldsToBeUpdated.parallelStream ().forEach (field -> {
        switch (field) {
            case "a" :
            case "c" :
                p.setCreatedTime (TimeUtils.toGMT (p.getCreatedTime (), ZoneOffset.of ("+05:30")));
                break;
            case "b" :
            case "d" :
                p.setUpdatedTime (TimeUtils.toGMT (p.getUpdatedTime (), ZoneOffset.of ("+05:30")));
                break;
        }
    });
}
----------------------------------------

public < T > void find (Class clazz, List < String > fieldsToBeUpdated) {
    List < T > collectionList = db.findAll ((Class < T >) clazz);
    if (CollectionUtils.isNotEmpty (collectionList)) {
        collectionList.stream ().forEach (p -> {
            fieldsToBeUpdated.stream ().forEach (field -> {
                Date date = null;
                try {
                    if (null != clazz.getDeclaredField (field)) {
                        Field f = clazz.getDeclaredField (field);
                        f.setAccessible (true);
                        date = (Date) f.get (p);
                    }
                } catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) {
                    e.printStackTrace ();
                }
            });
        });
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44246886_44247046_2_10
44246886_44247118_1_12
Title: Java Array.Length is not Correct 
----------------------------------------

public static void main (String args []) {
    funtionsforwargame funtionsforwargame = new funtionsforwargame ();
    funtionsforwargame.instructions ();
    List < String > randomized_deck = funtionsforwargame.get_deck ();
    String [] deck_convert = randomized_deck.toArray (new String [0]);
    for (String card : deck_convert) System.out.print (card + ",");

    System.out.println (deck_convert.length);
}
----------------------------------------

public static void main (String args []) {
    funtionsforwargame funtionsforwargame = new funtionsforwargame ();
    funtionsforwargame.instructions ();
    List < String > randomized_deck = funtionsforwargame.get_deck ();
    String [] deck_convert = randomized_deck.toArray (new String [0]);
    String deck = java.util.Arrays.toString (deck_convert);
    System.out.println (deck_convert.length);
    System.out.println (deck);
    System.out.println (deck.charAt (4));
    System.out.println (deck.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4424716_10061293_2_13
4424716_4424785_1_15
Title: I can't figure out how to reset a loop (see example) 
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = min;
        k < i; k ++) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

public void printSquare (int min, int max) {
    int dif = max - min;
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= i + dif; j ++) {
            int temp = j;
            if (temp > max) temp = temp - max;

            System.out.print (temp);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4424716_4424747_1_11
4424716_4424785_1_15
Title: I can't figure out how to reset a loop (see example) 
----------------------------------------

public void printSquare (int min, int max) {
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= max; j ++) {
            System.out.print (j);
        }
        for (int k = 0;
        k < i - min; k ++) {
            System.out.print (min + k);
        }
        System.out.println ();
    }
}
----------------------------------------

public void printSquare (int min, int max) {
    int dif = max - min;
    for (int i = min;
    i <= max; i ++) {
        for (int j = i;
        j <= i + dif; j ++) {
            int temp = j;
            if (temp > max) temp = temp - max;

            System.out.print (temp);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44247710_44247991_12_28
44247710_44247991_9_31
Title: Run time error in Android 
----------------------------------------

public void run () {
    cl.animate ().alpha (0f).setDuration (1500);
    if (i == 0) cl.setBackgroundResource (R.drawable.bb1);
    else if (i == 1) cl.setBackgroundResource (R.drawable.bb2);
    else if (i == 2) cl.setBackgroundResource (R.drawable.bb3);
    else if (i == 3) cl.setBackgroundResource (R.drawable.bb4);
    else if (i == 4) cl.setBackgroundResource (R.drawable.bb5);
    else if (i == 5) cl.setBackgroundResource (R.drawable.bb6);

    i ++;
    cl.animate ().alpha (1f).setDuration (1500);
}
----------------------------------------

public void run () {
    runOnUiThread (new Runnable () {
        @Override
        public void run () {
            cl.animate ().alpha (0f).setDuration (1500);
            if (i == 0) cl.setBackgroundResource (R.drawable.bb1);
            else if (i == 1) cl.setBackgroundResource (R.drawable.bb2);
            else if (i == 2) cl.setBackgroundResource (R.drawable.bb3);
            else if (i == 3) cl.setBackgroundResource (R.drawable.bb4);
            else if (i == 4) cl.setBackgroundResource (R.drawable.bb5);
            else if (i == 5) cl.setBackgroundResource (R.drawable.bb6);

            i ++;
            cl.animate ().alpha (1f).setDuration (1500);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44252456_44252615_5_21
44252456_44254217_1_70
Title: How to split a string up and save it to a variable if it is valid? 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner ("12345 5 59.28");
    in.useDelimiter (" ");
    String next = in.next ("\\d{5}");
    int numbers = Integer.valueOf (next);
    System.out.println (numbers);
    next = in.next ("\\d{1}");
    int studentId = Integer.valueOf (next);
    System.out.println (studentId);
    next = in.next ("\\d{2}\\.\\d{2}");
    float floatingNumbers = Float.valueOf (next);
    System.out.println (floatingNumbers);
}
----------------------------------------

public static void main (String [] args) {
    Scanner fileInput = new Scanner (System.in);
    String numbers = "";
    String firstNum = "";
    String secondNum = "";
    String thirdNum = "";
    int studentID = 0;
    int secondDigit = 0;
    double thirdDigit = 0;
    System.out.print ("Input: ");
    numbers = fileInput.nextLine ();
    int firstIndex = 0;
    int secondIndex = 0;
    int thirdIndex = 0;
    firstIndex = numbers.indexOf (" ");
    if (firstIndex <= 4) {
        System.out.println ("Number should be 5");
    } else {
        firstNum = numbers.substring (0, firstIndex);
        numbers = numbers.substring (firstIndex + 1);
        studentID = Integer.parseInt (firstNum);
        if (studentID > 0 && studentID < 99999) {
            System.out.println ("First num: " + firstNum);
        } else {
            System.out.println ("first digits not in a range ");
        }
    }
    secondIndex = numbers.indexOf (" ");
    if (secondIndex == 0) {
        System.out.println ("no number");
    } else {
        secondNum = numbers.substring (0, secondIndex);
        numbers = numbers.substring (secondIndex + 1);
        secondDigit = Integer.parseInt (secondNum);
        if (secondDigit >= 0 && secondDigit <= 5) {
            System.out.println ("Second num: " + secondNum);
        } else {
            System.out.println ("second digit not in a range ");
        }
    }
    thirdIndex = numbers.length ();
    if (thirdIndex < 3) {
        System.out.println ("3 numbers should be there");
    } else {
        thirdNum = numbers.substring (0, thirdIndex);
        thirdDigit = Double.parseDouble (thirdNum);
        if (thirdDigit >= 0 && thirdDigit <= 100) {
            System.out.println ("third num: " + thirdNum);
        } else {
            System.out.println ("third digit not in a range ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44264757_44264950_1_22
44264757_44264988_1_13
Title: "Want to read .txt file and load it into a 2D array and then print it as is" 
----------------------------------------

public static void main (String [] str) {
    Scanner s = null;
    try {
        s = new Scanner (new File ("path\\text.txt"));
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    List < String > list = new ArrayList < String > ();
    while (s.hasNextLine ()) {
        list.add (s.nextLine ());
    }
    s.close ();
    Iterator < String > itr = list.listIterator ();
    while (itr.hasNext ()) {
        System.out.println (itr.next ().toString ());
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner s = new Scanner (new File ("D:/trabalho/maze.txt"));
    String [] [] list = new String [10] [5];
    for (int x = x;
    s.hasNextLine (); x ++) {
        for (int i = 0;
        i < 5; i ++) {
            list [x] [i] = s.nextLine ();
        }
    }
    s.close ();
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4427200_24266178_17_67
4427200_6249969_58_69
Title: Getting the most common color of an image 
----------------------------------------

public static void getMostCommonColour (final Bitmap image, final ImageColor heColor) {
    new Thread (new Runnable () {
        private int rgb;
        @Override
        public void run () {
            int height = image.getHeight ();
            int width = image.getWidth ();
            Map m = new HashMap ();
            int boderWid = width / 4;
            int borderHeigh = height / 4;
            for (int i = boderWid;
            i < width - boderWid;) {
                for (int j = borderHeigh;
                j < height - borderHeigh;) {
                    try {
                        rgb = image.getPixel (i, j);
                    } catch (Exception e) {
                        continue;
                    } finally {
                        i += 20;
                        j += 20;
                    }
                    int [] rgbArr = getRGBArr (rgb);
                    if (! isGray (rgbArr)) {
                        Integer counter = (Integer) m.get (rgb);
                        if (counter == null) counter = 0;

                        counter ++;
                        m.put (rgb, counter);
                    }
                }
            }
            List list = new LinkedList (m.entrySet ());
            Collections.sort (list, new Comparator () {
                public int compare (Object o1, Object o2) {
                    return ((Comparable) ((Map.Entry) (o1)).getValue ()).compareTo (((Map.Entry) (o2)).getValue ());
                }}

            );
            Map.Entry me = (Map.Entry) list.get (list.size () - 1);
            int [] rgb = getRGBArr ((Integer) me.getKey ());
            heColor.onImageColor (rgb [0], rgb [1], rgb [2]);
        }}

    ).start ();
}
----------------------------------------

public static String getMostCommonColour (Map map) {
    List list = new LinkedList (map.entrySet ());
    Collections.sort (list, new Comparator () {
        public int compare (Object o1, Object o2) {
            return ((Comparable) ((Map.Entry) (o1)).getValue ()).compareTo (((Map.Entry) (o2)).getValue ());
        }}

    );
    Map.Entry me = (Map.Entry) list.get (list.size () - 1);
    int [] rgb = getRGBArr ((Integer) me.getKey ());
    return Integer.toHexString (rgb [0]) + " " + Integer.toHexString (rgb [1]) + " " + Integer.toHexString (rgb [2]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4427200_24266178_77_86
4427200_6249969_79_89
Title: Getting the most common color of an image 
----------------------------------------

public static boolean isGray (int [] rgbArr) {
    int rgDiff = rgbArr [0] - rgbArr [1];
    int rbDiff = rgbArr [0] - rgbArr [2];
    int tolerance = 10;
    if (rgDiff > tolerance || rgDiff < - tolerance) if (rbDiff > tolerance || rbDiff < - tolerance) {
        return false;
    }

    return true;
}
----------------------------------------

public static boolean isGray (int [] rgbArr) {
    int rgDiff = rgbArr [0] - rgbArr [1];
    int rbDiff = rgbArr [0] - rgbArr [2];
    int tolerance = 10;
    if (rgDiff > tolerance || rgDiff < - tolerance) if (rbDiff > tolerance || rbDiff < - tolerance) {
        return false;
    }

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44276036_44276472_6_35
44276036_44280577_1_16
Title: Java Program testing for a strictly increasing array after removing at most one element 
----------------------------------------

static boolean almostIncreasingSequence (int [] sequence) {
    int removeCount = 0;
    for (int i = 0;
    i < sequence.length - 1; i ++) {
        int current = sequence [i];
        int next = sequence [i + 1];
        if (current >= next) {
            removeCount ++;
            boolean removeCurrent = i == 0 || sequence [i - 1] < next;
            boolean removeNext = i + 1 == sequence.length - 1 || current < sequence [i + 2];
            if (! removeCurrent && ! removeNext) removeCount ++;

        }
        if (removeCount > 1) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean almostIncreasingSequence (int [] sequence) {
    int max = Integer.MIN_VALUE, count = 0;
    boolean flag = true;
    for (int j = 0;
    j < sequence.length; j ++) {
        if (max >= sequence [j]) {
            count ++;
        } else max = sequence [j];

        if (count > 1) {
            flag = false;
            break;
        }
    }
    return flag;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
44301862_44302123_10_36
44301862_46968868_9_31
Title: Arduino ethernet shield + Java socket connection 
----------------------------------------

public static void main (String args []) throws IOException {
    final String host = "172.16.201.218";
    final int portNumber = 8080;
    System.out.println ("Creating socket to '" + host + "' on port " + portNumber);
    Socket socket = new Socket (host, portNumber);
    BufferedReader br = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
    PrintWriter out = new PrintWriter (socket.getOutputStream (), true);
    BufferedReader userInputBR = new BufferedReader (new InputStreamReader (System.in));
    while (true) {
        System.out.println ("server says:" + br.readLine ());
        String userInput = userInputBR.readLine ();
        out.println (userInput);
        out.flush ();
        System.out.println ("server says:" + br.readLine ());
        if ("exit".equalsIgnoreCase (userInput)) {
            socket.close ();
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        Socket s = new Socket ("192.168.1.177", 80);
        InetAddress add = s.getInetAddress ();
        System.out.println ("Connected to " + add);
        PrintWriter pw = new PrintWriter (s.getOutputStream ());
        pw.println ("GET /?buttonon HTTP/1.1");
        pw.println ("");
        pw.println ("");
        pw.flush ();
        System.out.println ("Request sent");
        BufferedReader br = new BufferedReader (new InputStreamReader (s.getInputStream ()));
        System.out.println (br.readLine ());
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
