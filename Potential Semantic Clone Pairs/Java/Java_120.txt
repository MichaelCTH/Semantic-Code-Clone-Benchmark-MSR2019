$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5074553_5075045_1_50
5074553_5075113_1_33
Title: How do I divide a picture into 4 sections and change each section? 
----------------------------------------

public void specialEffect () {
    int n = getNumberOfPixels ();
    int limit1 = 1 * n / 4;
    int limit2 = 2 * n / 4;
    int limit3 = 3 * n / 4;
    int limit4 = 4 * n / 4;
    for (int i = 0;
    i < limit1; i ++) {
        setBValueOfNthPixel (i, 0);
        setGValueOfNthPixel (i, 0);
    }
    for (int i = limit1;
    i < limit2; i ++) {
        setBValueOfNthPixel (i, 0);
        setRValueOfNthPixel (i, 0);
    }
    for (int i = limit2;
    i < limit3; i ++) {
        setGValueOfNthPixel (i, 0);
        setRValueOfNthPixel (i, 0);
    }
    for (int i = limit3;
    i < limit4; i ++) {
        float grayValue = (getRValueOfNthPixel (i) + getGValueOfNthPixel (i) + getBValueOfNthPixel (i)) / 3;
        setRValueOfNthPixel (i, grayValue);
        setGValueOfNthPixel (i, grayValue);
        setBValueOfNthPixel (i, grayValue);
    }
}
----------------------------------------

private static BufferedImage specialEffect (BufferedImage in) {
    BufferedImage out = new BufferedImage (in.getWidth (), in.getHeight (), BufferedImage.TYPE_INT_ARGB);
    for (int x = 0;
    x < out.getWidth () / 2; x ++) {
        for (int y = 0;
        y < out.getHeight () / 2; y ++) {
            Color c = new Color (in.getRGB (x, y));
            out.setRGB (x, y, new Color (c.getRed (), 0, 0).getRGB ());
        }
    }
    for (int x = out.getWidth () / 2;
    x < out.getWidth (); x ++) {
        for (int y = 0;
        y < out.getHeight () / 2; y ++) {
            Color c = new Color (in.getRGB (x, y));
            out.setRGB (x, y, new Color (0, c.getGreen (), 0).getRGB ());
        }
    }
    for (int x = 0;
    x < out.getWidth () / 2; x ++) {
        for (int y = out.getHeight () / 2;
        y < out.getHeight (); y ++) {
            Color c = new Color (in.getRGB (x, y));
            out.setRGB (x, y, new Color (0, 0, c.getBlue ()).getRGB ());
        }
    }
    for (int x = out.getWidth () / 2;
    x < out.getWidth (); x ++) {
        for (int y = out.getHeight () / 2;
        y < out.getHeight (); y ++) {
            Color c = new Color (in.getRGB (x, y));
            int m = Math.max (c.getRed (), Math.max (c.getGreen (), c.getBlue ()));
            out.setRGB (x, y, new Color (m, m, m).getRGB ());
        }
    }
    return out;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50747229_50752955_1_18
50747229_50753181_1_22
Title: Issue in fetching JSON value which is object within object through GSON 
----------------------------------------

public final static CustomerDataTypes getCustomerByName (String customerName) {
    System.out.println (customerList.size ());
    for (int i = 0;
    i < customerList.size (); i ++) {
        System.out.println ("The value of i is" + i);
        System.out.println (customerList.get (i).firstName);
        System.out.println (customerList.get (i).lastName);
        System.out.println (customerList.get (i).emailAddress);
        System.out.println (customerList.get (i).address.city);
        System.out.println (customerList.get (i).phoneNumber.mob);
    }
    return null;
}
----------------------------------------

public final static CustomerDataTypes getCustomerByName (String customerName) {
    System.out.println (customerList.size ());
    for (int i = 0;
    i < customerList.size (); i ++) {
        System.out.println ("The value of i is" + i);
        System.out.println (customerList.get (i).firstName);
        System.out.println (customerList.get (i).lastName);
        System.out.println (customerList.get (i).emailAddress);
        System.out.println (customerList.get (i).address.city);
        System.out.println (customerList.get (i).phoneNumber.mob);
        CustomerDataTypes custData = customerList.get (i);
        if (customerName.equalsIgnoreCase (custData.firstName)) {
            return custData;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
507522_508195_105_114
507522_508195_127_136
Title: Java - Capturing System.err.println or Capturing a PrintStream 
----------------------------------------

public synchronized void write (int val) throws IOException {
    if (log != null) {
        log.write (val);
        totWritten ++;
        if (val == '\n') {
            if (totWritten > logSize) {
                openFile (true);
            } else {
                log.flush ();
            }
        }
    }
}
----------------------------------------

public synchronized void write (byte [] bytes, int str, int len) throws IOException {
    if (log != null) {
        log.write (bytes, str, len);
        totWritten += len;
        if (bytes.length > (str + len - 1) && bytes [str + len - 1] == '\n') {
            if (totWritten > logSize) {
                openFile (true);
            } else {
                log.flush ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
507522_508195_116_125
507522_508195_127_136
Title: Java - Capturing System.err.println or Capturing a PrintStream 
----------------------------------------

public synchronized void write (byte [] bytes) throws IOException {
    if (log != null) {
        log.write (bytes);
        totWritten += bytes.length;
        if (bytes.length > 0 && bytes [bytes.length - 1] == '\n') {
            if (totWritten > logSize) {
                openFile (true);
            } else {
                log.flush ();
            }
        }
    }
}
----------------------------------------

public synchronized void write (byte [] bytes, int str, int len) throws IOException {
    if (log != null) {
        log.write (bytes, str, len);
        totWritten += len;
        if (bytes.length > (str + len - 1) && bytes [str + len - 1] == '\n') {
            if (totWritten > logSize) {
                openFile (true);
            } else {
                log.flush ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50756765_50756840_1_17
50756765_50756854_1_20
Title: How to find max duplicate number count in given array using for loop 
----------------------------------------

public static int countmaxDuplicate (int arr []) {
    int maxcount = 1;
    for (int i = 0;
    i < arr.length - 1; i ++) {
        int count = 1;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [i] == arr [j]) {
                count ++;
            }
        }
        if (count > maxcount) {
            maxcount = count;
        }
    }
    return maxcount;
}
----------------------------------------

public static int countmaxDuplicate (int arr []) {
    int maxcount = 0;
    boolean [] check = new boolean [arr.length];
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if (check [i]) {
            continue;
        }
        int count = 1;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [i] == arr [j]) {
                check [j] = true;
                count ++;
            }
        }
        maxcount = Integer.max (maxcount, count);
    }
    return maxcount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50760404_50760797_8_16
50760404_50760828_11_31
Title: Getting NoSuchMethodException from getMethod using Java reflection 
----------------------------------------

public void testMethod (Object...inputs) throws NoSuchMethodException, SecurityException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
    InputManipulation test = new InputManipulation ();
    for (Object input : inputs) {
        Class ownerClass = test.getClass ();
        Class inputClass = input.getClass ();
        Method method = ownerClass.getDeclaredMethod ("add", inputClass);
        method.invoke (test, input);
    }
}
----------------------------------------

public void testMethod (Object...inputs) {
    InputManipulation test = new InputManipulation ();
    for (Object input : inputs) {
        Class < ? extends Object > ownerClass = test.getClass ();
        Class < ? extends Object > inputClass = input.getClass ();
        try {
            ownerClass.getDeclaredMethod ("add", inputClass).invoke (test, input);
        } catch (NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5076740_13589209_3_27
5076740_9330396_7_87
Title: What's the fastest way to concatenate two Strings in Java? 
----------------------------------------

public static void main (String [] args) {
    int run = 100 * 100 * 1000;
    long startTime, total = 0;
    final String a = "a";
    final String b = "assdfsaf";
    final String c = "aasfasfsaf";
    final String d = "afafafdaa";
    final String e = "afdassadf";
    startTime = System.currentTimeMillis ();
    concat1 (run, a, b, c, d, e);
    total = System.currentTimeMillis () - startTime;
    System.out.println (total);
    startTime = System.currentTimeMillis ();
    concat2 (run, a, b, c, d, e);
    total = System.currentTimeMillis () - startTime;
    System.out.println (total);
    startTime = System.currentTimeMillis ();
    concat3 (run, a, b, c, d, e);
    total = System.currentTimeMillis () - startTime;
    System.out.println (total);
}
----------------------------------------

public static void main (String [] args) {
    String s1 = "STRING1-1111111111111111111111";
    String s2 = "STRING2-2222222222222222222222";
    String methodName;
    long startNanos, durationNanos;
    int iteration2;
    System.out.println ("ITERATION_LIMIT1: " + ITERATION_LIMIT1);
    System.out.println ("ITERATION_LIMIT2: " + ITERATION_LIMIT2);
    System.out.println ("s1: " + s1);
    System.out.println ("s2: " + s2);
    int iteration1 = 0;
    while (iteration1 ++ < ITERATION_LIMIT1) {
        System.out.println ();
        System.out.println ("iteration: " + iteration1);
        methodName = "null";
        iteration2 = 0;
        startNanos = System.nanoTime ();
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method0 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
        methodName = "s1.concat(s2)";
        iteration2 = 0;
        startNanos = System.nanoTime ();
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method1 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
        iteration2 = 0;
        startNanos = System.nanoTime ();
        methodName = "s1 + s2";
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method2 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
        iteration2 = 0;
        startNanos = System.nanoTime ();
        methodName = "new StringBuilder(s1).append(s2).toString()";
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method3 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
        iteration2 = 0;
        startNanos = System.nanoTime ();
        methodName = "new StringBuffer(s1).append(s2).toString()";
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method4 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
        iteration2 = 0;
        startNanos = System.nanoTime ();
        methodName = "String.format(\"%s%s\", s1, s2)";
        while (iteration2 ++ < ITERATION_LIMIT2) {
            method5 (s1, s2);
        }
        durationNanos = System.nanoTime () - startNanos;
        System.out.println (String.format ("%50s: %6.1f nanos", methodName, ((double) durationNanos) / ITERATION_LIMIT2));
    }
    System.out.println ();
    System.out.println ("Tests complete");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50771856_50772199_4_12
50771856_50773192_22_36
Title: Cucumber-JVM 3 - io.cucumber.datatable.UndefinedDataTableTypeException 
----------------------------------------

public void configureTypeRegistry (TypeRegistry registry) {
    registry.defineDataTableType (new DataTableType (Income.class, new TableEntryTransformer < Income > () {
        @Override
        public Income transform (Map < String, String > entry) {
            return new Income (entry.get ("name"), entry.get ("amount"), entry.get ("frequency"));
        }}

    ));
}
----------------------------------------

public void configureTypeRegistry (TypeRegistry registry) {
    registry.defineDataTableType (new DataTableType (Income.class, new TableEntryTransformer < Income > () {
        @Override
        public Income transform (Map < String, String > entry) {
            return new Income (entry.get ("name"), entry.get ("amount"), entry.get ("frequency"));
        }}

    ));
    registry.defineDataTableType (new DataTableType (Expense.class, new TableEntryTransformer < Expense > () {
        @Override
        public Expense transform (Map < String, String > entry) {
            return new Expense (entry.get ("name"), entry.get ("amount"), entry.get ("frequency"));
        }}

    ));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50783902_50783934_1_14
50783902_50784256_1_21
Title: Index out of bound exception java 
----------------------------------------

public String getScore () {
    final int rScore = receiver.getScore (), sScore = server.getScore ();
    if (sScore >= 3 || rScore >= 3) {
        if (Math.abs (rScore - sScore) >= 2) {
            return getLeadPlayer ().getName () + " won";
        } else if (sScore - rScore >= 1) {
            return "A:" + receiver.getScoreDescription ();
        } else if (rScore - sScore >= 1) {
            return server.getScoreDescription () + ":A";
        }

        return "40:40";
    }
    return server.getScoreDescription () + ":" + receiver.getScoreDescription ();
}
----------------------------------------

public String getScore () {
    String score;
    if (server.getScore () >= 3 && receiver.getScore () >= 3) {
        if (Math.abs (receiver.getScore () - server.getScore ()) >= 2) {
            score = getLeadPlayer ().getName () + " won";
            isFinished = true;
        } else if (server.getScore () - receiver.getScore () >= 1) {
            score = "A" + ":" + receiver.getScoreDescription ();
        } else if (receiver.getScore () - server.getScore () >= 1) {
            score = server.getScoreDescription () + ":" + "A";
        } else {
            score = "40:40";
        }

    } else if (server.getScore () > 3 || receiver.getScore () > 3) {
        score = getLeadPlayer ().getName () + " won";
        isFinished = true;
    } else {
        score = server.getScoreDescription () + ":" + receiver.getScoreDescription ();
    }

    return score;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50785925_50786044_2_15
50785925_50786137_4_31
Title: Replace one by one values of an array list and store the values of another array using for loop 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("ENTER THE NUMBER YOU WANT ENCRYPTED");
    Scanner input1 = new Scanner (System.in);
    String name = input1.nextLine ();
    encryption (name);
    name = name.toUpperCase ();
    char [] namesArray = name.toCharArray ();
    for (int i = 0;
    i < namesArray.length; i ++) {
        namesArray [i] = (char) (namesArray [i] + 1);
    }
    System.out.println (new String (namesArray));
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("ENTER THE NUMBER YOU WANT ENCRYPTED");
    Scanner input1 = new Scanner (System.in);
    String name = input1.nextLine ();
    name = encryption (name);
    ArrayList < Character > nilkil = new ArrayList < Character > ();
    for (int i = 0;
    i <= name.length () - 1; i ++) {
        nilkil.add (name.charAt (i));
    }
    String answer = "";
    char [] deep = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    for (int j = 0;
    j <= nilkil.size () - 1; j ++) {
        if (nilkil.get (j) == 'Z') answer = answer + 'A';
        else {
            for (int p = 0;
            p < deep.length - 1; p ++) {
                if (nilkil.get (j) == deep [p]) {
                    answer = answer + deep [p + 1];
                    break;
                }
            }
        }
    }
    System.out.println (answer);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50787573_50787715_1_9
50787573_50787731_1_13
Title: How to switch letter in a String 
----------------------------------------

public static String encode (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 0;
    i < sb.length (); i ++) {
        char ch = sb.charAt (i);
        int d = ch - 'a';
        sb.setCharAt (i, (char) ('z' - d));
    }
    return sb.toString ();
}
----------------------------------------

public static String encode (String input) {
    char [] listChar = input.toCharArray ();
    for (int i = 0;
    i < listChar.length; i ++) {
        switch (listChar [i]) {
            case 'a' :
                listChar [i] = 'z';
                break;
        }
    }
    input = String.valueOf (listChar);
    return input;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50788447_50788897_1_36
50788447_50789389_1_19
Title: "Stringwhich repeats but not starts from the beginning in Java (diamond pattern" 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String userInput = keyboard.next ();
    String concatenated = userInput;
    int i, cumSum = 0;
    ArrayList < Integer > helperIndex = new ArrayList < > ();
    for (i = 1; i < userInput.length (); i += 2) {
        helperIndex.add (i);
        cumSum += i;
    }
    for (i = userInput.length (); i > 0; i -= 2) {
        helperIndex.add (i);
        cumSum += i;
    }
    int numOfWordRepitition = cumSum / userInput.length ();
    for (i = 0; i < numOfWordRepitition; i ++) {
        concatenated += userInput;
    }
    String substr;
    int prev = helperIndex.get (0);
    int next = helperIndex.get (0);
    substr = concatenated.substring (0, helperIndex.get (0));
    System.out.println (Character.toUpperCase (substr.charAt (0)) + substr.substring (1));
    for (i = 1; i < userInput.length (); i ++) {
        next += helperIndex.get (i);
        substr = concatenated.substring (prev, next);
        substr = Character.toUpperCase (substr.charAt (0)) + substr.substring (1);
        System.out.println (substr);
        prev = next;
    }
}
----------------------------------------

public static void main (String [] args) {
    String userInput = "Peter";
    int length = userInput.length ();
    int m, j, i, n = 0;
    for (m = length % 2 > 0 ? 1 : 2; m < length * 2; m += 2) {
        i = m < length ? m : length * 2 - m;
        for (j = 0; j < length - 1 - i / 2; ++ j) {
            System.out.print (" ");
        }
        for (j = 0; j < i; ++ j) {
            char c = userInput.charAt (n ++ % length);
            c = j == 0 ? Character.toUpperCase (c) : Character.toLowerCase (c);
            System.out.print (c);
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50794904_50795240_2_25
50794904_50795417_1_24
Title: pyramid program using numbers in java and print in reverse order as well 
----------------------------------------

public static void main (String args []) {
    int end = 4;
    int i, j, num = 1;
    for (i = 0; i < end; i ++) {
        for (j = 0; j <= i; j ++) {
            System.out.print (num + " ");
            num ++;
        }
        System.out.println ();
    }
    for (i = end; i >= 1; -- i) {
        num -= i;
        for (j = 1; j <= i; ++ j) {
            System.out.print (num + " ");
            num ++;
        }
        num -= i;
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int end = 4;
    int i, j, num = 1;
    for (i = 0; i < end; i ++) {
        for (j = num; j <= num + i; j ++) {
            System.out.print (j + " ");
        }
        num = j;
        System.out.println ();
    }
    for (i = end; i >= 1; -- i) {
        num = num - i;
        for (j = num; j < num + i; j ++) {
            System.out.print (j + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50800047_50800097_12_23
50800047_50800159_1_11
Title: "Reverse a String  Code was not working properly" 
----------------------------------------

public static String inPlaceReverse (final String input) {
    final StringBuilder builder = new StringBuilder (input);
    int length = builder.length ();
    for (int i = 0;
    i < length / 2; i ++) {
        final char current = builder.charAt (i);
        final int otherEnd = length - i - 1;
        builder.setCharAt (i, builder.charAt (otherEnd));
        builder.setCharAt (otherEnd, current);
    }
    return builder.toString ();
}
----------------------------------------

public static String inPlaceReverse (final String input) {
    final StringBuilder builder = new StringBuilder (input);
    int length = builder.length ();
    for (int i = 0;
    i < length / 2; i ++) {
        final char current = builder.charAt (i);
        final char otherEnd = builder.charAt (length - i - 1);
        builder.setCharAt (i, otherEnd);
        builder.setCharAt (length - i - 1, current);
    }
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50811248_50811347_1_25
50811248_50812297_1_27
Title: How to fix null error in getWidth() on bitmap 
----------------------------------------

private void uploadImageToServer (String imagePath) {
    if (imagePath == null || imagePath.equals ("")) {
        return;
    } else {
        showpDialog ();
        Map < String, RequestBody > map = new HashMap < > ();
        File file = new File (imagePath);
        if (file != null && file.exists () && file.canRead ()) {
            try {
                compressedImage = new Compressor (getActivity ()).setMaxWidth (2000).setMaxHeight (1400).setQuality (90).setCompressFormat (Bitmap.CompressFormat.JPEG).setDestinationDirectoryPath (Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_PICTURES).getAbsolutePath ()).compressToFile (file);
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

private void uploadImageToServer (String imagePath) {
    if (imagePath == null || imagePath.equals ("")) {
        return;
    } else {
        showpDialog ();
        Map < String, RequestBody > map = new HashMap < > ();
        File file = new File (imagePath);
        if (file != null && file.exists () && file.canRead ()) {
            try {
                String compressedFileName = "_" + file.getName ();
                compressedImage = new Compressor (getActivity ()).setMaxWidth (2000).setMaxHeight (1400).setQuality (90).setCompressFormat (Bitmap.CompressFormat.JPEG).setDestinationDirectoryPath (Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_PICTURES).getAbsolutePath ()).compressToFile (file, compressedFileName);
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50822172_50823329_4_20
50822172_50823549_41_59
Title: Create a file which cannot be deleted by file.delete() 
----------------------------------------

public void testFileNotDeletable () throws IOException {
    File file = mock (File.class);
    when (file.exists ()).thenReturn (true);
    when (file.delete ()).thenAnswer (new Answer < Boolean > () {
        @Override
        public Boolean answer (InvocationOnMock iom) throws Throwable {
            throw new IOException ();
        }}

    );
    FileDel f = new FileDel ();
    try {
        f.methodToTest (file);
    } finally {
    }
}
----------------------------------------

public void testFileNotDeletable () throws Exception {
    File file = null;
    FileWriter fileWriter = null;
    try {
        file = new File ("test.txt");
        file.createNewFile ();
        file.deleteOnExit ();
        exception.expect (IOException.class);
        exception.expectMessage (String.format ("Cannot delete file '%s'.", file.getCanonicalPath ()));
        fileWriter = new FileWriter (file, true);
        new FileSolution ().fileHandler (file);
    } finally {
        if (fileWriter != null) {
            fileWriter.flush ();
            fileWriter.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50824607_50824903_1_19
50824607_50825588_1_12
Title: Key value pair in Java from JSON file 
----------------------------------------

public static void printJsonObject (JSONObject jsonObj) {
    for (Object key : jsonObj.keySet ()) {
        String keyStr = (String) key;
        Object keyvalue = jsonObj.get (keyStr);
        if (keyvalue instanceof JSONObject) {
            printJsonObject ((JSONObject) keyvalue);
        } else if (keyvalue instanceof JSONArray) {
            JSONArray array = (JSONArray) keyvalue;
            for (int i = 0;
            i < array.length (); i ++) {
                printJsonObject ((JSONObject) array.get (i));
            }
        } else {
            System.out.println (keyStr + ", " + keyvalue);
        }

    }
}
----------------------------------------

public static void printJsonObject (JSONObject jsonObj) {
    for (Object key : jsonObj.keySet ()) {
        Object value = jsonObj.get (key);
        if (value instanceof JSONObject) printJsonObject ((JSONObject) value);
        else if (value instanceof JSONArray) ((JSONArray) value).forEach (obj -> printJsonObject ((JSONObject) obj));
        else System.out.println (key + ", " + value);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50827996_50829286_20_35
50827996_50829375_171_186
Title: Parcelable Data Not Passing Between Activities 
----------------------------------------

protected Movie (Parcel in) {
    this.vote_count = in.readInt ();
    this.id = in.readInt ();
    this.video = in.readByte () != 0;
    this.title = in.readString ();
    this.popularity = in.readFloat ();
    this.poster_path = in.readString ();
    this.original_language = in.readString ();
    this.original_title = in.readString ();
    this.genre_ids = in.createStringArrayList ();
    this.backdrop_path = in.readString ();
    this.adult = in.readByte () != 0;
    this.overview = in.readString ();
    long tmpRelease_date = in.readLong ();
    this.release_date = tmpRelease_date == - 1 ? null : new Date (tmpRelease_date);
}
----------------------------------------

protected Movie (Parcel in) {
    this.vote_count = in.readInt ();
    this.id = in.readInt ();
    this.video = in.readByte () != 0;
    this.title = in.readString ();
    this.popularity = in.readFloat ();
    this.poster_path = in.readString ();
    this.original_language = in.readString ();
    this.original_title = in.readString ();
    this.genre_ids = in.createStringArrayList ();
    this.backdrop_path = in.readString ();
    this.adult = in.readByte () != 0;
    this.overview = in.readString ();
    long tmpRelease_date = in.readLong ();
    this.release_date = tmpRelease_date == - 1 ? null : new Date (tmpRelease_date);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50827996_50829286_20_35
50827996_50829375_27_41
Title: Parcelable Data Not Passing Between Activities 
----------------------------------------

protected Movie (Parcel in) {
    this.vote_count = in.readInt ();
    this.id = in.readInt ();
    this.video = in.readByte () != 0;
    this.title = in.readString ();
    this.popularity = in.readFloat ();
    this.poster_path = in.readString ();
    this.original_language = in.readString ();
    this.original_title = in.readString ();
    this.genre_ids = in.createStringArrayList ();
    this.backdrop_path = in.readString ();
    this.adult = in.readByte () != 0;
    this.overview = in.readString ();
    long tmpRelease_date = in.readLong ();
    this.release_date = tmpRelease_date == - 1 ? null : new Date (tmpRelease_date);
}
----------------------------------------

public Movie (int vote_count, int id, boolean video, String title, float popularity, String poster_path, String original_language, String original_title, ArrayList < String > genre_ids, String backdrop_path, boolean adult, String overview, Date release_date) {
    this.vote_count = vote_count;
    this.id = id;
    this.video = video;
    this.title = title;
    this.popularity = popularity;
    this.poster_path = poster_path;
    this.original_language = original_language;
    this.original_title = original_title;
    this.genre_ids = genre_ids;
    this.backdrop_path = backdrop_path;
    this.adult = adult;
    this.overview = overview;
    this.release_date = release_date;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50827996_50829286_51_65
50827996_50829375_154_168
Title: Parcelable Data Not Passing Between Activities 
----------------------------------------

public void writeToParcel (Parcel dest, int flags) {
    dest.writeInt (this.vote_count);
    dest.writeInt (this.id);
    dest.writeByte (this.video ? (byte) 1 : (byte) 0);
    dest.writeString (this.title);
    dest.writeFloat (this.popularity);
    dest.writeString (this.poster_path);
    dest.writeString (this.original_language);
    dest.writeString (this.original_title);
    dest.writeStringList (this.genre_ids);
    dest.writeString (this.backdrop_path);
    dest.writeByte (this.adult ? (byte) 1 : (byte) 0);
    dest.writeString (this.overview);
    dest.writeLong (this.release_date != null ? this.release_date.getTime () : - 1);
}
----------------------------------------

public void writeToParcel (Parcel dest, int flags) {
    dest.writeInt (this.vote_count);
    dest.writeInt (this.id);
    dest.writeByte (this.video ? (byte) 1 : (byte) 0);
    dest.writeString (this.title);
    dest.writeFloat (this.popularity);
    dest.writeString (this.poster_path);
    dest.writeString (this.original_language);
    dest.writeString (this.original_title);
    dest.writeStringList (this.genre_ids);
    dest.writeString (this.backdrop_path);
    dest.writeByte (this.adult ? (byte) 1 : (byte) 0);
    dest.writeString (this.overview);
    dest.writeLong (this.release_date != null ? this.release_date.getTime () : - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50827996_50829375_171_186
50827996_50829375_27_41
Title: Parcelable Data Not Passing Between Activities 
----------------------------------------

protected Movie (Parcel in) {
    this.vote_count = in.readInt ();
    this.id = in.readInt ();
    this.video = in.readByte () != 0;
    this.title = in.readString ();
    this.popularity = in.readFloat ();
    this.poster_path = in.readString ();
    this.original_language = in.readString ();
    this.original_title = in.readString ();
    this.genre_ids = in.createStringArrayList ();
    this.backdrop_path = in.readString ();
    this.adult = in.readByte () != 0;
    this.overview = in.readString ();
    long tmpRelease_date = in.readLong ();
    this.release_date = tmpRelease_date == - 1 ? null : new Date (tmpRelease_date);
}
----------------------------------------

public Movie (int vote_count, int id, boolean video, String title, float popularity, String poster_path, String original_language, String original_title, ArrayList < String > genre_ids, String backdrop_path, boolean adult, String overview, Date release_date) {
    this.vote_count = vote_count;
    this.id = id;
    this.video = video;
    this.title = title;
    this.popularity = popularity;
    this.poster_path = poster_path;
    this.original_language = original_language;
    this.original_title = original_title;
    this.genre_ids = genre_ids;
    this.backdrop_path = backdrop_path;
    this.adult = adult;
    this.overview = overview;
    this.release_date = release_date;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50830504_50830693_1_24
50830504_50830699_1_23
Title: What is wrong with my code of reversing each word of a given string in java? 
----------------------------------------

public static String reverseEachWord (String s1) {
    s1 = s1 + " ";
    String s2 = "";
    int i = 0;
    char ch;
    String temp = "";
    while (i < s1.length ()) {
        ch = s1.charAt (i);
        if (ch != ' ') {
            temp = temp + ch;
            i ++;
        } else {
            temp = reverse (temp);
            s2 = s2 + temp;
            temp = "";
            i ++;
        }
    }
    return s2;
}
----------------------------------------

public static String reverseEachWord (String s1) {
    s1 = s1 + " ";
    String s2 = "";
    int i = 0;
    char ch;
    String temp = "";
    while (i < s1.length ()) {
        while (s1.charAt (i) != ' ') {
            temp = temp + s1.charAt (i);
            i ++;
        }
        temp = reverse (temp);
        s2 = s2 + temp;
        temp = "";
        i ++;
    }
    return s2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50837049_50837116_3_14
50837049_50837583_3_32
Title: Why my code is not counting first word of my String 
----------------------------------------

public static void main (String [] args) {
    String s = "please come in";
    String [] wordslength = new String [10];
    String [] allStrings = s.split (" ");
    for (int k = 0;
    k < allStrings.length; k ++) {
        wordslength [allStrings [k].length ()] = allStrings [k];
    }
    for (int k = 0;
    k < 10; k ++) {
        System.out.println ("at index " + (k) + "result is " + wordslength [k]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "please come in";
    String collection = "";
    ArrayList < String > wordslength = new ArrayList < String > ();
    for (int k = 0;
    k < s.length (); k ++) {
        char c = s.charAt (k);
        if (c == ' ') {
            wordslength.add (collection);
            collection = "";
        }
        collection = collection + c;
    }
    if (collection != " ") {
        wordslength.add (collection);
        collection = "";
    }
    for (int k = 0;
    k < wordslength.size (); k ++) {
        System.out.println ("at index " + (k) + " result is " + wordslength.get (k) + " with length " + wordslength.get (k).length ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50842839_50864295_127_142
50842839_50864295_240_255
Title: Paint component for panel doesn't draw double point values 
----------------------------------------

private AffineTransform computeTransform (Rectangle2D bounds) {
    double scaleX = getWidth () / bounds.getWidth ();
    double scaleY = getHeight () / bounds.getHeight ();
    double scale = Math.min (scaleX, scaleY);
    AffineTransform affineTransform = new AffineTransform ();
    affineTransform.scale (scale, scale);
    affineTransform.translate (- bounds.getX (), - bounds.getY ());
    return affineTransform;
}
----------------------------------------

private AffineTransform computeTransform (Rectangle2D bounds) {
    double scaleX = getWidth () / bounds.getWidth ();
    double scaleY = getHeight () / bounds.getHeight ();
    double scale = Math.min (scaleX, scaleY);
    AffineTransform affineTransform = new AffineTransform ();
    affineTransform.scale (scale, scale);
    affineTransform.translate (- bounds.getX (), - bounds.getY ());
    return affineTransform;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50842839_50864295_192_217
50842839_50864295_69_97
Title: Paint component for panel doesn't draw double point values 
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    g2.setStroke (new BasicStroke (3));
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Shape sShape = convertToShape (subjPoints);
    Shape cShape = convertToShape (clipPoints);
    Rectangle2D sBounds = sShape.getBounds2D ();
    Rectangle2D cBounds = cShape.getBounds2D ();
    Rectangle2D bounds = new Rectangle2D.Double ();
    Rectangle2D.union (sBounds, cBounds, bounds);
    AffineTransform affineTransform = computeTransform (bounds);
    g2.setColor (Color.BLUE);
    g2.draw (affineTransform.createTransformedShape (sShape));
    g2.setColor (Color.RED);
    g2.draw (affineTransform.createTransformedShape (cShape));
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    g2.setStroke (new BasicStroke (3));
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    List < Point2D > sPoints = convertToPoints (subjPoints);
    List < Point2D > cPoints = convertToPoints (clipPoints);
    Rectangle2D sBounds = computeBoundingBox (sPoints);
    Rectangle2D cBounds = computeBoundingBox (cPoints);
    Rectangle2D bounds = new Rectangle2D.Double ();
    Rectangle2D.union (sBounds, cBounds, bounds);
    AffineTransform affineTransform = computeTransform (bounds);
    transformPoints (sPoints, affineTransform);
    transformPoints (cPoints, affineTransform);
    drawPolygon (g2, sPoints, Color.BLUE);
    drawPolygon (g2, cPoints, Color.RED);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50844139_50844420_1_21
50844139_50844434_1_10
Title: Condense a list of objects if a property on the object is the same 
----------------------------------------

List < MyObject > condense (List < MyObject > fullList) {
    Map < String, List < String > > lists = new LinkedHashMap < > ();
    for (MyObject o : fullList) {
        List < String > list = lists.get (o.getId ());
        if (list == null) {
            list = new ArrayList < > (o.getList ());
            lists.put (o.getId (), list);
        } else {
            list.addAll (o.getList ());
        }
    }
    List < MyObject > objects = new ArrayList < > (lists.size ());
    for (Map.Entry < String, List < String > > e : lists.entrySet ()) {
        objects.add (new MyObject (e.getKey (), e.getValue ()));
    }
    return objects;
}
----------------------------------------

List < MyObject > condense (List < MyObject > fullList) {
    Map < String, MyObject > map = new LinkedHashMap < > ();
    fullList.forEach (myObject -> {
        map.merge (myObject.getId (), myObject, (myObject1, myObject2) -> {
            myObject1.getList ().addAll (myObject2.getList ());
            return myObject1;
        });
    });
    return new ArrayList (map.values ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50847111_50847297_21_45
50847111_50850968_1_24
Title: Check which textbox is selected in javafx 
----------------------------------------

public void start (Stage primaryStage) {
    TextField txt1 = new TextField ();
    TextField txt2 = new TextField ();
    TextField txt3 = new TextField ();
    TextField txt4 = new TextField ();
    installListener (txt1, txt2, txt3, txt4);
    VBox pane = new VBox (5);
    pane.setPadding (new Insets (5));
    pane.getChildren ().addAll (new HBox (5, new Label ("Txt1: "), txt1), new HBox (5, new Label ("Txt2: "), txt2), new HBox (5, new Label ("Txt3: "), txt3), new HBox (5, new Label ("Txt4: "), txt4));
    primaryStage.setScene (new Scene (pane));
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) {
    GridPane grid = new GridPane ();
    final Scene scene = new Scene (grid);
    for (int i = 0;
    i < 4; i ++) {
        grid.add (new TextField (), 0, i);
        final String buttonValue = Character.toString ((char) ('a' + i));
        Button button = new Button (buttonValue);
        button.setFocusTraversable (false);
        button.setOnAction (evt -> {
            Node fo = scene.getFocusOwner ();
            if (fo instanceof TextInputControl) {
                ((TextInputControl) fo).replaceSelection (buttonValue);
            }
        });
        grid.add (button, 1, i);
    }
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50856299_50857390_11_20
50856299_50873231_63_79
Title: Get JSON value to TextView from HTTP post 
----------------------------------------

protected String doInBackground (Void...voids) {
    try {
        postPHP ();
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (JSONException e) {
        e.printStackTrace ();
    }
    return getData ();
}
----------------------------------------

protected String doInBackground (Void...voids) {
    try {
        postPHP ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    try {
        return getData ();
    } catch (JSONException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return "";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50856299_50857390_29_43
50856299_50873231_125_139
Title: Get JSON value to TextView from HTTP post 
----------------------------------------

private void postPHP () throws IOException, JSONException {
    CookieManager cookieManager = CookieManager.getInstance ();
    String cookieString = cookieManager.getCookie (cookie);
    URL url = new URL ("http://piggybank.wordmediavormgever.nl/getSaldo.php");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setDoOutput (true);
    connection.setRequestMethod ("POST");
    connection.setRequestProperty ("thatsallfolks", cookieString);
    connection.connect ();
    OutputStream out = connection.getOutputStream ();
    out.write (data);
    out.flush ();
    out.close ();
}
----------------------------------------

public void postPHP () throws IOException {
    CookieManager cookieManager = CookieManager.getInstance ();
    String cookieString = cookieManager.getCookie (cookie);
    URL url = new URL ("http://piggybank.wordmediavormgever.nl/getSaldo.php");
    HttpURLConnection connection = (HttpURLConnection) url.openConnection ();
    connection.setDoOutput (true);
    connection.setRequestMethod ("POST");
    connection.setRequestProperty ("thatsallfolks", cookieString);
    connection.connect ();
    OutputStream out = connection.getOutputStream ();
    out.write (data);
    out.flush ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50856299_50857390_45_57
50856299_50873231_141_153
Title: Get JSON value to TextView from HTTP post 
----------------------------------------

private String getData () {
    JSONObject json = readJsonFromUrl ("http://piggybank.wordmediavormgever.nl/getSaldo.php");
    try {
        String response = json.getString ("saldo");
        Log.e ("saldo", response);
        response = json.getString ("saldo");
        return response;
    } catch (Exception e) {
        return "";
    }
}
----------------------------------------

private String getData () throws JSONException, IOException {
    JSONObject json = readJsonFromUrl ("http://piggybank.wordmediavormgever.nl/getSaldo.php");
    try {
        String response = json.getString ("saldo");
        Log.e ("saldo", response);
        response = json.getString ("saldo");
        return response;
    } catch (Exception e) {
        return "";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50859161_50859260_1_16
50859161_50859292_1_15
Title: Terminate function before calling again? 
----------------------------------------

public void x (String str) {
    for (;;) {
        try {
        } catch (SomeException e) {
            System.out.println ("Initializing again...");
            continue;
        }
        try {
            break;
        } catch (SomeOtherException e) {
            System.out.println ("Trying again...");
        }
    }
}
----------------------------------------

public void x (String str, int attempts) {
    if (attempts > 100) return;

    try {
    } catch (SomeException e) {
        System.out.println ("Initializing again...");
        try {
        } catch (SomeOtherException e) {
            System.out.println ("Trying again...");
            x (str, attempts + 1);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50879280_50879311_2_11
50879280_50879350_2_12
Title: Java - If Else Logic 
----------------------------------------

public static void main (String [] args) {
    int aValue = 4;
    if (aValue > 0) {
        if (aValue == 0) System.out.print ("first string   ");

    } else System.out.println ("second string   ");

    System.out.println ("third string   ");
}
----------------------------------------

public static void main (String [] args) {
    int aValue = 4;
    if (aValue > 0) {
        if (aValue == 0) {
            System.out.print ("first string");
        }
    } else {
        System.out.println ("second string");
    }
    System.out.println ("third string");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50885014_50885364_13_40
50885014_50885514_3_31
Title: Menu Listener Action Performed 
----------------------------------------

public static void main (String args []) {
    JFrame f = new JFrame ();
    JMenu supply = new JMenu ("Supply");
    supply.add ("New Product");
    JMenuItem addNew = new JMenuItem ("Add");
    addNew.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            JOptionPane.showMessageDialog (f, "under construction");
        }}

    );
    JMenuBar mb = new JMenuBar ();
    mb.add (supply);
    mb.add (addNew);
    f.setJMenuBar (mb);
    f.setSize (400, 400);
    f.setLocationRelativeTo (null);
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ();
    JMenuBar mb = new JMenuBar ();
    JMenu supply;
    JMenuItem addnew;
    supply = new JMenu ("supply");
    addnew = new JMenuItem ("add");
    addnew.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            JOptionPane.showMessageDialog (f, "under construction");
        }}

    );
    f.add (mb);
    mb.add (supply);
    supply.add (addnew);
    supply.add ("New Product");
    f.setSize (400, 400);
    f.setJMenuBar (mb);
    f.setLayout (null);
    f.setLocationRelativeTo (null);
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50897186_50897218_3_11
50897186_50897222_25_33
Title: Nested Action Listener not working 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        if (e.getSource () == (withdrawalButton)) {
            System.out.println (withdrawalButton.getName ());
        }
    } catch (Exception ex) {
        System.out.println (ex);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        if (e.getSource () == (withdrawalButton)) {
            System.out.println (withdrawalButton.getName ());
        }
    } catch (Exception ex) {
        System.out.println (ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50897899_50898026_7_20
50897899_50898618_5_32
Title: Get(Store) a String value in multiple String variables 
----------------------------------------

public static void main (String [] args) {
    String path = "/sdcard/DCIM/picture001.jpg /sdcard/DCIM/picture0421.jpg /sdcard/DCIM/picture4341.jpg /sdcard/DCIM/picturs01.jpg";
    Scanner scan = new Scanner (path);
    ArrayList < String > myarray = new ArrayList < > ();
    while (scan.hasNext ()) {
        myarray.add (scan.next ());
    }
    for (int i = 0;
    i < myarray.size (); i ++) {
        System.out.println (myarray.get (i));
    }
}
----------------------------------------

public static void main (String args []) {
    String path [] = new String [1000];
    int count = 0;
    File f = new File ("/Users/Study/Desktop");
    if (f.exists ()) {
        String list [] = f.list ();
        for (int i = 0;
        i < list.length; i ++) {
            if (list [i].contains ("Sc")) {
                path [count] = new File (list [i]).getAbsolutePath ();
                count ++;
                System.out.println (list [i]);
            }
        }
    } else System.out.println ("Not Found");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50907440_50909017_1_20
50907440_50909017_22_30
Title: Printing Minimum Sum Path of a Tree 
----------------------------------------

private int minSumPath (SolutionNode current, ArrayList < Integer > pathTaken) {
    if (current == null) return 0;

    int sum = current.getValue ();
    int left_sum = minSumPath (current.childLeft);
    int right_sum = minSumPath (current.childRight);
    if (left_sum <= right_sum) {
        pathTaken.add (current.childLeft.getValue ());
        sum += minSumPath (current.childLeft);
    } else {
        pathTaken.add (current.childRight.getValue ());
        sum += minSumPath (current.childRight);
    }
    return sum;
}
----------------------------------------

public minSumPath () {
    if (root == null) return - 1;

    ArrayList < Integer > pathTaken = new ArrayList < > ();
    pathTaken.add (root.getValue ());
    int min = minSumPath (root, pathTaken);
    System.out.println ("Patk taken: " + pathTaken.toString ());
    return min;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50922274_50922389_1_10
50922274_50922400_1_12
Title: StringTokenizer showing unwanted results 
----------------------------------------

public static void main (final String [] args) {
    final String delim = "DELIM";
    String token1 = "AAAAA";
    String token2 = "BBBBB|DUMMY";
    final String input = token1 + delim + token2;
    final StringTokenizer tokenizer = new StringTokenizer (input, delim);
    while (tokenizer.hasMoreElements ()) {
        System.out.println ("token =" + tokenizer.nextToken ());
    }
}
----------------------------------------

public static void main (final String [] args) {
    final String delim = "DELIM";
    String token1 = "AAAAA";
    String token2 = "BBBBB|DUMMY";
    final String input = token1 + delim + token2;
    final String [] tokens = input.split ("DELIM");
    for (String token : tokens) {
        System.out.println (token);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50931217_50933268_8_18
50931217_50963502_7_20
Title: Spring batch return custom process exit code 
----------------------------------------

public void afterJob (JobExecution jobExecution) {
    ExitStatus exitStatus = jobExecution.getExitStatus ();
    if (exitStatus == ExitStatus.COMPLETED) {
        System.exit (0);
    }
    if (exitStatus == ExitStatus.FAILED) {
        System.exit (4);
    }
}
----------------------------------------

public void afterJob (JobExecution jobExecution) {
    SingletonExitCode exitCode = SingletonExitCode.getInstance ();
    if (jobExecution.getStatus () == BatchStatus.COMPLETED) {
        logger.info ("Exit with code " + ExitCode.NORMAL_END_OF_EXECUTION);
        exitCode.setExitCode (ExitCode.NORMAL_END_OF_EXECUTION);
    } else {
        logger.info ("Exit with code " + ExitCode.ABNORMAL_END_OF_EXECUTION_WARNING);
        exitCode.setExitCode (ExitCode.ABNORMAL_END_OF_EXECUTION_WARNING);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50939208_50939353_2_13
50939208_50939571_1_12
Title: How to change value of a specific element in an ArrayList? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Hi > hiList = new ArrayList < > ();
    Hi hi1 = new Hi ("one");
    Hi hi2 = new Hi ("two");
    Hi hi3 = new Hi ("three");
    hiList.add (hi1);
    hiList.add (hi2);
    hiList.add (hi3);
    Hi hix = hiList.get (0);
    hix.setName ("haha");
    System.out.println (hiList.get (0).getName ());
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > numbers = new ArrayList < > ();
    numbers.add (5);
    numbers.add (10);
    numbers.add (20);
    System.out.println (numbers.get (2));
    changeList (numbers, 2);
    System.out.println (numbers.get (2));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50941160_50941418_5_31
50941160_50959755_9_25
Title: How to use scanner to add data dynamically in a collection 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter your data ");
    sc = new Scanner (System.in);
    List < Student > studs = new ArrayList < Student > ();
    Student stu1 = new Student (sc.nextInt (), sc.nextLine ());
    System.out.println ("Please enter the Age and Name of the first user : ");
    Student stu2 = new Student (sc.nextInt (), sc.nextLine ());
    System.out.println ("Please enter the Age and Name of the second user : ");
    Student stu3 = new Student (sc.nextInt (), sc.nextLine ());
    System.out.println ("Please enter the Age and Name of the third user : ");
    Student stu4 = new Student (sc.nextInt (), sc.nextLine ());
    studs.add (stu1);
    studs.add (stu2);
    studs.add (stu3);
    studs.add (stu4);
    Collections.sort (studs, new StudAge ());
    for (Student stud : studs) {
        System.out.println (stud);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    List < Student > studs = new ArrayList < Student > ();
    System.out.print ("Insert a number: ");
    int size = sc.nextInt ();
    for (int i = 0;
    i < size; i ++) {
        System.out.println ("Enter age and name :");
        Student stu1 = new Student (sc.nextInt (), sc.nextLine ());
        studs.add (stu1);
    }
    Collections.sort (studs, new StudAge ());
    for (Student stud : studs) {
        System.out.println (stud);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50967383_50967830_22_34
50967383_50980488_2_34
Title: What is the Java equivalent of this Haskell function? 
----------------------------------------

public static void main (String [] args) {
    Expr iv1 = new Val (6);
    Expr iv2 = new Val (3);
    Expr iv3 = new Val (2);
    Expr iv4 = new Val (0);
    Expr div1 = new Div (iv1, iv2);
    Expr div2 = new Div (div1, iv3);
    Expr div3 = new Div (div2, iv4);
    System.out.println (div2.eval ());
    System.out.println (div3.eval ());
}
----------------------------------------

public static void main (String [] arguments) {
    Expr two = new Val (2);
    Expr twenty = new Div (new Val (100), new Val (5));
    Expr ten = new Div (twenty, new Val (2));
    Expr five = new Div (new Val (10), two);
    Expr expr = new Div (ten, five);
    ExprVisitor < Integer > eval = new ExprVisitor < Integer > () {
        public Integer visit (Val val) {
            return val.value;
        } public Integer visit (Div div) {
            return div.left.match (this) / div.right.match (this);
        }}

    ;
    System.out.println (expr.match (eval));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50970771_50971280_20_84
50970771_50971556_37_107
Title: How to put constrains on maximum selectable CheckBoxes via RadioButtons in JavaFX? 
----------------------------------------

public void start (Stage stage) throws Exception {
    VBox root = new VBox (5);
    root.setPadding (new Insets (10));
    root.setAlignment (Pos.CENTER);
    HBox hbRadios = new HBox (10);
    hbRadios.setAlignment (Pos.CENTER);
    ToggleGroup tglRadioSelections = new ToggleGroup ();
    RadioButton rdoVertical = new RadioButton ("Vertical");
    RadioButton rdoHybrid = new RadioButton ("Hybrid");
    RadioButton rdoHorizontal = new RadioButton ("Horizontal");
    tglRadioSelections.getToggles ().addAll (rdoVertical, rdoHybrid, rdoHorizontal);
    hbRadios.getChildren ().addAll (rdoVertical, rdoHybrid, rdoHorizontal);
    VBox vbSelections = new VBox (10);
    ComboBox cbo1 = new ComboBox ();
    ComboBox cbo2 = new ComboBox ();
    ComboBox cbo3 = new ComboBox ();
    ComboBox cbo4 = new ComboBox ();
    CheckBox chk1 = new CheckBox ();
    CheckBox chk2 = new CheckBox ();
    CheckBox chk3 = new CheckBox ();
    CheckBox chk4 = new CheckBox ();
    HBox hbSelection1 = new HBox (10);
    hbSelection1.getChildren ().addAll (cbo1, chk1);
    HBox hbSelection2 = new HBox (10);
    hbSelection2.getChildren ().addAll (cbo2, chk2);
    HBox hbSelection3 = new HBox (10);
    hbSelection3.getChildren ().addAll (cbo3, chk3);
    HBox hbSelection4 = new HBox (10);
    hbSelection4.getChildren ().addAll (cbo4, chk4);
    rdoVertical.selectedProperty ().addListener ((observableValue, oldValue, newValue) -> {
        hbSelection1.setDisable (! newValue);
        hbSelection2.setDisable (! newValue);
        hbSelection3.setDisable (! newValue);
        hbSelection4.setDisable (! newValue);
    });
    rdoHybrid.selectedProperty ().addListener ((observableValue, oldValue, newValue) -> {
        hbSelection1.setDisable (! newValue);
        hbSelection2.setDisable (! newValue);
        hbSelection3.setDisable (! newValue);
        hbSelection4.setDisable (newValue);
    });
    rdoHorizontal.selectedProperty ().addListener ((observableValue, oldValue, newValue) -> {
        hbSelection1.setDisable (! newValue);
        hbSelection2.setDisable (newValue);
        hbSelection3.setDisable (newValue);
        hbSelection4.setDisable (newValue);
    });
    vbSelections.getChildren ().addAll (hbSelection1, hbSelection2, hbSelection3, hbSelection4);
    root.getChildren ().addAll (hbRadios, vbSelections);
    stage.setScene (new Scene (root));
    stage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) {
    Mode [] modes = new Mode [] {new Mode ("Vertical", 4), new Mode ("Hybrid", 2), new Mode ("Horizontal", 1)};
    ToggleGroup group = new ToggleGroup ();
    IntegerProperty elementCount = new SimpleIntegerProperty ();
    HBox radioBox = createModesRadios (elementCount, modes);
    GridPane grid = new GridPane ();
    VBox root = new VBox (10, radioBox);
    int count = Stream.of (modes).mapToInt (Mode :: getCount).max ().orElse (0);
    ObservableMap < Integer, String > elements = FXCollections.observableHashMap ();
    ObservableList < String > options = FXCollections.observableArrayList ("ciao", "hello", "halo");
    CheckBox [] checkBoxes = new CheckBox [count];
    elementCount.addListener ((o, oldValue, newValue) -> {
        updateCheckBoxes (checkBoxes, newValue.intValue (), - 1);
    });
    for (int i = 0;
    i < count; i ++) {
        final Integer index = i;
        CheckBox checkBox = new CheckBox ();
        checkBoxes [i] = checkBox;
        ComboBox < String > comboBox = new ComboBox < > (options);
        comboBox.valueProperty ().addListener ((o, oldValue, newValue) -> {
            elements.put (index, newValue);
        });
        comboBox.setDisable (true);
        checkBox.selectedProperty ().addListener ((o, oldValue, newValue) -> {
            comboBox.setDisable (! newValue);
            if (newValue) {
                elements.put (index, comboBox.getValue ());
                updateCheckBoxes (checkBoxes, elementCount.get (), index);
            } else {
                elements.remove (index);
            }
        });
        grid.addRow (i, comboBox, checkBox);
    }
    Button submit = new Button ("submit");
    submit.setOnAction (evt -> System.out.println (elements));
    submit.disableProperty ().bind (elementCount.isNotEqualTo (Bindings.size (elements)));
    root.getChildren ().addAll (grid, submit);
    final Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_16442629_170_259
5098017_5098182_65_103
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (5, 20);
    JTextField jTextField2 = new JTextField ();
    jTextField2.setSize (6, 20);
    JTextField jTextField3 = new JTextField ();
    jTextField3.setSize (7, 20);
    JTextField jTextField4 = new JTextField ();
    jTextField4.setSize (8, 20);
    listOfTextFields.add (jTextField);
    listDataType.add (jTextField2);
    listRange.add (jTextField3);
    listLable.add (jTextField4);
    listOfLabels.add (new JLabel ("LableName | FieldName | DataType | Range "));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    GridBagConstraints gridlistDataType = new GridBagConstraints ();
    GridBagConstraints gridlistRange = new GridBagConstraints ();
    GridBagConstraints gridlistLable = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = 1;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        gridlistDataType.gridx = 2;
        gridlistDataType.fill = 1;
        gridlistDataType.weightx = 0.5;
        gridlistDataType.insets = new Insets (10, 10, 10, 10);
        gridlistDataType.gridy = i;
        gridlistRange.gridx = 3;
        gridlistRange.fill = 1;
        gridlistRange.weightx = 0.5;
        gridlistRange.insets = new Insets (10, 10, 10, 10);
        gridlistRange.gridy = i;
        gridlistLable.gridx = 4;
        gridlistLable.fill = 1;
        gridlistLable.weightx = 0.5;
        gridlistLable.insets = new Insets (10, 10, 10, 10);
        gridlistLable.gridy = i;
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listDataType.get (i), gridlistDataType);
        panel.add (listRange.get (i), gridlistRange);
        panel.add (listLable.get (i), gridlistLable);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    listOfTextFields.add (new JTextField ());
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 0;
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 1;
        labelConstraints.gridy = i;
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listOfLabels.get (i), labelConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_16442629_170_259
5098017_8710737_66_111
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (5, 20);
    JTextField jTextField2 = new JTextField ();
    jTextField2.setSize (6, 20);
    JTextField jTextField3 = new JTextField ();
    jTextField3.setSize (7, 20);
    JTextField jTextField4 = new JTextField ();
    jTextField4.setSize (8, 20);
    listOfTextFields.add (jTextField);
    listDataType.add (jTextField2);
    listRange.add (jTextField3);
    listLable.add (jTextField4);
    listOfLabels.add (new JLabel ("LableName | FieldName | DataType | Range "));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    GridBagConstraints gridlistDataType = new GridBagConstraints ();
    GridBagConstraints gridlistRange = new GridBagConstraints ();
    GridBagConstraints gridlistLable = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = 1;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        gridlistDataType.gridx = 2;
        gridlistDataType.fill = 1;
        gridlistDataType.weightx = 0.5;
        gridlistDataType.insets = new Insets (10, 10, 10, 10);
        gridlistDataType.gridy = i;
        gridlistRange.gridx = 3;
        gridlistRange.fill = 1;
        gridlistRange.weightx = 0.5;
        gridlistRange.insets = new Insets (10, 10, 10, 10);
        gridlistRange.gridy = i;
        gridlistLable.gridx = 4;
        gridlistLable.fill = 1;
        gridlistLable.weightx = 0.5;
        gridlistLable.insets = new Insets (10, 10, 10, 10);
        gridlistLable.gridy = i;
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listDataType.get (i), gridlistDataType);
        panel.add (listRange.get (i), gridlistRange);
        panel.add (listLable.get (i), gridlistLable);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (100, 200);
    listOfTextFields.add (jTextField);
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = GridBagConstraints.HORIZONTAL;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_16442629_27_67
5098017_5098182_23_60
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setLayout (new GridBagLayout ());
    frame.setPreferredSize (new Dimension (990, 990));
    frame.setTitle ("Form Creator");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    GridBagConstraints frameConstraints = new GridBagConstraints ();
    JButton addButton = new JButton ("Add");
    JButton createButton = new JButton ("Create Form");
    addButton.addActionListener (new ButtonListener ());
    createButton.addActionListener (new CreateForm ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 0;
    frame.add (addButton, frameConstraints);
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 1;
    frame.add (createButton, frameConstraints);
    panel.setPreferredSize (new Dimension (900, 900));
    panel.setLayout (new GridBagLayout ());
    panel.setBorder (LineBorder.createBlackLineBorder ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 2;
    frameConstraints.weighty = 1;
    frame.add (panel, frameConstraints);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setLayout (new GridBagLayout ());
    frame.setPreferredSize (new Dimension (300, 300));
    frame.setTitle ("My Example");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    GridBagConstraints frameConstraints = new GridBagConstraints ();
    JButton addButton = new JButton ("Add");
    addButton.addActionListener (new ButtonListener ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 0;
    frame.add (addButton, frameConstraints);
    panel.setPreferredSize (new Dimension (200, 200));
    panel.setLayout (new GridBagLayout ());
    panel.setBorder (LineBorder.createBlackLineBorder ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 1;
    frameConstraints.weighty = 1;
    frame.add (panel, frameConstraints);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_16442629_72_161
5098017_5098182_65_103
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (5, 20);
    JTextField jTextField2 = new JTextField ();
    jTextField2.setSize (6, 20);
    JTextField jTextField3 = new JTextField ();
    jTextField3.setSize (7, 20);
    JTextField jTextField4 = new JTextField ();
    jTextField4.setSize (8, 20);
    listOfTextFields.add (jTextField);
    listDataType.add (jTextField2);
    listRange.add (jTextField3);
    listLable.add (jTextField4);
    listOfLabels.add (new JLabel ("LableName | FieldName | DataType | Range "));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    GridBagConstraints gridlistDataType = new GridBagConstraints ();
    GridBagConstraints gridlistRange = new GridBagConstraints ();
    GridBagConstraints gridlistLable = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = 1;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        gridlistDataType.gridx = 2;
        gridlistDataType.fill = 1;
        gridlistDataType.weightx = 0.5;
        gridlistDataType.insets = new Insets (10, 10, 10, 10);
        gridlistDataType.gridy = i;
        gridlistRange.gridx = 3;
        gridlistRange.fill = 1;
        gridlistRange.weightx = 0.5;
        gridlistRange.insets = new Insets (10, 10, 10, 10);
        gridlistRange.gridy = i;
        gridlistLable.gridx = 4;
        gridlistLable.fill = 1;
        gridlistLable.weightx = 0.5;
        gridlistLable.insets = new Insets (10, 10, 10, 10);
        gridlistLable.gridy = i;
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listDataType.get (i), gridlistDataType);
        panel.add (listRange.get (i), gridlistRange);
        panel.add (listLable.get (i), gridlistLable);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    listOfTextFields.add (new JTextField ());
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 0;
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 1;
        labelConstraints.gridy = i;
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listOfLabels.get (i), labelConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_16442629_72_161
5098017_8710737_66_111
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (5, 20);
    JTextField jTextField2 = new JTextField ();
    jTextField2.setSize (6, 20);
    JTextField jTextField3 = new JTextField ();
    jTextField3.setSize (7, 20);
    JTextField jTextField4 = new JTextField ();
    jTextField4.setSize (8, 20);
    listOfTextFields.add (jTextField);
    listDataType.add (jTextField2);
    listRange.add (jTextField3);
    listLable.add (jTextField4);
    listOfLabels.add (new JLabel ("LableName | FieldName | DataType | Range "));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    GridBagConstraints gridlistDataType = new GridBagConstraints ();
    GridBagConstraints gridlistRange = new GridBagConstraints ();
    GridBagConstraints gridlistLable = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = 1;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        gridlistDataType.gridx = 2;
        gridlistDataType.fill = 1;
        gridlistDataType.weightx = 0.5;
        gridlistDataType.insets = new Insets (10, 10, 10, 10);
        gridlistDataType.gridy = i;
        gridlistRange.gridx = 3;
        gridlistRange.fill = 1;
        gridlistRange.weightx = 0.5;
        gridlistRange.insets = new Insets (10, 10, 10, 10);
        gridlistRange.gridy = i;
        gridlistLable.gridx = 4;
        gridlistLable.fill = 1;
        gridlistLable.weightx = 0.5;
        gridlistLable.insets = new Insets (10, 10, 10, 10);
        gridlistLable.gridy = i;
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listDataType.get (i), gridlistDataType);
        panel.add (listRange.get (i), gridlistRange);
        panel.add (listLable.get (i), gridlistLable);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (100, 200);
    listOfTextFields.add (jTextField);
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = GridBagConstraints.HORIZONTAL;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_5098182_23_60
5098017_8710737_24_61
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setLayout (new GridBagLayout ());
    frame.setPreferredSize (new Dimension (300, 300));
    frame.setTitle ("My Example");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    GridBagConstraints frameConstraints = new GridBagConstraints ();
    JButton addButton = new JButton ("Add");
    addButton.addActionListener (new ButtonListener ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 0;
    frame.add (addButton, frameConstraints);
    panel.setPreferredSize (new Dimension (200, 200));
    panel.setLayout (new GridBagLayout ());
    panel.setBorder (LineBorder.createBlackLineBorder ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 1;
    frameConstraints.weighty = 1;
    frame.add (panel, frameConstraints);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setLayout (new GridBagLayout ());
    frame.setPreferredSize (new Dimension (990, 990));
    frame.setTitle ("My Example");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    GridBagConstraints frameConstraints = new GridBagConstraints ();
    JButton addButton = new JButton ("Add");
    addButton.addActionListener (new ButtonListener ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 0;
    frame.add (addButton, frameConstraints);
    panel.setPreferredSize (new Dimension (600, 600));
    panel.setLayout (new GridBagLayout ());
    panel.setBorder (LineBorder.createBlackLineBorder ());
    frameConstraints.gridx = 0;
    frameConstraints.gridy = 1;
    frameConstraints.weighty = 1;
    frame.add (panel, frameConstraints);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5098017_5098182_65_103
5098017_8710737_66_111
Title: I want to add a JLabel and Text box dynamically by clicking add button 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    listOfTextFields.add (new JTextField ());
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 0;
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 1;
        labelConstraints.gridy = i;
        panel.add (listOfTextFields.get (i), textFieldConstraints);
        panel.add (listOfLabels.get (i), labelConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    panel.removeAll ();
    JTextField jTextField = new JTextField ();
    jTextField.setSize (100, 200);
    listOfTextFields.add (jTextField);
    listOfLabels.add (new JLabel ("Label " + indexer));
    GridBagConstraints textFieldConstraints = new GridBagConstraints ();
    GridBagConstraints labelConstraints = new GridBagConstraints ();
    for (int i = 0;
    i < indexer; i ++) {
        textFieldConstraints.gridx = 1;
        textFieldConstraints.fill = GridBagConstraints.HORIZONTAL;
        textFieldConstraints.weightx = 0.5;
        textFieldConstraints.insets = new Insets (10, 10, 10, 10);
        textFieldConstraints.gridy = i;
        labelConstraints.gridx = 0;
        labelConstraints.gridy = i;
        labelConstraints.insets = new Insets (10, 10, 10, 10);
        panel.add (listOfLabels.get (i), labelConstraints);
        panel.add (listOfTextFields.get (i), textFieldConstraints);
    }
    GridBagConstraints c = new GridBagConstraints ();
    c.gridx = 0;
    c.gridy = indexer;
    c.weighty = 1;
    panel.add (new JLabel (), c);
    indexer ++;
    panel.updateUI ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50980390_50980584_37_75
50980390_50981234_19_41
Title: how to pass a string as method parameter 
----------------------------------------

public static void makeTheDough (String oven) {
    int cupsofflour;
    int cupsofbutter;
    int teaspoonsfsugar;
    int singleeggs;
    if (oven.equals ("Small")) {
        int cupsofflour = 1;
        int cupsofbutter = 1;
        int teaspoonsfsugar = 5;
        int singleeggs = 1;
    } else if (oven.equals ("Medium")) {
        int cupsofflour = 2;
        int cupsofbutter = 1;
        int teaspoonsfsugar = 10;
        int singleeggs = 2;
    } else if (oven.equals ("Large")) {
        int cupsofflour = 3;
        int cupsofbutter = 2;
        int teaspoonsfsugar = 15;
        int singleeggs = 3;
    }

    System.out.println ("Preheat the oven to the degrees stated below. Mix together:" + cupsofflour + "cups of flour," + cupsofbutter + "cups of butter," + teaspoonsofsugar + "teaspoons of sugar, and" + singleeggs + "eggs Then knead the dough to make a thick, but flexible piece of dough we will now shape into cookies!");
}
----------------------------------------

public static void makeTheDough (String oven) {
    int cupsofflour = 0;
    int cupsofbutter = 0;
    int teaspoonsfsugar = 0;
    int singleeggs = 0;
    if (oven.equals ("Small")) {
        cupsofflour = 1;
        cupsofbutter = 1;
        teaspoonsfsugar = 5;
        singleeggs = 1;
    } else if (oven.equals ("Medium")) {
        cupsofflour = 2;
        cupsofbutter = 1;
        teaspoonsfsugar = 10;
        singleeggs = 2;
    } else if (oven.equals ("Large")) {
        cupsofflour = 3;
        cupsofbutter = 2;
        teaspoonsfsugar = 15;
        singleeggs = 3;
    }

    System.out.println ("Preheat the oven to the degrees stated below. Mix together:" + cupsofflour + "cups of flour," + cupsofbutter + "cups of butter," + teaspoonsfsugar + "teaspoons of sugar, and" + singleeggs + "eggs Then knead the dough to make a thick, but flexible piece of dough we will now shape into cookies!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50980390_50980584_77_106
50980390_50981234_43_61
Title: how to pass a string as method parameter 
----------------------------------------

public static void cookTheDough (String oven) {
    if (oven.equals ("Small")) {
        int cookies = 24;
        int ovenTemp = 330;
        int cookTime = 30;
    } else if (oven.equals ("Medium")) {
        int cookies = 12;
        int ovenTemp = 350;
        int cookTime = 25;
    } else if (oven.equals ("Large")) {
        int cookies = 6;
        int ovenTemp = 325;
        int cookTime = 20;
    }

    System.out.println ("take your dough and use the cut tool to make at the most" + cookies + "cookies. Place them on a tray, and stick them in the overat" + ovenTemp + " degrees. Set your timer for" + cookTime + "minutes");
}
----------------------------------------

public static void cookTheDough (String oven) {
    int cookies = 0;
    int ovenTemp = 0;
    int cookTime = 0;
    if (oven.equals ("Small")) {
        cookies = 24;
        ovenTemp = 330;
        cookTime = 30;
    } else if (oven.equals ("Medium")) {
        cookies = 12;
        ovenTemp = 350;
        cookTime = 25;
    } else if (oven.equals ("Large")) {
        cookies = 6;
        ovenTemp = 325;
        cookTime = 20;
    }

    System.out.println ("take your dough and use the cut tool to make at the most" + cookies + "cookies. Place them on a tray, and stick them in the overat" + ovenTemp + " degrees. Set your timer for" + cookTime + "minutes");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50981391_50981604_2_15
50981391_50982144_2_30
Title: Remove letter “e” in the end of each word Java 
----------------------------------------

public static void main (String args []) {
    String str = "like row lounge dude top";
    String [] words = str.split ("\\s|[,.;:]");
    String finalString = "";
    for (String subStr : words) {
        if (subStr.endsWith ("e")) subStr = subStr.substring (0, subStr.length () - 1);

        finalString += subStr + " ";
    }
    System.out.println (finalString);
}
----------------------------------------

public static void main (String [] args) {
    String str = "like row lounge dude top";
    char [] strChars = str.toCharArray ();
    int size = str.length ();
    int temp = 0;
    char [] newStringChars = new char [size];
    String newString = null;
    newStringChars [0] = strChars [0];
    for (int i = 1;
    i < size; i ++) {
        if (! (strChars [i] == 'e' && strChars [i + 1] == ' ')) {
            temp ++;
            newStringChars [temp] = strChars [i];
        } else if (strChars [i] == 'e' && strChars [i + 1] == ' ' && strChars [i - 1] == ' ') {
            temp ++;
            newStringChars [temp] = strChars [i];
        } else {
            continue;
        }

    }
    newString = String.valueOf (newStringChars);
    System.out.println (newString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50990795_50991140_1_10
50990795_50994024_29_46
Title: How to listen for a specific time in Java thread? 
----------------------------------------

public void run () {
    try {
        String x = q.poll (2, TimeUnit.SECONDS);
        if (x == null) System.out.println ("No new message since two seconds, killing thread " + this.getName ());

        System.out.println (x + "from " + this.getName ());
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    long start = System.currentTimeMillis ();
    long end = start + 2;
    while (true) {
        String x = q.poll ();
        if (x != null) {
            System.out.println (x + " from " + this.getName ());
        } else if (System.currentTimeMillis () >= end) {
            System.out.println ("No new message since two milliseconds, killing thread " + this.getName ());
            interrupt ();
        }

        if (interrupted ()) {
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50998268_50998386_1_14
50998268_50998419_1_12
Title: How to replace elements in arraylist contains elements as string of type stringbuilder 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > arrayList = new ArrayList < > ();
    arrayList.add ("shruti");
    arrayList.add ("shri");
    arrayList.add ("samadhan");
    arrayList.add ("suruti");
    arrayList.add ("shreyas");
    for (String str : arrayList) {
        str = str.replaceAll ("shreyas", "prajyot");
        System.out.println (str);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < StringBuilder > arrayList = new ArrayList < > ();
    new StringBuilder ("shreyas");
    arrayList.add (new StringBuilder ("shruti"));
    arrayList.add (new StringBuilder ("shri"));
    arrayList.add (new StringBuilder ("samadhan"));
    arrayList.add (new StringBuilder ("suruti"));
    arrayList.add (new StringBuilder ("shreyas"));
    Optional < StringBuilder > strToBeReplaced = arrayList.stream ().filter (s -> s.toString ().equals ("shreyas")).findFirst ();
    Collections.replaceAll (arrayList, strToBeReplaced.get (), new StringBuilder ("Prajyot"));
    arrayList.forEach (System.out :: println);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50998503_51205103_20_27
50998503_51205103_61_73
Title: Socket always time out with Android Libraries 
----------------------------------------

public void run () {
    new android.os.Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            connectSocket (null);
        }}

    , 3000);
}
----------------------------------------

public void run () {
    new android.os.Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            connectSocket (new onSocketConnectionListener () {
                @Override
                public void connected (AsyncSocket socket) {
                }}

            );
            Utils.Log ("Closed CallBack", API.class);
        }}

    , 3000);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50998503_51205103_20_27
50998503_51205103_64_71
Title: Socket always time out with Android Libraries 
----------------------------------------

public void run () {
    new android.os.Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            connectSocket (null);
        }}

    , 3000);
}
----------------------------------------

public void run () {
    connectSocket (new onSocketConnectionListener () {
        @Override
        public void connected (AsyncSocket socket) {
        }}

    );
    Utils.Log ("Closed CallBack", API.class);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50998503_51205103_49_75
50998503_51205103_79_89
Title: Socket always time out with Android Libraries 
----------------------------------------

public void onCompleted (Exception ex) {
    if (ex != null) {
        Utils.Log ("Closed CallBack With Exception = " + ex.getCause (), API.class);
    } else {
        Utils.Log ("Closed CallBack", API.class);
    }
    sessionReloaded = false;
    isConnected = false;
    server.stop ();
    triggerDisconnections ();
    A.runOnUiThread (new Runnable () {
        @Override
        public void run () {
            new android.os.Handler ().postDelayed (new Runnable () {
                @Override
                public void run () {
                    connectSocket (new onSocketConnectionListener () {
                        @Override
                        public void connected (AsyncSocket socket) {
                        }}

                    );
                    Utils.Log ("Closed CallBack", API.class);
                }}

            , 3000);
        }}

    );
}
----------------------------------------

public void onCompleted (Exception ex) {
    if (ex != null) {
        Utils.Log ("End CallBack With Exception = " + ex.getCause (), API.class);
    } else {
        Utils.Log ("End CallBack", API.class);
    }
    sessionReloaded = false;
    isConnected = false;
    server.stop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50998503_51205103_61_73
50998503_51205103_64_71
Title: Socket always time out with Android Libraries 
----------------------------------------

public void run () {
    new android.os.Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            connectSocket (new onSocketConnectionListener () {
                @Override
                public void connected (AsyncSocket socket) {
                }}

            );
            Utils.Log ("Closed CallBack", API.class);
        }}

    , 3000);
}
----------------------------------------

public void run () {
    connectSocket (new onSocketConnectionListener () {
        @Override
        public void connected (AsyncSocket socket) {
        }}

    );
    Utils.Log ("Closed CallBack", API.class);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
50999239_51000222_1_18
50999239_51000273_1_17
Title: Getting an integer to go to a different line 
----------------------------------------

public static void main (String [] args) {
    int i, l = 0, num = 0;
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter your number to reverse it ...");
    int a = scan.nextInt ();
    while (a > 0) {
        i = a % 10;
        a /= 10;
        num = (num * 10) + i;
        l ++;
    }
    System.out.println ("Number of digits: " + l);
    System.out.println ("Reversed Number: " + num);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter your number to reverse it ...");
    int a = scan.nextInt ();
    while (a > 0) {
        i = a % 10;
        a /= 10;
        l ++;
        System.out.print (i);
    }
    System.out.println ("Number of digits: " + l);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51002276_51002414_25_34
51002276_51002622_87_96
Title: Lines drawn with drawLine randomly shown in JFrame 
----------------------------------------

private static void createAndShowGui () {
    EssaiDrawLine2 mainPanel = new EssaiDrawLine2 ();
    JFrame frame = new JFrame ("Essai Draw Line");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().add (mainPanel);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

private static void createAndShowGui () {
    EssaiDrawLine3 mainPanel = new EssaiDrawLine3 ();
    JFrame frame = new JFrame ("Essai Draw Line3");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().add (mainPanel);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51003001_51003106_5_17
51003001_51003241_1_14
Title: How LinkedList object output the content using Syso? 
----------------------------------------

public String toString () {
    StringBuilder text = new StringBuilder ("[");
    String del = "";
    if (first != null) {
        do {
            text.append (del).append (first.value);
            first = first.next;
            del = ", ";
        } while (first != null);
    }
    text.append (']');
    return text.toString ();
}
----------------------------------------

@Override
public String toString () {
    StringBuilder sb = new StringBuilder ("[");
    if (first != null) {
        Node temp = first;
        String sep = "";
        while (temp != null) {
            sb.append (sep).append (temp.value);
            temp = temp.next;
            sep = ", ";
        }
    }
    return sb.append (']').toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51008535_51010692_14_27
51008535_51010692_1_12
Title: Implementation of 'visitMethodInsn' method of MethodNode in ASM library 
----------------------------------------

public void visitMethodInsn (int opcode, String owner, String name, String desc, boolean itf) {
    if (api < Opcodes.ASM5) {
        if (itf != (opcode == Opcodes.INVOKEINTERFACE)) {
            throw new IllegalArgumentException ("INVOKESPECIAL/STATIC on interfaces require ASM 5");
        }
        visitMethodInsn (opcode, owner, name, desc);
        return;
    }
    if (mv != null) {
        mv.visitMethodInsn (opcode, owner, name, desc, itf);
    }
}
----------------------------------------

@Deprecated
public void visitMethodInsn (int opcode, String owner, String name, String desc) {
    if (api >= Opcodes.ASM5) {
        boolean itf = opcode == Opcodes.INVOKEINTERFACE;
        visitMethodInsn (opcode, owner, name, desc, itf);
        return;
    }
    if (mv != null) {
        mv.visitMethodInsn (opcode, owner, name, desc);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51029335_51029566_1_16
51029335_51030091_1_14
Title: how can I compare the two lists with/without iterating over each list 
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Person other = (Person) obj;
    if (mail == null) {
        if (other.mail != null) return false;

    } else if (! mail.equals (other.mail)) return false;

    return true;
}
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Person p = (Person) obj;
    if (getName () == p.getName () && getAge () == p.getAge () && getMail () == p.getMail ()) return true;
    else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51035587_51035631_6_26
51035587_51035814_1_23
Title: "By using multiple methods find the perimeter of a triangle with given coordinates" 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Please enter X1: ");
    double X1 = scan.nextDouble ();
    System.out.println ("Please enter Y1: ");
    double Y1 = scan.nextDouble ();
    System.out.println ("Please enter X2: ");
    double X2 = scan.nextDouble ();
    System.out.println ("Please enter Y2: ");
    double Y2 = scan.nextDouble ();
    System.out.println ("Please enter X3: ");
    double X3 = scan.nextDouble ();
    System.out.println ("Please enter Y3: ");
    double Y3 = scan.nextDouble ();
    double bases [] = finddistance (X1, Y1, X2, Y2, X3, Y3);
    double answer = triperimeter (bases [0], bases [1], bases [2]);
    System.out.println (answer);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Please enter Ax: ");
    double ax = scan.nextDouble ();
    System.out.println ("Please enter Ay: ");
    double ay = scan.nextDouble ();
    System.out.println ("Please enter Bx: ");
    double bx = scan.nextDouble ();
    System.out.println ("Please enter By: ");
    double by = scan.nextDouble ();
    System.out.println ("Please enter Cx: ");
    double cx = scan.nextDouble ();
    System.out.println ("Please enter Cy: ");
    double cy = scan.nextDouble ();
    double lengthA = findDistance (bx, by, cx, cy);
    double lengthB = findDistance (ax, ay, cx, cy);
    double lengthC = findDistance (ax, ay, bx, by);
    double answer = perimeter (lengthA, lengthB, lengthC);
    System.out.println (answer);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5105857_31862868_1_34
5105857_5106090_1_15
Title: RXTX getPortIdentifiers() stuck 
----------------------------------------

public List < String > getAvailablePorts () {
    List < String > list = new ArrayList < String > ();
    String res = "";
    BufferedReader br;
    String cmd;
    Process proc;
    try {
        cmd = "devcon find \"usb\\vid_067B&PID_2303*\"";
        proc = Runtime.getRuntime ().exec (cmd);
        br = new BufferedReader (new InputStreamReader (proc.getInputStream ()));
        do {
            try {
                res = br.readLine ();
                if (res == null) break;

                if (res.contains ((CharSequence) ("Prolific USB"))) list.add (res.substring (res.indexOf ("(COM") + 1, res.indexOf (")")));

            } catch (Exception e) {
                e.printStackTrace ();
            }
        } while (! res.equals ("null"));
        br.close ();
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    return list;
}
----------------------------------------

public List < String > getAvailablePorts () {
    List < String > list = new ArrayList < String > ();
    Enumeration portList = CommPortIdentifier.getPortIdentifiers ();
    while (portList.hasMoreElements ()) {
        CommPortIdentifier portId = (CommPortIdentifier) portList.nextElement ();
        if (portId.getPortType () == CommPortIdentifier.PORT_SERIAL) {
            list.add (portId.getName ());
        }
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51061342_51061823_1_16
51061342_51061839_1_14
Title: Cannot delete first node from the linked list 
----------------------------------------

public Node delete (Object data) {
    Node node = this;
    if (node.data.equals (data)) {
        node = node.next;
        return node;
    }
    while (node.next != null) {
        if (node.next.data.equals (data)) {
            node.next = node.next.next;
        }
        node = node.next;
    }
    return node;
}
----------------------------------------

public Node delete (Object data) {
    Node node = this;
    if (node.data.equals (data)) {
        return node.next;
    }
    while (node.next != null) {
        if (node.next.data.equals (data)) {
            node.next = node.next.next;
            return node;
        }
        node = node.next;
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51070993_1_11
51070885_51071114_1_23
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int temp = 0;
    int answer = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        boolean flag = true;
        temp = nums [i];
        for (int j = 0;
        j < nums.length; j ++) {
            if (temp == nums [j]) {
                if (i != j) {
                    flag = false;
                    break;
                }
            }
        }
        if (flag == true) {
            answer = temp;
        }
    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51070993_1_11
51070885_51071351_1_13
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

public static int singleNumber (int [] nums) throws IllegalArgumentException {
    if (nums.length == 0) {
        throw new IllegalArgumentException ("empty array");
    }
    Map < Integer, Long > grouping = Arrays.stream (nums).boxed ().collect (Collectors.groupingBy (a -> a, Collectors.counting ()));
    if (grouping.values ().stream ().filter (c -> c == 1).count () > 1) {
        throw new IllegalArgumentException ("more than one element is repeated one time");
    }
    return grouping.entrySet ().stream ().filter (e -> e.getValue () == 1).findFirst ().get ().getKey ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51070993_1_11
51070885_51071665_1_16
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) {
    Set < Integer > unique = new HashSet < > ();
    for (int num : nums) {
        if (! unique.add (num)) {
            unique.remove (num);
        }
    }
    return unique.iterator ().next ();
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51071114_1_23
51070885_51071351_1_13
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) {
    int temp = 0;
    int answer = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        boolean flag = true;
        temp = nums [i];
        for (int j = 0;
        j < nums.length; j ++) {
            if (temp == nums [j]) {
                if (i != j) {
                    flag = false;
                    break;
                }
            }
        }
        if (flag == true) {
            answer = temp;
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) throws IllegalArgumentException {
    if (nums.length == 0) {
        throw new IllegalArgumentException ("empty array");
    }
    Map < Integer, Long > grouping = Arrays.stream (nums).boxed ().collect (Collectors.groupingBy (a -> a, Collectors.counting ()));
    if (grouping.values ().stream ().filter (c -> c == 1).count () > 1) {
        throw new IllegalArgumentException ("more than one element is repeated one time");
    }
    return grouping.entrySet ().stream ().filter (e -> e.getValue () == 1).findFirst ().get ().getKey ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51071114_1_23
51070885_51071665_1_16
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) {
    int temp = 0;
    int answer = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        boolean flag = true;
        temp = nums [i];
        for (int j = 0;
        j < nums.length; j ++) {
            if (temp == nums [j]) {
                if (i != j) {
                    flag = false;
                    break;
                }
            }
        }
        if (flag == true) {
            answer = temp;
        }
    }
    return answer;
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51070885_51071351_1_13
51070885_51071665_1_16
Title: Searching a value using for-loop and 
----------------------------------------

public static int singleNumber (int [] nums) throws IllegalArgumentException {
    if (nums.length == 0) {
        throw new IllegalArgumentException ("empty array");
    }
    Map < Integer, Long > grouping = Arrays.stream (nums).boxed ().collect (Collectors.groupingBy (a -> a, Collectors.counting ()));
    if (grouping.values ().stream ().filter (c -> c == 1).count () > 1) {
        throw new IllegalArgumentException ("more than one element is repeated one time");
    }
    return grouping.entrySet ().stream ().filter (e -> e.getValue () == 1).findFirst ().get ().getKey ();
}
----------------------------------------

public static int singleNumber (int [] nums) {
    int answer = 0;
    ArrayList al = new ArrayList ();
    for (int i = 0;
    i < nums.length; i ++) {
        al.add (nums [i]);
    }
    for (int i = 0;
    i < nums.length; i ++) {
        int test = nums [i];
        if (al.indexOf (test) == al.lastIndexOf (test)) {
            answer = nums [i];
        }
    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51080379_51080834_6_21
51080379_51081015_10_21
Title: How to configure Custom Authentication and Authorization in spring boot? 
----------------------------------------

public Authentication authenticate (Authentication authentication) throws AuthenticationException {
    String name = authentication.getName ();
    String password = authentication.getCredentials ().toString ();
    if (shouldAuthenticateAgainstThirdPartySystem ()) {
        return new UsernamePasswordAuthenticationToken (name, password, new ArrayList < > ());
    } else {
        return null;
    }
}
----------------------------------------

public Authentication authenticate (Authentication authentication) throws AuthenticationException {
    String name = authentication.getName ();
    String password = authentication.getCredentials ().toString ();
    logger.info ("Username:" + name + " Password:" + password);
    ReturnResult result = authenicationService.authenicate ();
    if (result.isStatus ()) {
        return new UsernamePasswordAuthenticationToken (name, password, new ArrayList < > ());
    } else {
        throw new BadCredentialsException (result.getMsg ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51081167_51081227_4_21
51081167_51081577_3_23
Title: Print String Array Contents Randomly 
----------------------------------------

public static void main (String args []) throws Exception {
    String [] Answers = new String [4];
    Answers [0] = "OS";
    Answers [1] = "GOOD";
    Answers [2] = "CS";
    Answers [3] = "Cody";
    Random rn = new Random ();
    int freq [] = new int [Answers.length];
    for (int n = 0;
    n < Answers.length; n ++) {
        int index = rn.nextInt (Answers.length);
        if (freq [index] == 0) {
            freq [index] += 1;
            System.out.println (Answers [index]);
        } else {
            n -= 1;
        }
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    String [] answersArray = new String [4];
    answersArray [0] = "OS";
    answersArray [1] = "GOOD";
    answersArray [2] = "CS";
    answersArray [3] = "Cody";
    List < String > answersList = new ArrayList < String > (Arrays.asList (answersArray));
    final Random randomNumber = new Random ();
    final int low = 0;
    int high = 0;
    while (! answersList.isEmpty ()) {
        high = answersList.size ();
        int result = randomNumber.nextInt (high - low) + low;
        System.out.print (answersList.get (result) + " ");
        answersList.remove (result);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51081167_51081227_4_21
51081167_51081867_1_13
Title: Print String Array Contents Randomly 
----------------------------------------

public static void main (String args []) throws Exception {
    String [] Answers = new String [4];
    Answers [0] = "OS";
    Answers [1] = "GOOD";
    Answers [2] = "CS";
    Answers [3] = "Cody";
    Random rn = new Random ();
    int freq [] = new int [Answers.length];
    for (int n = 0;
    n < Answers.length; n ++) {
        int index = rn.nextInt (Answers.length);
        if (freq [index] == 0) {
            freq [index] += 1;
            System.out.println (Answers [index]);
        } else {
            n -= 1;
        }
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    String [] answers = new String [4];
    int len = answers.length;
    answers [0] = "OS";
    answers [1] = "GOOD";
    answers [2] = "CS";
    answers [3] = "Cody";
    for (int i = 0;
    i < len; i ++) {
        int random = getRandomNum (len);
        System.out.println ("random: " + random);
        System.out.println (answers [random]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51081167_51081577_3_23
51081167_51081867_1_13
Title: Print String Array Contents Randomly 
----------------------------------------

public static void main (String args []) throws Exception {
    String [] answersArray = new String [4];
    answersArray [0] = "OS";
    answersArray [1] = "GOOD";
    answersArray [2] = "CS";
    answersArray [3] = "Cody";
    List < String > answersList = new ArrayList < String > (Arrays.asList (answersArray));
    final Random randomNumber = new Random ();
    final int low = 0;
    int high = 0;
    while (! answersList.isEmpty ()) {
        high = answersList.size ();
        int result = randomNumber.nextInt (high - low) + low;
        System.out.print (answersList.get (result) + " ");
        answersList.remove (result);
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    String [] answers = new String [4];
    int len = answers.length;
    answers [0] = "OS";
    answers [1] = "GOOD";
    answers [2] = "CS";
    answers [3] = "Cody";
    for (int i = 0;
    i < len; i ++) {
        int random = getRandomNum (len);
        System.out.println ("random: " + random);
        System.out.println (answers [random]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51082371_51082516_6_20
51082371_51082941_10_26
Title: Method Local Inner classes program 
----------------------------------------

public void m1 () {
    int k = 30;
    final int m = 40;
    class Inner {
        public void m2 () {
            System.out.println (i);
        }}

    Inner myInner = new Inner ();
    myInner.m2 ();
}
----------------------------------------

public void m1 () {
    int k = 30;
    final int m = 40;
    ((Inner) () -> System.out.println (i)).m2 ();
    new Inner () {
        @Override
        public void m2 () {
            System.out.println (i);
        }}

    .m2 ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51229692_42_57
51088059_51231921_31_46
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String args []) {
    int curLevel = 0;
    root = new Node (1);
    curLevel ++;
    root.left = new Node (2);
    root.right = new Node (2);
    curLevel ++;
    root.left.left = new Node (3);
    root.left.right = new Node (3);
    root.right.left = new Node (3);
    Node n = new Node (3);
    root.right.right = n;
    curLevel ++;
    nLevelsAbove (n, curLevel, 1);
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, 0, level);
    int levelToUp = 1;
    HashSet < Node > result = getUpper (levelToUp, root);
    System.out.println (Arrays.toString (result.toArray ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51229692_42_57
51088059_51260891_24_34
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String args []) {
    int curLevel = 0;
    root = new Node (1);
    curLevel ++;
    root.left = new Node (2);
    root.right = new Node (2);
    curLevel ++;
    root.left.left = new Node (3);
    root.left.right = new Node (3);
    root.right.left = new Node (3);
    Node n = new Node (3);
    root.right.right = n;
    curLevel ++;
    nLevelsAbove (n, curLevel, 1);
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, level);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51229692_42_57
51088059_51287223_22_32
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String args []) {
    int curLevel = 0;
    root = new Node (1);
    curLevel ++;
    root.left = new Node (2);
    root.right = new Node (2);
    curLevel ++;
    root.left.left = new Node (3);
    root.left.right = new Node (3);
    root.right.left = new Node (3);
    Node n = new Node (3);
    root.right.right = n;
    curLevel ++;
    nLevelsAbove (n, curLevel, 1);
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    printNodes (getNodesNLevelAboveLeafs (root, level));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51231921_31_46
51088059_51260891_24_34
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, 0, level);
    int levelToUp = 1;
    HashSet < Node > result = getUpper (levelToUp, root);
    System.out.println (Arrays.toString (result.toArray ()));
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, level);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51231921_31_46
51088059_51287223_22_32
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, 0, level);
    int levelToUp = 1;
    HashSet < Node > result = getUpper (levelToUp, root);
    System.out.println (Arrays.toString (result.toArray ()));
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    printNodes (getNodesNLevelAboveLeafs (root, level));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51088059_51260891_24_34
51088059_51287223_22_32
Title: Print all nodes that are N level above all Leaf Nodes 
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    print (root, level);
}
----------------------------------------

public static void main (String [] args) {
    int level = 2;
    root = new Node (1);
    root.left = new Node (2);
    root.right = new Node (3);
    root.left.left = new Node (4);
    root.left.right = new Node (5);
    root.right.left = new Node (8);
    printNodes (getNodesNLevelAboveLeafs (root, level));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51094723_51094762_1_28
51094723_51094892_1_40
Title: Count how many times each number occurs in an array (positive and negative values) 
----------------------------------------

public static void countArray (int [] arr) {
    if (arr != null && arr.length > 0) {
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for (int i = 0;
        i < arr.length; ++ i) {
            if (arr [i] < min) {
                min = arr [i];
            }
            if (arr [i] < max) {
                max = arr [i];
            }
        }
        int [] count = new int [max - min + 1];
        int temp = 0;
        for (int i = 0;
        i < arr.length; i ++) {
            temp = arr [i];
            count [temp - min] ++;
        }
        for (int i = 0;
        i < count.length; i ++) {
            if (count [i] == 1) {
                System.out.printf ("%d occurs %d time\n", i - min, count [i]);
            } else if (count [i] >= 2) {
                System.out.printf ("%d occurs %d times\n", i - min, count [i]);
            }

        }
    }
}
----------------------------------------

public static void countArray (int [] arr) {
    int [] positiveIntCounts = new int [Integer.MAX_VALUE];
    int [] negativeIntCounts = new int [Integer.MAX_VALUE];
    int max;
    int min;
    int temp = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        temp = arr [i];
        if (temp >= 0) {
            positiveIntCounts [temp] ++;
            if (temp > max) {
                max = temp;
            }
        } else {
            negativeIntCounts [- temp] ++;
            if (temp < min) {
                min = temp;
            }
        }
    }
    for (int i = 1;
    i <= max; i ++) {
        if (count [i] == 1) {
            System.out.printf ("%d occurs %d time\n", i, count [i]);
        } else if (count [i] >= 2) {
            System.out.printf ("%d occurs %d times\n", i, count [i]);
        }

    }
    for (int i = 1;
    i <= - max; i ++) {
        if (count [i] == 1) {
            System.out.printf ("%d occurs %d time\n", - i, count [i]);
        } else if (count [i] >= 2) {
            System.out.printf ("%d occurs %d times\n", - i, count [i]);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51097162_51097196_1_13
51097162_51097253_1_15
Title: Finding the sum of numbers in an array - excluding the number 13 and the number directly after it 
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    boolean skipNext = false;
    for (int num : nums) {
        if (num == 13) {
            skipNext = true;
        } else {
            if (! skipNext) {
                sum += num;
            }
            skipNext = false;
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51097162_51097196_1_13
51097162_51097278_8_22
Title: Finding the sum of numbers in an array - excluding the number 13 and the number directly after it 
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] != 13) {
            sum += nums [i];
        } else {
            i ++;
        }
    }
    return sum;
}
----------------------------------------

public static int sum13 (int [] nums) {
    int sum = 0;
    int n = nums.length;
    for (int i = 0;
    i < n; i ++) {
        if (nums [i] == 13) {
            i = i + 2;
        }
        if (i < n) {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51097162_51097253_1_15
51097162_51097278_8_22
Title: Finding the sum of numbers in an array - excluding the number 13 and the number directly after it 
----------------------------------------

public int sum13 (int [] nums) {
    int sum = 0;
    boolean skipNext = false;
    for (int num : nums) {
        if (num == 13) {
            skipNext = true;
        } else {
            if (! skipNext) {
                sum += num;
            }
            skipNext = false;
        }
    }
    return sum;
}
----------------------------------------

public static int sum13 (int [] nums) {
    int sum = 0;
    int n = nums.length;
    for (int i = 0;
    i < n; i ++) {
        if (nums [i] == 13) {
            i = i + 2;
        }
        if (i < n) {
            sum += nums [i];
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51112091_51112131_1_14
51112091_51112281_1_16
Title: Why is scanner skipping the if else statement 
----------------------------------------

public static void main (String [] args) {
    String k = "Hi";
    Scanner scnr = new Scanner (k);
    String read = scnr.next ();
    if (read.equals ("Hi")) {
        System.out.println ("Yes");
    } else if (read.equals ("Bye")) {
        System.out.println ("No");
    } else {
        System.out.println ("Maybe");
    }

}
----------------------------------------

public static void main (String [] args) {
    String k = "Bye";
    Scanner scnr = new Scanner (k);
    if (scnr.next ().equals ("Hi")) {
        System.out.println ("Yes");
    } else if (scnr.next ().equals ("Bye")) {
        System.out.println ("No");
    } else {
        System.out.println ("Maybe");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51126465_51126669_1_23
51126465_51126827_16_31
Title: How to find the last Occurence of an element in a Queue in Java 
----------------------------------------

public static void remove (Queue < String > queue, String toRemove) {
    Queue < String > tmp = new LinkedList < > ();
    int lastFoundIdx = - 1;
    for (int i = 0;
    ! queue.isEmpty (); i ++) {
        String elem = queue.poll ();
        if (elem.equals (toRemove)) {
            lastFoundIdx = i;
        }
        tmp.offer (elem);
    }
    for (int i = 0;
    ! tmp.isEmpty (); i ++) {
        if (i == lastFoundIdx) {
            tmp.poll ();
        } else {
            queue.offer (tmp.poll ());
        }
    }
}
----------------------------------------

private static void remove (Stack < String > stack, String toRemove) {
    int indexOfToRemove = stack.lastIndexOf (toRemove);
    if (indexOfToRemove == - 1) {
        return;
    }
    Stack < String > tempStack = new Stack < > ();
    int originalSize = stack.size ();
    for (int i = 0;
    i < originalSize - indexOfToRemove - 1; i ++) {
        tempStack.push (stack.pop ());
    }
    stack.pop ();
    System.out.println ("Temporary stack: " + tempStack);
    while (! tempStack.empty ()) {
        stack.push (tempStack.pop ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51126465_51126710_7_19
51126465_51126827_1_14
Title: How to find the last Occurence of an element in a Queue in Java 
----------------------------------------

public static void main (String [] args) {
    Queue < String > queue = new LinkedList < > ();
    queue.add ("a");
    queue.add ("b");
    queue.add ("c");
    queue.add ("a");
    queue.add ("d");
    queue.add ("a");
    queue.add ("b");
    System.out.println ("Before: " + queue);
    remove (queue, "a");
    System.out.println ("After: " + queue);
}
----------------------------------------

public static void main (String [] args) {
    Stack < String > stack = new Stack < > ();
    stack.add ("a");
    stack.add ("e");
    stack.add ("b");
    stack.add ("k");
    stack.add ("b");
    stack.add ("c");
    stack.add ("l");
    System.out.println ("Original stack: " + stack);
    remove (stack, "a");
    System.out.println ("Modified stack: " + stack);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5113016_13717747_1_16
5113016_23159018_1_11
Title: Getting a ConcurrentModificationException thrown when removing an element from a java.util.List during list iteration? 
----------------------------------------

@Test
public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    List < String > finalLi = new ArrayList < String > ();
    for (String st : li) {
        if (st.equalsIgnoreCase ("str3")) {
        } else {
            finalLi.add (st);
        }
    }
    System.out.println (finalLi);
}
----------------------------------------

@Test
public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    li = li.stream ().filter (st -> ! st.equalsIgnoreCase ("str3")).collect (Collectors.toList ());
    System.out.println (li);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5113016_13717747_1_16
5113016_42240213_1_12
Title: Getting a ConcurrentModificationException thrown when removing an element from a java.util.List during list iteration? 
----------------------------------------

@Test
public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    List < String > finalLi = new ArrayList < String > ();
    for (String st : li) {
        if (st.equalsIgnoreCase ("str3")) {
        } else {
            finalLi.add (st);
        }
    }
    System.out.println (finalLi);
}
----------------------------------------

public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    for (int i = 0;
    i < li.size (); i ++) if (li.get (i).equalsIgnoreCase ("str3")) li.remove (i --);

    System.out.println (li);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5113016_23159018_1_11
5113016_42240213_1_12
Title: Getting a ConcurrentModificationException thrown when removing an element from a java.util.List during list iteration? 
----------------------------------------

@Test
public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    li = li.stream ().filter (st -> ! st.equalsIgnoreCase ("str3")).collect (Collectors.toList ());
    System.out.println (li);
}
----------------------------------------

public void testListCur () {
    List < String > li = new ArrayList < String > ();
    for (int i = 0;
    i < 10; i ++) {
        li.add ("str" + i);
    }
    for (int i = 0;
    i < li.size (); i ++) if (li.get (i).equalsIgnoreCase ("str3")) li.remove (i --);

    System.out.println (li);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51136837_51137925_15_21
51136837_51137925_25_31
Title: Method returning as interface 
----------------------------------------

public < PP extends AA & BB & CC > BB convert (PP instance) {
    return new BB () {
        public void b () {
            instance.b ();
        };
    }

    ;
}
----------------------------------------

public < PP extends AA & BB & CC > CC convert (PP instance) {
    return new CC () {
        public void c () {
            instance.c ();
        };
    }

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51136837_51137925_15_21
51136837_51137925_5_11
Title: Method returning as interface 
----------------------------------------

public < PP extends AA & BB & CC > BB convert (PP instance) {
    return new BB () {
        public void b () {
            instance.b ();
        };
    }

    ;
}
----------------------------------------

public < PP extends AA & BB & CC > AA convert (PP instance) {
    return new AA () {
        public void a () {
            instance.a ();
        };
    }

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51136837_51137925_25_31
51136837_51137925_5_11
Title: Method returning as interface 
----------------------------------------

public < PP extends AA & BB & CC > CC convert (PP instance) {
    return new CC () {
        public void c () {
            instance.c ();
        };
    }

    ;
}
----------------------------------------

public < PP extends AA & BB & CC > AA convert (PP instance) {
    return new AA () {
        public void a () {
            instance.a ();
        };
    }

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51142808_51144726_164_180
51142808_51144726_25_65
Title: JavaFX bind PathTransition's element coordinates 
----------------------------------------

public void start () {
    if (finished) {
        return;
    }
    init ();
    this.transition.playFrom (startTime);
    if (this.startTimestamp == 0) {
        this.startTimestamp = System.currentTimeMillis ();
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    this.parent = new Pane ();
    tileWidthProperty.bind (parent.widthProperty ().divide (8));
    tileHeightProperty.bind (parent.heightProperty ().divide (8));
    final Ellipse ellipse = new Ellipse (25., 25.);
    parent.getChildren ().add (ellipse);
    primaryStage.setScene (new Scene (parent, 800, 800));
    primaryStage.show ();
    InvalidationListener sizeChangeListener = l -> {
        if (ellipseTransition != null) {
            ellipseTransition = ellipseTransition.refreshAndStart ();
        } else {
            System.out.println ("ellipseTransition cleaned up!");
        }
    };
    tileWidthProperty.addListener (sizeChangeListener);
    tileHeightProperty.addListener (sizeChangeListener);
    applyMove (ellipse, 0, 0, 7, 7, Duration.millis (5000));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51147336_51147552_4_21
51147336_51161128_1_22
Title: Shopping Cart - Array not storing a value 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int itemsInTheCart = 0;
    System.out.print ("Please enter the number of items in your cart: ");
    itemsInTheCart = scan.nextInt ();
    int [] itemsCart = new int [itemsInTheCart];
    for (int i = 0;
    i < itemsInTheCart; i ++) {
        System.out.print ("Enter the price for item " + (i + 1) + ": ");
        itemsCart [i] = scan.nextInt ();
    }
    for (int i = 0;
    i < itemsInTheCart; i ++) {
        System.out.println (itemsCart [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int [] [] itemsCart;
    int itemsInTheCart = 0;
    int itemsPrice = 0;
    System.out.print ("Please enter the number of items in your cart: ");
    itemsInTheCart = scan.nextInt ();
    itemsCart = new int [itemsInTheCart] [2];
    for (int i = 0;
    i < itemsInTheCart; i ++) {
        System.out.print ("Enter the price for item " + (i + 1) + ": ");
        itemsPrice = scan.nextInt ();
        itemsCart [i] [1] = itemsPrice;
    }
    for (int i = 0;
    i < itemsInTheCart; i ++) {
        System.out.println ("Item: " + (i + 1) + " for price: " + itemsCart [i] [1]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
51154896_51156917_18_58
51154896_51192518_1_26
Title: Split .srt file into equal chunks 
----------------------------------------

public static void main (String [] args) throws IOException {
    int nrOfChunks = Integer.parseInt (args [0]);
    File srtFile = new File (args [1]);
    System.out.println ("Splitting " + srtFile.getAbsolutePath () + " into " + nrOfChunks + " files.");
    List < String > srcLines = FileUtils.readLines (srtFile);
    long fileEndTime = lastEndTime (srcLines);
    long msecsPerChunkFile = fileEndTime / nrOfChunks;
    int destFileCounter = 1;
    String [] fileNameParts = srtFile.getName ().split ("\\.");
    File outFile = new File (fileNameParts [0] + destFileCounter + "." + fileNameParts [1]);
    System.out.println ("Writing to " + outFile.getAbsolutePath ());
    outFile.createNewFile ();
    FileWriter ofstream = new FileWriter (outFile);
    BufferedWriter out = new BufferedWriter (ofstream);
    for (String line : srcLines) {
        String [] atoms = line.split (" --> ");
        if (atoms.length > 1) {
            long startTS = toMSec (atoms [0]);
            if (startTS > msecsPerChunkFile * destFileCounter) {
                out.close ();
                ofstream.close ();
                destFileCounter ++;
                outFile = new File (srtFile.getParent (), fileNameParts [0] + destFileCounter + "." + fileNameParts [1]);
                System.out.println ("Writing to " + outFile.getAbsolutePath ());
                outFile.createNewFile ();
                ofstream = new FileWriter (outFile);
                out = new BufferedWriter (ofstream);
            }
        }
        out.write (line + "/n");
    }
    out.close ();
    ofstream.close ();
    System.out.println ("Done.");
}
----------------------------------------

public static void main (String args []) throws IOException {
    String FilePath = "/Users/meh/Desktop/escapeplan.srt";
    FileInputStream fin = new FileInputStream (FilePath);
    System.out.println ("size: " + fin.getChannel ().size ());
    long abc = 0l;
    abc = (fin.getChannel ().size ()) / 3;
    System.out.println ("6: " + abc);
    System.out.println ("abc: " + abc);
    File filename = new File (FilePath);
    long splitFileSize = 0, bytefileSize = 0;
    if (filename.exists ()) {
        try {
            splitFileSize = abc;
            Splitme spObj = new Splitme ();
            spObj.split (FilePath, (long) splitFileSize);
            spObj = null;
        } catch (Exception e) {
            e.printStackTrace ();
        }
    } else {
        System.out.println ("File Not Found....");
    }
}
----------------------------------------
