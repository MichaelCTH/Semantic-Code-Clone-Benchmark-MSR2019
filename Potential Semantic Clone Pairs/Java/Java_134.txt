$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8031816_18807668_3_47
8031816_8031966_1_24
Title: Dynamic Programming - making change 
----------------------------------------

public int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int j = 1;
    j < n; j ++) table [0] [j] = inf;

    for (int i = 1;
    i < m; i ++) {
        for (int j = 1;
        j < n; j ++) {
            if (j - denom [i - 1] >= 0) table [i] [j] = Math.min (table [i - 1] [j], 1 + table [i] [j - denom [i - 1]]);
            else table [i] [j] = table [i - 1] [j];

        }
    }
    System.out.println ("----------------Displaying the 2-D Matrix(denominations and amount)----------------");
    for (int i = 0;
    i < m; i ++) {
        System.out.println ("   ");
        for (int j = 0;
        j < n; j ++) {
            System.out.print ("  " + table [i] [j]);
        }
        System.out.println ("   ");
    }
    return table [m - 1] [n - 1];
}
----------------------------------------

public int minChange (int [] denom, int targetAmount) {
    int actualAmount;
    int m = denom.length + 1;
    int n = targetAmount + 1;
    int inf = Integer.MAX_VALUE - 1;
    int [] [] table = new int [m] [n];
    for (int j = 1;
    j < n; j ++) table [0] [j] = inf;

    for (int denomPosition = 1;
    denomPosition < m; denomPosition ++) {
        for (int currentAmount = 1;
        currentAmount < n; currentAmount ++) {
            if (currentAmount - denom [denomPosition - 1] >= 0) actualAmount = table [denomPosition] [currentAmount - denom [denomPosition - 1]];
            else actualAmount = inf;

            table [denomPosition] [currentAmount] = Math.min (table [denomPosition - 1] [currentAmount], 1 + actualAmount);
        }
    }
    return table [m - 1] [n - 1];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8033550_25278643_1_10
8033550_36343369_2_20
Title: Convert integer to array of digits 
----------------------------------------

public static void main (String k []) {
    System.out.println ("NUMBER OF VALUES =" + k.length);
    int arrymy [] = new int [k.length];
    for (int i = 0;
    i < k.length; i ++) {
        int newGues = Integer.parseInt (k [i]);
        arrymy [i] = newGues;
    }
}
----------------------------------------

public static void main (String [] args) {
    int num1 = 123456;
    int num2 = 89786775;
    String str1 = Integer.toString (num1);
    String str2 = Integer.toString (num2);
    char [] ch1 = str1.toCharArray ();
    char [] ch2 = str2.toCharArray ();
    int [] t1 = new int [ch1.length];
    int [] t2 = new int [ch2.length];
    for (int i = 0;
    i < ch1.length; i ++) t1 [i] = (int) ch1 [i] - 48;

    for (int i = 0;
    i < ch2.length; i ++) t2 [i] = (int) ch2 [i] - 48;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8033553_15528805_38_49
8033553_8033812_7_46
Title: "stumped on a Java interview need some hints" 
----------------------------------------

private static int solve (String input) {
    int num [] = countOccurrences (input);
    if ((num [0] == 0 && num [1] == 0) || (num [0] == 0 && num [2] == 0) || (num [1] == 0 && num [2] == 0)) {
        return input.length ();
    }
    if ((num [0] % 2 == 0 && num [1] % 2 == 0 && num [2] % 2 == 0) || (num [0] % 2 == 1 && num [1] % 2 == 1 && num [2] % 2 == 1)) {
        return 2;
    }
    return 1;
}
----------------------------------------

private static int solve (String testCase) {
    if (! testCase.matches ("^[abc]*$")) throw new IllegalArgumentException ("invalid input");

    char [] chars = new char [testCase.length ()];
    testCase.getChars (0, testCase.length (), chars, 0);
    int remaining = chars.length;
    for (int i = 0;
    (i < chars.length) && (remaining > 1);) {
        int next = i + 1;
        while (next < chars.length && (' ' == chars [next])) ++ next;

        if (next >= chars.length) break;

        if (chars [i] != chars [next]) {
            switch (chars [i]) {
                case 'a' :
                    chars [next] = ('b' == chars [next]) ? 'c' : 'b';
                    break;
                case 'b' :
                    chars [next] = ('a' == chars [next]) ? 'c' : 'a';
                    break;
                case 'c' :
                    chars [next] = ('b' == chars [next]) ? 'a' : 'b';
                    break;
            }
            chars [i] = ' ';
            remaining --;
            while (i > 0 && (' ' != chars [i - 1])) -- i;

            if (' ' == chars [i]) i = next;

        } else ++ i;

    }
    return remaining;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8033553_15528805_6_16
8033553_8159054_74_95
Title: "stumped on a Java interview need some hints" 
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    int T = Integer.parseInt (in.readLine ());
    for (int i = 0;
    i < T; i ++) {
        String line = in.readLine ();
        System.out.println (solve (line));
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner sc;
    try {
        sc = new Scanner (new BufferedReader (new FileReader ("input.txt")));
        int numberOfTests = sc.nextInt ();
        for (int i = 1;
        i <= numberOfTests; i ++) {
            String testData = sc.next ();
            Solution answer = new Solution ();
            String transformedData = answer.transform (testData);
            System.out.println (transformedData.length ());
        }
    } catch (Exception e) {
        throw new Exception (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8033655_53387579_6_32
8033655_8033796_2_19
Title: Find longest common prefix? 
----------------------------------------

public static void main (String [] args) {
    int count = 0;
    String [] input = {"Java is a Programming Language", "Java is a OO", "Java is a Platform independent language", "Java is a my favourite"};
    Collections.sort (Arrays.asList (input));
    Integer [] length = new Integer [input.length];
    for (int j = 0;
    j < input.length; j ++) {
        length [j] = input [j].length ();
    }
    Collections.sort (Arrays.asList (length));
    for (int i = 0;
    i < length [0]; i ++) {
        if (isValidPrefix (input [0].substring (0, i), input)) {
            count ++;
        } else {
            break;
        }
    }
    System.out.println ("Answer:" + input [0].substring (0, count - 1));
}
----------------------------------------

public static void main (String [] args) {
    String s1 = "Mary Had a Little Lamb";
    String s2 = "Mary Had a Big Lamb";
    int minStrLen = s1.length ();
    if (minStrLen > s2.length ()) {
        minStrLen = s2.length ();
    }
    StringBuilder output = new StringBuilder ();
    for (int i = 0;
    i < minStrLen; i ++) {
        if (s1.charAt (i) == s2.charAt (i)) {
            output.append (s1.charAt (i));
        } else {
            break;
        }
    }
    System.out.println (output.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8070661_8071266_1_13
8070661_8480605_1_20
Title: Check in-memory version of an object against the data in the database 
----------------------------------------

public MemberRecord updateRecord (MemberRecord newRecord) {
    MemberRecord oldRecord = memberRecordDAO.findById (record.getId ());
    Date oldEffectiveDate = oldRecord.getEffectiveDate ();
    if (isEffective (oldEffectiveDate) && ! oldEffectiveDate.equals (newRecord.getEffectiveDate)) {
        throw new IllegalArgumentException ("Cannot change date");
    } else {
        MemberRecord merged = (MemberRecord) session.merge (newRecord);
        return merged;
    }
}
----------------------------------------

public void updateRecord (MemberRecord record) {
    MemberRecord oldRecord = record;
    record = record.clone ();
    getSession ().evict (record);
    getSession ().evict (oldRecord);
    getSession ().refresh (oldRecord);
    Date oldEffectiveDate = oldRecord.getEffectiveDate ();
    if (isEffective (oldEffectiveDate) && ! oldEffectiveDate.equals (record.getEffectiveDate)) {
        throw new IllegalArgumentException ("Cannot change date");
    }
    memberRecordDAO.update (record);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8082041_8082250_14_24
8082041_8185272_13_24
Title: Process output only becomes available after the process has finished 
----------------------------------------

public void doInBackground () throws Exception {
    BufferedReader is = new BufferedReader (new InputStreamReader (p.getInputStream ()));
    while ((line = is.readLine ()) != null) {
        osfile.writeline (line, f);
        publish (new String (line + "\n"));
    }
    System.out.flush ();
    return null;
}
----------------------------------------

protected Void doInBackground () throws Exception {
    Process p = new ProcessBuilder (process).start ();
    BufferedReader is = new BufferedReader (new InputStreamReader (p.getInputStream ()));
    String line;
    while ((line = is.readLine ()) != null) {
        publish (line);
    }
    is.close ();
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8098601_25345387_6_18
8098601_8099344_25_37
Title: Java count occurrence of each item in an array 
----------------------------------------

public static void main (String [] args) {
    String prevItem = "";
    String [] array = {"name1", "name1", "name2", "name2", "name2"};
    Arrays.sort (array);
    for (String item : array) {
        if (! prevItem.equals (item)) {
            mainCount = 0;
            countArray (array, 0, item);
            prevItem = item;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] array = {"name1", "name1", "name2", "name2", "name2", "name3", "name1", "name1", "name2", "name2", "name2", "name3"};
    Arrays.sort (array);
    Integer [] cArr = countItems (array);
    int num = 0;
    for (int i = 0;
    i < cArr.length; i ++) {
        num += cArr [i] - 1;
        System.out.println (array [num] + ": " + cArr [i].toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_38073395_7_19
8102754_39701875_1_14
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    String s = "India is my country. I love India";
    List < String > qw = new ArrayList < String > ();
    Map < String, Integer > mmm = new HashMap < String, Integer > ();
    for (String sp : s.split (" ")) {
        qw.add (sp);
    }
    for (String num : qw) {
        mmm.put (num, Collections.frequency (qw, num));
    }
    System.out.println (mmm);
}
----------------------------------------

public static void main (String [] args) {
    String test = "I am trying to make make make";
    Pattern p = Pattern.compile ("\\w+");
    Matcher m = p.matcher (test);
    HashSet < String > hs = new HashSet < > ();
    int i = 0;
    while (m.find ()) {
        i ++;
        hs.add (m.group ());
    }
    System.out.println ("Total words Count==" + i);
    System.out.println ("Count without Repetation ==" + hs.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_38073395_7_19
8102754_8102921_1_17
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    String s = "India is my country. I love India";
    List < String > qw = new ArrayList < String > ();
    Map < String, Integer > mmm = new HashMap < String, Integer > ();
    for (String sp : s.split (" ")) {
        qw.add (sp);
    }
    for (String num : qw) {
        mmm.put (num, Collections.frequency (qw, num));
    }
    System.out.println (mmm);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Simple Java Word Count Program");
    String str1 = "Today is Holdiay Day";
    int count = 0;
    String [] wCount = str1.split (" ");
    for (int i = 0;
    i < wCount.length; i ++) {
        if (! wCount [i].isEmpty ()) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_38073395_7_19
8102754_8102965_1_18
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    String s = "India is my country. I love India";
    List < String > qw = new ArrayList < String > ();
    Map < String, Integer > mmm = new HashMap < String, Integer > ();
    for (String sp : s.split (" ")) {
        qw.add (sp);
    }
    for (String num : qw) {
        mmm.put (num, Collections.frequency (qw, num));
    }
    System.out.println (mmm);
}
----------------------------------------

public static void main (String...args) throws IOException {
    FileInputStream fstream = new FileInputStream ("c:\\test.txt");
    DataInputStream in = new DataInputStream (fstream);
    BufferedReader br = new BufferedReader (new InputStreamReader (in));
    String strLine;
    int wordcount = 0;
    while ((strLine = br.readLine ()) != null) {
        strLine = strLine.replaceAll ("[\t\b]", "");
        strLine = strLine.replaceAll (" {2,}", " ");
        if (! strLine.isEmpty ()) {
            wordcount = wordcount + strLine.split (" ").length;
        }
    }
    System.out.println (wordcount);
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_39701875_1_14
8102754_8102921_1_17
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    String test = "I am trying to make make make";
    Pattern p = Pattern.compile ("\\w+");
    Matcher m = p.matcher (test);
    HashSet < String > hs = new HashSet < > ();
    int i = 0;
    while (m.find ()) {
        i ++;
        hs.add (m.group ());
    }
    System.out.println ("Total words Count==" + i);
    System.out.println ("Count without Repetation ==" + hs.size ());
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Simple Java Word Count Program");
    String str1 = "Today is Holdiay Day";
    int count = 0;
    String [] wCount = str1.split (" ");
    for (int i = 0;
    i < wCount.length; i ++) {
        if (! wCount [i].isEmpty ()) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_39701875_1_14
8102754_8102965_1_18
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    String test = "I am trying to make make make";
    Pattern p = Pattern.compile ("\\w+");
    Matcher m = p.matcher (test);
    HashSet < String > hs = new HashSet < > ();
    int i = 0;
    while (m.find ()) {
        i ++;
        hs.add (m.group ());
    }
    System.out.println ("Total words Count==" + i);
    System.out.println ("Count without Repetation ==" + hs.size ());
}
----------------------------------------

public static void main (String...args) throws IOException {
    FileInputStream fstream = new FileInputStream ("c:\\test.txt");
    DataInputStream in = new DataInputStream (fstream);
    BufferedReader br = new BufferedReader (new InputStreamReader (in));
    String strLine;
    int wordcount = 0;
    while ((strLine = br.readLine ()) != null) {
        strLine = strLine.replaceAll ("[\t\b]", "");
        strLine = strLine.replaceAll (" {2,}", " ");
        if (! strLine.isEmpty ()) {
            wordcount = wordcount + strLine.split (" ").length;
        }
    }
    System.out.println (wordcount);
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8102754_8102921_1_17
8102754_8102965_1_18
Title: Java word count program 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Simple Java Word Count Program");
    String str1 = "Today is Holdiay Day";
    int count = 0;
    String [] wCount = str1.split (" ");
    for (int i = 0;
    i < wCount.length; i ++) {
        if (! wCount [i].isEmpty ()) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String...args) throws IOException {
    FileInputStream fstream = new FileInputStream ("c:\\test.txt");
    DataInputStream in = new DataInputStream (fstream);
    BufferedReader br = new BufferedReader (new InputStreamReader (in));
    String strLine;
    int wordcount = 0;
    while ((strLine = br.readLine ()) != null) {
        strLine = strLine.replaceAll ("[\t\b]", "");
        strLine = strLine.replaceAll (" {2,}", " ");
        if (! strLine.isEmpty ()) {
            wordcount = wordcount + strLine.split (" ").length;
        }
    }
    System.out.println (wordcount);
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8115054_18298577_1_17
8115054_23074911_17_31
Title: Deserializing a Java Binary Tree from a String 
----------------------------------------

private static Tree < Integer > deserialize (Tree < Integer > tree, String [] stringArray) {
    if (index >= stringArray.length) return null;

    if (stringArray [index].equals ("#")) {
        index ++;
        return null;
    }
    int value = Integer.parseInt (stringArray [index]);
    tree = new Tree < Integer > (value);
    index ++;
    tree.left = deserialize (tree.left, stringArray);
    tree.right = deserialize (tree.right, stringArray);
    return tree;
}
----------------------------------------

private static Node deserialize (String [] stringArray) {
    if (index >= stringArray.length) return null;

    if (stringArray [index].equals ("#")) {
        index ++;
        return null;
    }
    int value = Integer.parseInt (stringArray [index]);
    Node tree = new Node (value);
    index ++;
    tree.left = deserialize (stringArray);
    tree.right = deserialize (stringArray);
    return tree;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8115446_8115453_1_13
8115446_8115483_1_10
Title: How do I check for non-word characters within a single word in Java? 
----------------------------------------

public static boolean hasNonWordCharacter (String s) {
    int offset = 0, strLen = str.length ();
    while (offset < strLen) {
        int curChar = str.codePointAt (offset);
        offset += Character.charCount (curChar);
        if (! Character.isLetter (curChar)) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean hasNonWordCharacter (String s) {
    char [] a = s.toCharArray ();
    for (char c : a) {
        if (! Character.isLetter (c)) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8116443_52857673_4_34
8116443_8117538_16_36
Title: How do you uncompress a split volume zip in Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    List < InputStream > asList = new ArrayList < > ();
    byte [] buf4 = new byte [4];
    PushbackInputStream pis = new PushbackInputStream (new FileInputStream (args [0]), buf4.length);
    asList.add (pis);
    if (pis.read (buf4) != buf4.length) {
        throw new IOException (args [0] + " is too small for a zip file/segment");
    }
    if (! Arrays.equals (buf4, SPANNING_SIGNATURE)) {
        pis.unread (buf4, 0, buf4.length);
    }
    for (int i = 1;
    i < args.length; i ++) {
        asList.add (new FileInputStream (args [i]));
    }
    try (ZipInputStream is = new ZipInputStream (new SequenceInputStream (Collections.enumeration (asList)))) {
        for (ZipEntry entry = null;
        (entry = is.getNextEntry ()) != null;) {
            if (entry.isDirectory ()) {
                new File (entry.getName ()).mkdirs ();
            } else {
                try (OutputStream os = new BufferedOutputStream (new FileOutputStream (entry.getName ()))) {
                    byte [] buffer = new byte [1024];
                    int count = - 1;
                    while ((count = is.read (buffer)) != - 1) {
                        os.write (buffer, 0, count);
                    }
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    ZipInputStream is = new ZipInputStream (new SequenceInputStream (Collections.enumeration (Arrays.asList (new FileInputStream ("test.zip.001"), new FileInputStream ("test.zip.002"), new FileInputStream ("test.zip.003")))));
    try {
        for (ZipEntry entry = null;
        (entry = is.getNextEntry ()) != null;) {
            OutputStream os = new BufferedOutputStream (new FileOutputStream (entry.getName ()));
            try {
                final int bufferSize = 1024;
                byte [] buffer = new byte [bufferSize];
                for (int readBytes = - 1;
                (readBytes = is.read (buffer, 0, bufferSize)) > - 1;) {
                    os.write (buffer, 0, readBytes);
                }
                os.flush ();
            } finally {
                os.close ();
            }
        }
    } finally {
        is.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8118571_8124811_36_50
8118571_8124811_3_26
Title: java gdb runtime 
----------------------------------------

public void run () {
    try {
        final byte [] buffer = new byte [1024];
        for (int length = 0;
        (length = istrm_.read (buffer)) != - 1;) {
            ostrm_.write (buffer, 0, length);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    Process p = null;
    try {
        p = Runtime.getRuntime ().exec ("gdb a.out --interpreter=console");
        new Thread (new SyncPipe (p.getErrorStream (), System.err)).start ();
        new Thread (new SyncPipe (p.getInputStream (), System.out)).start ();
        PrintWriter stdin = new PrintWriter (p.getOutputStream ());
        stdin.flush ();
        stdin.println ("break 4");
        stdin.flush ();
        stdin.println ("break 10");
        stdin.flush ();
        stdin.println ("run");
        stdin.flush ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8119366_13913206_15_37
8119366_17785616_6_33
Title: Sorting HashMap by values 
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unsortMap = new HashMap < String, Integer > ();
    unsortMap.put ("B", 55);
    unsortMap.put ("A", 80);
    unsortMap.put ("D", 20);
    unsortMap.put ("C", 70);
    System.out.println ("Before sorting......");
    printMap (unsortMap);
    System.out.println ("After sorting ascending order......");
    Map < String, Integer > sortedMapAsc = sortByComparator (unsortMap, ASC);
    printMap (sortedMapAsc);
    System.out.println ("After sorting descindeng order......");
    Map < String, Integer > sortedMapDesc = sortByComparator (unsortMap, DESC);
    printMap (sortedMapDesc);
}
----------------------------------------

public static void main (String [] args) {
    final Map < Integer, String > map = new HashMap < Integer, String > ();
    map.put (4, "Mango");
    map.put (3, "Apple");
    map.put (5, "Orange");
    map.put (8, "Fruits");
    map.put (23, "Vegetables");
    map.put (1, "Zebra");
    map.put (5, "Yellow");
    System.out.println (map);
    final HashMapValueSort sort = new HashMapValueSort ();
    final Set < Map.Entry < Integer, String > > entry = map.entrySet ();
    final Comparator < Map.Entry < Integer, String > > comparator = new Comparator < Map.Entry < Integer, String > > () {
        @Override
        public int compare (Map.Entry < Integer, String > o1, Map.Entry < Integer, String > o2) {
            String value1 = o1.getValue ();
            String value2 = o2.getValue ();
            return value1.compareTo (value2);
        }}

    ;
    final SortedSet < Map.Entry < Integer, String > > sortedSet = new TreeSet (comparator);
    sortedSet.addAll (entry);
    final Map < Integer, String > sortedMap = new LinkedHashMap < Integer, String > ();
    for (Map.Entry < Integer, String > entry1 : sortedSet) {
        sortedMap.put (entry1.getKey (), entry1.getValue ());
    }
    System.out.println (sortedMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8119366_13913206_15_37
8119366_32891575_11_33
Title: Sorting HashMap by values 
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > unsortMap = new HashMap < String, Integer > ();
    unsortMap.put ("B", 55);
    unsortMap.put ("A", 80);
    unsortMap.put ("D", 20);
    unsortMap.put ("C", 70);
    System.out.println ("Before sorting......");
    printMap (unsortMap);
    System.out.println ("After sorting ascending order......");
    Map < String, Integer > sortedMapAsc = sortByComparator (unsortMap, ASC);
    printMap (sortedMapAsc);
    System.out.println ("After sorting descindeng order......");
    Map < String, Integer > sortedMapDesc = sortByComparator (unsortMap, DESC);
    printMap (sortedMapDesc);
}
----------------------------------------

public static void main (String [] args) {
    HashMap < String, Integer > hm = new HashMap < String, Integer > ();
    hm.put ("Naveen", 2);
    hm.put ("Santosh", 3);
    hm.put ("Ravi", 4);
    hm.put ("Pramod", 1);
    Set < Entry < String, Integer > > set = hm.entrySet ();
    List < Entry < String, Integer > > list = new ArrayList < Entry < String, Integer > > (set);
    Collections.sort (list, new Comparator < Map.Entry < String, Integer > > () {
        public int compare (Map.Entry < String, Integer > o1, Map.Entry < String, Integer > o2) {
            return o2.getValue ().compareTo (o1.getValue ());
        }}

    );
    for (Entry < String, Integer > entry : list) {
        System.out.println (entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8119366_17785616_6_33
8119366_32891575_11_33
Title: Sorting HashMap by values 
----------------------------------------

public static void main (String [] args) {
    final Map < Integer, String > map = new HashMap < Integer, String > ();
    map.put (4, "Mango");
    map.put (3, "Apple");
    map.put (5, "Orange");
    map.put (8, "Fruits");
    map.put (23, "Vegetables");
    map.put (1, "Zebra");
    map.put (5, "Yellow");
    System.out.println (map);
    final HashMapValueSort sort = new HashMapValueSort ();
    final Set < Map.Entry < Integer, String > > entry = map.entrySet ();
    final Comparator < Map.Entry < Integer, String > > comparator = new Comparator < Map.Entry < Integer, String > > () {
        @Override
        public int compare (Map.Entry < Integer, String > o1, Map.Entry < Integer, String > o2) {
            String value1 = o1.getValue ();
            String value2 = o2.getValue ();
            return value1.compareTo (value2);
        }}

    ;
    final SortedSet < Map.Entry < Integer, String > > sortedSet = new TreeSet (comparator);
    sortedSet.addAll (entry);
    final Map < Integer, String > sortedMap = new LinkedHashMap < Integer, String > ();
    for (Map.Entry < Integer, String > entry1 : sortedSet) {
        sortedMap.put (entry1.getKey (), entry1.getValue ());
    }
    System.out.println (sortedMap);
}
----------------------------------------

public static void main (String [] args) {
    HashMap < String, Integer > hm = new HashMap < String, Integer > ();
    hm.put ("Naveen", 2);
    hm.put ("Santosh", 3);
    hm.put ("Ravi", 4);
    hm.put ("Pramod", 1);
    Set < Entry < String, Integer > > set = hm.entrySet ();
    List < Entry < String, Integer > > list = new ArrayList < Entry < String, Integer > > (set);
    Collections.sort (list, new Comparator < Map.Entry < String, Integer > > () {
        public int compare (Map.Entry < String, Integer > o1, Map.Entry < String, Integer > o2) {
            return o2.getValue ().compareTo (o1.getValue ());
        }}

    );
    for (Entry < String, Integer > entry : list) {
        System.out.println (entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8122782_8123060_61_69
8122782_8124272_5_39
Title: How can I select text over two different JTextField's? 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new CaretPositionTest ();
        }}

    );
}
----------------------------------------

public static void main (final String [] args) {
    final JFrame frame = new JFrame ("Display Keyword Panel");
    final JPanel panel = new JPanel ();
    panel.setLayout (new BoxLayout (panel, BoxLayout.Y_AXIS));
    text1.setBorder (null);
    text1.setOpaque (false);
    text1.setEditable (false);
    text2.setBorder (null);
    text2.setOpaque (false);
    text2.setEditable (false);
    text1.getInputMap ().put (KeyStroke.getKeyStroke ('G', KeyEvent.CTRL_DOWN_MASK), "copyAll");
    text1.getActionMap ().put ("copyAll", new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent e) {
            StringBuilder s = new StringBuilder ();
            s.append (text1.getText ()).append ("\n").append (text2.getText ());
            System.out.println (s.toString ());
        }}

    );
    panel.add (text1);
    panel.add (text2);
    frame.setLayout (new BorderLayout ());
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().add (panel, BorderLayout.CENTER);
    frame.setLocation (450, 400);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8136224_8136632_13_31
8136224_8136632_35_44
Title: How to write bytes by byte and display it continuously 
----------------------------------------

public void run () {
    try {
        byte [] encrypted = new byte [1024];
        byte [] decrypted = new byte [1024];
        while (true) {
            int encryptedBytes = in.read (encrypted);
            int decryptedBytes = 0;
            for (int i = 0;
            i < decryptedBytes; i ++) queue.addFirst (decrypted [i]);

        }
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            out.write (queue.takeLast ());
        }
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8142195_31004011_5_17
8142195_8142259_2_12
Title: Creating a random array of type int. Java 
----------------------------------------

public static void main (String [] args) {
    Random random = new Random ();
    int numbers [] = new int [10];
    for (int i = 0;
    i < 10; i ++) {
        int number = random.nextInt (100);
        System.out.println (number);
        numbers [i] = number;
    }
    for (int j = 0;
    j < numbers.length; j ++) {
        System.out.println (numbers [j]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] list = new int [10];
    for (int i = 0;
    i < 10; i ++) {
        int n = (int) (Math.random () * 9 + 1);
        list [i] = n;
        System.out.println (list [i] + " ");
    }
    QuickSort.quicksort (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8151435_27436743_1_11
8151435_48308700_1_22
Title: Integer to binary array 
----------------------------------------

public static boolean [] convertToBinary (int b) {
    boolean [] binArray = new boolean [7];
    boolean bin;
    for (int i = 6;
    i >= 0; i --) {
        if (b % 2 == 1) bin = true;
        else bin = false;

        binArray [i] = bin;
        b /= 2;
    }
    return binArray;
}
----------------------------------------

public static boolean [] convertToBinary (int number) {
    int binExpo = 0;
    int bin = 1;
    while (bin < number) {
        bin = bin * 2;
        binExpo ++;
    }
    bin = bin / 2;
    boolean [] binary = new boolean [binExpo];
    binExpo --;
    while (binExpo >= 0) {
        if (bin <= number) {
            binary [binExpo] = true;
            number = number - bin;
            bin = bin / 2;
        } else {
            binary [binExpo] = false;
        }
        binExpo --;
    }
    return binary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8187639_37896288_68_80
8187639_8187799_64_76
Title: JTable with titled rows and columns 
----------------------------------------

public Component getTableCellRendererComponent (JTable x, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    boolean selected = table.getSelectionModel ().isSelectedIndex (row);
    Component component = table.getTableHeader ().getDefaultRenderer ().getTableCellRendererComponent (table, value, false, false, - 1, - 2);
    ((JLabel) component).setHorizontalAlignment (SwingConstants.CENTER);
    if (selected) {
        component.setFont (component.getFont ().deriveFont (Font.BOLD));
        component.setForeground (Color.red);
    } else {
        component.setFont (component.getFont ().deriveFont (Font.PLAIN));
    }
    return component;
}
----------------------------------------

public Component getTableCellRendererComponent (JTable x, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
    boolean selected = table.getSelectionModel ().isSelectedIndex (row);
    Component component = table.getTableHeader ().getDefaultRenderer ().getTableCellRendererComponent (table, value, false, false, - 1, - 2);
    ((JLabel) component).setHorizontalAlignment (SwingConstants.CENTER);
    if (selected) {
        component.setFont (component.getFont ().deriveFont (Font.BOLD));
        component.setForeground (Color.red);
    } else {
        component.setFont (component.getFont ().deriveFont (Font.PLAIN));
    }
    return component;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8189466_11452848_20_29
8189466_28705242_22_31
Title: Why am I not getting a java.util.ConcurrentModificationException in this example? 
----------------------------------------

public static void main (String...args) {
    remove (Integer.valueOf (2));
    Integer remove = Integer.valueOf (3);
    for (Integer integer : integerList) {
        if (integer.equals (remove)) {
            integerList.remove (integer);
        }
    }
}
----------------------------------------

public static void main (String...args) {
    remove (Integer.valueOf (2));
    Integer remove = Integer.valueOf (3);
    for (Integer integer : integerList) {
        if (integer.equals (remove)) {
            integerList.remove (integer);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8196530_8196787_18_31
8196530_8198788_9_46
Title: "Java - Vertical ""FlowLayout"" with Horizontal Scrolling" 
----------------------------------------

public CustomFrame () {
    super ("Custom JFrame");
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    pane = new JPanel ();
    pane.setLayout (new BoxLayout (pane, BoxLayout.X_AXIS));
    JScrollPane scr = new JScrollPane (pane);
    add (scr);
    for (int i = 1;
    i <= 15; i ++) addNewLabel ("Label " + i);

    setSize (200, 130);
    setVisible (true);
}
----------------------------------------

public CustomFrame () {
    super ("Custom JFrame");
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    pane = new JPanel ();
    pane.setLayout (new BoxLayout (pane, BoxLayout.X_AXIS));
    JScrollPane scrollPane = new JScrollPane (pane);
    scrollPane.setHorizontalScrollBarPolicy (JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
    scrollPane.setVerticalScrollBarPolicy (JScrollPane.VERTICAL_SCROLLBAR_NEVER);
    add (scrollPane);
    setSize (200, 130);
    this.addComponentListener (new ComponentListener () {
        @Override
        public void componentShown (ComponentEvent e) {
        }@Override
        public void componentResized (ComponentEvent e) {
            reAddAllLabels ();
            repaint ();
        }@Override
        public void componentMoved (ComponentEvent e) {
        }@Override
        public void componentHidden (ComponentEvent e) {
        }}

    );
    setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8196530_8198788_95_106
8196530_8199584_458_491
Title: "Java - Vertical ""FlowLayout"" with Horizontal Scrolling" 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            CustomFrame customFrame = new CustomFrame ();
            for (int i = 1;
            i <= 20; i ++) {
                customFrame.addNewLabel ("Label " + i);
            }
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    JPanel main = new JPanel (new BorderLayout ());
    final JPanel buttons = new JPanel (new VerticalFlowLayout ());
    main.add (buttons, BorderLayout.CENTER);
    for (int i = 0;
    i < 7; i ++) {
        buttons.add (new JRadioButton ("button " + i));
    }
    JButton button = new JButton ("Add Radio Button");
    main.add (button, BorderLayout.SOUTH);
    button.addActionListener (new ActionListener () {
        private int i = 8;
        public void actionPerformed (ActionEvent e) {
            buttons.add (new JRadioButton ("button R Us" + i ++));
            buttons.revalidate ();
        }}

    );
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (main);
    frame.setSize (300, 300);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8200873_8200926_19_30
8200873_8200953_22_33
Title: Employee name and salary using array 
----------------------------------------

public static void main (String [] args) {
    Employee [] array = new Employee [7];
    Scanner sc = new Scanner (System.in);
    for (int i = 0;
    i < 7; i ++) {
        System.out.printf ("Please enter your employee number:");
        int e = sc.nextInt ();
        System.out.printf ("Please enter your salary:");
        double s = sc.nextDouble ();
        array [i] = new Employee (e, s);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Employee > employeeList = new ArrayList < Employee > ();
    while (employeeList.size () < 7) {
        Scanner sc = new Scanner (System.in);
        System.out.printf ("Please enter your employee number:");
        int e = sc.nextInt ();
        System.out.printf ("Please enter your salary:");
        double s = sc.nextDouble ();
        employeeList.add (new Employee (e, s));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8213116_8213203_12_25
8213116_8224179_13_25
Title: How to add a lock in this situation? 
----------------------------------------

public object getLock (String id) {
    synchronized (this) {
        if (! this.weakRefDictionary.containsKey (id)) this.weakRefDictionary.put (id, new WeakReference (null));

        Object lock = this.weakRefDictionary.get (id).Target;
        if (lock == null) {
            lock = new Object ();
            this.weakRefDictionary.get (id).Target = lock;
        }
        if (this.weakRefDictionary.size () > this._last_check_size + this._cleanup_size) this._do_cleanup ();

        return lock;
    }
}
----------------------------------------

public Object getLock () {
    synchronized (LOCKS) {
        Object lock = LOCKS.get (uuid);
        if (lock == null) {
            lock = new Object ();
            LOCKS.put (uuid, lock);
        }
        return lock;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8219687_8219805_33_44
8219687_8219805_47_59
Title: "I want to get words in a JFrame2 go back to JFrame1 and then go to JFrame3 with these words. How can I do it?" 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel1 == null) {
        panel1 = new Panel1 ();
        dialog1 = new JDialog (frame, "Dialog 1", true);
        dialog1.getContentPane ().add (panel1);
        dialog1.pack ();
        Point pt = frame.getLocation ();
        dialog1.setLocation (pt.x - 100, pt.y - 100);
    }
    dialog1.setVisible (true);
    words = panel1.getWords ();
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel2 == null) {
        panel2 = new Panel1 ();
        dialog2 = new JDialog (frame, "Dialog 2", true);
        dialog2.getContentPane ().add (panel2);
        dialog2.pack ();
        dialog2.setLocationRelativeTo (frame);
        Point pt = frame.getLocation ();
        dialog2.setLocation (pt.x + 100, pt.y + 100);
    }
    panel2.setWords (words);
    dialog2.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8219687_8219805_33_44
8219687_8219914_62_88
Title: "I want to get words in a JFrame2 go back to JFrame1 and then go to JFrame3 with these words. How can I do it?" 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel1 == null) {
        panel1 = new Panel1 ();
        dialog1 = new JDialog (frame, "Dialog 1", true);
        dialog1.getContentPane ().add (panel1);
        dialog1.pack ();
        Point pt = frame.getLocation ();
        dialog1.setLocation (pt.x - 100, pt.y - 100);
    }
    dialog1.setVisible (true);
    words = panel1.getWords ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String s = e.getActionCommand ();
    if (s.equals (BUTTON1_COMMAND)) {
        if (! flag) {
            frame1.setVisible (false);
            frame2.setVisible (true);
            flag = true;
        } else {
            frame1.setVisible (false);
            frame3.setVisible (true);
            lbl.setText ("The word is: " + message);
        }
    } else if (s.equals (BUTTON2_COMMAND)) {
        frame2.setVisible (false);
        frame1.setVisible (true);
        message = txtFiled.getText ();
        btn1.setText ("Open JFrame #3");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8219687_8219805_47_59
8219687_8219914_62_88
Title: "I want to get words in a JFrame2 go back to JFrame1 and then go to JFrame3 with these words. How can I do it?" 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel2 == null) {
        panel2 = new Panel1 ();
        dialog2 = new JDialog (frame, "Dialog 2", true);
        dialog2.getContentPane ().add (panel2);
        dialog2.pack ();
        dialog2.setLocationRelativeTo (frame);
        Point pt = frame.getLocation ();
        dialog2.setLocation (pt.x + 100, pt.y + 100);
    }
    panel2.setWords (words);
    dialog2.setVisible (true);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String s = e.getActionCommand ();
    if (s.equals (BUTTON1_COMMAND)) {
        if (! flag) {
            frame1.setVisible (false);
            frame2.setVisible (true);
            flag = true;
        } else {
            frame1.setVisible (false);
            frame3.setVisible (true);
            lbl.setText ("The word is: " + message);
        }
    } else if (s.equals (BUTTON2_COMMAND)) {
        frame2.setVisible (false);
        frame1.setVisible (true);
        message = txtFiled.getText ();
        btn1.setText ("Open JFrame #3");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
822322_22234087_31_48
822322_26554542_12_33
Title: How to implement a Map with multiple keys? 
----------------------------------------

public static void main (String...args) {
    boolean keyBoolean = true;
    double keyDouble = 1d;
    Object keyObject = new Object ();
    InnumerableKey doubleKey = new InnumerableKey (keyBoolean, keyDouble);
    InnumerableKey tripleKey = new InnumerableKey (keyBoolean, keyDouble, keyObject);
    sampleMap.put (doubleKey, "DOUBLE KEY");
    sampleMap.put (tripleKey, "TRIPLE KEY");
    System.out.println (sampleMap.get (new InnumerableKey (true, 1d)));
    System.out.println (sampleMap.get (new InnumerableKey (true, 1d, keyObject)));
    System.out.println (sampleMap.get (new InnumerableKey (keyObject, 1d, true)));
}
----------------------------------------

public static void main (String [] args) {
    String key1 = "A";
    String key2 = "B";
    String key3 = "C";
    Bond bond = new Bond ();
    bond.setName ("James Bond Mutual Fund");
    Map < String, Bond > bondsById = new HashMap < > ();
    bondsById.put (key1, bond);
    bondsById.put (key2, bond);
    bondsById.put (key3, bond);
    bond.setName ("Alfred Hitchcock");
    for (Map.Entry < String, Bond > entry : bondsById.entrySet ()) {
        System.out.println (entry.getValue ().getName ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8225639_17352795_7_25
8225639_8225675_1_14
Title: Adding user defined objects to ArrayList in Java 
----------------------------------------

public static void main (String args []) {
    ArrayList < MyObject > l_list = new ArrayList < MyObject > ();
    MyObject l_myObj = new MyObject ();
    l_myObj.holder = new MyObject2 [6];
    for (int i = 0;
    i < 5; i ++) {
        l_myObj.holder [i] = new MyObject2 ();
        l_myObj.holder [i].value = i + 5;
        l_list.add (l_myObj);
    }
    for (int j = 0;
    j < 5; j ++) {
        System.out.println ("value is: " + l_list.get (j).holder [j].value);
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < MyObj > al = new ArrayList < MyObj > ();
    int a, b;
    for (int i = 0;
    i < 5; i ++) {
        MyObj ob1 = new MyObj ();
        ob1.iX = i + 5;
        al.add (ob1);
    }
    for (int j = 0;
    j < 5; j ++) System.out.println ("iX: " + al.get (j).iX);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8262881_8262886_1_29
8262881_8262968_13_41
Title: No text shown in JTextArea upon event 
----------------------------------------

public void go () {
    JFrame frame = new JFrame ("Rock Paper Scissors");
    text = new JTextArea (13, 20);
    JPanel panel1 = new JPanel ();
    JPanel panel2 = new JPanel ();
    b1 = new JButton (choices [0]);
    b2 = new JButton (choices [1]);
    b3 = new JButton (choices [2]);
    b1.addActionListener (this);
    b2.addActionListener (this);
    b3.addActionListener (this);
    text.setEditable (false);
    JScrollPane scroller = new JScrollPane (text);
    scroller.setVerticalScrollBarPolicy (ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    panel1.add (scroller);
    panel2.add (b1);
    panel2.add (b2);
    panel2.add (b3);
    frame.getContentPane ().add (BorderLayout.CENTER, panel1);
    frame.getContentPane ().add (BorderLayout.SOUTH, panel2);
    frame.setSize (350, 300);
    frame.setVisible (true);
}
----------------------------------------

public void go () {
    JFrame frame = new JFrame ("Rock Paper Scissors");
    text = new JTextArea (13, 20);
    JPanel panel1 = new JPanel ();
    JPanel panel2 = new JPanel ();
    b1 = new JButton (choices [0]);
    b2 = new JButton (choices [1]);
    b3 = new JButton (choices [2]);
    b1.addActionListener (this);
    b2.addActionListener (this);
    b3.addActionListener (this);
    text.setEditable (false);
    JScrollPane scroller = new JScrollPane (text);
    scroller.setVerticalScrollBarPolicy (ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    panel1.add (scroller);
    panel2.add (b1);
    panel2.add (b2);
    panel2.add (b3);
    frame.getContentPane ().add (BorderLayout.CENTER, panel1);
    frame.getContentPane ().add (BorderLayout.SOUTH, panel2);
    frame.setSize (350, 300);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8274966_8275195_506_530
8274966_8275195_562_594
Title: Reading a byte array from Socket 
----------------------------------------

public int read () throws IOException {
    synchronized (CircularByteBuffer.this) {
        while (true) {
            if (inputStreamClosed) throw new IOException ("InputStream has been closed; cannot read from a closed InputStream.");

            int available = CircularByteBuffer.this.available ();
            if (available > 0) {
                int result = buffer [readPosition] & 0xff;
                readPosition ++;
                if (readPosition == buffer.length) {
                    readPosition = 0;
                }
                ensureMark ();
                return result;
            } else if (outputStreamClosed) {
                return - 1;
            } else {
                try {
                    CircularByteBuffer.this.wait ();
                } catch (Exception x) {
                    throw new IOException ("Blocking read operation interrupted.");
                }
            }

        }
    }
}
----------------------------------------

public int read (byte [] cbuf, int off, int len) throws IOException {
    synchronized (CircularByteBuffer.this) {
        while (true) {
            if (inputStreamClosed) throw new IOException ("InputStream has been closed; cannot read from a closed InputStream.");

            int available = CircularByteBuffer.this.available ();
            if (available > 0) {
                int length = Math.min (len, available);
                int firstLen = Math.min (length, buffer.length - readPosition);
                int secondLen = length - firstLen;
                System.arraycopy (buffer, readPosition, cbuf, off, firstLen);
                if (secondLen > 0) {
                    System.arraycopy (buffer, 0, cbuf, off + firstLen, secondLen);
                    readPosition = secondLen;
                } else {
                    readPosition += length;
                }
                if (readPosition == buffer.length) {
                    readPosition = 0;
                }
                ensureMark ();
                return length;
            } else if (outputStreamClosed) {
                return - 1;
            } else {
                try {
                    CircularByteBuffer.this.wait ();
                } catch (Exception x) {
                    throw new IOException ("Blocking read operation interrupted.");
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8274966_8275195_736_777
8274966_8275195_793_823
Title: Reading a byte array from Socket 
----------------------------------------

public void write (byte [] cbuf, int off, int len) throws IOException {
    synchronized (CircularByteBuffer.this) {
        while (len > 0) {
            if (outputStreamClosed) throw new IOException ("OutputStream has been closed; cannot write to a closed OutputStream.");

            if (inputStreamClosed) throw new IOException ("Buffer closed by InputStream; cannot write to a closed buffer.");

            while (infinite && spaceLeft () < len) {
                resize ();
            }
            while (! infinite && spaceLeft () < len) {
                try {
                    CircularByteBuffer.this.wait ();
                } catch (InterruptedException e) {
                }
            }
            if (! blockingWrite && spaceLeft () < len) throw new BufferOverflowException ();

            int realLen = Math.min (len, spaceLeft ());
            int firstLen = Math.min (realLen, buffer.length - writePosition);
            int secondLen = Math.min (realLen - firstLen, buffer.length - markPosition - 1);
            int written = firstLen + secondLen;
            if (firstLen > 0) {
                System.arraycopy (cbuf, off, buffer, writePosition, firstLen);
            }
            if (secondLen > 0) {
                System.arraycopy (cbuf, off + firstLen, buffer, 0, secondLen);
                writePosition = secondLen;
            } else {
                writePosition += written;
            }
            if (writePosition == buffer.length) {
                writePosition = 0;
            }
            off += written;
            len -= written;
        }
        CircularByteBuffer.this.notifyAll ();
    }
}
----------------------------------------

public void write (int c) throws IOException {
    boolean written = false;
    synchronized (CircularByteBuffer.this) {
        while (! written) {
            if (outputStreamClosed) throw new IOException ("OutputStream has been closed; cannot write to a closed OutputStream.");

            if (inputStreamClosed) throw new IOException ("Buffer closed by InputStream; cannot write to a closed buffer.");

            int spaceLeft = spaceLeft ();
            while (infinite && spaceLeft < 1) {
                resize ();
                spaceLeft = spaceLeft ();
            }
            if (! blockingWrite && spaceLeft < 1) throw new BufferOverflowException ();

            if (spaceLeft > 0) {
                buffer [writePosition] = (byte) (c & 0xff);
                writePosition ++;
                if (writePosition == buffer.length) {
                    writePosition = 0;
                }
                written = true;
            }
        }
        if (! written) {
            try {
                CircularByteBuffer.this.wait (100);
            } catch (Exception x) {
                throw new IOException ("Waiting for available space in buffer interrupted.");
            }
        }
        CircularByteBuffer.this.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8284710_8284866_1_18
8284710_8285008_1_27
Title: How can I count these values? 
----------------------------------------

public int execToken (File f) throws Exception {
    BufferedReader br = new BufferedReader (new FileReader (f));
    int count = 0;
    String line;
    String previousLine = "";
    while ((line = br.readLine ()) != null) {
        if (line.startsWith ("CREATE TRMD")) {
            if (! previousLine.isEmpty ()) {
                count += (previousLine.contains ("LAYID=LY_00") ? 2 : 1);
            }
            previousLine = line;
        } else {
            previousLine = "";
        }
    }
    return count;
}
----------------------------------------

public int execToken (File f) throws Exception {
    BufferedReader br = new BufferedReader (new FileReader (f));
    String line;
    int count = 0;
    Pattern layID = Pattern.compile ("LAYID=LY_\\d+");
    Matcher matcher = null;
    boolean isSingle = true;
    while ((line = br.readLine ()) != null) {
        if (line.contains ("LAYID=LY_00")) {
            isSingle = false;
            continue;
        }
        matcher = layID.matcher (line);
        if (matcher.find ()) {
            count ++;
            if (! isSingle) count ++;

        }
        isSingle = true;
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8288479_43457417_32_43
8288479_8289614_17_29
Title: How to solve the producer-consumer using semaphores? 
----------------------------------------

public void run () {
    for (;;) {
        try {
            semaphoreProducer.acquire ();
            System.out.println ("Produced : " + Thread.currentThread ().getName ());
            semaphoreConsumer.release ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            sem.acquire (1);
            mutex.acquire ();
            System.out.println ("Consumer \"" + name + "\" read: " + list.removeFirst ());
            mutex.release ();
        }
    } catch (Exception x) {
        x.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8288479_43457417_32_43
8288479_8289614_33_48
Title: How to solve the producer-consumer using semaphores? 
----------------------------------------

public void run () {
    for (;;) {
        try {
            semaphoreProducer.acquire ();
            System.out.println ("Produced : " + Thread.currentThread ().getName ());
            semaphoreConsumer.release ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        int N = 0;
        while (true) {
            mutex.acquire ();
            list.add (new Integer (N ++));
            mutex.release ();
            sem.release (1);
            Thread.sleep (500);
        }
    } catch (Exception x) {
        x.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8288479_43457417_59_70
8288479_8289614_17_29
Title: How to solve the producer-consumer using semaphores? 
----------------------------------------

public void run () {
    for (;;) {
        try {
            semaphoreConsumer.acquire ();
            System.out.println ("Consumed : " + Thread.currentThread ().getName ());
            semaphoreProducer.release ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            sem.acquire (1);
            mutex.acquire ();
            System.out.println ("Consumer \"" + name + "\" read: " + list.removeFirst ());
            mutex.release ();
        }
    } catch (Exception x) {
        x.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8288479_43457417_59_70
8288479_8289614_33_48
Title: How to solve the producer-consumer using semaphores? 
----------------------------------------

public void run () {
    for (;;) {
        try {
            semaphoreConsumer.acquire ();
            System.out.println ("Consumed : " + Thread.currentThread ().getName ());
            semaphoreProducer.release ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        int N = 0;
        while (true) {
            mutex.acquire ();
            list.add (new Integer (N ++));
            mutex.release ();
            sem.release (1);
            Thread.sleep (500);
        }
    } catch (Exception x) {
        x.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8290340_8290423_26_36
8290340_8290584_42_59
Title: Toggle read-only in Java 
----------------------------------------

public void mouseClicked (MouseEvent e) {
    if (e.getComponent () instanceof JLabel) {
        count ++;
        if (count >= 2) {
            System.out.println ("clicked 2 times on labels");
            count = 0;
        }
    } else {
        count = 0;
    }
}
----------------------------------------

public void mouseClicked (MouseEvent e) {
    if (e.getComponent () instanceof JComponent) {
        JComponent jComponent = (JComponent) e.getComponent ();
        Object propertyValue = jComponent.getClientProperty (JComponentActivationStatus.PROPERTY_KEY);
        if (JComponentActivationStatus.ACTIVE.equals (propertyValue)) {
            propertyValue = JComponentActivationStatus.INACTIVE;
        } else {
            propertyValue = JComponentActivationStatus.ACTIVE;
        }
        jComponent.putClientProperty (JComponentActivationStatus.PROPERTY_KEY, propertyValue);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8291246_8291309_100_139
8291246_8291309_148_172
Title: How to open file in a JTextArea and write and read with FileReader and FileWriter classes 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    ta.setText ("");
    fc = new JFileChooser ();
    fc.setFileSelectionMode (JFileChooser.FILES_ONLY);
    fc.setSelectedFile (fc.getCurrentDirectory ());
    fc.setDialogTitle ("Directory Chooser");
    fc.setMultiSelectionEnabled (false);
    int retVal = fc.showOpenDialog (ClassChooser.this);
    if (retVal == fc.APPROVE_OPTION) {
        file = fc.getSelectedFile ();
        currentFileBeingEdited = file.getAbsolutePath ();
        try {
            br = new BufferedReader (new FileReader (file));
        } catch (FileNotFoundException e1) {
            e1.printStackTrace ();
        }
        try {
            line = br.readLine ();
        } catch (IOException e1) {
            e1.printStackTrace ();
        }
        while (line != null) {
            ta.append (line + "\n");
            try {
                line = br.readLine ();
            } catch (IOException e1) {
                e1.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String menuName;
    menuName = e.getActionCommand ();
    if (menuName.equals ("Exit")) {
        System.exit (0);
    } else if ("Save".equalsIgnoreCase (menuName)) {
        PrintWriter pw = null;
        try {
            pw = new PrintWriter (new File (currentFileBeingEdited));
            pw.println (ta.getText ());
        } catch (FileNotFoundException e1) {
            e1.printStackTrace ();
        } finally {
            if (pw != null) {
                pw.close ();
            }
        }
    } else {
        response.setText ("Menu Item '" + menuName + "' is selected.");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8309802_52723044_1_47
8309802_8310585_1_32
Title: How can I implement the functionality of awt.CardLayout in my javaFX 2.0 application? 
----------------------------------------

public void start (Stage stage) {
    VBox vbox = new VBox (5);
    RadioButton btn = new Button ("1");
    RadioButton btn2 = new Button ("2");
    ToggleGroup group = new ToggleGroup ();
    btn.setToggleGroup (group);
    btn2.setToggleGroup (group);
    btn.getStyleClass ().remove ("radio-button");
    btn.getStyleClass ().add ("toggle-button");
    btn2.getStyleClass ().remove ("radio-button");
    btn2.getStyleClass ().add ("toggle-button");
    final Pane cardsPane = new StackPane ();
    final Group card1 = new Group (new Text (25, 25, "Card 1"));
    final Group card2 = new Group (new Text (25, 25, "Card 2"));
    cardsPane.getChildren ().addAll (card1, card2);
    btn.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent t) {
            showNodeHideNodes (cardsPane.getChildren (), card1);
        }}

    );
    btn2.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent t) {
            showNodeHideNodes (cardsPane.getChildren (), card2);
        }}

    );
    vbox.getChildren ().addAll (btn, btn2, cardsPane);
    stage.setScene (new Scene (vbox));
    stage.setWidth (200);
    stage.setHeight (200);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    VBox vbox = new VBox (5);
    Button btn = new Button ("1");
    Button btn2 = new Button ("2");
    final Pane cardsPane = new StackPane ();
    final Group card1 = new Group (new Text (25, 25, "Card 1"));
    final Group card2 = new Group (new Text (25, 25, "Card 2"));
    btn.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent t) {
            cardsPane.getChildren ().clear ();
            cardsPane.getChildren ().add (card1);
        }}

    );
    btn2.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent t) {
            cardsPane.getChildren ().clear ();
            cardsPane.getChildren ().add (card2);
        }}

    );
    vbox.getChildren ().addAll (btn, btn2, cardsPane);
    stage.setScene (new Scene (vbox));
    stage.setWidth (200);
    stage.setHeight (200);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8309897_22798563_1_11
8309897_8310228_10_17
Title: How to get node content of XML with Dom4j in java 
----------------------------------------

public static String getContent (Element element) {
    if (element.isTextOnly ()) return element.getText ();

    StringBuilder sb = new StringBuilder ();
    Element currElement = null;
    for (Iterator < Element > iterator = element.elementIterator ();
    iterator.hasNext ();) {
        currElement = iterator.next ();
        sb.append (currElement.asXML ());
    }
    return sb.toString ();
}
----------------------------------------

private static String getContent (Element element) {
    StringBuilder builder = new StringBuilder ();
    for (Iterator < Element > i = element.elementIterator ();
    i.hasNext ();) {
        Element e = i.next ();
        builder.append (e.asXML ());
    }
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8316020_8316959_13_22
8316020_8321728_10_21
Title: JUnit @Ignore all other tests (@IgnoreOther ?) 
----------------------------------------

public Statement apply (final Statement statement, final FrameworkMethod method, final Object target) {
    return new Statement () {
        @Override
        public void evaluate () throws Throwable {
            if (applyMethod.equals (method.getName ())) {
                statement.evaluate ();
            }
        }}

    ;
}
----------------------------------------

public Statement apply (final Statement statement, final Description description) {
    return new Statement () {
        @Override
        public void evaluate () throws Throwable {
            if (applyMethod.equals (description.getMethodName ())) {
                statement.evaluate ();
            }
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8318693_38287411_17_49
8318693_8319145_22_46
Title: Add an element around root element of given XML file that is stored in org.w3c.dom.Document 
----------------------------------------

public static void main (String argv []) {
    try {
        DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder docBuilder = docFactory.newDocumentBuilder ();
        Document doc = docBuilder.newDocument ();
        Element rootElement = doc.createElement ("root");
        doc.appendChild (rootElement);
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (doc);
        StreamResult result = new StreamResult (new File ("build.xml"));
        transformer.transform (source, result);
        System.out.println ("File saved!");
    } catch (ParserConfigurationException pce) {
        pce.printStackTrace ();
    } catch (TransformerException tfe) {
        tfe.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    InputStream is = new FileInputStream ("test.xml");
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder builder = factory.newDocumentBuilder ();
    Document oldDoc = builder.parse (is);
    Node oldRoot = oldDoc.getDocumentElement ();
    Document newDoc = builder.newDocument ();
    Element newRoot = newDoc.createElement ("newroot");
    newDoc.appendChild (newRoot);
    newRoot.appendChild (newDoc.importNode (oldRoot, true));
    ByteArrayOutputStream out = new ByteArrayOutputStream ();
    DOMSource domSource = new DOMSource (newDoc);
    Writer writer = new OutputStreamWriter (out);
    StreamResult result = new StreamResult (writer);
    TransformerFactory tf = TransformerFactory.newInstance ();
    Transformer transformer = tf.newTransformer ();
    transformer.transform (domSource, result);
    writer.flush ();
    InputStream isNewXML = new ByteArrayInputStream (out.toByteArray ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8344177_8345170_37_47
8344177_8345170_7_22
Title: java wait all threads in pool 
----------------------------------------

public void run () {
    while (! Thread.interrupted ()) {
        try {
            pauseManager.pauseIfNeeded ();
            System.out.println (name + " is running");
            Thread.sleep (1000L);
        } catch (InterruptedException e) {
            throw new RuntimeException (e);
        }
    }
}
----------------------------------------

public void run () {
    JToggleButton playPauseButton = new JToggleButton (new AbstractAction ("Pause") {
        public void actionPerformed (final ActionEvent e) {
            JToggleButton source = (JToggleButton) e.getSource ();
            if (source.isSelected ()) {
                pauseManager.start ();
                source.setText ("Pause");
            } else {
                pauseManager.pause ();
                source.setText ("Play");
            }
        }}

    );
    JOptionPane.showMessageDialog (null, playPauseButton, "WorkerPauseManager Demo", JOptionPane.PLAIN_MESSAGE);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_101_120
8345529_8346867_124_143
Title: Java - Parsing xml using DOM 
----------------------------------------

public void write (File file, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (file);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------

public void write (Writer writer, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (writer);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_101_120
8345529_8346867_80_99
Title: Java - Parsing xml using DOM 
----------------------------------------

public void write (File file, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (file);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------

public void write (OutputStream os, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (os);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_124_143
8345529_8346867_80_99
Title: Java - Parsing xml using DOM 
----------------------------------------

public void write (Writer writer, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (writer);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------

public void write (OutputStream os, XmlNode node) throws XmlException {
    try {
        if (document == null) {
            document = createNewDocument ();
        }
        document.appendChild (node.getNode ());
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (document);
        StreamResult result = new StreamResult (os);
        transformer.transform (source, result);
    } catch (TransformerConfigurationException e) {
        throw new XmlException ("Error in configuration of XML writer", e);
    } catch (TransformerException e) {
        throw new XmlException ("Error in writing XML", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_26_42
8345529_8346867_44_60
Title: Java - Parsing xml using DOM 
----------------------------------------

public XmlNode parse (InputStream is) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (is);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in reading InputStream", e);
    }
}
----------------------------------------

public XmlNode parse (String uri) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (uri);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in opening URI", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_26_42
8345529_8346867_62_78
Title: Java - Parsing xml using DOM 
----------------------------------------

public XmlNode parse (InputStream is) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (is);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in reading InputStream", e);
    }
}
----------------------------------------

public XmlNode parse (File file) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (file);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in opening file", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8345529_8346867_44_60
8345529_8346867_62_78
Title: Java - Parsing xml using DOM 
----------------------------------------

public XmlNode parse (String uri) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (uri);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in opening URI", e);
    }
}
----------------------------------------

public XmlNode parse (File file) throws XmlException {
    try {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        document = dBuilder.parse (file);
        document.getDocumentElement ().normalize ();
        XmlNode node = new XmlNode (document.getDocumentElement ());
        return node;
    } catch (ParserConfigurationException e) {
        throw new XmlException ("Error in configuration of XML parser", e);
    } catch (SAXException e) {
        throw new XmlException ("Error in parsing XML document", e);
    } catch (IOException e) {
        throw new XmlException ("Error in opening file", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8352687_8352720_1_18
8352687_8352738_1_16
Title: Removing and replacing arrays 
----------------------------------------

public void removeNegatives () {
    int numberOfNegative = 0;
    for (int i = 0;
    i < numbers.length; i ++) if (numbers [i] < 0) numberOfNegative ++;

    int [] numbers2 = new int [numbers.length - numberOfNegative];
    int count = 0;
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] >= 0) {
            numbers2 [count] = numbers [i];
            System.out.println (numbers2 [count]);
            count ++;
        }
    }
    numbers = numbers2;
}
----------------------------------------

public void removeNegatives () {
    int numberOfNegative = 0;
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] < 0) numberOfNegative ++;

    }
    int [] numbers2 = new int [numbers.length - numberOfNegative];
    int count = 0;
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] >= 0) numbers2 [count ++] = numbers [i];

    }
    numbers = numbers2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
835648_835681_2_22
835648_839729_5_16
Title: "All possible values of int from the smallest to the largest using Java" 
----------------------------------------

public static void main (String [] args) {
    StringBuilder buffer = new StringBuilder (10000000);
    int counter = 0;
    for (int i = Integer.MIN_VALUE;
    i < Integer.MAX_VALUE; i ++) {
        buffer.append (i).append ('\n');
        if (++ counter > 5000000) {
            System.out.print (buffer);
            buffer.delete (0, buffer.length () - 1);
            counter = 0;
        }
    }
    buffer.append (Integer.MAX_VALUE);
    System.out.println (buffer);
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    HashSet < Integer > found = new HashSet < Integer > ();
    long range = Math.abs (Integer.MAX_VALUE - (long) Integer.MIN_VALUE);
    while (found.size () < range) {
        int n = rand.nextInt ();
        if (! found.contains (n)) {
            found.add (n);
            System.out.println (n);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8362640_31152383_12_26
8362640_44371680_3_24
Title: Java - Selection Sort Algorithm 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of elements of the array");
    int n = in.nextInt ();
    int [] a = new int [n];
    System.out.println ("Enter the integer array of elements");
    for (int i = 0;
    i < n; i ++) {
        a [i] = in.nextInt ();
    }
    System.out.println ("Before Sorting: " + Arrays.toString (a));
    a = sort (a);
    System.out.println ("After Sorting: " + Arrays.toString (a));
}
----------------------------------------

public static void main (String [] args) {
    int [] A = {5, 4, 3, 2, 1};
    int l = A.length;
    for (int i = 0;
    i < l - 1; ++ i) {
        int minPos = i;
        for (int j = i + 1;
        j < l; ++ j) {
            if (A [j] < A [minPos]) {
                minPos = j;
            }
        }
        if (minPos != i) {
            int temp = A [i];
            A [i] = A [minPos];
            A [minPos] = temp;
        }
    }
    System.out.println (Arrays.toString (A));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8362640_31152383_12_26
8362640_8362727_3_20
Title: Java - Selection Sort Algorithm 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of elements of the array");
    int n = in.nextInt ();
    int [] a = new int [n];
    System.out.println ("Enter the integer array of elements");
    for (int i = 0;
    i < n; i ++) {
        a [i] = in.nextInt ();
    }
    System.out.println ("Before Sorting: " + Arrays.toString (a));
    a = sort (a);
    System.out.println ("After Sorting: " + Arrays.toString (a));
}
----------------------------------------

public static void main (String args []) {
    int [] arr = {5, 4, 3, 2, 1};
    int min = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        min = i;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [j] < arr [min]) {
                min = j;
            }
        }
        int temp = arr [i];
        arr [i] = arr [min];
        arr [min] = temp;
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8362640_31152383_28_46
8362640_52703453_1_20
Title: Java - Selection Sort Algorithm 
----------------------------------------

private static int [] sort (int [] a) {
    for (int i = 0;
    i < a.length - 1; i ++) {
        int index = i;
        for (int j = i + 1;
        j < a.length; j ++) if (a [j] < a [index]) {
            index = j;
        }

        int small = a [index];
        a [index] = a [i];
        a [i] = small;
    }
    return a;
}
----------------------------------------

void sort (int arr []) {
    int n = arr.length;
    for (int i = 0;
    i < n - 1; i ++) {
        int min_idx = i;
        for (int j = i + 1;
        j < n; j ++) if (arr [j] < arr [min_idx]) min_idx = j;

        int temp = arr [min_idx];
        arr [min_idx] = arr [i];
        arr [i] = temp;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8362640_31800536_10_26
8362640_51240750_1_23
Title: Java - Selection Sort Algorithm 
----------------------------------------

public static int [] selectionSort (int [] input) {
    int length = input.length;
    int minimumValue = Integer.MAX_VALUE;
    for (int i = 0;
    i < length; ++ i) {
        for (int j = i;
        j < length; ++ j) {
            if (input [j] <= minimumValue) {
                minimumValue = input [j];
                input [j] = input [i];
                input [i] = minimumValue;
            }
        }
        minimumValue = Integer.MAX_VALUE;
    }
    return input;
}
----------------------------------------

public int [] selectionSort (int [] list) {
    int i, j, minValue, minIndex, temp = 0;
    for (i = 1; i < list.length; i ++) {
        minValue = list [i];
        minIndex = i;
        j = i - 1;
        for (j = i; j < list.length; j ++) {
            if (list [j] < minValue) {
                minValue = list [j];
                minIndex = j;
            }
        }
        if (list [i] > minValue) {
            temp = list [i];
            list [i] = list [minIndex];
            list [minIndex] = temp;
        }
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8362640_44371680_3_24
8362640_8362727_3_20
Title: Java - Selection Sort Algorithm 
----------------------------------------

public static void main (String [] args) {
    int [] A = {5, 4, 3, 2, 1};
    int l = A.length;
    for (int i = 0;
    i < l - 1; ++ i) {
        int minPos = i;
        for (int j = i + 1;
        j < l; ++ j) {
            if (A [j] < A [minPos]) {
                minPos = j;
            }
        }
        if (minPos != i) {
            int temp = A [i];
            A [i] = A [minPos];
            A [minPos] = temp;
        }
    }
    System.out.println (Arrays.toString (A));
}
----------------------------------------

public static void main (String args []) {
    int [] arr = {5, 4, 3, 2, 1};
    int min = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        min = i;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [j] < arr [min]) {
                min = j;
            }
        }
        int temp = arr [i];
        arr [i] = arr [min];
        arr [min] = temp;
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8372675_8372709_1_14
8372675_8372728_1_25
Title: Binary tree not inserting to right of any node that is the left child of another node 
----------------------------------------

private static BinaryTreeNode insert (BinaryTreeNode current, String word) {
    if (current == null) {
        current = new BinaryTreeNode (word);
    } else {
        int test = word.compareToIgnoreCase (current.value);
        if (test < 0) {
            current.left = insert (current.left, word);
        } else if (test > 0) {
            current.right = insert (current.right, word);
        }

    }
    return current;
}
----------------------------------------

private void insert (BinaryTreeNode current, String word) {
    if (current == null) {
        current = new BinaryTreeNode (word);
    } else {
        if (word.compareToIgnoreCase (current.value) < 0) {
            if (current.left != null) {
                insert (current.left, word);
            } else {
                current.left = new BinaryTreeNode (word);
                System.out.println (word + "left");
            }
        } else {
            if (current.right != null) {
                insert (current.right, word);
            } else {
                current.right = new BinaryTreeNode (word);
                System.out.println (word + "right");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8374365_29701421_13_25
8374365_8413289_66_73
Title: Integrating JavaFX 2.0 WebView into a Swing Java SE 6 Application 
----------------------------------------

public static void main (String [] args) {
    Browser browser = new Browser ();
    BrowserView browserView = new BrowserView (browser);
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);
    frame.add (browserView, BorderLayout.CENTER);
    frame.setSize (700, 500);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    browser.loadURL ("http://www.google.com");
}
----------------------------------------

public static void main (final String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            initAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
838004_48842009_2_12
838004_838012_2_10
Title: Shortest-code for prime-calculation 
----------------------------------------

public static void main (String [] args) {
    for (int i = 2;
    i <= 100; i ++) {
        int count = 0;
        for (int j = i / 2;
        j >= 2; j --) {
            if (i % j == 0) count = count + 1;

        }
        if (count == 0) System.out.println (i);

    }
}
----------------------------------------

public static void main (String [] a) {
    for (int i, j, k = 2;
    k -- > 0;) for (i = 1; i ++ < new Long (a [0]);) {
        for (j = i; i % -- j > 0;);

        if (k > 0 ? j < 2 : j > 1) System.out.println (i);

    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8391682_8391802_2_17
8391682_8391828_2_22
Title: "Try/Catch or doing the exception handling without changing the method header" 
----------------------------------------

public static void main (String [] args) {
    java.io.File file = new java.io.File ("myFile.txt");
    java.io.PrintWriter output = null;
    try {
        output = new java.io.PrintWriter (file);
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    int count = 1;
    while (count <= 300) {
        output.println (count + " I love Java!");
        count ++;
    }
    output.close ();
}
----------------------------------------

public static void main (String [] args) {
    java.io.File file;
    java.io.PrintWriter output;
    try {
        file = new java.io.File ("myFile.txt");
        output = new java.io.PrintWriter (file);
        int count = 1;
        while (count <= 300) {
            output.println (count + " I love Java!");
            count ++;
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        if (output != null) {
            output.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8391682_8391802_2_17
8391682_8393388_2_25
Title: "Try/Catch or doing the exception handling without changing the method header" 
----------------------------------------

public static void main (String [] args) {
    java.io.File file = new java.io.File ("myFile.txt");
    java.io.PrintWriter output = null;
    try {
        output = new java.io.PrintWriter (file);
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    int count = 1;
    while (count <= 300) {
        output.println (count + " I love Java!");
        count ++;
    }
    output.close ();
}
----------------------------------------

public static void main (String [] args) {
    java.io.File file = new java.io.File ("myFile.txt");
    try {
        final java.io.PrintWriter output = new java.io.PrintWriter (file);
        try {
            int count = 1;
            while (count <= 300) {
                output.println (count + " I love Java!");
                count ++;
            }
        } finally {
            output.close ();
        }
        if (output.checkError ()) {
            System.err.println ("Failed to write file correctly.");
            System.exit (1);
            return;
        }
    } catch (java.io.FileNotFoundException exc) {
        System.err.println ("Failed to write file correctly.");
        System.exit (1);
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8391682_8391828_2_22
8391682_8393388_2_25
Title: "Try/Catch or doing the exception handling without changing the method header" 
----------------------------------------

public static void main (String [] args) {
    java.io.File file;
    java.io.PrintWriter output;
    try {
        file = new java.io.File ("myFile.txt");
        output = new java.io.PrintWriter (file);
        int count = 1;
        while (count <= 300) {
            output.println (count + " I love Java!");
            count ++;
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        if (output != null) {
            output.close ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    java.io.File file = new java.io.File ("myFile.txt");
    try {
        final java.io.PrintWriter output = new java.io.PrintWriter (file);
        try {
            int count = 1;
            while (count <= 300) {
                output.println (count + " I love Java!");
                count ++;
            }
        } finally {
            output.close ();
        }
        if (output.checkError ()) {
            System.err.println ("Failed to write file correctly.");
            System.exit (1);
            return;
        }
    } catch (java.io.FileNotFoundException exc) {
        System.err.println ("Failed to write file correctly.");
        System.exit (1);
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8415864_37750472_14_40
8415864_8416123_3_12
Title: "when using a array of strings in java convert it to lowercase" 
----------------------------------------

public static void main (String [] args) {
    int size;
    String result = null;
    System.out.println ("Please enter the size of the array: ");
    Scanner r = new Scanner (System.in);
    size = r.nextInt ();
    String [] s = new String [size];
    System.out.println ("Please enter the sritngs:");
    for (int i = 0;
    i < s.length; i ++) {
        s [i] = r.next ();
    }
    System.out.print ("The given sritngs are:");
    for (String item : s) {
        System.out.print (item + "\n");
    }
    System.out.println ("After converting to uppercase the string is:");
    for (String item : s) {
        result = item.toUpperCase ();
        System.out.println (result);
    }
}
----------------------------------------

public static void main (String [] args) {
    String s [] = {"firsT ", "seCond ", "THird "};
    String str = " ";
    for (int i = 0;
    i < s.length; i ++) {
        str = str + s [i];
    }
    System.out.println (str.toLowerCase ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8425726_8425795_1_16
8425726_8425795_3_11
Title: using Timer class - How can I make a scheduled Job started as scheduled even if the prior job isn't finished? 
----------------------------------------

public void run () {
    Runnable r = new Runnable () {
        public void run () {
            count ++;
            int a = count;
            System.out.println (this.now ("HH:mm:ssSSS") + "- start " + count);
            try {
                Thread.sleep (2000);
            } catch (InterruptedException e) {
            }
            System.out.println (this.now ("HH:mm:ssSSS") + "- end " + a);
        }}

    ;
    Thread t = new Thread (r);
    t.start ();
}
----------------------------------------

public void run () {
    count ++;
    int a = count;
    System.out.println (this.now ("HH:mm:ssSSS") + "- start " + count);
    try {
        Thread.sleep (2000);
    } catch (InterruptedException e) {
    }
    System.out.println (this.now ("HH:mm:ssSSS") + "- end " + a);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8433215_10007336_12_29
8433215_41691398_1_17
Title: How to re-code a movie file with Xuggler 
----------------------------------------

public void onVideoPicture (IVideoPictureEvent event) {
    if (job.role == MediaRole.MediaRoleEnum.LS_AUDIO) super.onVideoPicture (event);

    IVideoPicture pic = event.getPicture ();
    if (videoResampler == null) {
        videoResampler = IVideoResampler.make (job.getCoderSettings ().width, job.getCoderSettings ().height, pic.getPixelType (), pic.getWidth (), pic.getHeight (), pic.getPixelType ());
    }
    IVideoPicture out = IVideoPicture.make (pic.getPixelType (), mediaWidth, mediaHeight);
    videoResampler.resample (out, pic);
    IVideoPictureEvent asc = new VideoPictureEvent (event.getSource (), out, event.getStreamIndex ());
    super.onVideoPicture (asc);
    out.delete ();
}
----------------------------------------

@Override
public void onVideoPicture (IVideoPictureEvent event) {
    IVideoPicture pic = event.getPicture ();
    if (videoResampler == null) {
        videoResampler = IVideoResampler.make (VIDEO_WIDTH, VIDEO_HEIGHT, pic.getPixelType (), pic.getWidth (), pic.getHeight (), pic.getPixelType ());
    }
    IVideoPicture out = IVideoPicture.make (pic.getPixelType (), VIDEO_WIDTH, VIDEO_HEIGHT);
    videoResampler.resample (out, pic);
    IVideoPictureEvent asc = new VideoPictureEvent (event.getSource (), out, event.getStreamIndex ());
    super.onVideoPicture (asc);
    out.delete ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8435423_8435661_1_10
8435423_8435714_1_11
Title: Java: Why am I getting null in the output? 
----------------------------------------

public int compare (Object p1, Object p2) {
    if (temp.get (p1).doubleValue () < temp.get (p2).doubleValue ()) {
        return 1;
    } else if (temp.get (p1).doubleValue () == temp.get (p2).doubleValue ()) {
        return 0;
    } else {
        return - 1;
    }

}
----------------------------------------

public int compare (Object p1, Object p2) {
    if ((Double) temp.get (p1) < (Double) temp.get (p2)) {
        return 1;
    } else if (((Double) temp.get (p1)).equals ((Double) temp.get (p2))) {
        return 0;
    } else {
        return - 1;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8444710_25117400_46_59
8444710_8444758_31_46
Title: Java way to check if a string is palindrome 
----------------------------------------

public static void main (String [] args) {
    FindAllPalindromes fp = new FindAllPalindromes ();
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the String ::");
    String s = sc.nextLine ();
    fp.allSubstrings (s);
    sc.close ();
    if (fp.oldPalindrome.length () > 0) {
        System.out.println (longestPalindrome + "and" + fp.oldPalindrome + ":is the longest palindrome");
    } else {
        System.out.println (longestPalindrome + ":is the longest palindrome`````");
    }
}
----------------------------------------

public static void main (String [] args) {
    String string = "Madam, I'm Adam.";
    System.out.println ();
    System.out.println ("Testing whether the following " + "string is a palindrome:");
    System.out.println ("    " + string);
    System.out.println ();
    if (isPalindrome (string)) {
        System.out.println ("It IS a palindrome!");
    } else {
        System.out.println ("It is NOT a palindrome!");
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8444710_26229188_13_24
8444710_27495012_6_29
Title: Java way to check if a string is palindrome 
----------------------------------------

public boolean isPalindrome (String original) {
    int i = original.length () - 1;
    int j = 0;
    while (i > j) {
        if (original.charAt (i) != original.charAt (j)) {
            return false;
        }
        i --;
        j ++;
    }
    return true;
}
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8444710_26229188_13_24
8444710_8444800_1_10
Title: Java way to check if a string is palindrome 
----------------------------------------

public boolean isPalindrome (String original) {
    int i = original.length () - 1;
    int j = 0;
    while (i > j) {
        if (original.charAt (i) != original.charAt (j)) {
            return false;
        }
        i --;
        j ++;
    }
    return true;
}
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8444710_27495012_6_29
8444710_8444800_1_10
Title: Java way to check if a string is palindrome 
----------------------------------------

public static boolean isPalindrome (String str) {
    str = str.toUpperCase ();
    char [] strChars = str.toCharArray ();
    List < Character > word = new ArrayList < > ();
    for (char c : strChars) {
        word.add (c);
    }
    while (true) {
        if ((word.size () == 1) || (word.size () == 0)) {
            return true;
        }
        if (word.get (0) == word.get (word.size () - 1)) {
            word.remove (0);
            word.remove (word.size () - 1);
        } else {
            return false;
        }
    }
}
----------------------------------------

boolean isPalindrome (String s) {
    int n = s.length ();
    for (int i = 0;
    i < (n / 2); ++ i) {
        if (s.charAt (i) != s.charAt (n - i - 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8454709_8454758_10_24
8454709_8455130_10_27
Title: How do I wait for a java timer to finish 
----------------------------------------

protected Void doInBackground () throws Exception {
    if (counter >= 0) {
        int millis = counter * 1000;
        String time = String.format ("%02d:%02d", TimeUnit.MILLISECONDS.toMinutes (millis), TimeUnit.MILLISECONDS.toSeconds (millis) - TimeUnit.MINUTES.toSeconds (TimeUnit.MILLISECONDS.toMinutes (millis)));
        jLblTimer.setText (time);
        counter --;
    } else {
        this._callback.notify ();
    }
    return (null);
}
----------------------------------------

protected Void doInBackground () throws Exception {
    if (counter >= 0) {
        int millis = counter * 1000;
        String time = String.format ("%02d:%02d", TimeUnit.MILLISECONDS.toMinutes (millis), TimeUnit.MILLISECONDS.toSeconds (millis) - TimeUnit.MINUTES.toSeconds (TimeUnit.MILLISECONDS.toMinutes (millis)));
        publish (time);
        counter --;
    } else {
        this.callback.call ();
    }
    return (null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
846175_846192_1_15
846175_846242_1_16
Title: Efficient way to search a stream for a string 
----------------------------------------

public boolean streamContainsString (Reader reader, String searchString) throws IOException {
    char [] buffer = new char [1024];
    int numCharsRead;
    int count = 0;
    while ((numCharsRead = reader.read (buffer)) > 0) {
        if (buffer [numCharsRead - 1] == searchString.charAt (count)) count ++;
        else count = 0;

        if (count == searchString.size ()) return true;

    }
    return false;
}
----------------------------------------

public boolean streamContainsString (File input, String searchString) throws IOException {
    Pattern pattern = Pattern.compile (Pattern.quote (searchString));
    FileInputStream fis = new FileInputStream (input);
    FileChannel fc = fis.getChannel ();
    int sz = (int) fc.size ();
    MappedByteBuffer bb = fc.map (FileChannel.MapMode.READ_ONLY, 0, sz);
    CharsetDecoder decoder = Charset.forName ("UTF-8").newDecoder ();
    CharBuffer cb = decoder.decode (bb);
    Matcher matcher = pattern.matcher (cb);
    return matcher.matches ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
846175_846242_1_16
846175_850173_1_15
Title: Efficient way to search a stream for a string 
----------------------------------------

public boolean streamContainsString (File input, String searchString) throws IOException {
    Pattern pattern = Pattern.compile (Pattern.quote (searchString));
    FileInputStream fis = new FileInputStream (input);
    FileChannel fc = fis.getChannel ();
    int sz = (int) fc.size ();
    MappedByteBuffer bb = fc.map (FileChannel.MapMode.READ_ONLY, 0, sz);
    CharsetDecoder decoder = Charset.forName ("UTF-8").newDecoder ();
    CharBuffer cb = decoder.decode (bb);
    Matcher matcher = pattern.matcher (cb);
    return matcher.matches ();
}
----------------------------------------

public boolean streamContainsString (Reader reader, String searchString) throws IOException {
    char [] buffer = new char [1024];
    int numCharsRead;
    int count = 0;
    while ((numCharsRead = reader.read (buffer)) > 0) {
        for (int c = 0;
        c < numCharsRead; c ++) {
            if (buffer [c] == searchString.charAt (count)) count ++;
            else count = 0;

            if (count == searchString.length ()) return true;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8470063_8470158_22_34
8470063_8470486_44_56
Title: "Use two connections individually for a clob selection and updating statment Is this fine?" 
----------------------------------------

public void updateClob () throws exception {
    Connection conn = null;
    Clob clob = getClob (conn);
    PreparedStatement pStmt = null;
    try {
        pStmt = conn.prepareStatement ("UPDATE TEST SET REFERENCE = ? WHERE ID = ?");
        pStmt.setLong (1, 1);
        pStmt.setClob (2, clob);
        pStmt.executeUpdate ();
    } finally {
        cleanup (conn, pStmt, null);
    }
}
----------------------------------------

public void updateClob () throws Exception {
    Connection conn = null;
    try {
        conn = getConnection ();
        getAndUpdateClob (conn);
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        if (conn != null) {
            conn.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8471186_8516506_38_55
8471186_8516506_61_76
Title: How to get current displayed image position? 
----------------------------------------

public void onClick (View v) {
    btrt.setEnabled (true);
    System.out.println ("left button has been clicked");
    System.out.println ("position: " + img_position);
    img_minus = -- img_position;
    System.out.println ("minus:" + img_minus);
    imgView.setImageResource (Imgid [img_minus]);
    if (img_minus == 0) {
        btlt.setEnabled (false);
    }
}
----------------------------------------

public void onClick (View v) {
    btlt.setEnabled (true);
    System.out.println ("right button has been clicked");
    System.out.println ("position: " + img_position);
    img_plus = ++ img_position;
    System.out.println ("plus: " + img_plus);
    imgView.setImageResource (Imgid [img_plus]);
    if (img_plus == 5) {
        btrt.setEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8484683_8484709_4_42
8484683_8484741_6_27
Title: Iterating a Collection more than once 
----------------------------------------

public static void main (String [] args) {
    Set < String > set = new HashSet < String > ();
    set.add ("food");
    set.add ("bad");
    set.add ("hungry");
    set.add ("neighbour");
    Iterator < String > it = set.iterator ();
    while (it.hasNext ()) {
        if (it.next ().length () > 4) {
            it.remove ();
        }
    }
    set.add ("new long text");
    set.add ("x");
    it = set.iterator ();
    while (it.hasNext ()) {
        if (it.next ().length () < 4) {
            it.remove ();
        }
    }
    for (String x : set) {
        System.out.println (x);
    }
}
----------------------------------------

public static void main (String [] args) {
    final HashSet < Integer > myHash = new HashSet < Integer > ();
    myHash.addAll (Arrays.asList (1, 2, 3, 4, 5));
    final HashSet < Integer > myHash2 = new HashSet < Integer > (myHash);
    Iterator < Integer > it = myHash.iterator ();
    System.out.println ("First go...");
    while (it.hasNext ()) {
        System.out.println (it.next ());
        it.remove ();
    }
    it = myHash2.iterator ();
    System.out.println ("Second go...");
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8491687_36243874_12_30
8491687_8491808_1_15
Title: write newline into a file 
----------------------------------------

public static void main (String [] args) throws java.io.IOException {
    File newFile = new File ("tweet.txt");
    FileWriter fileWriter = new FileWriter (newFile);
    fileWriter.write ("Mona Jalal");
    fileWriter.append ("\nMona Mona");
    fileWriter.close ();
    FileReader fileReader = new FileReader (newFile);
    BufferedReader bufferedReader = new BufferedReader (fileReader);
    String line;
    while ((line = bufferedReader.readLine ()) != null) {
        System.out.println (line);
    }
    fileReader.close ();
    bufferedReader.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String nodeValue = "i am mostafa";
    BufferedWriter writer = new BufferedWriter (new OutputStreamWriter (System.out));
    String [] words = nodeValue.split (" ");
    for (String word : words) {
        writer.write (word);
        writer.newLine ();
    }
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8491894_26266562_1_19
8491894_30146302_1_13
Title: Javabat Help: alarmClock 
----------------------------------------

public String alarmClock (int day, boolean vacation) {
    if (((day == 0) || (day == 6)) && (! vacation)) {
        return "10:00";
    } else if (((day != 0) || (day != 6)) && (! vacation)) {
        return "7:00";
    } else if (((day == 0) || (day == 6)) && (vacation)) {
        return "off";
    } else {
        return "10:00";
    }

}
----------------------------------------

public String alarmClock (int day, boolean vacation) {
    if (vacation) {
        if (day > 0 && day < 6) {
            return "10:00";
        } else return "off";

    }
    if (day > 0 && day < 6) {
        return "7:00";
    } else return "10:00";

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8518359_19218759_1_22
8518359_8518549_1_13
Title: Using Collections to sort values 
----------------------------------------

public static void main (String [] args) {
    List < String > l_oTestList = new ArrayList < String > ();
    l_oTestList.add ("$10000 - $12000");
    l_oTestList.add ("$50 - $100");
    l_oTestList.add ("$10000 - $12000");
    l_oTestList.add ("$100 - $150");
    l_oTestList.add ("$150 - $200");
    l_oTestList.add ("$200 - $250");
    l_oTestList.add ("$0 - $10");
    l_oTestList.add ("$10 - $20");
    l_oTestList.add ("$20 - $50");
    l_oTestList.add ("$250 - $500");
    l_oTestList.add ("$500 - $750");
    l_oTestList.add ("$750 - $1000");
    l_oTestList.add ("$1000 - $1250");
    l_oTestList.add ("$1250 - $10000");
    List < String > l_oTestList1 = sort (l_oTestList);
    System.out.println (l_oTestList1.toString ());
}
----------------------------------------

public static void main (String arg []) {
    List < String > l = Arrays.asList (new String [] {"katy 1", "mark 9", "john 2", "alice 11", "josiah 22", "chris 44"});
    Collections.sort (l, new Comparator < String > () {
        public int compare (String x, String y) {
            Integer a = Integer.parseInt (x.substring (x.indexOf (" ")).trim ());
            Integer b = Integer.parseInt (y.substring (y.indexOf (" ")).trim ());
            return a.compareTo (b);
        }}

    );
    System.out.println (l.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8518359_19218759_1_22
8518359_8519242_1_25
Title: Using Collections to sort values 
----------------------------------------

public static void main (String [] args) {
    List < String > l_oTestList = new ArrayList < String > ();
    l_oTestList.add ("$10000 - $12000");
    l_oTestList.add ("$50 - $100");
    l_oTestList.add ("$10000 - $12000");
    l_oTestList.add ("$100 - $150");
    l_oTestList.add ("$150 - $200");
    l_oTestList.add ("$200 - $250");
    l_oTestList.add ("$0 - $10");
    l_oTestList.add ("$10 - $20");
    l_oTestList.add ("$20 - $50");
    l_oTestList.add ("$250 - $500");
    l_oTestList.add ("$500 - $750");
    l_oTestList.add ("$750 - $1000");
    l_oTestList.add ("$1000 - $1250");
    l_oTestList.add ("$1250 - $10000");
    List < String > l_oTestList1 = sort (l_oTestList);
    System.out.println (l_oTestList1.toString ());
}
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > nameAgeMap = new HashMap < String, Integer > ();
    nameAgeMap.put ("katy", 1);
    nameAgeMap.put ("chris", 44);
    nameAgeMap.put ("alice", 11);
    nameAgeMap.put ("josiah", 22);
    nameAgeMap.put ("john", 2);
    List < Map.Entry < String, Integer > > entries = new ArrayList < Map.Entry < String, Integer > > (nameAgeMap.entrySet ());
    Collections.sort (entries, new Comparator < Map.Entry < String, Integer > > () {
        public int compare (Entry < String, Integer > o1, Entry < String, Integer > o2) {
            return o1.getValue ().compareTo (o2.getValue ());
        }}

    );
    Map < String, Integer > sortedMap = new LinkedHashMap < String, Integer > ();
    for (Map.Entry < String, Integer > entry : entries) sortedMap.put (entry.getKey (), entry.getValue ());

    System.out.println (sortedMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8518359_8518549_1_13
8518359_8519242_1_25
Title: Using Collections to sort values 
----------------------------------------

public static void main (String arg []) {
    List < String > l = Arrays.asList (new String [] {"katy 1", "mark 9", "john 2", "alice 11", "josiah 22", "chris 44"});
    Collections.sort (l, new Comparator < String > () {
        public int compare (String x, String y) {
            Integer a = Integer.parseInt (x.substring (x.indexOf (" ")).trim ());
            Integer b = Integer.parseInt (y.substring (y.indexOf (" ")).trim ());
            return a.compareTo (b);
        }}

    );
    System.out.println (l.toString ());
}
----------------------------------------

public static void main (String [] args) {
    Map < String, Integer > nameAgeMap = new HashMap < String, Integer > ();
    nameAgeMap.put ("katy", 1);
    nameAgeMap.put ("chris", 44);
    nameAgeMap.put ("alice", 11);
    nameAgeMap.put ("josiah", 22);
    nameAgeMap.put ("john", 2);
    List < Map.Entry < String, Integer > > entries = new ArrayList < Map.Entry < String, Integer > > (nameAgeMap.entrySet ());
    Collections.sort (entries, new Comparator < Map.Entry < String, Integer > > () {
        public int compare (Entry < String, Integer > o1, Entry < String, Integer > o2) {
            return o1.getValue ().compareTo (o2.getValue ());
        }}

    );
    Map < String, Integer > sortedMap = new LinkedHashMap < String, Integer > ();
    for (Map.Entry < String, Integer > entry : entries) sortedMap.put (entry.getKey (), entry.getValue ());

    System.out.println (sortedMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8524979_51118373_26_35
8524979_53090703_36_48
Title: Justify text in Java 
----------------------------------------

public static int getNextLineIndex (int currLineIndex, int maxWidth, String [] words) {
    int n = words.length;
    int width = 0;
    while (currLineIndex < n && width < maxWidth) {
        width += words [currLineIndex ++].length () + 1;
    }
    if (width > maxWidth + 1) currLineIndex --;

    return currLineIndex;
}
----------------------------------------

public static int getNextLineIndex (int currLineIndex, int maxWidth, String [] words) {
    int n = words.length;
    int width = 0;
    int count = 0;
    while (currLineIndex < n && width < maxWidth) {
        width += words [currLineIndex ++].length () + 1;
        count ++;
    }
    if (width > maxWidth + 1 && count > 1) currLineIndex --;

    return currLineIndex;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
853020_15360427_1_32
853020_853062_1_23
Title: JTable Scrolling to a Specified Row Index 
----------------------------------------

private void scrollToVisible (int rowIndex, int vColIndex) {
    JTable table = getTablePanel ().getTable ();
    if (! (table.getParent () instanceof JViewport)) {
        return;
    }
    if (table.getRowCount () < 1) {
        return;
    }
    JViewport viewport = (JViewport) table.getParent ();
    Dimension dim = viewport.getExtentSize ();
    Dimension dimOne = new Dimension (0, 0);
    Rectangle rect = table.getCellRect (rowIndex, vColIndex, true);
    Rectangle rectOne;
    if (rowIndex + 1 < table.getRowCount ()) {
        if (vColIndex + 1 < table.getColumnCount ()) vColIndex ++;

        rectOne = table.getCellRect (rowIndex + 1, vColIndex, true);
        dimOne.width = rectOne.x - rect.x;
        dimOne.height = rectOne.y - rect.y;
    }
    rect.setLocation (rect.x + dim.width - dimOne.width, rect.y + dim.height - dimOne.height);
    table.scrollRectToVisible (rect);
}
----------------------------------------

public static void scrollToVisible (JTable table, int rowIndex, int vColIndex) {
    if (! (table.getParent () instanceof JViewport)) {
        return;
    }
    JViewport viewport = (JViewport) table.getParent ();
    Rectangle rect = table.getCellRect (rowIndex, vColIndex, true);
    Point pt = viewport.getViewPosition ();
    rect.setLocation (rect.x - pt.x, rect.y - pt.y);
    table.scrollRectToVisible (rect);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8532328_13135156_29_41
8532328_8572520_33_54
Title: Problems with connecting to Facebook XMMP MD5-DIGEST 
----------------------------------------

public void authenticate (String username, String host, String password) throws IOException, XMPPException {
    authenticationId = username;
    this.password = password;
    hostname = host;
    String mechanisms [] = {getName ()};
    java.util.Map props = new HashMap ();
    sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    super.authenticate ();
}
----------------------------------------

public void authenticate (String apiKeyAndSessionKey, String host, String applicationSecret) throws IOException, XMPPException {
    if (apiKeyAndSessionKey == null || applicationSecret == null) {
        throw new IllegalArgumentException ("Invalid parameters");
    }
    String [] keyArray = apiKeyAndSessionKey.split ("\\|", 2);
    if (keyArray.length < 2) {
        throw new IllegalArgumentException ("API key or session key is not present");
    }
    this.apiKey = keyArray [0];
    this.applicationSecret = applicationSecret;
    this.sessionKey = keyArray [1];
    this.authenticationId = sessionKey;
    this.password = applicationSecret;
    this.hostname = host;
    String [] mechanisms = {"DIGEST-MD5"};
    Map < String, String > props = new HashMap < String, String > ();
    this.sc = Sasl.createSaslClient (mechanisms, null, "xmpp", host, props, this);
    authenticate ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8532328_13135156_59_88
8532328_8572520_68_98
Title: Problems with connecting to Facebook XMMP MD5-DIGEST 
----------------------------------------

public void challengeReceived (String challenge) throws IOException {
    byte response [];
    if (challenge != null) response = sc.evaluateChallenge (Base64.decode (challenge));
    else response = sc.evaluateChallenge (new byte [0]);

    Packet responseStanza;
    if (response == null) {
        responseStanza = new Response ();
    } else {
        responseStanza = new Response (Base64.encodeBytes (response, Base64.DONT_BREAK_LINES));
    }
    getSASLAuthentication ().send (responseStanza);
}
----------------------------------------

public void challengeReceived (String challenge) throws IOException {
    byte [] response = null;
    if (challenge != null) {
        String decodedChallenge = new String (Base64.decode (challenge));
        Map < String, String > parameters = getQueryMap (decodedChallenge);
        String version = "1.0";
        String nonce = parameters.get ("nonce");
        String method = parameters.get ("method");
        long callId = new GregorianCalendar ().getTimeInMillis ();
        String sig = "api_key=" + apiKey + "call_id=" + callId + "method=" + method + "nonce=" + nonce + "session_key=" + sessionKey + "v=" + version + applicationSecret;
        try {
            sig = md5 (sig);
        } catch (NoSuchAlgorithmException e) {
            throw new IllegalStateException (e);
        }
        String composedResponse = "api_key=" + URLEncoder.encode (apiKey, "utf-8") + "&call_id=" + callId + "&method=" + URLEncoder.encode (method, "utf-8") + "&nonce=" + URLEncoder.encode (nonce, "utf-8") + "&session_key=" + URLEncoder.encode (sessionKey, "utf-8") + "&v=" + URLEncoder.encode (version, "utf-8") + "&sig=" + URLEncoder.encode (sig, "utf-8");
        response = composedResponse.getBytes ("utf-8");
    }
    String authenticationText = "";
    if (response != null) {
        authenticationText = Base64.encodeBytes (response, Base64.DONT_BREAK_LINES);
    }
    getSASLAuthentication ().send (new Response (authenticationText));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8532957_13337004_1_12
8532957_18145288_1_11
Title: php strtr equivalent in java 
----------------------------------------

public static String strtr (String str, String from, String to) {
    char [] out = null;
    for (int i = 0, len = str.length ();
    i < len; i ++) {
        char c = str.charAt (i);
        int p = from.indexOf (c);
        if (p >= 0) {
            if (out == null) out = str.toCharArray ();

            out [i] = to.charAt (p);
        }
    }
    return out != null ? new String (out) : str;
}
----------------------------------------

public static String strtr (String str, String froms, String tos) {
    char [] str1 = str.toCharArray ();
    int j;
    for (int i = 0, len = str.length ();
    i < len; ++ i) {
        j = froms.indexOf (str.charAt (i));
        if (j != - 1) {
            str1 [i] = tos.charAt (j);
        }
    }
    return String.valueOf (str1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8542020_20486817_11_22
8542020_8542052_3_22
Title: threads and synchronization example 
----------------------------------------

public static void main (String [] args) {
    Deepak d, d1;
    d = new Deepak ();
    d1 = new Deepak ();
    Thread t, t1;
    t = new Thread (d);
    t1 = new Thread (d1);
    t.start ();
    t1.start ();
}
----------------------------------------

public static void main (final String...args) {
    final Runnable r = new Runnable () {
        public synchronized void run () {
            for (int i = 0;
            i < 10; ++ i) {
                System.out.println (i);
                try {
                    Thread.sleep (1000L);
                } catch (final InterruptedException ie) {
                    throw new RuntimeException (ie);
                }
            }
        }}

    new Thread (r).start ();
    new Thread (r).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8542020_20486817_28_43
8542020_8542052_8_18
Title: threads and synchronization example 
----------------------------------------

public synchronized void run () {
    String s = Thread.currentThread ().getName ();
    for (int i = 0;
    i < 10; i ++) {
        try {
            Thread.sleep (100);
        } catch (Exception e) {
        }
        System.out.println (s + " " + i);
    }
}
----------------------------------------

public synchronized void run () {
    for (int i = 0;
    i < 10; ++ i) {
        System.out.println (i);
        try {
            Thread.sleep (1000L);
        } catch (final InterruptedException ie) {
            throw new RuntimeException (ie);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8548586_35496600_1_51
8548586_45294859_1_13
Title: Adding binary numbers 
----------------------------------------

static String addBinary (String a, String b) {
    int lenA = a.length ();
    int lenB = b.length ();
    int i = 0;
    StringBuilder sb = new StringBuilder ();
    int rem = Math.abs (lenA - lenB);
    while (rem > 0) {
        sb.append ('0');
        rem --;
    }
    if (lenA > lenB) {
        sb.append (b);
        b = sb.toString ();
    } else {
        sb.append (a);
        a = sb.toString ();
    }
    sb = new StringBuilder ();
    char carry = '0';
    i = a.length ();
    while (i > 0) {
        if (a.charAt (i - 1) == b.charAt (i - 1)) {
            sb.append (carry);
            if (a.charAt (i - 1) == '1') {
                carry = '1';
            } else {
                carry = '0';
            }
        } else {
            if (carry == '1') {
                sb.append ('0');
                carry = '1';
            } else {
                carry = '0';
                sb.append ('1');
            }
        }
        i --;
    }
    if (carry == '1') {
        sb.append (carry);
    }
    sb.reverse ();
    return sb.toString ();
}
----------------------------------------

public String addBinary (String s1, String s2) {
    StringBuilder sb = new StringBuilder ();
    int i = s1.length () - 1, j = s2.length () - 1, carry = 0;
    while (i >= 0 || j >= 0) {
        int sum = carry;
        if (j >= 0) sum += s2.charAt (j --) - '0';

        if (i >= 0) sum += s1.charAt (i --) - '0';

        sb.append (sum % 2);
        carry = sum / 2;
    }
    if (carry != 0) sb.append (carry);

    return sb.reverse ().toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8548586_38380981_7_46
8548586_48115729_9_64
Title: Adding binary numbers 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int len = sc.nextInt ();
    int [] arr1 = new int [len];
    int [] arr2 = new int [len];
    int [] sum = new int [len + 1];
    Arrays.fill (sum, 0);
    for (int i = 0;
    i < len; i ++) {
        arr1 [i] = sc.nextInt ();
    }
    for (int i = 0;
    i < len; i ++) {
        arr2 [i] = sc.nextInt ();
    }
    for (int i = len - 1;
    i >= 0; i --) {
        if (sum [i + 1] == 0) {
            if (arr1 [i] != arr2 [i]) {
                sum [i + 1] = 1;
            } else if (arr1 [i] == 1 && arr2 [i] == 1) {
                sum [i + 1] = 0;
                sum [i] = 1;
            }

        } else {
            if ((arr1 [i] != arr2 [i])) {
                sum [i + 1] = 0;
                sum [i] = 1;
            } else if (arr1 [i] == 1) {
                sum [i + 1] = 1;
                sum [i] = 1;
            }

        }
    }
    for (int i = 0;
    i <= len; i ++) {
        System.out.print (sum [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    sc = new Scanner (System.in);
    System.out.println ("Enter 1st Binary Number");
    int number1 = sc.nextInt ();
    int reminder1 = 0;
    int number2 = sc.nextInt ();
    int reminder2 = 0;
    int carry = 0;
    double sumResult = 0;
    int add = 0;
    int n;
    int power = 0;
    while (number1 > 0 || number2 > 0) {
        reminder1 = number1 % 10;
        number1 = number1 / 10;
        reminder2 = number2 % 10;
        number2 = number2 / 10;
        if (reminder1 > 1 || reminder2 > 1) {
            System.out.println ("not a binary number");
            System.exit (0);
        }
        n = reminder1 + reminder2 + carry;
        switch (n) {
            case 0 :
                add = 0;
                carry = 0;
                break;
            case 1 :
                add = 1;
                carry = 0;
                break;
            case 2 :
                add = 0;
                carry = 1;
                break;
            case 3 :
                add = 1;
                carry = 1;
                break;
            default :
                System.out.println ("not a binary number ");
        }
        sumResult = add * (Math.pow (10, power)) + sumResult;
        power ++;
    }
    sumResult = carry * (Math.pow (10, power)) + sumResult;
    System.out.println ("\n" + (int) sumResult);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
8555847_29503018_1_11
8555847_8555926_1_14
Title: Test with Java if two IPs are in the same network 
----------------------------------------

static boolean sameNetwork (final byte [] x, final byte [] y, final int mask) {
    if (x == y) return true;

    if (x == null || y == null) return false;

    if (x.length != y.length) return false;

    final int bits = mask & 7;
    final int bytes = mask>>> 3;
    for (int i = 0;
    i < bytes; i ++) if (x [i] != y [i]) return false;

    final int shift = 8 - bits;
    if (bits != 0 && x [bytes]>>> shift != y [bytes]>>> shift) return false;

    return true;
}
----------------------------------------

public static boolean sameNetwork (String ip1, String ip2, String mask) throws Exception {
    byte [] a1 = InetAddress.getByName (ip1).getAddress ();
    byte [] a2 = InetAddress.getByName (ip2).getAddress ();
    byte [] m = InetAddress.getByName (mask).getAddress ();
    for (int i = 0;
    i < a1.length; i ++) if ((a1 [i] & m [i]) != (a2 [i] & m [i])) return false;

    return true;
}
----------------------------------------
