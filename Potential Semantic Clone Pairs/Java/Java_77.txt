$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32741879_32742282_1_21
32741879_32743696_1_13
Title: Removing the end node from a linked list 
----------------------------------------

public String removeBoxcarFromEnd () {
    String result;
    if (head == null) {
        return null;
    } else if (head.next () == null) {
        int result = head.data ();
        head = null;
    } else {
        Boxcar prevcar = head, nextcar = head.next (), ffcar = nextcar.next ();
        while (ffcar != null) {
            prevcar = nextcar;
            nextcar = ffcar;
            ffcar = ffcar.next ();
        }
        int result = nextcar.data ();
        prevcar.setNext (null);
    }

    size --;
    return result;
}
----------------------------------------

public void removeBoxcarFromEnd () {
    Boxcar prevcar = head;
    Boxcar nextcar = head;
    if (head == null || head.next () == null) {
        return;
    }
    while (nextcar.next () != null) {
        prevcar = nextcar;
        nextcar = nextcar.next ();
    }
    prevcar.setNext (null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32745391_32745694_1_18
32745391_32745697_1_21
Title: Time complexity of remove extra spaces function 
----------------------------------------

static String removeSpaces (String s) {
    if (s == null || s.isEmpty ()) {
        return "";
    }
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        sb.append (s.charAt (i));
        if (s.charAt (i) == ' ') {
            while (i < s.length () - 1 && s.charAt (i + 1) == ' ') {
                i ++;
            }
        }
    }
    return sb.toString ();
}
----------------------------------------

static String removeSpaces (String s) {
    StringBuilder sb = new StringBuilder ();
    if (s == null) {
        return "";
    }
    if (s.length () == 0) {
        return "";
    }
    for (int i = 0;
    i < s.length ();) {
        if (s.charAt (i) == ' ') {
            sb.append (" ");
            while (i < s.length () && s.charAt (i) == ' ') {
                i ++;
            }
        } else {
            sb.append (s.charAt (i));
            i ++;
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32745667_32745796_6_26
32745667_32746102_8_32
Title: How do I create an array that prompts the user to enter the name of taco 1 & then price 1? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Welcome to the taco price sorter! Enter 10 taco names and prices and I'll sort it!");
    String [] tacos = new String [NUMBER_OF_TACOS];
    double [] prices = new double [NUMBER_OF_TACOS];
    for (int i = 0;
    i < NUMBER_OF_TACOS; i ++) {
        System.out.print ("Enter the name of taco " + (i + 1) + "\n");
        tacos [i] = keyboard.nextLine ();
        System.out.print ("Enter taco's price " + (i + 1) + "\n");
        prices [i] = keyboard.nextDouble ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Welcome to the taco price sorter! Enter 10 taco names and prices and I'll sort it!");
    String [] tacos = new String [NUMBER_OF_TACOS];
    for (int i = 0;
    i < NUMBER_OF_TACOS; i ++) {
        System.out.print ("Enter the name of taco " + (i + 1) + "\n");
        tacos [i] = keyboard.next ();
        double [] prices = new double [NUMBER_OF_PRICES];
        System.out.print ("Enter taco's price" + (i + 1) + "\n");
        System.out.println ("\n");
        prices [i] = keyboard.nextDouble ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747147_18_34
32746945_32747297_19_31
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
}
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747147_18_34
32746945_32747838_9_33
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
}
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
    Scanner scanChoice = new Scanner (System.in);
    int entryChoice = scanChoice.nextInt ();
    while (entryChoice != 7) {
        userSelection (entryChoice);
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747147_1_16
32746945_32747297_1_17
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static void main (String [] args) {
    int entryChoice = - 1;
    while (entryChoice != 7) {
        displayMenu ();
        Scanner scanChoice = new Scanner (System.in);
        entryChoice = scanChoice.nextInt ();
        if (entryChoice != 7) System.out.println (userSelection (entryChoice));

    }
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    displayMenu ();
    Scanner scanChoice = new Scanner (System.in);
    int entryChoice = scanChoice.nextInt ();
    while (entryChoice != 7) {
        System.out.println (userSelection (entryChoice));
        displayMenu ();
        entryChoice = scanChoice.nextInt ();
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747147_36_78
32746945_32747297_33_82
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static double userSelection (int entryChoice) {
    double result = 0;
    System.out.println ("Enter two numbers seperated by a space");
    Scanner userInput = new Scanner (System.in);
    double x = userInput.nextDouble ();
    double y = userInput.nextDouble ();
    switch (entryChoice) {
        case 1 :
            result = x + y;
            break;
        case 2 :
            result = x - y;
            break;
        case 3 :
            result = x * y;
            break;
        case 4 :
            result = x / y;
            break;
        case 5 :
            result = Math.pow (x, y);
            break;
        case 6 :
            System.out.println ("Enter one number: ");
            result = Math.sqrt (x);
            break;
        default :
    }
    return result;
}
----------------------------------------

public static double userSelection (int entryChoice) {
    Scanner userInput = new Scanner (System.in);
    double x = 0;
    double y = 0;
    double result = 0;
    if (entryChoice == 6) {
        System.out.println ("Enter one number: ");
        x = userInput.nextDouble ();
    } else {
        System.out.println ("Enter two numbers seperated by a space");
        x = userInput.nextDouble ();
        y = userInput.nextDouble ();
    }
    switch (entryChoice) {
        case 1 :
            result = x + y;
            break;
        case 2 :
            result = x - y;
            break;
        case 3 :
            result = x * y;
            break;
        case 4 :
            result = x / y;
            break;
        case 5 :
            result = Math.pow (x, y);
            break;
        case 6 :
            result = Math.sqrt (x);
            break;
        case 7 :
            result = 0;
            break;
        default :
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747297_19_31
32746945_32747838_9_33
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
}
----------------------------------------

public static void displayMenu () {
    System.out.println ("Please select from the following choices:");
    System.out.println ();
    System.out.println ("1) Addition");
    System.out.println ("2) Subtraction");
    System.out.println ("3) Multiplication");
    System.out.println ("4) Division");
    System.out.println ("5) Raise to a Power");
    System.out.println ("6) Square Root");
    System.out.println ("7) Exit Program");
    System.out.println ();
    System.out.println ("Enter your choice here: ");
    Scanner scanChoice = new Scanner (System.in);
    int entryChoice = scanChoice.nextInt ();
    while (entryChoice != 7) {
        userSelection (entryChoice);
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32746945_32747297_33_82
32746945_32747838_35_87
Title: Having issues with a menu function and a case switch function for a simple calculator 
----------------------------------------

public static double userSelection (int entryChoice) {
    Scanner userInput = new Scanner (System.in);
    double x = 0;
    double y = 0;
    double result = 0;
    if (entryChoice == 6) {
        System.out.println ("Enter one number: ");
        x = userInput.nextDouble ();
    } else {
        System.out.println ("Enter two numbers seperated by a space");
        x = userInput.nextDouble ();
        y = userInput.nextDouble ();
    }
    switch (entryChoice) {
        case 1 :
            result = x + y;
            break;
        case 2 :
            result = x - y;
            break;
        case 3 :
            result = x * y;
            break;
        case 4 :
            result = x / y;
            break;
        case 5 :
            result = Math.pow (x, y);
            break;
        case 6 :
            result = Math.sqrt (x);
            break;
        case 7 :
            result = 0;
            break;
        default :
    }
    return result;
}
----------------------------------------

public static double userSelection (int entryChoice) {
    double result = 0;
    System.out.println ("Enter two numbers seperated by a space");
    Scanner userInput = new Scanner (System.in);
    double x = userInput.nextDouble ();
    double y = userInput.nextDouble ();
    switch (entryChoice) {
        case 1 :
            result = x + y;
            System.out.println ("Result is :" + result);
            break;
        case 2 :
            result = x - y;
            System.out.println ("Result is :" + result);
            break;
        case 3 :
            result = x * y;
            System.out.println ("Result is :" + result);
            break;
        case 4 :
            result = x / y;
            System.out.println ("Result is :" + result);
            break;
        case 5 :
            result = Math.pow (x, y);
            System.out.println ("Result is :" + result);
            break;
        case 6 :
            System.out.println ("Enter one number: ");
            result = Math.sqrt (x);
            System.out.println ("Result is :" + result);
            break;
        case 7 :
            result = 0;
            break;
        default :
    }
    displayMenu ();
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32751094_32786984_20_33
32751094_47875314_24_35
Title: Spring Boot with Session/Redis Serialization Error with Bad Active Directory Ldap Credentials 
----------------------------------------

public byte [] serialize (Object object) {
    if (object == null) {
        return EMPTY_ARRAY;
    }
    try {
        return serializer.convert (object);
    } catch (Exception ex) {
        return EMPTY_ARRAY;
    }
}
----------------------------------------

public byte [] serialize (Object object) {
    if (object == null) {
        return EMPTY_ARRAY;
    }
    try {
        return serializer.convert (object);
    } catch (Exception ex) {
        return EMPTY_ARRAY;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32751094_32786984_8_18
32751094_47875314_12_22
Title: Spring Boot with Session/Redis Serialization Error with Bad Active Directory Ldap Credentials 
----------------------------------------

public Object deserialize (byte [] bytes) {
    if (isEmpty (bytes)) {
        return null;
    }
    try {
        return deserializer.convert (bytes);
    } catch (Exception ex) {
        throw new SerializationException ("Cannot deserialize", ex);
    }
}
----------------------------------------

public Object deserialize (byte [] bytes) {
    if (isEmpty (bytes)) {
        return null;
    }
    try {
        return deserializer.convert (bytes);
    } catch (Exception ex) {
        throw new SerializationException ("Cannot deserialize", ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32755497_32756923_1_13
32755497_32757056_1_14
Title: How to split the 2048 bits BigInteger into words with a ﬁxed number of 64 bits? 
----------------------------------------

public static BigInteger parityWordChecksum (BigInteger key) {
    LongBuffer buffer = ByteBuffer.wrap (key.toByteArray ()).asLongBuffer ();
    long xor = 0;
    while (buffer.hasRemaining ()) {
        xor ^= buffer.get ();
    }
    ByteBuffer result = ByteBuffer.allocate (8);
    result.putLong (xor);
    return new BigInteger (1, result.array ());
}
----------------------------------------

public static BigInteger parityWordChecksum (final BigInteger key) {
    BigInteger result = new BigInteger ("0");
    BigInteger mask = BigInteger.ZERO;
    for (int i = 0;
    i < 64; i ++) {
        mask = mask.setBit (i);
    }
    for (int i = 0;
    i < 2048; i += 64) {
        result = result.xor (key.shiftRight (i).and (mask));
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32761439_48835630_5_23
32761439_48835943_1_18
Title: Codility PermCheck Solution isn't working on a few data sets 
----------------------------------------

public int solution (int [] A) {
    int i = 0;
    int size = A.length;
    if (size > 0 && size < 100001) {
        Arrays.sort (A);
        for (i = 0; i < size; i ++) if (A [i] > size || A [i] != (i + 1)) return 0;

        return 1;
    }
    return 0;
}
----------------------------------------

public int solution (int [] A) {
    int size = A.length;
    int hashArray [] = new int [size + 1];
    for (int i = 0;
    i < size; i ++) {
        if (A [i] > size) return 0;
        else hashArray [A [i]] += 1;

    }
    for (int i = 1;
    i <= size; i ++) if (hashArray [i] != 1) return 0;

    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32765959_32766197_4_28
32765959_32766304_61_124
Title: How to create a loop in Java 
----------------------------------------

public static void main (String [] args) {
    boolean exit = false;
    do {
        System.out.println ("This program is a basic calculator that also knows the Pythagorean theorem");
        System.out.println ("1 for hypotenuse \n2 for leg \n3 for exit");
        choice = Toby.nextDouble ();
        if (choice == 1) {
        } else if (choice == 2) {
        } else if (choice == 3) {
            exit = true;
            System.out.println ("Bye!");
        } else {
            System.out.println ("This is not a valid choice");
        }

    } while (! exit);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner Toby = new Scanner (System.in);
    double Leg1;
    double Leg2;
    double Hypotenuse;
    double choice;
    while (true) {
        System.out.println ("This program is a basic calculator that also knows the Pythagorean theorem");
        System.out.println ("This program can solve for the hypotenuse or one of the legs \nOr you can use it as a simple calculator");
        System.out.println ("Are you solving for the hypotenuse or a leg?");
        System.out.println ("1 for hypotenuse \n2 for leg \n3 to Exit");
        choice = Toby.nextDouble ();
        while (true) {
            if (choice == 1) {
                System.out.println ("Enter first leg:");
                Leg1 = Toby.nextDouble ();
                System.out.println ("Enter second leg:");
                Leg2 = Toby.nextDouble ();
                Hypotenuse = Leg1 * Leg1 + Leg2 * Leg2;
                System.out.println (Math.sqrt (Hypotenuse));
                break;
            } else if (choice == 2) {
                System.out.println ("Enter the leg:");
                Leg1 = Toby.nextDouble ();
                System.out.println ("Enter hypotenuse");
                Hypotenuse = Toby.nextDouble ();
                Leg2 = (Hypotenuse * Hypotenuse - Leg1 * Leg1);
                System.out.println (Math.sqrt (Leg2));
                break;
            } else if (choice == 3) {
                System.out.println ("Bye Bye");
                System.exit (0);
            } else if (choice >= 4 || choice <= 0) {
                System.out.println ("This is not a valid choice");
                break;
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32781754_32782906_2_18
32781754_32782912_2_13
Title: Code flow not entering the statement of nested if for changing a string to title case 
----------------------------------------

public static void main (String args []) {
    String rev = "This is a string";
    char [] a = new char [rev.length ()];
    int i = 0;
    for (; i < a.length; i ++) {
        a [i] = rev.charAt (i);
        if (rev.charAt (i) == ' ' && i + 1 < a.length) {
            if (rev.charAt (i + 1) >= 'a' && rev.charAt (i + 1) <= 'z') {
                a [i + 1] = (char) (rev.charAt (i + 1) - 32);
                i ++;
            }
        }
    }
    String title = new String (a);
    System.out.print (title);
}
----------------------------------------

public static void main (String args []) {
    String rev = "This is a string";
    Pattern pattern = Pattern.compile ("(^\\w)|(\\s\\w)");
    Matcher matcher = pattern.matcher (rev);
    StringBuffer sb = new StringBuffer ();
    while (matcher.find ()) {
        matcher.appendReplacement (sb, matcher.group ().toUpperCase ());
    }
    matcher.appendTail (sb);
    System.out.print (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32783977_1_10
32783459_32783988_2_24
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String [] args) {
    String input = "This is a boy";
    List < String > separated = separateWords (input);
    for (int i = separated.size () - 1;
    i >= 0; i --) {
        System.out.print (separated.get (i));
        if (i != 0) {
            System.out.print (" ");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    String rev = "This is a boy";
    char a [] = new char [rev.length ()];
    int i, j;
    int index = 0;
    int previous = a.length;
    for (i = a.length - 1; i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            for (j = i + 1; j < previous; j ++) {
                a [index] = rev.charAt (j);
                index ++;
            }
            a [index ++] = ' ';
            previous = i;
        }
    }
    for (j = 0; j < previous; j ++) {
        a [index] = rev.charAt (j);
        index ++;
    }
    String n = new String (a);
    System.out.print (n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32783977_1_10
32783459_32784154_2_18
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String [] args) {
    String input = "This is a boy";
    List < String > separated = separateWords (input);
    for (int i = separated.size () - 1;
    i >= 0; i --) {
        System.out.print (separated.get (i));
        if (i != 0) {
            System.out.print (" ");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    String str = "This is a boy";
    String tmp = "";
    String reverString = "";
    for (int i = str.length () - 1;
    i >= 0; i --) {
        tmp += i != 0 ? str.charAt (i) : str.charAt (i) + " ";
        if (str.charAt (i) == ' ' || i == 0) {
            for (int j = tmp.length () - 2;
            j >= 0; j --) {
                reverString += tmp.charAt (j);
            }
            if (i != 0) reverString = reverString + " ";

            tmp = "";
        }
    }
    System.out.println (reverString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32783977_1_10
32783459_32784259_1_19
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String [] args) {
    String input = "This is a boy";
    List < String > separated = separateWords (input);
    for (int i = separated.size () - 1;
    i >= 0; i --) {
        System.out.print (separated.get (i));
        if (i != 0) {
            System.out.print (" ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String rev = "This is a boy";
    String currentWord = "";
    for (int i = rev.length () - 1;
    i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            printWordReversed (currentWord);
            currentWord = "";
        } else currentWord = currentWord + rev.charAt (i);

    }
    printWordReversed (currentWord);
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32783988_2_24
32783459_32784154_2_18
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String args []) {
    String rev = "This is a boy";
    char a [] = new char [rev.length ()];
    int i, j;
    int index = 0;
    int previous = a.length;
    for (i = a.length - 1; i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            for (j = i + 1; j < previous; j ++) {
                a [index] = rev.charAt (j);
                index ++;
            }
            a [index ++] = ' ';
            previous = i;
        }
    }
    for (j = 0; j < previous; j ++) {
        a [index] = rev.charAt (j);
        index ++;
    }
    String n = new String (a);
    System.out.print (n);
}
----------------------------------------

public static void main (String args []) {
    String str = "This is a boy";
    String tmp = "";
    String reverString = "";
    for (int i = str.length () - 1;
    i >= 0; i --) {
        tmp += i != 0 ? str.charAt (i) : str.charAt (i) + " ";
        if (str.charAt (i) == ' ' || i == 0) {
            for (int j = tmp.length () - 2;
            j >= 0; j --) {
                reverString += tmp.charAt (j);
            }
            if (i != 0) reverString = reverString + " ";

            tmp = "";
        }
    }
    System.out.println (reverString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32783988_2_24
32783459_32784259_1_19
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String args []) {
    String rev = "This is a boy";
    char a [] = new char [rev.length ()];
    int i, j;
    int index = 0;
    int previous = a.length;
    for (i = a.length - 1; i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            for (j = i + 1; j < previous; j ++) {
                a [index] = rev.charAt (j);
                index ++;
            }
            a [index ++] = ' ';
            previous = i;
        }
    }
    for (j = 0; j < previous; j ++) {
        a [index] = rev.charAt (j);
        index ++;
    }
    String n = new String (a);
    System.out.print (n);
}
----------------------------------------

public static void main (String [] args) {
    String rev = "This is a boy";
    String currentWord = "";
    for (int i = rev.length () - 1;
    i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            printWordReversed (currentWord);
            currentWord = "";
        } else currentWord = currentWord + rev.charAt (i);

    }
    printWordReversed (currentWord);
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32783459_32784154_2_18
32783459_32784259_1_19
Title: Reversing a string word by word without use of built in function 
----------------------------------------

public static void main (String args []) {
    String str = "This is a boy";
    String tmp = "";
    String reverString = "";
    for (int i = str.length () - 1;
    i >= 0; i --) {
        tmp += i != 0 ? str.charAt (i) : str.charAt (i) + " ";
        if (str.charAt (i) == ' ' || i == 0) {
            for (int j = tmp.length () - 2;
            j >= 0; j --) {
                reverString += tmp.charAt (j);
            }
            if (i != 0) reverString = reverString + " ";

            tmp = "";
        }
    }
    System.out.println (reverString);
}
----------------------------------------

public static void main (String [] args) {
    String rev = "This is a boy";
    String currentWord = "";
    for (int i = rev.length () - 1;
    i >= 0; i --) {
        if (rev.charAt (i) == ' ') {
            printWordReversed (currentWord);
            currentWord = "";
        } else currentWord = currentWord + rev.charAt (i);

    }
    printWordReversed (currentWord);
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3278552_17021512_10_48
3278552_48929340_20_36
Title: Embedding Office in Java 
----------------------------------------

private void initOleViewer (String target) {
    Display display = new Display ();
    Shell shell = new Shell (display);
    OleFrame oleFrame = new OleFrame (shell, SWT.NONE);
    OleClientSite oleClientSite = new OleClientSite (oleFrame, SWT.NONE, "Word.Application");
    OleAutomation word = new OleAutomation (oleClientSite);
    Variant [] arguments;
    int [] id1 = word.getIDsOfNames (new String [] {"Documents"});
    Variant pVarResult = word.getProperty (id1 [0]);
    OleAutomation resultDocuments = pVarResult.getAutomation ();
    int [] id2 = resultDocuments.getIDsOfNames (new String [] {"Open"});
    arguments = new Variant [1];
    arguments [0] = new Variant (target);
    Variant invokeResult = resultDocuments.invoke (id2 [0], arguments);
    resultDocuments.getIDsOfNames (new String [] {"ActiveDocument"});
    arguments = new Variant [1];
    arguments [0] = new Variant (true);
    int [] id3 = word.getIDsOfNames (new String [] {"Visible"});
    word.setProperty (id3 [0], arguments);
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
}
----------------------------------------

public void initOleViewer (String target) {
    Display display = new Display ();
    Shell shell = SWT_AWT.new_Shell (display, this);
    shell.setLayout (new FillLayout ());
    OleFrame oleFrame = new OleFrame (shell, SWT.NONE);
    OleClientSite oleControlSite = new OleClientSite (oleFrame, SWT.NONE, "Word.Document", new File (target));
    oleControlSite.doVerb (OLE.OLEIVERB_INPLACEACTIVATE);
    shell.setSize (800, 600);
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32786291_32786533_1_23
32786291_32786799_5_16
Title: Calculating Prime Numbers (Novice) 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a number to check if it is prime:");
    Scanner kb = new Scanner (System.in);
    int n = kb.nextInt ();
    boolean prime = true;
    for (int i = 2;
    i < n; i ++) {
        if (n <= 1 || n % i == 0) {
            prime = false;
            break;
        }
    }
    if (prime) {
        System.out.println (n + " is prime");
    } else {
        System.out.println ("Not prime");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a number to check if it is prime:");
    Scanner kb = new Scanner (System.in);
    int n = kb.nextInt ();
    boolean isPrime = true;
    for (int i = 2;
    i < n && isPrime; i ++) {
        isPrime = ! (n % i == 0);
    }
    System.out.println (n + " is prime - " + isPrime);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32786629_32786925_1_43
32786629_32929542_1_48
Title: What is the best way of deleting a section of a binary file in Java 7 
----------------------------------------

public static void main (String [] args) {
    File inFile = new File ("D:/file.dat");
    File outFile;
    try {
        outFile = File.createTempFile ("swap", "buffer");
    } catch (IOException ex) {
        throw new IOError (ex);
    }
    try (InputStream inStream = new FileInputStream (inFile); OutputStream outStream = new FileOutputStream (outFile)) {
        inStream.skip (4);
        for (int i = 0;
        i < 4; i ++) {
            byte b = (byte) inStream.read ();
            outStream.write (b>> 4);
        }
        final int CHUNK_SIZE = 1024;
        byte [] chunkBuffer = new byte [CHUNK_SIZE];
        while (true) {
            int chunkSize = inStream.read (chunkBuffer, 0, CHUNK_SIZE);
            if (chunkSize < 0) {
                break;
            }
            outStream.write (chunkBuffer, 0, chunkSize);
        }
    } catch (FileNotFoundException ex) {
        throw new RuntimeException ("input file not found!", ex);
    } catch (IOException ex) {
        throw new RuntimeException ("failed to trim data!", ex);
    }
    inFile.delete ();
    outFile.renameTo (inFile);
}
----------------------------------------

public static void main (String [] args) {
    int megaByte = 1024 * 1024;
    Path inPath = Paths.get ("D:/file.dat");
    Path outPath;
    try {
        outPath = Files.createTempFile (null, "swp");
    } catch (IOException ex) {
        throw new IOError (ex);
    }
    try (FileChannel readChannel = new FileChannel.open (inPath, READ); FileChannel writeChannel = new FileChannel.open (outPath, WRITE, TRUNCATE_EXISTING)) {
        long readFileSize = readChannel.size ();
        long expectedWriteSize = readFileSize;
        if (readFileSize > 2 * megabyte) expectedWriteSize = readFileSize - megabyte;
        else if (readFileSize > megabyte) expectedWriteSize = megabyte;

        long bytesTrans = readChannel.transferTo (0, megabyte, writeChannel);
        if (readFileSize > 2 * megabyte) bytesTrans += readChannel.transferTo (2 * megabyte, readFileSize - 2 * megabyte, writeChannel);

        if (bytesTrans != expectedWriteSize) System.out.println ("WARNING: Transferred " + bytesTrans + " bytes instead of " + expectedWriteSize);

    } catch (FileNotFoundException ex) {
        throw new RuntimeException ("File not found!", ex);
    } catch (IOException ex) {
        throw new RuntimeException ("Caught IOException", ex);
    }
    try {
        Files.move (outPath, inPath, REPLACE_EXISTING, ATOMIC_MOVE);
    } catch (IOException e1) {
        try {
            Files.move (outPath, inPath, REPLACE_EXISTING);
        } catch (IOException e2) {
            throw new IOError (e2);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32792339_32792582_13_29
32792339_32792591_1_13
Title: How can I make this more efficient? 
----------------------------------------

public static void main (String [] args) {
    int [] numberArray = new int [3];
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter the numbers");
    for (int i = 0;
    i <= numberArray.length - 1; i ++) {
        if (scan.hasNextInt ()) {
            numberArray [i] = scan.nextInt ();
        } else {
            System.out.println ("Error! Input must be an integer!");
        }
    }
    String compare = comparison (numberArray);
    System.out.println (compare);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int [] numbers = new int [3];
    String [] labels = {"first", "second", "third"};
    for (int i = 0;
    i < 3; i ++) {
        System.out.print ("Enter the " + labels [i] + " integer: ");
        numbers [i] = in.nextInt ();
    }
    System.out.println (comparison (numbers [0], numbers [1], numbers [2]));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32792801_32793795_3_71
32792801_32795331_3_16
Title: How Do I get a Random Variable Based on Time in Java 
----------------------------------------

public static void main (String [] args) {
    double match = Math.random ();
    if (match < 0.05) {
        System.out.println ("a");
    } else if (0.05 <= match && match <= 0.1) {
        System.out.println ("b");
    } else if (0.1 < match && match <= 0.15) {
        System.out.println ("c");
    } else if (0.15 < match && match <= 0.2) {
        System.out.println ("d");
    } else if (0.2 < match && match <= 0.25) {
        System.out.println ("e");
    } else if (0.25 < match && match <= 0.3) {
        System.out.println ("f");
    } else if (0.3 < match && match <= 0.35) {
        System.out.println ("g");
    } else if (0.35 < match && match <= 0.4) {
        System.out.println ("h");
    } else if (0.35 < match && match <= 0.4) {
        System.out.println ("i");
    } else if (0.4 < match && match <= 0.45) {
        System.out.println ("j");
    } else if (0.45 < match && match <= 0.5) {
        System.out.println ("k");
    } else if (0.5 < match && match <= 0.55) {
        System.out.println ("l");
    } else if (0.55 < match && match <= 0.6) {
        System.out.println ("m");
    } else if (0.6 < match && match <= 0.65) {
        System.out.println ("n");
    } else if (0.65 < match && match <= 0.7) {
        System.out.println ("o");
    } else if (0.7 < match && match <= 0.75) {
        System.out.println ("p");
    } else if (0.75 < match && match <= 0.8) {
        System.out.println ("q");
    } else if (0.8 < match && match <= 0.85) {
        System.out.println ("r");
    } else if (0.85 < match && match <= 0.9) {
        System.out.println ("s");
    } else if (0.9 < match && match <= 0.95) {
        System.out.println ("t");
    } else if (0.95 < match && match <= 1) {
        System.out.println ("u");
    }

}
----------------------------------------

public static void main (String [] args) {
    double random;
    char [] chars = "abcdefghijklmnopqrstu".toCharArray ();
    for (int j = 0;
    j < 20; j ++) {
        random = Math.random ();
        for (int i = 0;
        i <= 20; i ++) {
            if (random >= i * 0.05 && random < (i + 1) * 0.05) {
                System.out.println (chars [i]);
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32792801_32793795_3_71
32792801_32799026_2_14
Title: How Do I get a Random Variable Based on Time in Java 
----------------------------------------

public static void main (String [] args) {
    double match = Math.random ();
    if (match < 0.05) {
        System.out.println ("a");
    } else if (0.05 <= match && match <= 0.1) {
        System.out.println ("b");
    } else if (0.1 < match && match <= 0.15) {
        System.out.println ("c");
    } else if (0.15 < match && match <= 0.2) {
        System.out.println ("d");
    } else if (0.2 < match && match <= 0.25) {
        System.out.println ("e");
    } else if (0.25 < match && match <= 0.3) {
        System.out.println ("f");
    } else if (0.3 < match && match <= 0.35) {
        System.out.println ("g");
    } else if (0.35 < match && match <= 0.4) {
        System.out.println ("h");
    } else if (0.35 < match && match <= 0.4) {
        System.out.println ("i");
    } else if (0.4 < match && match <= 0.45) {
        System.out.println ("j");
    } else if (0.45 < match && match <= 0.5) {
        System.out.println ("k");
    } else if (0.5 < match && match <= 0.55) {
        System.out.println ("l");
    } else if (0.55 < match && match <= 0.6) {
        System.out.println ("m");
    } else if (0.6 < match && match <= 0.65) {
        System.out.println ("n");
    } else if (0.65 < match && match <= 0.7) {
        System.out.println ("o");
    } else if (0.7 < match && match <= 0.75) {
        System.out.println ("p");
    } else if (0.75 < match && match <= 0.8) {
        System.out.println ("q");
    } else if (0.8 < match && match <= 0.85) {
        System.out.println ("r");
    } else if (0.85 < match && match <= 0.9) {
        System.out.println ("s");
    } else if (0.9 < match && match <= 0.95) {
        System.out.println ("t");
    } else if (0.95 < match && match <= 1) {
        System.out.println ("u");
    }

}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i <= 20; i ++) {
        double match = Math.random ();
        if (match < 0.05) {
            System.out.println ("a");
        } else if (0.05 <= match && match <= 0.1) {
            System.out.println ("b");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32792801_32795331_3_16
32792801_32799026_2_14
Title: How Do I get a Random Variable Based on Time in Java 
----------------------------------------

public static void main (String [] args) {
    double random;
    char [] chars = "abcdefghijklmnopqrstu".toCharArray ();
    for (int j = 0;
    j < 20; j ++) {
        random = Math.random ();
        for (int i = 0;
        i <= 20; i ++) {
            if (random >= i * 0.05 && random < (i + 1) * 0.05) {
                System.out.println (chars [i]);
                break;
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i <= 20; i ++) {
        double match = Math.random ();
        if (match < 0.05) {
            System.out.println ("a");
        } else if (0.05 <= match && match <= 0.1) {
            System.out.println ("b");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32793478_32793535_1_73
32793478_32793575_5_72
Title: Can't stop while loop 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.print ("Pick a number to guess between: ");
    int userNumber = input.nextInt ();
    int random = rand.nextInt (userNumber);
    if (random < 1) {
        random = random + 1;
    } else if (random > userNumber) {
        random = random - 1;
    }

    boolean continueGame = true;
    while (continueGame) {
        System.out.print ('\f');
        System.out.print ("Pick the amount of attempts you would like to have (Max of 10 attempts): ");
        int userAttempts = input.nextInt ();
        if (userAttempts > 10) {
            System.out.println ("To Many Attempts");
            System.out.println ("");
        } else if (userAttempts <= 10) {
            System.out.println ("Version: 1.3");
            System.out.println ("----------------------------------------------------------------------");
            System.out.println ("You have " + userAttempts + " attempts to guess the number or else you fail. Goodluck!");
            System.out.println ("");
            System.out.println ("Type 'begin' to Begin!");
            String start = input.next ();
            System.out.print ('\f');
            if (start.equals ("begin")) {
                for (int i = 1;
                i < userAttempts + 1; i ++) {
                    System.out.print ("Enter a number between 1-" + userNumber + ": ");
                    int number = input.nextInt ();
                    if (number > random) {
                        System.out.println ("Too Big");
                        System.out.println ("");
                    } else if (number < random) {
                        System.out.println ("Too Small");
                        System.out.println ("");
                    } else if (number == random) {
                        System.out.println ("Correct!");
                        continueGame = false;
                    }

                    if (i == userAttempts) {
                        System.out.println ("You have failed");
                        System.out.println ("Number Was: " + random);
                        continueGame = false;
                    }
                }
            } else {
                System.out.print ('\f');
                System.out.println ("Incorrect Command");
                System.out.println ("Please Exit Console And Retry");
                continueGame = false;
            }
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.print ("Pick a number to guess between: ");
    int userNumber = input.nextInt ();
    int random = rand.nextInt (userNumber);
    if (random < 1) {
        random = random + 1;
    } else if (random > userNumber) {
        random = random - 1;
    }

    boolean failattempt = false;
    while (true) {
        System.out.print ('\f');
        System.out.print ("Pick the amount of attempts you would like to have (Max of 10 attempts): ");
        int userAttempts = input.nextInt ();
        if (userAttempts > 10) {
            System.out.println ("To Many Attempts");
            System.out.println ("");
        } else if (userAttempts <= 10) {
            System.out.println ("Version: 1.3");
            System.out.println ("----------------------------------------------------------------------");
            System.out.println ("You have " + userAttempts + " attempts to guess the number or else you fail. Goodluck!");
            System.out.println ("");
            System.out.println ("Type 'begin' to Begin!");
            String start = input.next ();
            System.out.print ('\f');
            if (start.equals ("begin")) {
                for (int i = 1;
                i < userAttempts + 1; i ++) {
                    System.out.print ("Enter a number between 1-" + userNumber + ": ");
                    int number = input.nextInt ();
                    if (number > random) {
                        System.out.println ("Too Big");
                        System.out.println ("");
                    } else if (number < random) {
                        System.out.println ("Too Small");
                        System.out.println ("");
                    } else if (number == random) {
                        System.out.println ("Correct!");
                        break;
                    }

                    if (i == userAttempts) {
                        System.out.println ("You have failed");
                        System.out.println ("Number Was: " + random);
                        failattempt = true;
                        break;
                    }
                }
                if (failattempt == true) break;

            } else if (! start.equals ("begin")) {
                System.out.print ('\f');
                System.out.println ("Incorrect Command");
                System.out.println ("Please Exit Console And Retry");
                break;
            }

        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32795132_32795567_7_23
32795132_32799652_47_91
Title: custom iterator which can traverse iterator 
----------------------------------------

public static void main (String [] main) {
    Iterator < Integer > i1 = Arrays.asList (new Integer [] {1}).iterator ();
    Iterator < Integer > i2 = Arrays.asList (new Integer [] {2, 3}).iterator ();
    Iterator < Integer > i3 = Arrays.asList (new Integer [] {4, 5, 6}).iterator ();
    List < Iterator < Integer > > allIterators = new ArrayList < > ();
    allIterators.add (i1);
    allIterators.add (i2);
    allIterators.add (i3);
    Iterator < Iterator < Integer > > testIterator = allIterators.iterator ();
    Iterator < Integer > myIterator = new CustomIterator < > (testIterator);
    while (myIterator.hasNext ()) {
        System.out.println (myIterator.next ());
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("start to test traverse");
    List < Integer > l1 = new ArrayList < > ();
    l1.add (1);
    List < Integer > l2 = new ArrayList < > ();
    l2.add (2);
    l2.add (3);
    List < Integer > l3 = new ArrayList < > ();
    l3.add (4);
    l3.add (5);
    l3.add (6);
    List < Iterator < Integer > > root = new ArrayList < > ();
    root.add (l1.iterator ());
    root.add (l2.iterator ());
    root.add (l3.iterator ());
    IteratorFlattener it = new IteratorFlattener < > (root.iterator ());
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
    System.out.println ("start to test remove method");
    l1 = new ArrayList < > ();
    l1.add (1);
    l2 = new ArrayList < > ();
    l2.add (2);
    l2.add (3);
    l3 = new ArrayList < > ();
    l3.add (4);
    l3.add (5);
    l3.add (6);
    root = new ArrayList < > ();
    root.add (l1.iterator ());
    root.add (l2.iterator ());
    root.add (l3.iterator ());
    int i = 0;
    it = new IteratorFlattener < > (root.iterator ());
    while (it.hasNext () && i < 3) {
        it.next ();
        it.remove ();
        i ++;
    }
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32801085_32801115_1_15
32801085_32801348_1_15
Title: Comparing substrings in Java 
----------------------------------------

public static boolean startOther (String a, String b) {
    if (a == null || b == null) return false;

    int aLen = a.length ();
    int bLen = b.length ();
    if (aLen != bLen) {
        if (aLen < bLen) {
            int p = b.indexOf (a);
            return p != - 1 && p + aLen == bLen;
        } else {
            int p = a.indexOf (b);
            return p != - 1 && p + bLen == aLen;
        }
    }
    return false;
}
----------------------------------------

public static boolean startOther (String left, String right) {
    if (left == null || right == null || left.equals (right)) {
        return false;
    }
    int rightSubstringInLeft = left.lastIndexOf (right);
    int leftSubstringInRight = right.lastIndexOf (left);
    if (rightSubstringInLeft != - 1) {
        return rightSubstringInLeft == left.length () - right.length ();
    } else if (leftSubstringInRight != - 1) {
        return leftSubstringInRight == right.length () - left.length ();
    } else {
        return false;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32801744_32801885_1_13
32801744_32803439_3_16
Title: "Java Errors: Exception in thread ""main"" java.lang.RuntimeException" 
----------------------------------------

public static void main (String [] args) {
    char c1 = 'a';
    char c2 = 'w';
    String str = "a b c d e f g h i j k l m n o p q s t u v w";
    Pattern compile = Pattern.compile (".*" + c1 + "(.*)" + c2 + ".*");
    Matcher matcher = compile.matcher (str);
    boolean found = matcher.find ();
    System.out.println ("found:" + found);
    if (found) System.out.println (matcher.group (1));

}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Print all characters between a and w");
    for (char c = 'a';
    c <= 'w'; c ++) {
        System.out.print (c);
        if ((c + 1 - 'a') % 10 == 0) {
            System.out.println ();
        }
    }
    System.out.println ("\n");
    printChars ('d', 'z');
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32803843_32803866_1_10
32803843_32803943_1_15
Title: Recursive method for x^n optimised for when n is even 
----------------------------------------

public static double power (double x, int n) {
    if (n == 0) return 1;

    if (n == 1) return x;

    double pHalf = power (x, n / 2);
    if (n % 2 == 0) {
        return pHalf * pHalf;
    } else {
        return x * pHalf * pHalf;
    }
}
----------------------------------------

public static double power (double x, int n) {
    if (n == 0) {
        return 1;
    }
    if (n == 1) {
        return x;
    }
    if (n % 2 == 0) {
        double temp = power (x, n / 2);
        return temp * temp;
    } else {
        return x * (power (x, n - 1));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32810168_32810254_8_17
32810168_32810694_19_35
Title: How to detect PLUS key on different language keyboards in JavaFX 
----------------------------------------

public void start (Stage stage) throws Exception {
    Scene scene = new Scene (new Pane ());
    scene.addEventFilter (KeyEvent.KEY_PRESSED, e -> {
        if (e.getCode () == KeyCode.ADD || e.getCode () == KeyCode.EQUALS || e.getCode () == KeyCode.PLUS) {
            System.out.println ("YES");
        }
    });
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) throws Exception {
    Scene scene = new Scene (new Pane (), 300, 300);
    scene.setOnKeyPressed (new EventHandler < KeyEvent > () {
        KeyCombination charCombo = new KeyCharacterCombination ("+", KeyCombination.CONTROL_DOWN);
        KeyCombination codeCombo = new KeyCodeCombination (KeyCode.PLUS, KeyCombination.CONTROL_DOWN);
        @Override
        public void handle (KeyEvent event) {
            if (charCombo.match (event) || codeCombo.match (event)) {
                System.out.println ("Zoom in");
            }
        }}

    );
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32812385_32812418_1_31
32812385_32812442_3_26
Title: Returning a variable from an if-else statement to the main program 
----------------------------------------

public static void main (String [] args) {
    int r = Integer.parseInt (args [0]);
    int g = Integer.parseInt (args [1]);
    int b = Integer.parseInt (args [2]);
    double c;
    double m;
    double y;
    double k;
    if ((r == 0 && g == 0) && (g == 0 && b == 0)) {
        c = 0;
        m = 0;
        y = 0;
        k = 0;
    } else {
        int w = (int) (Math.max (r / 255, (Math.max (g / 255, b / 255))));
        c = (double) ((w - (r / 255)) / w);
        m = (double) ((w - (g / 255)) / w);
        y = (double) ((w - (b / 255)) / w);
        k = (double) (1 - w);
    }
    System.out.println ("cyan    =" + c);
    System.out.println ("magenta =" + m);
    System.out.println ("yellow  =" + y);
    System.out.println ("black   =" + k);
}
----------------------------------------

public static void main (String [] args) {
    double c = 0;
    double m = 0;
    double y = 0;
    double k = 0;
    int r = Integer.parseInt (args [0]);
    int g = Integer.parseInt (args [1]);
    int b = Integer.parseInt (args [2]);
    if (r != 0 || g != 0 || b != 0) {
        int w = (int) (Math.max (r / 255, (Math.max (g / 255, b / 255))));
        c = (double) ((w - (r / 255)) / w);
        m = (double) ((w - (g / 255)) / w);
        y = (double) ((w - (b / 255)) / w);
        k = (double) (1 - w);
    }
    System.out.println ("cyan    =" + c);
    System.out.println ("magenta =" + m);
    System.out.println ("yellow  =" + y);
    System.out.println ("black   =" + k);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32812582_32812702_1_15
32812582_32812719_6_23
Title: for loop/print or println formatting issue 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    File file = new File ("data.txt");
    Scanner inFile = new Scanner (file);
    while (inFile.hasNext ()) {
        int num;
        num = inFile.nextInt ();
        System.out.print (num);
        for (int i = 0;
        i < num; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
        System.out.println ();
    }
    inFile.close ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("data.txt");
    Scanner inFile = new Scanner (file);
    while (inFile.hasNext ()) {
        int num;
        num = inFile.nextInt ();
        System.out.print (num);
        for (int i = 0;
        i < num; i ++) {
            System.out.print ("*");
        }
        System.out.println ();
        System.out.println ();
    }
    inFile.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32814623_32814713_49_76
32814623_32814749_8_19
Title: fillArc() in Java not blending color as expected 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    g2d.setRenderingHint (RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setRenderingHint (RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);
    g2d.setRenderingHint (RenderingHints.KEY_DITHERING, RenderingHints.VALUE_DITHER_ENABLE);
    g2d.setRenderingHint (RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
    g2d.setRenderingHint (RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
    g2d.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2d.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    ConicalGradientPaint rgp = new ConicalGradientPaint (true, new Point (getWidth () / 2, getHeight () / 2), 0.5f, new float [] {0, 60, 120, 180, 240, 300, 360}, new Color [] {Color.RED, Color.YELLOW, Color.GREEN, Color.CYAN, Color.BLUE, Color.MAGENTA, Color.RED});
    g2d.setPaint (rgp);
    int radius = Math.min (getWidth (), getHeight ());
    int x = (getWidth () - radius) / 2;
    int y = (getHeight () - radius) / 2;
    g2d.fillOval (x, y, radius, radius);
    g2d.dispose ();
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    HSLColor color = new HSLColor (Color.YELLOW);
    for (int i = 0;
    i < 360; i ++) {
        g.setColor (color.adjustHue (i));
        g.fillArc (25, 25, 200, 200, i, 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32815464_32815514_9_20
32815464_32815567_12_22
Title: How to replace string characters from an array 
----------------------------------------

public static void replaceString (char [] str) {
    int length = str.length;
    for (int i = 0;
    i < length; i ++) {
        if (str [i] == 'a') {
            str [i] = 'k';
        } else if (str [i] == 'b') {
            str [i] = 'n';
        }

    }
    System.out.println (Arrays.toString (str));
    System.out.println (String.valueOf (str));
}
----------------------------------------

public static String replaceString (String str) {
    char [] tmp = str.toCharArray ();
    for (int i = 0;
    tmp.length > i; i ++) {
        if ('a' == tmp [i]) {
            tmp [i] = 'k';
        } else if ('b' == tmp [i]) {
            tmp [i] = 'n';
        }

    }
    return new String (tmp);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32816367_32817009_6_19
32816367_32817224_6_18
Title: "scanner.useDelimiter(""\n\n"") in java" 
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner scanner = new Scanner (new File (args [0]));
    scanner.useDelimiter ("\n");
    while (scanner.hasNext ()) {
        String row = scanner.next ();
        for (int col = 0;
        col < row.length (); col ++) {
            System.out.print (row.charAt (col) + " ");
        }
        System.out.println ();
    }
    scanner.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner scanner = new Scanner (new File (args [0]));
    scanner.useDelimiter ("\n\n");
    String [] grid = scanner.next ().split ("\n");
    scanner.close ();
    for (int row = 0;
    row < grid.length; row ++) {
        for (int col = 0;
        col < grid [row].length (); col ++) {
            System.out.print (grid [row].charAt (col) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32824900_32825118_1_13
32824900_32825163_1_15
Title: Error doing modulo math 
----------------------------------------

public static void printChars (char ch1, char ch2, int num) {
    int index = 1;
    while (ch1 < ch2) {
        System.out.print (ch1 + " ");
        if ((index % num) == 0) {
            System.out.println ("");
        }
        index ++;
        ch1 ++;
    }
    System.out.print (ch2);
}
----------------------------------------

public static void printChars (char ch1, char ch2, int num) {
    int counter = 0;
    while (ch1 <= ch2) {
        System.out.print (ch1 ++ + " ");
        counter ++;
        if (counter % num == 0) {
            System.out.println ("");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32836847_32837062_1_12
32836847_32837573_1_16
Title: How can I transfer some value between activities in Android 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    Intent intent = getIntent ();
    int b = intent.getIntExtra (PLAYER_NO, 0);
    if (b == 2) {
        setContentView (R.layout.two_player);
    }
    if (b == 4) {
        setContentView (R.layout.four_player);
    }
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    final String PLAYER_NO = "the number of players";
    Intent b = getIntent ();
    int a = b.getExtras ().getInt (PLAYER_NO);
    if (b != null) {
        if (a == 2) {
            setContentView (R.layout.two_player);
        }
        if (a == 4) {
            setContentView (R.layout.four_player);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32838681_32838940_8_33
32838681_32858712_7_25
Title: "How to open Text Input Dialog Box when a TextArea gets focus in Javafx?" 
----------------------------------------

public void changed (ObservableValue < ? extends Boolean > arg0, Boolean oldPropertyValue, Boolean newPropertyValue) {
    if (newPropertyValue) {
        System.out.println ("Textfield on focus");
        TextInputDialog dialog = new TextInputDialog ("walter");
        dialog.setTitle ("Text Input Dialog");
        dialog.setHeaderText ("Look, a Text Input Dialog");
        dialog.setContentText ("Please enter your name:");
        Optional < String > result = dialog.showAndWait ();
        if (result.isPresent ()) {
            System.out.println ("Your name: " + result.get ());
        }
        address.getParent ().requestFocus ();
    } else {
        System.out.println ("Textfield out focus");
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends Boolean > arg0, Boolean oldPropertyValue, Boolean newPropertyValue) {
    TextInputDialog dialog = new TextInputDialog ("walter");
    dialog.setTitle ("Text Input Dialog");
    dialog.setHeaderText ("Look, a Text Input Dialog");
    dialog.setContentText ("Please enter your name:");
    if (newPropertyValue) {
        System.out.println ("Old Property : " + oldPropertyValue);
        System.out.println ("New Property : " + newPropertyValue);
        System.out.println ("Textfield on focus");
        address.getParent ().requestFocus ();
        Optional < String > result = dialog.showAndWait ();
        System.out.println ("Result :" + result);
        if (result.isPresent ()) {
            dialog.getDialogPane ().requestFocus ();
            System.out.println ("Your name: " + result.get ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32838831_32839898_8_28
32838831_32840992_1_24
Title: Convert List<String[]> to int[] 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    ArrayList < String > strArrayList = new ArrayList < String > ();
    strArrayList.add ("1");
    strArrayList.add ("11");
    strArrayList.add ("111");
    strArrayList.add ("12343");
    strArrayList.add ("18475");
    int [] ArrayRes = new int [strArrayList.size ()];
    int i = 0;
    int x = 0;
    for (String s : strArrayList) {
        ArrayRes [i] = Integer.parseInt (s);
        System.out.println (ArrayRes [i]);
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String [] > arrList = new ArrayList < String [] > ();
    arrList.add (new String [] {"11", "12", "13", "14", "15"});
    arrList.add (new String [] {"21", "22", "23", "24", "25"});
    arrList.add (new String [] {"31", "32", "33", "34", "35"});
    arrList.add (new String [] {"41", "42", "43", "44", "45"});
    arrList.add (new String [] {"41", "52", "53", "54", "55"});
    ArrayList < Integer > ints = new ArrayList < Integer > ();
    for (String [] array : arrList) {
        for (String str : array) {
            ints.add (Integer.parseInt (str));
        }
    }
    Integer [] result = ints.toArray (new Integer [] {});
    for (int i : result) System.out.println (i);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32838831_32839898_8_28
32838831_32841096_8_45
Title: Convert List<String[]> to int[] 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    ArrayList < String > strArrayList = new ArrayList < String > ();
    strArrayList.add ("1");
    strArrayList.add ("11");
    strArrayList.add ("111");
    strArrayList.add ("12343");
    strArrayList.add ("18475");
    int [] ArrayRes = new int [strArrayList.size ()];
    int i = 0;
    int x = 0;
    for (String s : strArrayList) {
        ArrayRes [i] = Integer.parseInt (s);
        System.out.println (ArrayRes [i]);
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    ArrayList < String [] > strArrayList = new ArrayList < String [] > ();
    String [] str1 = {"16", "1421", "1577"};
    String [] str2 = {"15", "1451", "1461", "6556"};
    String [] str3 = {"157", "8751", "1136", "556", "879"};
    strArrayList.add (str1);
    strArrayList.add (str2);
    strArrayList.add (str3);
    int sizeOfArr = 0;
    int i = 0;
    for (String [] s : strArrayList) {
        sizeOfArr += s.length;
    }
    int [] ArrayRes = new int [sizeOfArr];
    for (String [] s : strArrayList) {
        if (s.length > 0) {
            for (String s1 : s) {
                ArrayRes [i] = Integer.parseInt (s1);
                System.out.println (ArrayRes [i]);
                i ++;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32838831_32840992_1_24
32838831_32841096_8_45
Title: Convert List<String[]> to int[] 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String [] > arrList = new ArrayList < String [] > ();
    arrList.add (new String [] {"11", "12", "13", "14", "15"});
    arrList.add (new String [] {"21", "22", "23", "24", "25"});
    arrList.add (new String [] {"31", "32", "33", "34", "35"});
    arrList.add (new String [] {"41", "42", "43", "44", "45"});
    arrList.add (new String [] {"41", "52", "53", "54", "55"});
    ArrayList < Integer > ints = new ArrayList < Integer > ();
    for (String [] array : arrList) {
        for (String str : array) {
            ints.add (Integer.parseInt (str));
        }
    }
    Integer [] result = ints.toArray (new Integer [] {});
    for (int i : result) System.out.println (i);

}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    ArrayList < String [] > strArrayList = new ArrayList < String [] > ();
    String [] str1 = {"16", "1421", "1577"};
    String [] str2 = {"15", "1451", "1461", "6556"};
    String [] str3 = {"157", "8751", "1136", "556", "879"};
    strArrayList.add (str1);
    strArrayList.add (str2);
    strArrayList.add (str3);
    int sizeOfArr = 0;
    int i = 0;
    for (String [] s : strArrayList) {
        sizeOfArr += s.length;
    }
    int [] ArrayRes = new int [sizeOfArr];
    for (String [] s : strArrayList) {
        if (s.length > 0) {
            for (String s1 : s) {
                ArrayRes [i] = Integer.parseInt (s1);
                System.out.println (ArrayRes [i]);
                i ++;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32844356_32844845_1_17
32844356_32844955_3_17
Title: How to see if two integers in an array are the same 
----------------------------------------

public static void main (String [] args) {
    java.util.Set < String > dbl = new java.util.HashSet < String > ();
    for (int i = 0;
    i < args.length; i ++) {
        for (int j = i + 1;
        j < args.length; j ++) {
            if (args [i].equals (args [j])) {
                dbl.add (args [i]);
            }
        }
    }
    System.out.print ("" + dbl.size () + " figure(s) appear more than once.");
    java.util.Iterator < String > it = dbl.iterator ();
    while (it.hasNext ()) {
        System.out.print ("   " + it.next ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = args.length;
    int [] a = new int [n];
    boolean flag = false;
    for (int i = 0;
    i < n; i ++) {
        a [i] = Integer.parseInt (args [i]);
    }
    boolean repeats = hasRepetitions (a);
    if (repeats) {
        System.out.println ("There is at least one repeated number.");
    } else {
        System.out.println ("correct, there are no numbers that are the same here");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32847400_32847713_12_20
32847400_32847713_1_10
Title: Linked Lists and Try/Catch 
----------------------------------------

public Employee (String name, String ppsNumber, int employeeNumber, int numberOfEmployees, double earnings, double pay, double sales) {
    this.name = name;
    this.ppsNumber = ppsNumber;
    this.employeeNumber = employeeNumber;
    this.numberOfEmployees = numberOfEmployees;
    this.earnings = earnings;
    this.pay = pay;
    this.sales = sales;
}
----------------------------------------

public Employee () {
    name = "Not Given";
    ppsNumber = "Not Givwn";
    employeeNumber = 0;
    numberOfEmployees = 0;
    earnings = 0;
    pay = 0;
    sales = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32852472_32852625_4_25
32852472_32863710_1_12
Title: How do I update a item with specified string in a ArrayList 
----------------------------------------

public void updateTodoItem (String idToFind, String title, String description, Date dueDate) {
    TodoItem target = null;
    for (TodoItem item : todoItems) {
        if (item.getId ().equals (idToFind)) {
            target = item;
            break;
        }
    }
    if (target != null) {
        target.setTitle (title);
        target.setDescription (description);
        target.setDueDate (dueDate);
    }
}
----------------------------------------

public void updateTodoItem (String idToFind, String title, String description, Date dueDate) {
    for (TodoItem item : todoItems) {
        if (item.getId ().equals (idToFind)) {
            item.setTitle (title);
            item.setDescription (description);
            item.setDate (dueDate);
            System.out.println ("Item Found!");
            return;
        }
    }
    System.out.println ("Item Is Not Found!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32855802_32855882_1_19
32855802_32855955_1_31
Title: Comparing integers and creating the smallest integer possible from the digits of the given integers 
----------------------------------------

public static int biggestLoser (int a, int b) {
    if (a < 1000 || a >= 10000 || b < 1000 || b >= 10000) {
        return Math.min (a, b);
    } else {
        int result = 0;
        int multiplier = 1;
        for (int digit = 0;
        digit < 4; digit ++) {
            int nextDigit = Math.min (a % 10, b % 10);
            result = result + nextDigit * multiplier;
            multiplier = multiplier * 10;
            a = a / 10;
            b = b / 10;
        }
        return result;
    }
}
----------------------------------------

public static int biggestLoser (int a, int b) {
    if (a < 1000 || b < 1000) {
        if (a < b) return a;
        else return b;

    }
    int val = 0;
    ArrayList < Integer > data1 = new ArrayList < Integer > ();
    while (a > 0) {
        data1.add (a % 10);
        a /= 10;
    }
    Collections.reverse (data1);
    ArrayList < Integer > data2 = new ArrayList < Integer > ();
    while (b > 0) {
        data2.add (b % 10);
        b /= 10;
    }
    Collections.reverse (data2);
    val = ((data1.get (0) < data2.get (0)) ? data1.get (0) : data2.get (0)) * 1000 + ((data1.get (1) < data2.get (1)) ? data1.get (1) : data2.get (1)) * 100 + ((data1.get (2) < data2.get (2)) ? data1.get (2) : data2.get (2)) * 10 + ((data1.get (3) < data2.get (3)) ? data1.get (3) : data2.get (3));
    return val;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32859357_32859403_2_10
32859357_32859414_1_11
Title: Printing a number next to each String 
----------------------------------------

public void testMethod () {
    int iter = 1;
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) {
            System.out.println ((iter ++) + ". " + myArray [i]);
        }
    }
}
----------------------------------------

public void testMethod () {
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    int j = 0;
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) {
            System.out.println ((j + 1) + ". " + myArray [i]);
            j ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32859357_32859403_2_10
32859357_32859458_3_12
Title: Printing a number next to each String 
----------------------------------------

public void testMethod () {
    int iter = 1;
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) {
            System.out.println ((iter ++) + ". " + myArray [i]);
        }
    }
}
----------------------------------------

public void testMethod () {
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    int count = 0;
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) System.out.println (((count ++) + 1) + ". " + myArray [i]);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32859357_32859414_1_11
32859357_32859458_3_12
Title: Printing a number next to each String 
----------------------------------------

public void testMethod () {
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    int j = 0;
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) {
            System.out.println ((j + 1) + ". " + myArray [i]);
            j ++;
        }
    }
}
----------------------------------------

public void testMethod () {
    String myArray [] = new String [] {"cook", null, "chef", "baker", null, null, "butcher", null, "distiller"};
    int count = 0;
    for (int i = 0;
    i < myArray.length; i ++) {
        if (myArray [i] != null) System.out.println (((count ++) + 1) + ". " + myArray [i]);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32860596_32860694_1_13
32860596_32860943_5_14
Title: executorService.scheduleAtFixedRate to run task forever 
----------------------------------------

public static void main (String [] args) {
    ScheduledExecutorService executorService = Executors.newScheduledThreadPool (1);
    Runnable files = new Runnable () {
        @Override
        public void run () {
            System.out.println ("Hello");
        }}

    ;
    ScheduledFuture < ? > scheduledFuture = executorService.scheduleAtFixedRate (files, 0, 1, TimeUnit.SECONDS);
}
----------------------------------------

public static void main (String [] args) {
    ScheduledExecutorService executorService = Executors.newScheduledThreadPool (1);
    ScheduledFuture files = executorService.scheduleAtFixedRate (new Runnable () {
        @Override
        public void run () {
            System.out.println ("Running");
            throw new RuntimeException ("bar");
        }}

    , 0, 1, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32868320_32868482_1_16
32868320_32869606_1_35
Title: Count of chars in char array in descending order 
----------------------------------------

public static void main (String [] args) {
    char arr [] = {'A', 'B', 'E', 'A', 'C', 'D', 'E', 'A', 'C', 'E', 'B', 'A', 'A', 'B', 'E', 'E'};
    Map < Character, Integer > myMap = new TreeMap < Character, Integer > (Collections.reverseOrder ());
    for (int index = 0;
    index < arr.length; index ++) {
        if (myMap.containsKey (arr [index])) {
            Integer count = myMap.get (arr [index]);
            myMap.put (arr [index], ++ count);
        } else {
            myMap.put (arr [index], 1);
        }
    }
    System.out.println (myMap);
}
----------------------------------------

public static void main (String [] args) {
    char arr [] = {'A', 'B', 'E', 'A', 'C', 'D', 'E', 'A', 'C', 'E', 'B', 'A', 'A', 'B', 'E', 'E'};
    int [] bridge = new int [256];
    int [] output = new int [256];
    for (char c : arr) {
        output [(int) c] = output [(int) c] + 1;
        bridge [(int) c] = bridge [(int) c] + 1;
    }
    Arrays.sort (output);
    boolean breakLoop = false;
    for (int index = 255;
    index >= 0; index --) {
        for (int inIndex = 0;
        inIndex <= bridge.length - 1; inIndex ++) {
            if (output [index] != 0) {
                if (bridge [inIndex] == output [index]) {
                    System.out.println ((char) inIndex + " repeats " + output [index] + " times.");
                    bridge [inIndex] = 0;
                }
            } else {
                breakLoop = true;
                break;
            }
        }
        if (breakLoop) {
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32874162_32875029_11_19
32874162_32875279_11_20
Title: Jackson serialization: Wrap fields 
----------------------------------------

public void serialize (A value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    jgen.writeStringField ("id", value.getId ());
    jgen.writeObjectFieldStart ("properties");
    jgen.writeStringField ("property1", value.getProperty1 ());
    jgen.writeStringField ("property2", value.getProperty2 ());
    jgen.writeEndObject ();
    jgen.writeEndObject ();
}
----------------------------------------

public void serialize (A value, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonProcessingException {
    jgen.writeStartObject ();
    jgen.writeStringField ("field1", value.getField1 ());
    jgen.writeObjectFieldStart ("wrapper");
    jgen.writeStringField ("innerField1", value.getInnerField1 ());
    jgen.writeStringField ("innerField2", value.getInnerField2 ());
    jgen.writeEndObject ();
    jgen.writeEndObject ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32875197_32875416_3_20
32875197_53289158_3_18
Title: Integer square root in java 
----------------------------------------

public static void main (String [] args) {
    int num;
    System.out.print ("Enter a non-negative integer: ");
    Scanner sc = new Scanner (System.in);
    num = sc.nextInt ();
    int i;
    int iterations = 1;
    int curSum = 0;
    for (i = 1; i < num; i += 2) {
        if (curSum + i >= num) {
            break;
        }
        iterations ++;
        curSum += i;
    }
    System.out.print (iterations);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("enter the value :");
    int num = sc.nextInt ();
    int a = num / 10;
    num = num % 10;
    int b = a / 10;
    int c = a % 10;
    int total = c + b + num;
    System.out.println ("The sum of digit is:" + total);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32875905_32876623_14_43
32875905_32934832_8_35
Title: Maximum cost of traversal in matrix using dynamic programming 
----------------------------------------

void solve (int row) {
    f = new int [m] [n];
    for (int i = 0;
    i < m; ++ i) for (int j = 0;
    j < n; ++ j) f [i] [j] = Integer.MIN_VALUE;

    for (int i = 0;
    i < n; ++ i) {
        int sum = 0;
        for (int j = 0;
        j < m; ++ j) sum += a [j] [i];

        for (int j1 = 0;
        j1 < m; ++ j1) {
            int tmp_sum = 0;
            boolean first = true;
            for (int j2 = j1;
            j2 != j1 || first; j2 = (j2 + 1) % m) {
                if (first) first = false;

                tmp_sum += a [j2] [i];
                int best_sum = Math.max (tmp_sum, sum - tmp_sum + a [j1] [i] + a [j2] [i]);
                if (j1 == j2) best_sum = a [j1] [i];

                int prev = 0;
                if (i > 0) prev = f [j1] [i - 1];

                f [j2] [i] = Math.max (f [j2] [i], best_sum + prev);
            }
        }
    }
    System.out.println (f [row] [n - 1]);
}
----------------------------------------

public static void solve (int currRow, int currCol, int [] [] isVisited, int currCost) {
    int upperRow, lowerRow, rightCol;
    isVisited [currRow] [currCol] = 1;
    currCost += cost [currRow] [currCol];
    if (currCol == (n - 1) && maxCost < currCost) maxCost = currCost;

    upperRow = ((currRow - 1) + m) % m;
    lowerRow = (currRow + 1) % m;
    rightCol = currCol + 1;
    if (isVisited [upperRow] [currCol] == 0) solve (upperRow, currCol, isVisited, currCost);

    if (isVisited [lowerRow] [currCol] == 0) solve (lowerRow, currCol, isVisited, currCost);

    if (rightCol != n && isVisited [currRow] [rightCol] == 0) solve (currRow, rightCol, isVisited, currCost);

    isVisited [currRow] [currCol] = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32876511_32876829_5_38
32876511_32876857_3_21
Title: Printing specific user input in java 
----------------------------------------

public static void main (String s []) {
    System.out.println ("Enter 3 different names and the age of each person respectively:");
    Scanner sc = new Scanner (System.in);
    String n [] = new String [3];
    for (int i = 0;
    i < 3; i ++) {
        n [i] = sc.nextLine ();
    }
    int age [] = new int [3];
    age [0] = Integer.parseInt (n [0].split ("\\s+") [1]);
    age [1] = Integer.parseInt (n [1].split ("\\s+") [1]);
    age [2] = Integer.parseInt (n [2].split ("\\s+") [1]);
    int ageTemp [] = age;
    for (int i = 0;
    i < age.length; i ++) {
        for (int j = i + 1;
        j < age.length; j ++) {
            int tempAge = 0;
            String tempN = "";
            if (age [i] < ageTemp [j]) {
                tempAge = age [i];
                tempN = n [i];
                age [i] = age [j];
                n [i] = n [j];
                age [j] = tempAge;
                n [j] = tempN;
            }
        }
    }
    for (int i = 0;
    i < 3; i ++) {
        System.out.println (n [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter 3 different names and the age of each person respectively:");
    Scanner sc = new Scanner (System.in);
    String n1 = sc.nextLine ();
    String a1 = n1.split ("\\s+") [1];
    String n2 = sc.nextLine ();
    String a2 = n2.split ("\\s+") [1];
    String n3 = sc.nextLine ();
    String a3 = n3.split ("\\s+") [1];
    if (Integer.parseInt (a1) > Integer.parseInt (a2)) {
    }
    if (Integer.parseInt (a1) > Integer.parseInt (a3)) {
        System.out.println (n1);
    } else if (Integer.parseInt (a2) > Integer.parseInt (a3)) {
        System.out.println (n2);
    } else {
        System.out.println (n3);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32880185_32880339_1_71
32880185_32880419_2_25
Title: Count number of occurrence of a digit in two array in java 
----------------------------------------

public static void main (String [] args) {
    int [] numbers1;
    int [] numbers2;
    numbers1 = new int [5];
    numbers2 = new int [5];
    int smallest, largest, array_number1, array_number2;
    int smallestOccurence = 0, largestOccurence = 0;
    Scanner input = new Scanner (System.in);
    System.out.print ("Please enter 5 numbers: \n");
    for (int counter = 0;
    counter < numbers1.length; counter ++) {
        numbers1 [counter] = input.nextInt ();
    }
    int smallest1 = numbers1 [0], largest1 = numbers1 [0];
    for (int i : numbers1) {
        if (i < smallest1) {
            smallest1 = i;
        } else if (i > largest1) {
            largest1 = i;
        }

    }
    System.out.print ("Please enter 5 numbers: \n");
    for (int counter = 0;
    counter < numbers2.length; counter ++) {
        numbers2 [counter] = input.nextInt ();
    }
    int smallest2 = numbers2 [0], largest2 = numbers2 [0];
    for (int i : numbers2) {
        if (i < smallest2) {
            smallest2 = i;
        } else if (i > largest2) {
            largest2 = i;
        }

    }
    if (smallest1 < smallest2) {
        smallest = smallest1;
        array_number1 = 1;
    } else {
        smallest = smallest2;
        array_number1 = 2;
    }
    if (largest1 > largest2) {
        largest = largest1;
        array_number2 = 1;
    } else {
        largest = largest2;
        array_number2 = 2;
    }
    System.out.printf ("Smallest number: %d \t %d \nLargest number: %d \t %d \n", smallest, array_number1, largest, array_number2);
    for (int item : numbers1) {
        if (item == smallest) smallestOccurence ++;

        if (item == largest) largestOccurence ++;

    }
    for (int item : numbers2) {
        if (item == smallest) smallestOccurence ++;

        if (item == largest) largestOccurence ++;

    }
    System.out.println ("Occurences of smallest: " + smallest + " and largest: " + largestOccurence);
}
----------------------------------------

public static void main (String [] args) {
    int [] numbers1 = {1, 2, 3, 4, 7, 34, 5, - 10};
    int [] numbers2 = {1, 2, 3, 4, 7, 45, 5, 0};
    int smallest, largest;
    Arrays.sort (numbers1);
    Arrays.sort (numbers2);
    if (numbers1 [0] < numbers2 [0]) smallest = numbers1 [0];
    else smallest = numbers2 [0];

    if (numbers1 [numbers1.length - 1] > numbers2 [numbers2.length - 1]) largest = numbers1 [numbers1.length - 1];
    else largest = numbers2 [numbers2.length - 1];

    System.out.println (smallest);
    System.out.println (largest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32880986_32881029_9_72
32880986_32881062_11_31
Title: Hex to decimal conversion from a bufferreader 
----------------------------------------

public static BigInteger hexToDecimal (String hexInput) throws IOException {
    BigInteger decimal = BigInteger.ZERO;
    int len = hexInput.length ();
    for (int i = len - 1;
    i >= 0; i --) {
        char c = hexInput.charAt (len - i - 1);
        BigInteger cValue;
        switch (c) {
            case '1' :
                cValue = BigInteger.ONE;
                break;
            case '2' :
                cValue = BigInteger.valueOf (2l);
                break;
            case '3' :
                cValue = BigInteger.valueOf (3l);
                break;
            case '4' :
                cValue = BigInteger.valueOf (4l);
                break;
            case '5' :
                cValue = BigInteger.valueOf (5l);
                break;
            case '6' :
                cValue = BigInteger.valueOf (6l);
                break;
            case '7' :
                cValue = BigInteger.valueOf (7l);
                break;
            case '8' :
                cValue = BigInteger.valueOf (8l);
                break;
            case '9' :
                cValue = BigInteger.valueOf (9l);
                break;
            case 'A' :
                cValue = BigInteger.valueOf (10l);
                break;
            case 'B' :
                cValue = BigInteger.valueOf (11l);
                break;
            case 'C' :
                cValue = BigInteger.valueOf (12l);
                break;
            case 'D' :
                cValue = BigInteger.valueOf (13l);
                break;
            case 'E' :
                cValue = BigInteger.valueOf (14l);
                break;
            case 'F' :
                cValue = BigInteger.valueOf (15l);
                break;
            default :
                throw new IllegalArgumentException ("Non-hex character " + c + " found at position " + i);
        }
        decimal = decimal.add (cValue.multiply (BigInteger.valueOf (16).pow (i)));
    }
    return decimal;
}
----------------------------------------

public static ArrayList < Integer > hexToDecimal () throws IOException {
    FileReader in = new FileReader ("results.txt");
    BufferedReader br = new BufferedReader (in);
    String line;
    String ram = "";
    ArrayList < String > lines = new ArrayList < > ();
    ArrayList < Integer > output = new ArrayList < > ();
    while ((line = br.readLine ()) != null) {
        lines.add (line);
    }
    for (String y : lines) {
        ram = "";
        for (char x : y.toCharArray ()) {
            ram += convert (x);
        }
        output.add (Integer.parseInt (ram));
    }
    in.close ();
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32886697_32887040_4_50
32886697_32887049_5_24
Title: How to count the occurrences of a letter in a String without duplication in printing? 
----------------------------------------

public static void main (String [] args) {
    String sWord = new String ();
    int nCtr, nCtr2, nTemp = 0, n, n1 = 0, n2 = 0, n3 = 0;
    char cTemp = ' ', cTemp2 = ' ';
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a Word");
    sWord = input.nextLine ();
    n = sWord.length ();
    char [] cArray = new char [n];
    cArray = sWord.toCharArray ();
    int [] countsOfChars = new int [26];
    for (int ctr = cArray.length;
    ctr > 0; ctr --) {
        for (nCtr = 0; nCtr < cArray.length; nCtr ++) {
            if (cArray [nCtr] == sWord.charAt (n1)) {
                nTemp ++;
            }
        }
        cTemp = cArray [n2];
        for (nCtr2 = 0; nCtr2 < n; nCtr2 ++) {
            if (sWord.charAt (nCtr2) == '$') {
                n3 ++;
            }
        }
        countsOfChars [cTemp - 'a'] = nTemp;
        n1 ++;
        n2 ++;
        nTemp = 0;
    }
    for (int i = 0;
    i < 26; i ++) {
        if (countsOfChars [i] != 0) {
            System.out.println ("# of occurence of " + (char) ('a' + i) + " is " + countsOfChars [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String sWord = new String ();
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a Word");
    sWord = input.nextLine ();
    HashMap < Character, Integer > charCount = new HashMap < Character, Integer > ();
    for (Character c : sWord.toCharArray ()) {
        if (charCount.containsKey (c)) {
            charCount.put (c, charCount.get (c) + 1);
        } else {
            charCount.put (c, 1);
        }
    }
    for (Character key : charCount.keySet ()) {
        System.out.print (key + ":" + charCount.get (key) + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32901242_32901478_14_28
32901242_32901850_6_15
Title: Making two classes into one 
----------------------------------------

public void addNodes (int data) {
    Node node = new Node (data);
    if (head == null) {
        head = node;
        head.nextNode = head;
    } else {
        Node runner = head;
        while (runner.nextNode != head) {
            runner = runner.nextNode;
        }
        runner.nextNode = node;
        node.nextNode = head;
    }
}
----------------------------------------

public void addNodes (int data) {
    Node node = new Node (data);
    if (head == null) {
        head = node;
        tail = node;
    } else {
        tail.nextNode = node;
        tail = node;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32901242_32901478_30_39
32901242_32901850_16_26
Title: Making two classes into one 
----------------------------------------

public void print () {
    Node runner = head;
    boolean first = false;
    do {
        System.out.print ((first) ? "--> |" + runner.data + "|" : "|" + runner.data + "|");
        first = true;
        runner = runner.nextNode;
    } while (runner != head);
}
----------------------------------------

public void print () {
    boolean first = true;
    Node currentNode = head;
    while (currentNode != null) {
        System.out.print (! first ? "--> |" + currentNode.data + "|" : "|" + currentNode.data + "|");
        first = false;
        currentNode = currentNode.nextNode;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32904686_32904815_1_22
32904686_32913464_17_43
Title: Whats wrong with the math in my code? 
----------------------------------------

public static void avgGrade () {
    Scanner keyboard = new Scanner (System.in);
    double count = 0;
    double avgGrade = 0;
    double grade;
    double total = 0;
    while (true) {
        System.out.println ("Please input the grade");
        grade = keyboard.nextDouble ();
        count = count + 1;
        if (grade < 0) break;

        total += grade;
        avgGrade = total / count;
    }
    System.out.println ("Sum is " + total);
    System.out.printf ("The average of the  %.0f grades are %.2f ", count, avgGrade);
}
----------------------------------------

public static void avgGrade () {
    Scanner keyboard = new Scanner (System.in);
    double count = 0;
    double avgGrade = 0;
    double total = 0;
    while (true) {
        System.out.println ("Please input the grade");
        double grade = keyboard.nextDouble ();
        if (grade < 0) break;

        count = count + 1;
        total += grade;
        avgGrade = total / count;
    }
    System.out.println ("Sum is " + total);
    System.out.printf ("The average of the  %.0f grades are %.2f ", count, avgGrade);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3291655_33554878_3_12
3291655_37723702_3_12
Title: Get battery level and state in Android 
----------------------------------------

public void onReceive (Context context, Intent intent) {
    context.unregisterReceiver (this);
    int rawlevel = intent.getIntExtra (BatteryManager.EXTRA_LEVEL, - 1);
    int scale = intent.getIntExtra (BatteryManager.EXTRA_SCALE, - 1);
    int level = - 1;
    if (rawlevel >= 0 && scale > 0) {
        level = (rawlevel * 100) / scale;
    }
    batterLevel.setText ("Battery Level Remaining: " + level + "%");
}
----------------------------------------

public void onReceive (Context context, Intent intent) {
    context.unregisterReceiver (this);
    int rawlevel = intent.getIntExtra ("level", - 1);
    int scale = intent.getIntExtra ("scale", - 1);
    int level = - 1;
    if (rawlevel >= 0 && scale > 0) {
        level = (rawlevel * 100) / scale;
    }
    mBtn.setText ("Battery Level Remaining: " + level + "%");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32917098_32917213_1_13
32917098_32917493_5_18
Title: square of character inside square of another character in java 
----------------------------------------

public static void main (String arugs []) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Please enter the number of lines : ");
    int size = sc.nextInt ();
    sc.close ();
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            System.out.print ((char) ('a' + Math.min (size - j - 1, Math.min (size - i - 1, Math.min (i, j)))) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int size = in.nextInt ();
    String [] [] arr = new String [size] [size];
    String resultLine = "";
    for (int x = 0;
    x < size; x ++) {
        for (int y = 0;
        y < size; y ++) {
            arr [x] [y] = String.valueOf (minChar (x, y, size));
            resultLine += arr [x] [y] + " ";
        }
        resultLine += "\n";
    }
    System.out.println (resultLine);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32923687_32923722_1_15
32923687_32923732_6_23
Title: How to print a boolean value? 
----------------------------------------

public static boolean aGoodBase (char c) {
    char [] charArray = {'A', 'G', 'C', 'T'};
    boolean aBase;
    if (c == 'A' || c == 'G' || c == 'C' || c == 'T') {
        aBase = true;
    } else {
        aBase = false;
    }
    System.out.println (aBase);
    return aBase;
}
----------------------------------------

public static boolean aGoodBase (char c) {
    char [] charArray = {'A', 'G', 'C', 'T'};
    boolean aBase;
    if (c == 'A' || c == 'G' || c == 'C' || c == 'T') {
        System.out.println (aBase);
        return true;
    } else {
        System.out.println (aBase);
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32924678_32924698_1_13
32924678_32924714_1_12
Title: How to print String 
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    String print = null;
    for (String word : parts) {
        shift = shift * (count + 1) + 1;
        count ++;
        encryptWord (word, shift);
        String [] phrase = new String [] {word};
        print = String.join (" ", phrase);
    }
    return print;
}
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    for (int i = 0;
    i < parts.length; ++ i) {
        shift = shift * (count + 1) + 1;
        count ++;
        parts [i] = encryptWord (parts [i], shift);
    }
    return String.join (" ", parts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32924678_32924698_1_13
32924678_32924715_1_12
Title: How to print String 
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    String print = null;
    for (String word : parts) {
        shift = shift * (count + 1) + 1;
        count ++;
        encryptWord (word, shift);
        String [] phrase = new String [] {word};
        print = String.join (" ", phrase);
    }
    return print;
}
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    String [] phrase = new String [parts.length];
    for (String word : parts) {
        shift = shift * (count + 1) + 1;
        count ++;
        String encryptedWord = encryptWord (word, shift);
        phrase [count - 1] = encryptedWord;
    }
    return String.join (" ", phrase);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32924678_32924714_1_12
32924678_32924715_1_12
Title: How to print String 
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    for (int i = 0;
    i < parts.length; ++ i) {
        shift = shift * (count + 1) + 1;
        count ++;
        parts [i] = encryptWord (parts [i], shift);
    }
    return String.join (" ", parts);
}
----------------------------------------

public static String enrcyptText (String str, int shift) {
    int count = 0;
    String [] parts = str.split ("[\\W]");
    String [] phrase = new String [parts.length];
    for (String word : parts) {
        shift = shift * (count + 1) + 1;
        count ++;
        String encryptedWord = encryptWord (word, shift);
        phrase [count - 1] = encryptedWord;
    }
    return String.join (" ", phrase);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32935513_32936333_4_69
32935513_32936608_3_30
Title: Asking the user what size the array should be 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    Scanner numSc = new Scanner (System.in);
    int answer = 0;
    int numAnswer;
    int sum = 0;
    int average;
    while (true) {
        System.out.println ("Enter number 1 for arrays, 2 for arraylists, any other to quit");
        if (in.hasNextInt ()) {
            numAnswer = in.nextInt ();
            switch (numAnswer) {
                case 1 :
                case 2 :
                    answer = numAnswer;
                    break;
                default :
                    System.exit (0);
            }
        }
        if (answer == 1) {
            Scanner sizeSc = new Scanner (System.in);
            System.out.println ("Enter the size of the array: ");
            int size = sizeSc.nextInt ();
            int [] inputNums = new int [size];
            for (int i = 0;
            i < inputNums.length; i ++) {
                System.out.println ("Enter a number in the array: ");
                inputNums [i] = numSc.nextInt ();
                sum += inputNums [i];
            }
            average = (sum / size);
            System.out.println ("Sum of numbers: " + sum);
            System.out.println ("Average of numbers: " + average);
            System.out.println (" ");
        } else {
            System.out.println ("YOUR CODE TO THE LISTARRAY");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int average, sum = 0;
    Scanner input = new Scanner (System.in);
    Scanner length = new Scanner (System.in);
    Scanner option = new Scanner (System.in);
    System.out.println ("Enter 1 for arrays, 2 to use ArrayLists, or any other number to end the program");
    int x = option.nextInt ();
    switch (x) {
        case 1 :
            System.out.println ("Input array size: ");
            int len = length.nextInt ();
            int [] numbers = new int [len];
            for (int i = 0;
            i < numbers.length; i ++) {
                System.out.println ("Please enter number");
                numbers [i] = input.nextInt ();
                sum += numbers [i];
            }
            average = sum / len;
            System.out.println ("Total sum of all numbers: " + sum);
            System.out.println ("Average of all numbers: " + average);
        case 2 :
        default :
            System.out.println ("Program terminated.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32939310_32939383_1_22
32939310_32939679_7_32
Title: Search string within a text file 
----------------------------------------

public static void main (String args []) throws Exception {
    int tokencount;
    FileReader fr = new FileReader ("c:\\searchtxt.txt");
    BufferedReader br = new BufferedReader (fr);
    String s;
    int linecount = 0;
    Set < String > keywords = new HashSet < > (Arrays.asList ("AB", "BC", "D1", "B11", "BL:", "B/1:", "B1L:", "B11:"));
    String line;
    Set < String > lineSet;
    while ((s = br.readLine ()) != null) {
        lineSet = new HashSet (Arrays.asList (s.split (" ")));
        if (! Collections.disjoint (lineSet, keywords)) {
            System.out.println (s);
            String nextLine = br.readLine ();
            System.out.println (nextLine);
        }
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    int tokencount;
    FileReader fr = new FileReader ("c:\\searchtxt.txt");
    BufferedReader br = new BufferedReader (fr);
    String s = "";
    int linecount = 0;
    ArrayList < String > keywordList = new ArrayList < String > (Arrays.asList ("AB", "BC", "D1", "B11", "BL:", "B/1:", "B1L:", "B11:"));
    String line;
    while ((s = br.readLine ()) != null) {
        String [] lineWordList = s.split (" ");
        for (String word : lineWordList) {
            if (keywordList.contains (word)) {
                System.out.println (s);
                String nextLine = br.readLine ();
                System.out.println (nextLine);
                break;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32939540_32940374_3_13
32939540_35477689_3_12
Title: I want to output 20 numbers? 
----------------------------------------

public static void main (String [] args) {
    int [] lott = new int [20];
    int inc = 5;
    for (int i = 0;
    i < lott.length; i ++) {
        System.out.println (inc);
        inc += 7;
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] lott = new int [20];
    int val = 5;
    for (int i = 0;
    i < lott.length; i ++) {
        lott [i] = val;
        System.out.println (val);
        val = val + 7;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32939556_32939996_57_95
32939556_32973282_22_36
Title: Sorting by enum on adding to Set 
----------------------------------------

public Iterator < T > iterator () {
    return new Iterator < T > () {
        private Iterator < T > iterator = map.get (IListener.Priority.values () [0]).iterator ();
        private int nextIndex = 1;
        private Iterator < T > nextIterator = null;
        @Override
        public boolean hasNext () {
            if (iterator.hasNext () || nextIterator != null) return true;

            IListener.Priority [] priorities = IListener.Priority.values ();
            while (nextIndex < priorities.length) {
                Set < T > set = map.get (priorities [nextIndex ++]);
                if (! set.isEmpty ()) {
                    nextIterator = set.iterator ();
                    return true;
                }
            }
            return false;
        }@Override
        public T next () {
            if (iterator.hasNext ()) return iterator.next ();

            if (! hasNext ()) throw new NoSuchElementException ();

            iterator = nextIterator;
            nextIterator = null;
            return iterator.next ();
        }@Override
        public void remove () {
            iterator.remove ();
        }}

    ;
}
----------------------------------------

public Iterator < IListener > iterator () {
    synchronized (listenersByPriority) {
        List < IListener > output = new ArrayList < IListener > (size);
        for (LinkedHashSet < IListener > list : listenersByPriority.values ()) {
            for (IListener listener : list) {
                output.add (listener);
            }
        }
        return output.iterator ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32950649_32950912_19_29
32950649_32951480_15_32
Title: Unused parameters in Java with array 
----------------------------------------

public static double scoresAverage (int [] scores) {
    int endOfFirstHalf = (scores.length / 2) - 1;
    double firstHalf = calculateAverage (scores, 0, endOfFirstHalf);
    double secondHalf = calculateAverage (scores, endOfFirstHalf + 1, scores.length - 1);
    if (firstHalf < secondHalf) {
        return secondHalf;
    } else {
        return firstHalf;
    }
}
----------------------------------------

public int scoresAverage (int [] scores) {
    int endOfFirstHalf = (scores.length / 2) - 1;
    int firstHalf = calculateAverage (scores, 0, endOfFirstHalf);
    int secondHalf = calculateAverage (scores, scores.length / 2, scores.length - 1);
    if (firstHalf == secondHalf) {
        System.out.print ("First Half is the same as Second Half");
        return secondHalf;
    } else if (firstHalf < secondHalf) {
        System.out.print ("Second Half is the largest");
        return secondHalf;
    } else {
        System.out.print ("First Half is the largest");
        return firstHalf;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32951588_32957319_25_47
32951588_32957319_3_18
Title: Fast way to write a byte array into a file 
----------------------------------------

public static void main (String [] args) {
    Path path = Paths.get ("/home/felipe/teste.txt");
    byte [] data = null;
    try {
        data = Files.readAllBytes (path);
    } catch (IOException e1) {
        e1.printStackTrace ();
    }
    SimpleDateFormat sdf = new SimpleDateFormat ("YYYY-MM-DD HH:mm:ss");
    System.out.println ("TestOutputStream");
    System.out.println ("start: " + sdf.format (new Date ()));
    for (int i = 0;
    i < 1000; i ++) {
        try (OutputStream out = new FileOutputStream ("/home/felipe/Test/testOutputStream/file" + i + ".txt")) {
            out.write (data);
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
    System.out.println ("end: " + sdf.format (new Date ()));
}
----------------------------------------

public static void main (String [] args) {
    try {
        Path path = Paths.get ("/home/felipe/teste.txt");
        byte [] data = Files.readAllBytes (path);
        SimpleDateFormat sdf = new SimpleDateFormat ("YYYY-MM-DD HH:mm:ss");
        System.out.println ("TestFileWrite");
        System.out.println ("start: " + sdf.format (new Date ()));
        for (int i = 0;
        i < 1000; i ++) {
            Files.write (Paths.get ("/home/felipe/Test/testFileWrite/file" + i + ".txt"), data);
        }
        System.out.println ("end: " + sdf.format (new Date ()));
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32954984_32955041_1_20
32954984_32955044_1_22
Title: How to get field name from value from a class which has multiple same values for the fields 
----------------------------------------

private Map < String, List < String > > fillFruitMap () {
    Map < String, List < String > > fruitMap = new HashMap < String, List < String > > ();
    String fruitColor = "";
    String fruitName = "";
    Field [] fields = TestBug.class.getDeclaredFields ();
    for (int i = 0;
    i < fields.length; i ++) {
        try {
            fruitColor = fields [i].get (this).toString ();
            fruitName = fields [i].getName ();
            List < String > list = fruitMap.get (fruitColor);
            if (list == null) list = new ArrayList < String > ();

            list.add (fruitName);
            fruitMap.put (fruitColor, list);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    return fruitMap;
}
----------------------------------------

private Map < String, List < String > > fillFruitMap () {
    Map < String, String > fruitMap = new HashMap < String, List < String > > ();
    String fruitColor = "";
    String fruitName = "";
    Field [] fields = TestBug.class.getDeclaredFields ();
    for (int i = 0;
    i < fields.length; i ++) {
        try {
            fruitColor = fields [i].get (this).toString ();
            fruitName = fields [i].getName ();
            List < String > list = fruitMap.get (fruitColor);
            if (list == null) {
                list = new ArrayList < String > ();
                fruitMap.put (fruitColor, list);
            }
            list.add (fruitName);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    return fruitMap;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32973792_32975356_48_66
32973792_32976329_61_98
Title: Outline shape with a character g.draw java 
----------------------------------------

protected void paintComponent (Graphics gr) {
    super.paintComponent (gr);
    Graphics2D g = (Graphics2D) gr;
    g.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Font starFont = new Font ("Monospaced", Font.BOLD, 20);
    Shape starShape = createShape (starFont, "*");
    Stroke stroke = new ShapeStroke (new Shape [] {starShape}, 12.0f);
    Font textFont = new Font ("Serif", Font.PLAIN, 250);
    Shape textShape = createShape (textFont, "Stars!");
    g.translate (10, 250);
    Shape strokedTextShape = stroke.createStrokedShape (textShape);
    g.fill (strokedTextShape);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    int outlineCharacterWidth = 10;
    int lineHeight = 10;
    int shapeStart = 0;
    int x = shapeStart;
    int y = 0;
    for (String [] shape : shapes) {
        y = lineHeight;
        for (int row = 0;
        row < shape.length; row ++) {
            String bitmap = shape [row];
            x = shapeStart;
            for (int column = 0;
            column < bitmap.length (); column ++) {
                if (bitmap.charAt (column) == 'x') {
                    g.drawString (outlineCharacter, x, y);
                }
                x += outlineCharacterWidth;
            }
            y += lineHeight;
        }
        x += 20;
        shapeStart = x;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32974779_32975539_12_39
32974779_32976405_22_55
Title: How to save entire object for a checkbox in javafx 
----------------------------------------

public void start (Stage primaryStage) {
    VBox root = new VBox ();
    Book book = new Book (22, "firstBok");
    Book book1 = new Book (2, "secondBok");
    CheckBox checkB = new CheckBox (book.getName ());
    checkB.setUserData (book);
    CheckBox checkB1 = new CheckBox (book1.getName ());
    checkB1.setUserData (book1);
    Button btn = new Button ("Submit");
    btn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            if (checkB.isSelected ()) {
                int firstCheckBxId = ((Book) checkB.getUserData ()).getId ();
                System.out.println ("id:" + firstCheckBxId);
            }
            if (checkB1.isSelected ()) {
                int secondCheckBxId = ((Book) checkB1.getUserData ()).getId ();
                System.out.println ("id:" + secondCheckBxId);
            }
        }}

    );
    root.getChildren ().addAll (checkB, checkB1, btn);
    primaryStage.setScene (new Scene (root));
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    GridPane grid = new GridPane ();
    grid.setHgap (5);
    grid.setVgap (5);
    grid.setPadding (new Insets (10));
    List < Book > books = IntStream.rangeClosed (1, 10).mapToObj (i -> new Book ("Book " + i)).collect (Collectors.toList ());
    Set < Book > selectedBooks = new HashSet < > ();
    int row = 0;
    for (Book book : books) {
        CheckBox checkBox = new CheckBox ();
        checkBox.selectedProperty ().addListener ((obs, wasSelected, isNowSelected) -> {
            if (isNowSelected) {
                selectedBooks.add (book);
            } else {
                selectedBooks.remove (book);
            }
        });
        grid.addRow (row, checkBox, new Label (book.getTitle ()));
        row ++;
    }
    Button submit = new Button ("Submit selection");
    submit.setOnAction (e -> selectedBooks.forEach (book -> System.out.println (book.getTitle ())));
    GridPane.setHalignment (submit, HPos.CENTER);
    grid.add (submit, 0, row, 2, 1);
    Scene scene = new Scene (grid, 600, 600);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32981334_32981455_1_29
32981334_32981822_1_33
Title: Reading contents from a text file and storing them into an array 
----------------------------------------

public static void main (String [] args) {
    Scanner input;
    File fileIn = new File ("src/array2d/array2dtest1.txt");
    System.out.println (fileIn.getAbsolutePath ());
    int [] [] array = new int [5] [5];
    try {
        input = new Scanner (fileIn);
        String values = input.nextLine ();
        String [] value = values.split ("\\s+");
        int index = 0;
        for (int row = 0;
        row < 5; row ++) {
            index = row;
            for (int col = 0;
            col < 5; col ++) {
                array [row] [col] = Integer.parseInt (value [index * 5 + col]);
            }
        }
    } catch (FileNotFoundException e) {
        System.out.println (fileIn.getName () + " is not found.");
        return;
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner input;
    File fileIn = new File ("array2dtest1.txt");
    System.out.println (fileIn.getAbsolutePath ());
    try {
        input = new Scanner (fileIn);
        int row = input.nextInt ();
        int column = input.nextInt ();
        int min = Integer.MAX_VALUE;
        int val;
        int minR = 0, minC = 0;
        for (int i = 0;
        i < row; i ++) {
            for (int j = 0;
            j < column; j ++) {
                val = input.nextInt ();
                if (val < min) {
                    min = val;
                    minR = i;
                    minC = j;
                }
            }
        }
        System.out.println ("Min Value is " + min + "\nat position (" + minR + "," + minC + ")");
    } catch (FileNotFoundException e) {
        System.out.println (fileIn.getName () + " is not found.");
        return;
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32982588_32982685_1_11
32982588_32982701_5_23
Title: Why is this do while loop running infinitely? 
----------------------------------------

public static void main (String args []) {
    Scanner myScanner = new Scanner (System.in);
    double mon = getExpensesForDay (myScanner, "Monday");
    double tues = getExpensesForDay (myScanner, "Tuesday");
    double wed = getExpensesForDay (myScanner, "Wednesday");
    double thurs = getExpensesForDay (myScanner, "Thursday");
    double fri = getExpensesForDay (myScanner, "Friday");
    double sat = getExpensesForDay (myScanner, "Saturday");
    double sun = getExpensesForDay (myScanner, "Sunday");
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner;
    myScanner = new Scanner (System.in);
    double mon, tues, wed, thurs, fri, sat, sun;
    do {
        try {
            System.out.print ("Expenses for Monday: ");
            mon = myScanner.nextDouble ();
        } catch (Exception e) {
            mon = - 1;
            myScanner.nextLine ();
        }
    } while (mon < 0);
    System.out.println (mon);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32997496_32997784_1_14
32997496_32997970_5_36
Title: How do I extract numeric values from strings and add those numbers? 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String a = "int[]num=new int[]{1,2,3,3,1,2}";
    if (a.substring (a.indexOf ('{') + 1, a.indexOf ('}')).matches ("^[1-3,]+")) {
        String [] b = a.substring (a.indexOf ('{') + 1, a.indexOf ('}')).split (",");
        int sum = 0;
        for (String s : b) {
            sum += Integer.parseInt (s);
        }
        System.out.println (sum);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Step:1. This program takes input in the following structure that looks like array declaration:\nint[]num=new int[]{1,2,3}");
    System.out.println ("Step:2. The program should ignore all the strings and accept only the numeric value (i.e. in this case it is: 1,2,3).");
    System.out.println ("Step:3. The program then add the numners (i.e. 1+2+3) and print out the sum");
    System.out.println ("***********************\n");
    Scanner sc = new Scanner (System.in);
    System.out.println ("Write input: ");
    while (true) {
        try {
            String array = sc.nextLine ();
            if (array.contains ("int") || array.contains ("float") || array.contains ("double")) {
                double sum = 0;
                int start = array.indexOf ('{');
                int end = array.indexOf ('}');
                String strNum = array.substring (start + 1, end);
                String [] strArray = strNum.split (",");
                for (String s : strArray) {
                    sum += Double.parseDouble (s.trim ());
                }
                System.out.printf ("The sum of the array: %.5f", sum);
            } else {
                System.out.println ("Wrong input! Try again");
            }
        } catch (Exception e) {
            System.err.println ("Wrong input! Try again");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32997496_32997784_1_14
32997496_32998505_1_32
Title: How do I extract numeric values from strings and add those numbers? 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String a = "int[]num=new int[]{1,2,3,3,1,2}";
    if (a.substring (a.indexOf ('{') + 1, a.indexOf ('}')).matches ("^[1-3,]+")) {
        String [] b = a.substring (a.indexOf ('{') + 1, a.indexOf ('}')).split (",");
        int sum = 0;
        for (String s : b) {
            sum += Integer.parseInt (s);
        }
        System.out.println (sum);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Step:1. This program takes input in the following structure that looks like array declaration:\nint[]num=new int[]{1,2,3}");
    System.out.println ("Step:2. The program should ignore all the strings and accept only the numeric value (i.e. in this case it is: 1,2,3).");
    System.out.println ("Step:3. The program then add the numners (i.e. 1+2+3) and print out the sum");
    System.out.println ("***********************\n");
    int SUM = 0;
    try {
        Scanner sc = new Scanner (System.in);
        System.out.println ("Please enter array length");
        int arraylength = sc.nextInt ();
        System.out.println ("Please enter number");
        int [] numbers = new int [arraylength];
        for (int i = 0;
        i < numbers.length; i ++) {
            while (! sc.hasNextInt ()) sc.next ();

            numbers [i] = sc.nextInt ();
            SUM += numbers [i];
        }
        System.out.println ("sum is " + SUM);
    } catch (InputMismatchException e) {
        System.out.println ("enter interger");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32997496_32997970_5_36
32997496_32998505_1_32
Title: How do I extract numeric values from strings and add those numbers? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Step:1. This program takes input in the following structure that looks like array declaration:\nint[]num=new int[]{1,2,3}");
    System.out.println ("Step:2. The program should ignore all the strings and accept only the numeric value (i.e. in this case it is: 1,2,3).");
    System.out.println ("Step:3. The program then add the numners (i.e. 1+2+3) and print out the sum");
    System.out.println ("***********************\n");
    Scanner sc = new Scanner (System.in);
    System.out.println ("Write input: ");
    while (true) {
        try {
            String array = sc.nextLine ();
            if (array.contains ("int") || array.contains ("float") || array.contains ("double")) {
                double sum = 0;
                int start = array.indexOf ('{');
                int end = array.indexOf ('}');
                String strNum = array.substring (start + 1, end);
                String [] strArray = strNum.split (",");
                for (String s : strArray) {
                    sum += Double.parseDouble (s.trim ());
                }
                System.out.printf ("The sum of the array: %.5f", sum);
            } else {
                System.out.println ("Wrong input! Try again");
            }
        } catch (Exception e) {
            System.err.println ("Wrong input! Try again");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Step:1. This program takes input in the following structure that looks like array declaration:\nint[]num=new int[]{1,2,3}");
    System.out.println ("Step:2. The program should ignore all the strings and accept only the numeric value (i.e. in this case it is: 1,2,3).");
    System.out.println ("Step:3. The program then add the numners (i.e. 1+2+3) and print out the sum");
    System.out.println ("***********************\n");
    int SUM = 0;
    try {
        Scanner sc = new Scanner (System.in);
        System.out.println ("Please enter array length");
        int arraylength = sc.nextInt ();
        System.out.println ("Please enter number");
        int [] numbers = new int [arraylength];
        for (int i = 0;
        i < numbers.length; i ++) {
            while (! sc.hasNextInt ()) sc.next ();

            numbers [i] = sc.nextInt ();
            SUM += numbers [i];
        }
        System.out.println ("sum is " + SUM);
    } catch (InputMismatchException e) {
        System.out.println ("enter interger");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32997768_32998047_1_27
32997768_32998163_1_23
Title: Calculate Sum and Average 
----------------------------------------

public static void main (String [] args) {
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Please enter the number of students = ");
    int count = kbd.nextInt ();
    double sum = 0;
    double average = 0;
    for (int student = 0;
    student < count; student ++) {
        System.out.print ("Please enter Student: " + String.valueOf (student + 1) + " test grades = ");
        double grades = kbd.nextDouble ();
        sum += grades;
    }
    average = (sum / count);
    System.out.println ("The sum of the grades is = " + sum + "." + "\n");
    System.out.println ("The average of the grades is = " + average + ".");
}
----------------------------------------

public static void main (String [] args) {
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Please enter the number of students = ");
    int students = kbd.nextInt ();
    System.out.print ("Please enter " + students + " test grades = ");
    double sum = 0;
    for (int count = 0;
    count < students; count ++) {
        double grade = kbd.nextDouble ();
        sum += grade;
    }
    double average = (sum / students);
    System.out.println ("The sum of the numbers is = " + sum + "." + "\n");
    System.out.println ("The average of the numbers is = " + average + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33003289_33003568_1_19
33003289_33003982_1_14
Title: Storing Multiple Rows from MySQL query in MultiDimensional HashMap 
----------------------------------------

public Map < String, Map < String, String > > getData (final String query) {
    final Map < String, Map < String, String > > results = new HashMap < > ();
    try (final Statement stmt = this.conn.createStatement (); final ResultSet rs = stmt.executeQuery (query)) {
        final ResultSetMetaData rsmd = rs.getMetaData ();
        long rId = 0;
        while (rs.next ()) {
            final Map < String, String > record = new HashMap < > ();
            for (int i = 1;
            i < (rsmd.getColumnCount () + 1); i ++) {
                record.put (rsmd.getColumnLabel (i), rs.getString (i));
            }
            results.put (String.valueOf (rId ++), record);
        }
    } catch (final SQLException ex) {
        ex.printStackTrace (System.out);
    }
    return results;
}
----------------------------------------

public List < Map < String, String > > getData (final String query) throws SQLException {
    final List < Map < String, String > > results = new ArrayList < > ();
    try (Statement stmt = this.conn.createStatement (); ResultSet rs = stmt.executeQuery (query)) {
        ResultSetMetaData metaData = rs.getMetaData ();
        while (rs.next ()) {
            Map < String, String > record = new LinkedHashMap < > ();
            for (int col = 1;
            col <= metaData.getColumnCount (); col ++) record.put (metaData.getColumnLabel (col), rs.getString (col));

            results.add (record);
        }
    }
    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33010209_33011923_10_25
33010209_33045659_59_71
Title: Java 1.8 Diffie Hellman Group 14 returns InvalidAlgorithmException 
----------------------------------------

public static void main (String [] args) throws Exception {
    KeyPairGenerator hostKeyGen = KeyPairGenerator.getInstance ("DH");
    BigInteger p = new BigInteger (modp2048, 16);
    BigInteger g = BigInteger.valueOf (2L);
    System.out.println ("p bits: " + p.bitLength ());
    System.out.println ("g bits: " + g.bitLength ());
    DHParameterSpec dhGrp14KeySpec = new DHParameterSpec (p, p);
    hostKeyGen.initialize (dhGrp14KeySpec);
    System.out.println ("Creating Host DH private key...");
    KeyPair hostKey = hostKeyGen.generateKeyPair ();
    System.out.println ("Initiating host side Schannel...");
    KeyAgreement schannel = KeyAgreement.getInstance ("DH");
    schannel.init (hostKey.getPrivate ());
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BigInteger bad1 = new BigInteger (DH_GRP_14_P);
    BigInteger good1 = new BigInteger (1, DH_GRP_14_P);
    byte [] augmentedBytes = new byte [DH_GRP_14_P.length + 1];
    System.arraycopy (DH_GRP_14_P, 0, augmentedBytes, 1, DH_GRP_14_P.length);
    BigInteger good2 = new BigInteger (augmentedBytes);
    System.out.println (bad1);
    System.out.println (good1);
    System.out.println (good1.equals (good2));
    System.out.println (good1.isProbablePrime (50));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33017776_33017837_23_107
33017776_33017960_1_60
Title: Can't work out what is wrong with the code for my basic Android App 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    mikesButton = (Button) findViewById (R.id.mikesButton);
    mikesButton.setText ("Click Me");
    mikesButton.setBackgroundColor (Color.RED);
    mikesButton.setOnClickListener (new Button.OnClickListener () {
        public void onClick (View v) {
            TextView Change = (TextView) findViewById (R.id.mikesText);
            Change.setText ("Good job, it changed!");
        }}

    );
    mikesButton.setOnLongClickListener (new Button.OnLongClickListener () {
        public boolean onLongClick (View v) {
            TextView Change = (TextView) findViewById (R.id.mikesText);
            Change.setText ("Good job, it changed when you held onto the button!");
            return true;
        }}

    );
    mikesButton = (Button) findViewById (R.id.mikesButton);
    this.gestureDetector = new GestureDetectorCompat (this, this);
    gestureDetector.setOnDoubleTapListener (this);
    TextView mikesText = (TextView) findViewById (R.id.mikesText);
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    this.mikesButton = (Button) findViewById (R.id.mikesButton);
    this.mikesButton.setText ("Click Me");
    this.mikesButton.setBackgroundColor (Color.RED);
    this.mikesText = (TextView) findViewById (R.id.mikesText);
    this.mikesButton.setOnClickListener (new Button.OnClickListener () {
        public void onClick (View v) {
            MainActivity.this.mikesText.setText ("Good job, it changed!");
        }}

    );
    this.mikesButton.setOnLongClickListener (new Button.OnLongClickListener () {
        public boolean onLongClick (View v) {
            MainActivity.this.mikesText.setText ("Good job, it changed when you held onto the button!");
            return true;
        }}

    );
    this.gestureDetector = new GestureDetectorCompat (this, this);
    this.gestureDetector.setOnDoubleTapListener (this);
    Button otherButton = new Button (this);
    otherButton.setText ("Hey i was made by code");
    otherButton.setBackgroundColor (Color.BLUE);
    RelativeLayout.LayoutParams buttonDeets = new RelativeLayout.LayoutParams (RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
    buttonDeets.addRule (RelativeLayout.CENTER_HORIZONTAL);
    buttonDeets.addRule (RelativeLayout.CENTER_VERTICAL);
    RelativeLayout mainLayout = this.findViewById (R.id.mainLayout);
    mainLayout.addView (otherButton, buttonDeets);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33029964_33030190_37_50
33029964_33862608_37_50
Title: Java - How to highlight searched word in results 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Bible Search");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33029964_33030190_63_107
33029964_33862608_60_122
Title: Java - How to highlight searched word in results 
----------------------------------------

public TestPane () {
    setLayout (new BorderLayout ());
    JPanel searchPane = new JPanel (new GridBagLayout ());
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.insets = new Insets (2, 2, 2, 2);
    searchPane.add (new JLabel ("Find: "), gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    findText = new JTextField (20);
    searchPane.add (findText, gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.NONE;
    gbc.weightx = 0;
    search = new JButton ("Search");
    searchPane.add (search, gbc);
    add (searchPane, BorderLayout.NORTH);
    model = new DefaultListModel < > ();
    list = new JList (model);
    list.setCellRenderer (new HighlightListCellRenderer ());
    add (new JScrollPane (list));
    ActionHandler handler = new ActionHandler ();
    search.addActionListener (handler);
    findText.addActionListener (handler);
    try (BufferedReader reader = new BufferedReader (new InputStreamReader (getClass ().getResourceAsStream ("/Script.txt")))) {
        String text = null;
        while ((text = reader.readLine ()) != null) {
            model.addElement (text);
        }
    } catch (IOException exp) {
        exp.printStackTrace ();
    }
}
----------------------------------------

public TestPane () {
    setLayout (new BorderLayout ());
    JPanel searchPane = new JPanel (new GridBagLayout ());
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.insets = new Insets (2, 2, 2, 2);
    searchPane.add (new JLabel ("Find: "), gbc);
    gbc.gridx ++;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    findText = new JTextField (20);
    searchPane.add (findText, gbc);
    add (searchPane, BorderLayout.NORTH);
    ta = new JTextArea (20, 40);
    ta.setWrapStyleWord (true);
    ta.setLineWrap (true);
    ta.setEditable (false);
    add (new JScrollPane (ta));
    loadFile ();
    keyTimer = new Timer (250, new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            String find = findText.getText ();
            Document document = ta.getDocument ();
            try {
                for (int index = 0;
                index + find.length () < document.getLength (); index ++) {
                    String match = document.getText (index, find.length ());
                    if (find.equals (match)) {
                        javax.swing.text.DefaultHighlighter.DefaultHighlightPainter highlightPainter = new javax.swing.text.DefaultHighlighter.DefaultHighlightPainter (Color.YELLOW);
                        ta.getHighlighter ().addHighlight (index, index + find.length (), highlightPainter);
                    }
                }
            } catch (BadLocationException exp) {
                exp.printStackTrace ();
            }
        }}

    );
    keyTimer.setRepeats (false);
    findText.getDocument ().addDocumentListener (new DocumentListener () {
        @Override
        public void insertUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }@Override
        public void removeUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }@Override
        public void changedUpdate (DocumentEvent e) {
            keyTimer.restart ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33030775_33049434_20_49
33030775_33049434_64_82
Title: Java - Where to put Timer code in my file? 
----------------------------------------

public Clock (Calendar cal) {
    ActionListener listener = new ActionListener () {
        public void actionPerformed (ActionEvent event) {
            cal.setTime (new Date ());
            updateTime (cal);
        }}

    ;
    year = new JLabel ();
    month = new JLabel ();
    date = new JLabel ();
    hour = new JLabel ();
    minute = new JLabel ();
    second = new JLabel ();
    setLayout (new FlowLayout ());
    add (year);
    add (month);
    add (date);
    add (hour);
    add (minute);
    add (second);
    updateTime (cal);
    javax.swing.Timer timer = new javax.swing.Timer (500, listener);
    timer.setInitialDelay (0);
    timer.start ();
}
----------------------------------------

public Clock () {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                ex.printStackTrace ();
            }
            Calendar current = Calendar.getInstance ();
            Clock frame = new Clock (current);
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33034128_33034356_7_45
33034128_33034773_2_31
Title: While counter not functioning 
----------------------------------------

public static void main (String [] args) {
    int NumberGuess = 0;
    Random randomNumber = new Random ();
    int randomInt = randomNumber.nextInt (51);
    System.out.println ("Guess the number between 0 -50:");
    int i = 0;
    do {
        Scanner UserGuess = new Scanner (System.in);
        NumberGuess = UserGuess.nextInt ();
        if (NumberGuess < 0 || NumberGuess > 50) {
            System.out.println ("Invalid Input, please enter numbers between 0 and 50");
        } else if (NumberGuess < randomInt) {
            System.out.println ("Guess is too small.");
            i ++;
            System.out.println ("You have made " + i + " guesses out of 7");
        } else if (NumberGuess > randomInt) {
            System.out.println ("Guess is too big.");
            i ++;
            System.out.println ("You have made " + i + " guesses out of 7");
        } else if (NumberGuess == randomInt) {
            System.out.println ("Correct! You win!");
            System.out.println ("It took you " + i + " guesses.");
            System.exit (0);
        }

    } while (i < 8);
    System.out.println ("Game over!");
    System.out.println ("All 7 Guesses used!");
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    int NumberGuess = 0;
    Random randomNumber = new Random ();
    int randomInt = randomNumber.nextInt (51);
    System.out.println ("Guess the number between 0 -50:");
    int i = 1;
    Scanner UserGuess = new Scanner (System.in);
    while (i <= 7) {
        NumberGuess = UserGuess.nextInt ();
        if (NumberGuess == randomInt) {
            System.out.println ("Correct! You win!");
            System.out.println ("It took you " + i + " guesses.");
            System.exit (0);
        } else if (NumberGuess < 0 || NumberGuess > 50) {
            System.out.println ("Invalid Input, please enter numbers between 0 and 50");
        } else if (NumberGuess < randomInt) {
            System.out.println ("Guess is too small.");
        } else if (NumberGuess > randomInt) {
            System.out.println ("Guess is too big.");
        }

        System.out.println ("You have made " + i + " guesses out of 7");
        i ++;
    }
    System.out.println ("Game over!");
    System.out.println ("All 7 Guesses used!");
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33036087_33036152_5_17
33036087_33036200_1_15
Title: How would I use a while loop to keep requesting user input 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a year to check if it is a leap year");
    while (true) {
        Scanner input = new Scanner (System.in);
        int year = input.nextInt ();
        if (year == 0) break;

        if ((year % 100 == 0 && year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)) System.out.println (year + " is a leap year");
        else System.out.println (year + " is not a leap year");

    }
}
----------------------------------------

public static void main (String [] args) {
    int year = 1;
    while (year > 0) {
        System.out.println ("Enter a year to check if it is a leap year");
        Scanner input = new Scanner (System.in);
        year = input.nextInt ();
        if ((year % 4 == 0) || ((year % 400 == 0) && (year % 100 != 0))) System.out.println (year + " is a leap year");
        else System.out.println (year + " is not a leap year");

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33052190_33052317_3_25
33052190_33052392_3_24
Title: Java project: number of students that passed or fail?? Logical error 
----------------------------------------

public static void main (String [] args) {
    int passes = 0;
    int failures = 0;
    int result;
    for (int studentCounter = 1;
    studentCounter <= 10;) {
        String input = JOptionPane.showInputDialog ("Enter (1=pass, 2= fail)");
        result = Integer.parseInt (input);
        if (result == 1) {
            passes = passes + 1;
            studentCounter ++
        } else if (result == 2) {
            failures = failures + 1;
            studentCounter ++
        } else {
            JOptionPane.showMessageDialog (null, "Error input 1 or 2");
        }

    }
    JOptionPane.showMessageDialog (null, "Passed:" + passes + "Failed:" + failures);
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    int passes = 0;
    int failures = 0;
    int result;
    for (int studentCounter = 1;
    studentCounter <= 10; studentCounter ++) {
        String input = JOptionPane.showInputDialog ("Enter (1=pass, 2= fail)");
        result = Integer.parseInt (input);
        if (result == 1) {
            passes ++;
        } else if (result == 2) {
            failures ++;
        } else if ((result != 1) && (result != 2)) {
            studentCounter --;
            JOptionPane.showMessageDialog (null, "Error input 1 or 2");
        }

    }
    JOptionPane.showMessageDialog (null, "Passed:" + passes + " Failed:" + failures);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33054245_33054321_1_10
33054245_33054357_1_11
Title: For loop within a for loop 
----------------------------------------

public static void main (String [] args) {
    for (int j = 32;
    j < 122; j ++) {
        System.out.print ((char) j);
        if ((j - 32) % 10 == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int j = 32;
    j < 122; j ++) {
        for (int i = 0;
        i <= 10; i ++) {
            System.out.print ((char) j);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33054815_33054927_1_11
33054815_33058107_4_20
Title: Transforming int to char with input (edited) 
----------------------------------------

public static void main (String arg []) {
    String input = "abcdefghij";
    String output = "";
    if (checkValidity (input)) {
        for (int i = 0;
        i < input.length (); i ++) {
            output += encrypt (input.charAt (i));
        }
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter a 4 letter word only uses the first 10 letter on english alphabet(a,b,c,d,e,f,g,h,i,j):  ");
    Scanner keyboard = new Scanner (System.in);
    String input = keyboard.next ();
    if (input.length () != 4) {
        System.out.println ("please enter a word with 4 letters");
        return;
    }
    transformAndPrint (input.charAt (0));
    transformAndPrint (input.charAt (1));
    transformAndPrint (input.charAt (2));
    transformAndPrint (input.charAt (3));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33054815_33054927_1_11
33054815_33058499_10_18
Title: Transforming int to char with input (edited) 
----------------------------------------

public static void main (String arg []) {
    String input = "abcdefghij";
    String output = "";
    if (checkValidity (input)) {
        for (int i = 0;
        i < input.length (); i ++) {
            output += encrypt (input.charAt (i));
        }
    }
    System.out.println (output);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    while (scanner.hasNext ()) {
        String s = scanner.next ();
        char c = s.charAt (0);
        char transformedString = transform (c);
        System.out.println (transformedString);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33054815_33058107_4_20
33054815_33058499_10_18
Title: Transforming int to char with input (edited) 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter a 4 letter word only uses the first 10 letter on english alphabet(a,b,c,d,e,f,g,h,i,j):  ");
    Scanner keyboard = new Scanner (System.in);
    String input = keyboard.next ();
    if (input.length () != 4) {
        System.out.println ("please enter a word with 4 letters");
        return;
    }
    transformAndPrint (input.charAt (0));
    transformAndPrint (input.charAt (1));
    transformAndPrint (input.charAt (2));
    transformAndPrint (input.charAt (3));
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    while (scanner.hasNext ()) {
        String s = scanner.next ();
        char c = s.charAt (0);
        char transformedString = transform (c);
        System.out.println (transformedString);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33067009_33068487_55_67
33067009_33068487_75_93
Title: Make java textarea as Inputstream to run shell command in interactive mode using Jsch 
----------------------------------------

public int read () throws IOException {
    while (null == s || s.length () <= pos) {
        try {
            s = q.take ();
            pos = 0;
        } catch (InterruptedException ex) {
            Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
    int ret = (int) s.charAt (pos);
    pos ++;
    return ret;
}
----------------------------------------

public int read (byte [] b, int off, int len) throws IOException {
    int bytes_copied = 0;
    while (bytes_copied < 1) {
        while (null == s || s.length () <= pos) {
            try {
                s = q.take ();
                System.out.println ("s = " + s);
                pos = 0;
            } catch (InterruptedException ex) {
                Logger.getLogger (Main.class.getName ()).log (Level.SEVERE, null, ex);
            }
        }
        int bytes_to_copy = len < s.length () - pos ? len : s.length () - pos;
        System.arraycopy (s.getBytes (), pos, b, off, bytes_to_copy);
        pos += bytes_to_copy;
        bytes_copied += bytes_to_copy;
    }
    return bytes_copied;
}
----------------------------------------
