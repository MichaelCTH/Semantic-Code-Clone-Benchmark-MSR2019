$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48524537_48524662_1_16
48524537_48524781_1_14
Title: Printing an Array into String 
----------------------------------------

public static void print () {
    String row = "";
    for (int i = 0;
    i < board.length; i ++) {
        for (int j = 0;
        j < board [i].length; j ++) {
            if (board [i] [j] == 0) {
                row += "-";
            } else {
                row += (char) (board [i] [j]);
            }
            if (j == board [i].length - 1) {
                Terminal.printLine (row);
                row = "";
            }
        }
    }
}
----------------------------------------

public static void print () {
    StringBuilder row = new StringBuilder ();
    for (int i = 0;
    i < board.length; i ++) {
        for (int j = 0;
        j < board [i].length; j ++) {
            if (board [i] [j] == 0) {
                row.append ("-");
            } else {
                row.append ((char) (board [i] [j]));
            }
        }
        Terminal.printLine (row.toString ());
        row = new StringBuilder ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48528132_48542872_23_49
48528132_48542872_60_83
Title: Multi threading-Odd Even Number 
----------------------------------------

public void run () {
    synchronized (threadNumberPrinting) {
        localCoutn.set (1);
        while (threadNumberPrinting.status < 100) {
            while (! (threadNumberPrinting.status == localCoutn.get ())) {
                try {
                    threadNumberPrinting.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            System.out.println (Thread.currentThread ().getName () + " is Printing :" + threadNumberPrinting.status);
            threadNumberPrinting.status = threadNumberPrinting.status + 1;
            int tempLocal = localCoutn.get ();
            tempLocal = tempLocal + 2;
            localCoutn.set (tempLocal);
            threadNumberPrinting.notifyAll ();
        }
    }
}
----------------------------------------

public void run () {
    synchronized (threadNumberPrinting) {
        localCoutn.set (2);
        while (threadNumberPrinting.status < 100) {
            while (! (threadNumberPrinting.status == localCoutn.get ())) {
                try {
                    threadNumberPrinting.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            System.out.println (Thread.currentThread ().getName () + " is Printing :" + threadNumberPrinting.status);
            threadNumberPrinting.status = threadNumberPrinting.status + 1;
            int tempLocal = localCoutn.get ();
            tempLocal = tempLocal + 2;
            localCoutn.set (tempLocal);
            threadNumberPrinting.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48535776_48536594_1_15
48535776_48536847_1_21
Title: Achieving Terminal Commands using processbuilder 
----------------------------------------

public static void main (String [] args) throws IOException {
    ArrayList < String > lst = new ArrayList < String > ();
    lst.add ("c:\\Anwendungen\\git\\bin\\bash");
    lst.add ("-c");
    lst.add ("dig www.kde.org |grep kde");
    ProcessBuilder bld = new ProcessBuilder (lst);
    Process proc = bld.start ();
    BufferedReader bfRdr = new BufferedReader (new InputStreamReader (proc.getInputStream ()));
    bfRdr.lines ().forEach ((String line) -> {
        System.out.println (line);
    });
}
----------------------------------------

public static void main (String args []) throws IOException {
    String line = null;
    InputStream in = null;
    String logFilePath = System.getProperty ("user.dir") + "/logs/log1.log";
    String s1 = "grep -n 'Start' " + logFilePath + "  | tail -n 1 | cut -d : -f 1";
    String [] cmd = {"/bin/sh", "-c", s1};
    try {
        Runtime rt = Runtime.getRuntime ();
        Process proc = rt.exec (cmd);
        in = proc.getInputStream ();
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        line = br.readLine ();
    } finally {
        if (in != null) in.close ();

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48537314_48537477_1_17
48537314_48538848_1_16
Title: "I am accepting User data via Form I want to add System Date and Time in my SQL Database how should I do it using JAVA?" 
----------------------------------------

@Override
public void saveOrUpdate (Contact contact) {
    if (contact.getId () > 0) {
        String sql = "UPDATE contact SET name=?, email=?, address=?, " + "telephone=?, timestamp=NOW() WHERE contact_id=?";
        jdbcTemplate.update (sql, contact.getName (), contact.getEmail (), contact.getAddress (), contact.getTelephone (), contact.getId ());
    } else {
        String sql = "INSERT INTO contact (name, email, address, telephone, timestamp)" + " VALUES (?, ?, ?, ?, NOW())";
        jdbcTemplate.update (sql, contact.getName (), contact.getEmail (), contact.getAddress (), contact.getTelephone ());
    }
}
----------------------------------------

@Override
public void saveOrUpdate (Contact contact) {
    if (contact.getId () > 0) {
        String sql = "UPDATE contact SET name=?, email=?, address=?, " + "telephone=?, timestamp=? WHERE contact_id=?";
        jdbcTemplate.update (sql, contact.getName (), contact.getEmail (), contact.getAddress (), contact.getTelephone (), contact.getCreatedAt (), contact.getId ());
    } else {
        String sql = "INSERT INTO contact (name, email, address, telephone, timestamp) VALUES (?, ?, ?, ?, ?)";
        jdbcTemplate.update (sql, contact.getName (), contact.getEmail (), contact.getAddress (), contact.getTelephone (), new Timestamp (System.currentTimeMillis ()));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48542030_48562317_10_39
48542030_48579020_1_14
Title: Crop dynamically signature images 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedImage src = ImageIO.read (new URL ("https://www.citrix.com/blogs/wp-content/uploads/2015/02/Signature-Richard1.jpg"));
    int x0 = src.getWidth ();
    int y0 = src.getHeight ();
    int x1 = 0;
    int y1 = 0;
    int unusedcolor = src.getRGB (0, 0);
    for (int y = 0;
    y < src.getHeight (); y ++) {
        for (int x = 0;
        x < src.getWidth (); x ++) {
            int clr = src.getRGB (x, y);
            if (clr != unusedcolor) {
                x0 = Math.min (x0, x);
                y0 = Math.min (y0, y);
                x1 = Math.max (x1, x);
                y1 = Math.max (y1, y);
            }
        }
    }
    if (x1 > x0 && y1 > y0) {
        BufferedImage dest = src.getSubimage (x0, y0, x1 - x0, y1 - y0);
        ImageIO.write (dest, "png", new File ("out.png"));
        Runtime.getRuntime ().exec ("cmd /c start out.png");
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedImage img = ImageIO.read (new URL ("http://assets-cdn.github.com/images/modules/open_graph/github-mark.png"));
    BufferedImage sigImage = cropSignature (img);
    SwingUtilities.invokeLater (() -> {
        JFrame f = new JFrame ();
        f.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);
        f.setContentPane (new JLabel (new ImageIcon (sigImage)));
        f.pack ();
        f.setLocationRelativeTo (null);
        f.setVisible (true);
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48545774_48549052_1_42
48545774_48549977_1_35
Title: "Comparing two iterators and checking which elements were added removed or the same between the two" 
----------------------------------------

public static < T > void compareEntriesOfTwoStreams (Iterator < T > sourceOne, Iterator < T > sourceTwo, Comparator < T > comparator) {
    T valueInOne = sourceOne != null ? sourceOne.hasNext () ? sourceOne.next () : null : null;
    T valueInTwo = sourceTwo != null ? sourceTwo.hasNext () ? sourceTwo.next () : null : null;
    while (valueInOne != null && valueInTwo != null) {
        if (comparator.compare (valueInOne, valueInTwo) > 0) {
            while (valueInTwo != null && comparator.compare (valueInOne, valueInTwo) > 0) {
                System.out.println ("Not present in list 1, Present in list 2: " + valueInTwo);
                valueInTwo = sourceTwo.hasNext () ? sourceTwo.next () : null;
            }
        } else if (comparator.compare (valueInOne, valueInTwo) < 0) {
            while (valueInOne != null && comparator.compare (valueInOne, valueInTwo) < 0) {
                System.out.println ("Not present in list 2, Present in list 1: " + valueInOne);
                valueInOne = sourceOne.hasNext () ? sourceOne.next () : null;
            }
        } else if (comparator.compare (valueInOne, valueInTwo) == 0) {
            System.out.println ("present in both list:" + valueInOne);
            valueInTwo = sourceTwo.hasNext () ? sourceTwo.next () : null;
            valueInOne = sourceOne.hasNext () ? sourceOne.next () : null;
        }

    }
    while (valueInOne != null) {
        System.out.println ("Not present in list 2, Present in list 1: " + valueInOne);
        valueInOne = sourceOne.hasNext () ? sourceOne.next () : null;
    }
    while (valueInTwo != null) {
        System.out.println ("Not present in list 1, Present in list 2: " + valueInTwo);
        valueInTwo = sourceTwo.hasNext () ? sourceTwo.next () : null;
    }
}
----------------------------------------

public static < T > void compareEntriesOfTwoStreams (Iterator < T > sourceOne, Iterator < T > sourceTwo, Comparator < T > comparator) {
    T valueInOne = sourceOne.next ();
    T valueInTwo = sourceTwo.next ();
    while (sourceOne.hasNext () || sourceTwo.hasNext ()) {
        if (comparator.compare (valueInOne, valueInTwo) == 0) {
            System.out.println ("Present in both list 1 and 2: " + valueInOne);
            valueInOne = getNextValue (valueInOne, sourceOne);
            valueInTwo = getNextValue (valueInTwo, sourceTwo);
        } else if (comparator.compare (valueInOne, valueInTwo) < 0) {
            System.out.println ("Present in list 1, Not present in list 2: " + valueInOne);
            valueInOne = getNextValue (valueInOne, sourceOne);
        } else if (comparator.compare (valueInOne, valueInTwo) > 0) {
            System.out.println ("Not present in list 1, Present in list 2: " + valueInTwo);
            valueInTwo = getNextValue (valueInTwo, sourceTwo);
        }

        if (! sourceOne.hasNext ()) {
            sourceTwo.next ();
        }
        if (! sourceTwo.hasNext ()) {
            sourceOne.next ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48556644_48556778_1_39
48556644_48558518_17_60
Title: How to debug a Java serialization fault? 
----------------------------------------

public static void main (String [] args) {
    IQIncreaser bakra = new IQIncreaser ();
    bakra.setIq (80);
    try {
        if (! Paths.get ("D:/saveIQ.ser").toFile ().exists ()) {
            ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream ("/tmp/abc.ser"));
            oos.writeObject (bakra);
            oos.close ();
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    System.out.println ("Welcome to the IQ increaser!!!");
    System.out.println ("Whenver you run this game your IQ will increase by 1!!");
    System.out.println ("Just check it out");
    System.out.println ("Your IQ at beginning was " + bakra.getIq () + ", come back for more");
    try {
        ObjectInputStream ois = new ObjectInputStream (new FileInputStream ("D:/saveIQ.ser"));
        IQIncreaser restoredAndIncreased = (IQIncreaser) ois.readObject ();
        restoredAndIncreased.setIq (restoredAndIncreased.getIq () + 1);
        System.out.println ("The increased IQ is " + restoredAndIncreased.getIq ());
        ois.close ();
        ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream ("D:/saveIQ.ser"));
        oos.writeObject (restoredAndIncreased);
        oos.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Path path = Paths.get ("/home/akshayap/saveIQ.ser");
    if (Files.notExists (path)) {
        IQIncreaser bakra = new IQIncreaser ();
        bakra.setIq (80);
        try {
            ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream ("/home/akshayap/saveIQ.ser"));
            oos.writeObject (bakra);
            oos.close ();
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    System.out.println ("Welcome to the IQ increaser!!!");
    System.out.println ("Whenver you run this game your IQ will increase by 1!!");
    System.out.println ("Just check it out");
    IQIncreaser restoredAndIncreased = null;
    try {
        ObjectInputStream ois = new ObjectInputStream (new FileInputStream ("/home/akshayap/saveIQ.ser"));
        restoredAndIncreased = (IQIncreaser) ois.readObject ();
        System.out.println ("Your IQ at beginning was " + restoredAndIncreased.getIq () + ", come back for more");
        restoredAndIncreased.setIq (restoredAndIncreased.getIq () + 1);
        System.out.println ("The increased IQ is " + restoredAndIncreased.getIq ());
        ois.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    try {
        ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream ("/home/akshayap/saveIQ.ser"));
        oos.writeObject (restoredAndIncreased);
        oos.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48556775_48557871_1_28
48556775_48643879_1_26
Title: Populate string value in a map only if matches the threshold bytes 
----------------------------------------

public void populate (final List < Task > tasks) {
    Map < String, String > holder = new HashMap < > ();
    int size = 0;
    int index = 0;
    int lengthTask = 0;
    int lengthSb = 0;
    StringBuilder sb = new StringBuilder ();
    for (Task task : tasks) {
        lengthTask = task.toString ().getBytes (StandardCharsets.UTF_8).length;
        lengthSb = sb.toString ().getBytes (StandardCharsets.UTF_8).length;
        if (size + lengthTask + lengthSb > 60000) {
            System.out.println ("last added size " + size);
            String fileName = "tasks_info_" + index + ".txt";
            holder.put (fileName, sb.toString ());
            index ++;
            sb = new StringBuilder ();
            size = 0;
        }
        sb.append (task).append (System.getProperty ("line.separator"));
        size += sb.toString ().getBytes (StandardCharsets.UTF_8).length;
        System.out.println ("size " + size);
    }
    String fileName = "tasks_info_" + index + ".txt";
    holder.put (fileName, sb.toString ());
    System.out.println (holder);
}
----------------------------------------

public Map < String, String > populate (final List < Task > tasks) {
    Map < String, String > holder = new HashMap < > ();
    if (tasks.size () == 0) return holder;

    int index = 0;
    int nl = System.getProperty ("line.separator").getBytes (StandardCharsets.UTF_8).length;
    StringBuilder sb = new StringBuilder ();
    sb.append (System.currentTimeMillis ()).append (System.getProperty ("line.separator"));
    int size = sb.toString ().getBytes (StandardCharsets.UTF_8).length;
    for (Task task : tasks) {
        int ts = String.valueOf (task).getBytes (StandardCharsets.UTF_8).length;
        if (size + ts + nl > 60000) {
            String fileName = "tasks_info_" + index + ".txt";
            holder.put (fileName, sb.toString ());
            index ++;
            sb = new StringBuilder ();
            sb.append (System.currentTimeMillis ()).append (System.getProperty ("line.separator"));
            size = sb.toString ().getBytes (StandardCharsets.UTF_8).length;
        }
        sb.append (task).append (System.getProperty ("line.separator"));
        size += ts + nl;
    }
    String fileName = "tasks_info_" + index + ".txt";
    holder.put (fileName, sb.toString ());
    return holder;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48563505_48563569_1_10
48563505_48564247_1_37
Title: How to check if two matrices have an identical row? 
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    boolean check = false;
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < b.length; j ++) {
            if (compareRows (a [i], b [j])) check = true;

        }
    }
    return check;
}
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    boolean check = false;
    for (int i = 0;
    i < a.length; i ++) {
        for (int k = 0;
        k < b.length; k ++) {
            for (int j = 0;
            j < b [0].length; j ++) {
                if (a [i] [j] != b [k] [j]) {
                    break;
                } else {
                    if (j == b [0].length - 1) {
                        check = true;
                    }
                }
            }
            if (check == true) {
                break;
            }
        }
        if (check == true) {
            break;
        }
    }
    return check;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48563505_48563569_1_10
48563505_48570930_1_13
Title: How to check if two matrices have an identical row? 
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    boolean check = false;
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < b.length; j ++) {
            if (compareRows (a [i], b [j])) check = true;

        }
    }
    return check;
}
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    int row_size = a [0].length;
    for (int i = 0;
    i < a.length; i ++) {
        b : for (int j = 0;
        j < b.length; j ++) {
            for (int k = 0;
            k < row_size; k ++) {
                if (a [i] [k] != b [j] [k]) continue b;

            }
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48563505_48564247_1_37
48563505_48570930_1_13
Title: How to check if two matrices have an identical row? 
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    boolean check = false;
    for (int i = 0;
    i < a.length; i ++) {
        for (int k = 0;
        k < b.length; k ++) {
            for (int j = 0;
            j < b [0].length; j ++) {
                if (a [i] [j] != b [k] [j]) {
                    break;
                } else {
                    if (j == b [0].length - 1) {
                        check = true;
                    }
                }
            }
            if (check == true) {
                break;
            }
        }
        if (check == true) {
            break;
        }
    }
    return check;
}
----------------------------------------

public static boolean check_row (int a [] [], int b [] []) {
    int row_size = a [0].length;
    for (int i = 0;
    i < a.length; i ++) {
        b : for (int j = 0;
        j < b.length; j ++) {
            for (int k = 0;
            k < row_size; k ++) {
                if (a [i] [k] != b [j] [k]) continue b;

            }
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48570297_48570429_19_38
48570297_48571028_1_17
Title: Poker five in Java in boolean[][] array 
----------------------------------------

public static Boolean isStraight (boolean [] [] hand) {
    for (int i = 0;
    i < 9; i ++) {
        int count = 0;
        for (int j = 0;
        j < 5; j ++) {
            for (int k = 0;
            k < 4; k ++) {
                if (hand [k] [i + j]) {
                    count ++;
                    break;
                }
            }
        }
        if (count == 5) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean isStraight (boolean [] [] hand) {
    int [] straightCounter = new int [13];
    for (int j = 0;
    j < 13; j ++) {
        boolean isCard = hand [0] [j] || hand [1] [j] || hand [2] [j] || hand [3] [j];
        if (isCard) {
            if (j == 0) straightCounter [j] = 1;
            else straightCounter [j] = straightCounter [j - 1] + 1;

            if (straightCounter [j] == 5) return true;

            if (j == 12 && straightCounter [j] == 4 && straightCounter [0] == 1) return true;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48577861_48578302_1_13
48577861_48578611_1_17
Title: Java SHA not woking. Hash value dosen't equal String. Is there an issue with my endcoding? 
----------------------------------------

public static void main (String [] args) throws Exception {
    String pass = "pass123";
    byte [] message = pass.getBytes ();
    MessageDigest messageDigest = MessageDigest.getInstance ("SHA");
    messageDigest.update (message);
    byte [] md = messageDigest.digest ();
    StringBuffer sb = new StringBuffer ();
    for (int i = 0;
    i < md.length; i ++) {
        sb.append (Integer.toString ((md [i] & 0xff) + 0x100, 16).substring (1));
    }
    System.out.println ("encoded pass:" + sb.toString ());
    System.out.println (sb.toString ().equals ("aafdc23870ecbcd3d557b6423a8982134e17927e"));
}
----------------------------------------

public static void main (String [] args) throws Exception {
    if (args.length != 1) {
        System.err.println ("Usage: java MyMd5 <message>");
        System.exit (1);
    }
    byte [] message = args [0].getBytes ("UTF8");
    MessageDigest messageDigest = MessageDigest.getInstance ("SHA");
    messageDigest.getProvider ().getInfo ();
    messageDigest.update (message);
    byte [] md = messageDigest.digest ();
    System.out.println ("Digest: " + byteArrayToHexString (md));
    System.out.println ("Is equals? " + byteArrayToHexString (md).equals ("7b502c3a1f48c8609ae212cdfb639dee39673f5e"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48578373_48578608_1_13
48578373_48578650_3_11
Title: How to split a string after 2nd occurrence of dot(.) in java 
----------------------------------------

public static void main (String [] args) {
    String input = "2.111.1.190";
    String [] out = input.split ("\\.");
    String output1 = out [0] + "." + out [1];
    System.out.println (output1);
    String output2 = "";
    for (int x = 2;
    x < out.length; x ++) output2 += out [x] + ".";

    System.out.println (output2);
}
----------------------------------------

public static void main (String [] args) {
    String s = "1.2.3.4";
    int secondDotPosition = findSecondDotPosition (s);
    if (secondDotPosition > 0) {
        System.out.println (s.substring (0, secondDotPosition));
    } else {
        System.out.printf ("ERROR: there is not a 2nd dot in '%s'%n", s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4858022_21730545_190_205
4858022_7795615_38_55
Title: How to configure a log4j file appender which rolls the log file every 15 minutes 
----------------------------------------

public void activateOptions () {
    super.activateOptions ();
    if (datePattern != null && fileName != null) {
        now.setTime (System.currentTimeMillis ());
        sdf = new SimpleDateFormat (datePattern);
        int type = computeCheckPeriod ();
        printPeriodicity (type);
        rc.setType (type);
        rc.setTimeInterval (timeInterval);
        File file = new File (fileName);
        scheduledFilename = fileName + sdf.format (new Date (file.lastModified ()));
    } else {
        LogLog.error ("Either File or DatePattern options are not set for appender [" + name + "].");
    }
}
----------------------------------------

public void activateOptions () {
    currentPath = new File (directory);
    if (! currentPath.isAbsolute ()) {
        errorHandler.error ("Directory failure for appender [" + name + "] : " + directory);
        return;
    }
    currentPath.mkdirs ();
    if (currentPath.canWrite ()) {
        currentCalendar = Calendar.getInstance ();
    } else {
        errorHandler.error ("Cannot write for appender [" + name + "] : " + directory);
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48581944_48582130_20_38
48581944_48582987_6_20
Title: List all variables that are less than or equal to X 
----------------------------------------

public static void main (String...args) {
    final List < Item > items = Arrays.asList (new Item ("Popcorn", 10_000), new Item ("Water", 1), new Item ("Juice", 3));
    final int money = 10;
    for (final Item item : items) {
        final int qty = item.getQty (money);
        if (qty > 0) {
            System.out.println ("You can buy " + qty + " " + item.name);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int totalCurrency = 30;
    HashMap < String, Integer > itemsMap = new HashMap < > ();
    itemsMap.put ("Water", 30);
    itemsMap.put ("Popcorn", 10);
    Set < Entry < String, Integer > > itemSet = itemsMap.entrySet ();
    String output = "With " + totalCurrency + " dollars you can buy ";
    for (Entry entry : itemSet) {
        if ((Integer) entry.getValue () <= totalCurrency) {
            int temp = totalCurrency / (Integer) entry.getValue ();
            output += temp + " of " + entry.getKey () + " ";
        }
    }
    System.out.println (output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48589139_48590203_3_16
48589139_48590709_122_132
Title: JTable filled with files repeats value after model modification (AbstractTableModel) 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    final String [] newColumnNames = {"File", "Name", "Extension"};
    for (int i = 0;
    i < rowDataTable.length; i ++) {
        rowDataTable [i] = new String [] {"", "", ""};
    }
    fileTableModel = new CustomTableModel (rowDataTable, newColumnNames);
    fileTable.setModel (fileTableModel);
    fillTableActionListener.setModel (fileTableModel);
    fileTableModel.fireTableStructureChanged ();
    fileTableModel.fireTableDataChanged ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    final String [] newColumnNames = {"File", "Name", "Extension"};
    for (int i = 0;
    i < rowDataTable.length; i ++) rowDataTable [i] = new String [] {"", "", ""};

    fileTableModel = new CustomTableModel (rowDataTable, newColumnNames);
    fileTable.setModel (fileTableModel);
    fillTableActionListener.setModel (fileTableModel);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48595707_48595875_1_17
48595707_48596120_1_15
Title: Java Issue while storing Integer Input as Array 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter Array Length: ");
    int input = scanner.nextInt ();
    System.out.print ("Enter Array Elements: ");
    int array [] = new int [input];
    String line1 = scanner.next ();
    String [] numbers1 = line1.split (" ");
    for (int i = 0;
    i < numbers1.length; i ++) {
        array [i] = Integer.parseInt (numbers1 [i]);
    }
    System.out.print ("Array Print:  " + Arrays.toString (array));
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter Array Length: ");
    int input = scanner.nextInt ();
    scanner.nextLine ();
    int array [] = new int [input];
    System.out.print ("Enter Array Elements: ");
    String line1 = scanner.nextLine ();
    String [] numbers1 = line1.split (" ");
    for (int i = 0;
    i < numbers1.length; i ++) {
        array [i] = Integer.parseInt (numbers1 [i]);
    }
    System.out.print ("Array Print:  " + Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48597190_48597500_3_22
48597190_48597601_1_18
Title: A java Program which take input from 1 to 9 and print all odd from left to right then print even from right to left 
----------------------------------------

public static void main (String [] args) throws Exception {
    int j = 0;
    int p = 2;
    int newArray [] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    for (int i = 0;
    i <= newArray.length - 1; i ++) {
        if (i <= 4) {
            System.out.print (newArray [i] + j);
            j ++;
        } else {
            System.err.print (newArray [i] + p);
            p = p - 3;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int input [] = new int [] {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int l = input.length;
    int oddCount = l / 2;
    if (l % 2 == 1) {
        oddCount += input [0] % 2;
    }
    int lastEven = input [l - 1] % 2 == 0 ? input [l - 1] : input [l - 2];
    for (int i = 0;
    i < input.length; i ++) {
        if (i < oddCount) {
            System.out.println (1 + i * 2);
        } else {
            System.out.println (lastEven - (i - oddCount) * 2);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48605067_48606368_3_11
48605067_48606940_17_28
Title: Efficient way for finding Shortest Palindrome from Arraylist of strings 
----------------------------------------

private static boolean isPalindrome (String input) {
    for (int i = 0;
    i < input.length () / 2; ++ i) {
        if (Character.toLowerCase (input.charAt (i)) != Character.toLowerCase (input.charAt (input.length () - 1 - i))) {
            return false;
        }
    }
    return true;
}
----------------------------------------

private static boolean isPalindrome (String input) {
    String lowerCased = input.toLowerCase ();
    int pre = 0;
    int end = lowerCased.length () - 1;
    while (end > pre) {
        if (lowerCased.charAt (pre) != lowerCased.charAt (end)) return false;

        pre ++;
        end --;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48621345_48621994_15_56
48621345_48622119_5_51
Title: "redirect a loop within a loop for only ""else""" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    generateNum gnum = new generateNum ();
    gnum.generate ();
    ans = input.nextInt ();
    int com = gnum.getsum ();
    do {
        if (ans == com) {
            System.out.println ("CORRECT!");
            gnum = new generateNum ();
            gnum.generate ();
            ans = input.nextInt ();
            com = gnum.getsum ();
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != com) {
            System.out.println ("Incorrect, try again.");
            gnum.generate ();
            ans = input.nextInt ();
        }

    } while (ans != 0);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    do {
        int a = rand.nextInt (10) + 1;
        int b = rand.nextInt (10) + 1;
        System.out.print (a + " + " + b + " = ");
        ans = input.nextInt ();
        if (ans == (a + b)) {
            System.out.println ("CORRECT!");
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != (a + b)) {
            boolean flag = false;
            do {
                System.out.println ("Incorrect, try again.(0 for skip)");
                int againAns = input.nextInt ();
                if (againAns == (a + b)) {
                    System.out.println ("CORRECT!");
                    flag = true;
                } else if (againAns == 0) {
                    System.out.println ("You skip the answer..");
                    flag = true;
                }

            } while (flag != true);
        }

    } while (ans != 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48621345_48621994_15_56
48621345_48622433_7_49
Title: "redirect a loop within a loop for only ""else""" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    generateNum gnum = new generateNum ();
    gnum.generate ();
    ans = input.nextInt ();
    int com = gnum.getsum ();
    do {
        if (ans == com) {
            System.out.println ("CORRECT!");
            gnum = new generateNum ();
            gnum.generate ();
            ans = input.nextInt ();
            com = gnum.getsum ();
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != com) {
            System.out.println ("Incorrect, try again.");
            gnum.generate ();
            ans = input.nextInt ();
        }

    } while (ans != 0);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    do {
        int a = rand.nextInt (10) + 1;
        int b = rand.nextInt (10) + 1;
        System.out.print (a + " + " + b + " = ");
        ans = input.nextInt ();
        if (ans == (a + b)) {
            System.out.println ("CORRECT!");
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != (a + b)) {
            do {
                System.out.println ("Incorrect, try again.");
                System.out.print (a + " + " + b + " = ");
                ans = input.nextInt ();
            } while (ans != (a + b));
        }

    } while (ans != 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48621345_48622119_5_51
48621345_48622433_7_49
Title: "redirect a loop within a loop for only ""else""" 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    do {
        int a = rand.nextInt (10) + 1;
        int b = rand.nextInt (10) + 1;
        System.out.print (a + " + " + b + " = ");
        ans = input.nextInt ();
        if (ans == (a + b)) {
            System.out.println ("CORRECT!");
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != (a + b)) {
            boolean flag = false;
            do {
                System.out.println ("Incorrect, try again.(0 for skip)");
                int againAns = input.nextInt ();
                if (againAns == (a + b)) {
                    System.out.println ("CORRECT!");
                    flag = true;
                } else if (againAns == 0) {
                    System.out.println ("You skip the answer..");
                    flag = true;
                }

            } while (flag != true);
        }

    } while (ans != 0);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    Random rand = new Random ();
    System.out.println ("*****************");
    System.out.println ("* MATH TRAINING *");
    System.out.println ("*****************");
    System.out.println ("Enter 0 to close program.");
    int ans;
    do {
        int a = rand.nextInt (10) + 1;
        int b = rand.nextInt (10) + 1;
        System.out.print (a + " + " + b + " = ");
        ans = input.nextInt ();
        if (ans == (a + b)) {
            System.out.println ("CORRECT!");
        } else if (ans == 0) {
            System.out.println ("Good bye!");
        } else if (ans != (a + b)) {
            do {
                System.out.println ("Incorrect, try again.");
                System.out.print (a + " + " + b + " = ");
                ans = input.nextInt ();
            } while (ans != (a + b));
        }

    } while (ans != 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48628758_48628905_1_14
48628758_48629130_1_22
Title: Copying an array and changing the values? Can someone tell me what is wrong with my code 
----------------------------------------

public static int [] copyReplace (int [] values, int oldVal, int newVal) {
    int [] b = values;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == oldVal) {
            b [i] = newVal;
        }
    }
    return b;
}
----------------------------------------

public static int [] copyReplace (int [] values, int oldVal, int newVal) {
    int [] b = new int [values.length];
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == oldVal) {
            b [i] = newVal;
        } else {
            b [i] = values [i];
        }
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48647958_48686303_112_144
48647958_48686303_56_69
Title: database content not updated when accessing website from another device 
----------------------------------------

public List < T > findRange (int first, int pageSize, Map < String, String > sortFields, Map < String, Object > filters) {
    javax.persistence.criteria.CriteriaBuilder cb = getEntityManager ().getCriteriaBuilder ();
    javax.persistence.criteria.CriteriaQuery cq = cb.createQuery ();
    javax.persistence.criteria.Root < T > entityRoot = cq.from (entityClass);
    cq.select (entityRoot);
    List < javax.persistence.criteria.Predicate > predicates = getPredicates (cb, entityRoot, filters);
    if (predicates.size () > 0) {
        cq.where (predicates.toArray (new javax.persistence.criteria.Predicate [] {}));
    }
    if (sortFields != null && ! sortFields.isEmpty ()) {
        for (String sortField : sortFields.keySet ()) {
            if (entityRoot.get (sortField) != null) {
                String sortOrder = sortFields.get (sortField);
                if (sortOrder.startsWith ("ASC")) {
                    cq.orderBy (cb.asc (entityRoot.get (sortField)));
                }
                if (sortOrder.startsWith ("DESC")) {
                    cq.orderBy (cb.desc (entityRoot.get (sortField)));
                }
            }
        }
    }
    javax.persistence.Query q = getEntityManager ().createQuery (cq);
    q.setMaxResults (pageSize);
    q.setFirstResult (first);
    getEntityManager ().flush ();
    List resultList = q.getResultList ();
    for (Object result : resultList) {
        getEntityManager ().refresh (result);
    }
    return resultList;
}
----------------------------------------

public List < T > findRange (int [] range) {
    javax.persistence.criteria.CriteriaQuery cq = getEntityManager ().getCriteriaBuilder ().createQuery ();
    cq.select (cq.from (entityClass));
    javax.persistence.Query q = getEntityManager ().createQuery (cq);
    q.setMaxResults (range [1] - range [0] + 1);
    q.setFirstResult (range [0]);
    getEntityManager ().flush ();
    List resultList = q.getResultList ();
    for (Object result : resultList) {
        getEntityManager ().refresh (result);
    }
    return resultList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48647958_48686303_56_69
48647958_48686303_81_110
Title: database content not updated when accessing website from another device 
----------------------------------------

public List < T > findRange (int [] range) {
    javax.persistence.criteria.CriteriaQuery cq = getEntityManager ().getCriteriaBuilder ().createQuery ();
    cq.select (cq.from (entityClass));
    javax.persistence.Query q = getEntityManager ().createQuery (cq);
    q.setMaxResults (range [1] - range [0] + 1);
    q.setFirstResult (range [0]);
    getEntityManager ().flush ();
    List resultList = q.getResultList ();
    for (Object result : resultList) {
        getEntityManager ().refresh (result);
    }
    return resultList;
}
----------------------------------------

public List < T > findRange (int first, int pageSize, String sortField, String sortOrder, Map < String, Object > filters) {
    javax.persistence.criteria.CriteriaBuilder cb = getEntityManager ().getCriteriaBuilder ();
    javax.persistence.criteria.CriteriaQuery cq = cb.createQuery ();
    javax.persistence.criteria.Root < T > entityRoot = cq.from (entityClass);
    cq.select (entityRoot);
    List < javax.persistence.criteria.Predicate > predicates = getPredicates (cb, entityRoot, filters);
    if (predicates.size () > 0) {
        cq.where (predicates.toArray (new javax.persistence.criteria.Predicate [] {}));
    }
    if (sortField != null && sortField.length () > 0) {
        if (entityRoot.get (sortField) != null) {
            if (sortOrder.startsWith ("ASC")) {
                cq.orderBy (cb.asc (entityRoot.get (sortField)));
            }
            if (sortOrder.startsWith ("DESC")) {
                cq.orderBy (cb.desc (entityRoot.get (sortField)));
            }
        }
    }
    javax.persistence.Query q = getEntityManager ().createQuery (cq);
    q.setMaxResults (pageSize);
    q.setFirstResult (first);
    getEntityManager ().flush ();
    List resultList = q.getResultList ();
    for (Object result : resultList) {
        getEntityManager ().refresh (result);
    }
    return resultList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48674513_48674596_4_14
48674513_48674652_1_15
Title: how do i make java code that reads a word and tells me if is starts with the letter a or not? i am lost 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a Word:");
    String line = input.next ();
    if (line.startsWith ("a")) {
        System.out.printf ("%s starts with 'a'.", a);
    } else {
        System.out.printf ("\n%s does not start with 'a'.", b);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a Word:");
    String line = input.next ();
    if (line.startsWith ("a")) {
        System.out.println (line + ": starts with a");
    } else {
        System.out.println ("does not start with a");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48678824_48679063_1_20
48678824_48679153_10_21
Title: How to find duplicate char value from a String in a String array 
----------------------------------------

public static void main (String [] args) {
    String [] s = {"arrow"};
    for (int k = 0;
    k < s.length; k ++) {
        char [] arr = s [k].toCharArray ();
        for (int i = 0;
        i < arr.length; i ++) {
            int duplicateCount = 0;
            for (int j = 1;
            j < arr.length; j ++) {
                if (arr [i] == (arr [j])) {
                    duplicateCount ++;
                    if (duplicateCount >= 2) System.out.println ("Duplicate value " + arr [i]);

                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] s = {"arrow"};
    System.out.println (s [0]);
    HashSet < Character > hash = new HashSet < Character > ();
    char [] s1 = s [0].toCharArray ();
    for (char c : s1) {
        if (! (hash.add (c))) System.out.println (c);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48678824_48679063_1_20
48678824_48682348_2_13
Title: How to find duplicate char value from a String in a String array 
----------------------------------------

public static void main (String [] args) {
    String [] s = {"arrow"};
    for (int k = 0;
    k < s.length; k ++) {
        char [] arr = s [k].toCharArray ();
        for (int i = 0;
        i < arr.length; i ++) {
            int duplicateCount = 0;
            for (int j = 1;
            j < arr.length; j ++) {
                if (arr [i] == (arr [j])) {
                    duplicateCount ++;
                    if (duplicateCount >= 2) System.out.println ("Duplicate value " + arr [i]);

                }
            }
        }
    }
}
----------------------------------------

public static void main (String...args) {
    String str = new String ("arrow");
    int [] dupArray = new int [256];
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (dupArray [ch] == 0) {
            dupArray [ch] ++;
        } else {
            System.out.println ("Duplicate value : " + ch + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48678824_48679153_10_21
48678824_48682348_2_13
Title: How to find duplicate char value from a String in a String array 
----------------------------------------

public static void main (String [] args) {
    String [] s = {"arrow"};
    System.out.println (s [0]);
    HashSet < Character > hash = new HashSet < Character > ();
    char [] s1 = s [0].toCharArray ();
    for (char c : s1) {
        if (! (hash.add (c))) System.out.println (c);

    }
}
----------------------------------------

public static void main (String...args) {
    String str = new String ("arrow");
    int [] dupArray = new int [256];
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (dupArray [ch] == 0) {
            dupArray [ch] ++;
        } else {
            System.out.println ("Duplicate value : " + ch + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48681982_48682248_5_33
48681982_48682452_1_29
Title: I want to output 7 even numbers in a row from a range of numbers in java 
----------------------------------------

public static void main (String args []) {
    int number, a, count;
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter the first number of range");
    a = s.nextInt ();
    System.out.println ("Enter the second numberof range");
    number = s.nextInt ();
    count = 0;
    System.out.println ("Range is: " + a + " to " + number);
    System.out.println ("Even numbers are : ");
    for (int i = a;
    i <= number; i ++) {
        if (i % 2 == 0) {
            count ++;
            System.out.print (i + ", ");
            if (count >= 7) {
                count = 0;
                System.out.println ("");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int number, a;
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter the first number of range");
    a = s.nextInt ();
    System.out.println ("Enter the second numberof range");
    number = s.nextInt ();
    System.out.println ("Range is: " + a + " to " + number);
    int count = 0;
    System.out.print ("Even number is: ");
    for (int i = a;
    i <= number; i ++) {
        if (i % 2 == 0) {
            System.out.print (" " + i);
            count ++;
            if (count % 7 == 0) {
                System.out.println ();
                System.out.print ("Even number is: ");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48696526_48828524_10_22
48696526_48828524_25_64
Title: Construct a perfect Binary Tree from a depth first search output 
----------------------------------------

private static TreeNode makeTree (int [] dfsArray, int depth) {
    TreeNode [] nodes = new TreeNode [dfsArray.length];
    for (int i = 0;
    i < dfsArray.length; i ++) {
        nodes [i] = new TreeNode (dfsArray [i]);
    }
    makeTree (nodes, depth);
    return nodes [0];
}
----------------------------------------

private static void makeTree (TreeNode [] nodes, int depth) {
    int currentDepth = 0;
    int index = 0;
    TreeNode root = nodes [0];
    LinkedList < TreeNode > stack = new LinkedList < > ();
    stack.add (root);
    while (! stack.isEmpty ()) {
        TreeNode node = stack.peekLast ();
        if (node.left == null) {
            node.left = nodes [++ index];
        } else if (node.right == null) {
            node.right = nodes [++ index];
        }

        if ((currentDepth + 2) < depth) {
            stack.add (nodes [index]);
            currentDepth ++;
        } else if ((node.right != null) && (node.left != null)) {
            while (! stack.isEmpty ()) {
                TreeNode n = stack.peekLast ();
                if ((n.left != null) && (n.right != null)) {
                    stack.remove (n);
                    currentDepth --;
                } else {
                    break;
                }
            }
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4870188_30431446_8_21
4870188_31909356_1_42
Title: Delete item from array and shrink array 
----------------------------------------

public Delete () {
    a = new int [10];
    a [0] = - 1;
    a [1] = - 1;
    a [2] = - 1;
    a [3] = 10;
    a [4] = 20;
    a [5] = 30;
    a [6] = 40;
    a [7] = 50;
    a [8] = 60;
    a [9] = 70;
}
----------------------------------------

public static void Delete (int d, int [] array) {
    Scanner in = new Scanner (System.in);
    int i, size = array.length;
    System.out.println ("ENTER THE VALUE TO DELETE? ");
    d = in.nextInt ();
    for (i = 0; i < size; i ++) {
        if (array [i] == d) {
            int [] arr3 = new int [size - 1];
            int [] arr4 = new int [i];
            int [] arr5 = new int [size - i - 1];
            for (int a = 0;
            a < i; a ++) {
                arr4 [a] = array [a];
                arr3 [a] = arr4 [a];
            }
            for (int a = i;
            a < size - 1; a ++) {
                arr5 [a - i] = array [a + 1];
                arr3 [a] = arr5 [a - i];
            }
            System.out.println (Arrays.toString (arr3));
        } else System.out.println ("************");

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4871107_11281916_1_19
4871107_17555921_1_22
Title: Recursive prime factor algorithm in java 
----------------------------------------

public static void primeFactorsOf (int n) {
    int i;
    if (isPrime (n)) System.out.println (n + ". ");
    else {
        for (i = 2; i < n; i ++) {
            if (isPrime (i) && n % i == 0) {
                System.out.print (i + ", ");
                n = n / i;
                primeFactorsOf (n);
            }
        }
    }
}
----------------------------------------

public static void primeFactorsOf (int n) {
    int i = 2;
    boolean isFactor = false;
    if (isPrime (n)) System.out.println (n + ".");
    else {
        while (! isFactor) {
            if ((n % i == 0) && (isPrime (i))) {
                System.out.print (i + ", ");
                primeFactorsOf (n / i);
                isFactor = true;
            } else i ++;

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4871107_17778825_1_11
4871107_4871282_1_22
Title: Recursive prime factor algorithm in java 
----------------------------------------

public static void primeFactors (int n) {
    for (int i = 2;
    i < n; i ++) if (n % i == 0) {
        primeFactors (n / i);
        primeFactors (i);
    }

    System.out.println (n);
}
----------------------------------------

public static ArrayList primeFactors (int n) {
    if (isPrime (n)) {
        list.add (n);
        return list;
    }
    int i = 1;
    while (true) {
        if (n % (i += 2) == 0) {
            if (isPrime (i)) {
                n = n / i;
                list.add (i);
                i = 1;
            }
        }
        if (i > Math.sqrt (n)) break;

    }
    list.add (n);
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48716023_48716141_1_29
48716023_48717259_1_17
Title: How to removes an item from an array in java using a method? 
----------------------------------------

public static int [] remove (int [] nums, int value) {
    int [] after;
    int count = 0;
    for (int num : nums) {
        if (num != value) {
            count ++;
        }
    }
    after = new int [count];
    int i = 0;
    for (int num : nums) {
        if (num != value) {
            after [i] = num;
            i ++;
        }
    }
    return after;
}
----------------------------------------

public static int [] remove (int [] nums, int value) {
    int [] after = new int [nums.length - 1];
    for (int i = 0;
    i < nums.length; i ++) {
        if ((nums [i] == value)) {
            nums [i] = nums [nums.length - 1];
            nums [nums.length - 1] = value;
        }
    }
    for (int i = 0;
    i < nums.length - 1; i ++) {
        after [i] = nums [i];
    }
    return after;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48717481_48717648_1_23
48717481_48717709_1_21
Title: How can i use a nested loops to help identify if i have 2 different matching pairs of dices 
----------------------------------------

public boolean matchDice (String firstDiceSet, String secondDiceSet) {
    int numberOfMatches = 0;
    for (int i = 0;
    i < firstDiceSet.length (); i ++) {
        for (int j = 0;
        j < secondDiceSet.length (); j ++) {
            if (firstDiceSet [i] == secondDiceSet [j]) {
            }
        }
    }
    return (numberOfMatches == secondDiceSet.length ());
}
----------------------------------------

public static boolean matchDice (String dice) {
    char [] diceArray = dice.toCharArray ();
    int pairs = 0;
    for (int i = 0;
    i < 4; i ++) {
        for (int j = i + 1;
        j < dice.length (); j ++) {
            if (diceArray [i] == diceArray [j]) {
                diceArray [i] = 'X';
                diceArray [j] = 'Y';
                pairs ++;
            }
        }
    }
    return (pairs > 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48722103_48722159_1_10
48722103_48722245_1_15
Title: How to return the mongodb data received? 
----------------------------------------

public static ArrayList < DBObject > retrieve (String dbName, String collectionName, String key, String value) {
    MongoClient mongoClient = new MongoClient (new MongoClientURI ("mongodb://localhost:27017"));
    @SuppressWarnings ("deprecation")
    DB database = mongoClient.getDB (dbName);
    DBCollection collection = database.getCollection (collectionName);
    BasicDBObject Query = new BasicDBObject ();
    Query.put (key, value);
    return collection.find (Query).toArray ();
}
----------------------------------------

public static List < DBObject > retrieve (String dbName, String collectionName, String key, String value) {
    ArrayList < DBObject > ar = new ArrayList ();
    MongoClient mongoClient = new MongoClient (new MongoClientURI ("mongodb://localhost:27017"));
    @SuppressWarnings ("deprecation")
    DB database = mongoClient.getDB (dbName);
    DBCollection collection = database.getCollection (collectionName);
    BasicDBObject Query = new BasicDBObject ();
    Query.put (key, value);
    List < DBObject > obj = collection.find (Query).limit (100).toArray ();
    LOGGER.info (obj.toString ());
    return (obj);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48733011_48733181_1_15
48733011_48739297_1_13
Title: Doubly Linked List Java Remove method does not work for any node besides head node 
----------------------------------------

public void append (DLNode newNode) {
    if (head == null) {
        head = newNode;
    } else {
        DLNode curNode = head;
        while (curNode.next != null) {
            curNode = curNode.next;
        }
        curNode.next = newNode;
        newNode.prev = curNode;
    }
}
----------------------------------------

public void append (DLNode newNode) {
    if (head == null) {
        head = newNode;
    } else {
        DLNode curNode = head;
        while (curNode.next != null) curNode = curNode.next;

        curNode.next = newNode;
        newNode.prev = curNode;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48735326_48735463_10_21
48735326_48735995_8_33
Title: Can't play sound in java using clip 
----------------------------------------

public void run () {
    try {
        Clip clip = AudioSystem.getClip ();
        File file = new File ("G:/skit/msg.wav");
        AudioInputStream inputStream = AudioSystem.getAudioInputStream (file);
        clip.open (inputStream);
        clip.start ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("started");
        Clip clip = AudioSystem.getClip ();
        File file = new File (".......................wav");
        AudioInputStream inputStream = AudioSystem.getAudioInputStream (file);
        clip.open (inputStream);
        clip.start ();
        while (clip.isOpen ()) {
            try {
                Thread.sleep (2000);
            } catch (InterruptedException ie) {
            }
            if (! clip.isActive ()) break;

        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48735326_48735463_5_24
48735326_48735995_3_35
Title: Can't play sound in java using clip 
----------------------------------------

public static void main (String [] args) {
    Thread b = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Clip clip = AudioSystem.getClip ();
                File file = new File ("G:/skit/msg.wav");
                AudioInputStream inputStream = AudioSystem.getAudioInputStream (file);
                clip.open (inputStream);
                clip.start ();
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    );
    b.start ();
}
----------------------------------------

public static void main (String [] args) {
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                System.out.println ("started");
                Clip clip = AudioSystem.getClip ();
                File file = new File (".......................wav");
                AudioInputStream inputStream = AudioSystem.getAudioInputStream (file);
                clip.open (inputStream);
                clip.start ();
                while (clip.isOpen ()) {
                    try {
                        Thread.sleep (2000);
                    } catch (InterruptedException ie) {
                    }
                    if (! clip.isActive ()) break;

                }
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48736788_48736854_69_88
48736788_48736931_16_27
Title: Implementing solution to IllegalBlockSizeException in Java? 
----------------------------------------

private static byte [] encryption (int key, String msg) {
    byte [] encrypted = new byte [] {};
    String strKey = Integer.toString (key);
    try {
        SecretKeySpec skeyspec = new SecretKeySpec (strKey.getBytes (), "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish/CBC/PKCS5Padding");
        cipher.init (Cipher.ENCRYPT_MODE, skeyspec);
        encrypted = cipher.doFinal (msg.getBytes ());
        encodedParams = cipher.getParameters ().getEncoded ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return encrypted;
}
----------------------------------------

private static byte [] encryption (int key, String msg) {
    String strKey = Integer.toString (key);
    try {
        SecretKeySpec skeyspec = new SecretKeySpec (strKey.getBytes (), "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish");
        cipher.init (Cipher.ENCRYPT_MODE, skeyspec);
        return cipher.doFinal (msg.getBytes (StandardCharsets.UTF_8));
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48736788_48736854_98_120
48736788_48736931_30_42
Title: Implementing solution to IllegalBlockSizeException in Java? 
----------------------------------------

private static void decryption (int key, byte [] msgE) {
    String strKey = Integer.toString (key);
    String strData = "";
    try {
        SecretKeySpec skeyspec = new SecretKeySpec (strKey.getBytes (), "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish/CBC/PKCS5Padding");
        AlgorithmParameters params = AlgorithmParameters.getInstance ("Blowfish");
        params.init (encodedParams);
        cipher.init (Cipher.DECRYPT_MODE, skeyspec, params);
        byte [] decrypted = cipher.doFinal (msgE);
        strData = new String (decrypted);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    System.out.println (strData);
}
----------------------------------------

private static String decryption (int key, byte [] msgE) {
    String strKey = Integer.toString (key);
    try {
        SecretKeySpec skeyspec = new SecretKeySpec (strKey.getBytes (), "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish");
        cipher.init (Cipher.DECRYPT_MODE, skeyspec);
        byte [] decrypted = cipher.doFinal (msgE);
        return new String (decrypted, StandardCharsets.UTF_8);
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48747603_48748120_13_23
48747603_48748998_17_28
Title: Serialize ArrayList to String and Deserialize the String to ArrayList the constraint is the array list contains any characters in the characterset 
----------------------------------------

public static void main (String [] args) {
    List dataList = new ArrayList ();
    dataList.add ("A");
    dataList.add (",");
    dataList.add ("B");
    String datStr = serialize (dataList);
    List receivedList = deserialize (datStr);
    for (String string : receivedList) {
        System.out.println (string);
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    List < String > dataList = new ArrayList < > ();
    dataList.add ("A");
    dataList.add (",");
    dataList.add ("B");
    System.out.println ("Before Serialization\n");
    print (dataList);
    String datStr = serialize (dataList);
    List < String > receivedList = deserialize (datStr);
    System.out.println ("\nAfter DeSerialization\n");
    print (receivedList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48747603_48748120_25_37
48747603_48749412_27_38
Title: Serialize ArrayList to String and Deserialize the String to ArrayList the constraint is the array list contains any characters in the characterset 
----------------------------------------

public static String serialize (List dataList) {
    try (ByteArrayOutputStream bo = new ByteArrayOutputStream (); ObjectOutputStream so = new ObjectOutputStream (bo)) {
        so.writeObject (dataList);
        so.flush ();
        return Base64.encodeBase64String (bo.toByteArray ());
    } catch (IOException e) {
    }
    return null;
}
----------------------------------------

private static String serialize (List < String > strings) {
    String delimiter = getDelimiter (strings);
    StringBuilder sb = new StringBuilder ();
    sb.append (delimiter.length ());
    sb.append (delimiter);
    for (String s : strings) {
        sb.append (s);
        sb.append (delimiter);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48747603_48748120_39_51
48747603_48748998_44_54
Title: Serialize ArrayList to String and Deserialize the String to ArrayList the constraint is the array list contains any characters in the characterset 
----------------------------------------

public static ArrayList deserialize (String dataStr) {
    byte [] b = Base64.decodeBase64 (dataStr);
    ByteArrayInputStream bi = new ByteArrayInputStream (b);
    ObjectInputStream si;
    try {
        si = new ObjectInputStream (bi);
        return ArrayList.class.cast (si.readObject ());
    } catch (IOException | ClassNotFoundException e) {
        throw new SerializationException ("Error during deserialization", e);
    }
}
----------------------------------------

public static List < String > deserialize (String xml) throws SAXException, ParserConfigurationException, IOException, XPathExpressionException {
    final Document document = DocumentBuilderFactory.newInstance ().newDocumentBuilder ().parse (new ByteArrayInputStream (xml.getBytes ()));
    final XPathExpression xPathExpression = XPathFactory.newInstance ().newXPath ().compile ("//data/text()");
    final NodeList nodeList = (NodeList) xPathExpression.evaluate (document, XPathConstants.NODESET);
    final List < String > dataList = new ArrayList < > ();
    for (int i = 0;
    i < nodeList.getLength (); ++ i) {
        dataList.add (nodeList.item (i).getNodeValue ());
    }
    return dataList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48747603_48748120_39_51
48747603_48749412_13_25
Title: Serialize ArrayList to String and Deserialize the String to ArrayList the constraint is the array list contains any characters in the characterset 
----------------------------------------

public static ArrayList deserialize (String dataStr) {
    byte [] b = Base64.decodeBase64 (dataStr);
    ByteArrayInputStream bi = new ByteArrayInputStream (b);
    ObjectInputStream si;
    try {
        si = new ObjectInputStream (bi);
        return ArrayList.class.cast (si.readObject ());
    } catch (IOException | ClassNotFoundException e) {
        throw new SerializationException ("Error during deserialization", e);
    }
}
----------------------------------------

private static List < String > deserialize (String encoded) {
    int delimiterSize = Integer.parseInt (encoded.replaceAll ("\\D.*", ""));
    int fromIndex = String.valueOf (delimiterSize).length ();
    String delimiter = encoded.substring (fromIndex, fromIndex + delimiterSize);
    String [] splitStrings = encoded.split (delimiter);
    List < String > strings = new ArrayList < > ();
    for (int i = 1;
    i < splitStrings.length; i ++) {
        strings.add (splitStrings [i]);
    }
    return strings;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48747603_48748998_44_54
48747603_48749412_13_25
Title: Serialize ArrayList to String and Deserialize the String to ArrayList the constraint is the array list contains any characters in the characterset 
----------------------------------------

public static List < String > deserialize (String xml) throws SAXException, ParserConfigurationException, IOException, XPathExpressionException {
    final Document document = DocumentBuilderFactory.newInstance ().newDocumentBuilder ().parse (new ByteArrayInputStream (xml.getBytes ()));
    final XPathExpression xPathExpression = XPathFactory.newInstance ().newXPath ().compile ("//data/text()");
    final NodeList nodeList = (NodeList) xPathExpression.evaluate (document, XPathConstants.NODESET);
    final List < String > dataList = new ArrayList < > ();
    for (int i = 0;
    i < nodeList.getLength (); ++ i) {
        dataList.add (nodeList.item (i).getNodeValue ());
    }
    return dataList;
}
----------------------------------------

private static List < String > deserialize (String encoded) {
    int delimiterSize = Integer.parseInt (encoded.replaceAll ("\\D.*", ""));
    int fromIndex = String.valueOf (delimiterSize).length ();
    String delimiter = encoded.substring (fromIndex, fromIndex + delimiterSize);
    String [] splitStrings = encoded.split (delimiter);
    List < String > strings = new ArrayList < > ();
    for (int i = 1;
    i < splitStrings.length; i ++) {
        strings.add (splitStrings [i]);
    }
    return strings;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48755721_48757027_19_30
48755721_48757311_36_49
Title: Didn't add Class to Branchgroup 
----------------------------------------

public Java3D () {
    final SimpleUniverse universe = new SimpleUniverse ();
    final BranchGroup group = new BranchGroup ();
    final Sphere sphere = new Sphere (0.5f);
    group.addChild (sphere);
    group.addChild (createLight ());
    universe.getViewingPlatform ().setNominalViewingTransform ();
    universe.addBranchGraph (group);
}
----------------------------------------

public Java3D () {
    final SimpleUniverse universe = new SimpleUniverse ();
    final BranchGroup group = new BranchGroup ();
    final MySphere mySphere = new MySphere ();
    group.addChild (mySphere);
    final MyDirectionalLight myDirectionalLight = new MyDirectionalLight ();
    group.addChild (myDirectionalLight);
    universe.getViewingPlatform ().setNominalViewingTransform ();
    universe.addBranchGraph (group);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48759719_48759802_5_18
48759719_48759918_9_18
Title: Forcing the user to type an int in Java - Receiving an unclear Error 
----------------------------------------

public static Integer getIntInput () {
    Integer userInt = null;
    boolean success = false;
    while (! success) {
        try {
            userInt = sc.nextInt ();
            success = true;
        } catch (Exception e) {
            sc.nextLine ();
            System.out.println ("Please type an int");
        }
    }
    return userInt;
}
----------------------------------------

public static int getIntInput () {
    while (true) {
        try {
            return sc.nextInt ();
        } catch (Exception e) {
            System.out.println ("Please type an int");
            sc.nextLine ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48774030_48774127_2_21
48774030_48775372_10_28
Title: Java Basics - Looping through folder 
----------------------------------------

public static void main (String [] args) throws IOException {
    List < String > srcFiles = Arrays.asList ("test1.txt", "test2.txt");
    FileOutputStream fos = new FileOutputStream ("multiCompressed.zip");
    ZipOutputStream zipOut = new ZipOutputStream (fos);
    for (String srcFile : srcFiles) {
        File fileToZip = new File (srcFile);
        FileInputStream fis = new FileInputStream (fileToZip);
        ZipEntry zipEntry = new ZipEntry (fileToZip.getName ());
        zipOut.putNextEntry (zipEntry);
        byte [] bytes = new byte [1024];
        int length;
        while ((length = fis.read (bytes)) >= 0) {
            zipOut.write (bytes, 0, length);
        }
        fis.close ();
    }
    zipOut.close ();
    fos.close ();
}
----------------------------------------

public static void main (String [] args) {
    try {
        String sourceFile = "src/resources";
        FileOutputStream fos = new FileOutputStream ("zippedfiles.zip");
        ZipOutputStream zipOut = new ZipOutputStream (fos);
        File fileToZip = new File (sourceFile);
        zipFile (fileToZip, fileToZip.getName (), zipOut);
        zipOut.close ();
        fos.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48779283_48779432_1_15
48779283_48779437_1_14
Title: Remove Duplicates in a String in Java and Create New String 
----------------------------------------

public static String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    result.append (s.charAt (0));
    for (int i = 1;
    i < s.length (); i ++) {
        char prev = s.charAt (i);
        char curr = s.charAt (i - 1);
        if (curr != prev || i == 0) {
            result.append (prev);
        } else if (curr == prev) {
            prev = curr;
        }

    }
    return result.toString ();
}
----------------------------------------

public String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    if (s != null && ! s.isEmpty ()) {
        char first = s.charAt (0);
        for (int i = 1;
        i < s.length (); i ++) {
            if (first != s.charAt (i)) {
                result.append (first);
                first = s.charAt (i);
            }
        }
        result.append (first);
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48779283_48779432_1_15
48779283_48779702_5_16
Title: Remove Duplicates in a String in Java and Create New String 
----------------------------------------

public static String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    result.append (s.charAt (0));
    for (int i = 1;
    i < s.length (); i ++) {
        char prev = s.charAt (i);
        char curr = s.charAt (i - 1);
        if (curr != prev || i == 0) {
            result.append (prev);
        } else if (curr == prev) {
            prev = curr;
        }

    }
    return result.toString ();
}
----------------------------------------

public static String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    Character curr = null;
    for (int i = 1;
    i <= s.length (); i ++) {
        char prev = s.charAt (i - 1);
        if (curr == null || prev != curr.charValue ()) {
            result.append (prev);
            curr = prev;
        }
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48779283_48779437_1_14
48779283_48779702_5_16
Title: Remove Duplicates in a String in Java and Create New String 
----------------------------------------

public String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    if (s != null && ! s.isEmpty ()) {
        char first = s.charAt (0);
        for (int i = 1;
        i < s.length (); i ++) {
            if (first != s.charAt (i)) {
                result.append (first);
                first = s.charAt (i);
            }
        }
        result.append (first);
    }
    return result.toString ();
}
----------------------------------------

public static String DuplicatesTEST (String s) {
    StringBuilder result = new StringBuilder ();
    Character curr = null;
    for (int i = 1;
    i <= s.length (); i ++) {
        char prev = s.charAt (i - 1);
        if (curr == null || prev != curr.charValue ()) {
            result.append (prev);
            curr = prev;
        }
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48789455_48789929_30_50
48789455_48825842_25_82
Title: How to get string array from json object in deserialize method 
----------------------------------------

public static void main (String [] args) {
    ObjectMapper mapper = new ObjectMapper ();
    String jsonText = "{\"id\" : \"A001\"}";
    try {
        ID id = mapper.readValue (jsonText, ID.class);
        System.out.println (id);
    } catch (JsonParseException e) {
        e.printStackTrace ();
    } catch (JsonMappingException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    class PersonAdapter extends TypeAdapter < Person > {
        @Override
        public Person read (JsonReader jsonReader) throws IOException {
            Person country = new Person ();
            List < String > cities = new ArrayList < > ();
            jsonReader.beginObject ();
            while (jsonReader.hasNext ()) {
                switch (jsonReader.nextName ()) {
                    case "name" :
                        country.name = jsonReader.nextString ();
                        break;
                    case "age" :
                        country.age = jsonReader.nextInt ();
                        break;
                    case "bestFriends" :
                        jsonReader.beginArray ();
                        while (jsonReader.hasNext ()) {
                            cities.add (jsonReader.nextString ());
                        }
                        jsonReader.endArray ();
                        country.bestFriends = cities.toArray (new String [0]);
                        break;
                }
            }
            jsonReader.endObject ();
            return country;
        }@Override
        public void write (JsonWriter jsonWriter, Person country) throws IOException {
            jsonWriter.beginObject ();
            jsonWriter.name ("name").value (country.name);
            jsonWriter.name ("age").value (country.age);
            jsonWriter.name ("bestFriends");
            jsonWriter.beginArray ();
            for (int i = 0;
            i < country.bestFriends.length; i ++) {
                jsonWriter.value (country.bestFriends [i]);
            }
            jsonWriter.endArray ();
            jsonWriter.endObject ();
        }}

    Gson gson = new GsonBuilder ().registerTypeAdapter (Person.class, new PersonAdapter ()).setPrettyPrinting ().create ();
    Person person, personFromJson;
    person = new Person ("Vasya", 29, "Stan", "Nick", "Alex");
    String json = gson.toJson (person);
    personFromJson = new Person ();
    personFromJson = gson.fromJson (json, personFromJson.getClass ());
    System.out.println ("Name = " + personFromJson.name);
    System.out.println ("Age = " + personFromJson.age);
    for (String friend : personFromJson.bestFriends) {
        System.out.println ("Best friend " + friend);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4881389_5081366_17_31
4881389_5081366_1_15
Title: How do I find the type declaration of an identifier using the Java Tree Compiler API? 
----------------------------------------

public Symbol getSymbol (Name varName, Symbol accessor, CompilationUnitTree cut, JCStatement stmt) {
    if (varName.contentEquals ("class")) {
        Symbol javaLangClassSym = getSymbol (cut, stmt, null, elementUtils.getName ("java.lang.Class"), null);
        JCIdent id = tm.Ident (javaLangClassSym);
        JCExpression mName = tm.Select (id, elementUtils.getName ("forName"));
        JCLiteral idLiteral = tm.Literal (accessor.toString ());
        JCMethodInvocation mi = tm.Apply (List.< JCExpression > nil (), mName, List.< JCExpression > of (idLiteral));
        Symbol s = getSymbol (mi, cut, stmt);
        return s;
    }
    accessor = getTypeSymbol (accessor);
    java.util.List < Symbol > enclosedElements = getEnclosedElements (accessor, cut, stmt);
    Symbol s = contains (enclosedElements, null, varName, null);
    return s;
}
----------------------------------------

public Symbol getSymbol (CompilationUnitTree cut, JCStatement stmt, List < JCExpression > typeParams, Name varName, List < JCExpression > args) {
    java.util.List < Type > typeSyms = getArgTypes (typeParams, cut, stmt);
    java.util.List < Type > argsSyms = getArgTypes (args, cut, stmt);
    final Scope scope = getScope (cut, stmt);
    Symbol t = contains (scope, typeSyms, varName, argsSyms);
    TypeElement cl = scope.getEnclosingClass ();
    while (t == null && cl != null) {
        t = contains (elementUtils.getAllMembers (cl), typeSyms, varName, argsSyms);
        final TypeMirror superclass = cl.getSuperclass ();
        if (superclass != null) {
            cl = (TypeElement) ((Type) superclass).asElement ();
        }
    }
    return t;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48819652_48819703_6_22
48819652_48820814_4_21
Title: While loop running away 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double tempInput = 0, tempF = 0, counter = 0;
    while (tempInput > - 100.- 0) {
        System.out.println ("Please enter in temperature in Centigrade");
        tempInput = scan.nextDouble ();
        tempF = (9.0 / 5.0) * tempInput + 32.0;
        if (tempInput > - 100.- 0) {
            System.out.print ("(F" + tempF + ")");
            System.out.print (" " + "C (" + tempInput + ")");
            System.out.println ("");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double tempInput = 0, tempF = 0, counter = 0;
    while (true) {
        System.out.println ("Please enter in temperature in Centigrade");
        tempInput = scan.nextDouble ();
        if (tempInput <= - 100.0) {
            break;
        }
        tempF = (9.0 / 5.0) * tempInput + 32.0;
        System.out.print ("(F" + tempF + ")");
        System.out.print (" " + "C (" + tempInput + ")");
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48819652_48819855_7_20
48819652_48820814_4_21
Title: While loop running away 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double tempInput = 0, tempF = 0, counter = 0;
    System.out.println ("Please enter in temperature in Centigrade");
    tempInput = scan.nextDouble ();
    while (tempInput > - 100.- 0) {
        tempF = (9.0 / 5.0) * tempInput + 32.0;
        System.out.print ("(F" + tempF + ")");
        System.out.print (" " + "C (" + tempInput + ")");
        System.out.println ("");
        break;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    double tempInput = 0, tempF = 0, counter = 0;
    while (true) {
        System.out.println ("Please enter in temperature in Centigrade");
        tempInput = scan.nextDouble ();
        if (tempInput <= - 100.0) {
            break;
        }
        tempF = (9.0 / 5.0) * tempInput + 32.0;
        System.out.print ("(F" + tempF + ")");
        System.out.print (" " + "C (" + tempInput + ")");
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48837593_48837734_1_27
48837593_48837933_3_19
Title: Need help in a for loop (Improved Formatting) 
----------------------------------------

public static void main (String [] args) {
    int rows = 7;
    String str = "";
    for (int i = 0;
    i < rows; i ++) {
        int temp = i;
        while (temp > 0) {
            str += ("X");
            temp --;
        }
        if (i != 0) {
            str += "\n";
            for (int j = 0;
            j < i; j ++) {
                for (int k = 0;
                k < i; k ++) {
                    str += " ";
                }
            }
        }
    }
    System.out.println (str);
}
----------------------------------------

public static void main (String [] args) {
    int sp = 0;
    for (int i = 0;
    i < 7; i ++) {
        sp = sp + i;
        for (int s = 0;
        s < sp; s ++) {
            System.out.print (" ");
        }
        for (int x = 0;
        x <= i; x ++) {
            System.out.print ("X");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48844244_48844453_1_41
48844244_48844912_21_32
Title: Problems with try/catch java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    boolean validInput = false;
    int val = 0;
    System.out.print ("Enter your first name: ");
    String firstName = input.nextLine ();
    System.out.print ("Enter your last name: ");
    String lastName = input.nextLine ();
    System.out.print ("Enter your address: ");
    String address = input.nextLine ();
    System.out.print ("Enter your city: ");
    String city = input.nextLine ();
    System.out.print ("Enter your state: ");
    String state = input.nextLine ();
    System.out.print ("Enter your zip code + 4: ");
    String zip = input.nextLine ();
    while (! validInput) {
        try {
            val = input.nextInt ();
            validInput = true;
        } catch (Exception e) {
            System.out.println ("Please enter an integer!");
        }
    }
    System.out.print ("Enter amount owed: ");
    String amount = input.nextLine ();
    validInput = false;
    while (! validInput) {
        try {
            val = input.nextInt ();
            validInput = true;
        } catch (Exception e) {
            System.out.println ("Please enter an integer!");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter your first name: ");
    System.out.println (input.nextLine ());
    System.out.println (privateGetInt ("enter an Int", input));
    System.out.print ("Enter your last name: ");
    System.out.println (input.nextLine ());
    System.out.print ("Enter your address: ");
    System.out.println (input.nextLine ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48845253_48845459_1_11
48845253_48845577_5_18
Title: Java method which sums two one dimensional arrays 
----------------------------------------

public static double ArrayRechner (int [] a, int [] b) {
    double result = 0.0;
    if (a.length > 0 && a.length == b.length) {
        int sumOfA = Arrays.stream (a).sum ();
        int sumOfB = Arrays.stream (b).sum ();
        result = sumOfA + sumOfB;
        System.out.println ("Fast geschafft");
    }
    System.out.println ("the result is " + result);
    return result;
}
----------------------------------------

public static int ArrayRechner (int [] a, int [] b) {
    if (a.length == b.length) {
        for (int i = 0;
        i < a.length; i ++) {
            result = result + a [i] + b [i];
        }
        System.out.println ("Fast geschafft");
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48885452_48885589_1_20
48885452_48885845_1_22
Title: How to directly select fragment class on launch of the MainActivity? 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_admin);
    auth = FirebaseAuth.getInstance ();
    mdrawerl = (DrawerLayout) findViewById (R.id.drawer);
    mtoggle = new ActionBarDrawerToggle (this, mdrawerl, R.string.open, R.string.close);
    mdrawerl.addDrawerListener (mtoggle);
    NavigationView nvDrawer = (NavigationView) findViewById (R.id.nv);
    mtoggle.syncState ();
    getSupportActionBar ().setDisplayHomeAsUpEnabled (true);
    setupDrawerContent (nvDrawer);
    memberFragment frag = new memberFragment ();
    getSupportFragmentManager ().beginTransaction ().replace (R.id.flcontent, frag).commit ();
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_admin);
    auth = FirebaseAuth.getInstance ();
    mdrawerl = (DrawerLayout) findViewById (R.id.drawer);
    mtoggle = new ActionBarDrawerToggle (this, mdrawerl, R.string.open, R.string.close);
    mdrawerl.addDrawerListener (mtoggle);
    NavigationView nvDrawer = (NavigationView) findViewById (R.id.nv);
    mtoggle.syncState ();
    getSupportActionBar ().setDisplayHomeAsUpEnabled (true);
    setupDrawerContent (nvDrawer);
    memberFragment frag = new memberFragment ();
    getSupportFragmentManager ().beginTransaction ().replace (R.id.flcontent, frag).commit ();
    nvDrawer.getMenu ().getItem (0).setChecked (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48889705_48890150_1_17
48889705_48890292_22_33
Title: How to add all values in a HashMap? 
----------------------------------------

public static double price (HashMap < String, Double > stock) {
    HashMap < String, Integer > cart = new HashMap < String, Integer > ();
    cart.put ("eggs", 2);
    cart.put ("orange juice", 2);
    double cost = 0;
    for (String item : cart.keySet ()) {
        double amount = cart.get (item);
        double price = stock.get (item);
        cost += amount * price;
    }
    return cost;
}
----------------------------------------

public static double price (HashMap < String, Double > stock, HashMap < String, Integer > cart) {
    Iterator < String > productItr = cart.keySet ().iterator ();
    double price = 0;
    while (productItr.hasNext ()) {
        String product = productItr.next ();
        price = price + (cart.get (product) * stock.get (product));
    }
    return price;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48892794_48892886_1_11
48892794_48892916_11_18
Title: Check if every element of an array belongs to a set of values 
----------------------------------------

public static boolean isOnly916 (int [] arr) {
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] != 9 && arr [i] != 6 && arr [i] != 1) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isOnly916 (int [] arr) {
    for (int i = 0;
    i < arr.length; i ++) {
        if (! (arr [i] == 6 || arr [i] == 9 || arr [i] == 1)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48918439_48918482_1_12
48918439_48918632_1_14
Title: Can't add int to ArrayList of integers 
----------------------------------------

public static int [] front11 (int [] a, int [] b) {
    int alen = (a != null) ? a.length : 0, blen = (b != null) ? b.length : 0;
    if (alen > 0 && blen > 0) {
        return new int [] {a [0], b [0]};
    } else if (alen > 0) {
        return new int [] {a [0]};
    } else if (blen > 0) {
        return new int [] {b [0]};
    } else {
        return new int [0];
    }

}
----------------------------------------

public ArrayList < Integer > front11 (int [] a, int [] b) {
    ArrayList < Integer > list = new ArrayList < Integer > ();
    if (a.length > 0 & b.length > 0) {
        list.add (a [0]);
        list.add (b [0]);
    }
    if (b.length == 0 & a.length > 0) {
        list.add (a [0]);
    }
    if (b.length > 0 & a.length == 0) {
        list.add (b [0]);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4892142_14753751_20_48
4892142_25529138_18_41
Title: Java code Check Password for Letter and Digit? 
----------------------------------------

public static boolean isValid (String password) {
    if (password.length () < 9) {
        return false;
    } else {
        char c = 0;
        int count = 0;
        System.out.println (password.length ());
        for (int i = 0;
        i <= password.length () - 1; i ++) {
            c = password.charAt (i);
            System.out.println (c);
            if (! Character.isLetterOrDigit (c)) {
                return false;
            } else if (Character.isDigit (c)) {
                count ++;
                if (count == 3) {
                    return false;
                }
            }

        }
        return true;
    }
}
----------------------------------------

public static boolean isValid (String s) {
    int i = 0, j = 0;
    if (s.length () >= 8) {
        for (i = 0; i < s.length (); i ++) {
            if (Character.isLetterOrDigit (s.charAt (i))) {
                if (Character.isDigit (s.charAt (i))) j ++;

            }
        }
    } else return false;

    if (j >= 2) return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48928896_48929761_1_23
48928896_48929938_1_14
Title: JVM heap keeps Increasing. why? 
----------------------------------------

public int GetAIntFromDatabase (String columblName) {
    int stare = 0;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;
    try {
        String query = "SELECT * FROM stari ORDER BY id DESC LIMIT 1";
        preparedStatement = this.connnection.prepareStatement (query);
        resultSet = preparedStatement.executeQuery ();
        if (resultSet.next ()) {
            stare = resultSet.getInt (columblName);
            return stare;
        }
    } catch (SQLException ex) {
        System.out.println ("GetUtilajStare Error: " + ex);
        return 0;
    } finally {
        if (preparedStatement != null) preparedStatement.close ();

        if (resultSet != null) resultSet.close ();

    }
    return 0;
}
----------------------------------------

public int GetAIntFromDatabase (String columblName) {
    final String query = "SELECT * FROM stari ORDER BY id DESC LIMIT 1";
    try (final PreparedStatement preparedStatement = this.connnection.prepareStatement (query)) {
        final ResultSet resultSet = preparedStatement.executeQuery ();
        if (resultSet.next ()) {
            return resultSet.getInt (columblName);
        }
        return 0;
    } catch (SQLException ex) {
        return 0;
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4893265_39125149_41_61
4893265_4894516_55_79
Title: dragging a jlabel around the screen 
----------------------------------------

public void mousePressed (final MouseEvent e) {
    final Component pressedComp = dragP.findComponentAt (e.getX (), e.getY ());
    if (pressedComp != null && pressedComp instanceof JLabel) {
        selectedLabel = (JLabel) pressedComp;
        selectedLabelLocation = selectedLabel.getLocation ();
        panelClickPoint = e.getPoint ();
        dragP.setComponentZOrder (selectedLabel, 0);
        selectedLabel.repaint ();
    } else {
        selectedLabel = null;
        selectedLabelLocation = null;
        panelClickPoint = null;
    }
}
----------------------------------------

public void mousePressed (MouseEvent me) {
    clickedPanel = (JPanel) backingPanel.getComponentAt (me.getPoint ());
    Component [] components = clickedPanel.getComponents ();
    if (components.length == 0) {
        return;
    }
    if (components [0] instanceof JLabel) {
        dragLabel = (JLabel) components [0];
        clickedPanel.remove (dragLabel);
        clickedPanel.revalidate ();
        clickedPanel.repaint ();
        dragLabelWidthDiv2 = dragLabel.getWidth () / 2;
        dragLabelHeightDiv2 = dragLabel.getHeight () / 2;
        int x = me.getPoint ().x - dragLabelWidthDiv2;
        int y = me.getPoint ().y - dragLabelHeightDiv2;
        dragLabel.setLocation (x, y);
        add (dragLabel, JLayeredPane.DRAG_LAYER);
        repaint ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48959417_48959463_1_14
48959417_48959500_1_13
Title: Java string manipulation/ new String creation 
----------------------------------------

public static String repeatChars (String x) {
    StringBuilder sb = new StringBuilder ();
    for (char ch : x.toCharArray ()) {
        switch (ch) {
            case 'a' :
            case 'e' :
            case 'i' :
            case 'o' :
            case 'u' :
                sb.append (ch).append (ch);
                break;
            default :
                sb.append (ch).append (ch).append (ch);
                break;
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String repeatChars (String x) {
    String newStr = "";
    for (int i = 0;
    i < x.length (); ++ i) {
        char c = x.charAt (i);
        int repeatTimes = "aeiou".indexOf (x.charAt (i)) == - 1 ? 3 : 2;
        for (int j = 0;
        j < repeatTimes; ++ j) {
            newStr += c;
        }
    }
    return newStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48960441_48960621_71_93
48960441_48960621_80_88
Title: why repeated call to repaint() method did not work 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JButton btn = (JButton) e.getSource ();
    btn.setEnabled (false);
    Timer timer = new Timer (5000, new ActionListener () {
        private int counter = 0;
        @Override
        public void actionPerformed (ActionEvent e) {
            System.out.println ("Frame repaint started");
            parent.update ();
            counter ++;
            if (counter >= 130) {
                ((Timer) e.getSource ()).stop ();
                btn.setEnabled (true);
            }
        }}

    );
    timer.setInitialDelay (0);
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    System.out.println ("Frame repaint started");
    parent.update ();
    counter ++;
    if (counter >= 130) {
        ((Timer) e.getSource ()).stop ();
        btn.setEnabled (true);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48972842_48972915_1_17
48972842_48973046_5_19
Title: User's input formed to word rhombus 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter your name: ");
    String name = sc.nextLine ();
    int enteredNamesLength = name.length ();
    for (int i = 0;
    i <= enteredNamesLength; i ++) {
        System.out.println (name.substring (0, (int) i));
    }
    for (int i = 1;
    i <= enteredNamesLength; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (" ");
        }
        System.out.println (name.substring (i, enteredNamesLength));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter your name: ");
    String name = sc.nextLine ();
    int enteredNamesLength = name.length ();
    for (int start = 0, stop = 0;
    start < enteredNamesLength && stop < enteredNamesLength;) {
        print (start, stop, name);
        if (stop < enteredNamesLength - 1) {
            stop ++;
        } else {
            start ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48974676_48975275_2_39
48974676_48975275_40_56
Title: Java NullPointer Exception while using a Cursor 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_zutat_bearbeiten);
    dbZugriff = new DbZugriff (this);
    GrundgeruestZutatenverwaltung datenCursor;
    Log.d (LOG_TAG, "Datenquelle wird geöffnet");
    dbZugriff.open ();
    datenCursor = dbZugriff.createGrundgeruestZutatenverwaltung ("Testprodukt", 2, "kg", 123);
    Log.d (LOG_TAG, "Es wurde der folgende Eintrag in die Datenbank geschrieben:");
    Log.d (LOG_TAG, "ID: " + datenCursor.getId () + ", Inhalt: " + datenCursor.toString ());
    Log.d (LOG_TAG, "Folgende Einträge sind in der Datenbank vorhanden:");
    listenEintraegeZeigen ();
    dbZugriff = new DbZugriff (this);
    Log.d (LOG_TAG, "Folgender Eintrag in Datenbank: ");
    Log.d (LOG_TAG, "ID" + datenCursor.getId () + "Zutat" + datenCursor.getZutat () + "Anzahl" + datenCursor.getAnzahl () + "Einheit" + datenCursor.getEinheit () + "Kcal" + datenCursor.getKcal ());
    Log.d (LOG_TAG, "Folgende Einträge sind in der Datenbank vorhanden:");
    listenEintraegeZeigen ();
    Log.d (LOG_TAG, "Datenquelle wird geschlossen");
    dbZugriff.close ();
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_zutat_bearbeiten);
    dbZugriff = new DbZugriff (this);
    GrundgeruestZutatenverwaltung datenCursor;
    Log.d (LOG_TAG, "Datenquelle wird geöffnet");
    dbZugriff.open ();
    datenCursor = dbZugriff.createGrundgeruestZutatenverwaltung ("Testprodukt", 2, "kg", 123);
    if ((datenCursor.getZutat ()).equalsIgnoreCase ("NULL")) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48977076_48977140_7_18
48977076_48977154_3_12
Title: Is there an easier way to write this? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter String To Reverse:- ");
    String input = sc.next ();
    char [] arr = input.toCharArray ();
    for (int i = arr.length - 1;
    i >= 0; i --) System.out.print (arr [i]);

}
----------------------------------------

public static void main (String args []) {
    String name = "Vinayak Dwivedi";
    String reverseStrinf = "";
    for (int i = name.length () - 1;
    i >= 0; i --) {
        reverseStrinf = reverseStrinf + name.charAt (i);
    }
    System.out.println ("reverseStrinf:-" + reverseStrinf);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
48991143_48992493_14_51
48991143_48992535_20_48
Title: TreeView of objects having child nodes that are fields of the object 
----------------------------------------

public void start (Stage primaryStage) {
    List < SomeEntity > entities = Arrays.asList (new SomeEntity ("First object", "String value 1", 42), new SomeEntity ("Second object", "String value 2", 3));
    TreeView < SomeEntity > tree = new TreeView < > ();
    tree.setShowRoot (false);
    TreeItem < SomeEntity > treeRoot = new TreeItem < > ();
    tree.setRoot (treeRoot);
    for (SomeEntity entity : entities) {
        TreeItem < SomeEntity > item = PropertyTreeItem.baseItem (entity);
        treeRoot.getChildren ().add (item);
        item.getChildren ().add (new PropertyTreeItem < String > (entity, entity.getStringField ()));
        item.getChildren ().add (new PropertyTreeItem < Integer > (entity, entity.getValue ()));
    }
    tree.setCellFactory (tv -> new TreeCell < SomeEntity > () {
        @Override
        protected void updateItem (SomeEntity entity, boolean empty) {
            super.updateItem (entity, empty);
            PropertyTreeItem < ? > item = (PropertyTreeItem < ? >) getTreeItem ();
            if (empty) {
                setText (null);
            } else {
                setText (item.getPropertyValue ().toString ());
            }
        }}

    );
    Scene scene = new Scene (tree);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    MyObject myObject1 = new MyObject ("myObject1", "field 1 a", new CustomObject ("customObject 1", 3), 5);
    MyObject myObject2 = new MyObject ("myObject2", "field 1 b", new CustomObject ("customObject 2", 36), 10);
    MyObject myObject3 = new MyObject ("myObject3", "field 1 c", new CustomObject ("customObject 3", 23), 8);
    List < MyObject > list = new ArrayList ();
    list.add (myObject1);
    list.add (myObject2);
    list.add (myObject3);
    List < TreeItem < String > > treeItemsContainer = new ArrayList ();
    for (MyObject object : list) {
        ObjectToTreeView objectToTreeView = new ObjectToTreeView (object);
        treeItemsContainer.add (objectToTreeView.getRootItem ());
    }
    TreeItem < String > rootItem = new TreeItem ();
    rootItem.setExpanded (true);
    rootItem.getChildren ().addAll (treeItemsContainer);
    TreeView treeView = new TreeView (rootItem);
    Scene scene = new Scene (treeView, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4903611_21122472_1_20
4903611_4903779_1_15
Title: Java List Sorting: Is there a way to keep a list permantly sorted automatically like TreeMap? 
----------------------------------------

private void add (Integer value) {
    ListIterator < Integer > listIterator = list.listIterator ();
    Integer next = null;
    while (listIterator.hasNext ()) {
        next = listIterator.next ();
        if (next.compareTo (value) > 0) {
            break;
        }
    }
    if (next == null || next.compareTo (value) < 0) {
        listIterator.add (value);
    } else {
        listIterator.set (value);
        listIterator.add (next);
    }
}
----------------------------------------

public boolean add (Integer e) {
    int i = 0;
    for (Iterator < Integer > it = this.iterator ();
    it.hasNext ();) {
        int current = it.next ();
        if (current > e) {
            super.add (i, e);
            return true;
        }
        i ++;
    }
    return super.add (e);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038019_49038151_5_26
49038019_49038173_1_15
Title: coinFlip heads streak output 
----------------------------------------

public void run () {
    int wasHeads = 0;
    int streak = 0;
    int bestStreak = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        int coinFlip = Randomizer.nextInt (1, 2);
        if (coinFlip == 2) {
            streak ++;
            wasHeads = 1;
        } else if (coinFlip == 1) {
            wasHeads = 0;
            if (steak > bestStreak) {
                bestStreak = streak;
            }
            streak = 0;
        }

    }
    System.out.println (streak);
}
----------------------------------------

public void run () {
    int highestNumberOfConsecutiveHeads = 0;
    int currentNumberOfConsecutiveHeads = 0;
    for (int i = 0;
    i < 100; i ++) {
        if (Randomizer.nextInt (1, 2) == 2) {
            currentNumberOfConsecutiveHeads ++;
            if (currentNumberOfConsecutiveHeads > largestNumberOfConsecutiveHeads) {
                highestNumberOfConsecutiveHeads = currentNumberOfConsecutiveHeads;
            }
        } else {
            currentNumberOfConsecutiveHeads = 0;
        }
    }
    System.out.println ("Longest streak: " + highestnumberOfConsecutiveHeads);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038019_49038151_5_26
49038019_49038593_1_46
Title: coinFlip heads streak output 
----------------------------------------

public void run () {
    int wasHeads = 0;
    int streak = 0;
    int bestStreak = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        int coinFlip = Randomizer.nextInt (1, 2);
        if (coinFlip == 2) {
            streak ++;
            wasHeads = 1;
        } else if (coinFlip == 1) {
            wasHeads = 0;
            if (steak > bestStreak) {
                bestStreak = streak;
            }
            streak = 0;
        }

    }
    System.out.println (streak);
}
----------------------------------------

public void run () {
    int h = 0;
    int t = 0;
    boolean wasHeads = false;
    boolean isHeads = false;
    int longest = 0;
    int streak = 0;
    int ih = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        int coinFlip = Randomizer.nextInt (1, 2);
        if (coinFlip == 2) {
            System.out.println ("Heads");
            if (wasHeads = true) {
                streak ++;
            } else {
                streak = 0;
            }
            wasHeads = true;
        } else if (coinFlip == 1) {
            System.out.println ("Tails");
            t ++;
            isHeads = false;
            if (streak > longest) {
                longest = streak;
            }
            streak = 0;
            ih = 0;
        }

    }
    System.out.println ("Longest streak of heads: " + longest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038019_49038173_1_15
49038019_49038593_1_46
Title: coinFlip heads streak output 
----------------------------------------

public void run () {
    int highestNumberOfConsecutiveHeads = 0;
    int currentNumberOfConsecutiveHeads = 0;
    for (int i = 0;
    i < 100; i ++) {
        if (Randomizer.nextInt (1, 2) == 2) {
            currentNumberOfConsecutiveHeads ++;
            if (currentNumberOfConsecutiveHeads > largestNumberOfConsecutiveHeads) {
                highestNumberOfConsecutiveHeads = currentNumberOfConsecutiveHeads;
            }
        } else {
            currentNumberOfConsecutiveHeads = 0;
        }
    }
    System.out.println ("Longest streak: " + highestnumberOfConsecutiveHeads);
}
----------------------------------------

public void run () {
    int h = 0;
    int t = 0;
    boolean wasHeads = false;
    boolean isHeads = false;
    int longest = 0;
    int streak = 0;
    int ih = 0;
    for (int i = 0;
    i < FLIPS; i ++) {
        int coinFlip = Randomizer.nextInt (1, 2);
        if (coinFlip == 2) {
            System.out.println ("Heads");
            if (wasHeads = true) {
                streak ++;
            } else {
                streak = 0;
            }
            wasHeads = true;
        } else if (coinFlip == 1) {
            System.out.println ("Tails");
            t ++;
            isHeads = false;
            if (streak > longest) {
                longest = streak;
            }
            streak = 0;
            ih = 0;
        }

    }
    System.out.println ("Longest streak of heads: " + longest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038048_49038132_1_10
49038048_49038170_1_17
Title: "Print the number of unique vowels in a string Java" 
----------------------------------------

public static int count_Vowels (String str) {
    str = str.toLowerCase ();
    int count = 0;
    count += string.contains ("a") ? 1 : 0;
    count += string.contains ("e") ? 1 : 0;
    count += string.contains ("i") ? 1 : 0;
    count += string.contains ("o") ? 1 : 0;
    count += string.contains ("u") ? 1 : 0;
    return count;
}
----------------------------------------

public static int count_Vowels (String str) {
    int a = 0, e = 0, i = 0, o = 0, u = 0;
    for (char ch : str.toLowerCase ().toCharArray ()) {
        if (ch == 'a') {
            a = 1;
        } else if (ch == 'e') {
            e = 1;
        } else if (ch == 'i') {
            i = 1;
        } else if (ch == 'o') {
            o = 1;
        } else if (ch == 'u') {
            u = 1;
        }

    }
    return a + e + i + o + u;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038048_49038132_1_10
49038048_49038179_1_11
Title: "Print the number of unique vowels in a string Java" 
----------------------------------------

public static int count_Vowels (String str) {
    str = str.toLowerCase ();
    int count = 0;
    count += string.contains ("a") ? 1 : 0;
    count += string.contains ("e") ? 1 : 0;
    count += string.contains ("i") ? 1 : 0;
    count += string.contains ("o") ? 1 : 0;
    count += string.contains ("u") ? 1 : 0;
    return count;
}
----------------------------------------

public static int count_Vowels (String str) {
    str = str.toLowerCase ();
    Set < Character > setOfUsedChars = new HashSet < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == 'a' || str.charAt (i) == 'e' || str.charAt (i) == 'i' || str.charAt (i) == 'o' || str.charAt (i) == 'u') {
            setOfUsedChars.add (str.charAt (i));
        }
    }
    return setOfUsedChars.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49038048_49038170_1_17
49038048_49038179_1_11
Title: "Print the number of unique vowels in a string Java" 
----------------------------------------

public static int count_Vowels (String str) {
    int a = 0, e = 0, i = 0, o = 0, u = 0;
    for (char ch : str.toLowerCase ().toCharArray ()) {
        if (ch == 'a') {
            a = 1;
        } else if (ch == 'e') {
            e = 1;
        } else if (ch == 'i') {
            i = 1;
        } else if (ch == 'o') {
            o = 1;
        } else if (ch == 'u') {
            u = 1;
        }

    }
    return a + e + i + o + u;
}
----------------------------------------

public static int count_Vowels (String str) {
    str = str.toLowerCase ();
    Set < Character > setOfUsedChars = new HashSet < > ();
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == 'a' || str.charAt (i) == 'e' || str.charAt (i) == 'i' || str.charAt (i) == 'o' || str.charAt (i) == 'u') {
            setOfUsedChars.add (str.charAt (i));
        }
    }
    return setOfUsedChars.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49069413_49069529_1_12
49069413_49070040_12_28
Title: How to print a statement from a for loop only once - Java 
----------------------------------------

public static void getMatchingNumbers (int [] a, int [] b, boolean c) {
    c = false;
    for (int i : a) {
        for (int j : b) {
            if (i == j) {
                System.out.println ("matching numbers are " + i);
                c = true;
            }
        }
    }
    if (! c) System.out.println ("no matches found");

}
----------------------------------------

public static void getMatchingNumbers (int [] a, int [] b, boolean c) {
    for (int i : a) {
        for (int j : b) {
            if (i == j) {
                System.out.println ("matching numbers are " + i);
                c = true;
            }
        }
    }
    if (c == false) System.out.println ("no matches found");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49069413_49070040_12_28
49069413_49070977_1_18
Title: How to print a statement from a for loop only once - Java 
----------------------------------------

public static void getMatchingNumbers (int [] a, int [] b, boolean c) {
    for (int i : a) {
        for (int j : b) {
            if (i == j) {
                System.out.println ("matching numbers are " + i);
                c = true;
            }
        }
    }
    if (c == false) System.out.println ("no matches found");

}
----------------------------------------

public static void getMatchingNumbers (int [] a, int [] b, boolean c) {
    int flag = 0;
    for (int i : a) {
        for (int j : b) {
            if (i == j) {
                System.out.println ("matching numbers are " + i);
                c = false;
            }
        }
    }
    if (c) System.out.println ("no matches found");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49087519_49087771_1_30
49087519_49087779_1_34
Title: Read a word from a file 
----------------------------------------

public static void main (String a []) {
    File file = new File ("words.txt");
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter a word you would like to search for:");
    String word = sc.nextLine ();
    boolean exist = false;
    List < String > words = new ArrayList < String > ();
    sc = new Scanner (file);
    while (sc.hasNext ()) {
        words.add (sc.next ());
    }
    for (int i = 0;
    i < words.size (); i ++) {
        if (words.get (i).equals (word)) {
            System.out.println ("The entered word: " + word + " exists in the dictionary");
            exist = true;
            break;
        }
    }
    if (! exist) {
        System.out.println ("This word is not in the dictionary.");
        System.out.println ("Do you want to add it");
        if (System.in.read () == 'y') {
            words.add (word);
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("C:/Users/pelos.W2017/workspace/Frac/src/words.txt");
    Scanner sc = null;
    List < String > words = new ArrayList < > ();
    try {
        sc = new Scanner (file);
        sc.useDelimiter (",");
        while (sc.hasNext ()) words.add (sc.next ());

    } catch (IOException e) {
        System.out.println (" cannot write to file " + file.toString ());
        return;
    }
    sc = new Scanner (System.in);
    boolean wordExists = false;
    String word = null;
    System.out.println ("Enter a word you would like to search for:");
    word = sc.next ();
    if (! words.contains (word)) {
        System.out.println ("The entered word: " + word + " doesn't exist in the dictionary");
        System.out.println ("Add to list?");
        if (sc.next ().equals ("yes")) {
            words.add (word);
        }
    } else {
        wordExists = true;
    }
    System.out.println ("The entered word: " + word + " exists in the dictionary");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49088633_49088676_1_12
49088633_49088955_1_16
Title: "How to eliminate all ""if"" statements from my validator class" 
----------------------------------------

@Override
public void validate (Client entity) throws ValidatorException {
    switch (isNameValid (entity.getName ())) {
        case false :
            throw new ClientException ("Invalid name!");
    }
    switch (isPhoneValid (entity.getPhone ())) {
        case false :
            throw new ClientException ("Invalid phone number!");
    }
}
----------------------------------------

public void validate (Client entity) throws ValidatorException {
    try {
        int len = entity.getName ().length ();
        int isshort = 1 / len;
        int islong = 1 / max (0, 100 - length);
    } catch (Exception e) {
        throw new ClientException ("Invalid name!");
    }
    try {
        Long.parseLong (entity.getPhone ());
    } catch (NumberFormatException e) {
        throw new ClientException ("Invalid phone number!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49090154_49090301_8_25
49090154_49090305_20_31
Title: How can i use string variable as an object name in JAVA? 
----------------------------------------

public static void main (String [] args) {
    UserRegistrar users = new UserRegistrar ();
    Scanner scan = new Scanner (System.in);
    for (;;) {
        System.out.println ("Enter a user name to register or a blank line to exit:");
        System.out.print ("User name: ");
        String name = scan.nextLine ().trim ();
        if (name.isEmpty ()) break;

        User user = new User ();
        user.setName (name);
        System.out.print ("User account no.: ");
        int acc = scan.nextInt ();
        scan.nextLine ();
        user.setAccount (acc);
        users.addUser (user);
        System.out.println (users);
    }
}
----------------------------------------

public static void main (String [] args) {
    Map < Integer, String > map = new LinkedHashMap < > ();
    for (int i = 0;
    i < 5; i ++) {
        User user = new User ();
        map.put (user.getID (), user.getName ());
    }
    for (Map.Entry < Integer, String > entry : map.entrySet ()) {
        System.out.println (entry.getKey () + ": " + entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49099605_49100095_27_63
49099605_49100568_1_54
Title: Find 2 closest previous values and 2 closest next values in a sorted array list 
----------------------------------------

private static List < Long > search (long value, int numOfElements, ArrayList < Long > a) {
    if (null == a) {
        return null;
    }
    if (a.isEmpty ()) {
        return a;
    }
    if (a.size () == 1) {
        return a;
    }
    if (value < a.get (0)) {
        return addNumbersAroundIndex (0, value, numOfElements, a);
    }
    if (value > a.get (a.size () - 1)) {
        return addNumbersAroundIndex (a.size () - 1, value, numOfElements, a);
    }
    int lo = 0;
    int hi = a.size () - 1;
    while (lo <= hi) {
        int mid = (hi + lo) / 2;
        if (value < a.get (mid)) {
            hi = mid - 1;
        } else if (value > a.get (mid)) {
            lo = mid + 1;
        } else {
            return addNumbersAroundIndex (mid, value, numOfElements, a);
        }

    }
    if ((a.get (lo) - value) < (value - a.get (hi))) {
        return addNumbersAroundIndex (lo, value, numOfElements, a);
    } else {
        return addNumbersAroundIndex (hi, value, numOfElements, a);
    }
}
----------------------------------------

private static List < Long > search (long value, List < Long > a) {
    if (a.size () < 3) return new ArrayList < > (a);

    List < Long > result = new ArrayList < > ();
    if (value < a.get (0)) {
        result.add (a.get (0));
        result.add (a.get (1));
        return result;
    }
    if (value > a.get (a.size () - 1)) {
        result.add (a.get (a.size () - 2));
        result.add (a.get (a.size () - 1));
        return result;
    }
    int lo = 0;
    int hi = a.size () - 1;
    int match = - 1;
    while (lo <= hi) {
        int mid = (hi + lo) / 2;
        if (value < a.get (mid)) {
            hi = mid - 1;
        } else if (value > a.get (mid)) {
            lo = mid + 1;
        } else {
            match = mid;
            break;
        }

    }
    if (match >= 0) {
        if (match > 1) result.add (a.get (match - 2));

        if (match > 0) result.add (a.get (match - 1));

        if (match < a.size () - 1) result.add (a.get (match + 1));

        if (match < a.size () - 2) result.add (a.get (match + 2));

    } else if (a.get (lo) < value) {
        result.add (a.get (hi));
        result.add (a.get (lo));
        if (lo < a.size () - 1) result.add (a.get (lo + 1));

        if (lo < a.size () - 2) result.add (a.get (lo + 2));

    } else if (a.get (hi) > value) {
        if (hi > 1) result.add (a.get (hi - 2));

        if (hi > 0) result.add (a.get (hi - 1));

        result.add (a.get (hi));
        result.add (a.get (lo));
    } else {
        if (hi > 0) result.add (a.get (hi - 1));

        result.add (a.get (hi));
        result.add (a.get (lo));
        if (lo < a.size () - 1) result.add (a.get (lo + 1));

    }

    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49108388_49108544_1_13
49108388_49108562_1_17
Title: Generate series and show sum of 1*3*5 + 2*5*8 + 3*7*11 
----------------------------------------

public static void main (String args []) {
    int first = 1;
    int second = 3;
    int third = 5;
    int n = 5;
    int sum = 0;
    for (int i = 0;
    i < n; i ++) {
        sum += first * second * third;
        first ++;
        second += 2;
        third += 3;
    }
}
----------------------------------------

public static void main (String [] args) {
    int sum1 = 0;
    int sum2 = 0;
    int sum3 = 0;
    int num = 0;
    int series = 10;
    int result = 0;
    for (int i = 1;
    i < series; i ++) {
        sum1 = i;
        sum2 = sum1 + sum1 + 1;
        sum3 = sum2 + sum1 + 1;
        System.out.print (sum1 + "*" + sum2 + "*" + sum3 + "+");
        result += sum1 * sum2 * 3;
    }
    System.out.print ("Final result: " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49111215_49111596_7_22
49111215_49111891_1_12
Title: How can I get the name of a color without a lot of if-statements? 
----------------------------------------

public static void main (String [] args) throws IllegalAccessException {
    Class clazz = Color.class;
    Field [] colorFields = clazz.getDeclaredFields ();
    HashMap < Color, String > singleColors = new HashMap < > ();
    for (Field cf : colorFields) {
        int modifiers = cf.getModifiers ();
        if (! Modifier.isPublic (modifiers)) continue;

        Color c = (Color) cf.get (null);
        if (! singleColors.values ().contains (c)) singleColors.put (c, cf.getName ());

    }
    System.out.printnln ("My Color: " + getName (Color.BLUE));
}
----------------------------------------

public static void main (String [] args) throws IllegalArgumentException, IllegalAccessException {
    Field [] names = Color.class.getFields ();
    HashMap < Color, String > list = new HashMap < Color, String > ();
    for (Field name : names) {
        try {
            list.put ((Color) Color.class.getDeclaredField (name.getName ()).get (null), name.getName ());
        } catch (NoSuchFieldException e) {
        }
    }
    System.out.println (list.get (Color.RED));
    System.out.println (list.get (Color.BLUE));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49112841_49112944_1_12
49112841_49113244_1_13
Title: Removing from a array and replacing the empty location 
----------------------------------------

public boolean cancelPolicy (int polNum) {
    int n = policies.length - 1;
    for (int i = 0;
    i <= n; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            policies [i] = policies [n];
            policies [n] = null;
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean cancelPolicy (int polNum) {
    for (int i = 0;
    i < policies.length; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            int [] newArr = new int [policies.length - 1];
            System.arraycopy (policies, 0, newArr, 0, i);
            System.arraycopy (policies, i + 1, newArr, i, policies.length - i - 1);
            policies = newArr;
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49112841_49112944_1_12
49112841_49113298_1_15
Title: Removing from a array and replacing the empty location 
----------------------------------------

public boolean cancelPolicy (int polNum) {
    int n = policies.length - 1;
    for (int i = 0;
    i <= n; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            policies [i] = policies [n];
            policies [n] = null;
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean cancelPolicy (int polNum) {
    for (int i = 0;
    i < policies.length; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            for (int j = policies.length - 1;
            j >= 0; j --) {
                if (policies [j] != null) {
                    policies [i] = policies [j];
                    policies [j] = null;
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49112841_49113244_1_13
49112841_49113298_1_15
Title: Removing from a array and replacing the empty location 
----------------------------------------

public boolean cancelPolicy (int polNum) {
    for (int i = 0;
    i < policies.length; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            int [] newArr = new int [policies.length - 1];
            System.arraycopy (policies, 0, newArr, 0, i);
            System.arraycopy (policies, i + 1, newArr, i, policies.length - i - 1);
            policies = newArr;
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean cancelPolicy (int polNum) {
    for (int i = 0;
    i < policies.length; i ++) {
        if (policies [i].getPolicyNumber () == polNum) {
            for (int j = policies.length - 1;
            j >= 0; j --) {
                if (policies [j] != null) {
                    policies [i] = policies [j];
                    policies [j] = null;
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49119119_49121958_1_11
49119119_49143315_3_16
Title: Trouble using proper logic in restarting a for loop 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] lengths = new int [3];
    for (int i = 0;
    i < 3; i ++) {
        int input = reader.nextInt ();
        lengths [i] = input;
    }
    for (int i = 0;
    i < 3; i ++) {
        printStars (lengths [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int p = 0;
    ArrayList < Integer > numList = new ArrayList < Integer > ();
    for (int i = 0;
    i < 3; i ++) {
        int num = Integer.parseInt (reader.next ());
        numList.add (num);
    }
    printStars (numList.get (p));
    p ++;
    printStars (numList.get (p));
    p ++;
    printStars (numList.get (p));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49119119_49121958_1_11
49119119_49143643_5_13
Title: Trouble using proper logic in restarting a for loop 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int [] lengths = new int [3];
    for (int i = 0;
    i < 3; i ++) {
        int input = reader.nextInt ();
        lengths [i] = input;
    }
    for (int i = 0;
    i < 3; i ++) {
        printStars (lengths [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    ArrayList < Integer > numList = new ArrayList < Integer > ();
    for (int i = 0;
    i < 3; i ++) {
        numList.add ((Integer.parseInt (reader.next ())));
    }
    reader.close ();
    printStars (numList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49119119_49143315_3_16
49119119_49143643_5_13
Title: Trouble using proper logic in restarting a for loop 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    int p = 0;
    ArrayList < Integer > numList = new ArrayList < Integer > ();
    for (int i = 0;
    i < 3; i ++) {
        int num = Integer.parseInt (reader.next ());
        numList.add (num);
    }
    printStars (numList.get (p));
    p ++;
    printStars (numList.get (p));
    p ++;
    printStars (numList.get (p));
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    ArrayList < Integer > numList = new ArrayList < Integer > ();
    for (int i = 0;
    i < 3; i ++) {
        numList.add ((Integer.parseInt (reader.next ())));
    }
    reader.close ();
    printStars (numList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49120644_49121843_2_30
49120644_49134374_18_52
Title: Xml parsing using xmlstream Reader and writing into a new xml file 
----------------------------------------

public static void main (String [] args) throws Exception {
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    factory.setNamespaceAware (true);
    DocumentBuilder parser = factory.newDocumentBuilder ();
    try (InputStream in = new FileInputStream ("src/a.xml")) {
        Document doc = parser.parse (in);
        NodeList beans = doc.getElementsByTagNameNS ("http://www.springframework.org/schema/beans", "bean");
        List < Element > toRemove = new ArrayList < > ();
        for (int i = 0;
        i < beans.getLength (); i ++) {
            Element bean = (Element) beans.item (i);
            if (bean.getElementsByTagNameNS ("http://www.springframework.org/schema/aop", "scoped-proxy").getLength () > 0) {
                toRemove.add (bean);
            }
        }
        toRemove.forEach (e -> e.getParentNode ().removeChild (e));
        Transformer writer = TransformerFactory.newInstance ().newTransformer ();
        writer.transform (new DOMSource (doc), new StreamResult (System.out));
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();
    factory.setNamespaceAware (true);
    DocumentBuilder parser = factory.newDocumentBuilder ();
    try (InputStream in = new FileInputStream ("src/a.xml")) {
        Document doc = parser.parse (in);
        String filepath = "src/filtered.xml";
        StreamResult result = new StreamResult (new File (filepath));
        NodeList beans = doc.getElementsByTagNameNS ("http://www.springframework.org/schema/beans", "bean");
        List < Element > toRemove = new ArrayList < > ();
        for (int i = 0;
        i < beans.getLength (); i ++) {
            Element bean = (Element) beans.item (i);
            if (bean.getElementsByTagNameNS ("http://www.springframework.org/schema/aop", "scoped-proxy").getLength () > 0) {
                toRemove.add (bean);
            }
        }
        toRemove.forEach (e -> e.getParentNode ().removeChild (e));
        Transformer writer = TransformerFactory.newInstance ().newTransformer ();
        writer.setOutputProperty (OutputKeys.ENCODING, "UTF-8");
        writer.transform (new DOMSource (doc), result);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49126461_49126552_2_9
49126461_49126760_2_9
Title: Java reverse string method 
----------------------------------------

public static String reverse (String a) {
    int j = a.length ();
    char [] newWord = new char [j];
    for (int i = 0;
    i < a.length (); i ++) {
        newWord [-- j] = a.charAt (i);
    }
    return new String (newWord);
}
----------------------------------------

public static String reverse (String a) {
    int size = a.length ();
    char [] newWord = new char [size];
    for (int i = size - 1, j = 0;
    i >= 0; i --, j ++) {
        newWord [j] = a.charAt (i);
    }
    return new String (newWord);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49126618_49126872_1_17
49126618_49127108_1_13
Title: Convert String to Date and remove day value (always set 1 day of month) 
----------------------------------------

public static Date toCardDateFormat (String date) {
    try {
        Date value = CARD_DATE_FORMAT.parse (date);
        SimpleDateFormat dateFormatter = new SimpleDateFormat ("yy-MM", Locale.getDefault ());
        String datetimeLocale = dateFormatter.format (value);
        String newDate = datetimeLocale + "-01";
        SimpleDateFormat dateFormat = new SimpleDateFormat ("yy-MM-dd", Locale.getDefault ());
        Date d = dateFormat.parse (newDate);
        return d;
    } catch (ParseException e) {
        return null;
    }
}
----------------------------------------

public static Date toCardDateFormat (String date) {
    Date result = null;
    try {
        result = new SimpleDateFormat ("yyMMdd", Locale.getDefault ()).parse (date);
    } catch (ParseException e) {
        return null;
    }
    Calendar cal = Calendar.getInstance ();
    cal.setTime (result);
    cal.set (Calendar.DAY_OF_MONTH, 1);
    return cal.getTime ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49146559_49146933_1_34
49146559_49146975_1_27
Title: Java-Merging two strings using alternating characters while also preserving runs 
----------------------------------------

public static void main (String [] args) {
    String t = "abbcde";
    String s = "xxxyzzzz";
    String result = "";
    int tNextIndex = 0;
    int sNextIndex = 0;
    while (tNextIndex < t.length () && sNextIndex < s.length ()) {
        char tPreviousChar = t.charAt (tNextIndex ++);
        result += tPreviousChar;
        while (tNextIndex < t.length () && t.charAt (tNextIndex) == tPreviousChar) {
            result += tPreviousChar;
            tNextIndex ++;
        }
        char sPreviousChar = s.charAt (sNextIndex ++);
        result += sPreviousChar;
        while (sNextIndex < s.length () && s.charAt (sNextIndex) == sPreviousChar) {
            result += sPreviousChar;
            sNextIndex ++;
        }
    }
    while (tNextIndex < t.length ()) {
        result += t.charAt (tNextIndex ++);
    }
    while (sNextIndex < s.length ()) {
        result += s.charAt (sNextIndex ++);
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    String s1 = "abbcde";
    String s2 = "xxxyzzzz";
    Pattern p = Pattern.compile ("(\\w)\\1*");
    Matcher m1 = p.matcher (s1);
    Matcher m2 = p.matcher (s2);
    StringBuilder sb = new StringBuilder ();
    int start = - 1;
    while (m1.find () && m2.find ()) {
        sb.append ((m1.group () + m2.group ()));
        start = m1.end ();
    }
    m1.reset (s1.substring (start, s1.length ()));
    while (m1.find ()) {
        sb.append (m1.group ());
    }
    while (m2.find ()) {
        sb.append (m2.group ());
    }
    System.out.println (sb);
}
----------------------------------------
