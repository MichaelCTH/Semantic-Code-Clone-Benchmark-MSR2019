$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2326758_14356254_5_32
2326758_39001811_1_11
Title: How to properly override clone method? 
----------------------------------------

protected MyObject clone () {
    ObjectOutputStream oos = null;
    ObjectInputStream ois = null;
    try {
        ByteArrayOutputStream bOs = new ByteArrayOutputStream ();
        oos = new ObjectOutputStream (bOs);
        oos.writeObject (this);
        ois = new ObjectInputStream (new ByteArrayInputStream (bOs.toByteArray ()));
        return (MyObject) ois.readObject ();
    } catch (Exception e) {
        return null;
    } finally {
        if (oos != null) try {
            oos.close ();
        } catch (IOException e) {
        }

        if (ois != null) try {
            ois.close ();
        } catch (IOException e) {
        }

    }
}
----------------------------------------

public Object clone () {
    try {
        ArrayList < ? > v = (ArrayList < ? >) super.clone ();
        v.elementData = Arrays.copyOf (elementData, size);
        v.modCount = 0;
        return v;
    } catch (CloneNotSupportedException e) {
        throw new InternalError (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23273484_23295238_1_17
23273484_23295290_1_15
Title: How to read XML values using string methods of Java 
----------------------------------------

private static String getvalue (String content, String tagname) {
    int tagOpenIndex = content.indexOf (tagname + "><![CDATA[");
    int tagCloseIndex = content.indexOf ("</", tagOpenIndex);
    String res = null;
    if (tagOpenIndex != - 1 && tagCloseIndex != - 1 && content.indexOf (":" + tagname, tagCloseIndex) != - 1) {
        int lenOpenTag = tagname.length () + 1;
        int valueStartIndex = tagOpenIndex + lenOpenTag;
        res = content.substring (valueStartIndex, tagCloseIndex);
    }
    return res;
}
----------------------------------------

public String getvalue (String buffer, String tagname) {
    String startTag, endTag, elementdata = null;
    int startposition, endposition;
    try {
        startTag = "<" + tagname + "><![CDATA[";
        endTag = "</" + tagname + "><![CDATA[";
        startposition = buffer.indexOf (startTag);
        startposition = startposition + startTag.length ();
        endposition = buffer.indexOf (endTag);
        elementdata = buffer.substring (startposition, endposition);
    }
    return elementdata;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23275594_23275801_1_18
23275594_23275850_1_12
Title: Creating a numeric pattern in a loop 
----------------------------------------

void display (int dimension) {
    int lineNumber = 0, linePosition = 0;
    int numberOfLines = dimension, numberOfCharactersPerLine = dimension;
    for (lineNumber = 1; lineNumber <= numberOfLines; lineNumber ++) {
        for (linePosition = 1; linePosition <= numberOfCharactersPerLine; linePosition ++) {
            if (linePosition < lineNumber) {
                System.out.print (lineNumber);
            } else {
                System.out.print (linePosition);
            }
        }
        System.out.println ();
    }
}
----------------------------------------

void display () {
    int i, k;
    for (i = 1; i <= 5; i ++) {
        for (k = 1; k <= 5; k ++) {
            System.out.print (Math.max (i, k));
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23278321_23278552_1_28
23278321_23278572_6_45
Title: Changing elements in a two dimensional array 
----------------------------------------

public static void main (String [] args) {
    int [] [] boardList = new int [15] [15];
    Scanner myScanner = new Scanner (System.in);
    boolean done = true;
    do {
        System.out.println ("1 - Add a being \n 2 - Show current board \n 3 - Show next generation \n 4 - Clear board \n 5 - Add preload pattern \n 6 - Exit");
        int choice = Integer.parseInt (myScanner.nextLine ());
        if (choice == 1) {
            System.out.print ("Enter the x coordinate: ");
            String answer = myScanner.nextLine ();
            int xCoordinate = Integer.parseInt (answer);
            System.out.print ("Enter the y coordinate: ");
            String answer2 = myScanner.nextLine ();
            int yCoordinate = Integer.parseInt (answer2);
            for (int i = 0;
            i < 15; i ++) {
                for (int j = 0;
                j < 15; j ++) {
                    if (xCoordinate == i && yCoordinate == j) {
                        System.out.printf ("x", boardList [i] [j]);
                    } else System.out.printf ("-", boardList [i] [j]);

                }
                System.out.println ();
            }
        }
    } while (done);
}
----------------------------------------

public static void main (String [] args) {
    int [] [] boardList = new int [15] [15];
    Scanner myScanner = new Scanner (System.in);
    boolean done = false;
    System.out.println ("1 - Add a being \n 2 - Show current board \n 3 - Show next generation \n 4 - Clear board \n 5 - Add preload pattern \n 6 - Exit");
    int choice = Integer.parseInt (myScanner.nextLine ());
    if (choice == 1) {
        System.out.print ("Enter the x coordinate: ");
        String answer = myScanner.nextLine ();
        int xCoordinate = Integer.parseInt (answer);
        System.out.print ("Enter the y coordinate: ");
        String answer2 = myScanner.nextLine ();
        int yCoordinate = Integer.parseInt (answer2);
        for (int i = 0;
        i < 15; i ++) {
            for (int j = 0;
            j < 15; j ++) {
                if (xCoordinate == i) {
                    if (yCoordinate == j) {
                        System.out.printf ("x", boardList [i] [j]);
                    } else {
                        System.out.printf ("-", boardList [i] [j]);
                    }
                } else {
                    System.out.printf ("-", boardList [i] [j]);
                }
            }
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23281880_23282115_1_11
23281880_23282239_4_18
Title: Issues with toString and Inheritance 
----------------------------------------

@Override
public String toString () {
    String string = super.toString ();
    string += "\n Type: " + type;
    string += "\n" + name + "'s backpack contains the following items: \n";
    for (Item item : backpack.values ()) {
        string += item;
    }
    return string;
}
----------------------------------------

@Override
public String toString () {
    String string = "Name: " + name + " Type: " + type + "\n";
    if (isAlive ()) {
        string += "Is alive with health: " + health;
    } else {
        string += "Is dead.";
    }
    string += "\n" + name + "'s backpack contains the following items: \n";
    for (Item item : backpack.values ()) {
        string += item;
    }
    return super.toString () + string;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23282319_23282368_1_21
23282319_23282394_1_10
Title: Java: Creating a String of length X with random chars 
----------------------------------------

public static String randomDNAString (int dnaLength) {
    Random rand = new Random ();
    StringBuilder dna = new StringBuilder ();
    for (int i = 0;
    i < dnaLength; i ++) {
        switch (rand.nextInt (4)) {
            case 0 :
                dna.append ("A");
                break;
            case 1 :
                dna.append ("C");
                break;
            case 2 :
                dna.append ("G");
                break;
            case 3 :
                dna.append ("T");
                break;
        }
    }
    return dna.toString ();
}
----------------------------------------

public static String randomDNAString (int dnaLength) {
    Random rand = new Random ();
    StringBuilder dna = new StringBuilder (dnaLength);
    for (int i = 0;
    i < dnaLength; i ++) {
        dna.append ("ACGT".charAt (rand.nextInt (4)));
    }
    return dna.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23293890_23294069_1_13
23293890_23294114_1_11
Title: Detecting the end of a linked list 
----------------------------------------

public void deleteEntry (String number) {
    int size = phoneBook.size ();
    for (ListIterator < Entry > i = phoneBook.listIterator ();
    i.hasNext ();) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            i.remove ();
            break;
        }
    }
    if (phoneBook.size () == size) {
        System.out.println ("Entry not found");
    }
}
----------------------------------------

public void deleteEntry (String number) {
    ListIterator < Entry > i = phoneBook.listIterator ();
    while (i.hasNext ()) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            i.remove ();
            return;
        }
    }
    System.out.println ("Entry not found");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23293890_23294069_1_13
23293890_23294125_1_19
Title: Detecting the end of a linked list 
----------------------------------------

public void deleteEntry (String number) {
    int size = phoneBook.size ();
    for (ListIterator < Entry > i = phoneBook.listIterator ();
    i.hasNext ();) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            i.remove ();
            break;
        }
    }
    if (phoneBook.size () == size) {
        System.out.println ("Entry not found");
    }
}
----------------------------------------

public void deleteEntry (String number) {
    ListIterator < Entry > i = phoneBook.listIterator ();
    boolean found = false;
    while (i.hasNext ()) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            if (! found) found = true;

            i.remove ();
            break;
        }
    }
    if (! found) {
        System.out.println ("Entry not found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23293890_23294114_1_11
23293890_23294125_1_19
Title: Detecting the end of a linked list 
----------------------------------------

public void deleteEntry (String number) {
    ListIterator < Entry > i = phoneBook.listIterator ();
    while (i.hasNext ()) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            i.remove ();
            return;
        }
    }
    System.out.println ("Entry not found");
}
----------------------------------------

public void deleteEntry (String number) {
    ListIterator < Entry > i = phoneBook.listIterator ();
    boolean found = false;
    while (i.hasNext ()) {
        Entry e = i.next ();
        if (e.getNumber ().equals (number)) {
            if (! found) found = true;

            i.remove ();
            break;
        }
    }
    if (! found) {
        System.out.println ("Entry not found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23300235_23301219_27_43
23300235_23301219_49_60
Title: Java multithreading - communication between 2 threads 
----------------------------------------

public void run () {
    while (true) {
        if (shouldFilePrinterPrint) {
            shouldFilePrinterPrint = false;
            String line;
            int counter = 0;
            try {
                while (counter < 5 && (line = br.readLine ()) != null) {
                    counter ++;
                    System.out.println (line);
                }
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            System.in.read ();
            shouldFilePrinterPrint = true;
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23300471_23300577_1_10
23300471_23300843_23_35
Title: Java summation of 2 list and stored in a list 
----------------------------------------

public static list Sum2List (list L1, list L2) {
    list l = null;
    int listCounter = 0;
    for (listNode p = L1.first;
    p != null; p = p.next) {
        for (listNode p1 = L2.first;
        p1 != null; p1 = p1.next) {
            l.set (listCounter ++, p.data + p1.data);
        }
    }
    return l;
}
----------------------------------------

public static MyList Sum2List (MyList L1, MyList L2) {
    MyList sum = new MyList ();
    ListNode currentNode1 = L1.getFirst ();
    ListNode currentNode2 = L2.getFirst ();
    while (currentNode1 != null && currentNode2 != null) {
        sum.add (new ListNode (currentNode1.getData () + currentNode2.getData ()));
        currentNode1 = currentNode1.getNext ();
        currentNode2 = currentNode2.getNext ();
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23300842_23300960_1_14
23300842_23301005_1_15
Title: recursive method to find a digit that occur in given number 
----------------------------------------

public static int countDigitx (int n, int x) {
    int count = 0;
    if (n == 0) {
        count = 0;
    } else if (n % 10 == x) {
        count ++;
        count += countDigitx (n / 10, x);
    } else {
        count += countDigitx (n / 10, x);
    }

    return count;
}
----------------------------------------

public static int countDigitx (int n, int x) {
    int count = 0;
    String s = String.valueOf (n);
    if (s != null && s.length () > 0) {
        String ch = String.valueOf (s.charAt (0));
        if (x == Integer.parseInt (ch)) {
            count ++;
        }
        s = s.substring (1);
        if (s.length () > 0) {
            count += countDigitx (Integer.parseInt (s), x);
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23309998_23310119_1_11
23309998_23310255_1_11
Title: implementing a method that returns true if all argument is in the range 
----------------------------------------

public boolean s (int a, int b) {
    int [] array = new int [] {a, b};
    for (int i : array) {
        if (i > 9 && i < 21) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean s (int a, int b) {
    int n = a * b;
    if (a == 0) n = b;

    if (b == 0) n = a;

    for (int i = 10;
    i < 21; i ++) if (n % i == 0) return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23315389_23315492_4_16
23315389_23315932_2_12
Title: iterate on file inside a folder 
----------------------------------------

public static void main (String [] args) {
    File path = new File ("/home/sander");
    if (path.exists ()) {
        File [] files = path.listFiles ();
        for (int i = 0;
        i < files.length; i ++) {
            if (files [i].isFile ()) {
                System.out.println (files [i]);
            }
        }
    } else {
        System.out.println ("Path doesn't exist");
    }
}
----------------------------------------

public static void main (String [] args) throws URISyntaxException {
    java.net.URL dirURL = ClassLoader.getSystemResource ("resources");
    File [] filePaths = new File (dirURL.toURI ()).listFiles ();
    for (File file : filePaths) {
        if (file.isFile ()) {
            System.out.println (file);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23318383_23346890_7_20
23318383_45972988_8_22
Title: Compress directory into a zipfile with Commons IO 
----------------------------------------

private static void compressDirectoryToZipfile (String rootDir, String sourceDir, ZipOutputStream out) throws IOException, FileNotFoundException {
    for (File file : new File (sourceDir).listFiles ()) {
        if (file.isDirectory ()) {
            compressDirectoryToZipfile (rootDir, sourceDir + File.separator + file.getName (), out);
        } else {
            ZipEntry entry = new ZipEntry (sourceDir.replace (rootDir, "") + file.getName ());
            out.putNextEntry (entry);
            FileInputStream in = new FileInputStream (sourceDir + file.getName ());
            IOUtils.copy (in, out);
            IOUtils.closeQuietly (in);
        }
    }
}
----------------------------------------

private static void compressDirectoryToZipfile (String rootDir, String sourceDir, ZipOutputStream out) throws IOException, FileNotFoundException {
    String dir = Paths.get (rootDir, sourceDir).toString ();
    for (File file : new File (dir).listFiles ()) {
        if (file.isDirectory ()) {
            compressDirectoryToZipfile (rootDir, Paths.get (sourceDir, file.getName ()).toString (), out);
        } else {
            ZipEntry entry = new ZipEntry (Paths.get (sourceDir, file.getName ()).toString ());
            out.putNextEntry (entry);
            FileInputStream in = new FileInputStream (Paths.get (rootDir, sourceDir, file.getName ()).toString ());
            IOUtils.copy (in, out);
            IOUtils.closeQuietly (in);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23325457_23325564_1_12
23325457_23325595_1_14
Title: Creating a getLast method for Linked Lists 
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    Node p = first;
    while (p.link != null) {
        p = p.link;
    }
    p.link = newNode;
}
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    if (first == null) {
        first = newNode;
    } else {
        Node lastNode = first;
        while (lastNode != null && lastNode.link != null) {
            lastNode = lastNode.link;
        }
        lastNode.link = newNode;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23325457_23325564_1_12
23325457_23325845_23_33
Title: Creating a getLast method for Linked Lists 
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    Node p = first;
    while (p.link != null) {
        p = p.link;
    }
    p.link = newNode;
}
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    if (last != null) last.link = newNode;

    last = newNode;
    if (first == null) first = newNode;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23325457_23325595_1_14
23325457_23325845_23_33
Title: Creating a getLast method for Linked Lists 
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    if (first == null) {
        first = newNode;
    } else {
        Node lastNode = first;
        while (lastNode != null && lastNode.link != null) {
            lastNode = lastNode.link;
        }
        lastNode.link = newNode;
    }
}
----------------------------------------

public void addLast (int q) {
    Node newNode = new Node ();
    newNode.x = q;
    newNode.link = null;
    if (last != null) last.link = newNode;

    last = newNode;
    if (first == null) first = newNode;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23330664_23330806_16_27
23330664_31824256_1_15
Title: I don't understand how lastIndexOf method works in java 
----------------------------------------

public static int lastIndexOf (int element) {
    int index = 0;
    int found = - 1;
    List < Integer > current = list;
    while (index < current.size ()) {
        if (current.get (index) == element) {
            found = index;
        }
        index ++;
    }
    return found;
}
----------------------------------------

public int lastIndexOf (int value) {
    int index = - 1;
    int size = size ();
    int count = 0;
    ListNode current = front;
    for (int i = 0;
    i < size; i ++) {
        int indexValue = current.data;
        if (value == current.data) {
            index = count;
        }
        count ++;
        current = current.next;
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23331507_23331704_1_17
23331507_23331730_1_14
Title: Add node to end of Linked List 
----------------------------------------

public void addLast (int d) {
    Node newLast = new Node ();
    if (first == null) {
        newLast.x = d;
        first = newLast;
        return;
    }
    Node curr = first;
    while (curr.link != null) {
        curr = curr.link;
    }
    newLast.x = d;
    curr.link = newLast;
}
----------------------------------------

public void addLast (int d) {
    Node last = new Node ();
    last.x = d;
    Node node = first;
    if (first == null) {
        first = last;
    } else {
        while (node.link != null) {
            node = node.link;
        }
        node.link = last;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23350956_23351778_1_16
23350956_23353661_1_21
Title: DefaultTableModel data moves from previously edited cell 
----------------------------------------

public void setValueAt (Object value, int row, int column) {
    switch (column) {
        case 1 :
            basketItems.get (row).setBrand ((String) value);
        case 2 :
            basketItems.get (row).setModel ((String) value);
        case 3 :
            basketItems.get (row).setPrice ((double) value);
        case 4 :
            basketItems.get (row).setQuantity (Integer.parseInt ((String) value));
        case 5 :
            basketItems.get (row).setTotalPrice (Double.parseDouble ((String) value));
    }
}
----------------------------------------

public void setValueAt (Object value, int row, int column) {
    switch (column) {
        case 0 :
            basketItems.get (row).setBrand ((String) value);
            break;
        case 1 :
            basketItems.get (row).setModel ((String) value);
            break;
        case 2 :
            basketItems.get (row).setPrice ((double) value);
            break;
        case 3 :
            basketItems.get (row).setQuantity (Integer.parseInt ((String) value));
            break;
        case 4 :
            basketItems.get (row).setTotalPrice (Double.parseDouble ((String) value));
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23353149_23353389_2_21
23353149_23353531_7_38
Title: How to make a loop to center a string? 
----------------------------------------

public static void main (String [] args) {
    String st = "Photograph";
    int length = st.length () + 4;
    for (int i = 0;
    i < 9; i ++) {
        if (i == 0 || i == 8) {
            printForLength ("*", length);
            System.out.println ();
        } else if (i % 2 == 0) {
            if (i == 4) {
                System.out.println ("* " + st + " *");
            } else {
                System.out.print ("*");
                printForLength (" ", length - 2);
                System.out.print ("*");
                System.out.println ();
            }
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    out.print ("Enter a string: ");
    String word = input.nextLine ();
    input.close ();
    out.print ("\n\n");
    int top = word.length () + 4 + 2;
    while (top != 0) out.printf ("*", top --);

    out.printf ("\n*  %" + word.length () + "s  *\n", " ");
    out.printf ("*  %s  *", word);
    out.printf ("\n*  %" + word.length () + "s  *\n", " ");
    int bot = word.length () + 6;
    while (bot != 0) out.printf ("*", bot --);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23363147_23363837_4_39
23363147_23383953_4_40
Title: MySQL exception com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure 
----------------------------------------

public static void main (String args []) throws Exception {
    DBConnection1 con = new DBConnection1 ();
    DBConnection con1 = new DBConnection ();
    Connection conn = null, conn1 = null;
    conn = con.getConnection ();
    conn1 = con1.getConnection ();
    Statement st = null;
    ResultSet rs = null, rs1 = null;
    st = conn.createStatement ();
    st.setFetchSize (Integer.MIN_VALUE);
    String query = "SELECT name FROM emp";
    rs = st.executeQuery (query);
    String name = "";
    StringBuffer newQuery = new StringBuffer ("SELECT Name FROM Employee WHERE");
    int count = 0;
    long nameCount = 0L;
    while (rs.next ()) {
        nameCount ++;
        title = rs.getString ("name");
        newQuery.append (" Name='" + title + "' or");
    }
    if (nameCount > 0) {
        newQuery = newQuery.subString (newQuery.length () - 3);
        rs1 = conn1.createStatement.executeQuery (newQuery);
        while (rs1.next ()) {
            count ++;
            if (count % 100 == 0) System.out.println (count);

        }
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    DBConnection1 con = new DBConnection1 ();
    DBConnection con1 = new DBConnection ();
    Connection conn = null, conn1 = null;
    conn = con.getConnection ();
    conn1 = con1.getConnection ();
    Statement st = null;
    PreparedStatement pst = null;
    ResultSet rs = null, rs1 = null;
    st = conn.createStatement ();
    st.setFetchSize (Integer.MIN_VALUE);
    String query = "SELECT name FROM emp";
    rs = st.executeQuery (query);
    String title = "", query1 = "";
    StringBuffer newQuery = new StringBuffer ("SELECT Name FROM Employee WHERE ");
    int count = 0;
    long nameCount = 0L;
    while (rs.next ()) {
        nameCount ++;
        title = rs.getString ("name");
        query1 = "Name=? or";
        pst = conn1.prepareStatement (query1);
        pst.setString (1, title);
        newQuery.append (pst.toString ().substring (pst.toString ().indexOf ('N'), pst.toString ().length ()) + " ");
    }
    if (nameCount > 0) {
        String Query = newQuery.toString ().substring (0, newQuery.toString ().length () - 3);
        rs1 = conn1.createStatement ().executeQuery (Query);
        while (rs1.next ()) {
            count ++;
            if (count % 50 == 0) System.out.println (count);

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23373862_23374025_5_19
23373862_23374098_1_14
Title: How to Test and mock an recursive method? 
----------------------------------------

public Object getColumnValue (ReportRow row, String columnId, Vector errors) {
    if (HSBC_PAYREC.equals (columnId)) {
        String s = (String) indirectGetColumnValue (row, "Pay/Rcv", errors);
        if (s != null) {
            if (s.equals ("Pay")) {
                return "Receive";
            }
            if (s.equals ("Receive")) {
                return "Pay";
            }
        }
        return "";
    }
}
----------------------------------------

public Object getColumnValue (ReportRow row, String columnId, Vector errors) {
    if (HSBC_PAYREC.equals (columnId)) {
        String s = (String) getColumnValueRecursively (row, "Pay/Rcv", errors);
        if (s != null) {
            if (s.equals ("Pay")) {
                return "Receive";
            }
            if (s.equals ("Receive")) {
                return "Pay";
            }
            return "";
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2338402_4583970_1_19
2338402_5005823_1_23
Title: faster implementation of sum ( for Codility test ) 
----------------------------------------

int equi (int [] A) {
    if (A == null) return - 1;

    long sum0 = 0, sum1 = 0;
    for (int i = 0;
    i < A.Length; i ++) sum0 += A [i];

    for (int i = 0;
    i < A.Length; i ++) {
        sum0 -= A [i];
        if (i > 0) {
            sum1 += A [i - 1];
        }
        if (sum1 == sum0) return i;

    }
    return - 1;
}
----------------------------------------

private static ArrayList equi (int [] A) {
    ArrayList answer = new ArrayList ();
    if ((answer.Count == null)) {
        answer.Add (- 1);
        return answer;
    }
    long sum0 = 0, sum1 = 0;
    for (int i = 0;
    i < A.Length; i ++) sum0 += A [i];

    for (int i = 0;
    i < A.Length; i ++) {
        sum0 -= A [i];
        if (i > 0) {
            sum1 += A [i - 1];
        }
        if (sum1 == sum0) answer.Add (i);

    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23384866_23385028_5_16
23384866_23385318_13_24
Title: Switching between XML pages on button click 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    mActivity = this;
    Button btnHome = (Button) findViewById (R.id.btnHome);
    btnHome.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (mActivity.getApplicationContext (), Checklist.class);
            mActivity.startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button btnHome = (Button) findViewById (R.id.btnHome);
    btnHome.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            Intent myIntent = new Intent (view.getContext (), Checklist.class);
            startActivityForResult (myIntent, 0);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23391342_23391512_1_10
23391342_23391623_1_10
Title: filling a two dimentional array with a for loop 
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    for (int i = blastTable.length;
    i > 0; i --) {
        for (int j = blastTable.length;
        j > 0; j --) {
            System.out.println (blastTable [i] [j]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    for (int i = 0;
    i < blastTable.length; i ++) {
        for (int j = 0;
        j < blastTable [i].length; j ++) {
            System.out.println (blastTable [i] [j]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23391342_23391512_1_10
23391342_23412809_1_18
Title: filling a two dimentional array with a for loop 
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    for (int i = blastTable.length;
    i > 0; i --) {
        for (int j = blastTable.length;
        j > 0; j --) {
            System.out.println (blastTable [i] [j]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    int counter = 32;
    for (int i = 0;
    i < blastTable.length; i ++) {
        for (int j = 0;
        j < blastTable [i].length; j ++) {
            blastTable [i] [j] = counter;
            counter --;
            System.out.print (blastTable [i] [j] + " ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23391342_23391623_1_10
23391342_23412809_1_18
Title: filling a two dimentional array with a for loop 
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    for (int i = 0;
    i < blastTable.length; i ++) {
        for (int j = 0;
        j < blastTable [i].length; j ++) {
            System.out.println (blastTable [i] [j]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] [] blastTable = new int [8] [8];
    int counter = 32;
    for (int i = 0;
    i < blastTable.length; i ++) {
        for (int j = 0;
        j < blastTable [i].length; j ++) {
            blastTable [i] [j] = counter;
            counter --;
            System.out.print (blastTable [i] [j] + " ");
        }
        System.out.print ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23397582_23397738_1_11
23397582_23397806_6_19
Title: """paintComponent()"" repaint" 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    g.setColor (Color.BLUE);
    if (drawFiguresX) {
        g.drawRect (50, 50, 50, 50);
        g.drawOval (60, 60, 60, 60);
    } else {
        g.drawOval (10, 10, 10, 10);
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (paintTheFirstThing) {
        g.setColor (Color.BLUE);
        g.drawRect (50, 50, 50, 50);
        g.drawOval (60, 60, 60, 60);
    } else {
        g.drawOval (10, 10, 10, 10)
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23400395_23400448_12_28
23400395_23400565_3_24
Title: how to call a bubble sort in java 
----------------------------------------

public double [] bubbleSort (double [] array) {
    double temp;
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 1;
        j < (array.length - i); j ++) {
            if (array [j - 1] >= array [j]) {
                temp = array [j - 1];
                array [j - 1] = array [j];
                array [j] = temp;
            }
        }
    }
    return array;
}
----------------------------------------

public void bubbleSort (int value1, int value2, int value3, int value4, int value5, int value6) {
    double [] r1Array = {value1, value2, value3, value4, value5, value6};
    double temp;
    for (int i = 0;
    i < r1Array.length; i ++) {
        for (int j = 1;
        j < (r1Array.length - i); j ++) {
            if (r1Array [j - 1] >= r1Array [j]) {
                temp = r1Array [j - 1];
                r1Array [j - 1] = r1Array [j];
                r1Array [j] = temp;
            }
        }
    }
    double totalR1 = (r1Array [1] + r1Array [2] + r1Array [3] + r1Array [4]) / 4;
    String stringTotalR1 = Double.toString (totalR1);
    lblTotalRun1.setText (stringTotalR1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23405706_23406074_8_39
23405706_23406204_2_28
Title: How to create a multidimensional Array to take input from .txt file 
----------------------------------------

public static void main (String args []) throws IOException {
    BufferedReader readFromFile = new BufferedReader (new FileReader ("test.txt"));
    int count = 0;
    String [] [] entry = new String [100] [3];
    String line = readFromFile.readLine ();
    while (line != null) {
        String [] temp = line.split (" ");
        for (int i = 0;
        i < temp.length; i ++) {
            entry [count] [i] = temp [i];
        }
        line = readFromFile.readLine ();
        count ++;
    }
    readFromFile.close ();
    for (int j = 0;
    j < entry.length; j ++) {
        for (int k = 0;
        k < entry [0].length; k ++) {
            System.out.print (entry [j] [k] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String args []) throws FileNotFoundException {
    String file = ("lab4b2.txt");
    Scanner scan = new Scanner (new FileReader (file));
    String [] [] entries = new String [100] [3];
    int i = 0;
    while (scan.hasNextLine ()) {
        entries [i] = scan.nextLine ().split ("\t");
        i ++;
    }
    for (int row = 0;
    row < entries.length; row ++) {
        for (int col = 0;
        col < entries [0].length; col ++) {
            if (entries [row] [col] != null) {
                System.out.print (entries [row] [col] + " ");
            }
        }
        if (entries [row] [0] != null) {
            System.out.print ("\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23414150_40976811_12_26
23414150_40976811_28_38
Title: How to find broken links using Selenium WebDriver with Java 
----------------------------------------

public static List < String > getBrokenURLs (WebDriver driver, String appURL, int depth, List < String > links) {
    {
        driver.navigate ().to (appURL);
        System.out.println ("Depth is: " + depth);
        while (depth > 0) {
            List < WebElement > linkElems = driver.findElements (By.tagName ("a"));
            for (WebElement linkElement : linkElems) if (! links.contains (linkElement)) links.add (linkElement.getAttribute ("href"));

            for (String link : links) getBrokenURLs (driver, link, -- depth, links);

        }
    } return getBrokenURLs (driver, links, new ArrayList < String > ());
}
----------------------------------------

public static List < String > getBrokenURLs (WebDriver driver, List < String > links, List < String > brokenLinks) {
    {
        for (String link : brokenLinks) {
            driver.navigate ().to (link);
            if (driver.getTitle ().contains ("404 Page Not Found")) {
                brokenLinks.add (link);
            }
        }
    } return brokenLinks;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23417786_23419824_150_168
23417786_23419824_38_79
Title: Rotating multiple images causing flickering. Java Graphics2D 
----------------------------------------

public void run () {
    long beforeTime, timeDiff, sleep;
    beforeTime = System.currentTimeMillis ();
    while (true) {
        cycle ();
        repaint ();
        timeDiff = System.currentTimeMillis () - beforeTime;
        sleep = DELAY - timeDiff;
        if (sleep < 0) {
            sleep = 2;
        }
        try {
            Thread.sleep (sleep);
        } catch (InterruptedException e) {
            System.out.println ("interrupted");
        }
        beforeTime = System.currentTimeMillis ();
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    try {
        zombie = ImageIO.read (getClass ().getResource ("/Zombie.png"));
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
    final ZombiePane zombiePane = new ZombiePane ();
    final JSlider slider = new JSlider (1, 10000);
    slider.setMajorTickSpacing (1000);
    slider.setMinorTickSpacing (100);
    slider.setPaintTicks (true);
    slider.addChangeListener (new ChangeListener () {
        @Override
        public void stateChanged (ChangeEvent e) {
            JSlider slider = (JSlider) e.getSource ();
            zombiePane.setZombies (slider.getValue ());
        }}

    );
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (zombiePane);
    frame.add (slider, BorderLayout.SOUTH);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            slider.setValue (10000);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23419281_23419344_8_16
23419281_23419538_1_11
Title: boolean method with array argument 
----------------------------------------

public static boolean isDecreasing (int [] numbers) {
    for (int i = 0;
    i < numbers.Length; i ++) {
        if (i == 0) continue;

        if (numbers [i - 1] >= numbers [i]) return false;

    }
    return true;
}
----------------------------------------

public static boolean isDecreasing (int [] numbers) {
    int first = numbers [0];
    for (int i = 1;
    i < numbers.length; i ++) {
        if (first <= numbers [i]) {
            return false;
        }
        first = numbers [i];
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23426465_23426702_10_33
23426465_23426721_2_29
Title: Fixing my class name & one method in Java 
----------------------------------------

private void run () {
    Scanner console = new Scanner (System.in);
    Store store1 = new Store ();
    do {
        System.out.println ("Enter product data (0), Show product data (1), Show product strategy (2), Exit program (9).");
        option = console.nextInt ();
        switch (option) {
            case 0 :
                enterData (console);
                break;
            case 1 :
                break;
            case 2 :
                break;
            case 9 :
                System.out.println ("You chose to exit the program.");
                break;
            default :
                System.out.println ("Please choose a valid option.");
        }
    } while (option != 9);
}
----------------------------------------

private void run () {
    Scanner console = new Scanner (System.in);
    Store store1 = new Store ();
    int demandRate, option, end;
    double setupCost, unitCost, inventoryCost;
    double sellingPrice, optimalOrder;
    String name;
    do {
        System.out.println ("Enter product data (0), Show product data (1), Show product strategy (2), Exit program (9).");
        option = console.nextInt ();
        switch (option) {
            case 0 :
                enterData ();
                break;
            case 1 :
                break;
            case 2 :
                break;
            case 9 :
                System.out.println ("You chose to exit the program.");
                break;
            default :
                System.out.println ("Please choose a valid option.");
        }
    } while (option != 9);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23426465_23426702_35_79
23426465_23426721_30_79
Title: Fixing my class name & one method in Java 
----------------------------------------

private void enterData (Scanner console) {
    System.out.println ("Product name between 3 & 10 characters long: ");
    name = console.nextLine ();
    while ((name.length () < 3) || (name.length () > 10)) {
        System.out.println ("Please put in a name between 3 & 10 characters long.");
        name = console.nextLine ();
    }
    name = name.toLowerCase ();
    System.out.println ("Demand rate: ");
    demandRate = console.nextInt ();
    while (demandRate <= 0) {
        System.out.println ("Please put in a positive integer.");
        demandRate = console.nextInt ();
    }
    System.out.println ("Setup cost: ");
    setupCost = console.nextDouble ();
    while (setupCost <= 0) {
        System.out.println ("Please put in a positive number.");
        setupCost = console.nextInt ();
    }
    System.out.println ("Unit cost: ");
    unitCost = console.nextDouble ();
    while (unitCost <= 0) {
        System.out.println ("Please put in a positive number.");
        unitCost = console.nextInt ();
    }
    System.out.println ("Inventory cost: ");
    inventoryCost = console.nextDouble ();
    while (inventoryCost <= 0) {
        System.out.println ("Please put in a positive number.");
        inventoryCost = console.nextInt ();
    }
    System.out.println ("Selling price: ");
    sellingPrice = console.nextDouble ();
    while (sellingPrice <= 0) {
        System.out.println ("Please put in a positive integer.");
        sellingPrice = console.nextInt ();
    }
}
----------------------------------------

private static void enterData () {
    int demandRate, option, end;
    double setupCost, unitCost, inventoryCost;
    double sellingPrice, optimalOrder;
    Scanner console = new Scanner (System.in);
    System.out.println ("Product name between 3 & 10 characters long: ");
    String name = console.nextLine ();
    while ((name.length () < 3) || (name.length () > 10)) {
        System.out.println ("Please put in a name between 3 & 10 characters long.");
        name = console.nextLine ();
    }
    name = name.toLowerCase ();
    System.out.println ("Demand rate: ");
    demandRate = console.nextInt ();
    while (demandRate <= 0) {
        System.out.println ("Please put in a positive integer.");
        demandRate = console.nextInt ();
    }
    System.out.println ("Setup cost: ");
    setupCost = console.nextDouble ();
    while (setupCost <= 0) {
        System.out.println ("Please put in a positive number.");
        setupCost = console.nextInt ();
    }
    System.out.println ("Unit cost: ");
    unitCost = console.nextDouble ();
    while (unitCost <= 0) {
        System.out.println ("Please put in a positive number.");
        unitCost = console.nextInt ();
    }
    System.out.println ("Inventory cost: ");
    inventoryCost = console.nextDouble ();
    while (inventoryCost <= 0) {
        System.out.println ("Please put in a positive number.");
        inventoryCost = console.nextInt ();
    }
    System.out.println ("Selling price: ");
    sellingPrice = console.nextDouble ();
    while (sellingPrice <= 0) {
        System.out.println ("Please put in a positive integer.");
        sellingPrice = console.nextInt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23435985_23436260_4_19
23435985_23497306_63_93
Title: Random Tic-Tac-Toe image flipping 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Object src = e.getSource ();
    for (int i = 0;
    i < 3; i ++) {
        for (int j = 0;
        j < 3; j ++) {
            if (src == labels [i] [j] && labels [i] [j].getText () == "") {
                labels [i] [j].setText ("X");
            }
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    for (int r = 0;
    r < 3; r ++) {
        for (int c = 0;
        c < 3; c ++) {
            if (e.getSource () == labels [r] [c]) {
                value ++;
                value %= 3;
                switch (value) {
                    case 0 :
                        labels [r] [c].setIcon (n);
                        break;
                    case 1 :
                        labels [r] [c].setIcon (x);
                        break;
                    case 2 :
                        labels [r] [c].setIcon (o);
                        break;
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23440765_23440810_6_33
23440765_23441162_4_25
Title: Android - Start App Upon Phone Call 
----------------------------------------

public void onReceive (Context context, Intent intent) {
    if (intent.getAction ().equals (Intent.ACTION_NEW_OUTGOING_CALL)) {
        incomingFlag = false;
        String phoneNumber = intent.getStringExtra (Intent.EXTRA_PHONE_NUMBER);
        Log.i (TAG, "call OUT:" + phoneNumber);
    } else {
        TelephonyManager tm = (TelephonyManager) context.getSystemService (Service.TELEPHONY_SERVICE);
        switch (tm.getCallState ()) {
            case TelephonyManager.CALL_STATE_RINGING :
                incomingFlag = true;
                incoming_number = intent.getStringExtra ("incoming_number");
                Log.i (TAG, "RINGING :" + incoming_number);
                break;
            case TelephonyManager.CALL_STATE_OFFHOOK :
                if (incomingFlag) {
                    Log.i (TAG, "incoming ACCEPT :" + incoming_number);
                }
                break;
            case TelephonyManager.CALL_STATE_IDLE :
                if (incomingFlag) {
                    Log.i (TAG, "incoming IDLE");
                }
                break;
        }
    }
}
----------------------------------------

public void onReceive (Context context, Intent intent) {
    String state = intent.getStringExtra (TelephonyManager.EXTRA_STATE);
    final Context cont = context;
    final Intent in = intent;
    if (state.equals (TelephonyManager.EXTRA_STATE_RINGING)) {
        new Handler ().postDelayed (new Runnable () {
            @Override
            public void run () {
                Intent i = new Intent (cont, MainActivity.class);
                i.putExtras (in);
                i.addCategory (Intent.CATEGORY_LAUNCHER);
                i.addFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
                i.addFlags (Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
                cont.startActivity (i);
            }}

        , 1000);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23440980_23441300_1_28
23440980_23442447_93_114
Title: How show specific part of an image in javafx 
----------------------------------------

@Override
public void start (Stage stage) {
    Group root = new Group ();
    Image image = new Image (this.getClass ().getResource ("your.png").toExternalForm ());
    final int numberOfFrames = 6;
    double frameWidth = image.getWidth () / numberOfFrames;
    Scene scene = new Scene (root, frameWidth, image.getHeight ());
    final ImageView view = new ImageView (image);
    Rectangle mask = new Rectangle (frameWidth, image.getHeight ());
    view.setClip (mask);
    Timeline timeline = new Timeline ();
    for (int i = 0;
    i <= numberOfFrames; i ++) {
        KeyFrame kf = new KeyFrame (Duration.seconds (i), new KeyValue (view.xProperty (), - frameWidth * i, Interpolator.DISCRETE));
        timeline.getKeyFrames ().add (kf);
    }
    timeline.setCycleCount (Timeline.INDEFINITE);
    timeline.play ();
    root.getChildren ().add (view);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    Image objectImage = new Image ("http://icons.iconarchive.com/icons/iconka/meow/96/cat-box-icon.png");
    Image explosionImage = new Image ("http://i.stack.imgur.com/QMqbQ.png");
    TilePane tiles = new TilePane ();
    tiles.setPrefColumns (4);
    for (int i = 0;
    i < 16; i ++) {
        tiles.getChildren ().add (new ExplodableItem (objectImage, explosionImage, NUM_CELLS_PER_EXPLOSION));
    }
    tiles.setMinSize (Control.USE_PREF_SIZE, Control.USE_PREF_SIZE);
    stage.setTitle ("Cat Whack - Click a cat to whack it!");
    stage.setScene (new Scene (tiles));
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23446477_23446559_1_12
23446477_23446615_1_12
Title: Why does Java compiler refuse to recognize System.exit() as a procedure termination? 
----------------------------------------

public static int readInteger (ArrayList < String > listLines, int iLineNumber0) {
    int value = 0;
    try {
        value = Integer.parseInt (listLines.get (0));
    } catch (Throwable t) {
        System.err.println ("error reading line: " + iLineNumber0 + ": " + t);
        System.exit (- 1);
    }
    return value;
}
----------------------------------------

public static int readInteger (ArrayList < String > listLines, int iLineNumber0) {
    int value = 0;
    try {
        value = Integer.parseInt (listLines.get (0));
    } catch (Throwable t) {
        System.err.println ("error reading line: " + iLineNumber0 + ": " + t);
        System.exit (- 1);
    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23449008_23449039_1_13
23449008_23449433_33_56
Title: Java Menu going into an infinite loop 
----------------------------------------

public static int displayMenu () {
    int selection = keyboard.nextInt ();
    while (selection < 1 || selection > 5) {
        System.out.println ("that is an invalid select.");
        System.out.println (" Enter 1, 2, 3, 4, or 5.");
        selection = keyboard.nextInt ();
    }
    return selection;
}
----------------------------------------

private static int displayMenu () {
    int sel;
    Scanner sc = new Scanner (System.in);
    System.out.println (" select a language and i will say good morning");
    System.out.println ("1. English.");
    System.out.println ("2. Italian.");
    System.out.println ("3. Spanish.");
    System.out.println ("4. German.");
    System.out.println ("5. End the Program.");
    System.out.println ("Enter your selection");
    sel = sc.nextInt ();
    while (sel < 1 || sel > 5) {
        System.out.println ("that is an invalid select.");
        System.out.println (" Enter 1, 2, 3, 4, or 5.");
        sel = sc.nextInt ();
    }
    return sel;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23449621_23449674_1_14
23449621_48793455_37_67
Title: Java Inverted Index program 
----------------------------------------

public static void printAllCounts (TreeMap < String, Integer > frequencyData, Map < String, Set < String > > filenames) {
    System.out.println ("-----------------------------------------------");
    System.out.println ("    Occurrences    Word");
    for (String word : frequencyData.keySet ()) {
        System.out.printf ("%15d    %s\n", frequencyData.get (word), word);
        for (String filename : filenames.get (word)) {
            System.out.println (filename);
        }
    }
    System.out.println ("-----------------------------------------------");
}
----------------------------------------

public static void printAllCounts (Map < String, Integer > countByWords, TreeMap < String, Integer > frequencyData, Map < String, Set < String > > filenames) {
    System.out.println ("-----------------------------------------------");
    System.out.print ("Search for a word: ");
    String worde;
    int result = 0;
    Scanner input = new Scanner (System.in);
    worde = input.nextLine ();
    if (! filenames.containsKey (worde)) {
        System.out.println ("The word does not exist");
    } else {
        for (String filename : filenames.get (worde)) {
            System.out.println (filename);
            System.out.println (countByWords.get (worde));
        }
    }
    System.out.println ("\n-----------------------------------------------");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23465798_23465863_1_22
23465798_23465971_1_27
Title: java differ array into specific value 
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int j = 0, k = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
            j ++;
        } else {
            C [k] = A [i];
            k ++;
        }
    }
    for (int i = 0;
    i < j; i ++) {
        System.out.println ("B = " + B [i]);
    }
    for (int i = 0;
    i < k; i ++) {
        System.out.println ("C = " + C [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23465798_23465863_1_22
23465798_23467628_2_27
Title: java differ array into specific value 
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int countb = 0;
    int countc = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [countb ++] = A [i];
        } else {
            C [countc ++] = A [i];
        }
    }
    System.out.println (Arrays.toString (B));
    System.out.println (Arrays.toString (C));
}
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int count = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            count ++;
        }
    }
    int [] B = new int [count];
    int [] C = new int [A.length - count];
    for (int i = 0, j = 0, k = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
            System.out.println ("B = " + B [j]);
            j ++;
        } else {
            C [k] = A [i];
            System.out.println ("C = " + C [k]);
            k ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23465798_23465971_1_27
23465798_23467628_2_27
Title: java differ array into specific value 
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int [] B = new int [A.length];
    int [] C = new int [A.length];
    int t = 4;
    int j = 0, k = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
            j ++;
        } else {
            C [k] = A [i];
            k ++;
        }
    }
    for (int i = 0;
    i < j; i ++) {
        System.out.println ("B = " + B [i]);
    }
    for (int i = 0;
    i < k; i ++) {
        System.out.println ("C = " + C [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] A = {9, 5, 4, 3, 2, 1, 34, 53};
    int t = 4;
    int count = 0;
    for (int i = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            count ++;
        }
    }
    int [] B = new int [count];
    int [] C = new int [A.length - count];
    for (int i = 0, j = 0, k = 0;
    i < A.length; i ++) {
        if (A [i] <= t) {
            B [j] = A [i];
            System.out.println ("B = " + B [j]);
            j ++;
        } else {
            C [k] = A [i];
            System.out.println ("C = " + C [k]);
            k ++;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23471028_23533807_16_48
23471028_23533807_9_54
Title: Making a stopwatch using timer for javafx 
----------------------------------------

public void run () {
    if (timersec == 60) {
        timersec = 0;
        timermin ++;
    }
    if (timermin == 60) {
        timermin = 0;
        timerhr ++;
    }
    String seconds = Integer.toString (timersec);
    String minutes = Integer.toString (timermin);
    String hours = Integer.toString (timerhr);
    if (timersec <= 9) {
        seconds = "0" + Integer.toString (timersec);
    }
    if (timermin <= 9) {
        minutes = "0" + Integer.toString (timermin);
    }
    if (timerhr <= 9) {
        hours = "0" + Integer.toString (timerhr);
    }
    time.setText (hours + ":" + minutes + ":" + seconds);
    System.out.println (time.getText ());
}
----------------------------------------

public void run () {
    System.out.println ("working" + x);
    timersec ++;
    Platform.runLater (new Runnable () {
        public void run () {
            if (timersec == 60) {
                timersec = 0;
                timermin ++;
            }
            if (timermin == 60) {
                timermin = 0;
                timerhr ++;
            }
            String seconds = Integer.toString (timersec);
            String minutes = Integer.toString (timermin);
            String hours = Integer.toString (timerhr);
            if (timersec <= 9) {
                seconds = "0" + Integer.toString (timersec);
            }
            if (timermin <= 9) {
                minutes = "0" + Integer.toString (timermin);
            }
            if (timerhr <= 9) {
                hours = "0" + Integer.toString (timerhr);
            }
            time.setText (hours + ":" + minutes + ":" + seconds);
            System.out.println (time.getText ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23482028_23482123_27_67
23482028_23482188_6_21
Title: How to ask user for an input file name and output file name java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = null;
    PrintWriter outputFile = null;
    DecimalFormat decimalFormat = new DecimalFormat ();
    decimalFormat.setMinimumFractionDigits (2);
    try {
        File file = new File ("portlandvip2.txt");
        scanner = new Scanner (file);
        outputFile = new PrintWriter ("portland2out.txt");
        while (scanner.hasNext ()) {
            String line = scanner.nextLine ();
            String [] entriesOnLine = line.split (" ");
            if (entriesOnLine.length == 2) {
                ticketTypeToPrice.put (entriesOnLine [0], Integer.parseInt (entriesOnLine [1]));
                StringBuilder sb = new StringBuilder ();
                sb.append (entriesOnLine [0]).append (CURRENCY_SYMBOL).append (decimalFormat.format (Integer.parseInt (entriesOnLine [1])));
                outputFile.println (sb.toString ());
            } else if (entriesOnLine.length == 4) {
                int numberOfTickest = Integer.parseInt (entriesOnLine [2]);
                int ticketPrice = ticketTypeToPrice.get (entriesOnLine [3]);
                int totalPrice = numberOfTickest * ticketPrice;
                StringBuilder sb = new StringBuilder ();
                sb.append (entriesOnLine [0]).append (SPACE).append (entriesOnLine [1]).append (CURRENCY_SYMBOL).append (decimalFormat.format (totalPrice));
                outputFile.println (sb.toString ());
            }

        }
    } catch (IOException e) {
        System.out.println ("exception:" + e);
    } finally {
        scanner.close ();
        outputFile.close ();
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter filename here : ");
    try {
        BufferedReader bufferRead = new BufferedReader (new InputStreamReader (System.in));
        String s = bufferRead.readLine ();
        System.out.println (s);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23486621_23487173_6_42
23486621_23487270_1_46
Title: Reading in information into separate arrays 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    int size;
    File file = new File ("names.txt");
    FileReader fr = new FileReader (file);
    String s;
    LineNumberReader lnr = new LineNumberReader (new FileReader (file));
    lnr.skip (Long.MAX_VALUE);
    size = lnr.getLineNumber () + 1;
    lnr.close ();
    int [] rank = new int [size];
    String [] name = new String [size];
    String [] country = new String [size];
    try {
        BufferedReader br = new BufferedReader (fr);
        int i = 0;
        while ((s = br.readLine ()) != null) {
            String temp = s;
            if (temp.contains (":")) {
                String [] splitres = temp.split (":");
                String sub = splitres [0];
                rank [i] = Integer.parseInt (sub.substring (0, sub.indexOf (" ")));
                name [i] = sub.substring (sub.indexOf (" "), sub.length () - 1);
                country [i] = splitres [1];
            }
            i ++;
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    ArrayList < Integer > ranks = new ArrayList < Integer > ();
    ArrayList < String > names = new ArrayList < String > ();
    ArrayList < String > countries = new ArrayList < String > ();
    Scanner input = new Scanner (new File ("names.txt"));
    while (input.hasNext ()) {
        String wholeLine = input.nextLine ();
        int spaceIndex = wholeLine.indexOf (" ");
        int rank;
        try {
            rank = Integer.parseInt (wholeLine.substring (0, spaceIndex));
        } catch (NumberFormatException e) {
            rank = - 1;
        }
        String [] tokens = wholeLine.substring (spaceIndex + 1).split (":");
        String name = tokens [0];
        String country = tokens [1];
        ranks.add (rank);
        names.add (name);
        countries.add (country);
    }
    String [] nameArr = names.toArray (new String [] {});
    String [] countryArr = countries.toArray (new String [] {});
    int [] rankArr = new int [ranks.size ()];
    for (int i = 0;
    i < ranks.size (); i ++) {
        rankArr [i] = ranks.get (i).intValue ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_23609035_3_61
23487381_31825089_2_21
Title: solve maximum product of three array elements without sorting 
----------------------------------------

int solution (int [] a) {
    int min1 = Integer.MAX_VALUE;
    int min2 = Integer.MAX_VALUE;
    int max1 = Integer.MIN_VALUE;
    int max2 = Integer.MIN_VALUE;
    int max3 = Integer.MIN_VALUE;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > max1) {
            max3 = max2;
            max2 = max1;
            max1 = a [i];
        } else if (a [i] > max2) {
            max3 = max2;
            max2 = a [i];
        } else if (a [i] > max3) {
            max3 = a [i];
        }

        if (a [i] < min1) {
            min2 = min1;
            min1 = a [i];
        } else if (a [i] < min2) {
            min2 = a [i];
        }

    }
    int prod1 = min1 * min2 * max1;
    int prod2 = max1 * max2 * max3;
    return prod1 > prod2 ? prod1 : prod2;
}
----------------------------------------

public int solution (int [] sortedArray) {
    Arrays.sort (sortedArray);
    int length = sortedArray.length;
    int P, Q, R;
    int maximumLeft = Integer.MIN_VALUE, maximumRight = Integer.MIN_VALUE;
    P = sortedArray [length - 3];
    Q = sortedArray [length - 2];
    R = sortedArray [length - 1];
    maximumRight = P * Q * R;
    P = sortedArray [0];
    Q = sortedArray [1];
    R = sortedArray [length - 1];
    maximumLeft = P * Q * R;
    return maximumRight > maximumLeft ? maximumRight : maximumLeft;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_23609035_3_61
23487381_46439228_10_33
Title: solve maximum product of three array elements without sorting 
----------------------------------------

int solution (int [] a) {
    int min1 = Integer.MAX_VALUE;
    int min2 = Integer.MAX_VALUE;
    int max1 = Integer.MIN_VALUE;
    int max2 = Integer.MIN_VALUE;
    int max3 = Integer.MIN_VALUE;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > max1) {
            max3 = max2;
            max2 = max1;
            max1 = a [i];
        } else if (a [i] > max2) {
            max3 = max2;
            max2 = a [i];
        } else if (a [i] > max3) {
            max3 = a [i];
        }

        if (a [i] < min1) {
            min2 = min1;
            min1 = a [i];
        } else if (a [i] < min2) {
            min2 = a [i];
        }

    }
    int prod1 = min1 * min2 * max1;
    int prod2 = max1 * max2 * max3;
    return prod1 > prod2 ? prod1 : prod2;
}
----------------------------------------

public static int solution (int [] A) {
    long p = 0, q = 0, r = 0, max1 = Integer.MAX_VALUE, max2 = Integer.MAX_VALUE, res = 0;
    Arrays.sort (A);
    A = rev (A);
    int start = 0, end = A.length;
    p = A [start];
    q = A [start + 1];
    r = A [start + 2];
    max1 = p * q * r;
    q = A [end - 1];
    r = A [end - 2];
    max2 = p * q * r;
    return (int) Math.max (max1, max2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_23609035_3_61
23487381_50289266_7_23
Title: solve maximum product of three array elements without sorting 
----------------------------------------

int solution (int [] a) {
    int min1 = Integer.MAX_VALUE;
    int min2 = Integer.MAX_VALUE;
    int max1 = Integer.MIN_VALUE;
    int max2 = Integer.MIN_VALUE;
    int max3 = Integer.MIN_VALUE;
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > max1) {
            max3 = max2;
            max2 = max1;
            max1 = a [i];
        } else if (a [i] > max2) {
            max3 = max2;
            max2 = a [i];
        } else if (a [i] > max3) {
            max3 = a [i];
        }

        if (a [i] < min1) {
            min2 = min1;
            min1 = a [i];
        } else if (a [i] < min2) {
            min2 = a [i];
        }

    }
    int prod1 = min1 * min2 * max1;
    int prod2 = max1 * max2 * max3;
    return prod1 > prod2 ? prod1 : prod2;
}
----------------------------------------

public int solution (int [] A) {
    Arrays.sort (A);
    int length = A.length;
    int max = 0;
    if (A [0] > 0 || A [length - 1] < 0) {
        max = (A [length - 1] * A [length - 2] * A [length - 3]);
        return max;
    } else {
        int lastMultiPlier = A [length - 1];
        if ((A [0] * A [1]) > (A [length - 2] * A [length - 3])) {
            max = A [0] * A [1] * lastMultiPlier;
        } else {
            max = A [length - 2] * A [length - 3] * lastMultiPlier;
        }
        return max;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_31825089_2_21
23487381_46439228_10_33
Title: solve maximum product of three array elements without sorting 
----------------------------------------

public int solution (int [] sortedArray) {
    Arrays.sort (sortedArray);
    int length = sortedArray.length;
    int P, Q, R;
    int maximumLeft = Integer.MIN_VALUE, maximumRight = Integer.MIN_VALUE;
    P = sortedArray [length - 3];
    Q = sortedArray [length - 2];
    R = sortedArray [length - 1];
    maximumRight = P * Q * R;
    P = sortedArray [0];
    Q = sortedArray [1];
    R = sortedArray [length - 1];
    maximumLeft = P * Q * R;
    return maximumRight > maximumLeft ? maximumRight : maximumLeft;
}
----------------------------------------

public static int solution (int [] A) {
    long p = 0, q = 0, r = 0, max1 = Integer.MAX_VALUE, max2 = Integer.MAX_VALUE, res = 0;
    Arrays.sort (A);
    A = rev (A);
    int start = 0, end = A.length;
    p = A [start];
    q = A [start + 1];
    r = A [start + 2];
    max1 = p * q * r;
    q = A [end - 1];
    r = A [end - 2];
    max2 = p * q * r;
    return (int) Math.max (max1, max2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_31825089_2_21
23487381_50289266_7_23
Title: solve maximum product of three array elements without sorting 
----------------------------------------

public int solution (int [] sortedArray) {
    Arrays.sort (sortedArray);
    int length = sortedArray.length;
    int P, Q, R;
    int maximumLeft = Integer.MIN_VALUE, maximumRight = Integer.MIN_VALUE;
    P = sortedArray [length - 3];
    Q = sortedArray [length - 2];
    R = sortedArray [length - 1];
    maximumRight = P * Q * R;
    P = sortedArray [0];
    Q = sortedArray [1];
    R = sortedArray [length - 1];
    maximumLeft = P * Q * R;
    return maximumRight > maximumLeft ? maximumRight : maximumLeft;
}
----------------------------------------

public int solution (int [] A) {
    Arrays.sort (A);
    int length = A.length;
    int max = 0;
    if (A [0] > 0 || A [length - 1] < 0) {
        max = (A [length - 1] * A [length - 2] * A [length - 3]);
        return max;
    } else {
        int lastMultiPlier = A [length - 1];
        if ((A [0] * A [1]) > (A [length - 2] * A [length - 3])) {
            max = A [0] * A [1] * lastMultiPlier;
        } else {
            max = A [length - 2] * A [length - 3] * lastMultiPlier;
        }
        return max;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23487381_46439228_10_33
23487381_50289266_7_23
Title: solve maximum product of three array elements without sorting 
----------------------------------------

public static int solution (int [] A) {
    long p = 0, q = 0, r = 0, max1 = Integer.MAX_VALUE, max2 = Integer.MAX_VALUE, res = 0;
    Arrays.sort (A);
    A = rev (A);
    int start = 0, end = A.length;
    p = A [start];
    q = A [start + 1];
    r = A [start + 2];
    max1 = p * q * r;
    q = A [end - 1];
    r = A [end - 2];
    max2 = p * q * r;
    return (int) Math.max (max1, max2);
}
----------------------------------------

public int solution (int [] A) {
    Arrays.sort (A);
    int length = A.length;
    int max = 0;
    if (A [0] > 0 || A [length - 1] < 0) {
        max = (A [length - 1] * A [length - 2] * A [length - 3]);
        return max;
    } else {
        int lastMultiPlier = A [length - 1];
        if ((A [0] * A [1]) > (A [length - 2] * A [length - 3])) {
            max = A [0] * A [1] * lastMultiPlier;
        } else {
            max = A [length - 2] * A [length - 3] * lastMultiPlier;
        }
        return max;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23503921_23504361_1_12
23503921_23504627_1_13
Title: Java Insertion Sort with an Array List of objects? 
----------------------------------------

public static void insertionSort (ArrayList < Card > array) {
    int i, j;
    for (i = 1; i < array.size (); i ++) {
        Card tmp = array.get (i);
        j = i;
        while ((j > 0) && (array.get (j - 1).value > tmp.value)) {
            array.set (j, array.get (j - 1));
            j --;
        }
        array.set (j, tmp);
    }
}
----------------------------------------

public static void insertionSort (ArrayList < Card > cards) {
    for (int i = 1;
    i < cards.size (); i ++) {
        int value = cards.get (i).value;
        j = i;
        for (j = i - 1; j >= 0; j --) {
            if (cards.get (j).value <= key.value) {
                break;
            }
        }
        cards.add (j, cards.remove (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23503921_23504420_1_21
23503921_23504627_1_13
Title: Java Insertion Sort with an Array List of objects? 
----------------------------------------

public static void insertionSort (ArrayList < Card > Array) {
    int i, j;
    for (i = 1; i < Array.size (); i ++) {
        Card key = new Card (0, "", "");
        key.value = Array.get (i).value;
        key.suit = Array.get (i).suit;
        key.faceValue = Array.get (i).faceValue;
        j = i;
        while ((j > 0) && (Array.get (j - 1).value > key.value)) {
            Array.set (j, Array.get (j - 1));
            j --;
        }
        Array.set (j, key);
    }
}
----------------------------------------

public static void insertionSort (ArrayList < Card > cards) {
    for (int i = 1;
    i < cards.size (); i ++) {
        int value = cards.get (i).value;
        j = i;
        for (j = i - 1; j >= 0; j --) {
            if (cards.get (j).value <= key.value) {
                break;
            }
        }
        cards.add (j, cards.remove (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23508278_23509066_82_111
23508278_23509072_52_83
Title: I need help on what to do next in trying to create a listview for android 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    LayoutInflater mInflater = LayoutInflater.from (MainActivity.this);
    final ViewHolder holder;
    if (convertView == null) {
        convertView = mInflater.inflate (R.layout.row, null);
        holder = new ViewHolder ();
        holder.imageView1 = (ImageView) convertView.findViewById (R.id.imageview1);
        holder.imageview2 = (ImageView) convertView.findViewById (R.id.imageview2);
        holder.tex1 = (TextView) convertView.findViewById (R.id.textview1);
        holder.tex2 = (TextView) convertView.findViewById (R.id.textview2);
        holder.tex3 = (TextView) convertView.findViewById (R.id.textview3);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    holder.imageview1.setImageResource (imageId [position]);
    holder.imageview2.setImageResource (arrow [position]);
    holder.txt1.setText (make [position]);
    holder.txt2.setText (price [position]);
    holder.txt3.setText (description [position]);
    return convertView;
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    ViewHolde holder = null;
    if (converView == null) {
        convertView = layoutInflater.inflate (R.layout.row, null);
        holder = new ViewHolder ();
        holder.iv = (ImageView) convertView.findViewById (R.id.imageview1);
        holder.ivArrow = (ImageView) convertView.findViewById (R.id.imageview2);
        holder.tvMake = (TextView) convertView.findViewById (R.id.textview1);
        holder.tvPrice = (TextView) convertView.findViewById (R.id.textview2);
        holder.tvDesc = (TextView) convertView.findViewById (R.id.textview3);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    holder.tvMake.setText (make [position]);
    holder.tvPrice.setText (price [position]);
    holder.tvDesc.setText (description [position]);
    holder.iv.setImageResource (imageId [position]);
    holder.ivArrow.setImageResource (arrow [position]);
    convertView.setTag (holder);
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23516236_23517543_35_66
23516236_23517543_45_57
Title: Setting on top dialog if Frame of Dialog in Java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    dialogOne = new JDialog (DialogFrameDemo.this, "Dialog one", false);
    JPanel dialogPanel = new JPanel ();
    dialogPanel.setLayout (new GridLayout (3, 1));
    JButton btnInDialogOne = new JButton ("Click to open another Dialog");
    btnInDialogOne.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            JDialog dialogTwo = new JDialog (dialogOne, "Dialog Two", true);
            JPanel dialogPanel = new JPanel ();
            dialogPanel.setLayout (new GridLayout (3, 1));
            dialogPanel.add (new JLabel ("Dialog Two"));
            dialogPanel.add (new JLabel ("Lable 21"));
            dialogPanel.add (new JLabel ("Lable 22"));
            dialogTwo.setContentPane (dialogPanel);
            dialogTwo.pack ();
            dialogTwo.setVisible (true);
            dialogTwo.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
        }}

    );
    dialogPanel.add (btnInDialogOne);
    dialogPanel.add (new JLabel ("Lable 11"));
    dialogPanel.add (new JLabel ("Lable 12"));
    dialogOne.setContentPane (dialogPanel);
    dialogOne.pack ();
    dialogOne.setVisible (true);
    dialogOne.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JDialog dialogTwo = new JDialog (dialogOne, "Dialog Two", true);
    JPanel dialogPanel = new JPanel ();
    dialogPanel.setLayout (new GridLayout (3, 1));
    dialogPanel.add (new JLabel ("Dialog Two"));
    dialogPanel.add (new JLabel ("Lable 21"));
    dialogPanel.add (new JLabel ("Lable 22"));
    dialogTwo.setContentPane (dialogPanel);
    dialogTwo.pack ();
    dialogTwo.setVisible (true);
    dialogTwo.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23520208_23520327_9_32
23520208_35295095_1_33
Title: How to create XML file with specific structure in Java 
----------------------------------------

public static void main (String [] args) {
    Customer customer = new Customer ();
    customer.setId (100);
    customer.setName ("mkyong");
    customer.setAge (29);
    try {
        File file = new File ("C:\\file.xml");
        JAXBContext jaxbContext = JAXBContext.newInstance (Customer.class);
        Marshaller jaxbMarshaller = jaxbContext.createMarshaller ();
        jaxbMarshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
        jaxbMarshaller.marshal (customer, file);
        jaxbMarshaller.marshal (customer, System.out);
    } catch (JAXBException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder docBuilder = docFactory.newDocumentBuilder ();
        Document doc = docBuilder.newDocument ();
        Element rootElement = doc.createElement ("CONFIGURATION");
        doc.appendChild (rootElement);
        Element browser = doc.createElement ("BROWSER");
        browser.appendChild (doc.createTextNode ("chrome"));
        rootElement.appendChild (browser);
        Element base = doc.createElement ("BASE");
        base.appendChild (doc.createTextNode ("http:fut"));
        rootElement.appendChild (base);
        Element employee = doc.createElement ("EMPLOYEE");
        rootElement.appendChild (employee);
        Element empName = doc.createElement ("EMP_NAME");
        empName.appendChild (doc.createTextNode ("Anhorn, Irene"));
        employee.appendChild (empName);
        Element actDate = doc.createElement ("ACT_DATE");
        actDate.appendChild (doc.createTextNode ("20131201"));
        employee.appendChild (actDate);
        TransformerFactory transformerFactory = TransformerFactory.newInstance ();
        Transformer transformer = transformerFactory.newTransformer ();
        DOMSource source = new DOMSource (doc);
        StreamResult result = new StreamResult (new File ("/Users/myXml/ScoreDetail.xml"));
        transformer.transform (source, result);
        System.out.println ("File saved!");
    } catch (ParserConfigurationException pce) {
        pce.printStackTrace ();
    } catch (TransformerException tfe) {
        tfe.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23521870_23535191_1_39
23521870_23554579_7_49
Title: A way define order of subscribers in RxJava? 
----------------------------------------

protected < T > Observable < T > wrapObservable (final Observable < T > original) {
    return Observable.create (new Observable.OnSubscribeFunc < T > () {
        @Override
        public Subscription onSubscribe (final Observer < ? super T > t1) {
            original.subscribe (new Observer < T > () {
                @Override
                public void onCompleted () {
                    t1.onCompleted ();
                    uiThreadHandler.post (new Runnable () {
                        @Override
                        public void run () {
                            counter.decrementAndGet ();
                            notifyIdle ();
                        }}

                    );
                }@Override
                public void onError (Throwable e) {
                    t1.onError (e);
                    uiThreadHandler.post (new Runnable () {
                        @Override
                        public void run () {
                            counter.decrementAndGet ();
                            notifyIdle ();
                        }}

                    );
                }@Override
                public void onNext (T args) {
                    t1.onNext (args);
                }}

            );
            return Subscriptions.empty ();
        }}

    );
}
----------------------------------------

protected static < T > Observable < T > wrapObservable (final Observable < T > original) {
    synchronized (list) {
        list.add (original);
    }
    return Observable.create (new Observable.OnSubscribe < Void > () {
        @Override
        public void call (Subscriber < ? super Void > subscriber) {
            synchronized (list) {
                counter ++;
                if (! list.contains (original)) {
                    subscriber.onError (new Exception ("You can only subscribe once!"));
                    return;
                }
                list.remove (original);
            }
            try {
                Thread.sleep (3000);
            } catch (InterruptedException ignored) {
            }
            subscriber.onCompleted ();
        }}

    ).flatMap (new Func1 < Void, Observable < ? extends T > > () {
        @Override
        public Observable < ? extends T > call (Void o) {
            return original;
        }}

    ).finallyDo (new Action0 () {
        @Override
        public void call () {
            synchronized (list) {
                counter --;
                if (list.size () == 0 && counter == 0) {
                    System.err.println ("finally");
                }
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23522446_23522886_1_41
23522446_23523055_1_66
Title: "Efficient way of converting RNA sequence to protein in Java and arrayoutofbound error" 
----------------------------------------

static String translation (String rna) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < rna.length () - 2; i ++) {
        String triplet = rna.substring (i, i + 3);
        switch (triplet) {
            case "UUU" :
            case "UUC" :
                sb.append ("F");
                break;
            case "UUA" :
            case "UUG" :
            case "CUU" :
            case "CUC" :
            case "CUA" :
            case "CUG" :
                sb.append ("L");
                break;
            case "AUU" :
            case "AUC" :
            case "AUA" :
                sb.append ("I");
                break;
            case "AUG" :
                sb.append ("M");
                break;
            case "GUU" :
            case "GUC" :
            case "GUA" :
            case "GUG" :
                sb.append ("V");
                break;
            default :
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String translation (String temp) {
    int i = 0;
    String result = "";
    while (i <= temp.length () - 3) {
        String triplet = temp.substring (i, i += 3);
        if (triplet.equals ("UUU") || triplet.equals ("UUC")) result += 'F';

        if (triplet.equals ("UUA") || triplet.equals ("UUG") || triplet.equals ("CUU") || triplet.equals ("CUC") || triplet.equals ("CUA") || triplet.equals ("CUA") || triplet.equals ("CUG")) result += 'L';

        if (triplet.equals ("AUU") || triplet.equals ("AUC") || triplet.equals ("AUA")) result += 'I';

        if (triplet.equals ("AUG")) result += 'M';

        if (triplet.equals ("GUU") || triplet.equals ("GUC") || triplet.equals ("GUA") || triplet.equals ("GUG")) result += 'V';

        if (triplet.equals ("UCU") || triplet.equals ("UCC") || triplet.equals ("UCA") || triplet.equals ("UCG")) result += 'S';

        if (triplet.equals ("AGA") || triplet.equals ("AGG")) result += 'R';

        if (triplet.equals ("AGU") || triplet.equals ("AGC")) result += 'S';

        if (triplet.equals ("UGG")) result += 'W';

        if (triplet.equals ("UGU") || triplet.equals ("UGC")) result += 'C';

        if (triplet.equals ("GAA") || triplet.equals ("GAG")) result += 'E';

        if (triplet.equals ("GAU") || triplet.equals ("GAC")) result += 'D';

        if (triplet.equals ("AAA") || triplet.equals ("AAG")) result += 'K';

        if (triplet.equals ("AAU") || triplet.equals ("AAC")) result += 'N';

        if (triplet.equals ("CAA") || triplet.equals ("CAG")) result += 'Q';

        if (triplet.equals ("CAU") || triplet.equals ("CAC")) result += 'H';

        if (triplet.equals ("UAU") || triplet.equals ("UAC")) result += 'Y';

        if (triplet.equals ("CCG") || triplet.equals ("CCA") || triplet.equals ("CCC") || triplet.equals ("CCU")) result += 'P';

        if (triplet.equals ("ACG") || triplet.equals ("ACA") || triplet.equals ("ACC") || triplet.equals ("ACU")) result += 'T';

        if (triplet.equals ("GCG") || triplet.equals ("GCA") || triplet.equals ("GCC") || triplet.equals ("GCU")) result += 'A';

        if (triplet.equals ("CGG") || triplet.equals ("CGA") || triplet.equals ("CGC") || triplet.equals ("CGU")) result += 'R';

        if (triplet.equals ("GGG") || triplet.equals ("GGA") || triplet.equals ("GGC") || triplet.equals ("GGU")) result += 'G';

        if (triplet.equals ("UAG") || triplet.equals ("UAA") || triplet.equals ("UGA")) result += '.';

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23524852_23525534_7_34
23524852_23526173_3_15
Title: Iterate and compare values in same map to find largest value and remove other from same map 
----------------------------------------

public static void main (String [] args) {
    Map < Integer, Integer > myMap = new HashMap < Integer, Integer > ();
    myMap.put (1, 5);
    myMap.put (2, 20);
    myMap.put (3, 10);
    myMap.put (4, 15);
    myMap.put (5, 20);
    System.out.println (myMap);
    Map < Integer, Integer > concurrentMap = new ConcurrentHashMap < Integer, Integer > (myMap);
    Integer maxKey = concurrentMap.keySet ().iterator ().next ();
    Integer max = myMap.get (maxKey);
    for (Integer key : concurrentMap.keySet ()) {
        Integer currValue = concurrentMap.get (key);
        if (max > currValue) {
            concurrentMap.remove (key);
        } else if (max < currValue) {
            concurrentMap.remove (maxKey);
            max = concurrentMap.get (key);
            maxKey = key;
        }

    }
    System.out.println (concurrentMap);
}
----------------------------------------

public static void main (String [] args) {
    Random rnd = new Random ();
    Map < String, Integer > myMap = new HashMap < > ();
    int i = 1;
    for (int j = 0;
    j < 10; j ++) {
        myMap.put ("k" + j, rnd.nextInt (100));
    }
    System.out.println ("BEFORE");
    printMap (myMap);
    filterMap (myMap);
    System.out.println ("AFTER");
    printMap (myMap);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23529320_23529426_1_13
23529320_23529510_6_23
Title: Java expressions and removing everything after DOT with eval 
----------------------------------------

public static void main (String [] args) throws Exception {
    ScriptEngineManager manager = new ScriptEngineManager ();
    ScriptEngine engine = manager.getEngineByName ("js");
    String [] array = {"-1+3", "10-4"};
    DecimalFormat df = new DecimalFormat ("#.#");
    StringBuilder result = new StringBuilder (array.length);
    for (int i = 0;
    i < array.length; i ++) {
        Object results = engine.eval (array [i]);
        System.out.println (df.format (results));
    }
}
----------------------------------------

public static void main (String [] args) {
    ScriptEngineManager manager = new ScriptEngineManager ();
    ScriptEngine engine = manager.getEngineByName ("js");
    String [] array = {"-1+3", "10-4"};
    for (int i = 0;
    i < array.length; i ++) {
        try {
            Object results = engine.eval (array [i]);
            String resultsAsString = String.format ("%.0f", results);
            int resultsAsint = ((Number) results).intValue ();
            System.out.println ("results_as_string: " + resultsAsString + ", results_as_int: " + resultsAsint);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23532781_23532819_1_19
23532781_23532887_1_16
Title: How to print this using loops only 
----------------------------------------

public static void main (String [] args) {
    for (int i = 5;
    i >= 1; i --) {
        int otherSide = 10 - i;
        int printStar = - 1;
        for (int j = 1;
        j <= 9; j ++) {
            if (j >= i && j <= otherSide) {
                printStar *= - 1;
                if (printStar == 1) System.out.print ("*");
                else System.out.print ("-");

            } else System.out.print ("-");

        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] argu) {
    int index = 8;
    for (int i = 0;
    i < 5; i ++) {
        for (int j = index;
        j > 0; j --) {
            System.out.print ("-");
        }
        index --;
        if (i == 4) {
            System.out.print ("*");
        } else {
            System.out.print (" ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23534528_37227688_44_57
23534528_37365893_144_177
Title: How to add n days to a Date in java without importing Date/Calendar from java API? 
----------------------------------------

public static void main (String [] args) {
    int amount = 650;
    MyDate myDate = new MyDate (21, 5, 2016);
    MyDate addOrSubDays = myDate.addOrSubDays (amount);
    System.out.println (addOrSubDays.getDay () + "-" + addOrSubDays.getMonth () + "-" + addOrSubDays.getYear ());
    Calendar cal = Calendar.getInstance ();
    cal.add (Calendar.DAY_OF_MONTH, amount);
    System.out.println (cal.getTime ());
}
----------------------------------------

public static void main (String [] args) {
    Date date = new Date (6, 12, 2014);
    displayResult (date, 10);
    date = new Date (6, 12, 2014);
    displayResult (date, 20);
    date = new Date (12, 15, 2014);
    displayResult (date, 20);
    date = new Date (12, 15, 1955);
    displayResult (date, 30);
    date = new Date (12, 15, 1955);
    displayResult (date, - 30);
    date = new Date (12, 15, 1955);
    displayResult (date, 16);
    date = new Date (12, 15, 1955);
    displayResult (date, 17);
    date = new Date (12, 15, 1955);
    displayResult (date, 80);
    date = new Date (12, 15, 1956);
    displayResult (date, 80);
    date = new Date (3, 5, 1957);
    displayResult (date, - 80);
    date = new Date (3, 5, 1956);
    displayResult (date, - 80);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2356251_20120780_7_22
2356251_50955567_1_12
Title: string tokenizer in Java 
----------------------------------------

public static void main (String [] kam) {
    String s;
    String sReversed = "";
    System.out.println ("Enter a string to reverse");
    s = "THIS IS ASHIK SKLAB";
    StringTokenizer st = new StringTokenizer (s);
    while (st.hasMoreTokens ()) {
        sReversed = st.nextToken () + " " + sReversed;
    }
    System.out.println ("Original string is : " + s);
    System.out.println ("Reversed string is : " + sReversed);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String s = scan.nextLine ();
    s = s.replaceAll ("[^A-Za-z]", " ");
    StringTokenizer arr = new StringTokenizer (s, " ");
    int n = arr.countTokens ();
    System.out.println (n);
    while (arr.hasMoreTokens ()) {
        System.out.println (arr.nextToken ());
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23564383_30549524_25_38
23564383_30823843_1_24
Title: How to print the @SqlQuery annotation in JDBI sql api 
----------------------------------------

public SqlStatementCustomizer createForType (Annotation annotation, Class sqlObjectType) {
    return q -> q.addStatementCustomizer (new StatementCustomizer () {
        @Override
        public void beforeExecution (PreparedStatement stmt, StatementContext ctx) throws SQLException {
            System.out.println (stmt.toString ());
        }@Override
        public void afterExecution (PreparedStatement stmt, StatementContext ctx) throws SQLException {
        }@Override
        public void cleanup (StatementContext ctx) throws SQLException {
        }}

    );
}
----------------------------------------

@Override
public SqlStatementCustomizer createForType (Annotation annotation, final Class sqlObjectType) {
    return new SqlStatementCustomizer () {
        @Override
        public void apply (SQLStatement sqlStatement) throws SQLException {
            sqlStatement.addStatementCustomizer (new StatementCustomizer () {
                @Override
                public void beforeExecution (PreparedStatement stmt, StatementContext ctx) throws SQLException {
                    System.out.println (stmt.toString ());
                }@Override
                public void afterExecution (PreparedStatement stmt, StatementContext ctx) throws SQLException {
                }@Override
                public void cleanup (StatementContext ctx) throws SQLException {
                }}

            );
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23573915_23574123_1_12
23573915_23574275_1_16
Title: How to return and set to zero? 
----------------------------------------

public double withdraw (double amount) {
    if (balance > amount) {
        balance -= amount;
    } else {
        return balance = 0;
        return balance = - 1;
    }
    return balance;
}
----------------------------------------

public double withdraw (double amount) {
    double toReturn = amount;
    if (balance > amount) {
        balance -= amount;
    } else if (amount > balance) {
        toReturn = balance;
        balance = 0;
    } else if (amount == balance) {
        balance = 0;
    }

    return toReturn;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23579607_23598691_1_12
23579607_25750728_1_30
Title: Run migrations programmatically in Dropwizard 
----------------------------------------

private void migrate () {
    DataSourceFactory dataSourceFactory = RULE.getConfiguration ().dataSourceFactory;
    Properties info = new Properties ();
    info.setProperty ("user", dataSourceFactory.getUser ());
    info.setProperty ("password", dataSourceFactory.getPassword ());
    org.h2.jdbc.JdbcConnection h2Conn = new org.h2.jdbc.JdbcConnection (dataSourceFactory.getUrl (), info);
    JdbcConnection conn = new JdbcConnection (h2Conn);
    Database database = DatabaseFactory.getInstance ().findCorrectDatabaseImplementation (conn);
    Liquibase liquibase = new Liquibase ("migrations.xml", new ClassLoaderResourceAccessor (), database);
    String ctx = null;
    liquibase.update (ctx);
}
----------------------------------------

private void migrate (MyAppConfiguration configuration, Environment environment) {
    if (configuration.isMigrateSchemaOnStartup ()) {
        log.info ("Running schema migration");
        ManagedDataSource dataSource = createMigrationDataSource (configuration, environment);
        try (Connection connection = dataSource.getConnection ()) {
            JdbcConnection conn = new JdbcConnection (connection);
            Database database = DatabaseFactory.getInstance ().findCorrectDatabaseImplementation (conn);
            Liquibase liquibase = new Liquibase ("migrations.xml", new ClassLoaderResourceAccessor (), database);
            liquibase.update ("");
            log.info ("Migration completed!");
        } catch (Exception ex) {
            throw new IllegalStateException ("Unable to migrate database", ex);
        } finally {
            try {
                dataSource.stop ();
            } catch (Exception ex) {
                log.error ("Unable to stop data source used to execute schema migration", ex);
            }
        }
    } else {
        log.info ("Skipping schema migration");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23581549_23629675_14_33
23581549_40084298_1_14
Title: Loading Clob data as a String (eager) via Hibernate's org.hibernate.Query 
----------------------------------------

public Object transformTuple (Object [] tuple, String [] aliases) {
    Map < String, Object > map = new HashMap < String, Object > ();
    for (int i = 0;
    i < aliases.length; i ++) {
        Object t = tuple [i];
        if (t != null && t instanceof Clob) {
            Clob c = (Clob) tuple [i];
            try {
                ByteArrayOutputStream bos = new ByteArrayOutputStream ();
                IOUtils.copy (c.getAsciiStream (), bos);
                t = new String (bos.toByteArray ());
            } catch (SQLException e) {
                e.printStackTrace ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
        map.put (aliases [i], t);
    }
    return map;
}
----------------------------------------

public Object transformTuple (final Object [] tuple, final String [] aliases) {
    final Map < String, Object > result = new LinkedHashMap < > (tuple.length);
    for (int i = 0;
    i < tuple.length; i ++) {
        Object object = tuple [i];
        if (object instanceof Clob) {
            object = clobToString ((Clob) object);
        }
        final String alias = aliases [i];
        if (alias != null) {
            result.put (alias, object);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23582883_23583070_13_25
23582883_23583199_14_25
Title: How do I print the number of occurences 
----------------------------------------

public static void count (String line, char p) {
    int len = line.length ();
    if ((len == 0) || (p == '\0')) {
        return;
    }
    String rest = line.substring (1);
    if (line.charAt (0) == p) {
        counter ++;
    } else {
    }
    count (rest, p);
}
----------------------------------------

public static int count (String line, char p) {
    if (line.length () == 0) {
        return 0;
    }
    if (line.charAt (0) == p) {
        return count (line.substring (1), p) + 1;
    } else {
        return count (line.substring (1), p);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23586328_23586411_1_22
23586328_23586466_1_20
Title: How can I compare ArrayList of integer 2D array with int in java 
----------------------------------------

public boolean isExistWordOfAllOnes () {
    int counter;
    for (int i = 0;
    i < 5; i ++) {
        counter = 0;
        for (int j = 0;
        j < 8; j ++) {
            for (int k = 0;
            k < 8; k ++) {
                if (this.allWords.get (i) [j] [k] == 1) {
                    counter ++;
                }
            }
        }
        if (counter == 8 * 8) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean isExistWordOfAllOnes () {
    int counter;
    for (int i = 0;
    i < 5; i ++) {
        counter = 0;
        for (int j = 0;
        j < 8; j ++) {
            if (this.allWords.get (i) [i] [j] == 1) {
                counter ++;
            }
        }
        if (counter < 1) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23587078_23587501_20_30
23587078_23587501_32_42
Title: Java Iterating into array for different orientations 
----------------------------------------

private static int [] [] rotate (int [] [] original, int angle) {
    int [] [] output = original;
    int times = 4 - angle / 90;
    for (int i = 0;
    i < times; i ++) {
        output = rotate (output);
    }
    return output;
}
----------------------------------------

private static int [] [] rotate (int [] [] original) {
    int n = original.length;
    int m = original [0].length;
    int [] [] output = new int [m] [n];
    for (int i = 0;
    i < n; i ++) for (int j = 0;
    j < m; j ++) output [j] [n - 1 - i] = original [i] [j];

    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23592161_23592280_1_22
23592161_23592364_5_49
Title: Java: Accept input as string or int 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        String inText = myScanner.next ();
        if (inText.equals ("q")) {
            break;
        }
        int number = Integer.valueOf (inText);
        if (number % 2 == 0) {
            System.out.println (number + " is Even.");
        } else {
            System.out.println (number + " is Odd.");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    String input = null;
    int number;
    boolean flag = true;
    do {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        input = myScanner.nextLine ();
        try {
            number = Integer.parseInt (input);
            if (number % 2 == 0) {
                System.out.println (number + " is Even.");
            } else {
                System.out.println (number + " is Odd.");
            }
        } catch (NumberFormatException nfe) {
            if (input.equals ("q")) flag = false;
            else System.out.println ("Invalid input, Please enter integer value or (q) to exist");

        }
    } while (flag);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23592161_23592280_1_22
23592161_23592387_5_31
Title: Java: Accept input as string or int 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        String inText = myScanner.next ();
        if (inText.equals ("q")) {
            break;
        }
        int number = Integer.valueOf (inText);
        if (number % 2 == 0) {
            System.out.println (number + " is Even.");
        } else {
            System.out.println (number + " is Odd.");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        int number;
        String input = myScanner.next ();
        if (input.equals ("q")) {
            break;
        } else {
            try {
                number = Integer.parseInt (input);
                if (number % 2 == 0) {
                    System.out.println (number + " is Even.");
                } else {
                    System.out.println (number + " is Odd.");
                }
            } catch (NumberFormatException nfe) {
                System.out.println ("Enter valid number or \"q\" to quit!");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23592161_23592314_5_28
23592161_23592364_5_49
Title: Java: Accept input as string or int 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        String string = myScanner.nextLine ();
        int number = 0;
        if (string.equals ("q")) {
            myScanner.close ();
            break;
        } else if ((number = toInteger (string)) == - 1) {
            System.out.printf ("%s is not a valid integer!%n", string);
        } else if (number % 2 == 0) {
            System.out.println (number + " is Even.");
        } else {
            System.out.println (number + " is Odd.");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    String input = null;
    int number;
    boolean flag = true;
    do {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        input = myScanner.nextLine ();
        try {
            number = Integer.parseInt (input);
            if (number % 2 == 0) {
                System.out.println (number + " is Even.");
            } else {
                System.out.println (number + " is Odd.");
            }
        } catch (NumberFormatException nfe) {
            if (input.equals ("q")) flag = false;
            else System.out.println ("Invalid input, Please enter integer value or (q) to exist");

        }
    } while (flag);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23592161_23592314_5_28
23592161_23592387_5_31
Title: Java: Accept input as string or int 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        String string = myScanner.nextLine ();
        int number = 0;
        if (string.equals ("q")) {
            myScanner.close ();
            break;
        } else if ((number = toInteger (string)) == - 1) {
            System.out.printf ("%s is not a valid integer!%n", string);
        } else if (number % 2 == 0) {
            System.out.println (number + " is Even.");
        } else {
            System.out.println (number + " is Odd.");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        int number;
        String input = myScanner.next ();
        if (input.equals ("q")) {
            break;
        } else {
            try {
                number = Integer.parseInt (input);
                if (number % 2 == 0) {
                    System.out.println (number + " is Even.");
                } else {
                    System.out.println (number + " is Odd.");
                }
            } catch (NumberFormatException nfe) {
                System.out.println ("Enter valid number or \"q\" to quit!");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23592161_23592364_5_49
23592161_23592387_5_31
Title: Java: Accept input as string or int 
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    String input = null;
    int number;
    boolean flag = true;
    do {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        input = myScanner.nextLine ();
        try {
            number = Integer.parseInt (input);
            if (number % 2 == 0) {
                System.out.println (number + " is Even.");
            } else {
                System.out.println (number + " is Odd.");
            }
        } catch (NumberFormatException nfe) {
            if (input.equals ("q")) flag = false;
            else System.out.println ("Invalid input, Please enter integer value or (q) to exist");

        }
    } while (flag);
}
----------------------------------------

public static void main (String [] args) {
    Scanner myScanner = new Scanner (System.in);
    System.out.println ("Welcome to my program that checks if a number is even or odd.");
    while (true) {
        System.out.println ();
        System.out.print ("Please type number in a number ['q' to quit]: ");
        int number;
        String input = myScanner.next ();
        if (input.equals ("q")) {
            break;
        } else {
            try {
                number = Integer.parseInt (input);
                if (number % 2 == 0) {
                    System.out.println (number + " is Even.");
                } else {
                    System.out.println (number + " is Odd.");
                }
            } catch (NumberFormatException nfe) {
                System.out.println ("Enter valid number or \"q\" to quit!");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23601267_23602398_58_72
23601267_23602398_86_94
Title: Resetting JPanel in another class file 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (turns % 2 == 0) {
        boxes [row] [col].setText ("O");
        boxes [row] [col].setIcon (o);
        check [row] [col] = 2;
    } else {
        boxes [row] [col].setText ("X");
        boxes [row] [col].setIcon (x);
        check [row] [col] = 1;
    }
    winner ();
    turns ++;
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    for (int x = 0;
    x <= 3; x ++) {
        for (int y = 0;
        y <= 3; y ++) {
            boxes [x] [y].setText ("" + x + y);
            boxes [x] [y].setIcon (back);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23601681_23601799_23_36
23601681_23607129_5_18
Title: How to use @XmlElement and @XmlRootElement for marshalling object inside an object? 
----------------------------------------

public static void main (String [] args) throws JAXBException {
    TestObject object = new TestObject ();
    object.setA ("A");
    TestObject1 anotherObject = new TestObject1 ();
    anotherObject.setB ("B");
    object.setAnotherObject (anotherObject);
    File file = new File ("output.xml");
    JAXBContext jaxbContext = JAXBContext.newInstance (TestObject.class);
    Marshaller jaxbMarshaller = jaxbContext.createMarshaller ();
    jaxbMarshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    jaxbMarshaller.marshal (object, file);
    jaxbMarshaller.marshal (object, System.out);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Employee.class);
    Address address = new Address ();
    address.setStreet ("1 A Street");
    Employee employee = new Employee ();
    employee.setEmployeeId (123);
    employee.setAddress (address);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    marshaller.marshal (employee, System.out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23604794_23604827_1_11
23604794_23604851_1_11
Title: Java Scanner hasNextLine NoSuchElementException? 
----------------------------------------

public int getOffset (File file, String searched) throws FileNotFoundException {
    Scanner scanner = new Scanner (file).useDelimiter (System.getProperty ("line.separator"));
    int occurences = 0;
    while (scanner.hasNextLine ()) {
        String s = scanner.nextLine ();
        if (s.indexOf (searched) >= 0) {
            occurences ++;
        }
    }
    return occurences;
}
----------------------------------------

public int getOffset (File file, String searched) throws FileNotFoundException {
    Scanner scanner = new Scanner (file).useDelimiter (System.getProperty ("line.separator"));
    int occurences = 0;
    while (scanner.hasNextLine ()) {
        String s = scanner.nextLine ();
        if (s.indexOf (searched) >= 0) {
            occurences ++;
        }
    }
    return occurences;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23616227_23616450_54_85
23616227_23617026_243_251
Title: How to get my sort function working 
----------------------------------------

public static void main (String [] args) {
    List < Person > people = new ArrayList < Person > ();
    people.add (new Person ("Homer", 38));
    people.add (new Person ("Marge", 35));
    people.add (new Person ("Bart", 15));
    people.add (new Person ("Lisa", 13));
    Collections.sort (people);
    System.out.println ("Sort by Natural order");
    System.out.println ("\t" + people);
    Collections.sort (people, Collections.reverseOrder ());
    System.out.println ("Sort by reverse natural order");
    System.out.println ("\t" + people);
    Collections.sort (people, new Person.AgeComparator ());
    System.out.println ("Sort using Age Comparator");
    System.out.println ("\t" + people);
    Collections.sort (people, Collections.reverseOrder (new Person.AgeComparator ()));
    System.out.println ("Sort using Reverse Age Comparator");
    System.out.println ("\t" + people);
}
----------------------------------------

public static void main (String args []) {
    JFrame.setDefaultLookAndFeelDecorated (true);
    YourMusic f = new YourMusic ();
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setJMenuBar (f.createMenuBar ());
    f.setContentPane (f.createContentPane ());
    f.setSize (800, 700);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23616564_23617036_20_37
23616564_23635711_1_11
Title: Thread safety of VanillaChronicle 
----------------------------------------

public final void appendMessage (final String message) {
    try {
        long length = STRING_SIZE_OVERHEAD + message.length ();
        synchronized (writer) {
            writer.startExcerpt (length);
            writer.append (message);
            writer.finish ();
        }
    } catch (Exception e) {
        LOGGER.warn ("Failed to persist Message [{}]", message);
        LOGGER.warn ("Exception: ", e);
    }
}
----------------------------------------

public final void appendMessage (final String message) {
    try {
        ExcerptAppender writer = chronicle.createAppender ();
        writer.startExcerpt (STRING_SIZE_OVERHEAD + message.length ());
        writer.append (message);
        writer.finish ();
    } catch (Exception e) {
        LOGGER.warn ("Failed to persist Message [{}]", message);
        LOGGER.warn ("Exception: ", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23619540_23620125_141_149
23619540_23620125_26_44
Title: Java thread and graphics2d 
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep (40);
        } catch (InterruptedException ex) {
        }
        model.update ();
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    MutableModel model = new DefaultModel ();
    Controller controller = new Controller (model);
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new View (model));
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    controller.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23620055_23620164_1_11
23620055_23620351_1_23
Title: custom exception class not printing message in eclipse 
----------------------------------------

public static void main (String [] args) throws LottoLimitException {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("How many tickets do you want?");
    int number = keyboard.nextInt ();
    if (number < 1) throw new LottoLimitException ();

    for (int i = 0;
    i < number; i ++) printTicket (generateNumber ());

}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    boolean valid = false;
    while (! valid) {
        System.out.println ("How many tickets do you want?");
        try {
            int number = keyboard.nextInt ();
            if (number < 1) throw new LottoLimitException ();

            for (int i = 0;
            i < number; i ++) printTicket (generateNumber ());

            valid = true;
        } catch (LottoLimitException e) {
            valid = false;
            System.out.println (e.getMessage ());
        } catch (Exception e) {
            valid = false;
            System.out.println ("Invalid Format");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23628217_23628321_1_17
23628217_23628363_1_11
Title: NullPointerException at while(rs.next()) 
----------------------------------------

public ResultSet exec () {
    ResultSet rs = null;
    try {
        stmt = connection.createStatement ();
        rs = stmt.executeQuery (query);
    } catch (SQLException ex) {
        ex.printStackTrace ();
    }
    return rs;
}
----------------------------------------

public ResultSet exec () {
    ResultSet rs = null;
    try {
        stmt = connection.createStatement ();
        rs = stmt.executeQuery (query);
    } catch (SQLException ex) {
        ex.printStackTrace ();
    }
    return rs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_25118925_52_75
23632884_33475309_274_290
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void updateItem (final T item, final boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        if (item == null) {
            setGraphic (null);
        } else {
            if (isEditing ()) {
                setGraphic (mTextField);
                setText ((String) getItem ());
            } else {
                setGraphic (null);
                setText ((String) getItem ());
            }
        }
    }
}
----------------------------------------

private void updateItem () {
    if (isEmpty ()) {
        setText (null);
        setGraphic (null);
    } else {
        if (isEditing ()) {
            if (textField != null) {
                textField.setText (getItemText ());
            }
            setText (null);
            setGraphic (textField);
        } else {
            setText (getItemText ());
            setGraphic (null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_28096298_39_92
23632884_33475309_157_174
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void startEdit () {
    super.startEdit ();
    curTxt = "";
    hardCancel = false;
    Node g = getGraphic ();
    if (g != null) {
        final TextField tf = (TextField) g;
        tf.textProperty ().addListener (new ChangeListener < String > () {
            @Override
            public void changed (ObservableValue < ? extends String > val, String oldVal, String newVal) {
                curTxt = newVal;
            }}

        );
        tf.setOnKeyReleased (new EventHandler < KeyEvent > () {
            @Override
            public void handle (KeyEvent evt) {
                if (KeyCode.ENTER == evt.getCode ()) cancelEdit ();
                else if (KeyCode.ESCAPE == evt.getCode ()) {
                    hardCancel = true;
                    cancelEdit ();
                }

            }}

        );
        tf.focusedProperty ().addListener (new ChangeListener < Boolean > () {
            @Override
            public void changed (ObservableValue < ? extends Boolean > val, Boolean oldVal, Boolean newVal) {
                Node fo = getScene ().getFocusOwner ();
                if (! newVal) {
                    if (fo instanceof VirtualFlow) {
                        if (fo.getParent ().getParent () != getTableView ()) cancelEdit ();

                    } else cancelEdit ();

                }
            }}

        );
        Platform.runLater (new Runnable () {
            @Override
            public void run () {
                tf.requestFocus ();
            }}

        );
    }
}
----------------------------------------

public void startEdit () {
    if (! isEditable () || ! getTableView ().isEditable () || ! getTableColumn ().isEditable ()) {
        return;
    }
    super.startEdit ();
    if (isEditing ()) {
        if (textField == null) {
            textField = getTextField ();
        }
        escapePressed = false;
        startEdit (textField);
        final TableView < S > table = getTableView ();
        tablePos = table.getEditingCell ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_28096298_39_92
23632884_33475309_292_303
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void startEdit () {
    super.startEdit ();
    curTxt = "";
    hardCancel = false;
    Node g = getGraphic ();
    if (g != null) {
        final TextField tf = (TextField) g;
        tf.textProperty ().addListener (new ChangeListener < String > () {
            @Override
            public void changed (ObservableValue < ? extends String > val, String oldVal, String newVal) {
                curTxt = newVal;
            }}

        );
        tf.setOnKeyReleased (new EventHandler < KeyEvent > () {
            @Override
            public void handle (KeyEvent evt) {
                if (KeyCode.ENTER == evt.getCode ()) cancelEdit ();
                else if (KeyCode.ESCAPE == evt.getCode ()) {
                    hardCancel = true;
                    cancelEdit ();
                }

            }}

        );
        tf.focusedProperty ().addListener (new ChangeListener < Boolean > () {
            @Override
            public void changed (ObservableValue < ? extends Boolean > val, Boolean oldVal, Boolean newVal) {
                Node fo = getScene ().getFocusOwner ();
                if (! newVal) {
                    if (fo instanceof VirtualFlow) {
                        if (fo.getParent ().getParent () != getTableView ()) cancelEdit ();

                    } else cancelEdit ();

                }
            }}

        );
        Platform.runLater (new Runnable () {
            @Override
            public void run () {
                tf.requestFocus ();
            }}

        );
    }
}
----------------------------------------

private void startEdit (final TextField textField) {
    if (textField != null) {
        textField.setText (getItemText ());
    }
    setText (null);
    setGraphic (textField);
    textField.selectAll ();
    textField.requestFocus ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_28096298_95_112
23632884_33475309_214_228
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void cancelEdit () {
    if (cancelling) super.cancelEdit ();
    else try {
        cancelling = true;
        if (hardCancel || curTxt.trim ().isEmpty ()) super.cancelEdit ();
        else if (validator.valid (getTableView ().getSelectionModel ().getSelectedItem (), curTxt)) commitEdit (curTxt);
        else super.cancelEdit ();

    } finally {
        cancelling = false;
    }

}
----------------------------------------

public void cancelEdit () {
    if (escapePressed) {
        super.cancelEdit ();
        setText (getItemText ());
    } else {
        String newText = textField.getText ();
        this.commitEdit (getConverter ().fromString (newText));
    }
    setGraphic (null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_33475309_157_174
23632884_33475309_292_303
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void startEdit () {
    if (! isEditable () || ! getTableView ().isEditable () || ! getTableColumn ().isEditable ()) {
        return;
    }
    super.startEdit ();
    if (isEditing ()) {
        if (textField == null) {
            textField = getTextField ();
        }
        escapePressed = false;
        startEdit (textField);
        final TableView < S > table = getTableView ();
        tablePos = table.getEditingCell ();
    }
}
----------------------------------------

private void startEdit (final TextField textField) {
    if (textField != null) {
        textField.setText (getItemText ());
    }
    setText (null);
    setGraphic (textField);
    textField.selectAll ();
    textField.requestFocus ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23632884_33475309_177_210
23632884_33919078_1_20
Title: How to commit when clicking outside an editable TableView cell in JavaFX? 
----------------------------------------

public void commitEdit (T newValue) {
    if (! isEditing ()) return;

    final TableView < S > table = getTableView ();
    if (table != null) {
        CellEditEvent editEvent = new CellEditEvent (table, tablePos, TableColumn.editCommitEvent (), newValue);
        Event.fireEvent (getTableColumn (), editEvent);
    }
    super.cancelEdit ();
    updateItem (newValue, false);
    if (table != null) {
        table.edit (- 1, null);
    }
}
----------------------------------------

@Override
public void commitEdit (T item) {
    if (! isEditing () && ! item.equals (getItem ())) {
        TableView < S > table = getTableView ();
        if (table != null) {
            TableColumn < S, T > column = getTableColumn ();
            CellEditEvent < S, T > event = new CellEditEvent < > (table, new TablePosition < S, T > (table, getIndex (), column), TableColumn.editCommitEvent (), item);
            Event.fireEvent (column, event);
        }
    }
    super.commitEdit (item);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23635211_23635494_6_33
23635211_23635715_7_29
Title: How to read an arbitrary number of ints that are in the range 0-50 and count the occurences of each entered 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    ArrayList < Integer > array = new ArrayList < Integer > ();
    int count = 0;
    while (true) {
        System.out.println ("Please enter a number (enter a non-integer to end)");
        try {
            int x = input.nextInt ();
            array.add (x);
            if (x >= 0 && x <= 50) {
                count ++;
            }
        } catch (InputMismatchException ex) {
            break;
        }
    }
    System.out.println ();
    System.out.format ("The numbers you entered were: %s\n", array);
    System.out.format ("The count of in-range numbers was: %d\n", count);
}
----------------------------------------

public static void main (String [] args) {
    Map < Integer, Integer > counter = new HashMap < Integer, Integer > ();
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter a number or -1 to quit");
    while (input.hasNext ()) {
        int x = input.nextInt ();
        if (x >= 0 && x <= 50) {
            Integer val = counter.get (x);
            if (val == null) {
                counter.put (x, 1);
            } else {
                counter.put (x, ++ val);
            }
        } else if (x == - 1) {
            break;
        }

    }
    for (Integer key : counter.keySet ()) {
        System.out.println (key + " occured " + counter.get (key) + " times");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23635211_23635494_6_33
23635211_36295304_2_23
Title: How to read an arbitrary number of ints that are in the range 0-50 and count the occurences of each entered 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    ArrayList < Integer > array = new ArrayList < Integer > ();
    int count = 0;
    while (true) {
        System.out.println ("Please enter a number (enter a non-integer to end)");
        try {
            int x = input.nextInt ();
            array.add (x);
            if (x >= 0 && x <= 50) {
                count ++;
            }
        } catch (InputMismatchException ex) {
            break;
        }
    }
    System.out.println ();
    System.out.format ("The numbers you entered were: %s\n", array);
    System.out.format ("The count of in-range numbers was: %d\n", count);
}
----------------------------------------

public static void main (String [] args) {
    Map < Integer, Integer > counter = new HashMap < Integer, Integer > ();
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter a number or -1 to quit");
    while (input.hasNext ()) {
        int x = input.nextInt ();
        if (x >= 0 && x <= 50) {
            Integer val = counter.get (x);
            if (val == null) {
                counter.put (x, 1);
            } else {
                counter.put (x, ++ val);
            }
        } else if (x == - 1) {
            break;
        }

    }
    for (Integer key : counter.keySet ()) {
        System.out.println (key + " occured " + counter.get (key) + " times");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23640667_23707662_104_137
23640667_23707662_138_163
Title: Refreshing values from a File to a JTable 
----------------------------------------

public void ReadData () {
    fileread = new File (filename);
    System.out.println (this.filename);
    try {
        Reader = new Scanner (fileread);
        Reader.nextLine ();
        String text = "";
        while (Reader.hasNext ()) {
            text += Reader.nextLine ();
        }
        System.out.println (text);
        String [] collected = text.split (",");
        for (int temp = 0;
        temp < collected.length; temp ++) {
            this.filedata.add (Float.parseFloat (collected [temp]));
        }
        System.out.println ("Filer Array list size:" + this.filedata.size ());
    } catch (FileNotFoundException e) {
        System.out.println (e.getMessage ());
    } catch (NumberFormatException num) {
        System.out.println ("No Numbers found/ Cannot format values");
    }
}
----------------------------------------

public List < Collection > ReadData (final File file) {
    List < Collection > data = new ArrayList < > ();
    if (! file.isDirectory () && file.canRead ()) {
        try {
            BufferedReader br = new BufferedReader (new FileReader (file));
            br.readLine ();
            String line = "";
            while ((line = br.readLine ()) != null) {
                String [] split = line.split (",");
                Collection dff = new Collection (Float.parseFloat (split [0]), Float.parseFloat (split [1]), Float.parseFloat (split [2]), Float.parseFloat (split [3]), Float.parseFloat (split [4]), Float.parseFloat (split [5]), Float.parseFloat (split [6]), Float.parseFloat (split [7]), Float.parseFloat (split [8]), Float.parseFloat (split [9]), Float.parseFloat (split [10]));
                data.add (dff);
            }
            System.out.println ("Reading from file finished");
            br.close ();
        } catch (FileNotFoundException ex) {
            Logger.getLogger (PreviousTableModel.class.getName ()).log (Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger (PreviousTableModel.class.getName ()).log (Level.SEVERE, null, ex);
        }
    } else {
        System.out.println ("Sorry, i can not read your input file!");
    }
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23644314_23664363_18_28
23644314_23664363_30_47
Title: Java optimized Cramers rule function 
----------------------------------------

public static int getDet (int [] [] a) {
    int n = a.length - 1;
    if (n < 0) return 0;

    int M [] [] [] = new int [n + 1] [] [];
    M [n] = a;
    for (int i = 0;
    i < n; i ++) M [i] = new int [i + 1] [i + 1];

    return getDet (M, n);
}
----------------------------------------

public static int getDet (int [] [] [] M, int m) {
    if (m == 0) return M [0] [0] [0];

    int e = 1;
    for (int i = 0;
    i < m; i ++) for (int j = 0;
    j < m; j ++) M [m - 1] [i] [j] = M [m] [i] [j];

    int sum = M [m] [m] [m] * getDet (M, m - 1);
    for (int i = m - 1;
    i >= 0; i --) {
        for (int j = 0;
        j < m; j ++) M [m - 1] [i] [j] = M [m] [i + 1] [j];

        e = - e;
        sum += e * M [m] [i] [m] * getDet (M, m - 1);
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23647256_23647976_115_125
23647256_23647976_181_225
Title: How do I clear a Panel? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == OperationArray [0]) {
        String temp = WritingZone.getText ();
        String temp2 = "";
        WritingZone.setText ("");
        for (int x = 0;
        x < temp.length () - 1; x ++) {
            temp2 += (Character.toString (temp.charAt (x)));
        }
        WritingZone.setText (temp2);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (operation == '*') {
        String temp = WritingZone.getText ();
        WritingZone.setText ("");
        second = Double.valueOf (temp);
        result = (first * second);
        String temp2 = String.valueOf (result);
        WritingZone.setText (temp2);
    } else if (operation == '/') {
        String temp = WritingZone.getText ();
        WritingZone.setText ("");
        second = Double.valueOf (temp);
        if (second < 0) {
            result = (first / second);
            String temp2 = String.valueOf (result);
            WritingZone.setText (temp2);
        } else if (second > 0) {
            result = (first / second);
            String temp2 = String.valueOf (result);
            WritingZone.setText (temp2);
        } else if (second == 0) WritingZone.setText ("Error! Can't divide by 0");

    } else if (operation == '+') {
        String temp = WritingZone.getText ();
        WritingZone.setText ("");
        second = Double.valueOf (temp);
        result = (first + second);
        String temp2 = String.valueOf (result);
        WritingZone.setText (temp2);
    } else if (operation == '-') {
        String temp = WritingZone.getText ();
        WritingZone.setText ("");
        second = Double.valueOf (temp);
        result = (first - second);
        String temp2 = String.valueOf (result);
        WritingZone.setText (temp2);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
23647256_23647976_115_125
23647256_23647976_46_243
Title: How do I clear a Panel? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == OperationArray [0]) {
        String temp = WritingZone.getText ();
        String temp2 = "";
        WritingZone.setText ("");
        for (int x = 0;
        x < temp.length () - 1; x ++) {
            temp2 += (Character.toString (temp.charAt (x)));
        }
        WritingZone.setText (temp2);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == b1) {
        if (r1.isSelected ()) {
            for (int a = 0;
            a < ButtonArray.length; a ++) {
                ButtonArray [a] = new JButton (ButtonString [a]);
            }
            NumberPanel.removeAll ();
            NumberPanel.setLayout (new GridLayout (4, 3, 5, 5));
            for (int a = 0;
            a < ButtonArray.length; a ++) {
                NumberPanel.add (ButtonArray [a]);
            }
            for (int a = 0;
            a < OperationArray.length; a ++) {
                OperationArray [a] = new JButton (OperationString [a]);
            }
            OperationPanel.removeAll ();
            OperationPanel.setLayout (new GridLayout (4, 2, 5, 5));
            for (int a = 0;
            a < OperationArray.length; a ++) {
                OperationPanel.add (OperationArray [a]);
            }
            JPanel Finalpanel = new JPanel ();
            Finalpanel.setLayout (new FlowLayout ());
            Finalpanel.add (NumberPanel);
            Finalpanel.add (OperationPanel);
            WritingZone.setComponentOrientation (ComponentOrientation.RIGHT_TO_LEFT);
            WritingZone.setBorder (BorderFactory.createLoweredSoftBevelBorder ());
            WritingZone.setEditable (false);
            WritingZone.setBackground (Color.white);
            JPanel TextPanel = new JPanel ();
            TextPanel.add (WritingZone);
            for (int a = 0;
            a < ButtonArray.length; a ++) {
                ButtonArray [a].addActionListener (new ActionListener () {
                    public void actionPerformed (ActionEvent e) {
                        for (int a = 0;
                        a < ButtonArray.length - 1; a ++) {
                            if (e.getSource () == ButtonArray [a]) {
                                String temp = WritingZone.getText ();
                                WritingZone.setText (temp + ButtonArray [a].getText ());
                            }
                        }
                    }}

                );
            }
            ButtonArray [11].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    if (e.getSource () == ButtonArray [11]) {
                        StringBuilder temp = new StringBuilder ();
                        temp.append (WritingZone.getText ());
                        WritingZone.setText ("");
                        for (int a = 0;
                        a < temp.length (); a ++) {
                            if (temp.charAt (a) == '-') {
                                temp.deleteCharAt (a);
                                WritingZone.setText (temp.toString ());
                            } else {
                                WritingZone.setText ("-" + temp.toString ());
                            }
                        }
                    }
                }}

            );
            OperationArray [0].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    if (e.getSource () == OperationArray [0]) {
                        String temp = WritingZone.getText ();
                        String temp2 = "";
                        WritingZone.setText ("");
                        for (int x = 0;
                        x < temp.length () - 1; x ++) {
                            temp2 += (Character.toString (temp.charAt (x)));
                        }
                        WritingZone.setText (temp2);
                    }
                }}

            );
            OperationArray [1].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    if (e.getSource () == OperationArray [1]) {
                        WritingZone.setText ("");
                        first = 0;
                        second = 0;
                    }
                }}

            );
            OperationArray [2].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    first = Double.valueOf (WritingZone.getText ());
                    WritingZone.setText ("");
                    operation = OperationArray [2].getText ().charAt (0);
                }}

            );
            OperationArray [3].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    first = Double.valueOf (WritingZone.getText ());
                    WritingZone.setText ("");
                    operation = OperationArray [3].getText ().charAt (0);
                }}

            );
            OperationArray [4].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    first = Double.valueOf (WritingZone.getText ());
                    WritingZone.setText ("");
                    operation = OperationArray [4].getText ().charAt (0);
                }}

            );
            OperationArray [5].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    first = Double.valueOf (WritingZone.getText ());
                    WritingZone.setText ("");
                    operation = OperationArray [5].getText ().charAt (0);
                }}

            );
            OperationArray [6].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    String temp = String.valueOf (result);
                    String temp2 = WritingZone.getText ();
                    WritingZone.setText ("");
                    WritingZone.setText (temp2 + "" + temp);
                }}

            );
            OperationArray [7].addActionListener (new ActionListener () {
                public void actionPerformed (ActionEvent e) {
                    if (operation == '*') {
                        String temp = WritingZone.getText ();
                        WritingZone.setText ("");
                        second = Double.valueOf (temp);
                        result = (first * second);
                        String temp2 = String.valueOf (result);
                        WritingZone.setText (temp2);
                    } else if (operation == '/') {
                        String temp = WritingZone.getText ();
                        WritingZone.setText ("");
                        second = Double.valueOf (temp);
                        if (second < 0) {
                            result = (first / second);
                            String temp2 = String.valueOf (result);
                            WritingZone.setText (temp2);
                        } else if (second > 0) {
                            result = (first / second);
                            String temp2 = String.valueOf (result);
                            WritingZone.setText (temp2);
                        } else if (second == 0) WritingZone.setText ("Error! Can't divide by 0");

                    } else if (operation == '+') {
                        String temp = WritingZone.getText ();
                        WritingZone.setText ("");
                        second = Double.valueOf (temp);
                        result = (first + second);
                        String temp2 = String.valueOf (result);
                        WritingZone.setText (temp2);
                    } else if (operation == '-') {
                        String temp = WritingZone.getText ();
                        WritingZone.setText ("");
                        second = Double.valueOf (temp);
                        result = (first - second);
                        String temp2 = String.valueOf (result);
                        WritingZone.setText (temp2);
                    }

                }}

            );
            final JPanel AllPanel = new JPanel ();
            AllPanel.setLayout (new BorderLayout (5, 5));
            AllPanel.add (BorderLayout.NORTH, TextPanel);
            AllPanel.add (BorderLayout.CENTER, Finalpanel);
            AllPanel.setBorder (BorderFactory.createTitledBorder ("Simple      Calculator"));
            emptyPanel.removeAll ();
            emptyPanel.add (AllPanel);
            emptyPanel.setVisible (true);
            pack ();
        }
    }
}
----------------------------------------
