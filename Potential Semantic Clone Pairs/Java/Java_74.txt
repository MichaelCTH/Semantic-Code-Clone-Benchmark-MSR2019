$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_31969861_38_56
31969663_32188773_12_37
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser parseUser, com.parse.ParseException e) {
    if (parseUser != null) {
    } else {
        Dialog.Builder newBuilder = new SimpleDialog.Builder (R.style.SimpleDialogLight);
        ((SimpleDialog.Builder) newBuilder).message (e.getMessage ()).title ("Oops!").positiveAction ("OK");
        DialogFragment fragment = DialogFragment.newInstance (newBuilder);
        fragment.show (getFragmentManager (), null);
    }
}
----------------------------------------

public void done (ParseUser object, ParseException e) {
    if (object == null) {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "The getFirst request failed. Probably because no associated account found");
    } else {
        String actualUsername = (String) object.get ("username");
        ParseUser.logInInBackground (actualUsername, password, new LogInCallback () {
            public void done (ParseUser user, ParseException e) {
                if (user != null) {
                    Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity (intent);
                    finish ();
                } else {
                    TextView error = (TextView) findViewById (R.id.info);
                    error.setVisibility (View.VISIBLE);
                    error.setText (getString (R.string.error_sign_in));
                    Log.d ("error", "email or password  invalid");
                }
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_31969861_38_56
31969663_32188773_21_34
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser parseUser, com.parse.ParseException e) {
    if (parseUser != null) {
    } else {
        Dialog.Builder newBuilder = new SimpleDialog.Builder (R.style.SimpleDialogLight);
        ((SimpleDialog.Builder) newBuilder).message (e.getMessage ()).title ("Oops!").positiveAction ("OK");
        DialogFragment fragment = DialogFragment.newInstance (newBuilder);
        fragment.show (getFragmentManager (), null);
    }
}
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "email or password  invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_31969861_38_56
31969663_32188773_43_57
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser parseUser, com.parse.ParseException e) {
    if (parseUser != null) {
    } else {
        Dialog.Builder newBuilder = new SimpleDialog.Builder (R.style.SimpleDialogLight);
        ((SimpleDialog.Builder) newBuilder).message (e.getMessage ()).title ("Oops!").positiveAction ("OK");
        DialogFragment fragment = DialogFragment.newInstance (newBuilder);
        fragment.show (getFragmentManager (), null);
    }
}
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "username or password invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_32188773_12_37
31969663_32188773_21_34
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser object, ParseException e) {
    if (object == null) {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "The getFirst request failed. Probably because no associated account found");
    } else {
        String actualUsername = (String) object.get ("username");
        ParseUser.logInInBackground (actualUsername, password, new LogInCallback () {
            public void done (ParseUser user, ParseException e) {
                if (user != null) {
                    Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity (intent);
                    finish ();
                } else {
                    TextView error = (TextView) findViewById (R.id.info);
                    error.setVisibility (View.VISIBLE);
                    error.setText (getString (R.string.error_sign_in));
                    Log.d ("error", "email or password  invalid");
                }
            }}

        );
    }
}
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "email or password  invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_32188773_12_37
31969663_32188773_43_57
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser object, ParseException e) {
    if (object == null) {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "The getFirst request failed. Probably because no associated account found");
    } else {
        String actualUsername = (String) object.get ("username");
        ParseUser.logInInBackground (actualUsername, password, new LogInCallback () {
            public void done (ParseUser user, ParseException e) {
                if (user != null) {
                    Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity (intent);
                    finish ();
                } else {
                    TextView error = (TextView) findViewById (R.id.info);
                    error.setVisibility (View.VISIBLE);
                    error.setText (getString (R.string.error_sign_in));
                    Log.d ("error", "email or password  invalid");
                }
            }}

        );
    }
}
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "username or password invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31969663_32188773_21_34
31969663_32188773_43_57
Title: Parse.com login using email or username android 
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "email or password  invalid");
    }
}
----------------------------------------

public void done (ParseUser user, ParseException e) {
    if (user != null) {
        Intent intent = new Intent (getBaseContext (), MainActivity.class).addFlags (Intent.FLAG_ACTIVITY_NO_HISTORY | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity (intent);
        finish ();
    } else {
        TextView error = (TextView) findViewById (R.id.info);
        error.setVisibility (View.VISIBLE);
        error.setText (getString (R.string.error_sign_in));
        Log.d ("error", "username or password invalid");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3198037_3198150_10_39
3198037_3198677_7_42
Title: Workaround for setToolTipText consuming mouse events? 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame f = new JFrame ();
            f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            JTabbedPane tabs = new JTabbedPane ();
            String s;
            for (int i = 0;
            i < 3; i ++) {
                s = "Tab " + (i + 1);
                tabs.add (new JPanel (), s);
                tabs.setToolTipTextAt (i, "Tooltip for " + s);
            }
            f.setContentPane (tabs);
            f.setSize (400, 300);
            f.setLocationRelativeTo (null);
            f.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    JTabbedPane jTabbedPane = new JTabbedPane () {
        @Override
        public String getToolTipText (MouseEvent e) {
            int index = ((TabbedPaneUI) ui).tabForCoordinate (this, e.getX (), e.getY ());
            if (index != - 1) {
                JComponent component = (JComponent) getTabComponentAt (index);
                return component.getToolTipText ();
            }
            return super.getToolTipText (e);
        }}

    ;
    ToolTipManager.sharedInstance ().registerComponent (jTabbedPane);
    jTabbedPane.addTab ("Red", new JLabel ("Roses"));
    jTabbedPane.addTab ("Blue", new JLabel ("Skies"));
    jTabbedPane.addTab ("Green", new JLabel ("Grass"));
    for (int i = 0;
    i < jTabbedPane.getTabCount (); i ++) {
        JLabel tabComponent = new JLabel (jTabbedPane.getTitleAt (i));
        tabComponent.setToolTipText ("Tip: " + tabComponent.getText ());
        ToolTipManager.sharedInstance ().unregisterComponent (tabComponent);
        jTabbedPane.setTabComponentAt (i, tabComponent);
    }
    JFrame jFrame = new JFrame ("Testing");
    jFrame.add (jTabbedPane);
    jFrame.setSize (400, 500);
    jFrame.setVisible (true);
    jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31989251_31989296_1_18
31989251_31989352_1_17
Title: Display highest value and index number in array 
----------------------------------------

private void pick_highest_value_here_and_display (ArrayList < Double > value) throws Exception {
    double aa [] = value.stream ().mapToDouble (v -> v.doubleValue ()).toArray ();
    double highest = Double.MIN_VALUE;
    int highestIndex;
    System.out.println (highest);
    for (int i = 0;
    i < aa.length; i ++) {
        if (aa [i] > highest) {
            highest = aa [i];
            highestIndex = i;
        }
    }
    System.out.println (highest);
    System.out.println (highestIndex);
}
----------------------------------------

private void pick_highest_value_here_and_display (ArrayList < Double > value) throws Exception {
    double aa [] = value.stream ().mapToDouble (v -> v.doubleValue ()).toArray ();
    double highest = Double.MIN_VALUE;
    int index = 0;
    System.out.println (highest);
    for (int i = 0;
    i < aa.length; i ++) {
        if (aa [i] > highest) {
            index = i;
            highest = aa [i];
        }
    }
    System.out.println (highest);
    System.out.println (index);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31993826_32002331_12_21
31993826_32002664_12_21
Title: Getting error while implementing Threads 
----------------------------------------

public void dowork () {
    Thread t = new Thread (new Runnable () {
        public void run () {
            for (int i = 0;
            i < 1000; i ++) {
                count ++;
            }
        }}

    );
    t.start ();
}
----------------------------------------

public void dowork () {
    Thread t = new Thread (new Runnable () {
        public void run () {
            for (int i = 0;
            i < 1000; i ++) {
                count ++;
            }
        }}

    );
    t.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31993826_32002331_23_32
31993826_32002664_23_33
Title: Getting error while implementing Threads 
----------------------------------------

public void dowork1 () {
    Thread t1 = new Thread (new Runnable () {
        public void run () {
            for (int i = 0;
            i < 1000; i ++) {
                count ++;
            }
        }}

    );
    t1.start ();
}
----------------------------------------

public void dowork1 () {
    Thread t1 = new Thread (new Runnable () {
        public void run () {
            for (int i = 0;
            i < 1000; i ++) {
                count ++;
            }
        }}

    );
    t1.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32019189_32022670_100_120
32019189_32022670_60_95
Title: Repaint() working only half times 
----------------------------------------

public void run () {
    while (true) {
        x = getWidth () / 2;
        y = getHeight () / 2;
        if (r > 50) {
            r --;
            try {
                sleep (25);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        } else {
            enlarge = true;
            update ();
            Thread.currentThread ().interrupt ();
            return;
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        x = getWidth () / 2;
        y = getHeight () / 2;
        if (getWidth () > getHeight ()) {
            if (r < getHeight () / 2) {
                r ++;
                try {
                    sleep (25);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else {
                enlarge = false;
                update ();
                Thread.currentThread ().interrupt ();
                return;
            }
        } else {
            if (r < getWidth () / 2) {
                r ++;
                try {
                    sleep (25);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else {
                enlarge = false;
                update ();
                Thread.currentThread ().interrupt ();
                return;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32024020_32032105_1_19
32024020_32041194_26_59
Title: Using a ListenableFuture Azure call inside an AsyncTask 
----------------------------------------

private void login () {
    Log.i (TAG, "Doing login task...");
    isLoginFinished = false;
    ListenableFuture < JsonElement > result = mClient.invokeApi ("login", mJSONHelper.makeLoginObject (thisUser));
    Futures.addCallback (result, new FutureCallback < JsonElement > () {
        @Override
        public void onFailure (Throwable exc) {
            error.setError (ErrorHelper.Error.NETWORK_ERROR);
            isLoginFinished = true;
        }@Override
        public void onSuccess (JsonElement result) {
            Log.i (TAG, "Login call was successful, parsing result:" + result.toString ());
            isLoginFinished = true;
        }}

    );
    while (! isLoginFinished);

}
----------------------------------------

private ListenableFuture < UserDetail > login () {
    Log.i (TAG, "Doing login task...");
    ListenableFuture < JsonElement > loginFutureResult = mClient.invokeApi ("login", mJSONHelper.makeLoginObject (thisUser));
    Futures.addCallback (loginFutureResult, new FutureCallback < JsonElement > () {
        @Override
        public void onFailure (Throwable exc) {
            error.setError (ErrorHelper.Error.NETWORK_ERROR);
        }@Override
        public void onSuccess (JsonElement result) {
            Log.i (TAG, "The login was successful");
        }}

    );
    AsyncFunction < JsonElement, UserDetail > transformUserJsonFunction = new AsyncFunction < JsonElement, UserDetail > () {
        public ListenableFuture < UserDetail > apply (JsonElement userJson) {
            UserDetail userDetail = new UserDetail (userJson);
            return Futures.immediateFuture (userDetail);
        }}

    ;
    return Futures.transform (loginFutureResult, transformUserJsonFunction);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32024951_45174258_6_32
32024951_49333873_20_32
Title: Java Matrix Diagonal Difference bug 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int diognalleft = 0;
    int diognalright = 0;
    int [] [] array = new int [n] [n];
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            array [i] [j] = in.nextInt ();
        }
    }
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            if (i == j) {
                diognalleft = diognalleft + array [i] [j];
            }
            if ((i + j) == (n - 1)) {
                diognalright = diognalright + array [i] [j];
            }
        }
    }
    System.out.println (Math.abs (diognalleft - diognalright));
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int n = in.nextInt ();
    int [] [] a = new int [n] [n];
    for (int a_i = 0;
    a_i < n; a_i ++) {
        for (int a_j = 0;
        a_j < n; a_j ++) {
            a [a_i] [a_j] = in.nextInt ();
        }
    }
    int result = diagonalDifference (a);
    System.out.println (result);
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32025447_32025744_6_20
32025447_32026212_4_15
Title: Synchronizing Threads in Java using monitor class 
----------------------------------------

public void print (int id, int num) {
    synchronized (lock) {
        while (id != expectedId) {
            try {
                lock.wait ();
            } catch (InterruptedException e) {
                return;
            }
        }
        System.out.println ("id=" + id + " num=" + num);
        expectedId ++;
        lock.notifyAll ();
    }
}
----------------------------------------

public synchronized void print (int id, int num) {
    while (id != currId) {
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    System.out.println ("id=" + id + " num=" + num);
    currId ++;
    notifyAll ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32027505_32027588_1_19
32027505_32027640_1_15
Title: Why is the recursive insertion method of the BST not working 
----------------------------------------

public void insertNode (TreeNode node, int key) {
    if (node.getKey () > key) {
        if (node.left == null) {
            TreeNode newNode = new TreeNode (key);
            node.left = newNode;
        } else {
            insertNode (node.getChildLeft (), key);
        }
    } else if (node.getKey () < key) {
        if (node.right == null) {
            TreeNode newNode = new TreeNode (key);
            node.right = newNode;
        } else {
            insertNode (node.getChildRight (), key);
        }
    } else {
    }

}
----------------------------------------

private TreeNode insertNode (TreeNode node, int key) {
    if (node == null) {
        node = new TreeNode (key);
    } else {
        if (node.getKey () > key) {
            node.setChildLeft (insertNode (node.getChildLeft (), key));
        } else if (node.getKey () < key) {
            node.setChildRight (insertNode (node.getChildRight (), key));
        } else {
        }

    }
    return node;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32030895_32031183_3_21
32030895_32031447_21_37
Title: Sort and rearrange (distinct) arrays 
----------------------------------------

public static void main (String [] args) {
    final int [] I = {1, 2, 4, 5, 3};
    final int [] J = {8, 7, 6, 3, 2};
    List < Pair > pairs = IntStream.range (0, I.length).mapToObj (n -> new Pair (I [n], J [n])).sorted ((p1, p2) -> p1.i - p2.i).collect (Collectors.toList ());
    for (int k = 0;
    k < pairs.size (); k ++) {
        Pair p = pairs.get (k);
        I [k] = p.i;
        J [k] = p.j;
    }
    System.out.println (Arrays.toString (I));
    System.out.println (Arrays.toString (J));
}
----------------------------------------

public static void main (String args []) {
    int a [] = {1, 2, 4, 5, 3};
    int b [] = {8, 7, 6, 3, 2};
    Tuple arr [] = new Tuple [a.length];
    for (int i = 0;
    i < a.length; i ++) arr [i] = new Tuple (a [i], b [i]);

    Arrays.sort (arr);
    for (int i = 0;
    i < a.length; i ++) {
        a [i] = arr [i].x;
        b [i] = arr [i].y;
    }
    System.out.println (Arrays.toString (a));
    System.out.println (Arrays.toString (b));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32033333_32033381_1_15
32033333_32036259_34_48
Title: How to debug my unconventional Java calculator? 
----------------------------------------

public static String getOperatorType (String expression) {
    int counter = 0;
    for (int i = 0;
    i < 3; i ++) {
        if (Character.isLetter (expression.charAt (i))) counter ++;

    }
    if (counter == 3) return "Trigonometrical";
    else return "Arithemtic";

}
----------------------------------------

public static String getOperatorType (String expression) {
    int counter = 0;
    for (int i = 0;
    i < 3; i ++) {
        if (Character.isLetter (expression.charAt (i))) counter ++;

    }
    if (counter == 3) return "Trigonometrical";
    else return "Arithmetic";

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32033333_32036259_50_64
32033333_32036259_71_81
Title: How to debug my unconventional Java calculator? 
----------------------------------------

public static double getResult (String operator, double operand) {
    if (operator.equals ("sin")) return Math.sin (operand);

    if (operator.equals ("cos")) return Math.cos (operand);

    if (operator.equals ("tan")) return Math.tan (operand);

    if (operator.equals ("cot")) return 1 / Math.tan (operand);

    if (operator.equals ("cosec")) return 1 / Math.sin (operand);
    else return 1 / Math.cos (operand);

}
----------------------------------------

public static double getResult (String operator, double operand1, double operand2) {
    if (operator.equals ("*")) return operand1 * operand2;

    if (operator.equals ("+")) return operand1 + operand2;

    if (operator.equals ("/")) return operand2 / operand1;
    else return operand2 - operand1;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32058140_32058189_13_31
32058140_32058271_7_23
Title: Use another function to create objects 
----------------------------------------

public static void createCars () {
    ferrari = new Car ("Ferrari", "California");
    ferrari.setHp (552);
    ferrari.setAcceleration (3.3);
    lamborghini = new Car ("Lamborghini", "Huracan");
    lamborghini.setHp (602);
    lamborghini.setAcceleration (2.5);
    bmw = new Car ("BMW", "M5");
    bmw.setHp (560);
    bmw.setAcceleration (3.7);
    cadillac = new Car ("Cadillac", "CTS-V");
    cadillac.setHp (640);
    cadillac.setAcceleration (3.6);
}
----------------------------------------

public void createCars () {
    ferrari = new Car ("Ferrari", "California");
    ferrari.setHp (552);
    ferrari.setAcceleration (3.3);
    lamborghini = new Car ("Lamborghini", "Huracan");
    lamborghini.setHp (602);
    lamborghini.setAcceleration (2.5);
    bmw = new Car ("BMW", "M5");
    bmw.setHp (560);
    bmw.setAcceleration (3.7);
    cadillac = new Car ("Cadillac", "CTS-V");
    cadillac.setHp (640);
    cadillac.setAcceleration (3.6);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32060253_32084337_1_11
32060253_32088442_9_25
Title: Selenium : Executing same line some time work some time does not work 
----------------------------------------

public static void main (String [] args) {
    WebDriver HP = new ChromeDriver ();
    HP.get ("https://**********************/");
    HP.manage ().window ().maximize ();
    clickLinkAndGoBack (HP, "Northland");
    clickLinkAndGoBack (HP, "Auckland");
    clickLinkAndGoBack (HP, "Waikato");
    clickLinkAndGoBack (HP, "Bay of Plenty");
    clickLinkAndGoBack (HP, "Gisborne");
    clickLinkAndGoBack (HP, "Hawkes Bay");
}
----------------------------------------

public static void main (String [] args) {
    WebDriver HP = new ChromeDriver ();
    HP.manage ().timeouts ().implicitlyWait (5, TimeUnit.SECONDS);
    HP.get ("https://********/");
    LoadDistrict (HP, "Northland");
    LoadDistrict (HP, "Auckland");
    LoadDistrict (HP, "Waikato");
    LoadDistrict (HP, "Bay of Plenty");
    LoadDistrict (HP, "Gisborne");
    LoadDistrict (HP, "Hawkes Bay");
    LoadDistrict (HP, "Taranaki");
    LoadDistrict (HP, "Wanganui");
    LoadDistrict (HP, "Manawatu");
    LoadDistrict (HP, "Wairarapa");
    LoadDistrict (HP, "Wellington");
    HP.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32067008_32067167_1_15
32067008_32067195_1_17
Title: How to print specified in java---> 
----------------------------------------

public static void main (String [] args) {
    final int numRows = 4;
    for (int row = numRows - 1;
    row >= 0; row --) {
        for (int preSpace = numRows - row;
        preSpace >= 0; preSpace --) {
            System.out.print (" ");
        }
        if (row > 0) {
            System.out.print ("v");
            for (int postSpace = 1;
            postSpace < row * 2; postSpace ++) {
                System.out.print (" ");
            }
        }
        System.out.println ("v");
    }
}
----------------------------------------

public static void main (String [] args) {
    char [] [] pattern = {{'v', ' ', ' ', ' ', 'v'}, {' ', 'v', ' ', 'v', ' '}, {' ', ' ', 'v', ' ', ' '}};
    for (int row = 0;
    row < pattern.length; row ++) {
        for (int col = 0;
        col < pattern [0].length; col ++) {
            System.out.print (pattern [row] [col]);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32078074_32078780_13_31
32078074_32093875_5_42
Title: Java: Array sorting 
----------------------------------------

public static void main (String [] args) {
    Integer [] c = {3, 2, 4, 1, 0};
    Integer [] c1 = new Integer [c.length];
    System.out.print ("Original Array c:   ");
    printSumArray (c);
    Arrays.sort (c);
    System.out.print ("Sorted Array c:     ");
    printSumArray (c);
    System.arraycopy (c, 0, c1, 0, c.length);
    Arrays.sort (c1, Collections.reverseOrder ());
    System.out.print ("Reversed Sorted c1: ");
    printSumArray (c1);
}
----------------------------------------

public static void main (String [] args) {
    int temp = 0;
    int [] array = {3, 2, 1};
    int asum = 0;
    int dsum = 0;
    int sum = 0;
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] > array [j]) {
                temp = array [i];
                array [i] = array [j];
                array [j] = temp;
            }
        }
    }
    System.out.println ("Ascending");
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i] + " ");
        asum += array [i];
    }
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = i + 1;
        j < array.length; j ++) {
            if (array [i] < array [j]) {
                temp = array [i];
                array [i] = array [j];
                array [j] = temp;
            }
        }
    }
    System.out.println ("Descending");
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i] + " ");
        dsum += array [i];
    }
    sum = asum + dsum;
    System.out.println ("SUM" + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32085323_32085577_8_34
32085323_32173334_5_36
Title: Making a repeated alarm stop during a phone call 
----------------------------------------

public void onReceive (Context context, Intent intent) {
    if (intent.getAction ().equals (PLAYAUDIO)) {
        m = MediaPlayer.create (context, R.raw.sound2);
        m.setOnPreparedListener (new MediaPlayer.OnPreparedListener () {
            @Override
            public void onPrepared (MediaPlayer mp) {
                m.start ();
            }}

        );
        m.setOnCompletionListener (new MediaPlayer.OnCompletionListener () {
            @Override
            public void onCompletion (MediaPlayer mp) {
                m = null;
            }}

        );
    } else if (intent.getAction ().equals (PHONE_STATE)) {
        String extra = intent.getStringExtra (TelephonyManager.EXTRA_STATE);
        if (extra.equalsIgnoreCase (TelephonyManager.EXTRA_STATE_IDLE) && m != null) m.start ();
        else if (m != null) m.pause ();

    }

}
----------------------------------------

public void onReceive (Context context, Intent intent) {
    MediaPlayer m = MediaPlayer.create (context, R.raw.sound2);
    TelephonyManager tm = (TelephonyManager) context.getSystemService (Service.TELEPHONY_SERVICE);
    switch (tm.getCallState ()) {
        case TelephonyManager.CALL_STATE_RINGING :
            m.stop ();
            break;
        case TelephonyManager.CALL_STATE_OFFHOOK :
            m.stop ();
            break;
        case TelephonyManager.CALL_STATE_IDLE :
            m.start ();
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32087080_32087260_1_12
32087080_47597451_1_22
Title: How to get full sentence using regex in java 
----------------------------------------

public static String getSentence (String input, String word) {
    Matcher matcher = Pattern.compile (word, Pattern.LITERAL | Pattern.CASE_INSENSITIVE).matcher (input);
    if (matcher.find ()) {
        BreakIterator br = BreakIterator.getSentenceInstance (Locale.ENGLISH);
        br.setText (input);
        int start = br.preceding (matcher.start ());
        int end = br.following (matcher.end ());
        return input.substring (start, end);
    }
    return null;
}
----------------------------------------

private String getSentence (String input, String word) {
    Matcher matcher = Pattern.compile (word, Pattern.LITERAL | Pattern.CASE_INSENSITIVE).matcher (input);
    if (matcher.find ()) {
        BreakIterator br = BreakIterator.getSentenceInstance (Locale.ENGLISH);
        br.setText (input);
        int start = br.preceding (matcher.start ());
        int end = br.following (matcher.end ());
        if (start == BreakIterator.DONE) {
            start = 0;
        }
        if (end == BreakIterator.DONE) {
            end = input.length ();
        }
        return input.substring (start, end);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32088663_32088836_1_29
32088663_32090768_1_28
Title: how to use recursion in reflection? 
----------------------------------------

private static void writeInLogger (Object obj, String str) {
    if (obj == null) {
        System.out.println (str + "null");
        return;
    }
    Class klazz = obj.getClass ();
    if (klazz.isPrimitive () || obj instanceof String || obj instanceof Integer || obj instanceof Double || obj instanceof Boolean) System.out.println (str + obj.toString ());
    else {
        try {
            for (Field field : klazz.getDeclaredFields ()) {
                field.setAccessible (true);
                Object f = field.get (obj);
                field.setAccessible (false);
                writeInLogger (f, str);
            }
        } catch (IllegalAccessException e) {
            e.printStackTrace ();
        } catch (IllegalArgumentException e) {
            e.printStackTrace ();
        } catch (InvocationTargetException e) {
            e.printStackTrace ();
        } catch (IntrospectionException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

private static void writeInLogger (Object obj, String str) {
    Class klazz = obj.getClass ();
    if (klazz.isPrimitive () || obj instanceof String || obj instanceof Integer || obj instanceof Double || obj instanceof Boolean) System.out.println (str + obj.toString ());
    else {
        try {
            for (PropertyDescriptor propertyDescriptor : Introspector.getBeanInfo (klazz).getPropertyDescriptors ()) {
                if (propertyDescriptor.getWriteMethod () == null) continue;

                Method m = propertyDescriptor.getReadMethod ();
                if (m != null) {
                    Object object = m.invoke (obj);
                    if (object != null) writeInLogger (object, str);

                }
            }
        } catch (IllegalAccessException e) {
            e.printStackTrace ();
        } catch (IllegalArgumentException e) {
            e.printStackTrace ();
        } catch (InvocationTargetException e) {
            e.printStackTrace ();
        } catch (IntrospectionException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32093064_32094233_122_132
32093064_32094233_32_41
Title: Variables for JLabel will not center? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Component component = (Component) e.getSource ();
    if (component == null) {
        return;
    }
    Window win = SwingUtilities.getWindowAncestor (component);
    if (win == null) {
        return;
    }
    win.dispose ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    LoginPanel loginPanel = new LoginPanel (nameField.getText ());
    Window win = SwingUtilities.getWindowAncestor (LoginPanelEg.this);
    JDialog dialog = new JDialog (win, "Successfully Logged In", ModalityType.APPLICATION_MODAL);
    dialog.add (loginPanel);
    dialog.pack ();
    dialog.setLocationRelativeTo (null);
    dialog.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32106290_32123095_18_116
32106290_32123095_78_113
Title: How to get list of followers using Twitter Fabric Android? 
----------------------------------------

public void success (Result < TwitterSession > result) {
    TwitterSession session = Twitter.getSessionManager ().getActiveSession ();
    TwitterAuthToken authToken = session.getAuthToken ();
    String token = authToken.token;
    String secret = authToken.secret;
    System.out.println (result.data.getUserName () + result.data.getUserId ());
    Twitter.getApiClient (session).getAccountService ().verifyCredentials (true, false, new Callback < User > () {
        @Override
        public void success (Result < User > userResult) {
            User user = userResult.data;
            System.out.println (user.profileImageUrl + " " + user.email + "" + user.followersCount);
        }@Override
        public void failure (TwitterException e) {
        }}

    );
    shared.edit ().putString ("tweetToken", token).commit ();
    shared.edit ().putString ("tweetSecret", secret).commit ();
    TwitterAuthClient authClient = new TwitterAuthClient ();
    authClient.requestEmail (session, new Callback < String > () {
        @Override
        public void success (Result < String > result) {
            System.out.println (result.toString ());
            Log.d ("Result", result.toString ());
            Toast.makeText (getApplicationContext (), result.data, Toast.LENGTH_LONG).show ();
        }@Override
        public void failure (TwitterException exception) {
            System.out.println (exception.getMessage ());
        }}

    );
    MyTwitterApiClient apiclients = new MyTwitterApiClient (session);
    apiclients.getCustomService ().list (result.data.getUserId (), new Callback < Response > () {
        @Override
        public void failure (TwitterException arg0) {
        }@Override
        public void success (Result < Response > arg0) {
            BufferedReader reader = null;
            StringBuilder sb = new StringBuilder ();
            try {
                reader = new BufferedReader (new InputStreamReader (arg0.response.getBody ().in ()));
                String line;
                try {
                    while ((line = reader.readLine ()) != null) {
                        sb.append (line);
                    }
                } catch (IOException e) {
                    e.printStackTrace ();
                }
            } catch (IOException e) {
                e.printStackTrace ();
            }
            String result = sb.toString ();
            System.out.println ("Response is>>>>>>>>>" + result);
            try {
                JSONObject obj = new JSONObject (result);
                JSONArray ids = obj.getJSONArray ("ids");
                for (int i = 0;
                i < ids.length (); i ++) {
                    System.out.println ("Id of user " + (i + 1) + " is " + ids.get (i));
                }
            } catch (JSONException e) {
                e.printStackTrace ();
            }
        }}

    );
}
----------------------------------------

public void success (Result < Response > arg0) {
    BufferedReader reader = null;
    StringBuilder sb = new StringBuilder ();
    try {
        reader = new BufferedReader (new InputStreamReader (arg0.response.getBody ().in ()));
        String line;
        try {
            while ((line = reader.readLine ()) != null) {
                sb.append (line);
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    String result = sb.toString ();
    System.out.println ("Response is>>>>>>>>>" + result);
    try {
        JSONObject obj = new JSONObject (result);
        JSONArray ids = obj.getJSONArray ("ids");
        for (int i = 0;
        i < ids.length (); i ++) {
            System.out.println ("Id of user " + (i + 1) + " is " + ids.get (i));
        }
    } catch (JSONException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32107810_32107879_1_27
32107810_32107923_1_15
Title: "Lowercase 'g' in a string is ""happy"" if there is another 'g' immediately next to it" 
----------------------------------------

public boolean gHappy (String str) {
    boolean flag = true;
    if (str == "") return flag;

    if (str.length () <= 2 && ! str.equals ("gg")) {
        return false;
    }
    for (int i = 1;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) == 'g') {
            if (! (str.charAt (i - 1) == 'g' || str.charAt (i + 1) == 'g')) {
                flag = false;
                break;
            }
        } else if ((i == str.length () - 2) && (str.charAt (i + 1) == 'g') && (str.charAt (i) != 'g')) {
            flag = false;
            break;
        }

    }
    return flag;
}
----------------------------------------

public boolean gHappy (String str, char chr) {
    for (int i = 0;
    i < str.length (); i ++) {
        char cmp = str.charAt (i);
        if (cmp == chr && i < (str.length () - 1) && str.charAt (i + 1) == chr) i ++;
        else if (cmp == chr && i > 0 && str.charAt (i - 1) == chr) continue;
        else if (cmp == chr) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32107810_32107879_1_27
32107810_41274866_1_61
Title: "Lowercase 'g' in a string is ""happy"" if there is another 'g' immediately next to it" 
----------------------------------------

public boolean gHappy (String str) {
    boolean flag = true;
    if (str == "") return flag;

    if (str.length () <= 2 && ! str.equals ("gg")) {
        return false;
    }
    for (int i = 1;
    i < str.length () - 1; i ++) {
        if (str.charAt (i) == 'g') {
            if (! (str.charAt (i - 1) == 'g' || str.charAt (i + 1) == 'g')) {
                flag = false;
                break;
            }
        } else if ((i == str.length () - 2) && (str.charAt (i + 1) == 'g') && (str.charAt (i) != 'g')) {
            flag = false;
            break;
        }

    }
    return flag;
}
----------------------------------------

public boolean gHappy (String str) {
    if (str.indexOf ('g') != - 1) {
        if (str.length () >= 3) {
            boolean ret = true;
            if (str.charAt (0) == 'g' && str.charAt (1) != 'g') {
                return false;
            }
            if (str.charAt (str.length () - 1) == 'g' && str.charAt (str.length () - 2) != 'g') {
                return false;
            }
            int incre = 1;
            while (str.indexOf ('g', incre) != - 1) {
                if (str.charAt (str.indexOf ('g', incre) - 1) != 'g' && str.charAt (str.indexOf ('g', incre) + 1) != 'g') {
                    return false;
                } else {
                    incre = str.indexOf ('g', incre) + 2;
                }
            }
            return ret;
        } else if (str.length () == 2) {
            if (str.charAt (0) == 'g' && str.charAt (1) == 'g') {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }

    } else {
        return true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32107810_32107923_1_15
32107810_41274866_1_61
Title: "Lowercase 'g' in a string is ""happy"" if there is another 'g' immediately next to it" 
----------------------------------------

public boolean gHappy (String str, char chr) {
    for (int i = 0;
    i < str.length (); i ++) {
        char cmp = str.charAt (i);
        if (cmp == chr && i < (str.length () - 1) && str.charAt (i + 1) == chr) i ++;
        else if (cmp == chr && i > 0 && str.charAt (i - 1) == chr) continue;
        else if (cmp == chr) return false;

    }
    return true;
}
----------------------------------------

public boolean gHappy (String str) {
    if (str.indexOf ('g') != - 1) {
        if (str.length () >= 3) {
            boolean ret = true;
            if (str.charAt (0) == 'g' && str.charAt (1) != 'g') {
                return false;
            }
            if (str.charAt (str.length () - 1) == 'g' && str.charAt (str.length () - 2) != 'g') {
                return false;
            }
            int incre = 1;
            while (str.indexOf ('g', incre) != - 1) {
                if (str.charAt (str.indexOf ('g', incre) - 1) != 'g' && str.charAt (str.indexOf ('g', incre) + 1) != 'g') {
                    return false;
                } else {
                    incre = str.indexOf ('g', incre) + 2;
                }
            }
            return ret;
        } else if (str.length () == 2) {
            if (str.charAt (0) == 'g' && str.charAt (1) == 'g') {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }

    } else {
        return true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32112969_32113469_1_19
32112969_32114007_1_20
Title: Program that takes a word than searches and prints out the whole string that contains the word 
----------------------------------------

public static void main (final String...args) {
    final String [] strings = {"I am Alive.", "I am Alive...too.", "Are you dead?", "Let's see if it works."};
    int found = - 1;
    System.out.print ("Enter search term > ");
    try (final Scanner scanner = new Scanner (System.in, StandardCharsets.UTF_8.name ())) {
        final String input = scanner.nextLine ();
        for (int i = 0;
        (i < strings.length) && (found < 0); i ++) {
            if (strings [i].contains (input) && (strings [i].contains (".") || strings [i].contains ("?"))) {
                found = i;
            }
        }
    }
    System.out.printf ("%s%n", (found >= 0) ? strings [found] : "Not found");
}
----------------------------------------

public static void main (String [] args) {
    String [] str = {"I am Alive.", "Are you dead?", "Let's see if it works."};
    String search;
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter word");
    search = s.nextLine ();
    boolean found = false;
    for (int i = 0;
    i < str.length; i ++) {
        if (str [i].contains (search)) {
            System.out.println (str [i]);
            found = true;
        }
    }
    if (! found) {
        System.out.println ("Not found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32116995_33994659_43_60
32116995_33994659_66_90
Title: HTML embedded images in PDF 
----------------------------------------

public byte [] findResource (ModuleHandle design, String fileName, int fileType, Map appContext) {
    if (fileName.startsWith ("data:")) {
        final String base64Data = fileName.substring (fileName.indexOf (",") + 1);
        try {
            return Base64.decode (base64Data);
        } catch (Exception e) {
            throw new ExceptionConverter (e);
        }
    } else {
        URL url = design.findResource (fileName, fileType, appContext);
        if (url == null) {
            logger.log (Level.WARNING, MessageConstants.RESOURCE_NOT_ACCESSIBLE, fileName);
            return DUMMY_BYTES;
        }
        return findResource (url);
    }
}
----------------------------------------

public byte [] findResource (URL url) {
    System.out.println ("findResource(URL url)");
    if (url == null) {
        return DUMMY_BYTES;
    }
    synchronized (cache) {
        if (cache == null) {
            return DUMMY_BYTES;
        }
        byte [] inBytes = cache.get (url);
        if (inBytes == null) {
            try {
                InputStream in = url.openStream ();
                inBytes = getByteArrayFromInputStream (in);
                in.close ();
                cache.put (url, inBytes);
            } catch (IOException e) {
                logger.log (Level.WARNING, MessageConstants.RESOURCE_NOT_ACCESSIBLE, url.toExternalForm ());
                cache.put (url, DUMMY_BYTES);
                return DUMMY_BYTES;
            }
        }
        return inBytes;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32124676_32145036_1_7
32124676_32145036_9_15
Title: Send and not send a file using annotation Post on Jax-Rs 
----------------------------------------

@POST
@Path ("makesomething")
@Consumes (MediaType.MULTIPART_FORM_DATA)
@Produces (MediaType.TEXT_PLAIN)
public String makesomething (@FormDataParam ("file")
InputStream uploadedInputStream,@FormDataParam ("file")
FormDataContentDisposition fileDetail,@FormDataParam ("variable")
String variable,@Context
HttpServletRequest request) throws IOException {
    makeSomethingImpl (uploadedInputStream, fileDetail, variable, request);
}
----------------------------------------

@POST
@Path ("makesomething")
@Consumes (MediaType.APPLICATION_FORM_URLENCODED)
@Produces (MediaType.TEXT_PLAIN)
public String makesomething (@FormDataParam ("variable")
String variable,@Context
HttpServletRequest request) throws IOException {
    makeSomethingImpl (null, null, variable, request);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32140939_32149339_21_30
32140939_32149339_32_52
Title: Using the 'DataView' Wicket when I delete one item the entire list is excluded 
----------------------------------------

public CustomerProvider (List < Customer > customerList) {
    Customer latest = new Customer ();
    latest.setId (2000);
    latest.setLastName ("LMN");
    latest.setFirstName ("OPQ");
    latest.setAge (30);
    customerList.add (latest);
    setSort ("firstName", SortOrder.ASCENDING);
}
----------------------------------------

public CustomerProvider () {
    Customer latest = new Customer ();
    latest.setId (1000);
    latest.setLastName ("XYZ");
    latest.setFirstName ("ABC");
    latest.setAge (20);
    customerList.add (latest);
    latest = new Customer ();
    latest.setId (2000);
    latest.setLastName ("LMN");
    latest.setFirstName ("OPQ");
    latest.setAge (30);
    customerList.add (latest);
    setSort ("firstName", SortOrder.ASCENDING);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32142021_32142302_1_12
32142021_32142384_8_19
Title: Java Exception: Array indexes out of bounds 
----------------------------------------

public static void lasveg (Integer a [], int n) {
    int i, j;
    boolean chk = true;
    while (chk) {
        i = (randomGenerator.nextInt ()) % n + 1;
        j = (randomGenerator.nextInt ()) % n + 1;
        if ((i != j) && (a [i].equals (a [j]))) System.out.println ("The repeated element is : " + i);

    }
}
----------------------------------------

public static void lasveg (Integer a [], int n) {
    int i, j;
    boolean chk = true;
    while (chk) {
        i = Math.abs (randomGenerator.nextInt ()) % n;
        j = Math.abs (randomGenerator.nextInt ()) % n;
        if ((i != j) && (a [i].equals (a [j]))) {
            System.out.println ("The repeated element is : " + i);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32144480_32155768_43_55
32144480_32155768_86_95
Title: Testing disk performance: differs with and without using Java 
----------------------------------------

public void write (File f) throws IOException {
    FileChannel fc = new FileOutputStream (f).getChannel ();
    try {
        for (int i = 0;
        i < blocks; i ++) {
            directBuffer.clear ();
            while (directBuffer.remaining () > 0) {
                fc.write (directBuffer);
            }
        }
    } finally {
        fc.close ();
    }
}
----------------------------------------

public void write (File f) throws IOException {
    FileOutputStream out = new FileOutputStream (f);
    try {
        for (int i = 0;
        i < blocks; i ++) {
            out.write (buffer);
        }
    } finally {
        out.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32144480_32155768_56_76
32144480_32155768_96_112
Title: Testing disk performance: differs with and without using Java 
----------------------------------------

public long read (File f) throws IOException {
    ByteBuffer buffer = ByteBuffer.allocateDirect (BLOCK_SIZE);
    FileChannel fc = new FileInputStream (f).getChannel ();
    long checksum = 0;
    try {
        for (int i = 0;
        i < blocks; i ++) {
            buffer.clear ();
            while (buffer.hasRemaining ()) {
                fc.read (buffer);
            }
            buffer.flip ();
            while (buffer.hasRemaining ()) {
                buffer.get (acceptBuffer, 0, Math.min (acceptBuffer.length, buffer.remaining ()));
                checksum += acceptBuffer [acceptBuffer [0]];
            }
        }
    } finally {
        fc.close ();
    }
    return checksum;
}
----------------------------------------

public long read (File f) throws IOException {
    FileInputStream in = new FileInputStream (f);
    long checksum = 0;
    try {
        for (int i = 0;
        i < blocks; i ++) {
            for (int remaining = acceptBuffer.length, read;
            (read = in.read (buffer)) != - 1 && (remaining -= read) > 0;) {
                in.read (acceptBuffer, acceptBuffer.length - remaining, remaining);
            }
            checksum += acceptBuffer [acceptBuffer [0]];
        }
    } finally {
        in.close ();
    }
    return checksum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3214597_3214771_109_121
3214597_3230004_90_108
Title: how to terminate retrieval from a blocking queue 
----------------------------------------

public void run () {
    int random = ExecutorTask.random.nextInt (500);
    try {
        Thread.sleep (random);
    } catch (InterruptedException ignore) {
    }
    final int COUNT = 5;
    for (int idx = 0;
    idx < COUNT; ++ idx) results.add (name + ':' + random + ':' + (idx + 1));

    results.add (MARKER);
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
        Random randomX = new Random ();
        for (int i = 0;
        i < 5; i ++) {
            synchronized (syncObject) {
                Thread.sleep (randomX.nextInt (10) + 1);
                queue.add ((T) (name + ":" + ":" + i));
                syncObject.notify ();
            }
        }
        callback.callback ((T) (name + ": Done"));
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32148443_32148878_1_12
32148443_32149184_1_12
Title: how do i calculate the mean for my code 
----------------------------------------

public static String getAverageAttendance (Team team) {
    double [] attendences = new doble [result.size ()];
    for (int i = 0;
    i < result.size (); i ++) {
        Match att = results.get (i);
        if (att != null && att.getTeamName ().equals (team.getName ())) {
            attendences [i] = getAdjustedAttendence (att);
        }
    }
    return mean (attendences);
}
----------------------------------------

public static String getAverageAttendance (Team team) {
    double totalCrowds = 0.0;
    int totalMatches = 0;
    for (Match match : results) {
        if (match.getTeamName ().equals (team.getName ())) {
            totalCrowds += match.getAttendance ();
            totalMatches ++;
        }
    }
    double averageAttendance = totalMatches > 0 ? totalCrowds / totalMatches : 0.0;
    return String.valueOf (averageAttendance);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32150673_32150701_1_27
32150673_32150728_1_23
Title: "Remove the middle element if the array length is odd or the middle two elements if the length is even." 
----------------------------------------

public int [] removeMiddle (int [] values) {
    boolean even = (values.length % 2 == 0);
    int middle1 = values.length / 2;
    int middle2 = values.length / 2 - 1;
    if (even) {
        int [] copy = new int [values.length - 2];
        System.arraycopy (values, 0, copy, 0, copy.length - middle1 - 1);
        System.arraycopy (values, middle1 + 1, copy, middle1, copy.length - middle2 - 1);
        return copy;
    } else {
        int [] copy = new int [values.length - 1];
        System.arraycopy (values, 0, copy, 0, copy.length - middle1 - 1);
        System.arraycopy (values, middle1 + 1, copy, middle1 + 1, copy.length - middle1 - 1);
        return copy;
    }
}
----------------------------------------

public void removeMiddle (int [] values) {
    boolean even = (values.length % 2 == 0);
    int middle1 = values.length / 2;
    int middle2 = values.length / 2 - 1;
    if (even) {
        int [] copy = new int [values.length - 2];
        System.arraycopy (values, 0, copy, 0, copy.length - middle1 - 1);
        System.arraycopy (values, middle1, copy, middle2, copy.length - middle1 - 1);
    } else {
        int [] copy = new int [values.length - 1];
        System.arraycopy (copy, 0, copy, 0, copy.length - middle1 - 1);
        System.arraycopy (copy, middle1, copy, middle1, copy.length - middle1 - 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32154017_32154124_1_33
32154017_32154180_1_26
Title: Reading input in a predefined order 
----------------------------------------

public void read () throws IOException {
    PerformCheck pc = new PerformCheck ();
    Scanner sc = new Scanner (new File ("input.txt"));
    sc.useDelimiter (",");
    String url = "";
    String res = "";
    boolean lock = true;
    ArrayList < String > tmp = new ArrayList < String > ();
    while (sc.hasNext ()) {
        String s = sc.next ().trim ();
        boolean isHttp = s.contains ("http");
        if (isHttp && lock) {
            url = s;
            lock = false;
        } else if (isHttp) {
            result = pc.perform (url, tmp);
            url = s;
            tmp = new ArrayList < String > ();
        } else {
            tmp.add (s);
        }

    }
    if (tmp.size () > 0) {
        result = pc.perform (url, tmp);
    }
    sc.close ();
}
----------------------------------------

public void read () throws IOException {
    PerformCheck pc = new PerformCheck ();
    Scanner sc = new Scanner (new File ("input.txt"));
    sc.useDelimiter (",");
    String url = "";
    String res = "";
    boolean firstURLFound = false;
    List < String > tmp = new ArrayList < String > ();
    while (sc.hasNext ()) {
        String s = sc.next ().trim ();
        if (firstURLFound && s.contains ("http")) {
            result = pc.perform (url, tmp);
            url = "";
            tmp = new ArrayList < String > ();
            firstURLFound = false;
        }
        if (s.contains ("http")) {
            firstURLFound = true;
            url = s;
        } else {
            tmp.add (s);
        }
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32157475_32157623_1_14
32157475_32162786_1_16
Title: Generate arrays from a fixed step recursively 
----------------------------------------

public void foo (double [] inatt, double [] outatt, double step, int d) {
    if (d == inatt.length) {
        System.out.println (Arrays.toString (outatt));
    } else {
        outatt [d] = inatt [d] + step;
        foo (inatt, outatt, step, d + 1);
        outatt [d] = inatt [d] - step;
        foo (inatt, outatt, step, d + 1);
    }
}
----------------------------------------

public static void foo (double [] inatt, double [] outatt, double step, int d) {
    if (d == inatt.length) {
        System.out.println (Arrays.toString (outatt));
    } else {
        outatt [d] = inatt [d] + step;
        foo (inatt, outatt, step, d + 1);
        outatt [d] = inatt [d] - step;
        foo (inatt, outatt, step, d + 1);
        outatt [d] = inatt [d];
        foo (inatt, outatt, step, d + 1);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32162861_32162894_1_10
32162861_32162984_1_13
Title: Iterating over an ArrayList adding values 
----------------------------------------

public static List < Double > sumBlocks (List < Double > list, int blockSize) {
    List < Double > ret = new ArrayList < > ();
    for (int i = 0;
    i < list.size (); i += blockSize) {
        double sum = 0;
        for (int j = 0, len = Math.min (list.size () - i, blockSize);
        j < len; j ++) sum += list.get (i + j);

        ret.add (sum);
    }
    return ret;
}
----------------------------------------

public static List < Double > sumBlocks (List < Double > list, int blockSize) {
    List < Double > result = new ArrayList < > ();
    double sum = 0d;
    for (int i = 0;
    i < list.size (); i ++) {
        if (i > 0 && i % blockSize == 0) {
            result.add (sum);
            sum = 0d;
        }
        sum += list.get (i);
    }
    result.add (sum);
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32171208_32171254_1_19
32171208_32171325_1_35
Title: IndexOutOfBoundsException: I don't see in my while loop 
----------------------------------------

public void roundRobin2 (List < Jobs > jobs, int startSize) {
    double counter = 0;
    double compTime = 0;
    Deque < Jobs > uncompletedJobs = new LinkedList < > (jobs);
    while (! uncompletedJobs.isEmpty ()) {
        Job job = uncompletedJobs.pop ();
        int taskTime = job.jobTime >= 2 ? 2 : 1;
        job.jobTime -= taskTime;
        counter += taskTime;
        if (job.jobTime == 0) {
            compTime += counter;
        } else {
            uncompletedJobs.addLast (job);
        }
    }
    jobs.clear ();
    System.out.println ("\n\nAverage completion times: " + compTime + "/" + startSize + " = " + ((compTime) / startSize));
}
----------------------------------------

public static void roundRobin2 (ArrayList < Jobs > c, int startSize) {
    double counter = 0;
    double compTime = 0;
    while (! c.isEmpty ()) {
        System.out.println (c);
        for (Jobs jobs : c) {
            if (jobs.jobTime >= 2) {
                jobs.jobTime -= 2;
                counter += 2;
            } else {
                jobs.jobTime -= 1;
                counter += 1;
            }
            if (jobs.jobTime == 0) {
                compTime += counter;
            }
        }
        for (Iterator < Jobs > jobsIter = c.iterator ();
        jobsIter.hasNext ();) {
            Jobs jobs = jobsIter.next ();
            if (jobs.jobTime == 0) {
                jobsIter.remove ();
            }
        }
    }
    System.out.println ("\n\nAverage completion times: " + compTime + "/" + startSize + " = " + (compTime / startSize));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32173548_32173764_18_32
32173548_32173965_17_53
Title: Detecting when the mouse has 'stopped moving' in JavaFX using FXML 
----------------------------------------

public void start (Stage primaryStage) {
    Group root = new Group ();
    infoLabel = new Label ();
    root.getChildren ().add (infoLabel);
    scene = new Scene (root, 640, 480);
    primaryStage.setScene (scene);
    primaryStage.show ();
    addInputListeners ();
}
----------------------------------------

public void start (Stage primaryStage) {
    Pane pane = new Pane ();
    ObjectProperty < Point2D > mouseLocation = new SimpleObjectProperty < > (new Point2D (0, 0));
    pane.setOnMouseMoved (e -> mouseLocation.set (new Point2D (e.getX (), e.getY ())));
    BooleanProperty mouseMoving = new SimpleBooleanProperty ();
    mouseMoving.addListener ((obs, wasMoving, isNowMoving) -> {
        if (! isNowMoving) {
            System.out.println ("Mouse stopped!");
        }
    });
    AnimationTimer timer = new AnimationTimer () {
        private double lastMouseX;
        private double lastMouseY;
        long lastMouseMovement;
        @Override
        public void handle (long timestamp) {
            double x = mouseLocation.get ().getX ();
            double y = mouseLocation.get ().getY ();
            if (Double.doubleToLongBits (lastMouseX) != Double.doubleToLongBits (x) || Double.doubleToLongBits (lastMouseY) != Double.doubleToLongBits (y)) {
                lastMouseMovement = timestamp;
            }
            mouseMoving.set (timestamp - lastMouseMovement < MIN_STATIONARY_TIME);
            lastMouseX = x;
            lastMouseY = y;
        }}

    ;
    timer.start ();
    Scene scene = new Scene (pane, 600, 600);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32173548_32173764_61_78
32173548_32173965_34_46
Title: Detecting when the mouse has 'stopped moving' in JavaFX using FXML 
----------------------------------------

public void handle (long now) {
    currX = mouseStatus.x;
    currY = mouseStatus.y;
    currNs = now;
    if (currNs - prevNs > deltaNs) {
        if (prevX == currX && prevY == currY) {
            infoLabel.setText ("Stopped");
        }
        prevX = currX;
        prevY = currY;
        prevNs = currNs;
    }
}
----------------------------------------

public void handle (long timestamp) {
    double x = mouseLocation.get ().getX ();
    double y = mouseLocation.get ().getY ();
    if (Double.doubleToLongBits (lastMouseX) != Double.doubleToLongBits (x) || Double.doubleToLongBits (lastMouseY) != Double.doubleToLongBits (y)) {
        lastMouseMovement = timestamp;
    }
    mouseMoving.set (timestamp - lastMouseMovement < MIN_STATIONARY_TIME);
    lastMouseX = x;
    lastMouseY = y;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32175189_32175229_22_42
32175189_32175641_16_37
Title: set Inflate layout to smaller 
----------------------------------------

public void onClick (View v) {
    if (! FieldsValidator.validateUsername (edtUserNameDialog)) {
    } else if (! checkDMSID ()) {
        KeyboardUtils.hideKeyboard (edtUserNameDialog);
        dialog.dismiss ();
    } else {
        KeyboardUtils.hideKeyboard (edtUserNameDialog);
        forgotPassword (edtUserNameDialog.getText ().toString ());
        dialog.dismiss ();
    }

}
----------------------------------------

public void onClick (View arg0) {
    final Dialog openDialog = new Dialog (MainActivity.this);
    openDialog.setContentView (R.layout.main);
    openDialog.setTitle ("Confirm Exit");
    TextView dialogTextContent = (TextView) openDialog.findViewById (R.id.exitimage);
    Button dialogExitButton = (Button) openDialog.findViewById (R.id.buttonexityes);
    dialogExitButton.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            finish ();
        }}

    );
    Button dialogCloseButton = (Button) openDialog.findViewById (R.id.buttonexitno);
    dialogCloseButton.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            openDialog.dismiss ();
        }}

    );
    openDialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32188676_32234255_34_57
32188676_32316351_198_217
Title: javafx: How can I make TableCell Edit return double instead of string and the font changes color based on a condition? 
----------------------------------------

public void updateItem (Double item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        Locale locale = new Locale ("en", "UK");
        String pattern = "###,###.###";
        DecimalFormat df = (DecimalFormat) NumberFormat.getNumberInstance (locale);
        df.applyPattern (pattern);
        String s = df.format (getItem ());
        setText (s);
        setGraphic (null);
        TableRow < Trade > row = getTableRow ();
        if (row.getItem ().getCaution ()) {
            setStyle ("-fx-background-color:blue;");
        } else {
            setStyle ("-fx-background-color: red;");
        }
    }
}
----------------------------------------

public void updateItem (Double item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        if (isEditing ()) {
            if (textField != null) {
                textField.setText (getString ());
            }
            setText (null);
            setGraphic (textField);
        } else {
            setText (getString ());
            setGraphic (null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32189598_32190064_1_26
32189598_32191472_1_19
Title: "Program printing ""null"" when trying to find the middle word in a set of three Strings" 
----------------------------------------

public static String middleWord (String word1, String word2, String word3) {
    for (int i = 0;
    (i < word1.length () || i < word2.length () || i < word3.length ()); i ++) {
        char ch1 = 10000;
        char ch2 = 10000;
        char ch3 = 10000;
        if (word1.length () > i) {
            ch1 = word1.charAt (i);
        }
        if (word2.length () > i) {
            ch2 = word2.charAt (i);
        }
        if (word3.length () > i) {
            ch3 = word3.charAt (i);
        }
        if (ch1 <= ch2 && ch2 <= ch3) {
            return word2;
        } else if (ch2 <= ch1 && ch1 <= ch3) {
            return word1;
        } else if (ch1 <= ch3 && ch3 <= ch2) {
            return word3;
        }

    }
    return null;
}
----------------------------------------

public static String middleWord (String word1, String word2, String word3) {
    int cmp12 = compareWords (word1, word2);
    int cmp13 = compareWords (word1, word3);
    int cmp23 = compareWords (word2, word3);
    if (cmp12 == 0 || cmp13 == 0 || cmp23 == 0) throw new IllegalArgumentException ("Found equal words: " + word1 + ", " + word2 + ", " + word3);

    if (cmp12 < 0) {
        if (cmp23 < 0) return word2;

        if (cmp13 < 0) return word3;

        return word1;
    }
    if (cmp13 < 0) return word1;

    if (cmp23 < 0) return word3;

    return word2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32189598_32190064_1_26
32189598_35549696_1_80
Title: "Program printing ""null"" when trying to find the middle word in a set of three Strings" 
----------------------------------------

public static String middleWord (String word1, String word2, String word3) {
    for (int i = 0;
    (i < word1.length () || i < word2.length () || i < word3.length ()); i ++) {
        char ch1 = 10000;
        char ch2 = 10000;
        char ch3 = 10000;
        if (word1.length () > i) {
            ch1 = word1.charAt (i);
        }
        if (word2.length () > i) {
            ch2 = word2.charAt (i);
        }
        if (word3.length () > i) {
            ch3 = word3.charAt (i);
        }
        if (ch1 <= ch2 && ch2 <= ch3) {
            return word2;
        } else if (ch2 <= ch1 && ch1 <= ch3) {
            return word1;
        } else if (ch1 <= ch3 && ch3 <= ch2) {
            return word3;
        }

    }
    return null;
}
----------------------------------------

public String middleWord (String word1, String word2, String word3) {
    int i = 0;
    int j = 0;
    int k = 0;
    char ch1 = '\u0000';
    char ch2 = '\u0000';
    char ch3 = '\u0000';
    while (i < word1.length () || j < word2.length () || k < word3.length ()) {
        if (i < word1.length ()) {
            ch1 = word1.charAt (i ++);
        }
        if (j < word2.length ()) {
            ch2 = word2.charAt (j ++);
        }
        if (k < word3.length ()) {
            ch3 = word3.charAt (k ++);
        }
        if (ch2 > ch1 && ch2 < ch3) return word2;

        if (ch1 > ch2 && ch1 < ch3) return word1;

        if (ch3 > ch1 && ch3 < ch2) return word3;

        if (ch1 == ch2) {
            i ++;
            j ++;
            while (i < word1.length () || j < word2.length ()) {
                if (i < word1.length ()) {
                    ch1 = word1.charAt (i);
                    i ++;
                }
                if (j < word2.length ()) {
                    ch2 = word2.charAt (j);
                    j ++;
                }
                if (ch2 > ch1) return word2;
                else return word1;

            }
        } else if (ch2 == ch3) {
            j ++;
            k ++;
            while (j < word2.length () || k < word3.length ()) {
                if (j < word2.length ()) {
                    ch1 = word1.charAt (j);
                    j ++;
                }
                if (k < word3.length ()) {
                    ch2 = word2.charAt (k);
                    k ++;
                }
                if (ch2 > ch1) return word3;
                else return word2;

            }
        } else if (ch1 == ch3) {
            i ++;
            k ++;
            while (i < word1.length () || k < word3.length ()) {
                if (i < word1.length ()) {
                    ch1 = word1.charAt (i);
                    i ++;
                }
                if (k < word3.length ()) {
                    ch2 = word3.charAt (k);
                    k ++;
                }
                if (ch2 > ch1) return word3;
                else return word1;

            }
        }

    }
    return "bad";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32189598_32191472_1_19
32189598_35549696_1_80
Title: "Program printing ""null"" when trying to find the middle word in a set of three Strings" 
----------------------------------------

public static String middleWord (String word1, String word2, String word3) {
    int cmp12 = compareWords (word1, word2);
    int cmp13 = compareWords (word1, word3);
    int cmp23 = compareWords (word2, word3);
    if (cmp12 == 0 || cmp13 == 0 || cmp23 == 0) throw new IllegalArgumentException ("Found equal words: " + word1 + ", " + word2 + ", " + word3);

    if (cmp12 < 0) {
        if (cmp23 < 0) return word2;

        if (cmp13 < 0) return word3;

        return word1;
    }
    if (cmp13 < 0) return word1;

    if (cmp23 < 0) return word3;

    return word2;
}
----------------------------------------

public String middleWord (String word1, String word2, String word3) {
    int i = 0;
    int j = 0;
    int k = 0;
    char ch1 = '\u0000';
    char ch2 = '\u0000';
    char ch3 = '\u0000';
    while (i < word1.length () || j < word2.length () || k < word3.length ()) {
        if (i < word1.length ()) {
            ch1 = word1.charAt (i ++);
        }
        if (j < word2.length ()) {
            ch2 = word2.charAt (j ++);
        }
        if (k < word3.length ()) {
            ch3 = word3.charAt (k ++);
        }
        if (ch2 > ch1 && ch2 < ch3) return word2;

        if (ch1 > ch2 && ch1 < ch3) return word1;

        if (ch3 > ch1 && ch3 < ch2) return word3;

        if (ch1 == ch2) {
            i ++;
            j ++;
            while (i < word1.length () || j < word2.length ()) {
                if (i < word1.length ()) {
                    ch1 = word1.charAt (i);
                    i ++;
                }
                if (j < word2.length ()) {
                    ch2 = word2.charAt (j);
                    j ++;
                }
                if (ch2 > ch1) return word2;
                else return word1;

            }
        } else if (ch2 == ch3) {
            j ++;
            k ++;
            while (j < word2.length () || k < word3.length ()) {
                if (j < word2.length ()) {
                    ch1 = word1.charAt (j);
                    j ++;
                }
                if (k < word3.length ()) {
                    ch2 = word2.charAt (k);
                    k ++;
                }
                if (ch2 > ch1) return word3;
                else return word2;

            }
        } else if (ch1 == ch3) {
            i ++;
            k ++;
            while (i < word1.length () || k < word3.length ()) {
                if (i < word1.length ()) {
                    ch1 = word1.charAt (i);
                    i ++;
                }
                if (k < word3.length ()) {
                    ch2 = word3.charAt (k);
                    k ++;
                }
                if (ch2 > ch1) return word3;
                else return word1;

            }
        }

    }
    return "bad";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32197513_32197625_1_19
32197513_32197710_6_22
Title: "java user-defined array (and user-defined array size) returning [null null null ...]" 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("How many employees for the week?: ");
    int numberOfEmps = scan.nextInt ();
    if (numberOfEmps > 0) {
        System.out.println ("\nEnter names of workers up to the entered amount (" + numberOfEmps + "):");
        String [] namesArray = new String [numberOfEmps];
        for (int i = 0;
        i < numberOfEmps; i ++) {
            namesArray [i] = scan.next ();
        }
        System.out.println (Arrays.toString (namesArray));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("How many employees for the week?: ");
    int numberOfEmps = scan.nextInt ();
    int [] nOEarray = new int [numberOfEmps];
    System.out.println ("\nEnter names of workers up to the entered amount (" + numberOfEmps + "):");
    String [] namesArray = new String [numberOfEmps];
    for (int i = 0;
    i < numberOfEmps; i ++) {
        namesArray [i] = scan.next ();
    }
    System.out.println (Arrays.toString (namesArray));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32198956_32308097_6_43
32198956_38801717_16_53
Title: Javafx combobox not updating dropdown size upon change on realtime? 
----------------------------------------

public void start (Stage primaryStage) throws IOException {
    VBox vbox = new VBox ();
    vbox.setSpacing (10);
    vbox.setAlignment (Pos.CENTER);
    ComboBox < String > box = new ComboBox < > ();
    box.setPrefWidth (200);
    box.setVisibleRowCount (10);
    Button add = new Button ("Add");
    Button remove = new Button ("Remove");
    add.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            box.getItems ().add ("Item " + index ++);
        }}

    );
    remove.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent event) {
            if (index > 0) box.getItems ().remove (-- index);

        }}

    );
    vbox.getChildren ().addAll (add, remove, box);
    Scene scene = new Scene (vbox);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (final Stage primaryStage) throws Exception {
    primaryStage.centerOnScreen ();
    primaryStage.setHeight (200);
    primaryStage.setWidth (300);
    List < String > list1 = new ArrayList < > ();
    list1.add ("one");
    list1.add ("two");
    list1.add ("three");
    List < String > list2 = new ArrayList < > ();
    list2.add ("one");
    list2.add ("two");
    list2.add ("three");
    list2.add ("four");
    final ComboBox < String > combo = new ComboBox < String > ();
    combo.getItems ().setAll (list1);
    Button button = new Button ("Change combo contents");
    button.setOnAction (event -> {
        if (combo.getItems ().size () == 3) {
            combo.getItems ().setAll (list2);
        } else {
            combo.getItems ().setAll (list1);
        }
        combo.show ();
    });
    VBox box = new VBox (20, combo, button);
    box.setMaxSize (Region.USE_PREF_SIZE, Region.USE_PREF_SIZE);
    primaryStage.setScene (new Scene (new StackPane (box)));
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32204953_32205493_1_27
32204953_50470194_1_11
Title: Validating Java 8 dates 
----------------------------------------

public static final boolean validateInputDate (final String isoDate) {
    String [] dateProperties = isoDate.split ("-");
    if (dateProperties != null) {
        int year = Integer.parseInt (dateProperties [0]);
        int month = dateProperties.length > 1 ? Integer.parseInt (dateProperties [1]) : 1;
        int day = dateProperties.length > 2 ? Integer.parseInt (dateProperties [2]) : 1;
        try {
            LocalDate.of (year, month, day);
            return true;
        } catch (DateTimeException e) {
            return false;
        }
    }
    return false;
}
----------------------------------------

public static final boolean validateInputDate (final String isoDate, final String dateFormat) {
    final SimpleDateFormat simpleDateFormat = new SimpleDateFormat (dateFormat);
    try {
        final Date date = simpleDateFormat.parse (isoDate);
        System.out.println ("Date: " + date);
        return true;
    } catch (ParseException e) {
        e.printStackTrace ();
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32216883_32216920_1_24
32216883_32216928_2_22
Title: Program is exiting at the wrong time 
----------------------------------------

public static void main (String [] args) {
    System.out.printf ("Please Enter the first number%n");
    float num1 = keyboard.nextFloat ();
    if (num1 == 999) {
        System.exit (0);
    }
    System.out.printf ("Please enter the second number%n");
    float num2 = keyboard.nextFloat ();
    if (num2 == 999) {
        System.exit (0);
    }
    System.out.printf ("Please enter the third number%n");
    float num3 = keyboard.nextFloat ();
    if (num3 == 999) {
        System.exit (0);
    }
    float sum = (num1 + num2 + num3);
    float average = (num1 + num2 + num3) / 3;
    System.out.printf ("Sum: %.0f %nAverage: %.2f", sum, average);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    float num1;
    float num2;
    float num3;
    while (true) {
        num1 = keyboard.nextFloat ();
        if (num1 == 999) {
            break;
        }
        num2 = keyboard.nextFloat ();
        if (num2 == 999) {
            break;
        }
        num3 = keyboard.nextFloat ();
        if (num3 == 999) {
            break;
        }
        System.out.println ("The average is: " + (num1 + num2 + num3) / 3);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32217975_32218028_5_20
32217975_32218107_3_21
Title: No such element exception 
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    int ch;
    do {
        System.out.print ("ENTER YOUR CHOICE : ");
        ch = s.nextInt ();
        switch (ch) {
            case 1 :
                System.out.println ("one");
                break;
            default :
                System.out.println ("\n!!!ENTER VALID CHOICE !!!");
        }
    } while (ch != 9);
    s.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    int ch;
    do {
        System.out.print ("ENTER YOUR CHOICE : ");
        ch = s.nextInt ();
        switch (ch) {
            case 1 :
                System.out.println ("one");
                break;
            default :
                System.out.println ("\n!!!ENTER VALID CHOICE !!!");
                break;
        }
    } while (ch != 9);
    s.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32218419_32218705_3_12
32218419_32218912_1_17
Title: How i can access inner class variable value using reflection in java? 
----------------------------------------

public static void main (String arf []) throws ClassNotFoundException {
    Class < ? > clazz = Class.forName ("C");
    Class < ? > [] arr = clazz.getDeclaredClasses ();
    System.out.println (arr.length);
    String [] classAsStrings = new String [arr.length];
    for (int i = 0;
    i < arr.length; i ++) {
        classAsStrings [i] = arr [i].getSimpleName ();
    }
    System.out.println (Arrays.toString (classAsStrings));
}
----------------------------------------

public static void main (String [] args) {
    Class klass = Constants.class;
    Class [] cs = klass.getClasses ();
    for (Class c : cs) {
        System.out.println (c.getName ());
        Field [] fields = c.getDeclaredFields ();
        for (Field f : fields) {
            try {
                Object o = f.get (c);
                System.out.println ("\t" + f.get (c).toString () + " -- " + f.getName ());
            } catch (Exception e) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_139_153
32220042_32415609_158_173
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    nodeDragContext.mouseAnchorX = event.getSceneX ();
    nodeDragContext.mouseAnchorY = event.getSceneY ();
    Node node = (Node) event.getSource ();
    nodeDragContext.translateAnchorX = node.getTranslateX ();
    nodeDragContext.translateAnchorY = node.getTranslateY ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    double scale = canvas.getScale ();
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.translateAnchorX + ((event.getSceneX () - nodeDragContext.mouseAnchorX) / scale));
    node.setTranslateY (nodeDragContext.translateAnchorY + ((event.getSceneY () - nodeDragContext.mouseAnchorY) / scale));
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_139_153
32220042_32415609_243_269
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    nodeDragContext.mouseAnchorX = event.getSceneX ();
    nodeDragContext.mouseAnchorY = event.getSceneY ();
    Node node = (Node) event.getSource ();
    nodeDragContext.translateAnchorX = node.getTranslateX ();
    nodeDragContext.translateAnchorY = node.getTranslateY ();
}
----------------------------------------

public void handle (ScrollEvent event) {
    double delta = 1.2;
    double scale = canvas.getScale ();
    double oldScale = scale;
    if (event.getDeltaY () < 0) scale /= delta;
    else scale *= delta;

    scale = clamp (scale, MIN_SCALE, MAX_SCALE);
    double f = (scale / oldScale) - 1;
    double dx = (event.getSceneX () - (canvas.getBoundsInParent ().getWidth () / 2 + canvas.getBoundsInParent ().getMinX ()));
    double dy = (event.getSceneY () - (canvas.getBoundsInParent ().getHeight () / 2 + canvas.getBoundsInParent ().getMinY ()));
    canvas.setScale (scale);
    canvas.setPivot (f * dx, f * dy);
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_139_153
32220042_33013650_32_46
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    nodeDragContext.mouseAnchorX = event.getSceneX ();
    nodeDragContext.mouseAnchorY = event.getSceneY ();
    Node node = (Node) event.getSource ();
    nodeDragContext.translateAnchorX = node.getTranslateX ();
    nodeDragContext.translateAnchorY = node.getTranslateY ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    nodeDragContext.setMouseAnchorX (event.getSceneX ());
    nodeDragContext.setMouseAnchorY (event.getSceneY ());
    Node node = (Node) event.getSource ();
    nodeDragContext.setTranslateAnchorX (node.getTranslateX ());
    nodeDragContext.setTranslateAnchorY (node.getTranslateY ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_139_153
32220042_33013650_51_60
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    nodeDragContext.mouseAnchorX = event.getSceneX ();
    nodeDragContext.mouseAnchorY = event.getSceneY ();
    Node node = (Node) event.getSource ();
    nodeDragContext.translateAnchorX = node.getTranslateX ();
    nodeDragContext.translateAnchorY = node.getTranslateY ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.getTranslateAnchorX () + ((event.getSceneX () - nodeDragContext.getMouseAnchorX ()) / getScale ()));
    node.setTranslateY (nodeDragContext.getTranslateAnchorY () + ((event.getSceneY () - nodeDragContext.getMouseAnchorY ()) / getScale ()));
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_158_173
32220042_32415609_243_269
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    double scale = canvas.getScale ();
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.translateAnchorX + ((event.getSceneX () - nodeDragContext.mouseAnchorX) / scale));
    node.setTranslateY (nodeDragContext.translateAnchorY + ((event.getSceneY () - nodeDragContext.mouseAnchorY) / scale));
    event.consume ();
}
----------------------------------------

public void handle (ScrollEvent event) {
    double delta = 1.2;
    double scale = canvas.getScale ();
    double oldScale = scale;
    if (event.getDeltaY () < 0) scale /= delta;
    else scale *= delta;

    scale = clamp (scale, MIN_SCALE, MAX_SCALE);
    double f = (scale / oldScale) - 1;
    double dx = (event.getSceneX () - (canvas.getBoundsInParent ().getWidth () / 2 + canvas.getBoundsInParent ().getMinX ()));
    double dy = (event.getSceneY () - (canvas.getBoundsInParent ().getHeight () / 2 + canvas.getBoundsInParent ().getMinY ()));
    canvas.setScale (scale);
    canvas.setPivot (f * dx, f * dy);
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_158_173
32220042_33013650_32_46
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    double scale = canvas.getScale ();
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.translateAnchorX + ((event.getSceneX () - nodeDragContext.mouseAnchorX) / scale));
    node.setTranslateY (nodeDragContext.translateAnchorY + ((event.getSceneY () - nodeDragContext.mouseAnchorY) / scale));
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    nodeDragContext.setMouseAnchorX (event.getSceneX ());
    nodeDragContext.setMouseAnchorY (event.getSceneY ());
    Node node = (Node) event.getSource ();
    nodeDragContext.setTranslateAnchorX (node.getTranslateX ());
    nodeDragContext.setTranslateAnchorY (node.getTranslateY ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_158_173
32220042_33013650_51_60
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) return;

    double scale = canvas.getScale ();
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.translateAnchorX + ((event.getSceneX () - nodeDragContext.mouseAnchorX) / scale));
    node.setTranslateY (nodeDragContext.translateAnchorY + ((event.getSceneY () - nodeDragContext.mouseAnchorY) / scale));
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.getTranslateAnchorX () + ((event.getSceneX () - nodeDragContext.getMouseAnchorX ()) / getScale ()));
    node.setTranslateY (nodeDragContext.getTranslateAnchorY () + ((event.getSceneY () - nodeDragContext.getMouseAnchorY ()) / getScale ()));
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_243_269
32220042_33013650_32_46
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (ScrollEvent event) {
    double delta = 1.2;
    double scale = canvas.getScale ();
    double oldScale = scale;
    if (event.getDeltaY () < 0) scale /= delta;
    else scale *= delta;

    scale = clamp (scale, MIN_SCALE, MAX_SCALE);
    double f = (scale / oldScale) - 1;
    double dx = (event.getSceneX () - (canvas.getBoundsInParent ().getWidth () / 2 + canvas.getBoundsInParent ().getMinX ()));
    double dy = (event.getSceneY () - (canvas.getBoundsInParent ().getHeight () / 2 + canvas.getBoundsInParent ().getMinY ()));
    canvas.setScale (scale);
    canvas.setPivot (f * dx, f * dy);
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    nodeDragContext.setMouseAnchorX (event.getSceneX ());
    nodeDragContext.setMouseAnchorY (event.getSceneY ());
    Node node = (Node) event.getSource ();
    nodeDragContext.setTranslateAnchorX (node.getTranslateX ());
    nodeDragContext.setTranslateAnchorY (node.getTranslateY ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_32415609_243_269
32220042_33013650_51_60
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (ScrollEvent event) {
    double delta = 1.2;
    double scale = canvas.getScale ();
    double oldScale = scale;
    if (event.getDeltaY () < 0) scale /= delta;
    else scale *= delta;

    scale = clamp (scale, MIN_SCALE, MAX_SCALE);
    double f = (scale / oldScale) - 1;
    double dx = (event.getSceneX () - (canvas.getBoundsInParent ().getWidth () / 2 + canvas.getBoundsInParent ().getMinX ()));
    double dy = (event.getSceneY () - (canvas.getBoundsInParent ().getHeight () / 2 + canvas.getBoundsInParent ().getMinY ()));
    canvas.setScale (scale);
    canvas.setPivot (f * dx, f * dy);
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.getTranslateAnchorX () + ((event.getSceneX () - nodeDragContext.getMouseAnchorX ()) / getScale ()));
    node.setTranslateY (nodeDragContext.getTranslateAnchorY () + ((event.getSceneY () - nodeDragContext.getMouseAnchorY ()) / getScale ()));
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220042_33013650_32_46
32220042_33013650_51_60
Title: Pick and move a node in a pannable/zoomable Pane 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    nodeDragContext.setMouseAnchorX (event.getSceneX ());
    nodeDragContext.setMouseAnchorY (event.getSceneY ());
    Node node = (Node) event.getSource ();
    nodeDragContext.setTranslateAnchorX (node.getTranslateX ());
    nodeDragContext.setTranslateAnchorY (node.getTranslateY ());
}
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isPrimaryButtonDown ()) {
        return;
    }
    Node node = (Node) event.getSource ();
    node.setTranslateX (nodeDragContext.getTranslateAnchorX () + ((event.getSceneX () - nodeDragContext.getMouseAnchorX ()) / getScale ()));
    node.setTranslateY (nodeDragContext.getTranslateAnchorY () + ((event.getSceneY () - nodeDragContext.getMouseAnchorY ()) / getScale ()));
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32220160_32227346_11_27
32220160_32227346_29_52
Title: "how to print lexicographic permutations of 012 in java" 
----------------------------------------

private static String permute (String inputString) {
    final Map < String, Integer > inputAlphabet = new HashMap < String, Integer > ();
    final Map < String, Integer > disregard = new HashMap < String, Integer > ();
    final StringBuilder output = new StringBuilder ();
    final char [] inputAsCharArray = inputString.toCharArray ();
    Arrays.sort (inputAsCharArray);
    for (final char c : inputAsCharArray) {
        if (inputAlphabet.containsKey ("" + c)) {
            inputAlphabet.put ("" + c, inputAlphabet.get ("" + c) + 1);
        } else {
            inputAlphabet.put ("" + c, 1);
        }
    }
    permute (inputAlphabet, disregard, " ", inputString.length (), output);
    return output.toString ();
}
----------------------------------------

private static String permute (Map < String, Integer > inputAlphabet, Map < String, Integer > disregard, String start, int length, StringBuilder output) {
    final StringBuilder sb = new StringBuilder ();
    for (final String s : inputAlphabet.keySet ()) {
        for (int i = 0;
        i < (inputAlphabet.get (s) - (disregard.containsKey (s) ? disregard.get (s) : 0)); i ++) {
            if (disregard.containsKey (s)) {
                disregard.put (s, disregard.get (s) + i + 1);
            } else {
                disregard.put (s, i + 1);
            }
            sb.append (permute (inputAlphabet, disregard, start + s, length - 1, output));
            if ((disregard.get (s) - i - 1) != 0) {
                disregard.put (s, disregard.get (s) - i - 1);
            } else {
                disregard.remove (s);
            }
        }
    }
    if (sb.length () == length) {
        output.append (start + sb.toString ());
        return start + sb.toString ();
    } else {
        return start + sb.toString ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32221010_32226104_1_13
32221010_52561274_1_17
Title: WizardPane : Disable 'Previous' button on a screen 
----------------------------------------

@Override
public void onEnteringPage (Wizard wizard) {
    ObservableList < ButtonType > list = getButtonTypes ();
    for (ButtonType type : list) {
        if (type.getButtonData ().equals (ButtonBar.ButtonData.BACK_PREVIOUS)) {
            Node prev = lookupButton (type);
            prev.visibleProperty ().setValue (Boolean.FALSE);
        }
    }
}
----------------------------------------

@Override
public void onEnteringPage (Wizard wizard) {
    for (ButtonType type : getButtonTypes ()) {
        if (type.getButtonData ().equals (ButtonBar.ButtonData.BACK_PREVIOUS)) {
            System.out.println ("Found Back button");
            previous_button = (Button) lookupButton (type);
            break;
        }
    }
    Platform.runLater (new Runnable () {
        @Override
        public void run () {
            previous_button.setDisable (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32222963_32223484_1_11
32222963_32225632_1_13
Title: Is there a way to do the Ruby each_slice in Java 8? 
----------------------------------------

public static int [] [] slice (int [] source, int n) {
    List < int [] > results = new ArrayList < int [] > ();
    int len = (source.length % n == 0 ? source.length / n : source.length / n + 1);
    for (int i = 0;
    i < len; i ++) {
        results.add (Arrays.copyOfRange (source, i * n, (i + 1 == len ? source.length : (i + 1) * len)));
    }
    return results.toArray (new int [] [] {});
}
----------------------------------------

public static int [] [] slice (int [] array, int sliceSize) {
    int slicesCount = (int) Math.ceil (array.length / (double) sliceSize);
    int [] [] results = new int [slicesCount] [];
    int [] sliceArray;
    int index = 0;
    for (int i = array.length;
    i > 0; i = i - sliceSize) {
        int start = array.length - i;
        int last = ((start + sliceSize) < array.length) ? (start + sliceSize) : (array.length);
        sliceArray = Arrays.copyOfRange (array, start, last);
        results [index ++] = sliceArray;
    }
    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32223006_32224268_5_19
32223006_32225498_6_12
Title: Partial Highlight of a JOptionPan text 
----------------------------------------

public static void main (String [] args) {
    JTextArea textArea = new JTextArea (10, 30);
    textArea.setText ("This is a text");
    Highlighter highlighter = textArea.getHighlighter ();
    HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter (Color.pink);
    int p0 = text.indexOf ("is");
    int p1 = p0 + "is".length ();
    highlighter.addHighlight (p0, p1, painter);
    JOptionPane.showMessageDialog (null, new JScrollPane (textArea));
}
----------------------------------------

public static void main (String...args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32223765_32223864_14_21
32223765_32223864_25_35
Title: Error in multithreading prog in java 
----------------------------------------

public void run () {
    for (int j = 1;
    j < 6; j ++) {
        System.out.println ("\tFrom Thread B j: " + j);
        if (j == 3) stop ();

    }
    System.out.println ("Exit from B");
}
----------------------------------------

public void run () {
    for (int k = 1;
    k < 6; k ++) {
        System.out.println ("\tFrom Thread C k: " + k);
        if (k == 1) try {
            sleep (1000);
        } catch (Exception e) {
        }

    }
    System.out.println ("Exit from C");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32223765_32223864_14_21
32223765_32223864_2_10
Title: Error in multithreading prog in java 
----------------------------------------

public void run () {
    for (int j = 1;
    j < 6; j ++) {
        System.out.println ("\tFrom Thread B j: " + j);
        if (j == 3) stop ();

    }
    System.out.println ("Exit from B");
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 6; i ++) {
        if (i == 1) {
            yield ();
        }
        System.out.println ("\tFrom Thread A i: " + i);
    }
    System.out.println ("Exit from A");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32223765_32223864_25_35
32223765_32223864_2_10
Title: Error in multithreading prog in java 
----------------------------------------

public void run () {
    for (int k = 1;
    k < 6; k ++) {
        System.out.println ("\tFrom Thread C k: " + k);
        if (k == 1) try {
            sleep (1000);
        } catch (Exception e) {
        }

    }
    System.out.println ("Exit from C");
}
----------------------------------------

public void run () {
    for (int i = 1;
    i < 6; i ++) {
        if (i == 1) {
            yield ();
        }
        System.out.println ("\tFrom Thread A i: " + i);
    }
    System.out.println ("Exit from A");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32239053_32239852_42_62
32239053_32262135_41_61
Title: unable to update values in ListFragment 
----------------------------------------

private void cButtonOnClickListener () {
    cButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            cButton.setText ("ok");
            Intent cIntent = new Intent (getActivity ().getApplication (), MainActivity.class);
            cIntent.putExtra ("position", hmap);
            Set < Entry < Integer, String > > sets = hmap.entrySet ();
            Iterator < Entry < Integer, String > > it = sets.iterator ();
            while (it.hasNext ()) {
                Entry < Integer, String > entry = it.next ();
                Log.d ("demo", "hmap key: " + entry.getKey () + " --> value: " + entry.getValue ());
            }
        }}

    );
}
----------------------------------------

private void cButtonOnClickListener () {
    cButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            cButton.setText ("ok");
            Intent cIntent = new Intent (getActivity ().getApplication (), MainActivity.class);
            cIntent.putExtra ("position", hmap);
            Set < Entry < Integer, String > > sets = hmap.entrySet ();
            Iterator < Entry < Integer, String > > it = sets.iterator ();
            while (it.hasNext ()) {
                Entry < Integer, String > entry = it.next ();
                Log.d ("demo", "hmap key: " + entry.getKey () + " --> value: " + entry.getValue ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32239053_32239852_46_60
32239053_32262135_45_59
Title: unable to update values in ListFragment 
----------------------------------------

public void onClick (View v) {
    cButton.setText ("ok");
    Intent cIntent = new Intent (getActivity ().getApplication (), MainActivity.class);
    cIntent.putExtra ("position", hmap);
    Set < Entry < Integer, String > > sets = hmap.entrySet ();
    Iterator < Entry < Integer, String > > it = sets.iterator ();
    while (it.hasNext ()) {
        Entry < Integer, String > entry = it.next ();
        Log.d ("demo", "hmap key: " + entry.getKey () + " --> value: " + entry.getValue ());
    }
}
----------------------------------------

public void onClick (View v) {
    cButton.setText ("ok");
    Intent cIntent = new Intent (getActivity ().getApplication (), MainActivity.class);
    cIntent.putExtra ("position", hmap);
    Set < Entry < Integer, String > > sets = hmap.entrySet ();
    Iterator < Entry < Integer, String > > it = sets.iterator ();
    while (it.hasNext ()) {
        Entry < Integer, String > entry = it.next ();
        Log.d ("demo", "hmap key: " + entry.getKey () + " --> value: " + entry.getValue ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32239053_32239852_9_21
32239053_32262135_9_21
Title: unable to update values in ListFragment 
----------------------------------------

public void onActivityCreated (Bundle savedInstanceState) {
    super.onActivityCreated (savedInstanceState);
    list.add ("one");
    list.add ("two");
    list.add ("three");
    list.add ("four");
    list.add ("five");
    list.add ("six");
    list.add ("seven");
    adapter = new ArrayAdapter < String > (getActivity ().getApplicationContext (), android.R.layout.simple_list_item_1, list);
    setListAdapter (adapter);
}
----------------------------------------

public void onActivityCreated (Bundle savedInstanceState) {
    super.onActivityCreated (savedInstanceState);
    list.add ("one");
    list.add ("two");
    list.add ("three");
    list.add ("four");
    list.add ("five");
    list.add ("six");
    list.add ("seven");
    adapter = new ArrayAdapter < String > (getActivity ().getApplicationContext (), android.R.layout.simple_list_item_1, list);
    setListAdapter (adapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32241504_32241706_3_16
32241504_32241759_1_14
Title: How to print 10 9 8 7 6 in first line and 10 9 8 7 in second line in java using while loop? 
----------------------------------------

public static void main (String args []) {
    int x = 10;
    int i = 0;
    int n = 6;
    while (i ++ < n) {
        while (i ++ < n) {
            System.out.print (x -- + " ");
        }
        System.out.println ("\n");
        x = 10;
        i = 0;
        n = n - 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int count = 5;
    while (i >= count) {
        int j = i;
        while (j > count) {
            System.out.print (j + " ");
            j --;
        }
        System.out.println ();
        count ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32241504_32241706_3_16
32241504_32241813_3_17
Title: How to print 10 9 8 7 6 in first line and 10 9 8 7 in second line in java using while loop? 
----------------------------------------

public static void main (String args []) {
    int x = 10;
    int i = 0;
    int n = 6;
    while (i ++ < n) {
        while (i ++ < n) {
            System.out.print (x -- + " ");
        }
        System.out.println ("\n");
        x = 10;
        i = 0;
        n = n - 1;
    }
}
----------------------------------------

public static void main (String args []) {
    int x = 10;
    int i = 4;
    while (i <= 4 && i >= 0) {
        int j = 0;
        while (j <= i) {
            int h = (x - j);
            System.out.print (h + " ");
            j ++;
        }
        i --;
        System.out.print ("\n");
        if (i <= 2) break;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32241504_32241759_1_14
32241504_32241813_3_17
Title: How to print 10 9 8 7 6 in first line and 10 9 8 7 in second line in java using while loop? 
----------------------------------------

public static void main (String [] args) {
    int i = 10;
    int count = 5;
    while (i >= count) {
        int j = i;
        while (j > count) {
            System.out.print (j + " ");
            j --;
        }
        System.out.println ();
        count ++;
    }
}
----------------------------------------

public static void main (String args []) {
    int x = 10;
    int i = 4;
    while (i <= 4 && i >= 0) {
        int j = 0;
        while (j <= i) {
            int h = (x - j);
            System.out.print (h + " ");
            j ++;
        }
        i --;
        System.out.print ("\n");
        if (i <= 2) break;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32243514_32243665_1_10
32243514_32244242_6_35
Title: Remove all elements from the array which are either multiple of 3 or have the digit 3 in them. For e.g. 13 and 15 will be both removed 
----------------------------------------

public int [] remove (int [] arr) {
    int [] result = new int [arr.length];
    int numResults = 0;
    for (int i : arr) {
        if (arr % 3 == 0 || String.valueOf (arr).contains ("3")) {
            result [numResults ++] = i;
        }
    }
    return Arrays.copyOf (result, numResults);
}
----------------------------------------

public static int [] remove (int [] arr) {
    if (arr == null) {
        return null;
    }
    int k = 0;
    int [] b = new int [arr.length];
    for (int i = 0;
    i < arr.length; i ++) {
        int num = arr [i];
        boolean remove = false;
        if (num % 3 == 0) {
            remove = true;
        } else {
            while (num > 0) {
                if ((num % 10) == 3) {
                    remove = true;
                    break;
                }
                num = num / 10;
            }
        }
        if (! remove) {
            b [k ++] = arr [i];
        }
    }
    return Arrays.copyOf (b, k);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32269632_34116569_34_48
32269632_34116569_77_86
Title: "Writing to Lucene index one document at a time slows down over time" 
----------------------------------------

void init () throws IOException {
    indexWriter = new IndexWriter (FSDirectory.open (Paths.get ("C:\\Temp\\lucene-example")), new IndexWriterConfig (new StandardAnalyzer ()));
    indexWriter.deleteAll ();
    for (int i = 1;
    i <= 100000; i ++) {
        add (String.valueOf (i), "whatever " + i);
    }
    indexWriter.commit ();
    commitFuture = scheduledExecutor.scheduleWithFixedDelay (() -> {
        try {
            indexWriter.commit ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }, 5, 5, TimeUnit.MINUTES);
}
----------------------------------------

void init () throws IOException {
    searcherManager = new SearcherManager (indexWriter, true, null);
    maybeRefreshFuture = scheduledExecutor.scheduleWithFixedDelay (() -> {
        try {
            searcherManager.maybeRefresh ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }, 0, 5, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32280473_32280625_1_19
32280473_32280756_6_30
Title: How can I compare an input value with each value of an array? 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String userInput;
    String array [] = {"Hello", "World"};
    System.out.print ("Enter word: ");
    userInput = input.next ();
    while (true) {
        for (String i : array) {
            if (userInput.equals (i)) {
                System.out.println ("Word found in array.");
                return;
            }
        }
        System.out.print ("Input not found in array. Enter new value: ");
        userInput = input.next ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String userInput = "";
    String [] array = {"Hello", "World"};
    boolean check = true;
    System.out.print ("Enter word: ");
    userInput = input.next ();
    while (true) {
        for (String i : array) {
            if (userInput.equals (i)) {
                System.out.println ("Word found in array.");
                check = false;
                break;
            }
        }
        if (check) {
            System.out.print ("Input not found in array. Enter new value: ");
            userInput = input.next ();
            continue;
        }
        break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32281403_32281444_1_14
32281403_32282351_1_20
Title: How to exit a loop when the user presses ^Z 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    do {
        System.out.println ("Please enter a radius.");
        double radius = keyboard.nextDouble ();
        double area = Math.PI * radius * radius;
        System.out.printf ("With a radius of %f the area is %f.%n", radius, area);
    } while (keyboard.hasNextDouble ());
}
----------------------------------------

public static void main (String [] args) {
    double r;
    double a;
    String str;
    Scanner s = new Scanner (System.in);
    while (true) {
        System.out.print ("please give me a radius: ");
        str = s.nextLine ();
        try {
            r = Double.parseDouble (str);
        } catch (NumberFormatException ex) {
            break;
        }
        a = Math.PI * r * r;
        System.out.printf ("area of a circle with a radius of %f is: %f%n", r, a);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32282937_32283109_6_152
32282937_32283291_13_60
Title: "I'm making a text game some options are just ignored but I get no errors" 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    int actionOne, actionTwo, actionThree, actionFour, actionFive, actionSix, actionSeven, actionEight, actionNine;
    System.out.println ("You wake up in a metallic room. There is a knife next to you, and there is a door ahead of you.");
    System.out.print ("Enter 1 to go to the door, enter 2 to pick up the knife: ");
    actionOne = keyboard.nextInt ();
    if (actionOne == 1) {
        System.out.println (" ");
        System.out.println ("You walk to the door. There is a small window that you could look through.");
        System.out.println ("You could also just open the door right there.");
        System.out.print ("Enter 1 to look through the window, enter 2 to go through the door: ");
        actionTwo = keyboard.nextInt ();
        if (actionTwo == 1) {
            System.out.println (" ");
            System.out.println ("You look through the window and see a tall creature inside a cockpit.");
            System.out.println ("Suddenly you are grabbed from behind and everything is black");
            System.out.println ("YOU ARE DEAD");
        } else if (actionTwo == 2) {
            System.out.println (" ");
            System.out.println ("You open the door and hear something behind you, you shut it fast then are in shock");
            System.out.println ("Another creature is staring you down in front of you. He runs at you with a electrical sword");
            System.out.print ("Enter 1 to dodge, enter 2 to defend yourself: ");
        }

    } else if (actionOne == 2) {
        System.out.println (" ");
        System.out.println ("You pick up the knife and hear something behind you.");
        System.out.println ("You blindly throw your hand backwards and realise you killed a tall creature.");
        System.out.println ("There is an advanced gun in his hand");
        System.out.print ("Enter 1 to pick up the gun, enter 2 to leave it be: ");
        actionThree = keyboard.nextInt ();
        if (actionThree == 1) {
            System.out.println (" ");
            System.out.println ("You grab the gun and the creature moves, you quickly aim and fire");
            System.out.println ("The creature drops dead. You take a look around and notice a corridor.");
            System.out.println ("You head down the corridor and it splits.");
            System.out.print ("Enter 1 to head left, enter 2 to head right: ");
            actionFour = keyboard.nextInt ();
            if (actionFour == 1) {
                System.out.println (" ");
                System.out.println ("You head left. There is a control panel that controls an escape pod");
                System.out.println ("There are two buttons, a blue button and a yellow button.");
                System.out.print ("Enter 1 to press the blue button, enter 2 to press the yellow button: ");
                actionFive = keyboard.nextInt ();
                if (actionFive == 1) {
                    System.out.println (" ");
                    System.out.println ("You press the blue button. The ship begins to shake.");
                    System.out.println ("You take your last breath as the ship explodes");
                    System.out.println (" ");
                    System.out.println ("YOU ARE DEAD");
                } else if (actionFive == 2) {
                    System.out.println (" ");
                    System.out.println ("You press the yellow button. The escape pod door opens.");
                    System.out.println ("You walk inside and hear something behind you.");
                    System.out.println ("There are two switches in an alien language. One must control the door.");
                    System.out.print ("Enter 1 to activate the left switch, enter 2 to activate the right switch.");
                    actionSeven = keyboard.nextInt ();
                    if (actionSeven == 1) {
                        System.out.println (" ");
                        System.out.println ("You activate the left switch and the hatch closes.");
                        System.out.println ("There is only one other switch, you activate it.");
                        System.out.println ("The escape pod launches from the ship. On the descent down you see the alien ship come towards earth.");
                        System.out.println ("Seconds later the ship is blown to bits. Once you land you are greeted by a govenment agency");
                        System.out.println ("They thank you for baiting the ship in, and give you a medal for your accomplishments.");
                        System.out.println (" ");
                        System.out.println (" ");
                        System.out.println ("YOU SURVIVED - BAD ENDING");
                    } else if (actionSeven == 2) {
                        System.out.println (" ");
                        System.out.println ("You activate the right switch and the escape pod launches into space.");
                        System.out.println ("You see the alien bodies fly out of the ship before your eyes pop");
                        System.out.println (" ");
                        System.out.println ("YOU ARE DEAD");
                    }

                }

            } else if (actionFour == 2) {
                System.out.println (" ");
                System.out.println ("You head right. There is an armory filled with alien weapons.");
                System.out.print ("Enter 1 to get an alien rifle, enter 2 to leave the weapons and continue down the hall: ");
                actionSix = keyboard.nextInt ();
                if (actionSix == 1) {
                    System.out.println (" ");
                    System.out.println ("You pick up an alien rifle. It sends off an alarm.");
                    System.out.println ("Multiple aliens are rushing down the halls. You pick off a few.");
                    System.out.println ("Suddenly you feel pain in your stomache and you drop to the floor.");
                    System.out.println (" ");
                    System.out.println ("YOU ARE DEAD");
                } else if (actionSix == 2) {
                    System.out.println (" ");
                    System.out.println ("You decide it's not worth the risk.");
                    System.out.println ("You keep heading down the corridor and find some type of needle filled with liquid.");
                    System.out.print ("Enter 1 to inject the liquid into you, enter 2 to leave it: ");
                    actionEight = keyboard.nextInt ();
                    if (actionEight == 1) {
                        System.out.println (" ");
                        System.out.println ("You inject the liquid and see your arms and body slowly vanish.");
                        System.out.println ("It seems you injected yourself with a cloaking syrum.");
                        System.out.println ("Seconds later an alien comes in. It growls then moves off looking for you.");
                        System.out.println ("Heading down the corridor you see another alien, this one looks different.");
                        System.out.println ("It wears a cloak and crown, and looks to be of high status.");
                        System.out.print ("Enter 1 to attempt to communicate, enter 2 to remain silent: ");
                        actionNine = keyboard.nextInt ();
                        if (actionNine == 1) {
                            System.out.println (" ");
                            System.out.println ("You speak in english 'Why am I here?!'");
                            System.out.println ("To your surprise the alien responds in English");
                            System.out.println ("He says 'We were testing humans, you seem like a smart one");
                            System.out.println ("He says 'I would like to take you back to our home system.'");
                            System.out.println ("He says 'After seeing what you can do, I believe you could help us in our galactic republic'");
                            System.out.println (" ");
                            System.out.println ("1 Year Later");
                            System.out.println ("You are now part of a galactic republic lightyears away. You have forgotten your old life.");
                            System.out.println ("Something has made you forget it, but that doesn't matter now. You are a part of their military.");
                            System.out.println ("You don't question their motives, because you have no reason to.");
                            System.out.println (" ");
                            System.out.println (" ");
                            System.out.println ("YOU SURVIVED - GOOD ENDING");
                        } else if (actionNine == 2) {
                            System.out.println (" ");
                            System.out.println ("You suddenly feel weak. A crunching feeling is in your body.");
                            System.out.println ("It seems the alien knew you were there. He is much more powerful than the rest.");
                            System.out.println ("Your insides begin to hurt until blood bursts from your stomach, you fall to the ground.");
                            System.out.println (" ");
                            System.out.println ("YOU ARE DEAD");
                        }

                    } else if (actionEight == 2) {
                        System.out.println (" ");
                        System.out.println ("You leave the needle there.");
                        System.out.println ("Suddenly a blade pierces through you. An alien has sneaked up on you.");
                        System.out.println ("As your vision fades to black, you feel absolute terror.");
                        System.out.println (" ");
                        System.out.println (" ");
                    }

                }

            }

        } else if (actionThree == 2) {
            System.out.println (" ");
            System.out.println ("The creature becomes conscious and aims the gun at you, you stand in fear.");
            System.out.println ("Suddenly you hear a loud noise and everything is black.");
            System.out.println (" ");
            System.out.println ("YOU ARE DEAD");
        }

    }

}
----------------------------------------

public static void main (String [] args) {
    String line;
    try {
        InputStream in = new FileInputStream (new File ("src/levels.json"));
        BufferedReader reader = new BufferedReader (new InputStreamReader (in));
        StringBuilder out = new StringBuilder ();
        while ((line = reader.readLine ()) != null) {
            out.append (line);
        }
        Scanner keyboard = new Scanner (System.in);
        System.out.println ("Press 1 or 2:");
        int action;
        JSONObject json = new JSONObject (out.toString ());
        for (int i = 0;
        i < 2; i ++) {
            action = keyboard.nextInt ();
            String name = new String ();
            switch (action) {
                case 1 :
                    name = new String ("k1");
                    break;
                case 2 :
                    name = new String ("k2");
                    break;
            }
            json = json.getJSONObject (name);
            System.out.println (json.getString ("message"));
        }
        reader.close ();
    } catch (IOException fe) {
        fe.printStackTrace ();
    } catch (JSONException ee) {
        ee.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32285803_32285855_2_10
32285803_32712270_4_14
Title: factorial in java using for loop 
----------------------------------------

public static void main (String [] args) {
    int n = 10;
    int factorial = 1;
    for (int i = n;
    i >= 2; i --) {
        factorial = factorial * i;
    }
    System.out.println (factorial);
}
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter the number:");
    int x = input.nextInt ();
    int finalint = 1;
    for (int init = 1;
    init <= x; init ++) {
        finalint = finalint * init;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32290984_32291159_42_61
32290984_32291159_50_58
Title: Issue change JButton text repeatedly from within ActionPerformed method 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (timer != null && timer.isRunning ()) {
        return;
    }
    timer = new Timer (TIMER_DELAY, new ActionListener () {
        private int count = 0;
        @Override
        public void actionPerformed (ActionEvent e2) {
            if (count * TIMER_DELAY > MAX_TIME) {
                ((Timer) e2.getSource ()).stop ();
                return;
            }
            count ++;
            Die die = Die.getRandomDie ();
            ((AbstractButton) e.getSource ()).setText ("" + die.getValue ());
        }}

    );
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e2) {
    if (count * TIMER_DELAY > MAX_TIME) {
        ((Timer) e2.getSource ()).stop ();
        return;
    }
    count ++;
    Die die = Die.getRandomDie ();
    ((AbstractButton) e.getSource ()).setText ("" + die.getValue ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32295554_32295695_1_15
32295554_32296091_2_15
Title: How to recursively add count in java? 
----------------------------------------

private int matchQuery (BST T, String start, String end, int count) {
    if (T == null) return count;

    if (T.key != null && withinStartRange (T.key, start)) {
        count ++;
    }
    int rightCount = matchQuery (T.right, start, end, count);
    int leftCount = matchQuery (T.left, start, end, count);
    return rightCount + leftCount - count;
}
----------------------------------------

private int matchQuery (BST bst, String start, String end) {
    if (bst == null) return 0;

    if (bst.key == null) return matchQuery (bst.left, start, end) + matchQuery (bst.right, start, end);

    int count = 0;
    int compareToStart = bst.key.compareTo (start);
    int compareToEnd = bst.key.compareTo (end);
    if (compareToStart > 0) count += matchQuery (bst.left, start, end);

    if (compareToEnd < 0) count += matchQuery (bst.right, start, end);

    if (compareToStart >= 0 && compareToEnd <= 0) count ++;

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32295963_32296543_10_22
32295963_32296566_1_13
Title: Recursion so confusing 
----------------------------------------

String shortname (String str) {
    if (l < str.length ()) {
        if (str.charAt (l) == 32) {
            st = st + str.charAt (d) + ". ";
            d = l + 1;
        }
        l ++;
        shortname (str);
    }
    return st;
}
----------------------------------------

String shortname (String str) {
    if (l < str.length ()) {
        if (str.charAt (l) == ' ') {
            st = st + str.charAt (d) + ".";
            d = l + 1;
        }
        l ++;
        shortname (str);
    } else {
        st = st + str.substring (d);
    }
    return st;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_10_48
32299089_43278861_17_271
Title: Calculator in Android Studio 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    btnOne = (Button) findViewById (R.id.btnOne);
    btnTwo = (Button) findViewById (R.id.btnTwo);
    btn3 = (Button) findViewById (R.id.btn3);
    btn4 = (Button) findViewById (R.id.btn4);
    btn5 = (Button) findViewById (R.id.btn5);
    btn6 = (Button) findViewById (R.id.btn6);
    btn7 = (Button) findViewById (R.id.btn7);
    btn8 = (Button) findViewById (R.id.btn8);
    btn9 = (Button) findViewById (R.id.btn9);
    btn10 = (Button) findViewById (R.id.btn10);
    btn11 = (Button) findViewById (R.id.btn11);
    btn12 = (Button) findViewById (R.id.btn12);
    btn13 = (Button) findViewById (R.id.btn13);
    btn14 = (Button) findViewById (R.id.btn14);
    btn15 = (Button) findViewById (R.id.btn15);
    calc = (EditText) findViewById (R.id.edit);
    btnOne.setOnClickListener (this);
    btnTwo.setOnClickListener (this);
    btn3.setOnClickListener (this);
    btn4.setOnClickListener (this);
    btn5.setOnClickListener (this);
    btn6.setOnClickListener (this);
    btn7.setOnClickListener (this);
    btn8.setOnClickListener (this);
    btn9.setOnClickListener (this);
    btn10.setOnClickListener (this);
    btn11.setOnClickListener (this);
    btn12.setOnClickListener (this);
    btn13.setOnClickListener (this);
    btn14.setOnClickListener (this);
    btn15.setOnClickListener (this);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    one = (Button) findViewById (R.id.btn_1);
    two = (Button) findViewById (R.id.btn_2);
    three = (Button) findViewById (R.id.btn_3);
    four = (Button) findViewById (R.id.btn_4);
    five = (Button) findViewById (R.id.btn_5);
    six = (Button) findViewById (R.id.btn_6);
    seven = (Button) findViewById (R.id.btn_7);
    eight = (Button) findViewById (R.id.btn_8);
    nine = (Button) findViewById (R.id.btn_9);
    zero = (Button) findViewById (R.id.btn_0);
    plus = (Button) findViewById (R.id.btn_plus);
    minus = (Button) findViewById (R.id.btn_minus);
    multiply = (Button) findViewById (R.id.btn_multiply);
    division = (Button) findViewById (R.id.btn_divide);
    equal = (Button) findViewById (R.id.btn_equal);
    textViewresult = (TextView) findViewById (R.id.tv_result);
    dot = (Button) findViewById (R.id.btn_dot);
    clear = (Button) findViewById (R.id.btn_clear);
    one.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            } else {
                textViewresult.setText (textViewresult.getText () + "1");
            }
        }}

    );
    two.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            } else textViewresult.setText (textViewresult.getText () + "2");

        }}

    );
    three.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "3");
        }}

    );
    four.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "4");
        }}

    );
    five.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "5");
        }}

    );
    six.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "6");
        }}

    );
    seven.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "7");
        }}

    );
    eight.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "8");
        }}

    );
    nine.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + "8");
        }}

    );
    zero.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            textViewresult.setText (textViewresult.getText () + "0");
        }}

    );
    dot.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (equalcheck == true) {
                textViewresult.setText ("");
                equalcheck = false;
            }
            textViewresult.setText (textViewresult.getText () + ".");
        }}

    );
    plus.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (textViewresult.getText () == "") {
                textViewresult.setText ("");
            } else {
                val1 = Double.parseDouble (textViewresult.getText () + "");
                add = true;
                textViewresult.setText (null);
            }
        }}

    );
    minus.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (textViewresult.getText () == "") {
                textViewresult.setText ("");
            } else {
                val1 = Double.parseDouble (textViewresult.getText () + "");
                sub = true;
                textViewresult.setText (null);
            }
        }}

    );
    multiply.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (textViewresult.getText () == "") {
                textViewresult.setText ("");
            } else {
                val1 = Double.parseDouble (textViewresult.getText () + "");
                mul = true;
                textViewresult.setText (null);
            }
        }}

    );
    division.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (textViewresult.getText () == "") {
                textViewresult.setText ("");
            } else {
                val1 = Double.parseDouble (textViewresult.getText () + "");
                div = true;
                textViewresult.setText (null);
            }
        }}

    );
    equal.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (textViewresult.getText () == "") {
                textViewresult.setText ("");
            } else {
                equalcheck = true;
                val2 = Double.parseDouble (textViewresult.getText () + "");
                if (add == true) {
                    textViewresult.setText (val1 + val2 + "");
                    add = false;
                }
                if (sub == true) {
                    textViewresult.setText (val1 - val2 + "");
                    sub = false;
                }
                if (mul == true) {
                    textViewresult.setText (val1 * val2 + "");
                    mul = false;
                }
                if (div == true) {
                    textViewresult.setText (val1 / val2 + "");
                    div = false;
                }
            }
        }}

    );
    clear.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            textViewresult.setText ("");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_73_253
32299089_43278861_173_184
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    Editable str = calc.getText ();
    switch (v.getId ()) {
        case R.id.btnOne :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnOne.getText ());
            calc.setText (str);
            break;
        case R.id.btnTwo :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnTwo.getText ());
            calc.setText (str);
            break;
        case R.id.btn3 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn3.getText ());
            calc.setText (str);
            break;
        case R.id.btn5 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn5.getText ());
            calc.setText (str);
            break;
        case R.id.btn6 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn6.getText ());
            calc.setText (str);
            break;
        case R.id.btn7 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn7.getText ());
            calc.setText (str);
            break;
        case R.id.btn9 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn9.getText ());
            calc.setText (str);
            break;
        case R.id.btn10 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn10.getText ());
            calc.setText (str);
            break;
        case R.id.btn11 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn11.getText ());
            calc.setText (str);
            break;
        case R.id.btn13 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn13.getText ());
            calc.setText (str);
            break;
        case R.id.btn4 :
            optr = "+";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 + op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn8 :
            optr = "-";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 - op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn12 :
            optr = "*";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 * op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn15 :
            optr = "/";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 / op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn14 :
            if (! optr.equals (null)) {
                if (op2 != 0) {
                    if (optr.equals ("+")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("-")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("*")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("/")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    }

                } else {
                    operation ();
                }
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        add = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_73_253
32299089_43278861_189_199
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    Editable str = calc.getText ();
    switch (v.getId ()) {
        case R.id.btnOne :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnOne.getText ());
            calc.setText (str);
            break;
        case R.id.btnTwo :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnTwo.getText ());
            calc.setText (str);
            break;
        case R.id.btn3 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn3.getText ());
            calc.setText (str);
            break;
        case R.id.btn5 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn5.getText ());
            calc.setText (str);
            break;
        case R.id.btn6 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn6.getText ());
            calc.setText (str);
            break;
        case R.id.btn7 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn7.getText ());
            calc.setText (str);
            break;
        case R.id.btn9 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn9.getText ());
            calc.setText (str);
            break;
        case R.id.btn10 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn10.getText ());
            calc.setText (str);
            break;
        case R.id.btn11 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn11.getText ());
            calc.setText (str);
            break;
        case R.id.btn13 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn13.getText ());
            calc.setText (str);
            break;
        case R.id.btn4 :
            optr = "+";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 + op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn8 :
            optr = "-";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 - op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn12 :
            optr = "*";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 * op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn15 :
            optr = "/";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 / op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn14 :
            if (! optr.equals (null)) {
                if (op2 != 0) {
                    if (optr.equals ("+")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("-")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("*")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("/")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    }

                } else {
                    operation ();
                }
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        sub = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_73_253
32299089_43278861_204_213
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    Editable str = calc.getText ();
    switch (v.getId ()) {
        case R.id.btnOne :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnOne.getText ());
            calc.setText (str);
            break;
        case R.id.btnTwo :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnTwo.getText ());
            calc.setText (str);
            break;
        case R.id.btn3 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn3.getText ());
            calc.setText (str);
            break;
        case R.id.btn5 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn5.getText ());
            calc.setText (str);
            break;
        case R.id.btn6 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn6.getText ());
            calc.setText (str);
            break;
        case R.id.btn7 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn7.getText ());
            calc.setText (str);
            break;
        case R.id.btn9 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn9.getText ());
            calc.setText (str);
            break;
        case R.id.btn10 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn10.getText ());
            calc.setText (str);
            break;
        case R.id.btn11 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn11.getText ());
            calc.setText (str);
            break;
        case R.id.btn13 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn13.getText ());
            calc.setText (str);
            break;
        case R.id.btn4 :
            optr = "+";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 + op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn8 :
            optr = "-";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 - op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn12 :
            optr = "*";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 * op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn15 :
            optr = "/";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 / op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn14 :
            if (! optr.equals (null)) {
                if (op2 != 0) {
                    if (optr.equals ("+")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("-")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("*")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("/")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    }

                } else {
                    operation ();
                }
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        mul = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_73_253
32299089_43278861_217_226
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    Editable str = calc.getText ();
    switch (v.getId ()) {
        case R.id.btnOne :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnOne.getText ());
            calc.setText (str);
            break;
        case R.id.btnTwo :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnTwo.getText ());
            calc.setText (str);
            break;
        case R.id.btn3 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn3.getText ());
            calc.setText (str);
            break;
        case R.id.btn5 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn5.getText ());
            calc.setText (str);
            break;
        case R.id.btn6 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn6.getText ());
            calc.setText (str);
            break;
        case R.id.btn7 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn7.getText ());
            calc.setText (str);
            break;
        case R.id.btn9 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn9.getText ());
            calc.setText (str);
            break;
        case R.id.btn10 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn10.getText ());
            calc.setText (str);
            break;
        case R.id.btn11 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn11.getText ());
            calc.setText (str);
            break;
        case R.id.btn13 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn13.getText ());
            calc.setText (str);
            break;
        case R.id.btn4 :
            optr = "+";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 + op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn8 :
            optr = "-";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 - op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn12 :
            optr = "*";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 * op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn15 :
            optr = "/";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 / op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn14 :
            if (! optr.equals (null)) {
                if (op2 != 0) {
                    if (optr.equals ("+")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("-")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("*")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("/")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    }

                } else {
                    operation ();
                }
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        div = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_32858175_73_253
32299089_43278861_231_262
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    Editable str = calc.getText ();
    switch (v.getId ()) {
        case R.id.btnOne :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnOne.getText ());
            calc.setText (str);
            break;
        case R.id.btnTwo :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btnTwo.getText ());
            calc.setText (str);
            break;
        case R.id.btn3 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn3.getText ());
            calc.setText (str);
            break;
        case R.id.btn5 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn5.getText ());
            calc.setText (str);
            break;
        case R.id.btn6 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn6.getText ());
            calc.setText (str);
            break;
        case R.id.btn7 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn7.getText ());
            calc.setText (str);
            break;
        case R.id.btn9 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn9.getText ());
            calc.setText (str);
            break;
        case R.id.btn10 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn10.getText ());
            calc.setText (str);
            break;
        case R.id.btn11 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn11.getText ());
            calc.setText (str);
            break;
        case R.id.btn13 :
            if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            }
            str = str.append (btn13.getText ());
            calc.setText (str);
            break;
        case R.id.btn4 :
            optr = "+";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 + op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn8 :
            optr = "-";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 - op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn12 :
            optr = "*";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 * op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn15 :
            optr = "/";
            if (op1 == 0) {
                op1 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
            } else if (op2 != 0) {
                op2 = 0;
                calc.setText ("");
            } else {
                op2 = Integer.parseInt (calc.getText ().toString ());
                calc.setText ("");
                op1 = op1 / op2;
                calc.setText ("Result : " + Integer.toString (op1));
            }

            break;
        case R.id.btn14 :
            if (! optr.equals (null)) {
                if (op2 != 0) {
                    if (optr.equals ("+")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("-")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("*")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    } else if (optr.equals ("/")) {
                        calc.setText ("");
                        calc.setText ("Result : " + Integer.toString (op1));
                    }

                } else {
                    operation ();
                }
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        equalcheck = true;
        val2 = Double.parseDouble (textViewresult.getText () + "");
        if (add == true) {
            textViewresult.setText (val1 + val2 + "");
            add = false;
        }
        if (sub == true) {
            textViewresult.setText (val1 - val2 + "");
            sub = false;
        }
        if (mul == true) {
            textViewresult.setText (val1 * val2 + "");
            mul = false;
        }
        if (div == true) {
            textViewresult.setText (val1 / val2 + "");
            div = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_43278861_173_184
32299089_43278861_189_199
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        add = true;
        textViewresult.setText (null);
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        sub = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_43278861_173_184
32299089_43278861_204_213
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        add = true;
        textViewresult.setText (null);
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        mul = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_43278861_173_184
32299089_43278861_217_226
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        add = true;
        textViewresult.setText (null);
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        div = true;
        textViewresult.setText (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
32299089_43278861_173_184
32299089_43278861_231_262
Title: Calculator in Android Studio 
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        val1 = Double.parseDouble (textViewresult.getText () + "");
        add = true;
        textViewresult.setText (null);
    }
}
----------------------------------------

public void onClick (View v) {
    if (textViewresult.getText () == "") {
        textViewresult.setText ("");
    } else {
        equalcheck = true;
        val2 = Double.parseDouble (textViewresult.getText () + "");
        if (add == true) {
            textViewresult.setText (val1 + val2 + "");
            add = false;
        }
        if (sub == true) {
            textViewresult.setText (val1 - val2 + "");
            sub = false;
        }
        if (mul == true) {
            textViewresult.setText (val1 * val2 + "");
            mul = false;
        }
        if (div == true) {
            textViewresult.setText (val1 / val2 + "");
            div = false;
        }
    }
}
----------------------------------------
