$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20063713_20063786_1_14
20063713_20063833_10_20
Title: 2D Java Arrays. Turning Negative numbers to zeros 
----------------------------------------

public static int [] [] zeroNegatives (int [] [] arr) {
    for (int r = 0;
    r < arr.length; r ++) {
        for (int c = 0;
        c < arr [r].length; c ++) {
            if (arr [r] [c] < 0) {
                arr [r] [c] *= - 1;
            }
        }
    }
    return arr;
}
----------------------------------------

public static int [] [] zeroNegatives (int [] [] arr) {
    for (int r = 0;
    r < arr.length; r ++) {
        for (int c = 0;
        c < arr [r].length; c ++) {
            if (arr [r] [c] < 0) {
                arr [r] [c] *= - 1;
            }
        }
    }
    return arr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20063713_20063786_1_14
20063713_20063926_1_15
Title: 2D Java Arrays. Turning Negative numbers to zeros 
----------------------------------------

public static int [] [] zeroNegatives (int [] [] arr) {
    for (int r = 0;
    r < arr.length; r ++) {
        for (int c = 0;
        c < arr [r].length; c ++) {
            if (arr [r] [c] < 0) {
                arr [r] [c] *= - 1;
            }
        }
    }
    return arr;
}
----------------------------------------

public static int [] [] zeroNegatives (int [] [] arr) {
    int [] [] method2DArr = arr;
    for (int r = 0;
    r < method2DArr.length; r ++) {
        for (int c = 0;
        c < method2DArr [r].length; c ++) {
            if (method2DArr [r] [c] < 0) {
                method2DArr [r] [c] = method2DArr [r] [c] * (- 1);
            }
        }
    }
    return method2DArr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20073042_20073094_1_10
20073042_20073169_1_10
Title: java:17: error: missing return statement 
----------------------------------------

public static String num (int number) {
    String result = "";
    for (int i = 2;
    i < number; i ++) {
        if (number % i != 0) result = "it is prime";
        else result = "it is not prime";

    }
    return result;
}
----------------------------------------

public static String num (int number) {
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            return "it is not prime";
        }
    }
    return "it is prime";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20073042_20073094_1_10
20073042_20073185_1_10
Title: java:17: error: missing return statement 
----------------------------------------

public static String num (int number) {
    String result = "";
    for (int i = 2;
    i < number; i ++) {
        if (number % i != 0) result = "it is prime";
        else result = "it is not prime";

    }
    return result;
}
----------------------------------------

public static String num (int number) {
    for (int i = 2;
    i < number; i ++) {
        if (number % i != 0) return "it is prime";
        else return "it is not prime";

    }
    return "some message";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20073042_20073169_1_10
20073042_20073185_1_10
Title: java:17: error: missing return statement 
----------------------------------------

public static String num (int number) {
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            return "it is not prime";
        }
    }
    return "it is prime";
}
----------------------------------------

public static String num (int number) {
    for (int i = 2;
    i < number; i ++) {
        if (number % i != 0) return "it is prime";
        else return "it is not prime";

    }
    return "some message";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
200746_25381691_1_34
200746_3343701_1_28
Title: How do I split strings in J2ME? 
----------------------------------------

public static Vector split (String stringToSplit, String separator) {
    if (stringToSplit.length < 1) {
        return null;
    }
    Vector stringsFound = new Vector ();
    String remainingString = stringToSplit;
    while (remainingString.length () > 0) {
        int separatorStartingIndex = remainingString.indexOf (separator);
        if (separatorStartingIndex == - 1) {
            stringsFound.addElement (remainingString);
            break;
        } else {
            if (remainingString.startsWith (separator)) {
                remainingString = remainingString.substring (separator.length ());
            } else {
                stringsFound.addElement (remainingString.substring (0, separatorStartingIndex));
                remainingString = remainingString.substring (separatorStartingIndex + separator.length ());
            }
        }
    }
    return stringsFound;
}
----------------------------------------

public static String [] split (StringBuffer sb, String splitter) {
    String [] strs = new String [sb.length ()];
    int splitterLength = splitter.length ();
    int initialIndex = 0;
    int indexOfSplitter = indexOf (sb, splitter, initialIndex);
    int count = 0;
    if (- 1 == indexOfSplitter) return new String [] {sb.toString ()};

    while (- 1 != indexOfSplitter) {
        char [] chars = new char [indexOfSplitter - initialIndex];
        sb.getChars (initialIndex, indexOfSplitter, chars, 0);
        initialIndex = indexOfSplitter + splitterLength;
        indexOfSplitter = indexOf (sb, splitter, indexOfSplitter + 1);
        strs [count] = new String (chars);
        count ++;
    }
    if (initialIndex + splitterLength <= sb.length ()) {
        char [] chars = new char [sb.length () - initialIndex];
        sb.getChars (initialIndex, sb.length (), chars, 0);
        strs [count] = new String (chars);
        count ++;
    }
    String [] result = new String [count];
    for (int i = 0;
    i < count; i ++) {
        result [i] = strs [i];
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20076142_20076260_21_33
20076142_20076396_1_13
Title: Java 2D Array: Multiplication Table 
----------------------------------------

public static int [] [] timesTable (int r, int c) {
    int [] [] yes = new int [r] [c];
    for (int row = 0;
    row < yes.length; row ++) {
        for (int column = 0;
        column < yes [row].length; column ++) {
            yes [row] [column] = (row + 1) * (column + 1);
        }
    }
    return yes;
}
----------------------------------------

public static int [] [] timesTable (int r, int c) {
    int [] [] yes = new int [r] [c];
    for (int row = 1;
    row <= yes.length; row ++) {
        for (int column = 1;
        column <= yes [row].length; column ++) {
            yes [row - 1] [column - 1] = (row) * (column);
        }
    }
    return yes;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20076364_20076497_1_14
20076364_20076498_10_29
Title: How to insert an item at a given position in a linked list? 
----------------------------------------

public void insert (Object item, int pos) {
    Link add = new Link ();
    int ix = pos - 1;
    Link cur = _head;
    for (int i = 0;
    i < _list_size; i ++) {
        if (i == ix) {
            add.next = cur.next;
            cur.next = add;
        }
        cur = cur.next;
    }
    ++ _listsize;
}
----------------------------------------

public void insert (Object item, int pos) {
    Link add = new Link ();
    add.data = item;
    int ix = pos - 1;
    add.next = _head;
    Link previous = _head;
    for (int i = _listsize - 1;
    i > ix; -- i) {
        previous = previous.next;
    }
    Link position = previous.next;
    previous.next = add;
    add.next = position;
    ++ _listsize;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20079524_20080293_19_31
20079524_20080293_53_83
Title: Check if a Particular Object is in a List Using a Given Implementation of equals() 
----------------------------------------

public boolean equals (Object o) {
    if (this == o) {
        return true;
    }
    if (o == null || getClass () != o.getClass ()) {
        return false;
    }
    Box box = (Box) o;
    return category.equals (box.category) && partsInBox.equals (box.partsInBox);
}
----------------------------------------

public boolean equals (Object o) {
    if (this == o) {
        return true;
    }
    if (o == null || ! (o instanceof WrappedBox)) {
        return false;
    }
    WrappedBox other = (WrappedBox) o;
    if (! this.getCategory ().equals (other.getCategory ())) {
        return false;
    }
    List < Integer > x1 = new ArrayList (this.getPartsInBox ());
    List < Integer > x2 = new ArrayList (other.getPartsInBox ());
    Collections.sort (x1);
    Collections.sort (x2);
    return x1.equals (x2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20089933_20090066_5_14
20089933_20090451_1_18
Title: How to separate the number from string in java? 
----------------------------------------

public static void main (String [] args) {
    String str1 = "US Toll Free 1-009-123-8924  UK Toll Free 08081234567  India Toll Free 180012345678 ";
    String numPattern = "\\d[-\\d]*\\d";
    Pattern pattern = Pattern.compile (numPattern);
    Matcher matcher = pattern.matcher (str1);
    while (matcher.find ()) {
        System.out.println (matcher.group ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String str1 = "US Toll Free 1-009-123-8924 ABC";
    String str2 = "UK Toll Free 08081234567 ABC";
    String str3 = "India Toll Free 180012345678";
    String str4 = "India Toll Free 180012345678";
    if (str1.contains ("Toll Free") || str1.contains ("store")) {
    } else {
    }
    System.out.println (getMatch (str1));
    System.out.println (getMatch (str2));
    System.out.println (getMatch (str3));
    System.out.println (getMatch (str4));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20105785_20105951_1_22
20105785_20105977_1_19
Title: Java making maths methods 
----------------------------------------

public int power (int x, int n) {
    int k;
    if (n == 2) {
        k = square (x);
    } else if (n == 3) {
        k = cube (x);
    } else if (n == 4) {
        k = hypercube (x);
    } else if (n == 1) {
        k = x;
    } else {
        k = 1;
        for (int i = 0;
        i < n; i ++) {
            k *= x;
        }
    }

    return k;
}
----------------------------------------

public int power (int x, int n) {
    if (n < 1 || n > 4) {
        throw new IllegalArgumentException ("n is invalid :" + n);
    }
    int k = 0;
    if (n == 2) {
        k = square (x);
    } else if (n == 3) {
        k = cube (x);
    } else if (n == 4) {
        k = hypercube (x);
    } else if (n == 1) {
        k = x;
    }

    return k;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20107474_20107500_5_28
20107474_20107564_1_11
Title: Fix GCD of two integers 
----------------------------------------

public static void main (String args []) {
    Scanner scan = new Scanner (System.in);
    int a = scan.nextInt ();
    int b = scan.nextInt ();
    if (a < b) {
        for (int c = a;
        c > 0; c --) {
            if (a % c == 0 && b % c == 0) {
                System.out.print (c);
            }
        }
    }
    if (b < a) {
        for (int c = b;
        c > 0; c --) {
            if (b % c == 0 && a % c == 0) {
                System.out.print (c);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 60;
    int b = 24;
    for (int i = Math.min (a, b);
    i > 0; i --) {
        if (a % i == 0 && b % i == 0) {
            System.out.println ("GCD: " + i);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20110811_20110943_1_11
20110811_20111277_1_11
Title: "Why does my Java deep copy code tell me ""Assignment requires a deep not shallow copy""?" 
----------------------------------------

public void set (double [] mySamples) {
    if (mySamples == null) {
        throw new IllegalArgumentException ("samples cannot be null");
    } else {
        samples = new double [mySamples.length];
        for (int i = 0;
        i < mySamples.length; i ++) {
            samples [i] = mySamples [i];
        }
    }
}
----------------------------------------

public void set (double [] mySamples) {
    if (mySamples == null) {
        throw new IllegalArgumentException ("samples cannot be null");
    } else {
        samples = new double [mySamples.length];
        for (int i = 0;
        i < mySamples.length; i ++) {
            samples [i] = mySamples [i];
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20116710_20116773_1_12
20116710_20116950_1_11
Title: How to remove element from ArrayList? 
----------------------------------------

public void remove (int pId) {
    Iterator < CartEntry > it = items.iterator ();
    while (it.hasNext ()) {
        CartEntry ce = it.next ();
        if (ce.getpId () == pId) {
            it.remove ();
        }
    }
}
----------------------------------------

public void remove (int pId) {
    Iterator < CartEntry > it = items.iterator ();
    while (it.hasNext ()) {
        CartEntry entry = it.next ();
        if (entry.getpId () == pId) {
            it.remove ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20129281_20131064_39_60
20129281_20131196_1_14
Title: mouse motion listener only in one direction 
----------------------------------------

public void paint (Graphics g) {
    super.paint (g);
    Graphics2D g2d = (Graphics2D) g;
    AffineTransform id = new AffineTransform ();
    width = getSize ().width;
    height = getSize ().height;
    g2d.setColor (Color.BLACK);
    g2d.fillRect (0, 0, width, height);
    g2d.setColor (Color.RED);
    id.scale (5, 5);
    Shape scaled = poly.createTransformedShape (id);
    Rectangle bounds = scaled.getBounds ();
    g2d.translate ((width - bounds.width) / 2, (height - bounds.height) / 2);
    g2d.rotate (Math.toRadians (polyrot), bounds.width / 2, bounds.height / 2);
    g2d.setStroke (new BasicStroke (5f, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));
    g2d.draw (scaled);
}
----------------------------------------

public void paint (Graphics g) {
    super.paint (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    width = getSize ().width;
    height = getSize ().height;
    g2d.setColor (Color.BLACK);
    g2d.fillRect (0, 0, width, height);
    g2d.translate (width / 2, height / 2);
    g2d.rotate (Math.toRadians (polyrot));
    g2d.scale (5, 5);
    g2d.setColor (Color.RED);
    g2d.draw (poly);
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20136505_20137881_122_140
20136505_20137881_65_75
Title: Java: Making a pretty JProgressBar 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (progressDelta < 0) {
        if (renderProgress + progressDelta < targetProgress) {
            ((Timer) e.getSource ()).stop ();
            renderProgress = targetProgress + progressDelta;
        }
    } else {
        if (renderProgress + progressDelta > targetProgress) {
            ((Timer) e.getSource ()).stop ();
            renderProgress = targetProgress - progressDelta;
        }
    }
    renderProgress += progressDelta;
    requestRepaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (value + delta > 100) {
        delta *= - 1;
        value = 100;
    } else if (value + delta < 0) {
        delta *= - 1;
        value = 0;
    }

    value += delta;
    pb.setValue (value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2014781_2014819_1_13
2014781_2014863_1_21
Title: What's the correct way to try a method again after a exception has been handled? 
----------------------------------------

public static void openCSV (String file) {
    FileInputStream fis;
    if (! (new File (file).exists ())) {
        downloadCSV (file);
    }
    try {
        fis = new FileInputStream (file);
    } catch (FileNotFoundException e) {
    }
}
----------------------------------------

public static void openCSV (String file) {
    FileInputStream fis;
    try {
        if (! (new File (file).exists ())) {
            downloadCSV (file);
        }
        fis = new FileInputStream (file);
    } catch (FileNotFoundException e) {
    } finally {
        if (fis != null) {
            try {
                fis.close ();
            } catch (IOException ioe) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2015549_34789979_43_55
2015549_9944468_23_39
Title: Using Command Design pattern 
----------------------------------------

public static void main (String args []) {
    Receiver receiver = new TV ();
    Command onCommand = new OnCommand (receiver);
    Invoker invoker = new Invoker (onCommand);
    invoker.execute ();
    receiver = new DVDPlayer ();
    onCommand = new OnCommand (receiver);
    invoker = new Invoker (onCommand);
    invoker.execute ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int param1 = 10;
    String param2 = "hello";
    Result result = new BasicCommand (new BasicAction (param1, param2)).run ();
    ExceptionHandler myHandler = new ExceptionHandler () {
        @Override
        public void handleException (Exception e) {
            System.out.println ("handled by external handler");
        }}

    ;
    Result result2 = new BasicCommand (new BasicAction (param1, param2)).onException (myHandler).run ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156568_20156777_1_17
20156568_20157179_1_25
Title: Using replace to take a character and change it to another in java 
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) {
        return null;
    }
    String finished = phrase.replace ('4', 'a').replace ('1', 'l').replace ('2', 'z').replace ('5', 's').replace ('8', 'b').replace ('0', 'o').replace ('7', 't').replace ("|_|", "u").replace ("3", "e");
    finished = finished.replace (" e ", " 3 ");
    if (finished.startsWith ("e ")) {
        finished = "3 " + finished.substring (2);
    }
    if (finished.endsWith (" e")) {
        finished = finished.substring (0, finished.length () - 2) + " 3";
    }
    return finished;
}
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) return null;

    boolean threeAtBeginning = false, threeAtEnd = fal;
    if (phrase.charAt (0) == '3' && phrase.charAt (1) == ' ') threeAtBeginning = true;

    int length = phrase.length ();
    if (phrase.charAt (length - 1) == '3' && phrase.charAt (length - 2) == ' ') threeAtEnd = true;

    String finished = phrase.replace ('4', 'a').replace ('1', 'l').replace ('2', 'z').replace ('5', 's').replace ('8', 'b').replace ('0', 'o').replace ('7', 't').replace ("|_|", "u").replace ("3", "e");
    finished = finished.replace (" e ", " 3 ");
    if (threeAtBeginning) finished = '3' + finished.substring (1);

    if (threeAtEnd) finished = finished.substring (0, length - 1) + '3';

    return finished;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156568_20156777_1_17
20156568_20157280_1_50
Title: Using replace to take a character and change it to another in java 
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) {
        return null;
    }
    String finished = phrase.replace ('4', 'a').replace ('1', 'l').replace ('2', 'z').replace ('5', 's').replace ('8', 'b').replace ('0', 'o').replace ('7', 't').replace ("|_|", "u").replace ("3", "e");
    finished = finished.replace (" e ", " 3 ");
    if (finished.startsWith ("e ")) {
        finished = "3 " + finished.substring (2);
    }
    if (finished.endsWith (" e")) {
        finished = finished.substring (0, finished.length () - 2) + " 3";
    }
    return finished;
}
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) return null;

    String finished = "";
    for (int i = 0;
    i < phrase.length (); i ++) {
        char c = phrase.charAt (i);
        if (c == '4') finished += 'a';
        else if (c == '3') {
            if (i != phrase.length () - 1) {
                if (phrase.charAt (i + 1) == ' ') {
                    if (i == 0) finished += c;
                    else if (phrase.charAt (i - 1) == ' ') finished += c;
                    else finished += 'e';

                } else finished += 'e';

            } else {
                if (phrase.charAt (i - 1) == ' ') finished += c;
                else finished += 'e';

            }
        } else if (c == '1') finished += 'l';
        else if (c == '2') finished += 'z';
        else if (c == '5') finished += 's';
        else if (c == '7') finished += 't';
        else if (c == '8') finished += 'b';
        else if (c == '0') finished += 'o';
        else if (i + 2 < phrase.length () && phrase.charAt (i + 1) == '_' && phrase.charAt (i + 2) == '|') {
            finished += 'u';
            i += 2;
        } else finished += c;

    }
    return finished;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156568_20157179_1_25
20156568_20157280_1_50
Title: Using replace to take a character and change it to another in java 
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) return null;

    boolean threeAtBeginning = false, threeAtEnd = fal;
    if (phrase.charAt (0) == '3' && phrase.charAt (1) == ' ') threeAtBeginning = true;

    int length = phrase.length ();
    if (phrase.charAt (length - 1) == '3' && phrase.charAt (length - 2) == ' ') threeAtEnd = true;

    String finished = phrase.replace ('4', 'a').replace ('1', 'l').replace ('2', 'z').replace ('5', 's').replace ('8', 'b').replace ('0', 'o').replace ('7', 't').replace ("|_|", "u").replace ("3", "e");
    finished = finished.replace (" e ", " 3 ");
    if (threeAtBeginning) finished = '3' + finished.substring (1);

    if (threeAtEnd) finished = finished.substring (0, length - 1) + '3';

    return finished;
}
----------------------------------------

public static String translateToEnglish (String phrase) {
    if (phrase == null) return null;

    String finished = "";
    for (int i = 0;
    i < phrase.length (); i ++) {
        char c = phrase.charAt (i);
        if (c == '4') finished += 'a';
        else if (c == '3') {
            if (i != phrase.length () - 1) {
                if (phrase.charAt (i + 1) == ' ') {
                    if (i == 0) finished += c;
                    else if (phrase.charAt (i - 1) == ' ') finished += c;
                    else finished += 'e';

                } else finished += 'e';

            } else {
                if (phrase.charAt (i - 1) == ' ') finished += c;
                else finished += 'e';

            }
        } else if (c == '1') finished += 'l';
        else if (c == '2') finished += 'z';
        else if (c == '5') finished += 's';
        else if (c == '7') finished += 't';
        else if (c == '8') finished += 'b';
        else if (c == '0') finished += 'o';
        else if (i + 2 < phrase.length () && phrase.charAt (i + 1) == '_' && phrase.charAt (i + 2) == '|') {
            finished += 'u';
            i += 2;
        } else finished += c;

    }
    return finished;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156733_52795705_37_55
20156733_52795705_60_88
Title: how to add button click event in android studio 
----------------------------------------

public void onClick (View view) {
    String username = userName_editText.getText ().toString ();
    if (username == null) {
        Toast.makeText (EditProfile.this, "Please enter username to delete your profile", Toast.LENGTH_SHORT).show ();
    } else {
        UserProfile.Users users = dbHandler.readAllInfor (username);
        if (users == null) {
            Toast.makeText (EditProfile.this, "No profile found from this username, please enter valid username", Toast.LENGTH_SHORT).show ();
        } else {
            dbHandler.deleteInfo (username);
            Intent redirectintent_home = new Intent ("com.modelpaper.mad.it17121002.Home");
            startActivity (redirectintent_home);
        }
    }
}
----------------------------------------

public void onClick (View view) {
    String userID_String = intent.getStringExtra (Home.USERID);
    if (userID_String == null) {
        Toast.makeText (EditProfile.this, "Error!!", Toast.LENGTH_SHORT).show ();
        Intent redirectintent_home = new Intent (getApplicationContext (), Home.class);
        startActivity (redirectintent_home);
    }
    int userID = Integer.parseInt (userID_String);
    String username = userName_editText.getText ().toString ();
    String password = password_editText.getText ().toString ();
    String dob = dob_editText.getText ().toString ();
    int selectedGender = genderRadioGroup.getCheckedRadioButtonId ();
    genderRadioBtn = (RadioButton) findViewById (selectedGender);
    String gender = genderRadioBtn.getText ().toString ();
    UserProfile.Users users = UserProfile.getProfile ().getUser ();
    users.setUsername (username);
    users.setPassword (password);
    users.setDob (dob);
    users.setGender (gender);
    users.setId (userID);
    dbHandler.updateInfor (users);
    Toast.makeText (EditProfile.this, "Updated Successfully", Toast.LENGTH_SHORT).show ();
    Intent redirectintent_home = new Intent (getApplicationContext (), Home.class);
    startActivity (redirectintent_home);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156733_52795705_37_55
20156733_52795705_93_115
Title: how to add button click event in android studio 
----------------------------------------

public void onClick (View view) {
    String username = userName_editText.getText ().toString ();
    if (username == null) {
        Toast.makeText (EditProfile.this, "Please enter username to delete your profile", Toast.LENGTH_SHORT).show ();
    } else {
        UserProfile.Users users = dbHandler.readAllInfor (username);
        if (users == null) {
            Toast.makeText (EditProfile.this, "No profile found from this username, please enter valid username", Toast.LENGTH_SHORT).show ();
        } else {
            dbHandler.deleteInfo (username);
            Intent redirectintent_home = new Intent ("com.modelpaper.mad.it17121002.Home");
            startActivity (redirectintent_home);
        }
    }
}
----------------------------------------

public void onClick (View view) {
    String username = userName_editText.getText ().toString ();
    if (username == null) {
        Toast.makeText (EditProfile.this, "Please enter a username", Toast.LENGTH_SHORT).show ();
    } else {
        UserProfile.Users users_search = dbHandler.readAllInfor (username);
        if (users_search == null) {
            Toast.makeText (EditProfile.this, "Please enter a valid username", Toast.LENGTH_SHORT).show ();
        } else {
            userName_editText.setText (users_search.getUsername ());
            password_editText.setText (users_search.getPassword ());
            dob_editText.setText (users_search.getDob ());
            int id = users_search.getId ();
            Intent redirectintent = new Intent ("com.modelpaper.mad.it17121002.EditProfile");
            redirectintent.putExtra (USERID_EDITPROFILE, Integer.toString (id));
            startActivity (redirectintent);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20156733_52795705_60_88
20156733_52795705_93_115
Title: how to add button click event in android studio 
----------------------------------------

public void onClick (View view) {
    String userID_String = intent.getStringExtra (Home.USERID);
    if (userID_String == null) {
        Toast.makeText (EditProfile.this, "Error!!", Toast.LENGTH_SHORT).show ();
        Intent redirectintent_home = new Intent (getApplicationContext (), Home.class);
        startActivity (redirectintent_home);
    }
    int userID = Integer.parseInt (userID_String);
    String username = userName_editText.getText ().toString ();
    String password = password_editText.getText ().toString ();
    String dob = dob_editText.getText ().toString ();
    int selectedGender = genderRadioGroup.getCheckedRadioButtonId ();
    genderRadioBtn = (RadioButton) findViewById (selectedGender);
    String gender = genderRadioBtn.getText ().toString ();
    UserProfile.Users users = UserProfile.getProfile ().getUser ();
    users.setUsername (username);
    users.setPassword (password);
    users.setDob (dob);
    users.setGender (gender);
    users.setId (userID);
    dbHandler.updateInfor (users);
    Toast.makeText (EditProfile.this, "Updated Successfully", Toast.LENGTH_SHORT).show ();
    Intent redirectintent_home = new Intent (getApplicationContext (), Home.class);
    startActivity (redirectintent_home);
}
----------------------------------------

public void onClick (View view) {
    String username = userName_editText.getText ().toString ();
    if (username == null) {
        Toast.makeText (EditProfile.this, "Please enter a username", Toast.LENGTH_SHORT).show ();
    } else {
        UserProfile.Users users_search = dbHandler.readAllInfor (username);
        if (users_search == null) {
            Toast.makeText (EditProfile.this, "Please enter a valid username", Toast.LENGTH_SHORT).show ();
        } else {
            userName_editText.setText (users_search.getUsername ());
            password_editText.setText (users_search.getPassword ());
            dob_editText.setText (users_search.getDob ());
            int id = users_search.getId ();
            Intent redirectintent = new Intent ("com.modelpaper.mad.it17121002.EditProfile");
            redirectintent.putExtra (USERID_EDITPROFILE, Integer.toString (id));
            startActivity (redirectintent);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20165564_20165738_8_28
20165564_20165939_10_26
Title: Calculating days between two dates with Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader br = null;
    br = new BufferedReader (new InputStreamReader (System.in));
    SimpleDateFormat sdf = new SimpleDateFormat ("dd MM yyyy");
    System.out.println ("Insert first date : ");
    Date dt1 = sdf.parse (br.readLine ().trim ());
    System.out.println ("Insert second date : ");
    Date dt2 = sdf.parse (br.readLine ().trim ());
    long diff = dt2.getTime () - dt1.getTime ();
    System.out.println ("Days: " + diff / 1000L / 60L / 60L / 24L);
    if (br != null) {
        br.close ();
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Insert first date: ");
    Scanner s = new Scanner (System.in);
    String firstdate = s.nextLine ();
    System.out.print ("Insert second date: ");
    String seconddate = s.nextLine ();
    DateTimeFormatter dateStringFormat = DateTimeFormat.forPattern ("dd MM yyyy");
    DateTime firstTime = dateStringFormat.parseDateTime (firstdate);
    DateTime secondTime = dateStringFormat.parseDateTime (seconddate);
    int days = Days.daysBetween (new LocalDate (firstTime), new LocalDate (secondTime)).getDays ();
    System.out.println ("Days between the two dates " + days);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20165564_20165738_8_28
20165564_29812532_9_18
Title: Calculating days between two dates with Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader br = null;
    br = new BufferedReader (new InputStreamReader (System.in));
    SimpleDateFormat sdf = new SimpleDateFormat ("dd MM yyyy");
    System.out.println ("Insert first date : ");
    Date dt1 = sdf.parse (br.readLine ().trim ());
    System.out.println ("Insert second date : ");
    Date dt2 = sdf.parse (br.readLine ().trim ());
    long diff = dt2.getTime () - dt1.getTime ();
    System.out.println ("Days: " + diff / 1000L / 60L / 60L / 24L);
    if (br != null) {
        br.close ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    final DateTimeFormatter formatter = DateTimeFormatter.ofPattern ("dd MM yyyy");
    final BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    final String firstInput = reader.readLine ();
    final String secondInput = reader.readLine ();
    final LocalDate firstDate = LocalDate.parse (firstInput, formatter);
    final LocalDate secondDate = LocalDate.parse (secondInput, formatter);
    final long days = ChronoUnit.DAYS.between (firstDate, secondDate);
    System.out.println ("Days between: " + days);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20165564_20165939_10_26
20165564_29812532_9_18
Title: Calculating days between two dates with Java 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Insert first date: ");
    Scanner s = new Scanner (System.in);
    String firstdate = s.nextLine ();
    System.out.print ("Insert second date: ");
    String seconddate = s.nextLine ();
    DateTimeFormatter dateStringFormat = DateTimeFormat.forPattern ("dd MM yyyy");
    DateTime firstTime = dateStringFormat.parseDateTime (firstdate);
    DateTime secondTime = dateStringFormat.parseDateTime (seconddate);
    int days = Days.daysBetween (new LocalDate (firstTime), new LocalDate (secondTime)).getDays ();
    System.out.println ("Days between the two dates " + days);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    final DateTimeFormatter formatter = DateTimeFormatter.ofPattern ("dd MM yyyy");
    final BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    final String firstInput = reader.readLine ();
    final String secondInput = reader.readLine ();
    final LocalDate firstDate = LocalDate.parse (firstInput, formatter);
    final LocalDate secondDate = LocalDate.parse (secondInput, formatter);
    final long days = ChronoUnit.DAYS.between (firstDate, secondDate);
    System.out.println ("Days between: " + days);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20169017_20169632_50_69
20169017_20169838_1_10
Title: Loop in Credit Card Validation in java 
----------------------------------------

public static void main (String [] args) {
    boolean stop = false;
    CreditCardValidator c;
    while (! stop) {
        System.out.print ("Enter a card number: ");
        c = new CreditCardValidator (new Scanner (System.in).nextLine ());
        System.out.println ("Number is valid?: " + c.validateNumber ());
        System.out.print ("\nContinue? (y/n): ");
        if (new Scanner (System.in).next ().charAt (0) == 'n') {
            stop = true;
        }
        System.out.println ();
    }
    System.out.println ("Exiting...");
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    String creditCardNumber = readCreditCardNumber ();
    String correctCreditCardNumber = getCorrectCreditCardNumber (creditCardNumber);
    if (creditCardNumber.equals (correctCreditCardNumber)) {
        System.out.println ("Credit Card Valid");
    } else {
        System.out.println ("Credit Card Invalid. Did you mean " + correctCreditCardNumber + "?");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20169657_20169941_40_53
20169657_20170003_4_12
Title: Setting foreground for JList elements which fulfill certain statement 
----------------------------------------

public Component getListCellRendererComponent (JList < ? > list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component superRenderer = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    setBackground (null);
    setForeground (null);
    if (value != null && ((Integer) value).intValue () > MAX_INT_VALUE) {
        setBackground (HIGH_VALUE_BG);
        setForeground (HIGH_VALUE_FG);
    }
    return superRenderer;
}
----------------------------------------

public Component getListCellRendererComponent (JList < ? > list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component listCellRendererComponent = super.getListCellRendererComponent (list, value, index, isSelected, cellHasFocus);
    if (value.toString ().length () > 1) {
        listCellRendererComponent.setBackground (Color.RED);
    } else {
        listCellRendererComponent.setBackground (list.getBackground ());
    }
    return listCellRendererComponent;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20188776_20189025_7_33
20188776_20189347_4_13
Title: Remove duplicate entries from ArrayList according to first char of string 
----------------------------------------

public static void main (String [] args) {
    List < String > collection = new ArrayList < String > ();
    collection.add ("1 w a");
    collection.add ("2 r a");
    collection.add ("1 r b");
    collection.add ("2 r b");
    collection.add ("3 w a");
    List < Integer > ind = new ArrayList < Integer > ();
    for (int i = 0;
    i < collection.size (); i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (collection.get (j).charAt (0) == collection.get (i).charAt (0)) {
                ind.add (i);
                break;
            }
        }
    }
    for (int k = 0;
    k < ind.size (); k ++) {
        collection.remove (ind.get (k).intValue ());
    }
    for (int i = 0;
    i < collection.size (); i ++) {
        System.out.println (collection.get (i));
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > collection = new ArrayList < String > ();
    collection.add ("1 w a");
    collection.add ("2 r a");
    collection.add ("1 r b");
    collection.add ("2 r b");
    collection.add ("3 w a");
    System.out.println (removeDuplicates (collection));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20190553_20190621_5_21
20190553_20190655_1_24
Title: Java finding a particular letter for the first time 
----------------------------------------

public static char getFirstChar (String str) {
    int indexOfd = str.indexOf ('d');
    int indexOfe = str.indexOf ('e');
    if (indexOfd != - 1 && indexOfe != - 1) {
        return indexOfd < indexOfe ? 'd' : 'e';
    } else if (indexOfd != - 1) {
        return 'd';
    } else if (indexOfe != - 1) {
        return 'e';
    } else {
        return 'o';
    }

}
----------------------------------------

public char getFirstChar (String str) {
    int indexOfd = str.indexOf ('d');
    int indexOfe = str.indexOf ('e');
    if (str.indexOf ('d') != - 1) {
        if (str.indexOf ('e') != - 1) {
            if (indexOfd < indexOfe) {
                return 'd';
            } else {
                return 'e';
            }
        } else {
            return 'd';
        }
    } else {
        if (str.indexOf ('e') != - 1) {
            return 'e';
        } else {
            return 'o';
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20190553_20190621_5_21
20190553_20190819_1_13
Title: Java finding a particular letter for the first time 
----------------------------------------

public static char getFirstChar (String str) {
    int indexOfd = str.indexOf ('d');
    int indexOfe = str.indexOf ('e');
    if (indexOfd != - 1 && indexOfe != - 1) {
        return indexOfd < indexOfe ? 'd' : 'e';
    } else if (indexOfd != - 1) {
        return 'd';
    } else if (indexOfe != - 1) {
        return 'e';
    } else {
        return 'o';
    }

}
----------------------------------------

public char getFirstChar (String s, char a, char b) {
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (c == a) {
            return a;
        }
        if (c == b) {
            return b;
        }
    }
    return ' ';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20190553_20190655_1_24
20190553_20190819_1_13
Title: Java finding a particular letter for the first time 
----------------------------------------

public char getFirstChar (String str) {
    int indexOfd = str.indexOf ('d');
    int indexOfe = str.indexOf ('e');
    if (str.indexOf ('d') != - 1) {
        if (str.indexOf ('e') != - 1) {
            if (indexOfd < indexOfe) {
                return 'd';
            } else {
                return 'e';
            }
        } else {
            return 'd';
        }
    } else {
        if (str.indexOf ('e') != - 1) {
            return 'e';
        } else {
            return 'o';
        }
    }
}
----------------------------------------

public char getFirstChar (String s, char a, char b) {
    for (int i = 0;
    i < s.length (); i ++) {
        char c = s.charAt (i);
        if (c == a) {
            return a;
        }
        if (c == b) {
            return b;
        }
    }
    return ' ';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20192961_20193036_5_72
20192961_20193583_1_11
Title: Convert 1D String array to 2D array each element in row 
----------------------------------------

public static String [] [] mymethod (String [] mystring) {
    int row = 0, col = 0;
    String [] [] india = new String [2] [9];
    String mystringno2 [];
    mystringno2 = mystring;
    int i = 0;
    int j = 0;
    String x = "_";
    int i1;
    String Nahda = "";
    int l;
    for (l = 0; l < mystringno2.length; l ++) {
        Nahda = Nahda.concat (mystringno2 [l]);
    }
    System.out.println (Nahda);
    i1 = 0;
    i = Nahda.indexOf (x, i);
    while (j < Nahda.length ()) {
        i1 = Nahda.indexOf (x, i + 1);
        if (i1 == - 1) {
            india [row] [col] = Nahda.substring (i, Nahda.length () - 1);
            break;
        }
        india [row] [col] = Nahda.substring (i + 1, i1);
        i = i1;
        System.out.print ("Element  " + row + "  " + col + "   " + india [row] [col].toString () + "\n");
        col ++;
        if (col >= 9) {
            col = 0;
            row ++;
        }
    }
    return india;
}
----------------------------------------

public static String [] [] mymethod (String [] input) {
    String [] [] result = new String [input.length] [];
    for (int i = 0;
    i < input.length; i ++) {
        List < String > temp = Arrays.asList (input [i].split ("_"));
        temp = temp.subList (1, temp.size ());
        String [] row = new String [temp.size ()];
        temp.toArray (row);
        result [i] = row;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20192961_20193036_5_72
20192961_20193666_5_73
Title: Convert 1D String array to 2D array each element in row 
----------------------------------------

public static String [] [] mymethod (String [] mystring) {
    int row = 0, col = 0;
    String [] [] india = new String [2] [9];
    String mystringno2 [];
    mystringno2 = mystring;
    int i = 0;
    int j = 0;
    String x = "_";
    int i1;
    String Nahda = "";
    int l;
    for (l = 0; l < mystringno2.length; l ++) {
        Nahda = Nahda.concat (mystringno2 [l]);
    }
    System.out.println (Nahda);
    i1 = 0;
    i = Nahda.indexOf (x, i);
    while (j < Nahda.length ()) {
        i1 = Nahda.indexOf (x, i + 1);
        if (i1 == - 1) {
            india [row] [col] = Nahda.substring (i, Nahda.length () - 1);
            break;
        }
        india [row] [col] = Nahda.substring (i + 1, i1);
        i = i1;
        System.out.print ("Element  " + row + "  " + col + "   " + india [row] [col].toString () + "\n");
        col ++;
        if (col >= 9) {
            col = 0;
            row ++;
        }
    }
    return india;
}
----------------------------------------

public static String [] [] mymethod (String [] mystring) {
    int row = 0, col = 0;
    String [] [] india = new String [2] [9];
    String mystringno2 [];
    mystringno2 = mystring;
    int i = 0;
    int j = 0;
    String x = "_";
    int i1;
    String Nahda = "";
    int l;
    for (l = 0; l < mystringno2.length; l ++) {
        Nahda = Nahda.concat (mystringno2 [l]);
    }
    System.out.println (Nahda);
    i1 = 0;
    while (j < Nahda.length ()) {
        i = Nahda.indexOf (x, i);
        i1 = i + 1;
        i1 = Nahda.indexOf (x, i1);
        if (i1 < 0) {
            break;
        }
        i ++;
        india [row] [col] = Nahda.substring (i, i1);
        System.out.print ("Element  " + row + "  " + col + "   " + india [row] [col] + "\n");
        col ++;
        if (col > 8) {
            row ++;
            col = 0;
        }
    }
    return india;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20192961_20193036_74_95
20192961_20193666_75_96
Title: Convert 1D String array to 2D array each element in row 
----------------------------------------

public static void main (String [] args) {
    String [] s = {"_Netherlands_Iceland_Norway_Denmark_Usa_Brazil_Argentina_Colombuia_Bolivia", "_Belgium_Romania_France_Germany_Switherland_Russia_Sweden_Italy_Austria"};
    String [] [] singapore = new String [s.length] [9];
    singapore = mymethod (s);
    for (int col = 0;
    col < 9; col ++) for (int row = 0;
    row < s.length; row ++) {
        System.out.print (singapore [row] [col] + "\t");
    }

    System.out.println ("\n");
}
----------------------------------------

public static void main (String [] args) {
    String [] s = {"_Netherlands_Iceland_Norway_Denmark_Usa_Brazil_Argentina_Colombuia_Bolivia", "_Belgium_Romania_France_Germany_Switherland_Russia_Sweden_Italy_Austria"};
    String [] [] singapore = new String [s.length] [9];
    singapore = mymethod (s);
    for (int col = 0, k = 0;
    col < 9; col ++) for (int row = 0;
    row < s.length; row ++) {
        System.out.print (singapore [row] [col ++] + "\t");
    }

    System.out.println ("\n");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20192961_20193583_1_11
20192961_20193666_5_73
Title: Convert 1D String array to 2D array each element in row 
----------------------------------------

public static String [] [] mymethod (String [] input) {
    String [] [] result = new String [input.length] [];
    for (int i = 0;
    i < input.length; i ++) {
        List < String > temp = Arrays.asList (input [i].split ("_"));
        temp = temp.subList (1, temp.size ());
        String [] row = new String [temp.size ()];
        temp.toArray (row);
        result [i] = row;
    }
    return result;
}
----------------------------------------

public static String [] [] mymethod (String [] mystring) {
    int row = 0, col = 0;
    String [] [] india = new String [2] [9];
    String mystringno2 [];
    mystringno2 = mystring;
    int i = 0;
    int j = 0;
    String x = "_";
    int i1;
    String Nahda = "";
    int l;
    for (l = 0; l < mystringno2.length; l ++) {
        Nahda = Nahda.concat (mystringno2 [l]);
    }
    System.out.println (Nahda);
    i1 = 0;
    while (j < Nahda.length ()) {
        i = Nahda.indexOf (x, i);
        i1 = i + 1;
        i1 = Nahda.indexOf (x, i1);
        if (i1 < 0) {
            break;
        }
        i ++;
        india [row] [col] = Nahda.substring (i, i1);
        System.out.print ("Element  " + row + "  " + col + "   " + india [row] [col] + "\n");
        col ++;
        if (col > 8) {
            row ++;
            col = 0;
        }
    }
    return india;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20211995_20212132_7_25
20211995_20212153_1_21
Title: How to return more than 1 value of string? 
----------------------------------------

public static String [] decrypt (String [] strToDecrypt) {
    try {
        String [] strDecrypted;
        Cipher cipher = Cipher.getInstance ("aes/cbc/nopadding");
        final SecretKeySpec secretKey = new SecretKeySpec (key, "AES");
        IvParameterSpec ips = new IvParameterSpec (iv);
        cipher.init (Cipher.DECRYPT_MODE, secretKey, ips);
        for (int i = 0;
        i < strToDecrypt.length; i ++) {
            final String decryptedString = new String (cipher.doFinal (Base64.decodeBase64 (strToDecrypt [i])));
            strDecrypted [i] = decryptedString;
        }
        return strDecrypted;
    } catch (Exception e) {
        log.error ("Error while decrypting : " + strToDecrypt, e);
    }
    return null;
}
----------------------------------------

public static String [] decrypt (String [] strToDecrypt) {
    String decryptedString [] = new String [strToDecrypt.length];
    for (int i = 0;
    i < strToDecrypt.length; i ++) {
        try {
            Cipher cipher = Cipher.getInstance ("aes/cbc/nopadding");
            final SecretKeySpec secretKey = new SecretKeySpec (key, "AES");
            IvParameterSpec ips = new IvParameterSpec (iv);
            cipher.init (Cipher.DECRYPT_MODE, secretKey, ips);
            decryptedString [i] = new String (cipher.doFinal (Base64.decodeBase64 (strToDecrypt [i])));
        } catch (Exception e) {
            log.error ("Error while decrypting : " + strToDecrypt [i], e);
        }
    }
    return decryptedString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20213967_36146808_36_44
20213967_36146808_81_90
Title: how can i display components in GUI server without a connected client? 
----------------------------------------

public void run () {
    while (true) {
        synchronized (this) {
            if (socket != null) {
                processServerInput ();
            }
        }
    }
}
----------------------------------------

public void run () {
    JFrame frame = new JFrame ();
    frame.setTitle ("Client");
    frame.add (new Client ());
    frame.pack ();
    frame.setSize (250, 100);
    frame.setLocationRelativeTo (null);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20214308_20214819_22_36
20214308_20215077_23_40
Title: Extending comparable interface and override compareTo 
----------------------------------------

public static void main (String [] args) {
    ConcreteField [] c = new ConcreteField [3];
    c [0] = new ConcreteField ();
    c [1] = new ConcreteField ();
    c [2] = new ConcreteField ();
    c [0].setName ("c");
    c [1].setName ("b");
    c [2].setName ("a");
    Arrays.sort (c);
    for (int i = 0;
    i < c.length; i ++) {
        System.out.println (c [i].getName ());
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Field > list = new ArrayList < Field > ();
    list.add (new ConcreteField ("test"));
    list.add (new ConcreteField ("abc"));
    list.add (new ConcreteField ("dec"));
    list.add (new ConcreteField ("mef"));
    list.add (new ConcreteField ("keg"));
    list.add (new ConcreteField ("sdf"));
    list.add (new ConcreteField ("abc"));
    System.out.println (list);
    Collections.sort (list);
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20225257_20225835_1_19
20225257_20226567_23_91
Title: Group users by age for a range using Java 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int [] groupMin = new int [] {0, 10, 20};
    int [] groupMax = new int [] {10, 20, 9999};
    int [] ages = new int [] {1, 2, 3, 10, 12, 76, 56, 89};
    int targetGroup = 1;
    int count = 0;
    for (int age : ages) {
        if (age >= groupMin [targetGroup] && age < groupMax [targetGroup]) {
            count ++;
        }
    }
    System.out.println ("Group " + targetGroup + " range is " + groupMin [targetGroup] + " - " + groupMax [targetGroup]);
    System.out.println ("Count: " + count);
}
----------------------------------------

public static void main (String a []) {
    UserListDemo uld = new UserListDemo ();
    ArrayList < Users > data = new ArrayList < Users > ();
    uld.initializeUsers (data);
    System.out.println ("Enter age group choice");
    System.out.println ("Enter 1 for age group 1-6");
    System.out.println ("Enter 2 for age group 7-18");
    System.out.println ("Enter 3 for age group 19-26");
    System.out.println ("Enter 4 for age group 27-49");
    System.out.println ("Enter 5 for age group 50-64");
    System.out.println ("Enter 6 for age group 65-79");
    System.out.println ("Enter 7 for age group 80-Older");
    Scanner sc = new Scanner (System.in);
    String choice = sc.nextLine ();
    int ch = Integer.valueOf (choice);
    long result = 0;
    switch (ch) {
        case 1 :
            for (Users us : data) {
                if (us.age <= 6) result ++;

            }
        case 2 :
            for (Users us : data) {
                if (us.age >= 7 && us.age <= 18) result ++;

            }
        case 3 :
            for (Users us : data) {
                if (us.age >= 19 && us.age <= 26) result ++;

            }
        case 4 :
            for (Users us : data) {
                if (us.age >= 27 && us.age <= 49) result ++;

            }
        case 5 :
            for (Users us : data) {
                if (us.age >= 50 && us.age <= 64) result ++;

            }
        case 6 :
            for (Users us : data) {
                if (us.age >= 65 && us.age <= 79) result ++;

            }
        case 7 :
            for (Users us : data) {
                if (us.age >= 80) result ++;

            }
    }
    System.out.println ("For the entered age group :" + ch + " ::" + result + " user has been found");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20227_13612902_31_42
20227_20670_22_42
Title: How do I use 3DES encryption/decryption in Java? 
----------------------------------------

public String encrypt (String unencryptedString) {
    String encryptedString = null;
    try {
        cipher.init (Cipher.ENCRYPT_MODE, key);
        byte [] plainText = unencryptedString.getBytes (UNICODE_FORMAT);
        byte [] encryptedText = cipher.doFinal (plainText);
        encryptedString = new String (Base64.encodeBase64 (encryptedText));
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return encryptedString;
}
----------------------------------------

public byte [] encrypt (String message) throws Exception {
    final MessageDigest md = MessageDigest.getInstance ("md5");
    final byte [] digestOfPassword = md.digest ("HG58YZ3CR9".getBytes ("utf-8"));
    final byte [] keyBytes = Arrays.copyOf (digestOfPassword, 24);
    for (int j = 0, k = 16;
    j < 8;) {
        keyBytes [k ++] = keyBytes [j ++];
    }
    final SecretKey key = new SecretKeySpec (keyBytes, "DESede");
    final IvParameterSpec iv = new IvParameterSpec (new byte [8]);
    final Cipher cipher = Cipher.getInstance ("DESede/CBC/PKCS5Padding");
    cipher.init (Cipher.ENCRYPT_MODE, key, iv);
    final byte [] plainTextBytes = message.getBytes ("utf-8");
    final byte [] cipherText = cipher.doFinal (plainTextBytes);
    return cipherText;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20227_13612902_45_56
20227_20670_44_63
Title: How do I use 3DES encryption/decryption in Java? 
----------------------------------------

public String decrypt (String encryptedString) {
    String decryptedText = null;
    try {
        cipher.init (Cipher.DECRYPT_MODE, key);
        byte [] encryptedText = Base64.decodeBase64 (encryptedString);
        byte [] plainText = cipher.doFinal (encryptedText);
        decryptedText = new String (plainText);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return decryptedText;
}
----------------------------------------

public String decrypt (byte [] message) throws Exception {
    final MessageDigest md = MessageDigest.getInstance ("md5");
    final byte [] digestOfPassword = md.digest ("HG58YZ3CR9".getBytes ("utf-8"));
    final byte [] keyBytes = Arrays.copyOf (digestOfPassword, 24);
    for (int j = 0, k = 16;
    j < 8;) {
        keyBytes [k ++] = keyBytes [j ++];
    }
    final SecretKey key = new SecretKeySpec (keyBytes, "DESede");
    final IvParameterSpec iv = new IvParameterSpec (new byte [8]);
    final Cipher decipher = Cipher.getInstance ("DESede/CBC/PKCS5Padding");
    decipher.init (Cipher.DECRYPT_MODE, key, iv);
    final byte [] plainText = decipher.doFinal (message);
    return new String (plainText, "UTF-8");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228097_1_11
20228040_20228109_1_10
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    boolean value = false;
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            value = true;
            break;
        }
    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228097_1_11
20228040_20228166_1_10
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i < rankHist.length; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228097_1_11
20228040_20228455_1_11
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] < 3) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228109_1_10
20228040_20228166_1_10
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    boolean value = false;
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            value = true;
            break;
        }
    }
    return value;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i < rankHist.length; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228109_1_10
20228040_20228455_1_11
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    boolean value = false;
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] >= 3) {
            value = true;
            break;
        }
    }
    return value;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] < 3) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20228040_20228166_1_10
20228040_20228455_1_11
Title: "Can't return inside an if statement using boolean" 
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i < rankHist.length; i ++) {
        if (rankHist [i] >= 3) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean isThreeKind (int rankHist []) {
    for (int i = 0;
    i <= 13; i ++) {
        if (rankHist [i] < 3) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20232780_20232811_3_21
20232780_20232890_3_21
Title: Java code for a 10 times table 
----------------------------------------

public static void main (String [] args) {
    int lowerValue = 1;
    int upperValue = 10;
    for (int headingIndex = lowerValue;
    headingIndex <= upperValue; headingIndex ++) {
        System.out.print ("\t" + headingIndex);
    }
    System.out.print ('\n');
    for (int inner = lowerValue;
    inner <= upperValue; inner ++) {
        System.out.print (inner);
        for (int outer = 10;
        outer <= upperValue; outer ++) {
            System.out.print ("\t" + (inner * outer));
        }
        System.out.print ('\n');
    }
}
----------------------------------------

public static void main (String [] args) {
    int lowerValue = 1;
    int upperValue = 10;
    for (int headingIndex = lowerValue;
    headingIndex <= upperValue; headingIndex ++) {
        System.out.print ("\t" + headingIndex);
    }
    System.out.print ('\n');
    int inner = 10;
    System.out.print (inner);
    for (int outer = lowerValue;
    outer <= upperValue; outer ++) {
        System.out.print ("\t" + (inner * outer));
    }
    System.out.print ('\n');
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20232780_20232856_1_18
20232780_20232890_3_21
Title: Java code for a 10 times table 
----------------------------------------

public static void main (String [] args) {
    int lowerValueHorizontal = 1;
    int lowerValue = 10;
    int upperValue = 10;
    for (int headingIndex = lowerValueHorizontal;
    headingIndex <= upperValue; headingIndex ++) {
        System.out.print ("\t" + headingIndex);
    }
    System.out.print ('\n');
    for (int inner = lowerValue;
    inner <= upperValue; inner ++) {
        System.out.print (inner);
        for (int outer = lowerValueHorizontal;
        outer <= upperValue; outer ++) {
            System.out.print ("\t" + (inner * outer));
        }
        System.out.print ('\n');
    }
}
----------------------------------------

public static void main (String [] args) {
    int lowerValue = 1;
    int upperValue = 10;
    for (int headingIndex = lowerValue;
    headingIndex <= upperValue; headingIndex ++) {
        System.out.print ("\t" + headingIndex);
    }
    System.out.print ('\n');
    int inner = 10;
    System.out.print (inner);
    for (int outer = lowerValue;
    outer <= upperValue; outer ++) {
        System.out.print ("\t" + (inner * outer));
    }
    System.out.print ('\n');
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20234765_20235911_5_34
20234765_20236069_10_24
Title: Comparing two sets to find out whether first set is a subset of other 
----------------------------------------

public static void main (String [] args) {
    String s [] = {"q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "a", "mmmmm", "d", "f", "g", "h", "j", "k", "l", "z", "x", "c", "v"};
    String s1 [] = {"b", "n", "m", "er", "re", "ew", "j", "k", "x", "qq", "ww", "ee", "c", "v", "t", "y", "d", "f", "g", "h", "u", "rr", "yyy", "uuu", "ttt", "trew", "rerer", "q", "w", "vv", "gg", "hh", "tt", "tr", "ww", "e", "i", "eww", "qwe", "wer", "o", "p", "a", "s", "ds", "cv", "r", "l", "z"};
    System.out.println ("Length of s : " + s.length);
    System.out.println ("Length of s1 : " + s1.length);
    Arrays.sort (s);
    Arrays.sort (s1);
    display (s);
    display (s1);
    int j = 0;
    int count = 0;
    for (int i = 0;
    i < s1.length; i ++) {
        if (s [j].equals (s1 [i])) {
            count ++;
            j ++;
            if (j == 23) break;

        }
    }
    if (j == 23) System.out.println ("23 matches found");
    else System.out.println ("23 matches not found");

}
----------------------------------------

public static void main (String arags []) {
    Set < String > originalset = new HashSet < String > (Arrays.asList (s1));
    Set < String > testset = new HashSet < String > (Arrays.asList (s));
    originalset.retainAll (testset);
    if (originalset.size () == 23) {
        System.out.println ("Sucess 23 matches found");
    } else {
        System.out.println ("Fail 23 matches not found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20236599_20236733_1_18
20236599_47079260_1_12
Title: Removing all occurrences of a character from string without replace method 
----------------------------------------

public static String remove (String a, char b) {
    StringBuilder sb = new StringBuilder ();
    for (char c : a.toCharArray ()) {
        if (c != b) {
            sb.append (c);
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String remove (String a, char b) {
    StringBuilder sbul = new StringBuilder ();
    int i;
    for (i = 0; i < a.length (); i ++) {
        char c = a.charAt (i);
        if (c == b) continue;

        sbul.append (c);
    }
    return sbul.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20238155_20238188_1_17
20238155_20238722_1_14
Title: Printing a Square with loops 
----------------------------------------

static void drawbox (int x, int y) {
    for (int i = 0;
    i < y; i ++) {
        System.out.print ("*");
    }
    System.out.println ();
    for (int i = 0;
    i < x - 2; i ++) {
        System.out.print ("*");
        for (int j = 0;
        j < y - 2; j ++) {
            System.out.print (" ");
        }
        System.out.println ("*");
    }
    for (int i = 0;
    i < y; i ++) {
        System.out.print ("*");
    }
    System.out.println ();
}
----------------------------------------

static void drawbox (int height, int width) {
    for (int i = 1;
    i <= height; i ++) {
        if (i == 1 || i == height) {
            allStars (width);
        } else {
            System.out.print ("* ");
            for (int k = 2;
            k < width; k ++) {
                System.out.print ("  ");
            }
            System.out.print ("*");
            System.out.print ("\n");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20238155_20238722_1_14
20238155_50023338_15_33
Title: Printing a Square with loops 
----------------------------------------

static void drawbox (int height, int width) {
    for (int i = 1;
    i <= height; i ++) {
        if (i == 1 || i == height) {
            allStars (width);
        } else {
            System.out.print ("* ");
            for (int k = 2;
            k < width; k ++) {
                System.out.print ("  ");
            }
            System.out.print ("*");
            System.out.print ("\n");
        }
    }
}
----------------------------------------

static void drawbox (int x, int y) {
    for (int j = 0;
    j < y; j ++) {
        System.out.print ("* ");
    }
    System.out.println ();
    for (int i = 0;
    i < x; i ++) {
        System.out.print ("* ");
        for (int z = 0;
        z < y - 2; z ++) {
            System.out.print ("  ");
        }
        System.out.println ("*");
    }
    for (int k = 0;
    k < y; k ++) {
        System.out.print ("* ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20241503_20242299_1_21
20241503_20246337_10_30
Title: How to read a specific field from a text file in java? 
----------------------------------------

public void readData () {
    String filePath = "/home/sharathgc/IdeaProjects/src/abc";
    File file = new File (filePath);
    String line = null;
    String pattern = "((Id :)(\\d)*)|(Salary :)(\\d)*";
    Pattern r = Pattern.compile (pattern);
    try {
        BufferedReader reader = new BufferedReader (new FileReader (file));
        while ((line = reader.readLine ()) != null) {
            Matcher m = r.matcher (line);
            if (m.find ()) {
                System.out.println (m.group ());
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void readData () {
    String filePath = "Employees";
    File file = new File (filePath);
    String line = null;
    String pattern = "(Id\\s*:)(\\d*)|(Salary\\s*:)(\\d*)";
    Matcher matcher = Pattern.compile (pattern).matcher ("");
    try {
        BufferedReader reader = new BufferedReader (new FileReader (file));
        while ((line = reader.readLine ()) != null) {
            matcher = matcher.reset (line);
            if (matcher.find ()) {
                System.out.println (matcher.group ());
            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20247744_20247834_3_19
20247744_20248347_1_10
Title: Add two array elements using loop 
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [100];
    for (int i = 0;
    i < 100; i ++) {
        nums [i] = i + 1;
        System.out.println (i);
    }
    for (int i = 0;
    i < 99; i ++) {
        System.out.println (nums [i]);
        System.out.println (nums [i + 1]);
        if (nums [i] + nums [i + 1] == 50) {
            System.out.printf ("Successfully finished");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [100];
    nums [0] = 1;
    for (int i = 1;
    i < 100; i ++) {
        nums [i] = i + 1;
        if ((nums [i] + nums [i - 1]) >= 50) {
            System.out.printf ("Successfully finished");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20254914_20255024_1_16
20254914_20255206_1_16
Title: How to delete an entry from an array in Java so that the other entries remain in order 
----------------------------------------

public static void main (String [] args) {
    String [] arr = new String [5];
    arr [0] = "aa";
    arr [1] = "bb";
    arr [2] = "cc";
    arr [3] = "dd";
    arr [4] = "ee";
    System.out.println (Arrays.toString (arr));
    int deleteIndex = 2;
    System.arraycopy (arr, deleteIndex + 1, arr, deleteIndex, arr.length - deleteIndex - 1);
    arr [4] = null;
    System.out.println (Arrays.toString (arr));
}
----------------------------------------

public static void main (String [] args) {
    String [] yourArray = new String [] {"FF", "AA", "BB"};
    for (String s : yourArray) System.out.println (s);

    System.out.println ("");
    ArrayList < String > aList = new ArrayList < String > (Arrays.asList (yourArray));
    aList.remove (1);
    String [] r = aList.toArray (new String [yourArray.length]);
    for (String s : r) System.out.println (s);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20260689_20260911_3_22
20260689_20260931_1_17
Title: "Create two strings of same length one duplicating the other's structure while looping the same letters over and over" 
----------------------------------------

public static String makeStringsEqual (String str, String keyword) {
    String ret = "";
    int ci = 0;
    if (str.length () > keyword.length ()) {
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                if (ci == keyword.length ()) {
                    ci = 0;
                }
                ret += keyword.charAt (ci);
                ci ++;
            } else {
                ret += " ";
            }
        }
    }
    return ret;
}
----------------------------------------

public static String makeStringsEqual (String str, String keyword) {
    StringBuilder equalStringBuilder = new StringBuilder ();
    if (str.length () > keyword.length ()) {
        int keywordIndex = 0;
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                equalStringBuilder.append (keyword.charAt (keywordIndex ++));
                keywordIndex %= keyword.length ();
            } else {
                equalStringBuilder.append (' ');
            }
        }
    }
    return equalStringBuilder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20260689_20260911_3_22
20260689_20261130_1_18
Title: "Create two strings of same length one duplicating the other's structure while looping the same letters over and over" 
----------------------------------------

public static String makeStringsEqual (String str, String keyword) {
    String ret = "";
    int ci = 0;
    if (str.length () > keyword.length ()) {
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                if (ci == keyword.length ()) {
                    ci = 0;
                }
                ret += keyword.charAt (ci);
                ci ++;
            } else {
                ret += " ";
            }
        }
    }
    return ret;
}
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (i % keyword.length ());
            } else result += " ";

        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20260689_20260931_1_17
20260689_20261130_1_18
Title: "Create two strings of same length one duplicating the other's structure while looping the same letters over and over" 
----------------------------------------

public static String makeStringsEqual (String str, String keyword) {
    StringBuilder equalStringBuilder = new StringBuilder ();
    if (str.length () > keyword.length ()) {
        int keywordIndex = 0;
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                equalStringBuilder.append (keyword.charAt (keywordIndex ++));
                keywordIndex %= keyword.length ();
            } else {
                equalStringBuilder.append (' ');
            }
        }
    }
    return equalStringBuilder.toString ();
}
----------------------------------------

public String makeStringsEqual (String str, String keyword) {
    if (str.length () > keyword.length ()) {
        string result = "";
        for (int i = 0;
        i < str.length (); i ++) {
            if (str.charAt (i) != ' ') {
                result += keyword.charAt (i % keyword.length ());
            } else result += " ";

        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20265871_20266329_1_19
20265871_20266363_1_19
Title: Sorting Array Class not working 
----------------------------------------

public int [] sortArray1 (int [] ex) {
    int a;
    printItems ();
    do {
        c ++;
        for (a = 0; a < ex.length - 1; a ++) {
            compare ++;
            if (ex [a] > ex [a + 1]) {
                int temp = ex [a];
                ex [a] = ex [a + 1];
                ex [a + 1] = temp;
                swap ++;
                System.out.println (ex [2]);
            }
        }
        printItems ();
    } while (c != ex.length);
    return ex;
}
----------------------------------------

public int [] sortArray1 (int [] ex) {
    int a;
    printItems ();
    do {
        c ++;
        for (a = 0; a < num.length - 1; a ++) {
            compare ++;
            if (num [a] > num [a + 1]) {
                int temp = num [a];
                num [a] = num [a + 1];
                num [a + 1] = temp;
                swap ++;
                System.out.println (num [2]);
            }
        }
        printItems ();
    } while (c != num.length);
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20273170_20273682_20_40
20273170_20274800_28_46
Title: Writing a Test class 
----------------------------------------

public static void displayDay (int dayNumber) {
    if (dayNumber == 1) {
        System.out.println ("Monday");
    } else if (dayNumber == 2) {
        System.out.println ("Tuesday");
    } else if (dayNumber == 3) {
        System.out.println ("Wednesday");
    } else if (dayNumber == 4) {
        System.out.println ("Thursday");
    } else if (dayNumber == 5) {
        System.out.println ("Friday");
    } else if (dayNumber == 6) {
        System.out.println ("Saturday");
    } else if (dayNumber == 7) {
        System.out.println ("Sunday");
    } else {
        System.out.println (dayNumber + " entered. This is not a valid date.");
    }

}
----------------------------------------

public void displayDay () {
    if (dayNumber == 1) {
        System.out.println ("Monday");
    } else if (dayNumber == 2) {
        System.out.println ("Tuesday");
    } else if (dayNumber == 3) {
        System.out.println ("Wednesday");
    } else if (dayNumber == 4) {
        System.out.println ("Thursday");
    } else if (dayNumber == 5) {
        System.out.println ("Friday");
    } else if (dayNumber == 6) {
        System.out.println ("Saturday");
    } else if (dayNumber == 7) {
        System.out.println ("Sunday");
    } else {
        System.out.println (dayNumber + " entered. This is not a valid date.");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20273170_20273682_6_18
20273170_20274800_7_26
Title: Writing a Test class 
----------------------------------------

public static void main (String [] args) {
    int number, choice = 1;
    Scanner sc = new Scanner (System.in);
    while (choice != 0) {
        System.out.println ("Enter the day number: ");
        number = sc.nextInt ();
        displayDay (number);
        System.out.println ("Press 0 to exit, 1 to continue:");
        choice = sc.nextInt ();
    }
}
----------------------------------------

public static void main (String [] args) {
    DayTwo days = new DayTwo ();
    days.displayDay ();
    days.dayNumber = 4;
    days.displayDay ();
    for (int i = 1;
    i <= 7; i ++) {
        days.dayNumber = i;
        days.displayDay ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20276125_20276299_1_30
20276125_35278145_7_19
Title: How to Print a square with asterisks in java with while loop only? 
----------------------------------------

public static void main (String...args) {
    int len = 5;
    int x = 0;
    while (x ++ < len) {
        System.out.print ("* ");
    }
    System.out.println ();
    x = 0;
    while (x ++ < len - 2) {
        System.out.print ('*');
        int y = 0;
        while (y ++ < len - 2) {
            System.out.print ("  ");
        }
        System.out.println (" *");
    }
    x = 0;
    while (x ++ < len) {
        System.out.print ("* ");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter the size of the side of a square: ");
    Scanner input = new Scanner (System.in);
    int num = input.nextInt ();
    String re1 = repeat1 ("*", num);
    String re2 = repeat2 ("*", num);
    System.out.println (re1);
    System.out.print (re2);
    System.out.print (re1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20276125_20276299_1_30
20276125_51441852_8_31
Title: How to Print a square with asterisks in java with while loop only? 
----------------------------------------

public static void main (String...args) {
    int len = 5;
    int x = 0;
    while (x ++ < len) {
        System.out.print ("* ");
    }
    System.out.println ();
    x = 0;
    while (x ++ < len - 2) {
        System.out.print ('*');
        int y = 0;
        while (y ++ < len - 2) {
            System.out.print ("  ");
        }
        System.out.println (" *");
    }
    x = 0;
    while (x ++ < len) {
        System.out.print ("* ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int row = 1;
    int column = 1;
    int side;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the size of the square side: ");
    side = input.nextInt ();
    while (row <= side) {
        column = 1;
        System.out.print ("*");
        while (column <= (side - 2)) {
            System.out.print (row == 1 || row == side ? "*" : " ");
            ++ column;
        }
        ++ row;
        System.out.printf ("*%n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20276125_35278145_7_19
20276125_51441852_8_31
Title: How to Print a square with asterisks in java with while loop only? 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter the size of the side of a square: ");
    Scanner input = new Scanner (System.in);
    int num = input.nextInt ();
    String re1 = repeat1 ("*", num);
    String re2 = repeat2 ("*", num);
    System.out.println (re1);
    System.out.print (re2);
    System.out.print (re1);
}
----------------------------------------

public static void main (String [] args) {
    int row = 1;
    int column = 1;
    int side;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the size of the square side: ");
    side = input.nextInt ();
    while (row <= side) {
        column = 1;
        System.out.print ("*");
        while (column <= (side - 2)) {
            System.out.print (row == 1 || row == side ? "*" : " ");
            ++ column;
        }
        ++ row;
        System.out.printf ("*%n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2027613_2027641_117_153
2027613_2027641_36_61
Title: How to draw a directed arrow line in Java? 
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength * 0.5f;
    float waistY = arrowRatio * arrowLength * 0.5f * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

void draw (Graphics2D g, int width, int height) {
    g.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g.setColor (Color.WHITE);
    g.fillRect (0, 0, width, height);
    for (Arrow arrow : arrows) {
        g.setColor (Color.ORANGE);
        g.fillRect (350, 20, 20, 280);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL));
        g.translate (0, 60);
        arrow.draw (g);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER));
        g.translate (0, 100);
        arrow.draw (g);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_ROUND));
        g.translate (0, 100);
        arrow.draw (g);
        g.translate (400, - 260);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2027613_2027641_117_153
2027613_2027641_65_111
Title: How to draw a directed arrow line in Java? 
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
    Path2D.Float path = new Path2D.Float ();
    float waisting = 0.5f;
    float waistX = endX - arrowLength * 0.5f;
    float waistY = arrowRatio * arrowLength * 0.5f * waisting;
    float arrowWidth = arrowRatio * arrowLength;
    path.moveTo (veeX - arrowLength, - arrowWidth);
    path.quadTo (waistX, - waistY, endX, 0.0f);
    path.quadTo (waistX, waistY, veeX - arrowLength, arrowWidth);
    path.lineTo (veeX - arrowLength * 0.75f, 0.0f);
    path.lineTo (veeX - arrowLength, - arrowWidth);
    g.setColor (Color.BLUE);
    g.fill (path);
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - arrowLength * 0.5f, 0.0f));
}
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX;
    switch (stroke.getLineJoin ()) {
        case BasicStroke.JOIN_BEVEL :
            veeX = endX - stroke.getLineWidth () * 0.25f;
            break;
        default :
        case BasicStroke.JOIN_MITER :
            veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
            break;
        case BasicStroke.JOIN_ROUND :
            veeX = endX - stroke.getLineWidth () * 0.5f;
            break;
    }
    Path2D.Float path = new Path2D.Float ();
    path.moveTo (veeX - arrowLength, - arrowRatio * arrowLength);
    path.lineTo (veeX, 0.0f);
    path.lineTo (veeX - arrowLength, arrowRatio * arrowLength);
    g.setColor (Color.BLUE);
    g.draw (path);
    g.setColor (Color.YELLOW);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX, 0.0f));
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - stroke.getLineWidth () * 0.25f, 0.0f));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2027613_2027641_36_61
2027613_2027641_65_111
Title: How to draw a directed arrow line in Java? 
----------------------------------------

void draw (Graphics2D g, int width, int height) {
    g.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g.setColor (Color.WHITE);
    g.fillRect (0, 0, width, height);
    for (Arrow arrow : arrows) {
        g.setColor (Color.ORANGE);
        g.fillRect (350, 20, 20, 280);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL));
        g.translate (0, 60);
        arrow.draw (g);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER));
        g.translate (0, 100);
        arrow.draw (g);
        g.setStroke (new BasicStroke (20.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_ROUND));
        g.translate (0, 100);
        arrow.draw (g);
        g.translate (400, - 260);
    }
}
----------------------------------------

public void draw (Graphics2D g) {
    float arrowRatio = 0.5f;
    float arrowLength = 80.0f;
    BasicStroke stroke = (BasicStroke) g.getStroke ();
    float endX = 350.0f;
    float veeX;
    switch (stroke.getLineJoin ()) {
        case BasicStroke.JOIN_BEVEL :
            veeX = endX - stroke.getLineWidth () * 0.25f;
            break;
        default :
        case BasicStroke.JOIN_MITER :
            veeX = endX - stroke.getLineWidth () * 0.5f / arrowRatio;
            break;
        case BasicStroke.JOIN_ROUND :
            veeX = endX - stroke.getLineWidth () * 0.5f;
            break;
    }
    Path2D.Float path = new Path2D.Float ();
    path.moveTo (veeX - arrowLength, - arrowRatio * arrowLength);
    path.lineTo (veeX, 0.0f);
    path.lineTo (veeX - arrowLength, arrowRatio * arrowLength);
    g.setColor (Color.BLUE);
    g.draw (path);
    g.setColor (Color.YELLOW);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX, 0.0f));
    g.setColor (Color.RED);
    g.draw (new Line2D.Float (50.0f, 0.0f, veeX - stroke.getLineWidth () * 0.25f, 0.0f));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20281835_42372854_1_24
20281835_42641329_8_21
Title: How to delete a folder with files using Java 
----------------------------------------

public static void deleteDirectory (String directoryFilePath) throws IOException {
    Path directory = Paths.get (directoryFilePath);
    if (Files.exists (directory)) {
        Files.walkFileTree (directory, new SimpleFileVisitor < Path > () {
            @Override
            public FileVisitResult visitFile (Path path, BasicFileAttributes basicFileAttributes) throws IOException {
                Files.delete (path);
                return FileVisitResult.CONTINUE;
            }@Override
            public FileVisitResult postVisitDirectory (Path directory, IOException ioException) throws IOException {
                Files.delete (directory);
                return FileVisitResult.CONTINUE;
            }}

        );
    }
}
----------------------------------------

static public boolean deleteDirectory (File path) {
    if (path.exists ()) {
        File [] files = path.listFiles ();
        for (int i = 0;
        i < files.length; i ++) {
            if (files [i].isDirectory ()) {
                deleteDirectory (files [i]);
            } else {
                files [i].delete ();
            }
        }
    }
    return (path.delete ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20294855_20295070_1_16
20294855_20295525_1_22
Title: Math and Arrays 
----------------------------------------

public static void main (String [] args) {
    double [] [] alpha = new double [10] [5];
    for (int i = 0;
    i < 10; i ++) {
        for (int j = 0;
        j < 5; j ++) {
            int index = (5 * i + j);
            if (index < 25) {
                alpha [i] [j] = (index * index);
                System.out.println ("index(" + index + ")^2 =" + alpha [i] [j]);
            } else {
                alpha [i] [j] = (3 * index);
                System.out.println ("3*index(" + index + ") = " + alpha [i] [j]);
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    double alpha [] [] = new double [10] [5];
    int index = 0;
    for (int row = 0;
    row < alpha.length; row ++) {
        for (int col = 0;
        col < alpha [row].length; col ++) {
            if (index < 25) alpha [row] [col] = Math.pow (index, 2);
            else alpha [row] [col] = index * 3;

            index ++;
            System.out.println (alpha [row] [col]);
        }
        System.out.println ("" + '\n');
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20302811_20303275_29_36
20302811_20303556_1_11
Title: Java Hashmap two identical objects stored seperate 
----------------------------------------

public boolean equals (Object arg0) {
    if (arg0 == this) {
        return true;
    }
    if (! (arg0 instanceof MyPersonalClass)) {
        return false;
    }
    MyPersonalClass obj = (MyPersonalClass) arg0;
    return obj.someString.equals (this.someString) && obj.someInt == this.someInt;
}
----------------------------------------

@Override
public boolean equals (Object o) {
    PacmanVeld p = (PacmanVeld) o;
    if (p.nodes.length != nodes.length) {
        return false;
    }
    for (int i = 0;
    i < nodes.length; i ++) {
        if (! Arrays.deepEquals (nodes [i], p.nodes [i])) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20305445_20305616_46_56
20305445_20305616_58_71
Title: Could anyone correct my code? Using method and arrays 
----------------------------------------

public static void getBounds (double x) {
    int num;
    for (int i = 1;
    i <= DEPT1_EMP; i ++) {
        System.out.print ("How many years have the employee No. " + k);
        num = read.next ();
        if (num > 10) {
            salary_Dept1 [k] = salary_Dept1 [k] + (20 / 100) * salary_Dept1 [k];
        }
    }
}
----------------------------------------

public static void getBounds (int x) {
    char fORp;
    for (int i = 1;
    i <= DEPT2_EMP; i ++) {
        System.out.print ("the empolyee number " + i + " if s/he works full-time or part=time (F/P)?");
        fORp = read.next.charAt (0);
        if (fOrp == 'F') {
            salary_Dept2 [i] = salary_Dept2 [i] + 700;
        } else if (fOrp == 'P') {
            salary_Dept2 [i] = salary_Dept2 [i] + 250;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20306520_20318530_171_216
20306520_20318530_223_259
Title: Beginner Java/Android 
----------------------------------------

public void onClick (View v) {
    if (filterEditText.getText ().length () > 0) {
        filtered = filter + "%3A" + filterEditText.getText ().toString ();
    } else {
        filtered = "";
    }
    {
        if (queryEditText.getText ().length () > 0 && tagEditText.getText ().length () > 0) makeTag (queryEditText.getText ().toString (), tagEditText.getText ().toString (), filtered);

        queryEditText.setText ("");
        tagEditText.setText ("");
        filterEditText.setText ("");
        ((InputMethodManager) getSystemService (Context.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow (tagEditText.getWindowToken (), 0);
    } {
        AlertDialog.Builder builder = new AlertDialog.Builder (FavoriteTwitterSearches.this);
        builder.setTitle (R.string.missingTitle);
        builder.setPositiveButton (R.string.OK, null);
        builder.setMessage (R.string.missingMessage);
        AlertDialog errorDialog = builder.create ();
        errorDialog.show ();
    }}
----------------------------------------

public void onClick (View v) {
    AlertDialog.Builder builder = new AlertDialog.Builder (FavoriteTwitterSearches.this);
    builder.setTitle (R.string.confirmTitle);
    builder.setPositiveButton (R.string.erase, new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int button) {
            clearButtons ();
            SharedPreferences.Editor preferencesEditor = savedSearches.edit ();
            preferencesEditor.clear ();
            preferencesEditor.apply ();
        }}

    );
    builder.setCancelable (true);
    builder.setNegativeButton (R.string.cancel, null);
    builder.setMessage (R.string.confirmMessage);
    AlertDialog confirmDialog = builder.create ();
    confirmDialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20317865_20317887_1_15
20317865_20318047_1_10
Title: Java paintComponent running but not showing 
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g;
    if (this.good) {
        g2d.setColor (Color.green);
    } else {
        g2d.setColor (Color.red);
    }
    g2d.fillRect (this.x, this.y, this.w, this.h);
    System.out.println ("painting");
    System.out.println (getSize ());
}
----------------------------------------

public void paintComponent (Graphics g) {
    Graphics2D g2d = (Graphics2D) g;
    if (this.good) {
        g2d.setColor (Color.green);
    } else {
        g2d.setColor (Color.red);
    }
    super.paintComponent (g2d);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20318887_20319030_1_16
20318887_20319119_1_14
Title: "How do I replace a certrain char in a string of ""****"" with a char taken as input? Java" 
----------------------------------------

private static String modifyGuess (char inChar, String word, String currentGuess) {
    int occurences = 0;
    char [] wordArray = word.toCharArray ();
    char [] guessArray = currentGuess.toCharArray ();
    for (int i = 0;
    i < guessArray.length; i ++) {
        if (guessArray [i] == '*') {
            if (wordArray [i] == inChar) {
                guessArray [i] = inChar;
                occurences ++;
            }
        }
    }
    System.out.println ("The character " + inChar + " occurs in " + occurences + " positions.");
    System.out.println (" ");
    return new String (guessArray);
}
----------------------------------------

public static String modifyGuess (char letter, String word, String result) {
    int occurrences = 0;
    StringBuilder builder = new StringBuilder ();
    for (int i = 0;
    i < word.length (); ++ i) {
        if (word.charAt (i) == letter) {
            builder.append (letter);
            occurrences ++;
        } else {
            builder.append (result.charAt (i));
        }
    }
    System.out.println ("\nThe character " + letter + " occurs in " + occurrences + " positions\n");
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20318887_20319030_1_16
20318887_20319266_10_18
Title: "How do I replace a certrain char in a string of ""****"" with a char taken as input? Java" 
----------------------------------------

private static String modifyGuess (char inChar, String word, String currentGuess) {
    int occurences = 0;
    char [] wordArray = word.toCharArray ();
    char [] guessArray = currentGuess.toCharArray ();
    for (int i = 0;
    i < guessArray.length; i ++) {
        if (guessArray [i] == '*') {
            if (wordArray [i] == inChar) {
                guessArray [i] = inChar;
                occurences ++;
            }
        }
    }
    System.out.println ("The character " + inChar + " occurs in " + occurences + " positions.");
    System.out.println (" ");
    return new String (guessArray);
}
----------------------------------------

public static String modifyGuess (char inChar, String word, String currentGuess) {
    StringBuilder sb = new StringBuilder (currentGuess);
    for (int index = 0;
    index < word.length (); index ++) {
        if (word.charAt (index) == inChar) {
            sb.replace (index, index, Character.toString (inChar));
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20318887_20319119_1_14
20318887_20319266_10_18
Title: "How do I replace a certrain char in a string of ""****"" with a char taken as input? Java" 
----------------------------------------

public static String modifyGuess (char letter, String word, String result) {
    int occurrences = 0;
    StringBuilder builder = new StringBuilder ();
    for (int i = 0;
    i < word.length (); ++ i) {
        if (word.charAt (i) == letter) {
            builder.append (letter);
            occurrences ++;
        } else {
            builder.append (result.charAt (i));
        }
    }
    System.out.println ("\nThe character " + letter + " occurs in " + occurrences + " positions\n");
    return builder.toString ();
}
----------------------------------------

public static String modifyGuess (char inChar, String word, String currentGuess) {
    StringBuilder sb = new StringBuilder (currentGuess);
    for (int index = 0;
    index < word.length (); index ++) {
        if (word.charAt (index) == inChar) {
            sb.replace (index, index, Character.toString (inChar));
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20330171_20330239_1_12
20330171_20330728_6_17
Title: Counter: decrease method disregards boolean 
----------------------------------------

public Counter (int startingValue, boolean check) {
    this.check = check;
    if (check == true) {
        value = startingValue;
        if (value < 0) {
            value = 0;
        }
    } else {
        value = startingValue;
    }
}
----------------------------------------

public Counter (int startingValue, boolean check) {
    this.check = check;
    if (this.check) {
        this.value = startingValue;
        if (value < 0) {
            value = 0;
        }
    } else {
        this.value = startingValue;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20331535_20331600_1_11
20331535_20331653_1_14
Title: Check if element of linked list exists 
----------------------------------------

public boolean member (Integer val) {
    Node current = node;
    while (current != null) {
        if (current.val.equals (val)) {
            return true;
        } else {
            current = current.next;
        }
    }
    return false;
}
----------------------------------------

public boolean member (Node root, Integer val) {
    Node currentNode = root;
    while (currentNode != null) {
        if (val.equals (currentNode.val)) {
            System.out.println ("true");
            return true;
        }
        currentNode = root.next ();
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20336996_20337025_1_15
20336996_51115512_1_16
Title: "this method must return a result of type boolean java" 
----------------------------------------

public boolean Winner () {
    for (int z = 0;
    z < 3; z ++) {
        if (board [z] != null && board [z] == board [z + 3] && board [z] == board [z + 6]) {
            return true;
        }
    }
    for (int i = 0;
    i < 7; i += 3) {
        if (board [i] != null && board [i] == board [i + 1] && board [i] == board [i + 2]) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public boolean Winner () {
    for (int z = 0;
    z < 3; z ++) {
        if (board [z] != null && board [z] == board [z + 3] && board [z] == board [z + 6]) {
            return true;
        } else {
            return false;
        }
    }
    for (int i = 0;
    i < 7; i += 3) {
        if (board [i] != null && board [i] == board [i + 1] && board [i] == board [i + 2]) {
            return true;
        } else {
            return false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20342462_20358673_1_38
20342462_51849069_15_35
Title: Review an answer - Decode Ways 
----------------------------------------

static int numDecodings (String encodedText) {
    int [] cache = {1, 0, 0};
    for (int position = encodedText.length () - 1;
    position >= 0; position --) {
        cache [2] = cache [1];
        cache [1] = cache [0];
        cache [0] = 0;
        if (position + 0 < encodedText.length ()) {
            char c = encodedText.charAt (position + 0);
            if ('1' <= c && c <= '9') {
                cache [0] += cache [1];
            }
        }
        if (position + 1 < encodedText.length ()) {
            char c1 = encodedText.charAt (position + 0);
            char c2 = encodedText.charAt (position + 1);
            if ('1' == c1) {
                cache [0] += cache [2];
            } else if ('2' == c1 && '0' <= c2 && c2 <= '6') {
                cache [0] += cache [2];
            }

        }
    }
    return cache [0];
}
----------------------------------------

int numDecodings (string A) {
    int ans = 1;
    int nc;
    if ((A.length () == 0) || (A [0] == '0')) return 0;

    for (int i = 1;
    i < A.length (); i ++) {
        if (A [i] == '0' && validTens (A, i - 1) == false) return 0;

        while (i < A.length () && validTens (A, i - 1)) {
            if (A [i] == '0') {
                if (nc > 0) nc --;

            } else nc ++;

            i ++;
        }
        ans *= ways (nc);
        nc = 0;
    }
    return ans;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2034444_2034480_1_13
2034444_23826487_60_72
Title: java implementation of Linked List Data Structure 
----------------------------------------

public void removeLast () {
    if (this.head != null) {
        if (this.head.next == null) {
            this.head = null;
        } else {
            LLNode prelast = this.head;
            while (prelast.next.next != null) prelast = prelast.next;

            prelast.next = null;
        }
    }
}
----------------------------------------

public static void removeLast () {
    if (firstNode == null || firstNode.next == null) {
        firstNode = null;
        return;
    }
    Node current = firstNode;
    Node tmphead = current;
    while (current.next.next != null) {
        current = current.next;
    }
    current.next = null;
    firstNode = tmphead;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20356298_20434361_32_43
20356298_20434361_51_65
Title: JavaFX: How to focus and select to the next cell with a ListView when scrolling? 
----------------------------------------

public void changed (ObservableValue < ? extends Skin > ov, Skin t, Skin t1) {
    if (t1 == null) {
        return;
    }
    TableViewSkin skin = (TableViewSkin) t1;
    ObservableList < Node > kids = skin.getChildrenUnmodifiable ();
    if (kids != null && ! kids.isEmpty ()) {
        flow = (VirtualFlow) kids.get (1);
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends Number > ov, Number t, Number t1) {
    if (t1 == null || flow == null || t1.intValue () < 0) {
        return;
    }
    if (flow.getFirstVisibleCell () == null) {
        return;
    }
    int selected = t1.intValue ();
    int first = flow.getFirstVisibleCell ().getIndex ();
    int last = flow.getLastVisibleCell ().getIndex ();
    if (selected <= first || selected >= last) {
        flow.show (selected);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20366054_20366196_4_13
20366054_20366202_1_18
Title: java : Inverted string triangle using recursion? 
----------------------------------------

public static void trianglePrint (String string, int padding) {
    for (int i = 0;
    i < padding; i ++) {
        System.out.print (" ");
    }
    System.out.println (string);
    if (string.length > 2) {
        int midpoint = string.length () / 2;
        trianglePrint (string.substring (0, midpoint - 1) + string.substring (midpoint + 1), padding + 1);
    }
}
----------------------------------------

public static void trianglePrint (String in, int offset) {
    if (offset >= in.length ()) {
        return;
    }
    StringBuilder sb = new StringBuilder (offset);
    for (int i = 0;
    i < offset; i ++) {
        sb.append (' ');
    }
    final String padding = sb.toString ();
    sb.append (in);
    sb.append (padding);
    System.out.println (sb.toString ());
    int left = in.length () / 2;
    String lh = in.substring (0, left - 1);
    String rh = in.substring (left + 1, in.length ());
    trianglePrint (lh + rh, offset + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20373068_20373227_3_18
20373068_20373416_3_30
Title: For loops and divisibility of numbers 
----------------------------------------

public static void main (String [] args) {
    for (int g = 1;
    g < 101; g ++) {
        if ((g % 2) == 0 && (g % 3) == 0) System.out.println ("g is divisible by 2 and 3");
        else System.out.println ("g is not divisible by 2 and 3");

        if ((g % 7) == 0 || (g % 9) == 0) System.out.println ("g is divisible by 7 or 9");
        else System.out.println ("g is not divisible by 7 or 9");

        if (((g % 2) == 0) && ((g % 3) == 0) && ((g % 5) != 0)) System.out.println ("g is divisible by 2 and 3 but 5");
        else System.out.println ("g is not divisible by 2 and 3 but 5");

    }
}
----------------------------------------

public static void main (String [] args) {
    for (int g = 1;
    g <= 100; g ++) {
        if ((g % 2) == 0 && (g % 3) == 0) {
            System.out.println (g + " is divisible by 2 and 3");
        } else {
            System.out.println (g + " is not divisible by 2 and 3");
        }
        if ((g % 7) == 0 || (g % 9) == 0) {
            System.out.println (g + " is divisible by 7 or 9");
        } else {
            System.out.println (g + " is not divisible by 7 or 9");
        }
        if (((g % 2) == 0) && ((g % 3) == 0)) {
            if ((g % 5) == 0) {
                System.out.println (g + " is divisible by 2 and 3 and 5");
            } else {
                System.out.println (g + " is divisible by 2 and 3 but 5");
            }
        } else if ((g % 5) == 0) {
            System.out.println (g + " is not divisible by 2 and 3 but 5");
        } else {
            System.out.println (g + " is not divisible by 2 and 3 and 5");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20380991_40322992_8_18
20380991_47358697_1_22
Title: Fill an array with random numbers 
----------------------------------------

public static void main (String [] args) {
    int min = 0;
    int max = 10;
    int numCentroids = 10;
    ArrayList < Integer > values = randomCentroids (min, max, numCentroids);
    for (Integer i : values) {
        System.out.print (i + " ");
    }
}
----------------------------------------

public static void main (String args []) {
    int i;
    int [] array = new int [50];
    for (i = 0; i < array.length; i ++) {
        array [i] = (int) (Math.random () * 100);
        System.out.print (array [i] + "  ");
        int smallest = array [0];
        for (i = 1; i < array.length; i ++) {
            if (array [i] < smallest) smallest = array [i];

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2038411_2038454_1_53
2038411_2038461_1_32
Title: String Tokenizer 
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2038411_2038454_1_53
2038411_2038477_1_53
Title: String Tokenizer 
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2038411_2038461_1_32
2038411_2038477_1_53
Title: String Tokenizer 
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------

public String [] split (String toSplit, char delim, boolean ignoreEmpty) {
    StringBuffer buffer = new StringBuffer ();
    Stack stringStack = new Stack ();
    for (int i = 0;
    i < toSplit.length (); i ++) {
        if (toSplit.charAt (i) != delim) {
            buffer.append ((char) toSplit.charAt (i));
        } else {
            if (buffer.toString ().trim ().length () == 0 && ignoreEmpty) {
            } else {
                stringStack.addElement (buffer.toString ());
            }
            buffer = new StringBuffer ();
        }
    }
    if (buffer.length () != 0) {
        stringStack.addElement (buffer.toString ());
    }
    String [] split = new String [stringStack.size ()];
    for (int i = 0;
    i < split.length; i ++) {
        split [split.length - 1 - i] = (String) stringStack.pop ();
    }
    stringStack = null;
    buffer = null;
    return split;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20384294_20384818_2_13
20384294_20388420_2_13
Title: Correct formatting 
----------------------------------------

public static void main (String [] args) {
    String [] [] anArray = {{"Ireland", "Green"}, {"England", "White"}};
    for (int i = 0;
    i < anArray.length; i ++) {
        for (int j = 0;
        j < anArray.length; j ++) {
            System.out.print (anArray [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] [] anArray = {{"Ireland", "Green"}, {"England", "White"}};
    for (int i = 0;
    i < anArray.length; i ++) {
        for (int j = 0;
        j < anArray.length; j ++) {
            System.out.print (anArray [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20390960_20391075_8_34
20390960_20391177_20_38
Title: Android: accessing gps function when a button is clicked 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_saver);
    b = (Button) findViewById (R.id.button1);
    b.setOnClickListener (new OnClickListener () {
        public void onClick (View v) {
            if (newLocation != null) {
                String Text = "Current location is: " + "Latitud = " + newLocation.getLatitude () + "Longitud = " + newLocation.getLongitude ();
                Toast.makeText (getApplicationContext (), Text, Toast.LENGTH_SHORT).show ();
            }
        }}

    );
    LocationManager mlocManager = (LocationManager) getSystemService (Context.LOCATION_SERVICE);
    LocationListener mlocListener = new MyLocationListener ();
    mlocManager.requestLocationUpdates (LocationManager.GPS_PROVIDER, 0, 0, mlocListener);
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_saver);
    b = (Button) findViewById (R.id.button1);
    b.setOnClickListener (new OnClickListener () {
        public void onClick (View v) {
            isGpsOn = true;
        }}

    );
    LocationManager mlocManager = (LocationManager) getSystemService (Context.LOCATION_SERVICE);
    LocationListener mlocListener = new MyLocationListener ();
    mlocManager.requestLocationUpdates (LocationManager.GPS_PROVIDER, 0, 0, mlocListener);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20402570_33116604_1_14
20402570_41135229_1_102
Title: "Given a string does ""xyz"" appear in the middle of the string?" 
----------------------------------------

public boolean xyzMiddle (String str) {
    int len = str.length ();
    if (len < 3) {
        return false;
    }
    if (len == 3 && str.equals ("xyz")) {
        return true;
    }
    int index = middleIndex (str);
    String left = str.substring (0, index);
    String right = str.substring (index + 3);
    return (Math.abs (left.length () - right.length ()) <= 1);
}
----------------------------------------

public boolean xyzMiddle (String str) {
    if (str.length () >= 3) {
        if (str.length () % 2 == 1) {
            if (str.substring ((str.length () / 2) - 1, ((str.length () / 2) - 1) + 3).equals ("xyz")) {
                return true;
            } else {
                return false;
            }
        } else {
            if (str.substring ((str.length () - 1) / 2, ((str.length () - 1) / 2) + 3).equals ("xyz")) {
                return true;
            } else if (str.substring ((((str.length () - 1) / 2) - 1), (((str.length () - 1) / 2) - 1) + 3).equals ("xyz")) {
                return true;
            } else {
                return false;
            }

        }
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20413910_20413933_6_41
20413910_20413938_2_27
Title: How can i add a keylistener to my Gui in java 
----------------------------------------

public static void main (String [] args) {
    JFrame ablak = new JFrame ("Snake game");
    ablak.setVisible (true);
    ablak.setSize (new Dimension (600, 600));
    ablak.setFocusable (true);
    ablak.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    ablak.addKeyListener (new KeyAdapter () {
        @Override
        public void keyPressed (KeyEvent e) {
            if (e.getKeyCode () == KeyEvent.VK_UP) {
                System.out.println ("Hi from KeyListener");
            }
        }}

    );
    JPanel contentPane = (JPanel) ablak.getContentPane ();
    int condition = JComponent.WHEN_IN_FOCUSED_WINDOW;
    InputMap inputMap = contentPane.getInputMap (condition);
    ActionMap actionMap = contentPane.getActionMap ();
    String down = "down";
    inputMap.put (KeyStroke.getKeyStroke (KeyEvent.VK_DOWN, 0), down);
    actionMap.put (down, new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent arg0) {
            System.out.println ("Hi from Key Binding");
        }}

    );
    JButton fooButton = new JButton ("Foo");
    contentPane.setLayout (new FlowLayout ());
    contentPane.add (fooButton);
    ablak.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame ablak = new JFrame ("Snake game");
    ablak.setVisible (true);
    ablak.setSize (new Dimension (600, 600));
    ablak.setFocusable (true);
    ablak.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    ablak.addKeyListener (new KeyListener () {
        @Override
        public void keyPressed (KeyEvent e) {
            if (e.getKeyCode () == KeyEvent.VK_UP) {
                System.out.println ("Hi");
            }
        }@Override
        public void keyTyped (KeyEvent e) {
            throw new UnsupportedOperationException ("Not supported yet.");
        }@Override
        public void keyReleased (KeyEvent e) {
            throw new UnsupportedOperationException ("Not supported yet.");
        }}

    );
    ablak.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20414263_20414278_1_11
20414263_20414311_1_12
Title: Is this a valid Method? Eclipse seems to suggest there is ab issue with my code..I just do not see it 
----------------------------------------

public String hasPassed () {
    String toReturn = null;
    if (totalMark == 100 && totalMark > passMark) {
        toReturn = "Pass";
    } else if (totalMark != 100) {
        toReturn = "There is an error with the mark allocation";
    }

    return toReturn;
}
----------------------------------------

public String hasPassed () {
    if (totalMark == 100 && totalMark > passMark) {
        return "Pass";
    } else if (totalMark != 100) {
        return "There is an error with the mark allocation";
    }

    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20414263_20414278_1_11
20414263_20414346_1_14
Title: Is this a valid Method? Eclipse seems to suggest there is ab issue with my code..I just do not see it 
----------------------------------------

public String hasPassed () {
    String toReturn = null;
    if (totalMark == 100 && totalMark > passMark) {
        toReturn = "Pass";
    } else if (totalMark != 100) {
        toReturn = "There is an error with the mark allocation";
    }

    return toReturn;
}
----------------------------------------

public String hasPassed () {
    String message = "Default message";
    if (totalMark == 100 && totalMark > passMark) {
        message = "Pass";
    } else if (totalMark != 100) {
        message = "There is an error with the mark allocation";
    }

    return message;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
20414263_20414311_1_12
20414263_20414346_1_14
Title: Is this a valid Method? Eclipse seems to suggest there is ab issue with my code..I just do not see it 
----------------------------------------

public String hasPassed () {
    if (totalMark == 100 && totalMark > passMark) {
        return "Pass";
    } else if (totalMark != 100) {
        return "There is an error with the mark allocation";
    }

    return null;
}
----------------------------------------

public String hasPassed () {
    String message = "Default message";
    if (totalMark == 100 && totalMark > passMark) {
        message = "Pass";
    } else if (totalMark != 100) {
        message = "There is an error with the mark allocation";
    }

    return message;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2041542_2041629_9_22
2041542_24372597_13_27
Title: Java: Why does this swap method not work? 
----------------------------------------

public static void main (String [] args) {
    AtomicReference < Integer > a = new AtomicReference < Integer > (1);
    AtomicReference < Integer > b = new AtomicReference < Integer > (2);
    System.out.println ("a = " + a);
    System.out.println ("b = " + b);
    swap (a, b);
    System.out.println ("a = " + a);
    System.out.println ("b = " + b);
}
----------------------------------------

public static void main (String [] arguments) {
    Swap trial = new Swap ();
    trial.n1 = 2;
    trial.n2 = 3;
    System.out.println ("trial.n1 = " + trial.n1);
    System.out.println ("trial.n2 = " + trial.n2);
    trial.valueSwap ();
    System.out.println ("trial.n1 = " + trial.n1);
    System.out.println ("trial.n2 = " + trial.n2);
}
----------------------------------------
