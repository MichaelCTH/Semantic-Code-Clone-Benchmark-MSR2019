$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_29459419_1_35
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_13337858_1_18
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_13337859_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_24751626_1_14
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_29459419_1_35
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337856_1_32
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_13337859_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_24751626_1_14
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_29459419_1_35
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337858_1_18
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_24751626_1_14
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_29459419_1_35
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337859_1_15
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_24751626_1_14
13337515_29459419_1_35
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_24751626_1_14
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_24751626_1_14
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_24751626_1_14
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_24751626_1_14
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29459419_1_35
13337515_29681555_1_24
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29459419_1_35
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29459419_1_35
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29459419_1_35
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums.length < 2) {
        return nums;
    }
    int index = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only5 = fives (nums);
    int [] after4 = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 4) {
            after4 [index] = nums [a + 1];
            index ++;
            nums [a + 1] = only5 [index2];
            index2 ++;
        }
    }
    while (nums [0] == 5) {
        nums [0] = after4 [index3];
        index3 ++;
    }
    if (nums [nums.length - 2] != 4 && nums [nums.length - 1] == 5) {
        nums [nums.length - 1] = after4 [index3];
        index3 ++;
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 5 && nums [b - 1] != 4) {
            nums [b] = after4 [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29681555_1_24
13337515_35931179_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29681555_1_24
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_29681555_1_24
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    int notAFourOrFive = 0;
    int [] ary = new int [nums.length];
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            ary [i] = 4;
            ary [i + 1] = 5;
        } else if (nums [i] != 5) {
            notAFourOrFive = nums [i];
        }

    }
    for (int j = 0;
    j < ary.length; j ++) {
        if (ary [j] == 0) {
            ary [j] = notAFourOrFive;
        }
    }
    return ary;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_35931179_1_15
13337515_39103697_1_28
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_35931179_1_15
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            for (int j = 0;
            j < nums.length; j ++) if (nums [j] == 4 && nums [j + 1] != 5) {
                f (nums, i, j + 1);
            }

        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_39103697_1_28
13337515_41405468_1_29
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5 && i == 0 || nums [i] == 5 && nums [i - 1] != 4) {
            int a5 = i;
            for (int j = 0;
            j < nums.length; j ++) {
                if (nums [j] == 4 && nums [j + 1] != 5) {
                    int temp = nums [j + 1];
                    nums [j + 1] = 5;
                    nums [a5] = temp;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    ArrayList < Integer > fivePositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
        if (ret [i] == 5) {
            fivePositions.add (i);
        }
    }
    for (int i = 0;
    i < fourPositions.size (); i ++) {
        int temp = ret [fourPositions.get (i) + 1];
        ret [fourPositions.get (i) + 1] = ret [fivePositions.get (i)];
        ret [fivePositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13340706_13340914_18_32
13340706_13340918_1_15
Title: May FileOutputStream.getChannel() return null? 
----------------------------------------

public FileChannel getChannel () {
    synchronized (this) {
        if (channel == null) {
            channel = FileChannelImpl.open (fd, false, true, append, this);
            fd.incrementAndGetUseCount ();
        }
        return channel;
    }
}
----------------------------------------

public FileChannel getChannel () {
    synchronized (this) {
        if (channel == null) {
            channel = FileChannelImpl.open (fd, false, true, this, append);
            fd.incrementAndGetUseCount ();
        }
        return channel;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13341857_13344337_54_58
13341857_13344896_47_70
Title: How to pan an image using your mouse in Java Swing 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    javax.swing.SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
                    if ("Nimbus".equals (info.getName ())) {
                        UIManager.setLookAndFeel (info.getClassName ());
                        break;
                    }
                }
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                e.printStackTrace ();
            }
            Test test = new Test ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13341857_13344337_8_17
13341857_13344896_99_114
Title: How to pan an image using your mouse in Java Swing 
----------------------------------------

public void mouseDragged (MouseEvent e) {
    JViewport vport = (JViewport) e.getSource ();
    JComponent label = (JComponent) vport.getView ();
    Point cp = e.getPoint ();
    Point vp = vport.getViewPosition ();
    vp.translate (pp.x - cp.x, pp.y - cp.y);
    label.scrollRectToVisible (new Rectangle (vp, vport.getSize ()));
    pp.setLocation (cp);
}
----------------------------------------

public void mouseDragged (MouseEvent me) {
    super.mouseDragged (me);
    if (me.getX () < startX) {
        x -= 2;
    } else if (me.getX () > startX) {
        x += 2;
    }

    if (me.getY () < startY) {
        y -= 2;
    } else if (me.getY () > startY) {
        y += 2;
    }

    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13354429_13354509_14_31
13354429_13354543_4_29
Title: How to pass a list to initial frame in swing 
----------------------------------------

public void run () {
    try {
        for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (Exception e) {
    }
    try {
        MainFrame frame = new MainFrame (items);
        frame.setVisible (true);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    List < Item > items = null;
    try {
        items = InventoryReader.read (file);
    } catch (ApplicationException e) {
        LOG.error (e.getMessage ());
        return;
    }
    try {
        for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (Exception e) {
    }
    try {
        MainFrame frame = new MainFrame (items);
        frame.setVisible (true);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13360411_13361657_102_112
13360411_13361657_68_94
Title: highlighting words in java 
----------------------------------------

public void run () {
    int sp = 0;
    for (int i = 0;
    i < count; i ++) {
        sp += words [i].length () + 1;
    }
    try {
        jtp.getHighlighter ().addHighlight (sp, sp + words [count].length (), highlightPainter);
    } catch (BadLocationException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    Timer t = createAndStartTimer (timings [count], count);
    while (t.isRunning ()) {
        try {
            Thread.sleep (1);
        } catch (InterruptedException ex) {
            ex.printStackTrace ();
        }
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            count ++;
            if (count == timings.length) {
                JOptionPane.showMessageDialog (frame, "Done");
                startButton.setEnabled (true);
                count = 0;
            } else {
                startKaraoke ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13360411_13361657_102_112
13360411_13361657_82_91
Title: highlighting words in java 
----------------------------------------

public void run () {
    int sp = 0;
    for (int i = 0;
    i < count; i ++) {
        sp += words [i].length () + 1;
    }
    try {
        jtp.getHighlighter ().addHighlight (sp, sp + words [count].length (), highlightPainter);
    } catch (BadLocationException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    count ++;
    if (count == timings.length) {
        JOptionPane.showMessageDialog (frame, "Done");
        startButton.setEnabled (true);
        count = 0;
    } else {
        startKaraoke ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13360411_13361657_68_94
13360411_13361657_82_91
Title: highlighting words in java 
----------------------------------------

public void run () {
    Timer t = createAndStartTimer (timings [count], count);
    while (t.isRunning ()) {
        try {
            Thread.sleep (1);
        } catch (InterruptedException ex) {
            ex.printStackTrace ();
        }
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            count ++;
            if (count == timings.length) {
                JOptionPane.showMessageDialog (frame, "Done");
                startButton.setEnabled (true);
                count = 0;
            } else {
                startKaraoke ();
            }
        }}

    );
}
----------------------------------------

public void run () {
    count ++;
    if (count == timings.length) {
        JOptionPane.showMessageDialog (frame, "Done");
        startButton.setEnabled (true);
        count = 0;
    } else {
        startKaraoke ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13368784_13369018_1_10
13368784_13369207_1_14
Title: What is the appropriate way to mock 2 classes that implement an interface with Mockito? 
----------------------------------------

public void test () {
    CPU cpu = new cpu ();
    DataAccessCache cache = mock (DataAccessCache.class);
    DataAccessMemory memory = mock (DataAccessMemory.class);
    cpu.setDataAccessCache (cache);
    cpu.setDataAccessMemory (memory);
    cpu.put ("key", "value");
    verify (cache).put ("key", "value");
    verify (memory).put ("key", "value");
}
----------------------------------------

public void test () {
    CPU cpu = new cpu ();
    DataAccessCache cache = spy (new DataAccessCache ());
    DataAccessMemory memory = spy (new DataAccessMemory ());
    doReturn (true).when (cache).put (eq ("key"), eq ("value"));
    doReturn (true).when (memory).put (eq ("key"), eq ("value"));
    cpu.setDataAccessCache (cache);
    cpu.setDataAccessMemory (memory);
    cpu.put ("key", "value");
    verify (cache).put ("key", "value");
    verify (memory).put ("key", "value");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13371557_13371573_1_23
13371557_13371716_2_23
Title: trouble with boolean arrays and infinite loops 
----------------------------------------

public static boolean firstgen (boolean [] [] a) {
    int N = 5;
    for (int i = 0;
    i < N; i ++) {
        for (int j = 0;
        j < N; j ++) {
            double cellmaker = Math.random ();
            if (cellmaker > 0.5) {
                a [i] [j] = true;
                return true;
            } else a [i] [j] = false;

        }
    }
    return false;
}
----------------------------------------

public static boolean firstgen (boolean [] [] a) {
    int N = 5;
    double cellmaker = Math.random ();
    for (int i = 0;
    i < N; i ++) {
        for (int j = 0;
        j < N; j ++) {
            if (cellmaker > 0.5) {
                a [i] [j] = true;
                return true;
            } else a [i] [j] = false;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13373854_17915120_80_114
13373854_44037015_15_46
Title: Binary Search Tree - Java Implementation 
----------------------------------------

public void add (K key, V value) {
    if (key == null) {
        throw new IllegalArgumentException ("key");
    }
    if (_root == null) {
        _root = new BSTNode < K, V > (key, value);
    }
    BSTNode < K, V > prev = null, curr = _root;
    boolean lastChildLeft = false;
    while (curr != null) {
        int comparison = compare (key, curr.key ());
        prev = curr;
        if (comparison == 0) {
            curr._value = value;
            return;
        } else if (comparison < 0) {
            curr = curr._left;
            lastChildLeft = true;
        } else {
            curr = curr._right;
            lastChildLeft = false;
        }

    }
    mod ++;
    if (lastChildLeft) {
        prev._left = new BSTNode < K, V > (key, value);
    } else {
        prev._right = new BSTNode < K, V > (key, value);
    }
}
----------------------------------------

public int add (int value) {
    BNode newNode, current;
    newNode = new BNode (value);
    if (root == null) {
        root = newNode;
        current = root;
    } else {
        current = root;
        while (current.left != null || current.right != null) {
            if (newNode.data < current.data) {
                if (current.left != null) current = current.left;
                else break;

            } else {
                if (current.right != null) current = current.right;
                else break;

            }
        }
        if (newNode.data < current.data) current.left = newNode;
        else current.right = newNode;

    }
    return value;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13373854_27178066_113_142
13373854_44037015_94_115
Title: Binary Search Tree - Java Implementation 
----------------------------------------

public static void main (String [] args) {
    BSTFunctions f = new BSTFunctions ();
    f.insertNode (f.ROOT, 20);
    f.insertNode (f.ROOT, 5);
    f.insertNode (f.ROOT, 25);
    f.insertNode (f.ROOT, 3);
    f.insertNode (f.ROOT, 7);
    f.insertNode (f.ROOT, 27);
    f.insertNode (f.ROOT, 24);
    f.printInOrder (f.ROOT);
    System.out.println ("");
    f.printPostOrder (f.ROOT);
    System.out.println ("");
    f.printPreOrder (f.ROOT);
    System.out.println ("");
    System.out.println (f.search (f.ROOT, 27) ? "Found" : "Not Found");
    System.out.println (f.search (f.ROOT, 10) ? "Found" : "Not Found");
}
----------------------------------------

public static void main (String [] args) {
    BST b = new BST ();
    b.add (50);
    b.add (30);
    b.add (20);
    b.add (40);
    b.add (70);
    b.add (60);
    b.add (80);
    b.add (90);
    b.inorder (root);
    b.find (30);
    b.find (90);
    b.find (100);
    b.find (50);
    b.successor (90);
    System.out.println ();
    b.successor (70);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13373854_27178066_113_142
13373854_46520709_424_580
Title: Binary Search Tree - Java Implementation 
----------------------------------------

public static void main (String [] args) {
    BSTFunctions f = new BSTFunctions ();
    f.insertNode (f.ROOT, 20);
    f.insertNode (f.ROOT, 5);
    f.insertNode (f.ROOT, 25);
    f.insertNode (f.ROOT, 3);
    f.insertNode (f.ROOT, 7);
    f.insertNode (f.ROOT, 27);
    f.insertNode (f.ROOT, 24);
    f.printInOrder (f.ROOT);
    System.out.println ("");
    f.printPostOrder (f.ROOT);
    System.out.println ("");
    f.printPreOrder (f.ROOT);
    System.out.println ("");
    System.out.println (f.search (f.ROOT, 27) ? "Found" : "Not Found");
    System.out.println (f.search (f.ROOT, 10) ? "Found" : "Not Found");
}
----------------------------------------

public static void main (String [] l) {
    System.out.println ("Weleome to Binary Search Tree");
    Scanner scanner = new Scanner (System.in);
    boolean yes = true;
    BinarySearchTree tree = new BinarySearchTree ();
    do {
        System.out.println ("\n1. Insert");
        System.out.println ("2. Search Node");
        System.out.println ("3. Count Node");
        System.out.println ("4. Empty Status");
        System.out.println ("5. Delete Node");
        System.out.println ("6. Node with Minimum Value");
        System.out.println ("7. Node with Maximum Value");
        System.out.println ("8. Find Parent node");
        System.out.println ("9. Count no of links");
        System.out.println ("10. Get the sibling of any node");
        System.out.println ("11. Print all the leaf node");
        System.out.println ("12. Get the level of node");
        System.out.println ("13. Depth of the tree");
        System.out.println ("14. Height of Binary Tree");
        System.out.println ("15. Left View");
        System.out.println ("16. Mirror Image of Binary Tree");
        System.out.println ("Enter Your Choice :: ");
        int choice = scanner.nextInt ();
        switch (choice) {
            case 1 :
                try {
                    System.out.println ("Enter Value");
                    tree.insert (scanner.nextInt ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 2 :
                System.out.println ("Enter the node");
                System.out.println (tree.searchNode (scanner.nextInt ()));
                break;
            case 3 :
                System.out.println (tree.countNodes ());
                break;
            case 4 :
                System.out.println (tree.empty ());
                break;
            case 5 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.delete (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
            case 6 :
                try {
                    System.out.println (tree.nodeWithMinimumValue ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 7 :
                try {
                    System.out.println (tree.nodewithMaximumValue ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 8 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.parent (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 9 :
                try {
                    System.out.println (tree.countNodes () - 1);
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 10 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.sibling (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 11 :
                try {
                    tree.leafNodes ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
            case 12 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println ("Level is : " + tree.level (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 13 :
                try {
                    System.out.println (tree.depth ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 14 :
                try {
                    System.out.println (tree.height ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 15 :
                try {
                    tree.leftView ();
                    System.out.println ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 16 :
                try {
                    tree.mirroeView ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            default :
                break;
        }
        tree.preorder ();
        System.out.println ();
        tree.inorder ();
        System.out.println ();
        tree.postorder ();
    } while (yes);
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13373854_44037015_94_115
13373854_46520709_424_580
Title: Binary Search Tree - Java Implementation 
----------------------------------------

public static void main (String [] args) {
    BST b = new BST ();
    b.add (50);
    b.add (30);
    b.add (20);
    b.add (40);
    b.add (70);
    b.add (60);
    b.add (80);
    b.add (90);
    b.inorder (root);
    b.find (30);
    b.find (90);
    b.find (100);
    b.find (50);
    b.successor (90);
    System.out.println ();
    b.successor (70);
}
----------------------------------------

public static void main (String [] l) {
    System.out.println ("Weleome to Binary Search Tree");
    Scanner scanner = new Scanner (System.in);
    boolean yes = true;
    BinarySearchTree tree = new BinarySearchTree ();
    do {
        System.out.println ("\n1. Insert");
        System.out.println ("2. Search Node");
        System.out.println ("3. Count Node");
        System.out.println ("4. Empty Status");
        System.out.println ("5. Delete Node");
        System.out.println ("6. Node with Minimum Value");
        System.out.println ("7. Node with Maximum Value");
        System.out.println ("8. Find Parent node");
        System.out.println ("9. Count no of links");
        System.out.println ("10. Get the sibling of any node");
        System.out.println ("11. Print all the leaf node");
        System.out.println ("12. Get the level of node");
        System.out.println ("13. Depth of the tree");
        System.out.println ("14. Height of Binary Tree");
        System.out.println ("15. Left View");
        System.out.println ("16. Mirror Image of Binary Tree");
        System.out.println ("Enter Your Choice :: ");
        int choice = scanner.nextInt ();
        switch (choice) {
            case 1 :
                try {
                    System.out.println ("Enter Value");
                    tree.insert (scanner.nextInt ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 2 :
                System.out.println ("Enter the node");
                System.out.println (tree.searchNode (scanner.nextInt ()));
                break;
            case 3 :
                System.out.println (tree.countNodes ());
                break;
            case 4 :
                System.out.println (tree.empty ());
                break;
            case 5 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.delete (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
            case 6 :
                try {
                    System.out.println (tree.nodeWithMinimumValue ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 7 :
                try {
                    System.out.println (tree.nodewithMaximumValue ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 8 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.parent (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 9 :
                try {
                    System.out.println (tree.countNodes () - 1);
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 10 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println (tree.sibling (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 11 :
                try {
                    tree.leafNodes ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
            case 12 :
                try {
                    System.out.println ("Enter the node");
                    System.out.println ("Level is : " + tree.level (scanner.nextInt ()));
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 13 :
                try {
                    System.out.println (tree.depth ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 14 :
                try {
                    System.out.println (tree.height ());
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 15 :
                try {
                    tree.leftView ();
                    System.out.println ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            case 16 :
                try {
                    tree.mirroeView ();
                } catch (Exception e) {
                    System.out.println (e.getMessage ());
                }
                break;
            default :
                break;
        }
        tree.preorder ();
        System.out.println ();
        tree.inorder ();
        System.out.println ();
        tree.postorder ();
    } while (yes);
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13373854_46520709_358_366
13373854_46520709_368_379
Title: Binary Search Tree - Java Implementation 
----------------------------------------

public void mirroeView () {
    BSTNode node = mirroeView (root);
    preorder (node);
    System.out.println ();
    inorder (node);
    System.out.println ();
    postorder (node);
    System.out.println ();
}
----------------------------------------

private BSTNode mirroeView (BSTNode node) {
    if (node == null || (node.left == null && node.rigth == null)) return node;

    BSTNode temp = node.left;
    node.left = node.rigth;
    node.rigth = temp;
    mirroeView (node.left);
    mirroeView (node.rigth);
    return node;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13378183_13378302_5_17
13378183_13378323_5_15
Title: Using switch statements inside a for loop 
----------------------------------------

public void run () {
    for (int n = 1;
    n <= 10; n ++) {
        println ("This old man, he played " + n);
        print ("He played knick-knack on my");
        switcher (n);
        print ("\n");
        println ("With a knick-knack, paddy-whack,");
        println ("Give your dog a bone");
        println ("This old man came roiling home");
    }
}
----------------------------------------

public void run () {
    for (int n = 1;
    n <= 10; n ++) {
        println ("This old man, he played " + n);
        println ("He played knick-knack on my" + getValue (n));
        println ("With a knick-knack, paddy-whack,");
        println ("Give your dog a bone");
        println ("This old man came roiling home");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13387215_13390652_42_56
13387215_13390652_67_81
Title: Iterable gzip deflate/inflate in Java 
----------------------------------------

public void run () {
    try {
        while (true) {
            ByteBuffer buf = buffers.take ();
            if (buf != null) {
                bufSink.write (buf);
            } else {
                bufSink.close ();
                break;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        InputStream in = Channels.newInputStream (infSource);
        GZIPInputStream gzip = new GZIPInputStream (in);
        OutputStream out = Channels.newOutputStream (infSink);
        int ch;
        while ((ch = gzip.read ()) != - 1) {
            out.write (ch);
        }
        out.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13387921_13388444_194_209
13387921_13388444_211_231
Title: Reading two matrices from one text file 
----------------------------------------

static boolean compare (String [] [] left, String [] [] right) {
    if (left.length != right.length) {
        return false;
    }
    for (int i = 0;
    i < left.length; ++ i) {
        if (left [i].length != right [i].length) {
            return false;
        }
        for (int j = 0;
        j < left [i].length; ++ j) {
            if (! left [i] [j].equals (right [i] [j])) {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------

static boolean compare (int [] [] [] left, int [] [] [] right) {
    if (left.length != right.length) {
        return false;
    }
    for (int i = 0;
    i < left.length; ++ i) {
        if (left [i].length != right [i].length) {
            return false;
        }
        for (int j = 0;
        j < left [i].length; ++ j) {
            if (left [i] [j].length != right [i] [j].length) {
                return false;
            }
            for (int k = 0;
            k < left [i] [j].length; ++ k) {
                if (left [i] [j] [k] != right [i] [j] [k]) {
                    return false;
                }
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13387921_13388444_211_231
13387921_13388444_233_249
Title: Reading two matrices from one text file 
----------------------------------------

static boolean compare (int [] [] [] left, int [] [] [] right) {
    if (left.length != right.length) {
        return false;
    }
    for (int i = 0;
    i < left.length; ++ i) {
        if (left [i].length != right [i].length) {
            return false;
        }
        for (int j = 0;
        j < left [i].length; ++ j) {
            if (left [i] [j].length != right [i] [j].length) {
                return false;
            }
            for (int k = 0;
            k < left [i] [j].length; ++ k) {
                if (left [i] [j] [k] != right [i] [j] [k]) {
                    return false;
                }
            }
        }
    }
    return true;
}
----------------------------------------

private static boolean compare (int [] [] left, int [] [] right) {
    if (left.length != right.length) {
        return false;
    }
    for (int i = 0;
    i < left.length; ++ i) {
        if (left [i].length != right [i].length) {
            return false;
        }
        for (int j = 0;
        j < left [i].length; ++ j) {
            if (left [i] [j] != right [i] [j]) {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13408980_13592651_39_51
13408980_13592651_54_79
Title: How to enforce a custom layout in JUNG graph? 
----------------------------------------

protected void buildTree () {
    this.m_currentPoint = new Point (0, 20);
    Collection < V > roots = TreeUtils.getRoots (graph);
    if (roots.size () > 0 && graph != null) {
        calculateDimensionY (roots);
        for (V v : roots) {
            calculateDimensionY (v);
            m_currentPoint.y += this.basePositions.get (v) / 2 + this.distY;
            buildTree (v, this.m_currentPoint.y);
        }
    }
}
----------------------------------------

protected void buildTree (V v, int y) {
    if (! alreadyDone.contains (v)) {
        alreadyDone.add (v);
        this.m_currentPoint.x += this.distX;
        this.m_currentPoint.y = y;
        this.setCurrentPositionFor (v);
        int sizeYofCurrent = basePositions.get (v);
        int lastY = y - sizeYofCurrent / 2;
        int sizeYofChild;
        int startYofChild;
        for (V element : graph.getSuccessors (v)) {
            sizeYofChild = this.basePositions.get (element);
            startYofChild = lastY + sizeYofChild / 2;
            buildTree (element, startYofChild);
            lastY = lastY + sizeYofChild + distY;
        }
        this.m_currentPoint.x -= this.distX;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13412770_13412836_1_10
13412770_13412897_7_21
Title: NullPointerException while indexing variable String parameters 
----------------------------------------

public void setAuthors (String...authors) {
    if (authors != null && authors.length > 0) {
        authorsSize = authors.length;
        authors = new String [authorsSize];
        for (int i = 0;
        i < authorsSize; i ++) this.authors [i] = authors [i];

    } else {
        this.authors = null;
    }
}
----------------------------------------

public void setAuthors (String...authors) {
    if (authors == null) {
        this.authors = null;
    } else {
        authorsSize = authors.length;
        this.authors = new String [authorsSize];
        for (int i = 0;
        i < authorsSize; i ++) this.authors [i] = authors [i];

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13413996_13414260_34_48
13413996_13414260_60_79
Title: Java : UI thread not resuming in two-threaded application 
----------------------------------------

public void run () {
    System.out.println ("Started thread 1");
    System.out.println ("waiting thread 1");
    try {
        synchronized (commonLock) {
            commonLock.wait ();
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    System.out.println ("DONE waiting thread 1 as I got notification from THread 2");
}
----------------------------------------

public void run () {
    System.out.println ("Running thread 2");
    try {
        System.out.println ("Sleeping thread 2");
        Thread.sleep (2000);
        synchronized (commonLock) {
            System.out.println ("Notifying thread 2");
            commonLock.notifyAll ();
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13414290_13414517_1_29
13414290_13414699_1_23
Title: Periodic Strings 
----------------------------------------

public static int getPeriod (String str) {
    int len = str.length ();
    boolean flag = false;
    int i;
    for (i = 1; i < len; i ++) {
        String s = str.substring (0, i);
        String tmp = str;
        while (tmp.length () > 0) {
            if (tmp.startsWith (s)) {
                tmp = tmp.substring (i);
                flag = true;
            } else {
                flag = false;
                break;
            }
        }
        if (flag == true) break;

    }
    return i;
}
----------------------------------------

public static int getPeriod (String str) {
    int len = str.length ();
    int i;
    for (i = 1; i <= len / 2; i ++) {
        String period = str.substring (0, i);
        String tmp = str;
        boolean flag = true;
        while (flag && tmp.length () > 0) {
            if (tmp.startsWith (period)) {
                tmp = tmp.substring (i);
            } else {
                flag = false;
            }
        }
        if (flag == true) {
            return i;
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13424302_13424438_1_15
13424302_13424521_1_12
Title: Java - toString method for polynomial Terms 
----------------------------------------

public String toString () {
    if (coefficient == 0) {
        return "0";
    } else if (coefficient == 1 && exponent != 0) {
        return "x^" + exponent;
    } else if (exponent == 1) {
        return coefficient + "x";
    } else if (exponent == 0) {
        return "" + coefficient;
    } else if (coefficient == - 1) {
        return "-x^" + exponent;
    } else {
        return coefficient + "x^" + exponent;
    }

}
----------------------------------------

@Override
public String toString () {
    if (coef == 0) {
        return "0";
    } else if (expo == 0) {
        return "" + coef;
    } else {
        String pref = coef == 1 ? "" : coef == - 1 ? "-" : "" + coef;
        String suff = expo > 1 ? "^" + expo : "";
        return pref + "x" + suff;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13429608_13429670_1_24
13429608_13429678_1_25
Title: read text in file 
----------------------------------------

private String readText () {
    BufferedReader reader = null;
    String myText = "";
    try {
        reader = new BufferedReader (new FileReader ("data/name.txt"));
        String name = reader.readLine ();
        StringTokenizer st = new StringTokenizer (name, " ");
        String NAME = st.nextElement ().toString ();
        myText = NAME;
    } catch (Exception e) {
        myText = "Unable to read file";
    } finally {
        if (reader != null) {
            try {
                reader.close ();
            } catch (Exception e) {
            }
        }
    }
    return myText;
}
----------------------------------------

private String readText () {
    BufferedReader reader = null;
    String NAME = "";
    try {
        reader = new BufferedReader (new FileReader ("data/name.txt"));
        String name = reader.readLine ();
        StringTokenizer st = new StringTokenizer (name, " ");
        NAME = st.nextElement ().toString ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        if (reader != null) reader.close ();

        return NAME;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13438479_13438494_1_27
13438479_13438537_1_28
Title: getting out of for loop 
----------------------------------------

private void dna2rna () {
    String DNA = dna_ta.getText ();
    char [] readdna;
    readdna = DNA.toCharArray ();
    forLoop : for (int x = 0;
    x < readdna.length; x ++) {
        switch (DNA.charAt (x)) {
            case 'A' :
                readdna [x] = 'U';
                break;
            case 'T' :
                readdna [x] = 'A';
                break;
            case 'C' :
                readdna [x] = 'G';
                break;
            case 'G' :
                readdna [x] = 'C';
                break;
            case 'a' :
                readdna [x] = 'u';
                break;
            case 't' :
                readdna [x] = 'a';
                break;
            case 'c' :
                readdna [x] = 'g';
                break;
            case 'g' :
                readdna [x] = 'c';
                break;
            default :
                JOptionPane.showMessageDialog (frame, "Not a DNA Sequence.Please   Retry", "Sequence error", JOptionPane.ERROR_MESSAGE);
                dna_ta.setText ("");
                rna_ta.setText ("");
                break forLoop;
        }
        String rna = new String (readdna);
        rna_ta.setText (rna);
    }
}
----------------------------------------

private void dna2rna () {
    String DNA = dna_ta.getText ();
    char [] readdna;
    readdna = DNA.toCharArray ();
    boolean error = false;
    for (int x = 0;
    x < readdna.length && ! error; x ++) {
        switch (DNA.charAt (x)) {
            case 'A' :
                readdna [x] = 'U';
                break;
            case 'T' :
                readdna [x] = 'A';
                break;
            case 'C' :
                readdna [x] = 'G';
                break;
            case 'G' :
                readdna [x] = 'C';
                break;
            case 'a' :
                readdna [x] = 'u';
                break;
            case 't' :
                readdna [x] = 'a';
                break;
            case 'c' :
                readdna [x] = 'g';
                break;
            case 'g' :
                readdna [x] = 'c';
                break;
            default :
                JOptionPane.showMessageDialog (frame, "Not a DNA Sequence.Please   Retry", "Sequence error", JOptionPane.ERROR_MESSAGE);
                dna_ta.setText ("");
                rna_ta.setText ("");
                error = true;
                break;
        }
        String rna = new String (readdna);
        rna_ta.setText (rna);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1345902_1346518_1_12
1345902_1347050_1_25
Title: JMenuItem setMinimumSize doesn't work 
----------------------------------------

private JMenuItem newItem (String text, String iconPath) {
    JMenuItem myMenuItem;
    if (iconPath == null || iconPath.isEmpty ()) {
        myMenuItem = new JMenuItem (text);
        myMenuItem.setPreferredSize (new Dimension (myMenuItem.getFontMetrics (myMenuItem.getFont ()).stringWidth (text), 20));
    } else {
        ImageIcon icon = new ImageIcon (iconPath);
        myMenuItem = new JMenuItem (text, icon);
        myMenuItem.setPreferredSize (new Dimension (icon.getIconWidth (), icon.getIconHeight ()));
    }
    return myMenuItem;
}
----------------------------------------

private JMenuItem newItem (String text, String iconPath) {
    JMenuItem myMenuItem;
    ImageIcon icon = null;
    int iconPixels = 0;
    if (iconPath == null || iconPath.isEmpty ()) {
        myMenuItem = new JMenuItem (text);
    } else {
        icon = new ImageIcon (iconPath);
        myMenuItem = new JMenuItem (text, icon);
        iconPixels = icon.getIconWidth ();
    }
    FontMetrics fontM = myMenuItem.getFontMetrics (new Font ("Default", Font.PLAIN, 12));
    int stringPixels = fontM.stringWidth (text);
    int newWidth = stringPixels + iconPixels;
    newWidth = newWidth < Menu.MINWIDTH ? Menu.MINWIDTH : newWidth;
    newWidth = newWidth > Menu.MAXWIDTH ? Menu.MAXWIDTH : newWidth;
    myMenuItem.setPreferredSize (new Dimension (newWidth, 20));
    System.out.println (text + " - " + newWidth);
    return myMenuItem;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13461393_13476752_1_20
13461393_53205863_19_53
Title: Compress directory to tar.gz with Commons Compress 
----------------------------------------

public void CreateTarGZ () throws FileNotFoundException, IOException {
    try {
        System.out.println (new File (".").getAbsolutePath ());
        dirPath = "parent/childDirToCompress/";
        tarGzPath = "archive.tar.gz";
        fOut = new FileOutputStream (new File (tarGzPath));
        bOut = new BufferedOutputStream (fOut);
        gzOut = new GzipCompressorOutputStream (bOut);
        tOut = new TarArchiveOutputStream (gzOut);
        addFileToTarGz (tOut, dirPath, "");
    } finally {
        tOut.finish ();
        tOut.close ();
        gzOut.close ();
        bOut.close ();
        fOut.close ();
    }
}
----------------------------------------

public static void CreateTarGZ (String inputDirectoryPath, String outputPath) throws IOException {
    File inputFile = new File (inputDirectoryPath);
    File outputFile = new File (outputPath);
    try (FileOutputStream fileOutputStream = new FileOutputStream (outputFile); BufferedOutputStream bufferedOutputStream = new BufferedOutputStream (fileOutputStream); GzipCompressorOutputStream gzipOutputStream = new GzipCompressorOutputStream (bufferedOutputStream); TarArchiveOutputStream tarArchiveOutputStream = new TarArchiveOutputStream (gzipOutputStream)) {
        tarArchiveOutputStream.setBigNumberMode (TarArchiveOutputStream.BIGNUMBER_POSIX);
        tarArchiveOutputStream.setLongFileMode (TarArchiveOutputStream.LONGFILE_GNU);
        List < File > files = new ArrayList < > (FileUtils.listFiles (inputFile, new RegexFileFilter ("^(.*?)"), DirectoryFileFilter.DIRECTORY));
        for (int i = 0;
        i < files.size (); i ++) {
            File currentFile = files.get (i);
            String relativeFilePath = inputFile.toURI ().relativize (new File (currentFile.getAbsolutePath ()).toURI ()).getPath ();
            TarArchiveEntry tarEntry = new TarArchiveEntry (currentFile, relativeFilePath);
            tarEntry.setSize (currentFile.length ());
            tarArchiveOutputStream.putArchiveEntry (tarEntry);
            tarArchiveOutputStream.write (IOUtils.toByteArray (new FileInputStream (currentFile)));
            tarArchiveOutputStream.closeArchiveEntry ();
        }
        tarArchiveOutputStream.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13475255_13481812_43_61
13475255_13481812_47_55
Title: Dispose a frame inside a listener after 3 secs 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    button.setEnabled (false);
    Timer timer = new Timer (1000, new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            count ++;
            button.setText (Integer.toString (4 - count));
            if (count > 3) {
                frame.dispose ();
                Timer timer = (Timer) e.getSource ();
                timer.stop ();
            }
        }}

    );
    timer.setInitialDelay (0);
    timer.setRepeats (true);
    timer.setCoalesce (true);
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    count ++;
    button.setText (Integer.toString (4 - count));
    if (count > 3) {
        frame.dispose ();
        Timer timer = (Timer) e.getSource ();
        timer.stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13482909_13500584_37_55
13482909_13508324_38_85
Title: Using Joda DateTime as a Jersey parameter? 
----------------------------------------

public Injectable < DateTime > getInjectable (final ComponentContext cc, final QueryParam a) {
    return new Injectable < DateTime > () {
        @Override
        public DateTime getValue () {
            final List < String > values = uriInfo.get ().getQueryParameters ().get (a.value ());
            if (values.size () > 1) {
                throw new WebApplicationException (Response.status (Status.BAD_REQUEST).entity (a.value () + " may only contain a single value").build ());
            }
            if (values.isEmpty ()) return null;

            return new DateTime (values.get (0));
        }}

    ;
}
----------------------------------------

public Injectable < DateTime > getInjectable (final ComponentContext context, final PathParam annotation) {
    return new Injectable < DateTime > () {
        @Override
        public DateTime getValue () {
            final List < String > values = uriInfo.get ().getPathParameters ().get (annotation.value ());
            if (values == null) {
                throwInternalServerError (annotation);
            }
            if (values.size () > 1) {
                throwBadRequestTooManyValues (annotation);
            }
            if (values.isEmpty ()) {
                throwBadRequestMissingValue (annotation);
            }
            return parseDate (annotation, values);
        } private void throwInternalServerError (final PathParam annotation) {
            String errorMessage = String.format ("Failed to extract parameter [%s] using [%s]. This is likely to be an implementation error.", annotation.value (), annotation.annotationType ().getName ());
            throw new WebApplicationException (Response.status (Status.INTERNAL_SERVER_ERROR).entity (errorMessage).build ());
        } private void throwBadRequestTooManyValues (final PathParam annotation) {
            String errorMessage = String.format ("Parameter [%s] must only contain one single value.", annotation.value ());
            throw new WebApplicationException (Response.status (Status.BAD_REQUEST).entity (errorMessage).build ());
        } private void throwBadRequestMissingValue (final PathParam annotation) {
            String errorMessage = String.format ("Parameter [%s] must be provided.", annotation.value ());
            throw new WebApplicationException (Response.status (Status.BAD_REQUEST).entity (errorMessage).build ());
        } private DateTime parseDate (final PathParam annotation, final List < String > values) {
            try {
                return DateTimeAdapter.parse (values.get (0));
            } catch (Exception e) {
                String errorMessage = String.format ("Parameter [%s] is formatted incorrectly: %s", annotation.value (), e.getMessage ());
                throw new WebApplicationException (Response.status (Status.BAD_REQUEST).entity (errorMessage).build ());
            }
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13482909_13500584_42_53
13482909_13508324_41_57
Title: Using Joda DateTime as a Jersey parameter? 
----------------------------------------

public DateTime getValue () {
    final List < String > values = uriInfo.get ().getQueryParameters ().get (a.value ());
    if (values.size () > 1) {
        throw new WebApplicationException (Response.status (Status.BAD_REQUEST).entity (a.value () + " may only contain a single value").build ());
    }
    if (values.isEmpty ()) return null;

    return new DateTime (values.get (0));
}
----------------------------------------

public DateTime getValue () {
    final List < String > values = uriInfo.get ().getPathParameters ().get (annotation.value ());
    if (values == null) {
        throwInternalServerError (annotation);
    }
    if (values.size () > 1) {
        throwBadRequestTooManyValues (annotation);
    }
    if (values.isEmpty ()) {
        throwBadRequestMissingValue (annotation);
    }
    return parseDate (annotation, values);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1349220_1349264_1_10
1349220_1349469_4_12
Title: Convert JPanel to image 
----------------------------------------

public BufferedImage createImage (JPanel panel) {
    int w = panel.getWidth ();
    int h = panel.getHeight ();
    BufferedImage bi = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = bi.createGraphics ();
    panel.paint (g);
    g.dispose ();
    return bi;
}
----------------------------------------

public BufferedImage createImage (JPanel panel, int width, int height) {
    BufferedImage bi = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g = bi.createGraphics ();
    panel.setSize (width, height);
    layoutComponent (panel);
    panel.print (g);
    g.dispose ();
    return bi;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1349220_1349264_1_10
1349220_18584362_1_10
Title: Convert JPanel to image 
----------------------------------------

public BufferedImage createImage (JPanel panel) {
    int w = panel.getWidth ();
    int h = panel.getHeight ();
    BufferedImage bi = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = bi.createGraphics ();
    panel.paint (g);
    g.dispose ();
    return bi;
}
----------------------------------------

public BufferedImage createImage (JPanel panel) {
    int w = panel.getWidth ();
    int h = panel.getHeight ();
    BufferedImage bi = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = bi.createGraphics ();
    panel.print (g);
    g.dispose ();
    return bi;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1349220_1349469_4_12
1349220_18584362_1_10
Title: Convert JPanel to image 
----------------------------------------

public BufferedImage createImage (JPanel panel, int width, int height) {
    BufferedImage bi = new BufferedImage (width, height, BufferedImage.TYPE_INT_ARGB);
    Graphics2D g = bi.createGraphics ();
    panel.setSize (width, height);
    layoutComponent (panel);
    panel.print (g);
    g.dispose ();
    return bi;
}
----------------------------------------

public BufferedImage createImage (JPanel panel) {
    int w = panel.getWidth ();
    int h = panel.getHeight ();
    BufferedImage bi = new BufferedImage (w, h, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = bi.createGraphics ();
    panel.print (g);
    g.dispose ();
    return bi;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_114_120
13509372_16553692_125_131
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends String > ov, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            txtURL.setText (newValue);
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends Number > observableValue, Number oldValue, final Number newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            progressBar.setValue (newValue.intValue ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_114_120
13509372_16553692_138_152
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends String > ov, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            txtURL.setText (newValue);
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends Throwable > o, Throwable old, final Throwable value) {
    if (engine.getLoadWorker ().getState () == FAILED) {
        SwingUtilities.invokeLater (new Runnable () {
            @Override
            public void run () {
                JOptionPane.showMessageDialog (panel, (value != null) ? engine.getLocation () + "\n" + value.getMessage () : engine.getLocation () + "\nUnexpected error.", "Loading error...", JOptionPane.ERROR_MESSAGE);
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_114_120
13509372_16553692_93_99
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends String > ov, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            txtURL.setText (newValue);
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends String > observable, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            frame.setTitle (newValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_125_131
13509372_16553692_138_152
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends Number > observableValue, Number oldValue, final Number newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            progressBar.setValue (newValue.intValue ());
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends Throwable > o, Throwable old, final Throwable value) {
    if (engine.getLoadWorker ().getState () == FAILED) {
        SwingUtilities.invokeLater (new Runnable () {
            @Override
            public void run () {
                JOptionPane.showMessageDialog (panel, (value != null) ? engine.getLocation () + "\n" + value.getMessage () : engine.getLocation () + "\nUnexpected error.", "Loading error...", JOptionPane.ERROR_MESSAGE);
            }}

        );
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_125_131
13509372_16553692_93_99
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends Number > observableValue, Number oldValue, final Number newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            progressBar.setValue (newValue.intValue ());
        }}

    );
}
----------------------------------------

public void changed (ObservableValue < ? extends String > observable, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            frame.setTitle (newValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509372_16553692_138_152
13509372_16553692_93_99
Title: add webview engine control on jframe 
----------------------------------------

public void changed (ObservableValue < ? extends Throwable > o, Throwable old, final Throwable value) {
    if (engine.getLoadWorker ().getState () == FAILED) {
        SwingUtilities.invokeLater (new Runnable () {
            @Override
            public void run () {
                JOptionPane.showMessageDialog (panel, (value != null) ? engine.getLocation () + "\n" + value.getMessage () : engine.getLocation () + "\nUnexpected error.", "Loading error...", JOptionPane.ERROR_MESSAGE);
            }}

        );
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends String > observable, String oldValue, final String newValue) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            frame.setTitle (newValue);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13509573_13510001_18_47
13509573_13510359_1_19
Title: Compare two arraylist contents and store unmatched contents in another arraylist 
----------------------------------------

public static void main (String [] args) {
    Set < Employee > set1 = new HashSet < Employee > ();
    for (int i = 1;
    i < 5; i ++) set1.add (new Employee (i));

    System.out.println (set1);
    Set < Employee > set2 = new HashSet < Employee > ();
    for (int i = 3;
    i < 8; i ++) set2.add (new Employee (i));

    System.out.println (set2);
    Set < Employee > finalSet = new HashSet < Employee > ();
    for (Employee employee : set1) finalSet.add (employee);

    for (Employee employee : set2) finalSet.add (employee);

    System.out.println (finalSet);
}
----------------------------------------

public static void main (String [] args) {
    List < Employee > l1 = new ArrayList < Employee > ();
    l1.add (new Employee (1));
    l1.add (new Employee (2));
    l1.add (new Employee (3));
    l1.add (new Employee (4));
    l1.add (new Employee (5));
    List < Employee > l2 = new ArrayList < Employee > ();
    l2.add (new Employee (4));
    l2.add (new Employee (5));
    l1.removeAll (l2);
    System.out.println (l1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13522309_13522700_16_67
13522309_13522700_37_64
Title: Smooth Drawing using Java2d without the Opengl or Direct3d Pipelines? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ();
    frame.setIgnoreRepaint (true);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.setSize (WIDTH, HEIGHT);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    frame.createBufferStrategy (2);
    final BufferStrategy bs = frame.getBufferStrategy ();
    new Thread (new Runnable () {
        @Override
        public void run () {
            long tock = 1000 / 60;
            while (running) {
                box.x += dx;
                if (box.x + box.width > WIDTH) {
                    box.x = WIDTH - box.width;
                    dx *= - 1;
                } else if (box.x < 0) {
                    box.x = 0;
                    dx *= - 1;
                }

                Graphics2D g = (Graphics2D) bs.getDrawGraphics ();
                g.setColor (Color.BLACK);
                g.fillRect (0, 0, WIDTH, HEIGHT);
                g.setColor (Color.WHITE);
                g.fill (box);
                g.dispose ();
                bs.show ();
                try {
                    Thread.sleep (tock);
                } catch (InterruptedException ex) {
                }
            }
            bs.dispose ();
        }}

    ).start ();
}
----------------------------------------

public void run () {
    long tock = 1000 / 60;
    while (running) {
        box.x += dx;
        if (box.x + box.width > WIDTH) {
            box.x = WIDTH - box.width;
            dx *= - 1;
        } else if (box.x < 0) {
            box.x = 0;
            dx *= - 1;
        }

        Graphics2D g = (Graphics2D) bs.getDrawGraphics ();
        g.setColor (Color.BLACK);
        g.fillRect (0, 0, WIDTH, HEIGHT);
        g.setColor (Color.WHITE);
        g.fill (box);
        g.dispose ();
        bs.show ();
        try {
            Thread.sleep (tock);
        } catch (InterruptedException ex) {
        }
    }
    bs.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13524519_13524878_1_24
13524519_13728357_1_19
Title: a bug of JTable.columnMoved method 
----------------------------------------

public boolean stopCellEditing () {
    String s = (String) super.getCellEditorValue ();
    if ("".equals (s)) {
        if (constructor.getDeclaringClass () == String.class) {
            value = s;
        }
        super.stopCellEditing ();
    }
    try {
        value = constructor.newInstance (new Object [] {s});
    } catch (Exception e) {
        ((JComponent) getComponent ()).setBorder (new LineBorder (Color.red));
        return false;
    }
    return super.stopCellEditing ();
}
----------------------------------------

@Override
public boolean stopCellEditing () {
    String s = (String) super.getCellEditorValue ();
    if (constructor.getDeclaringClass () == String.class) {
        value = s;
    } else {
        try {
            value = constructor.newInstance (new Object [] {s});
        } catch (Exception e) {
            ((JComponent) getComponent ()).setBorder (new LineBorder (Color.red));
            return false;
        }
    }
    return super.stopCellEditing ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13530999_13531376_7_26
13530999_13531687_240_264
Title: Fastest way to get all values from a Map where the key starts with a certain expression 
----------------------------------------

public static void main (String [] args) {
    TreeMap < String, Object > myMap = new TreeMap < String, Object > ();
    myMap.put ("111-hello", null);
    myMap.put ("111-world", null);
    myMap.put ("111-test", null);
    myMap.put ("111-java", null);
    myMap.put ("123-one", null);
    myMap.put ("123-two", null);
    myMap.put ("123--three", null);
    myMap.put ("123--four", null);
    myMap.put ("125-hello", null);
    myMap.put ("125--world", null);
    System.out.println ("111 \t" + getByPrefix (myMap, "111"));
    System.out.println ("123 \t" + getByPrefix (myMap, "123"));
    System.out.println ("123-- \t" + getByPrefix (myMap, "123--"));
    System.out.println ("12 \t" + getByPrefix (myMap, "12"));
}
----------------------------------------

public static void main (String [] args) {
    String [] samples = {"Some.For.Me", "Some.For.You", "Some.More", "Yet.More"};
    Map map = new HashMap ();
    for (String s : samples) {
        map.put (s, s);
    }
    Map all = new MapFilter (map);
    Map some = new MapFilter (map, "Some.");
    Map someFor = new MapFilter (some, "For.");
    System.out.println ("All: " + all);
    System.out.println ("Some: " + some);
    System.out.println ("Some.For: " + someFor);
    Properties props = new Properties ();
    props.setProperty ("namespace.prop1", "value1");
    props.setProperty ("namespace.prop2", "value2");
    props.setProperty ("namespace.iDontKnowThisNameAtCompileTime", "anothervalue");
    props.setProperty ("someStuff.morestuff", "stuff");
    Map < String, String > filtered = new MapFilter (props, "namespace.");
    System.out.println ("namespace props " + filtered);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13532468_13532496_1_13
13532468_13532537_1_18
Title: Taking keyboard input and running checks on it 
----------------------------------------

public static int modeChooser () {
    int choice = 0;
    Scanner kb = new Scanner (System.in);
    while (choice < 1 || choice > 5) {
        if (! kb.hasNextInt ()) {
            kb.next ();
        } else {
            choice = kb.nextInt ();
        }
    }
    return choice;
}
----------------------------------------

public static int modeChooser () {
    int choice = 0;
    Scanner kb = new Scanner (System.in);
    while (choice == 0) {
        try {
            choice = kb.nextInt ();
        } catch (Exception e) {
            System.out.println ("Sorry but you have to enter 1,2,3,4, or 5! Please try again.");
            choice = modeChooser ();
        }
    }
    if (choice < 1 || choice > 5) {
        System.out.println ("Sorry but you have to enter 1,2,3,4, or 5! Please try again.");
        choice = modeChooser ();
    }
    return choice;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13539149_13558562_84_111
13539149_13558562_97_108
Title: displaying selected grid image in Full Screen and the code for this needs to be in the MainActivity class as shown below 
----------------------------------------

public void run () {
    getImages ();
    rowItems = new ArrayList < RowItem4 > ();
    for (int i = 0;
    i < mStringArray.length; i ++) {
        RowItem4 item = new RowItem4 (mStringArray [i]);
        rowItems.add (item);
    }
    adapter = new GridViewAdapter (GridViewActivity.this, rowItems);
    runOnUiThread (new Runnable () {
        public void run () {
            try {
                gridView.setAdapter (adapter);
                gridView.setOnItemClickListener (GridViewActivity.this);
                progressDialog.dismiss ();
            } catch (final Exception ex) {
                Log.i ("---", "Exception in thread");
            }
        }}

    );
}
----------------------------------------

public void run () {
    try {
        gridView.setAdapter (adapter);
        gridView.setOnItemClickListener (GridViewActivity.this);
        progressDialog.dismiss ();
    } catch (final Exception ex) {
        Log.i ("---", "Exception in thread");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13539871_20556766_1_25
13539871_41066628_1_23
Title: "Converting KB to MB GB TB dynamically" 
----------------------------------------

public static String formatFileSize (long size) {
    String hrSize = null;
    double b = size;
    double k = size / 1024.0;
    double m = ((size / 1024.0) / 1024.0);
    double g = (((size / 1024.0) / 1024.0) / 1024.0);
    double t = ((((size / 1024.0) / 1024.0) / 1024.0) / 1024.0);
    DecimalFormat dec = new DecimalFormat ("0.00");
    if (t > 1) {
        hrSize = dec.format (t).concat (" TB");
    } else if (g > 1) {
        hrSize = dec.format (g).concat (" GB");
    } else if (m > 1) {
        hrSize = dec.format (m).concat (" MB");
    } else if (k > 1) {
        hrSize = dec.format (k).concat (" KB");
    } else {
        hrSize = dec.format (b).concat (" Bytes");
    }

    return hrSize;
}
----------------------------------------

private String formatFileSize (long size) {
    String hrSize = null;
    double b = size;
    double k = size / 1024.0;
    double m = ((size / 1024.0) / 1024.0);
    double g = (((size / 1024.0) / 1024.0) / 1024.0);
    double t = ((((size / 1024.0) / 1024.0) / 1024.0) / 1024.0);
    DecimalFormat dec1 = new DecimalFormat ("0.00");
    DecimalFormat dec2 = new DecimalFormat ("0");
    if (t > 1) {
        hrSize = isDouble (t) ? dec1.format (t).concat (" TB") : dec2.format (t).concat (" TB");
    } else if (g > 1) {
        hrSize = isDouble (g) ? dec1.format (g).concat (" GB") : dec2.format (g).concat (" GB");
    } else if (m > 1) {
        hrSize = isDouble (m) ? dec1.format (m).concat (" MB") : dec2.format (m).concat (" MB");
    } else if (k > 1) {
        hrSize = isDouble (k) ? dec1.format (k).concat (" KB") : dec2.format (k).concat (" KB");
    } else {
        hrSize = isDouble (b) ? dec1.format (b).concat (" B") : dec2.format (b).concat (" B");
    }

    return hrSize;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13540534_13547895_10_31
13540534_13547895_131_160
Title: How to make line animation smoother? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    AnimationPane pane = new AnimationPane ();
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (pane);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    pane.init ();
    pane.start ();
}
----------------------------------------

public void run () {
    float progress = 0;
    long cylceStartTime = System.currentTimeMillis ();
    long cylceEndTime = cylceStartTime + 1000;
    int updateCount = 0;
    while (true) {
        long frameStartTime = System.currentTimeMillis ();
        getModel ().update (getCanvas (), progress);
        getCanvas ().updateState ();
        long frameEndTime = System.currentTimeMillis ();
        long delay = 20 - (frameEndTime - frameStartTime);
        if (delay > 0) {
            try {
                sleep (delay);
            } catch (InterruptedException ex) {
            }
        }
        long now = System.currentTimeMillis ();
        long runtime = now - cylceStartTime;
        progress = (float) runtime / (float) (1000);
        updateCount ++;
        if (progress > 1.0) {
            progress = 0f;
            cylceStartTime = System.currentTimeMillis ();
            cylceEndTime = cylceStartTime + 1000;
            System.out.println (updateCount + " updates in this cycle");
            updateCount = 0;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13540690_13540801_7_20
13540690_13639312_7_20
Title: Error Reading Image 
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedImage image = ImageIO.read (new URL ("http://i.stack.imgur.com/BLRBU.png"));
    System.out.println (image == null);
    int width = image.getWidth ();
    int height = image.getHeight ();
    System.out.println (width + "x" + height);
    for (int i = 0;
    i < width; i ++) {
        for (int j = 0;
        j < height; j ++) {
            System.out.print (image.getRGB (i, j) + ",");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedImage image = ImageIO.read (new URL ("http://i.stack.imgur.com/BLRBU.png"));
    System.out.println (image == null);
    int width = image.getWidth ();
    int height = image.getHeight ();
    System.out.println (width + "x" + height);
    for (int row = 0;
    row < height; row ++) {
        for (int col = 0;
        col < width; col ++) {
            System.out.printf ("%04X ", image.getRGB (col, row));
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_16049504_15_25
13548619_37650932_9_23
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

private static void sort (int nos [], int n) {
    for (int i = 1;
    i < n; i ++) {
        int j = i;
        int B = nos [i];
        while ((j > 0) && (nos [j - 1] > B)) {
            nos [j] = nos [j - 1];
            j --;
        }
        nos [j] = B;
    }
}
----------------------------------------

public static int [] sort (int [] a) {
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < a.length; j ++) {
            int temp = 0;
            if (a [i] < a [j]) {
                temp = a [j];
                a [j] = a [i];
                a [i] = temp;
            }
        }
    }
    return a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_16049504_1_13
13548619_28785614_1_14
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    int i;
    int nos [] = {12, 9, - 4, - 1, 3, 10, 34, 12, 11};
    System.out.print ("Values before sorting: \n");
    for (i = 0; i < nos.length; i ++) System.out.println (nos [i] + "  ");

    sort (nos, nos.length);
    System.out.print ("Values after sorting: \n");
    for (i = 0; i < nos.length; i ++) {
        System.out.println (nos [i] + "  ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {6, 8, 7, 4, 312, 78, 54, 9, 12, 100, 89, 74};
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = i + 1;
        j < arr.length; j ++) {
            int tmp = 0;
            if (arr [i] > arr [j]) {
                tmp = arr [i];
                arr [i] = arr [j];
                arr [j] = tmp;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_16049504_1_13
13548619_28967450_3_46
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    int i;
    int nos [] = {12, 9, - 4, - 1, 3, 10, 34, 12, 11};
    System.out.print ("Values before sorting: \n");
    for (i = 0; i < nos.length; i ++) System.out.println (nos [i] + "  ");

    sort (nos, nos.length);
    System.out.print ("Values after sorting: \n");
    for (i = 0; i < nos.length; i ++) {
        System.out.println (nos [i] + "  ");
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the range");
    java.util.Scanner sc = new java.util.Scanner (System.in);
    int n = sc.nextInt ();
    int arr [] = new int [n];
    System.out.println ("Enter the array values");
    for (int i = 0;
    i <= n - 1; i ++) {
        arr [i] = sc.nextInt ();
    }
    System.out.println ("Before sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
    System.out.println ();
    for (int pass = 1;
    pass <= n; pass ++) {
        for (int i = 0;
        i <= n - 1; i ++) {
            if (i == n - 1) {
                break;
            }
            int temp;
            if (arr [i] > arr [i + 1]) {
                temp = arr [i];
                arr [i] = arr [i + 1];
                arr [i + 1] = temp;
            }
        }
    }
    System.out.println ("After sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_16049504_1_13
13548619_39248164_6_37
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    int i;
    int nos [] = {12, 9, - 4, - 1, 3, 10, 34, 12, 11};
    System.out.print ("Values before sorting: \n");
    for (i = 0; i < nos.length; i ++) System.out.println (nos [i] + "  ");

    sort (nos, nos.length);
    System.out.print ("Values after sorting: \n");
    for (i = 0; i < nos.length; i ++) {
        System.out.println (nos [i] + "  ");
    }
}
----------------------------------------

public static void main (String args []) {
    int temp = 0;
    Scanner user_input = new Scanner (System.in);
    System.out.println ("enter Size of Array...");
    int Size = user_input.nextInt ();
    int [] a = new int [Size];
    System.out.println ("Enter element Of an Array...");
    for (int j = 0;
    j < Size; j ++) {
        a [j] = user_input.nextInt ();
    }
    for (int index = 0;
    index < a.length; index ++) {
        for (int j = index + 1;
        j < a.length; j ++) {
            if (a [index] > a [j]) {
                temp = a [index];
                a [index] = a [j];
                a [j] = temp;
            }
        }
    }
    System.out.print ("Output is:- ");
    for (int i = 0;
    i < a.length; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_28785614_1_14
13548619_28967450_3_46
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {6, 8, 7, 4, 312, 78, 54, 9, 12, 100, 89, 74};
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = i + 1;
        j < arr.length; j ++) {
            int tmp = 0;
            if (arr [i] > arr [j]) {
                tmp = arr [i];
                arr [i] = arr [j];
                arr [j] = tmp;
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the range");
    java.util.Scanner sc = new java.util.Scanner (System.in);
    int n = sc.nextInt ();
    int arr [] = new int [n];
    System.out.println ("Enter the array values");
    for (int i = 0;
    i <= n - 1; i ++) {
        arr [i] = sc.nextInt ();
    }
    System.out.println ("Before sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
    System.out.println ();
    for (int pass = 1;
    pass <= n; pass ++) {
        for (int i = 0;
        i <= n - 1; i ++) {
            if (i == n - 1) {
                break;
            }
            int temp;
            if (arr [i] > arr [i + 1]) {
                temp = arr [i];
                arr [i] = arr [i + 1];
                arr [i + 1] = temp;
            }
        }
    }
    System.out.println ("After sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_28785614_1_14
13548619_39248164_6_37
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [] {6, 8, 7, 4, 312, 78, 54, 9, 12, 100, 89, 74};
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = i + 1;
        j < arr.length; j ++) {
            int tmp = 0;
            if (arr [i] > arr [j]) {
                tmp = arr [i];
                arr [i] = arr [j];
                arr [j] = tmp;
            }
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int temp = 0;
    Scanner user_input = new Scanner (System.in);
    System.out.println ("enter Size of Array...");
    int Size = user_input.nextInt ();
    int [] a = new int [Size];
    System.out.println ("Enter element Of an Array...");
    for (int j = 0;
    j < Size; j ++) {
        a [j] = user_input.nextInt ();
    }
    for (int index = 0;
    index < a.length; index ++) {
        for (int j = index + 1;
        j < a.length; j ++) {
            if (a [index] > a [j]) {
                temp = a [index];
                a [index] = a [j];
                a [j] = temp;
            }
        }
    }
    System.out.print ("Output is:- ");
    for (int i = 0;
    i < a.length; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13548619_28967450_3_46
13548619_39248164_6_37
Title: Java : Sort integer array without using Arrays.sort() 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter the range");
    java.util.Scanner sc = new java.util.Scanner (System.in);
    int n = sc.nextInt ();
    int arr [] = new int [n];
    System.out.println ("Enter the array values");
    for (int i = 0;
    i <= n - 1; i ++) {
        arr [i] = sc.nextInt ();
    }
    System.out.println ("Before sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
    System.out.println ();
    for (int pass = 1;
    pass <= n; pass ++) {
        for (int i = 0;
        i <= n - 1; i ++) {
            if (i == n - 1) {
                break;
            }
            int temp;
            if (arr [i] > arr [i + 1]) {
                temp = arr [i];
                arr [i] = arr [i + 1];
                arr [i + 1] = temp;
            }
        }
    }
    System.out.println ("After sorting array values are");
    for (int i = 0;
    i <= n - 1; i ++) {
        System.out.println (arr [i]);
    }
}
----------------------------------------

public static void main (String args []) {
    int temp = 0;
    Scanner user_input = new Scanner (System.in);
    System.out.println ("enter Size of Array...");
    int Size = user_input.nextInt ();
    int [] a = new int [Size];
    System.out.println ("Enter element Of an Array...");
    for (int j = 0;
    j < Size; j ++) {
        a [j] = user_input.nextInt ();
    }
    for (int index = 0;
    index < a.length; index ++) {
        for (int j = index + 1;
        j < a.length; j ++) {
            if (a [index] > a [j]) {
                temp = a [index];
                a [index] = a [j];
                a [j] = temp;
            }
        }
    }
    System.out.print ("Output is:- ");
    for (int i = 0;
    i < a.length; i ++) {
        System.out.println (a [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13551408_13551687_10_19
13551408_13555357_18_27
Title: "How does Lifecycle interface work in Spring? What are ""top-level singleton beans""?" 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10 && ! isInterrupted (); ++ i) {
        log.info ("Hearbeat {}", i);
        try {
            sleep (1000);
        } catch (InterruptedException e) {
        }
    }
    applicationContext.close ();
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 10 && ! isInterrupted (); ++ i) {
        log.info ("Hearbeat {}", i);
        try {
            sleep (1000);
        } catch (InterruptedException e) {
            return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13553009_45038280_1_39
13553009_50626931_2_20
Title: Find the element with highest occurrences in an array [java] 
----------------------------------------

public static void main (String [] args) {
    int n;
    int [] arr;
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter Length of Array");
    n = in.nextInt ();
    arr = new int [n];
    System.out.println ("Enter Elements in array");
    for (int i = 0;
    i < n; i ++) {
        arr [i] = in.nextInt ();
    }
    int greatest = arr [0];
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] > greatest) {
            greatest = arr [i];
        }
    }
    System.out.println ("Greatest Number " + greatest);
    int count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (greatest == arr [i]) {
            count ++;
        }
    }
    System.out.println ("Number of Occurance of " + greatest + ":" + count + " times");
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {1, 1, 2, 1, 5, 6, 6, 6, 8, 5, 9, 7, 1};
    Map < Integer, Integer > map = new HashMap < > ();
    int max = 0;
    int chh = 0;
    for (int i = 0;
    i < a.length; i ++) {
        int ch = a [i];
        map.put (ch, map.getOrDefault (ch, 0) + 1);
    }
    Set < Entry < Integer, Integer > > entrySet = map.entrySet ();
    for (Entry < Integer, Integer > entry : entrySet) {
        if (entry.getValue () > max) {
            max = entry.getValue ();
            chh = entry.getKey ();
        }
    }
    System.out.println ("max element => " + chh);
    System.out.println ("frequency => " + max);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13557261_13557495_10_19
13557261_13557495_48_61
Title: Why are graphics not appearing in JFrame? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    Controls frame = new Controls ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    while (true) {
        renderControls ();
        try {
            Thread.sleep (1000 / 24);
        } catch (InterruptedException ex) {
            Logger.getLogger (BadPaint03.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------
