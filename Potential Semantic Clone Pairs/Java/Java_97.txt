$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40224017_40224121_11_34
40224017_40224356_8_24
Title: Using arrays to get positive numbers 
----------------------------------------

public static int [] getPositiveNumbers (int [] numbers) {
    int count = 0;
    for (int n : numbers) {
        if (n > 0) {
            count ++;
        }
    }
    int [] nums = new int [count];
    int i = 0;
    for (int n : numbers) {
        if (n > 0) {
            nums [i] = n;
            i ++;
        }
    }
    return nums;
}
----------------------------------------

public static int [] getPositiveNumbers (int [] numbers) {
    int [] nums = new int [numbers.length];
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] > 0) {
            nums [i] = numbers [i];
        } else {
            nums [i] = 0;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40236123_40236864_1_34
40236123_40237105_2_28
Title: How to parse int or double values from text file in java application 
----------------------------------------

public static void main (String [] args) throws IOException {
    String content = "String name = carrot;\ndouble unit_price = 200;\nint unit = 10;";
    try (Scanner sc = new Scanner (content)) {
        sc.useDelimiter ("(;*\n*.+ .+ = )|;");
        List < Incredient > incredients = new ArrayList < > ();
        while (true) {
            Incrediend incredient = new Incredient ();
            if (sc.hasNext ()) {
                String name = sc.next ();
                incredient.setName (name);
                System.out.println ("Name: " + name);
            } else {
                break;
            }
            if (sc.hasNextDouble ()) {
                double unitPrice = sc.nextDouble ();
                incredient.setUnit_price (unitPrice);
                System.out.println ("Unit Price: " + unitPrice);
            } else {
                break;
            }
            if (sc.hasNextInt ()) {
                int unit = sc.nextInt ();
                incredient.setUnit (unit);
                System.out.println ("Unit: " + unit);
            } else {
                break;
            }
            incredients.add (incredient);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    Ingridient i_one = new Ingridient ();
    ArrayList < Ingridient > db = new ArrayList < Ingridient > ();
    try (BufferedReader br = new BufferedReader (new FileReader ("/home/yati/Desktop/test.txt"))) {
        String line;
        while ((line = br.readLine ()) != null) {
            String [] splited;
            if (line.contains ("String name")) {
                splited = line.split (" ");
                i_one.setName (splited [splited.length - 1].replace (";", ""));
                System.out.println (i_one.name);
            } else if (line.contains ("double unit_price")) {
                splited = line.split (" ");
                i_one.setUnit_price (Double.parseDouble (splited [splited.length - 1].replace (";", "")));
                System.out.println (i_one.unit_price);
            } else if (line.contains ("int unit")) {
                splited = line.split (" ");
                i_one.setUnit (Integer.parseInt (splited [splited.length - 1].replace (";", "")));
                System.out.println (i_one.unit);
            }

        }
    }
    db.add (i_one);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40244614_40245010_6_49
40244614_40245116_11_52
Title: cannot catch the exception more than one time 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Rate the quality of food from 1 to 5." + "\n1 being “awful” and 5 being “excellent”.\n");
    int [] array = new int [10];
    int num = 0;
    for (int i = 0;
    i < array.length; i ++) {
        do {
            System.out.println ("Student " + (i + 1) + " Enter Your Response:");
            try {
                num = input.nextInt ();
            } catch (java.util.InputMismatchException e) {
                input.next ();
                System.out.println ("Enter numbers only.");
            }
            if (num <= 0 || num > 5) {
                System.out.println ("Enter 1 to 5 only.");
            }
        } while (num < 1 || num > 5);
        array [i] = num;
    }
    int [] frequency = new int [6];
    for (int i = 0;
    i < array.length; i ++) {
        frequency [array [i]] = frequency [array [i]] + 1;
    }
    System.out.printf ("*    :%d (awful)\n", frequency [1]);
    System.out.printf ("**   :%d\n", frequency [2]);
    System.out.printf ("***  :%d\n", frequency [3]);
    System.out.printf ("**** :%d\n", frequency [4]);
    System.out.printf ("*****:%d (excellent)\n", frequency [5]);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Rate the quality of food from 1 to 5." + "\n1 being “awful” and 5 being “excellent”.\n");
    int [] array = new int [10];
    int num = 0;
    do {
        for (int i = 0;
        i < array.length; i ++) {
            System.out.println ("Student " + (i + 1) + " Enter Your Response:");
            Scanner sc = new Scanner (System.in);
            try {
                num = sc.nextInt ();
            } catch (java.util.InputMismatchException e) {
                System.out.println ("Enter numbers only.");
                num = 0;
                -- i;
                continue;
            }
            if (num <= 0 || num > 5) {
                System.out.println ("Enter 1 to 5 only.");
                num = 0;
                -- i;
                continue;
            }
            array [i] = num;
        }
    } while (num <= 0 || num > 5);
    int [] frequency = new int [6];
    for (int i = 0;
    i < array.length; i ++) {
        frequency [array [i]] = frequency [array [i]] + 1;
    }
    System.out.printf ("*    :%d (awful)\n", frequency [1]);
    System.out.printf ("**   :%d\n", frequency [2]);
    System.out.printf ("***  :%d\n", frequency [3]);
    System.out.printf ("**** :%d\n", frequency [4]);
    System.out.printf ("*****:%d (excellent)\n", frequency [5]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4024587_4024849_17_88
4024587_4024969_22_35
Title: Get callers method (java.lang.reflect.Method) 
----------------------------------------

public MethodVisitor visitMethod (final int access, final String name, final String desc, final String signature, final String [] exceptions) {
    return name.equals (methodName) ? new MethodAdapter (empty) {
        @Override
        public void visitLineNumber (final int line, final Label start) {
            if (line >= lineNumber && holder.get () == null) {
                final Type [] argumentTypes = Type.getArgumentTypes (desc);
                final Class < ? > [] argumentClasses = new Class [argumentTypes.length];
                try {
                    for (int i = 0;
                    i < argumentTypes.length; i ++) {
                        final Type type = argumentTypes [i];
                        final String dd = type.getDescriptor ();
                        argumentClasses [i] = getClassFromType (type);
                    }
                    holder.set (kls.getDeclaredMethod (methodName, argumentClasses));
                } catch (final ClassNotFoundException e) {
                    throw new IllegalStateException (e);
                } catch (final SecurityException e) {
                    throw new IllegalStateException (e);
                } catch (final NoSuchMethodException e) {
                    throw new IllegalStateException (e);
                }
            }
            super.visitLineNumber (line, start);
        } private Class < ? > getClassFromType (final Type type) throws ClassNotFoundException {
            Class < ? > javaType;
            final String descriptor = type.getDescriptor ();
            if (type.equals (Type.INT_TYPE)) {
                javaType = Integer.TYPE;
            } else if (type.equals (Type.LONG_TYPE)) {
                javaType = Long.TYPE;
            } else if (type.equals (Type.DOUBLE_TYPE)) {
                javaType = Double.TYPE;
            } else if (type.equals (Type.FLOAT_TYPE)) {
                javaType = Float.TYPE;
            } else if (type.equals (Type.BOOLEAN_TYPE)) {
                javaType = Boolean.TYPE;
            } else if (type.equals (Type.BYTE_TYPE)) {
                javaType = Byte.TYPE;
            } else if (type.equals (Type.CHAR_TYPE)) {
                javaType = Character.TYPE;
            } else if (type.equals (Type.SHORT_TYPE)) {
                javaType = Short.TYPE;
            } else if (descriptor.startsWith ("[")) {
                final Class < ? > elementType = getClassFromType (type.getElementType ());
                javaType = Array.newInstance (elementType, 0).getClass ();
            } else {
                javaType = Class.forName (type.getClassName ());
            }

            return javaType;
        }}

    : null;
}
----------------------------------------

public MethodVisitor visitMethod (int access, final String name, final String desc, String signature, String [] exceptions) {
    if (! name.equals (stackTraceMethodName)) {
        return null;
    }
    return new EmptyVisitor () {
        @Override
        public void visitLineNumber (int line, Label start) {
            if (line == stackTraceLineNumber) {
                methodDescriptorReference.set (desc);
            }
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4024587_4024849_56_85
4024587_5067836_1_18
Title: Get callers method (java.lang.reflect.Method) 
----------------------------------------

private Class < ? > getClassFromType (final Type type) throws ClassNotFoundException {
    Class < ? > javaType;
    final String descriptor = type.getDescriptor ();
    if (type.equals (Type.INT_TYPE)) {
        javaType = Integer.TYPE;
    } else if (type.equals (Type.LONG_TYPE)) {
        javaType = Long.TYPE;
    } else if (type.equals (Type.DOUBLE_TYPE)) {
        javaType = Double.TYPE;
    } else if (type.equals (Type.FLOAT_TYPE)) {
        javaType = Float.TYPE;
    } else if (type.equals (Type.BOOLEAN_TYPE)) {
        javaType = Boolean.TYPE;
    } else if (type.equals (Type.BYTE_TYPE)) {
        javaType = Byte.TYPE;
    } else if (type.equals (Type.CHAR_TYPE)) {
        javaType = Character.TYPE;
    } else if (type.equals (Type.SHORT_TYPE)) {
        javaType = Short.TYPE;
    } else if (descriptor.startsWith ("[")) {
        final Class < ? > elementType = getClassFromType (type.getElementType ());
        javaType = Array.newInstance (elementType, 0).getClass ();
    } else {
        javaType = Class.forName (type.getClassName ());
    }

    return javaType;
}
----------------------------------------

public static Class < ? > getClassFromType (Class < ? > clazz, final Type type) throws ClassNotFoundException {
    Class < ? > javaType = null;
    switch (type.getSort ()) {
        case Type.VOID :
            javaType = Void.TYPE;
            break;
        case Type.BOOLEAN :
            javaType = Boolean.TYPE;
            break;
        case Type.CHAR :
            javaType = Character.TYPE;
            break;
        case Type.BYTE :
            javaType = Byte.TYPE;
            break;
        case Type.SHORT :
            javaType = Short.TYPE;
            break;
        case Type.INT :
            javaType = Integer.TYPE;
            break;
        case Type.FLOAT :
            javaType = Float.TYPE;
            break;
        case Type.LONG :
            javaType = Long.TYPE;
            break;
        case Type.DOUBLE :
            javaType = Double.TYPE;
            break;
        case Type.ARRAY :
            javaType = Array.newInstance (getClassFromType (clazz, type.getElementType ()), new int [type.getDimensions ()]).getClass ();
            break;
        case Type.OBJECT :
            javaType = Class.forName (type.getClassName (), false, clazz.getClassLoader ());
            break;
    }
    if (javaType != null) return javaType;

    throw new ClassNotFoundException ("Couldn't find class for type " + type);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40259159_40260859_7_46
40259159_40318295_19_55
Title: How to create a Tabbed Activity with ListViews - Android 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    toolbar = (Toolbar) findViewById (R.id.toolbar);
    setSupportActionBar (toolbar);
    viewPager = (ViewPager) findViewById (R.id.viewPager);
    setupViewPager (viewPager);
    tabLayout = (TabLayout) findViewById (R.id.tabLayout);
    tabLayout.setupWithViewPager (viewPager);
    tabLayout.setOnTabSelectedListener (new TabLayout.OnTabSelectedListener () {
        @Override
        public void onTabSelected (TabLayout.Tab tab) {
            viewPager.setCurrentItem (tab.getPosition ());
            switch (tab.getPosition ()) {
                case 0 :
                    Log.e ("TAG", "TAB1");
                    break;
                case 1 :
                    Log.e ("TAG", "TAB2");
                    break;
                case 2 :
                    Log.e ("TAG", "TAB3");
                    break;
            }
        }@Override
        public void onTabUnselected (TabLayout.Tab tab) {
        }@Override
        public void onTabReselected (TabLayout.Tab tab) {
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Toolbar toolbar = (Toolbar) findViewById (R.id.toolbar);
    setSupportActionBar (toolbar);
    mSectionsPagerAdapter = new SectionsPagerAdapter (getSupportFragmentManager ());
    mViewPager = (ViewPager) findViewById (R.id.container);
    mViewPager.setAdapter (mSectionsPagerAdapter);
    TabLayout tabLayout = (TabLayout) findViewById (R.id.tabs);
    tabLayout.setupWithViewPager (mViewPager);
    words.add ("Hello");
    words.add ("World");
    words.add ("!");
    adapter = new ArrayAdapter < String > (this, R.layout.item, words);
    contacts1.setListAdapter (adapter);
    contacts2.setListAdapter (adapter);
    contacts3.setListAdapter (adapter);
    FloatingActionButton fab = (FloatingActionButton) findViewById (R.id.fab);
    fab.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Snackbar.make (view, "Update List", Snackbar.LENGTH_LONG).setAction ("Action", null).show ();
            words.add ("New Item");
            adapter.notifyDataSetInvalidated ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40265614_40265795_1_22
40265614_40265903_3_27
Title: Enter 10 values and summing up all the values in a Java Array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("please enter 10 values:");
    double myArray [] = new double [10];
    for (int i = 0;
    i < myArray.length; i ++) {
        myArray [i] = input.nextInt ();
        System.out.println ("The values are " + myArray [i]);
    }
    int sum = 0;
    for (int i = 0;
    i < myArray.length; i ++) {
        sum += myArray [i];
        System.out.println ("The sum of the values is:" + sum);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("please enter 10 values:");
    double myArray [] = new double [10];
    for (int i = 0;
    i < myArray.length; i ++) {
        myArray [i] = input.nextInt ();
    }
    System.out.println ("The values are ");
    for (int i = 0;
    i < myArray.length; i ++) {
        System.out.println (myArray [i]);
    }
    int sum = 0;
    for (i = 0; i < myArray.length; i ++) {
        sum += myArray [i];
    }
    System.out.println ("The sum of the values is:" + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40272202_40272586_9_19
40272202_40276219_1_31
Title: Is there any annotation which generates time required for each step to execute from automated test 
----------------------------------------

@Test (dependsOnMethods = "step1", description = "Open Advanced Search Form")
public void step2 () {
    advancedSearchForm = navMenu.clickSearchAllTitles ();
    if (! advancedSearchForm.isDisplayed (getWebDriverInstance ())) {
        SimpleSearchFormElement simpleSearchForm = new SimpleSearchFormElement (getWebDriverInstance ());
        advancedSearchForm = simpleSearchForm.openAdvancedSearchForm ();
    }
    Assert.assertTrue (advancedSearchForm.isDisplayed (getWebDriverInstance ()), "Advanced Search Form is not displayed!");
}
----------------------------------------

@Test (priority = 1, description = "Login to Oasis")
public void verifyFilter () {
    CommonStep.startTransaction ("Step#1: name of the step");
    navMenu = loginToApplication (username, password);
    Assert.assertTrue (navMenu.isDisplayed (getWebDriverInstance ()), "Login Failed!!!");
    CommonStep.stopTransaction ();
    CommonStep.startTransaction ("Step#2: name of the step");
    advancedSearchForm = navMenu.clickSearchAllTitles ();
    if (! advancedSearchForm.isDisplayed (getWebDriverInstance ())) {
        SimpleSearchFormElement simpleSearchForm = new SimpleSearchFormElement (getWebDriverInstance ());
        advancedSearchForm = simpleSearchForm.openAdvancedSearchForm ();
    }
    Assert.assertTrue (advancedSearchForm.isDisplayed (getWebDriverInstance ()), "Advanced Search Form is not displayed!");
    CommonStep.stopTransaction ();
    CommonStep.startTransaction ("Step#3: name of the step");
    collectionFilterDialog = advancedSearchForm.openCollectionFilterDialog ();
    boolean flag = collectionFilterDialog.isCollectionSelectableListDisplayed ();
    Assert.assertTrue (flag, "Collection Filer dialog is not displayed!");
    CommonStep.stopTransaction ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40296649_40296665_1_13
40296649_40296682_1_10
Title: "Where to best put a variable in the class or in the method (Android Studio)" 
----------------------------------------

public File getTempFile (Context context, String url) {
    try {
        String fileName = Uri.parse (url).getLastPathSegment ();
        return File.createTempFile (fileName, null, context.getCacheDir ());
    } catch (IOException e) {
        System.err.println ("Error while creating file ");
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------

public File getTempFile (Context context, String url) {
    File file = null;
    try {
        String fileName = Uri.parse (url).getLastPathSegment ();
        file = File.createTempFile (fileName, null, context.getCacheDir ());
    } catch (IOException e) {
    }
    return file;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40302359_40336943_10_35
40302359_40336943_45_91
Title: Loading data into a Url while changing an Item in a spinner Asynchronously to load JSON 
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    switch (position) {
        case 0 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 1 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 2 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
    }
}
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    switch (position) {
        case 0 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 1 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 2 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 3 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 4 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
        case 5 :
            inn = getIntent ();
            regTester = inn.getStringExtra ("RegNumber");
            sem = semester.getSelectedItem ().toString ();
            yr = year_of_study.getSelectedItem ().toString ();
            Load (regTester, sem, yr);
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40306131_40307526_37_47
40306131_40470702_63_73
Title: count repeat of every word 
----------------------------------------

private static int getIndexOfWord (String word, String [] foundwords) {
    for (int i = 0;
    i < foundwords.length; i ++) {
        if (word.equals (foundwords [i])) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------

private static int getIndexOfWord (String word, String [] foundwords) {
    for (int i = 0;
    i < foundwords.length; i ++) {
        if (word.equals (foundwords [i])) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40306131_40307526_3_36
40306131_40470702_3_18
Title: count repeat of every word 
----------------------------------------

public static void main (String [] args) {
    String s = "Hello world this is a very good test to a world just that contains just more words than just hello";
    String w = " ";
    String [] foundwords = new String [0];
    int [] wordcount = new int [0];
    String [] splittext = s.split (w);
    for (int i = 0;
    i < splittext.length; i ++) {
        int IndexOfWord = getIndexOfWord (splittext [i], foundwords);
        if (IndexOfWord < 0) {
            String [] foundwordsTemp = new String [foundwords.length + 1];
            int [] wordcountTemp = new int [foundwords.length + 1];
            System.arraycopy (foundwords, 0, foundwordsTemp, 0, foundwords.length);
            System.arraycopy (wordcount, 0, wordcountTemp, 0, foundwords.length);
            foundwords = new String [foundwords.length + 1];
            wordcount = new int [wordcount.length + 1];
            System.arraycopy (foundwordsTemp, 0, foundwords, 0, foundwordsTemp.length);
            System.arraycopy (wordcountTemp, 0, wordcount, 0, foundwordsTemp.length);
            foundwords [foundwords.length - 1] = splittext [i];
            wordcount [foundwords.length - 1] = 1;
        } else {
            wordcount [IndexOfWord] ++;
        }
    }
    for (int i = 0;
    i < foundwords.length; i ++) {
        System.out.println (String.format ("Found word '%s' %d times.", foundwords [i], wordcount [i]));
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "Hello a world a this is a very good test to a a a a world just that contains just more words than just hello";
    String w = " ";
    while (! (s = getNextW (s, w)).equals ("")) {
        System.out.println (s);
    }
    System.out.println ("");
    for (int i = 0;
    i < foundwords.length; i ++) {
        System.out.println (String.format ("Found word '%s' %d times.", foundwords [i], wordcount [i]));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40307704_40308380_11_31
40307704_40309025_4_34
Title: Java For loop !!! printing out values 
----------------------------------------

public static void main (String...args) {
    final Random r = new Random ();
    final String rolls = Stream.generate (() -> r.nextInt (6) + 1).limit (NUM_ROLLS).map (i -> Integer.toString (i)).collect (Collectors.joining ());
    Matcher m = PATTERN.matcher (rolls);
    int start = 1;
    int end = 0;
    while (m.find ()) {
        if (m.end () - m.start () > end - start) {
            end = m.end ();
            start = m.start ();
        }
    }
    System.out.println (String.format ("%s(%s)%s", rolls.substring (0, start), rolls.substring (start, end), rolls.substring (end)));
}
----------------------------------------

public static void main (String [] args) {
    int [] tosses = IntStream.range (0, 20).map (i -> {
        return (int) (Math.random () * 6 + 1);
    }).peek (System.out :: print).toArray ();
    int length = 0, longest = 0, startPos = 0;
    StringBuilder sb = new StringBuilder ("" + tosses [0]);
    for (int i = 1;
    i < tosses.length; i ++) {
        if (tosses [i - 1] == tosses [i]) {
            length ++;
        } else {
            length = 0;
        }
        if (longest < length) {
            longest = length;
            startPos = i - length;
        }
        sb.append ("" + tosses [i]);
    }
    sb.insert (startPos + longest + 1, ")");
    sb.insert (startPos, "(");
    System.out.println ("Result:");
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4030928_38324368_1_18
4030928_44066482_1_24
Title: Extract digits from a string in Java 
----------------------------------------

public static String stripNonDigitsV2 (CharSequence input) {
    if (input == null) return null;

    if (input.length () == 0) return "";

    char [] result = new char [input.length ()];
    int cursor = 0;
    CharBuffer buffer = CharBuffer.wrap (input);
    while (buffer.hasRemaining ()) {
        char chr = buffer.get ();
        if (chr > 47 && chr < 58) result [cursor ++] = chr;

    }
    return new String (result, 0, cursor);
}
----------------------------------------

public static String stripNonDigitsV2 (CharSequence input) {
    if (input == null) return null;

    if (input.length () == 0) return "";

    char [] result = new char [input.length ()];
    int cursor = 0;
    CharBuffer buffer = CharBuffer.wrap (input);
    int i = 0;
    while (i < buffer.length ()) {
        char chr = buffer.get (i);
        if (chr == 'u') {
            i = i + 5;
            chr = buffer.get (i);
        }
        if (chr > 39 && chr < 58) result [cursor ++] = chr;

        i = i + 1;
    }
    return new String (result, 0, cursor);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40335226_40335371_13_42
40335226_40335606_1_36
Title: Array are not selecting values randomly and split into two arrays 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    RandomExample obj = new RandomExample ();
    List < String > teamA = list.subList (0, 4);
    List < String > teamB = list.subList (4, 8);
    for (int i = 0;
    i < 10; i ++) {
        obj.getRandomList (list);
        teamA = list.subList (0, 4);
        teamB = list.subList (4, 8);
        Collections.rotate (teamA, 1);
        Collections.rotate (teamB, 1);
        System.out.println (teamA);
        System.out.println (teamB);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    RandomExample obj = new RandomExample ();
    List < String > teamA = new ArrayList < String > ();
    List < String > teamB = new ArrayList < String > ();
    List < String > temp = list;
    String animal;
    for (int i = 0;
    i < 10; i ++) {
        if (temp.isEmpty () == false) {
            animal = obj.getRandomList (temp);
            if (i <= 3) {
                teamA.add (animal);
            } else {
                teamB.add (animal);
            }
            temp.remove (animal);
        }
    }
    temp.clear ();
    System.out.println (teamA);
    System.out.println (teamB);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40335226_40335371_13_42
40335226_40335613_5_60
Title: Array are not selecting values randomly and split into two arrays 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    RandomExample obj = new RandomExample ();
    List < String > teamA = list.subList (0, 4);
    List < String > teamB = list.subList (4, 8);
    for (int i = 0;
    i < 10; i ++) {
        obj.getRandomList (list);
        teamA = list.subList (0, 4);
        teamB = list.subList (4, 8);
        Collections.rotate (teamA, 1);
        Collections.rotate (teamB, 1);
        System.out.println (teamA);
        System.out.println (teamB);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    list.add ("Monster");
    list.add ("Alien");
    list.add ("Vombie");
    list.add ("Politician");
    list.add ("Donkeye");
    List < String > teamA = new ArrayList < String > ();
    List < String > teamB = new ArrayList < String > ();
    String newAnimal;
    int totalAnimalsForTeams = 7;
    if (totalAnimalsForTeams > list.size ()) {
        System.out.println ("There are only " + list.size () + " animals in the list. Requested animals was: " + totalAnimalsForTeams);
        return;
    }
    int firstHalf = totalAnimalsForTeams / 2;
    if (firstHalf < 1) {
        System.out.println ("Requested " + totalAnimalsForTeams + " animals for teams... not enough to make two teams!");
        return;
    }
    for (int i = 0;
    i < firstHalf; i ++) {
        newAnimal = getRandomList (list);
        teamA.add (newAnimal);
        list.remove (newAnimal);
    }
    int secondHalf = totalAnimalsForTeams - firstHalf;
    for (int i = 0;
    i < secondHalf; i ++) {
        newAnimal = getRandomList (list);
        teamB.add (newAnimal);
        list.remove (newAnimal);
    }
    System.out.println (teamA);
    System.out.println (teamB);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40335226_40335606_1_36
40335226_40335613_5_60
Title: Array are not selecting values randomly and split into two arrays 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    RandomExample obj = new RandomExample ();
    List < String > teamA = new ArrayList < String > ();
    List < String > teamB = new ArrayList < String > ();
    List < String > temp = list;
    String animal;
    for (int i = 0;
    i < 10; i ++) {
        if (temp.isEmpty () == false) {
            animal = obj.getRandomList (temp);
            if (i <= 3) {
                teamA.add (animal);
            } else {
                teamB.add (animal);
            }
            temp.remove (animal);
        }
    }
    temp.clear ();
    System.out.println (teamA);
    System.out.println (teamB);
}
----------------------------------------

public static void main (String [] args) {
    List < String > list = new ArrayList < String > ();
    list.add ("Tiger");
    list.add ("Crocodile");
    list.add ("Cat");
    list.add ("Dog");
    list.add ("Elephant");
    list.add ("Lion");
    list.add ("Deer");
    list.add ("Eagle");
    list.add ("Monster");
    list.add ("Alien");
    list.add ("Vombie");
    list.add ("Politician");
    list.add ("Donkeye");
    List < String > teamA = new ArrayList < String > ();
    List < String > teamB = new ArrayList < String > ();
    String newAnimal;
    int totalAnimalsForTeams = 7;
    if (totalAnimalsForTeams > list.size ()) {
        System.out.println ("There are only " + list.size () + " animals in the list. Requested animals was: " + totalAnimalsForTeams);
        return;
    }
    int firstHalf = totalAnimalsForTeams / 2;
    if (firstHalf < 1) {
        System.out.println ("Requested " + totalAnimalsForTeams + " animals for teams... not enough to make two teams!");
        return;
    }
    for (int i = 0;
    i < firstHalf; i ++) {
        newAnimal = getRandomList (list);
        teamA.add (newAnimal);
        list.remove (newAnimal);
    }
    int secondHalf = totalAnimalsForTeams - firstHalf;
    for (int i = 0;
    i < secondHalf; i ++) {
        newAnimal = getRandomList (list);
        teamB.add (newAnimal);
        list.remove (newAnimal);
    }
    System.out.println (teamA);
    System.out.println (teamB);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40351452_40351657_8_33
40351452_40352852_6_24
Title: Java - Read characters from file to ArrayList 
----------------------------------------

public static void main (String [] args) {
    String path = "/Users/David/sandbox/java/test.txt";
    try (BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream (path)))) {
        String currentLine = null;
        List < String > arrayList = new ArrayList < > ();
        while ((currentLine = br.readLine ()) != null) {
            if (currentLine.contains ("a") && currentLine.contains ("b") && currentLine.contains ("c")) {
                if (currentLine.substring (0, 1).equals (currentLine.substring (currentLine.length () - 1, currentLine.length ()))) {
                    arrayList.add (currentLine);
                    System.out.println (currentLine);
                }
            }
        }
    } catch (Throwable e) {
        System.err.println ("error on read file " + e.getMessage ());
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    BufferedReader reader = new BufferedReader (new FileReader ("//home//azeez//Documents//sample"));
    ArrayList < String > wordList = new ArrayList < > ();
    String line = null;
    while ((line = reader.readLine ()) != null) {
        wordList.add (line);
    }
    for (String word : wordList) {
        if (word.matches ("^[abc]+$")) {
            if (word.charAt (0) == word.charAt (word.length () - 1)) {
                System.out.print (word + "-NOT OK" + " ");
            } else {
                System.out.print (word + "-OK" + " ");
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40353979_40354108_2_66
40353979_40354368_3_69
Title: Java validating postal code 
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter a Postcode:");
    while (kb.hasNext ()) {
        String posCode = kb.next ();
        if (posCode.length () == 7) {
            boolean valid = true;
            char a = posCode.charAt (0);
            char b = posCode.charAt (2);
            char c = posCode.charAt (4);
            char d = posCode.charAt (1);
            char e = posCode.charAt (5);
            char f = posCode.charAt (6);
            char g = posCode.charAt (3);
            if (! Character.isLetter (a)) valid = false;
            else if (! Character.isLetter (b)) valid = false;
            else if (! Character.isLetter (c)) valid = false;
            else if (! Character.isDigit (d)) valid = false;
            else if (! Character.isDigit (e)) valid = false;
            else if (! Character.isDigit (f)) valid = false;
            else if (! Character.isWhitespace (g)) valid = false;

            if (valid) System.out.println ("\nValid");
            else System.out.println ("\nInvalid");

        } else if (posCode.length () == 6) {
            boolean valid = true;
            char a = posCode.charAt (0);
            char b = posCode.charAt (2);
            char c = posCode.charAt (4);
            char d = posCode.charAt (1);
            char e = posCode.charAt (3);
            char f = posCode.charAt (5);
            if (! Character.isLetter (a)) valid = false;
            else if (! Character.isLetter (b)) valid = false;
            else if (! Character.isLetter (c)) valid = false;
            else if (! Character.isDigit (d)) valid = false;
            else if (! Character.isDigit (e)) valid = false;
            else if (! Character.isDigit (f)) valid = false;

            if (valid) System.out.println ("\nValid");
            else System.out.println ("\nInvalid");

        } else {
            System.out.println ("\nInvalid Length");
        }

        System.out.println ("\nPlease enter a Postcode:");
    }
    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter postalcode:");
    String posCode = kb.nextLine ();
    if (posCode.length () > 7) System.out.println ("\nInvalid");

    if (posCode.length () < 6) System.out.println ("\nInvalid");

    if (posCode.length () == 7) {
        boolean valid = true;
        char a = posCode.charAt (0);
        char b = posCode.charAt (2);
        char c = posCode.charAt (4);
        char d = posCode.charAt (1);
        char e = posCode.charAt (5);
        char f = posCode.charAt (6);
        char g = posCode.charAt (3);
        if (! Character.isLetter (a)) valid = false;
        else if (! Character.isLetter (b)) valid = false;
        else if (! Character.isDigit (c)) valid = false;
        else if (! Character.isDigit (d)) valid = false;
        else if (! Character.isLetter (e)) valid = false;
        else if (! Character.isDigit (f)) valid = false;
        else if (! Character.isWhitespace (g)) valid = false;

        if (valid) System.out.println ("\nValid");
        else System.out.println ("\nInvalid");

    }
    if (posCode.length () == 6) {
        boolean valid = true;
        char a = posCode.charAt (0);
        char b = posCode.charAt (2);
        char c = posCode.charAt (4);
        char d = posCode.charAt (1);
        char e = posCode.charAt (3);
        char f = posCode.charAt (5);
        if (! Character.isLetter (a)) valid = false;
        else if (! Character.isLetter (b)) valid = false;
        else if (! Character.isLetter (c)) valid = false;
        else if (! Character.isDigit (d)) valid = false;
        else if (! Character.isDigit (e)) valid = false;
        else if (! Character.isDigit (f)) valid = false;

        if (valid) System.out.println ("\nValid");
        else System.out.println ("\nInvalid");

    }
    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40353979_40354108_2_66
40353979_40354852_3_31
Title: Java validating postal code 
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter a Postcode:");
    while (kb.hasNext ()) {
        String posCode = kb.next ();
        if (posCode.length () == 7) {
            boolean valid = true;
            char a = posCode.charAt (0);
            char b = posCode.charAt (2);
            char c = posCode.charAt (4);
            char d = posCode.charAt (1);
            char e = posCode.charAt (5);
            char f = posCode.charAt (6);
            char g = posCode.charAt (3);
            if (! Character.isLetter (a)) valid = false;
            else if (! Character.isLetter (b)) valid = false;
            else if (! Character.isLetter (c)) valid = false;
            else if (! Character.isDigit (d)) valid = false;
            else if (! Character.isDigit (e)) valid = false;
            else if (! Character.isDigit (f)) valid = false;
            else if (! Character.isWhitespace (g)) valid = false;

            if (valid) System.out.println ("\nValid");
            else System.out.println ("\nInvalid");

        } else if (posCode.length () == 6) {
            boolean valid = true;
            char a = posCode.charAt (0);
            char b = posCode.charAt (2);
            char c = posCode.charAt (4);
            char d = posCode.charAt (1);
            char e = posCode.charAt (3);
            char f = posCode.charAt (5);
            if (! Character.isLetter (a)) valid = false;
            else if (! Character.isLetter (b)) valid = false;
            else if (! Character.isLetter (c)) valid = false;
            else if (! Character.isDigit (d)) valid = false;
            else if (! Character.isDigit (e)) valid = false;
            else if (! Character.isDigit (f)) valid = false;

            if (valid) System.out.println ("\nValid");
            else System.out.println ("\nInvalid");

        } else {
            System.out.println ("\nInvalid Length");
        }

        System.out.println ("\nPlease enter a Postcode:");
    }
    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter postalcode:");
    char charPC [] = kb.nextLine ().toCharArray ();
    boolean valid = false;
    if (charPC.length == 7) {
        if (Character.isLetter (charPC [0]) && Character.isLetter (charPC [2]) && Character.isLetter (charPC [5]) && Character.isDigit (charPC [4]) && Character.isDigit (charPC [1]) && Character.isDigit (charPC [6]) && Character.isWhitespace (charPC [3])) {
            valid = true;
        }
    } else if (charPC.length == 6) {
        if (Character.isLetter (charPC [0]) && Character.isLetter (charPC [2]) && Character.isLetter (charPC [4]) && Character.isDigit (charPC [1]) && Character.isDigit (charPC [3]) && Character.isDigit (charPC [5])) {
            valid = true;
        }
    }

    if (valid) System.out.println ("\nValid");
    else System.out.println ("\nInvalid");

    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40353979_40354368_3_69
40353979_40354852_3_31
Title: Java validating postal code 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter postalcode:");
    String posCode = kb.nextLine ();
    if (posCode.length () > 7) System.out.println ("\nInvalid");

    if (posCode.length () < 6) System.out.println ("\nInvalid");

    if (posCode.length () == 7) {
        boolean valid = true;
        char a = posCode.charAt (0);
        char b = posCode.charAt (2);
        char c = posCode.charAt (4);
        char d = posCode.charAt (1);
        char e = posCode.charAt (5);
        char f = posCode.charAt (6);
        char g = posCode.charAt (3);
        if (! Character.isLetter (a)) valid = false;
        else if (! Character.isLetter (b)) valid = false;
        else if (! Character.isDigit (c)) valid = false;
        else if (! Character.isDigit (d)) valid = false;
        else if (! Character.isLetter (e)) valid = false;
        else if (! Character.isDigit (f)) valid = false;
        else if (! Character.isWhitespace (g)) valid = false;

        if (valid) System.out.println ("\nValid");
        else System.out.println ("\nInvalid");

    }
    if (posCode.length () == 6) {
        boolean valid = true;
        char a = posCode.charAt (0);
        char b = posCode.charAt (2);
        char c = posCode.charAt (4);
        char d = posCode.charAt (1);
        char e = posCode.charAt (3);
        char f = posCode.charAt (5);
        if (! Character.isLetter (a)) valid = false;
        else if (! Character.isLetter (b)) valid = false;
        else if (! Character.isLetter (c)) valid = false;
        else if (! Character.isDigit (d)) valid = false;
        else if (! Character.isDigit (e)) valid = false;
        else if (! Character.isDigit (f)) valid = false;

        if (valid) System.out.println ("\nValid");
        else System.out.println ("\nInvalid");

    }
    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner kb = new Scanner (System.in);
    System.out.println ("Please enter postalcode:");
    char charPC [] = kb.nextLine ().toCharArray ();
    boolean valid = false;
    if (charPC.length == 7) {
        if (Character.isLetter (charPC [0]) && Character.isLetter (charPC [2]) && Character.isLetter (charPC [5]) && Character.isDigit (charPC [4]) && Character.isDigit (charPC [1]) && Character.isDigit (charPC [6]) && Character.isWhitespace (charPC [3])) {
            valid = true;
        }
    } else if (charPC.length == 6) {
        if (Character.isLetter (charPC [0]) && Character.isLetter (charPC [2]) && Character.isLetter (charPC [4]) && Character.isDigit (charPC [1]) && Character.isDigit (charPC [3]) && Character.isDigit (charPC [5])) {
            valid = true;
        }
    }

    if (valid) System.out.println ("\nValid");
    else System.out.println ("\nInvalid");

    System.out.println ("Program ending due to end-of-file");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40368871_40368900_1_19
40368871_40369211_1_15
Title: How to copy only certain elements of one Array to another in Java 
----------------------------------------

public static int [] overGivenPounds (int x, int [] array) {
    int size = 0;
    for (int value : array) {
        if (satisfies (x, value)) {
            size ++;
        }
    }
    int [] result = new int [size];
    for (int value : array) {
        if (satisfies (x, value)) {
        }
    }
    return result;
}
----------------------------------------

public static int [] overGivenPounds (int x, int [] array) {
    Arrays.sort (array);
    boolean foundSomething = false;
    int startIndex = 0;
    for (int i = 0;
    i < array.length; i ++) {
        if (array [i] / 16 >= x) {
            startIndex = i;
            foundSomething = true;
            break;
        }
    }
    if (foundSomething) return Arrays.copyOfRange (array, startIndex, array.length);

    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40370335_40370677_127_143
40370335_40370677_45_69
Title: How can I transfer values of an int and string from one program to another in Java 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (nameField.getText ().trim ().isEmpty () || speedCombo.getSelectedIndex () == - 1) {
        Component comp = MenuPanel.this;
        String msg = "You must enter your name and select a speed";
        String title = "Invalid Data";
        int msgType = JOptionPane.ERROR_MESSAGE;
        JOptionPane.showMessageDialog (comp, msg, title, msgType);
    } else {
        Window win = SwingUtilities.getWindowAncestor (MenuPanel.this);
        win.dispose ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (menuDialog == null) {
        Window win = SwingUtilities.getWindowAncestor (MenuDemoMainPanel.this);
        menuDialog = new JDialog (win, "Menu", ModalityType.APPLICATION_MODAL);
        menuDialog.add (menuPanel);
        menuDialog.pack ();
        menuDialog.setLocationRelativeTo (win);
    }
    menuDialog.setVisible (true);
    name = menuPanel.getNameText ();
    speed = menuPanel.getSpeed ();
    if (name != null && speed != null) {
        nameField.setText (name);
        speedField.setText (speed.getText ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40370335_40370677_127_143
40370335_40392175_72_98
Title: How can I transfer values of an int and string from one program to another in Java 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (nameField.getText ().trim ().isEmpty () || speedCombo.getSelectedIndex () == - 1) {
        Component comp = MenuPanel.this;
        String msg = "You must enter your name and select a speed";
        String title = "Invalid Data";
        int msgType = JOptionPane.ERROR_MESSAGE;
        JOptionPane.showMessageDialog (comp, msg, title, msgType);
    } else {
        Window win = SwingUtilities.getWindowAncestor (MenuPanel.this);
        win.dispose ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    String name = username.getText ();
    Rocketlaunch.name = name;
    if (evt.getSource () == slow) {
        Rocketlaunch.moveSpeed = 1;
        Rocketlaunch.speed = "Slow";
        setVisible (false);
    } else if (evt.getSource () == medium) {
        Rocketlaunch.moveSpeed = 5;
        Rocketlaunch.speed = "Medium";
        setVisible (false);
    } else {
        Rocketlaunch.moveSpeed = 10;
        Rocketlaunch.speed = "Fast";
        setVisible (false);
    }

    new Rocketlaunch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40370335_40370677_45_69
40370335_40392175_72_98
Title: How can I transfer values of an int and string from one program to another in Java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (menuDialog == null) {
        Window win = SwingUtilities.getWindowAncestor (MenuDemoMainPanel.this);
        menuDialog = new JDialog (win, "Menu", ModalityType.APPLICATION_MODAL);
        menuDialog.add (menuPanel);
        menuDialog.pack ();
        menuDialog.setLocationRelativeTo (win);
    }
    menuDialog.setVisible (true);
    name = menuPanel.getNameText ();
    speed = menuPanel.getSpeed ();
    if (name != null && speed != null) {
        nameField.setText (name);
        speedField.setText (speed.getText ());
    }
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    String name = username.getText ();
    Rocketlaunch.name = name;
    if (evt.getSource () == slow) {
        Rocketlaunch.moveSpeed = 1;
        Rocketlaunch.speed = "Slow";
        setVisible (false);
    } else if (evt.getSource () == medium) {
        Rocketlaunch.moveSpeed = 5;
        Rocketlaunch.speed = "Medium";
        setVisible (false);
    } else {
        Rocketlaunch.moveSpeed = 10;
        Rocketlaunch.speed = "Fast";
        setVisible (false);
    }

    new Rocketlaunch ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40371860_40372194_104_118
40371860_40372194_75_93
Title: How to make a switch statement with JRadio Buttons in Java 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    JRadioButton button = (JRadioButton) event.getSource ();
    if (button == optionLinux) {
        System.out.println ("Linux");
    } else if (button == optionWin) {
        System.out.println ("Windows");
    } else if (button == optionMac) {
        System.out.println ("Mac");
    }

}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    String selectedOption = group.getSelection ().getActionCommand ();
    switch (selectedOption) {
        case "1" :
            JOptionPane.showMessageDialog (SwingJRadioButtonDemo.this, "You selected: Linux with id: " + selectedOption);
            break;
        case "2" :
            JOptionPane.showMessageDialog (SwingJRadioButtonDemo.this, "You selected: Windows with id: " + selectedOption);
            break;
        case "3" :
            JOptionPane.showMessageDialog (SwingJRadioButtonDemo.this, "You selected Mac with id: " + selectedOption);
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40377079_40377185_2_12
40377079_40377278_1_17
Title: How to have a sequence of output using While Loop in Java? 
----------------------------------------

public static void main (String args []) {
    int input;
    Scanner sc = new Scanner (System.in);
    input = sc.nextInt ();
    for (int i = 0;
    i < input; i ++) {
        for (int j = i;
        j < input; j ++) {
            System.out.print ("*");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("input:");
    int input = sc.nextInt ();
    int outerLoopIndex = input;
    System.out.println ("output: ");
    while (outerLoopIndex > 0) {
        int innerLoopIndex = 1;
        while (innerLoopIndex < (outerLoopIndex + 1)) {
            System.out.print ("*");
            innerLoopIndex ++;
        }
        outerLoopIndex --;
        System.out.println (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40390018_40390239_7_40
40390018_40390906_7_25
Title: Java loop through JSON array and edit values 
----------------------------------------

public static void main (String [] args) {
    JSONArray jsonArray = new JSONArray ();
    JSONObject j1 = new JSONObject ();
    j1.put ("id", "1");
    j1.put ("read", "false");
    j1.put ("time", "143250176");
    jsonArray.put (j1);
    JSONObject j2 = new JSONObject ();
    j2.put ("id", "2");
    j2.put ("read", "false");
    j2.put ("time", "143250177");
    jsonArray.put (j2);
    JSONObject j3 = new JSONObject ();
    j3.put ("id", "3");
    j3.put ("read", "false");
    j3.put ("time", "143250178");
    jsonArray.put (j3);
    JSONArray newArray = new JSONArray ();
    for (int count = 0;
    count < jsonArray.length (); count ++) {
        JSONObject localInstance = jsonArray.getJSONObject (count);
        if (localInstance.optString ("time") != "") {
            String time = localInstance.getString ("time");
            String newTime = "new " + time;
            localInstance.put ("time", newTime);
            newArray.put (localInstance);
        }
    }
    System.out.println (newArray);
}
----------------------------------------

public static void main (String [] args) throws JSONException {
    String data = "[{\"_id\":\"\",\"read\":false,\"timestamp\":\"\",\"unix_time\":1477924542020}," + "{\"_id\":\"\",\"read\":false,\"timestamp\":\"\",\"unix_time\":1477924542121}," + "{\"_id\":\"\",\"read\":false,\"timestamp\":\"\",\"unix_time\":1477924532440}]";
    JSONArray jArray = new JSONArray (data);
    System.out.println (jArray);
    JSONArray newJArray = new JSONArray (data);
    JSONObject jsonObj;
    for (int i = 0;
    i < jArray.length (); i ++) {
        jsonObj = (JSONObject) jArray.get (i);
        jsonObj.put ("new_unix_time", jsonObj.remove ("unix_time"));
    }
    System.out.println (jArray);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4039594_4039662_111_145
4039594_4046859_1_24
Title: Brute force sudoku solver algorithm in Java problem 
----------------------------------------

public static boolean solvePuzzle (int [] [] grid, int [] [] emptyCells, int numEmptyCells) {
    int i = 0;
    int currentCellDigit = 0;
    while (i < numEmptyCells) {
        if (currentCellDigit != 9) {
            currentCellDigit ++;
            System.out.println ("Solving---------------------- :" + currentCellDigit + " R: " + emptyCells [i] [0] + " C: " + emptyCells [i] [1]);
            if (isConsistent (grid, emptyCells [i] [0], emptyCells [i] [1])) {
                i ++;
                currentCellDigit = 0;
            } else {
            }
        } else {
            i --;
            if (i < 0) {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------

public static boolean solvePuzzle (int [] [] grid, int [] [] emptyCells, int numEmptyCells) {
    int i = 0;
    int currentCellNum = 0;
    while (i < numEmptyCells) {
        currentCellNum = grid [emptyCells [i] [0]] [emptyCells [i] [1]];
        if (currentCellNum != 9) {
            currentCellNum ++;
            grid [emptyCells [i] [0]] [emptyCells [i] [1]] = currentCellNum;
            if (isConsistent (grid, emptyCells [i] [0], emptyCells [i] [1])) {
                i ++;
            }
        } else {
            currentCellNum = 0;
            grid [emptyCells [i] [0]] [emptyCells [i] [1]] = currentCellNum;
            i --;
            if (i < 0) {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40403040_40403423_1_21
40403040_40414253_1_16
Title: WEEK_OF_YEAR is same for two dates 
----------------------------------------

public static void main (String [] args) throws ParseException {
    SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-MM-dd");
    Date procDate = sdf.parse ("2016-01-01");
    Calendar cal = Calendar.getInstance (Locale.UK);
    cal.setFirstDayOfWeek (Calendar.SUNDAY);
    cal.setTime (procDate);
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
    cal.add (Calendar.DAY_OF_YEAR, 1);
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
    cal.add (Calendar.DAY_OF_YEAR, 1);
    System.out.println (cal.get (Calendar.DAY_OF_YEAR));
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
    procDate = sdf.parse ("2016-12-27");
    cal.setTime (procDate);
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-MM-dd");
    Date procDate = sdf.parse ("2016-01-01");
    Calendar cal = Calendar.getInstance (Locale.UK);
    cal.setFirstDayOfWeek (Calendar.SUNDAY);
    cal.setTime (procDate);
    cal.set (Calendar.DAY_OF_WEEK, Calendar.SUNDAY);
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
    procDate = sdf.parse ("2016-12-27");
    cal.setTime (procDate);
    cal.set (Calendar.DAY_OF_WEEK, Calendar.SUNDAY);
    System.out.println (cal.get (Calendar.WEEK_OF_YEAR));
    System.out.println (cal.get (Calendar.YEAR));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40424815_40424836_1_10
40424815_40424848_1_10
Title: Recursive method returning an int not compiling 
----------------------------------------

public static int getCommand () {
    String command = IOTools.readString ("Enter Command!");
    if (command.equals ("exit")) {
        return 1;
    } else if (command.equals ("shift")) {
        return 0;
    } else {
        return getCommand ();
    }

}
----------------------------------------

public static int getCommand () {
    String command = IOTools.readString ("Enter Command!");
    if (command.equals ("exit")) {
        return 1;
    } else if (command.equals ("shift")) {
        return 0;
    } else {
        return getCommand ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40427538_40427698_1_13
40427538_40427802_1_13
Title: Why does the list appear empty while trying to add nodes in the beginning? 
----------------------------------------

public void add (String n) {
    NodeFN nn = new NodeFN (n);
    if (head == null) {
        head = nn;
    }
    if (n.compareTo (head.getData ()) < 0) {
        nn.setNext (head);
        head = nn;
    }
}
----------------------------------------

public void add (String n) {
    NodeFN nn = new NodeFN (n);
    if (head == null) {
        head = nn;
    } else {
        NodeFN cursor = this.head;
        while (cursor.getNext () != null) {
            cursor = cursor.getNext ();
        }
        cursor.setNext (nn);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40434327_40434377_9_34
40434327_40434384_1_10
Title: How do I make a triangle of stars and counts the number of stars? 
----------------------------------------

public static int triangular (int n, int count_) {
    int count = count_;
    if (n == 0) return count;

    if (n < 0) return - 1;

    for (int i = 0;
    i < n;) {
        System.out.print ("* ");
        count = count + 1;
        i ++;
        if (i == n) {
            System.out.println ();
            return triangular (n - 1, count);
        }
    }
    return count;
}
----------------------------------------

public static int triangular (int n) {
    if (n <= 0) return 0;

    for (int i = 0;
    i < n; i ++) {
        System.out.print ("* ");
    }
    System.out.println ();
    return n + triangular (n - 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40435972_1_27
40435918_40436030_31_57
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int inp = input.nextInt ();
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", inp);
    for (int j = 1;
    j < inp + 1; j ++) {
        if (PerfectNumbers.isPerfect (j) == true) {
            String factors = "";
            for (int w = 1;
            w < j; w ++) {
                if (j % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (j + " is a perfect number it's factors are:" + factors);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    for (int j = 1;
    j < i + 1; j ++) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            for (j = 1; j < i + 1; j ++) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
        }
        i = i - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40435972_1_27
40435918_40436163_30_60
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int inp = input.nextInt ();
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", inp);
    for (int j = 1;
    j < inp + 1; j ++) {
        if (PerfectNumbers.isPerfect (j) == true) {
            String factors = "";
            for (int w = 1;
            w < j; w ++) {
                if (j % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (j + " is a perfect number it's factors are:" + factors);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    System.out.println ("Looking for perfect numbers from 1 to " + i);
    int inc = 1;
    while (inc < i) {
        if (PerfectNumbers.isPerfect (inc) == true) {
            String factors = "";
            int w = inc - 1;
            int j = 1;
            while (j < w) {
                if (inc % j == 0) factors = factors + " " + Integer.toString (j);

                j ++;
            }
            System.out.println (inc + " is a perfect number it's factors are:" + factors);
        }
        inc = inc + 1;
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40435972_1_27
40435918_40436222_21_39
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int inp = input.nextInt ();
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", inp);
    for (int j = 1;
    j < inp + 1; j ++) {
        if (PerfectNumbers.isPerfect (j) == true) {
            String factors = "";
            for (int w = 1;
            w < j; w ++) {
                if (j % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (j + " is a perfect number it's factors are:" + factors);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    while (i > 0) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            while (w -- > 1) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
            factors = "";
        }
        i = i - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436030_31_57
40435918_40436163_30_60
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    for (int j = 1;
    j < i + 1; j ++) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            for (j = 1; j < i + 1; j ++) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
        }
        i = i - 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    System.out.println ("Looking for perfect numbers from 1 to " + i);
    int inc = 1;
    while (inc < i) {
        if (PerfectNumbers.isPerfect (inc) == true) {
            String factors = "";
            int w = inc - 1;
            int j = 1;
            while (j < w) {
                if (inc % j == 0) factors = factors + " " + Integer.toString (j);

                j ++;
            }
            System.out.println (inc + " is a perfect number it's factors are:" + factors);
        }
        inc = inc + 1;
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436030_31_57
40435918_40436222_21_39
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    for (int j = 1;
    j < i + 1; j ++) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            for (j = 1; j < i + 1; j ++) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
        }
        i = i - 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    while (i > 0) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            while (w -- > 1) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
            factors = "";
        }
        i = i - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436030_5_29
40435918_40436163_1_28
Title: Perfect numbers using java programming 
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect;
    while (n -- > 1) {
        if (a % n == 0) sum = sum + n;

    }
    if (sum == a) {
        perfect = true;
    } else {
        perfect = false;
    }
    return perfect;
}
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect;
    while (n -- > 1) {
        if (a % n == 0) sum = sum + n;

    }
    if (sum == a) {
        perfect = true;
    } else {
        perfect = false;
    }
    return perfect;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436030_5_29
40435918_40436222_3_19
Title: Perfect numbers using java programming 
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect;
    while (n -- > 1) {
        if (a % n == 0) sum = sum + n;

    }
    if (sum == a) {
        perfect = true;
    } else {
        perfect = false;
    }
    return perfect;
}
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect = false;
    while (n -- > 1) {
        if (a % n == 0) {
            sum = sum + n;
        }
        if (sum == a) {
            perfect = true;
        } else {
            perfect = false;
        }
    }
    return perfect;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436163_1_28
40435918_40436222_3_19
Title: Perfect numbers using java programming 
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect;
    while (n -- > 1) {
        if (a % n == 0) sum = sum + n;

    }
    if (sum == a) {
        perfect = true;
    } else {
        perfect = false;
    }
    return perfect;
}
----------------------------------------

public static boolean isPerfect (int a) {
    int n = a;
    int sum = 0;
    boolean perfect = false;
    while (n -- > 1) {
        if (a % n == 0) {
            sum = sum + n;
        }
        if (sum == a) {
            perfect = true;
        } else {
            perfect = false;
        }
    }
    return perfect;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40435918_40436163_30_60
40435918_40436222_21_39
Title: Perfect numbers using java programming 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    System.out.println ("Looking for perfect numbers from 1 to " + i);
    int inc = 1;
    while (inc < i) {
        if (PerfectNumbers.isPerfect (inc) == true) {
            String factors = "";
            int w = inc - 1;
            int j = 1;
            while (j < w) {
                if (inc % j == 0) factors = factors + " " + Integer.toString (j);

                j ++;
            }
            System.out.println (inc + " is a perfect number it's factors are:" + factors);
        }
        inc = inc + 1;
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number up to which you would like to look for perfect numbers:");
    int i = input.nextInt ();
    String factors = "";
    System.out.printf ("Looking for perfect numbers from 1 to %d%n", i);
    while (i > 0) {
        if (PerfectNumbers.isPerfect (i) == true) {
            int w = i - 1;
            while (w -- > 1) {
                if (i % w == 0) factors = factors + " " + Integer.toString (w);

            }
            System.out.println (i + " is a perfect number it's factors are:" + factors);
            factors = "";
        }
        i = i - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40440375_40440566_7_34
40440375_40440588_6_16
Title: File content redirection to args doesn't works 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("C:/robots.txt");
    FileInputStream fis = null;
    try {
        fis = new FileInputStream (file);
        System.out.println ("Total file size to read (in bytes) : " + fis.available ());
        int content;
        while ((content = fis.read ()) != - 1) {
            System.out.print ((char) content);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (fis != null) fis.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    String line;
    try {
        while ((line = br.readLine ()) != null) {
            System.out.println (line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40449540_40449555_1_11
40449540_40449567_1_15
Title: JAVA class array 
----------------------------------------

public void listAll () {
    if (songs.isEmpty ()) {
        System.out.print ("There are no songs on the playlist");
    } else {
        for (Song a : songs) {
            System.out.print (a);
        }
    }
}
----------------------------------------

public void listAll () {
    if (songs.isEmpty ()) {
        System.out.print ("There are no songs on the playlist");
        return;
    }
    for (Song a : songs) {
        System.out.print (a);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40452330_40452397_1_11
40452330_40455618_10_45
Title: Removal of negative numbers from an array in Java 
----------------------------------------

public static int removeNegativeNumbers (int [] num) {
    int k = 0;
    for (int i = 0;
    i < num.length; i ++) {
        if (num [i] >= 0) {
            num [k ++] = num [i];
        }
    }
    return k;
}
----------------------------------------

public static int [] removeNegativeNumbers (int [] num) {
    int [] output = new int [num.length];
    int k = 0;
    int i = 0;
    int last = - 1;
    int howmany = 0;
    while (i < num.length) {
        if (num [i] < 0) {
            howmany = i - last - 1;
            switch (howmany) {
                case 0 :
                    break;
                case 1 :
                    output [k] = num [last + 1];
                    k ++;
                    break;
                default :
                    System.arraycopy (num, last + 1, output, k, howmany);
                    k += howmany;
            }
            last = i;
        }
        i ++;
    }
    if (last >= 0) {
        if (last != i - 1) {
            howmany = i - last - 1;
            System.arraycopy (num, last + 1, output, k, howmany);
            k += howmany;
        }
    } else {
        return num;
    }
    return Arrays.copyOfRange (output, 0, k);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40452556_40452728_1_16
40452556_40452760_1_17
Title: Unable to delete last node in linked list 
----------------------------------------

public void deleteFromEnd () {
    Node start = head;
    Node prev = null;
    if (start == null) {
        return;
    }
    if (start.next == null) {
        head = null;
        return;
    }
    while (start.next != null) {
        prev = start;
        start = start.next;
    }
    prev.next = null;
}
----------------------------------------

public void deleteFromEnd () {
    Node current = head;
    Node previous = null;
    while (current != null && current.next != null) {
        previous = current;
        current = current.next;
    }
    if (current == head) {
        head = null;
    }
    if (previous != null) {
        previous.next = null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40455042_40455181_6_46
40455042_51994028_22_51
Title: Determining a Palindrome using Stack and Queue in java 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader reader = new BufferedReader (new InputStreamReader (System.in));
    while (true) {
        String line = reader.readLine ();
        if (line.toLowerCase ().equals ("quit")) {
            break;
        }
        Stack < Character > stack = new Stack < Character > ();
        Queue < Character > queue = new LinkedList < Character > ();
        for (int i = 0;
        i < line.length (); i ++) {
            stack.push (line.charAt (i));
        }
        for (int i = 0;
        i < line.length (); i ++) {
            queue.add (line.charAt (i));
        }
        boolean isPalindrome = true;
        while (! queue.isEmpty ()) {
            if (queue.remove ().equals (stack.pop ())) {
                continue;
            } else {
                isPalindrome = false;
                break;
            }
        }
        if (! isPalindrome) {
            System.out.println ("Not a Palindrome");
        } else {
            System.out.println ("Palindrome");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String input = scan.nextLine ();
    scan.close ();
    char [] s = input.toCharArray ();
    pallindrome p = new pallindrome ();
    for (int i = 0;
    i < input.length (); i ++) {
        p.pushh (i);
        p.enquee (i);
    }
    boolean isPalindrome = true;
    for (i = 0; i < s.length / 2; i ++) {
        if (p.popStack () != p.dequeueQueue ()) {
            isPalindrome = false;
            break;
        }
    }
    System.out.println ("The Integer, " + input + ", is " + ((! isPalindrome) ? "not a palindrome." : "a palindrome."));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40455129_40455277_51_67
40455129_40455277_68_84
Title: Why is two of my three while loops in a validation check being skipped over in my program? 
----------------------------------------

private void readMonth (Scanner keyboardIn) {
    boolean success = false;
    while (! success) {
        try {
            System.out.print ("Enter the month the account opened: ");
            int m = keyboardIn.nextInt ();
            dateOpened.setMonth (m);
            success = true;
        } catch (Exception e) {
            System.out.println (e.getMessage ());
            keyboardIn.next ();
        }
    }
}
----------------------------------------

private void readMonth (Scanner keyboardIn) {
    boolean success = false;
    while (! success) {
        try {
            System.out.print ("Enter the year the account opened: ");
            int y = keyboardIn.nextInt ();
            dateOpened.setYear (y);
            success = true;
        } catch (Exception e) {
            System.out.println (e.getMessage ());
            keyboardIn.next ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40456443_40457553_6_23
40456443_44938161_4_17
Title: How to move Firebase child from one node to another in Android? 
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.setValue (dataSnapshot.getValue (), new Firebase.CompletionListener () {
        @Override
        public void onComplete (FirebaseError firebaseError, Firebase firebase) {
            if (firebaseError != null) {
                System.out.println ("Copy failed");
            } else {
                System.out.println ("Success");
            }
        }}

    );
}
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.setValue (dataSnapshot.getValue (), new DatabaseReference.CompletionListener () {
        @Override
        public void onComplete (DatabaseError firebaseError, DatabaseReference firebase) {
            if (firebaseError != null) {
                System.out.println ("Copy failed");
            } else {
                System.out.println ("Success");
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40456443_40457553_6_23
40456443_46160344_8_25
Title: How to move Firebase child from one node to another in Android? 
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.setValue (dataSnapshot.getValue (), new Firebase.CompletionListener () {
        @Override
        public void onComplete (FirebaseError firebaseError, Firebase firebase) {
            if (firebaseError != null) {
                System.out.println ("Copy failed");
            } else {
                System.out.println ("Success");
            }
        }}

    );
}
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.child (dataSnapshot.getKey ()).setValue (dataSnapshot.getValue (), new DatabaseReference.CompletionListener () {
        @Override
        public void onComplete (DatabaseError databaseError, DatabaseReference databaseReference) {
            if (databaseError == null) {
                Log.i (TAG, "onComplete: success");
                fromPath.child (key).setValue (null);
            } else {
                Log.e (TAG, "onComplete: failure:" + databaseError.getMessage () + ": " + databaseError.getDetails ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40456443_44938161_4_17
40456443_46160344_8_25
Title: How to move Firebase child from one node to another in Android? 
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.setValue (dataSnapshot.getValue (), new DatabaseReference.CompletionListener () {
        @Override
        public void onComplete (DatabaseError firebaseError, DatabaseReference firebase) {
            if (firebaseError != null) {
                System.out.println ("Copy failed");
            } else {
                System.out.println ("Success");
            }
        }}

    );
}
----------------------------------------

public void onDataChange (DataSnapshot dataSnapshot) {
    toPath.child (dataSnapshot.getKey ()).setValue (dataSnapshot.getValue (), new DatabaseReference.CompletionListener () {
        @Override
        public void onComplete (DatabaseError databaseError, DatabaseReference databaseReference) {
            if (databaseError == null) {
                Log.i (TAG, "onComplete: success");
                fromPath.child (key).setValue (null);
            } else {
                Log.e (TAG, "onComplete: failure:" + databaseError.getMessage () + ": " + databaseError.getDetails ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40457210_40457449_1_18
40457210_40457544_15_29
Title: Java bubblesort 1-100 
----------------------------------------

public static int [] BubbleSortAsceMethod (int [] x) {
    for (int i = 1;
    i < x.length; i ++) {
        boolean isSorted = true;
        for (int j = 0;
        j < x.length - i; j ++) {
            if (x [j] > x [j + 1]) {
                int temp = x [j];
                x [j] = x [j + 1];
                x [j + 1] = temp;
                isSorted = false;
            }
        }
        if (isSorted) {
            break;
        }
    }
    return x;
}
----------------------------------------

public static int [] BubbleSortAsceMethod (int [] x) {
    int temp;
    for (int i = 0;
    i < x.length; i ++) {
        for (int j = 1;
        j < x.length - i; j ++) {
            if (x [j - 1] > x [j]) {
                temp = x [j - 1];
                x [j - 1] = x [j];
                x [j] = temp;
            }
        }
    }
    return x;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40458810_40458944_68_80
40458810_40458944_83_105
Title: Multiple different data types in a Node for a custom linked list in Java 
----------------------------------------

public void add (Item data) {
    Node node = new Node (data);
    Node current = head;
    while (current.getNext () != null) {
        current = current.getNext ();
    }
    current.setNext (node);
    size ++;
}
----------------------------------------

public void add (Item data, int index) {
    int i = 0;
    Node current = head;
    Node node = new Node (data);
    while (i < index - 1 && current.getNext () != null) {
        current = current.getNext ();
        i ++;
    }
    if (index - i == 1) {
        node.setNext (current.getNext ());
        current.setNext (node);
        size ++;
    } else {
        System.out.println ("Invalid index");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40458979_40615082_382_454
40458979_40615082_439_450
Title: How to make a custom Camera with live Stickers 
----------------------------------------

public void run () {
    mCameraView.stop ();
    SizeAwareImageView imageView = ((SizeAwareImageView) mCameraView.findViewById (R.id.mImageView));
    Bitmap imageBitmap = drawableToBitmap (imageView.getDrawable ());
    Matrix matrix = new Matrix ();
    float rotation = mCameraView.findViewById (R.id.mImageView).getRotation ();
    matrix.postRotate (rotation);
    Log.e (TAG, "rotation: " + rotation);
    imageBitmap = Bitmap.createBitmap (imageBitmap, 0, 0, imageBitmap.getWidth (), imageBitmap.getHeight (), matrix, true);
    imageBitmap = scaleBitmap (imageBitmap, drawableWidth, drawableHeight, rotation);
    Bitmap cameraBmp = BitmapFactory.decodeByteArray (data, 0, data.length);
    cameraBmp = fixOrientation (cameraBmp);
    File dir = new File (Environment.getExternalStorageDirectory ().getAbsolutePath () + File.separator + getString (R.string.gallery_folder_name) + (selectedBrand ? getString (R.string.ibr_eng) : getString (R.string.tiyaco_eng)));
    dir.mkdirs ();
    File file = new File (dir.getAbsolutePath (), Long.toString (Calendar.getInstance ().getTimeInMillis ()) + ".jpg");
    try {
        file.createNewFile ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    OutputStream os = null;
    InputStream is = overlayBitmapToCenter (cameraBmp, imageBitmap, rotation);
    byte [] buffer = new byte [10 * 1024];
    int n = 0;
    try {
        os = new FileOutputStream (file);
        while (- 1 != (n = is.read (buffer))) {
            os.write (buffer, 0, n);
        }
    } catch (IOException e) {
        Log.w (TAG, "Cannot write to " + file, e);
    } finally {
        if (os != null) {
            try {
                os.close ();
            } catch (IOException e) {
            }
            runOnUiThread (new Runnable () {
                @Override
                public void run () {
                    if (mCameraView != null) try {
                        mCameraView.start ();
                    } catch (Exception ignored) {
                    }

                    if (takePicture != null) {
                        takePicture.setEnabled (true);
                    }
                    progressiveToast.dismiss ();
                    TastyToast.makeText (getApplicationContext (), getString (R.string.picture_taken), TastyToast.LENGTH_LONG, TastyToast.SUCCESS);
                }}

            );
        }
    }
}
----------------------------------------

public void run () {
    if (mCameraView != null) try {
        mCameraView.start ();
    } catch (Exception ignored) {
    }

    if (takePicture != null) {
        takePicture.setEnabled (true);
    }
    progressiveToast.dismiss ();
    TastyToast.makeText (getApplicationContext (), getString (R.string.picture_taken), TastyToast.LENGTH_LONG, TastyToast.SUCCESS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4046075_20904164_1_15
4046075_50638844_22_52
Title: How to add SOAP Headers to Spring Jax-WS Client? 
----------------------------------------

public void doWithMessage (WebServiceMessage message) {
    try {
        SOAPMessage soapMessage = ((SaajSoapMessage) message).getSaajMessage ();
        SOAPHeader header = soapMessage.getSOAPHeader ();
        SOAPHeaderElement security = header.addHeaderElement (new QName ("http://schemas.xmlsoap.org/ws/2003/06/secext", "Security", "wsse"));
        SOAPElement usernameToken = security.addChildElement ("UsernameToken", "wsse");
        SOAPElement username = usernameToken.addChildElement ("Username", "wsse");
        SOAPElement password = usernameToken.addChildElement ("Password", "wsse");
        username.setTextContent (someUsername);
        password.setTextContent (somePassword);
    } catch (Exception e) {
    }
}
----------------------------------------

public void doWithMessage (WebServiceMessage message) {
    try {
        SoapHeader soapHeader = ((SoapMessage) message).getSoapHeader ();
        ObjectFactory factory = new ObjectFactory ();
        YourGeneratedHeaderEntity header = new YourGeneratedHeaderEntity ();
        header.setyourHeaderParameter1 (yourHeaderParameter1);
        header.setyourHeaderParameter2 (yourHeaderParameter2);
        JAXBElement < YourGeneratedHeaderEntity > headers = factory.createYourGeneratedHeaderEntity (header);
        JAXBContext context = JAXBContext.newInstance (YourGeneratedHeaderEntity.class);
        Marshaller marshaller = context.createMarshaller ();
        Assert.isInstanceOf (SoapMessage.class, message);
        SoapMessage soapMessage = (SoapMessage) message;
        soapMessage.setSoapAction (soapAction);
        marshaller.marshal (headers, soapHeader.getResult ());
    } catch (Exception e) {
        logger.error (e.getLocalizedMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40469157_40486027_1_23
40469157_40486470_17_42
Title: Apache POI - get pictures from single Sheet 
----------------------------------------

public static void main (String [] args) {
    try {
        InputStream inp = new FileInputStream ("workbook.xlsx");
        Workbook wb = WorkbookFactory.create (inp);
        XSSFSheet sheet1 = (XSSFSheet) wb.getSheetAt (0);
        XSSFDrawing drawing = sheet1.createDrawingPatriarch ();
        for (XSSFShape shape : drawing.getShapes ()) {
            if (shape instanceof Picture) {
                XSSFPicture picture = (XSSFPicture) shape;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    Workbook wb = WorkbookFactory.create (new File ("picture.xls"));
    Sheet sh = wb.getSheetAt (0);
    Drawing draw = sh.createDrawingPatriarch ();
    List < Picture > pics = new ArrayList < Picture > ();
    if (draw instanceof HSSFPatriarch) {
        HSSFPatriarch hp = (HSSFPatriarch) draw;
        for (HSSFShape hs : hp.getChildren ()) {
            if (hs instanceof Picture) {
                pics.add ((Picture) hs);
            }
        }
    } else {
        XSSFDrawing xdraw = (XSSFDrawing) draw;
        for (XSSFShape xs : xdraw.getShapes ()) {
            if (xs instanceof Picture) {
                pics.add ((Picture) xs);
            }
        }
    }
    for (Picture p : pics) {
        PictureData pd = p.getPictureData ();
        byte saveme [] = pd.getData ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40472834_40473083_1_16
40472834_40473108_1_20
Title: Reverse Integer number without duplicate digit in java 
----------------------------------------

private static int reverseNumberWithoutDuplicate (int number) {
    if (number < 0) {
        return - reverseNumberWithoutDuplicate (- number);
    }
    boolean [] seen = new boolean [10];
    int answer = 0;
    for (int n = number;
    n != 0; n /= 10) {
        int digit = n % 10;
        if (! seen [digit]) {
            seen [digit] = true;
            answer = answer * 10 + digit;
        }
    }
    return answer;
}
----------------------------------------

public static int reverseNumberWithoutDuplicate (int number) {
    if (number == Integer.MIN_VALUE) {
        return - 8463712;
    }
    boolean isNegative = number < 0;
    number = isNegative ? - number : number;
    BitSet usedDigits = new BitSet (10);
    int reversedNumber = 0;
    while (number != 0) {
        int digit = number % 10;
        number /= 10;
        if (! usedDigits.get (digit)) {
            usedDigits.set (digit);
            reversedNumber = 10 * reversedNumber + digit;
        }
    }
    return isNegative ? - reversedNumber : reversedNumber;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40476300_40476359_1_80
40476300_40484491_1_54
Title: Why this java SQLException? 
----------------------------------------

private void getTickersByNames (String fromtable, String totable) {
    try {
        String ticker;
        con = mhjexcel.con;
        Statement stmt1 = con.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        ResultSet rs1 = stmt1.executeQuery (sql);
        sql = "SELECT * FROM APP." + totable;
        Statement stmt2 = con.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        ResultSet rs2 = stmt2.executeQuery (sql);
        Statement stmt3 = con.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        ResultSet rs3 = stmt3.executeQuery (sql);
        rs2.beforeFirst ();
        while (rs2.next ()) {
            String name = rs2.getString ("name");
            sql = "SELECT * FROM APP." + fromtable + " where name = '" + name + "'";
            try {
                rs1 = stmt1.executeQuery (sql);
                rs1.first ();
                if (rs1.getRow () == 0) {
                    out ("the name is not in 1st table" + name);
                    fromtable = "tsetmc";
                    sql = "SELECT * FROM APP." + fromtable + " where name = '" + name + "'";
                    rs3 = stmt3.executeQuery (sql);
                    rs3.first ();
                    if (rs3.getRow () == 0) {
                        out ("the name is not in second too");
                        continue;
                    } else {
                        ticker = rs3.getString ("ticker");
                        out (ticker);
                        out (rs2.getRow ());
                        rs2.absolute (rs2.getRow ());
                        rs2.updateString ("ticker", ticker);
                        rs2.updateRow ();
                        continue;
                    }
                }
                ticker = rs1.getString ("ticker");
                rs2.updateString ("ticker", ticker);
                rs2.updateRow ();
            } catch (SQLException sql) {
                Logger.getLogger (Frame_Ticker.class.getName ()).log (Level.SEVERE, null, ex);
            } finally {
                if (rs3 != null) {
                    rs3.close ();
                }
                if (rs1 != null) {
                    rs1.close ();
                }
            }
        }
        if (rs3 != null) {
            rs3.close ();
        }
        if (rs1 != null) {
            rs1.close ();
        }
        if (rs2 != null) {
            rs2.close ();
        }
        if (stmt1 != null) {
            stmt1.close ();
        }
        if (stmt2 != null) {
            stmt2.close ();
        }
        if (stmt3 != null) {
            stmt3.close ();
        }
    } catch (SQLException ex) {
        Logger.getLogger (Frame_Ticker.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------

private void getTickersByNames (String fromtable, String totable) {
    try {
        String ticker;
        Connection con1 = DriverManager.getConnection ("jdbc:derby://localhost:1527/mhjtestdatabase", null, null);
        Connection con2 = DriverManager.getConnection ("jdbc:derby://localhost:1527/mhjtestdatabase", null, null);
        Connection con3 = DriverManager.getConnection ("jdbc:derby://localhost:1527/mhjtestdatabase", null, null);
        sql = "SELECT * FROM APP." + totable;
        Statement stmt2 = con2.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        ResultSet rs2 = stmt2.executeQuery (sql);
        rs2.beforeFirst ();
        while (rs2.next ()) {
            String name = rs2.getString ("name");
            sql = "SELECT * FROM APP." + fromtable + " where name = '" + name + "'";
            Statement stmt1 = con1.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs1 = stmt1.executeQuery (sql);
            rs1.first ();
            if (rs1.getRow () == 0) {
                out ("the name is not in 1st table" + name);
                rs1.close ();
                stmt1.close ();
                Statement stmt3 = con3.createStatement (ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                fromtable = "tsetmc";
                sql = "SELECT * FROM APP." + fromtable + " where name = '" + name + "'";
                ResultSet rs3 = stmt3.executeQuery (sql);
                rs3.first ();
                if (rs3.getRow () == 0) {
                    out ("the name is not in second too");
                    rs3.close ();
                    stmt3.close ();
                    continue;
                } else {
                    ticker = rs3.getString ("ticker");
                    rs3.close ();
                    stmt3.close ();
                    rs2.updateString ("ticker", ticker);
                    rs2.updateRow ();
                    continue;
                }
            } else {
                ticker = rs1.getString ("ticker");
                rs1.close ();
                stmt1.close ();
                rs2.updateString ("ticker", ticker);
                rs2.updateRow ();
            }
        }
        rs2.close ();
        stmt2.close ();
    } catch (SQLException ex) {
        Logger.getLogger (Frame_Ticker.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40485398_49093420_21_31
40485398_53277087_3_14
Title: Retry logic with CompletableFuture 
----------------------------------------

private CompletionStage < Response > retry (Supplier < CompletionStage < Response > > request, Executor executor, int tries) {
    if (tries >= MAX_RETRIES) throw new CompletionException (new IOException ("Request failed after " + MAX_RETRIES + " tries"));

    return request.get ().thenComposeAsync (response -> {
        if (response.getStatusInfo ().getFamily () != Response.Status.Family.SUCCESSFUL) return retry (request, executor, tries + 1);

        return CompletableFuture.completedFuture (response);
    }, executor);
}
----------------------------------------

public static < R > CompletableFuture < R > retry (Supplier < CompletableFuture < R > > supplier, int maxRetries) {
    CompletableFuture < R > f = supplier.get ();
    for (int i = 0;
    i < maxRetries; i ++) {
        f = f.thenApply (CompletableFuture :: completedFuture).exceptionally (t -> {
            System.out.println ("retry for: " + t.getMessage ());
            return supplier.get ();
        }).thenCompose (Function.identity ());
    }
    return f;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40494624_40494869_17_36
40494624_40495106_7_26
Title: Random Shuffling an array of integers in Java 
----------------------------------------

public static void main (String [] args) {
    int myArray [] = new int [5];
    System.out.println ("Please enter 5 numbers: ");
    Scanner input = new Scanner (System.in);
    for (int i = 0;
    i < myArray.length; i ++) {
        System.out.println ("Enter " + (i + 1) + ". number: ");
        myArray [i] = input.nextInt ();
    }
    System.out.println ("The numbers are: ");
    for (int j2 = 0;
    j2 < myArray.length; j2 ++) {
        System.out.println (myArray [j2]);
    }
    shuffle (myArray);
    System.out.println ("The numbers, shuffled, are: ");
    for (int j2 = 0;
    j2 < myArray.length; j2 ++) {
        System.out.println (myArray [j2]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int myArray [] = new int [ARRAY_LENGTH];
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter 5 numbers: ");
    for (int i = 0;
    i < myArray.length; i ++) myArray [i] = input.nextInt ();

    System.out.println ("\nThe numbers are: ");
    printIntArray (myArray);
    shuffleArray (myArray);
    System.out.println ("\nThe numbers, shuffled, are: ");
    printIntArray (myArray);
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40494695_40495393_3_171
40494695_40496077_3_110
Title: Numbers issue in for loops 
----------------------------------------

public static void main (String [] args) {
    boolean b = true;
    double corner = 0;
    double core = 0;
    double side = 0;
    int [] [] map = {{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 1}};
    firstBlock : {
        int i = 0;
        int j = 0;
        for (i = 0; i < 4; i ++) {
            for (j = 0; j < 4; j ++) {
                if (map [i] [j] != 1 && map [i] [j] != 0) {
                    b = false;
                    System.out.println ("--> A value of " + map [i] [j] + " was found at " + i + "," + j);
                }
            }
        }
        if (b == false && i == 4) {
            System.out.println ("The map is invalid");
            return;
        } else {
            System.out.println ("Map is valid");
        }
        if (map [0] [0] == 1) {
            corner += 5;
            if (map [1] [0] == 1 && map [0] [1] == 1) {
                corner += 0;
            }
            if (map [1] [0] != 1 && map [0] [1] != 1) {
                corner += 5;
            }
            if (map [1] [0] != 1 && map [0] [1] == 1 || map [1] [0] == 1 && map [0] [1] != 1) {
                corner += 2.5;
            }
        } else {
            corner += 0;
        }
        if (map [0] [3] == 1) {
            corner += 5;
            if (map [1] [3] == 1 && map [0] [2] == 1) {
                corner += 0;
            }
            if (map [1] [3] != 1 && map [0] [2] != 1) {
                corner += 5;
            }
            if (map [1] [3] != 1 && map [0] [2] == 1 || map [1] [3] == 1 && map [0] [2] != 1) {
                corner += 2.5;
            }
        } else {
            corner += 0;
        }
        if (map [3] [0] == 1) {
            corner += 5;
            if (map [3] [1] == 1 && map [2] [0] == 1) {
                corner += 0;
            }
            if (map [3] [1] != 1 && map [02] [0] != 1) {
                corner += 5;
            }
            if (map [3] [1] != 1 && map [2] [0] == 1 || map [3] [1] == 1 && map [2] [0] != 1) {
                corner += 2.5;
            }
        } else {
            corner += 0;
        }
        if (map [3] [3] == 1) {
            corner += 5;
            if (map [3] [2] == 1 && map [2] [3] == 1) {
                corner += 0;
            }
            if (map [3] [2] != 1 && map [2] [3] != 1) {
                corner += 5;
            }
            if (map [3] [2] != 1 && map [2] [3] == 1 || map [3] [2] == 1 && map [2] [3] != 1) {
                corner += 2.5;
            }
        } else {
            corner += 0;
        }
        System.out.println ("Corner fencing = " + corner);
    } secondBlock : {
        int i = 0;
        int j = 0;
        for (i = 1; i < 2; i ++) {
            if (map [0] [j] == 1) {
                side += 2.5;
                if (map [i + 1] [0] == 1 && map [i - 1] [0] == 1) {
                    side += 0;
                }
                if (map [i + 1] [0] != 1 || map [i - 1] [0] != 1) {
                    side += 2.5;
                }
                if (map [i + 1] [0] != 1 && map [i - 1] [0] != 1) {
                    side += 5;
                }
            } else {
                side += 0;
            }
        }
        System.out.println ("After the first row, fencing = " + side);
    } thirdBlock : {
        int i = 0;
        int j = 0;
        for (i = 1; i < 2; i ++) {
            if (map [i] [3] == 1) {
                side += 2.5;
                if (map [i + 1] [3] == 1 && map [i - 1] [3] == 1) {
                    side += 0;
                }
                if (map [i + 1] [3] != 1 || map [i - 1] [3] != 1) {
                    side += 2.5;
                }
                if (map [i + 1] [3] != 1 && map [i - 1] [3] != 1) {
                    side += 5;
                }
            } else {
                side += 0;
            }
        }
        System.out.println ("After the bottom row, fencing = " + side);
    } fourthBlock : {
        int i = 0;
        int j = 0;
        for (j = 1; j < 3; j ++) {
            if (map [3] [j] == 1) {
                side += 2.5;
                if (map [3] [j + 1] == 1 && map [3] [j - 1] == 1) {
                    side += 0;
                }
                if (map [3] [j + 1] != 1 || map [3] [j - 1] != 1) {
                    side += 2.5;
                }
                if (map [3] [j + 1] != 1 && map [3] [j - 1] != 1) {
                    side += 5;
                }
            } else {
                side += 0;
            }
        }
        System.out.println ("After the first column, fencing = " + side);
    } lastBlock : {
        int i = 0;
        int j = 0;
        for (j = 1; j < 3; j ++) {
            if (map [0] [j] == 1) {
                side += 2.5;
                if (map [0] [j + 1] == 1 && map [0] [j - 1] == 1) {
                    side += 0;
                }
                if (map [0] [j + 1] != 1 || map [0] [j - 1] != 1) {
                    side += 2.5;
                }
                if (map [0] [j + 1] != 1 && map [0] [j - 1] != 1) {
                    side += 5;
                }
            } else {
                side += 0;
            }
        }
        System.out.println ("After the last column, fencing = " + side);
    }}
----------------------------------------

public static void main (String [] args) {
    double totalFencingUnits = 0;
    double fencingUnitWeight = 2.5;
    boolean b = true;
    double corner = 0;
    double core = 0;
    double side = 0;
    int i = 0;
    int j = 0;
    int [] [] map = {{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 1}};
    for (i = 0; i < map.length; i ++) {
        for (j = 0; j < map [0].length; j ++) {
            if (map [i] [j] != 1 && map [i] [j] != 0) {
                b = false;
                System.out.println ("--> An invalid value of " + map [i] [j] + " was found at " + i + "," + j);
            }
            if (map [i] [j] == 1) {
                if ((i == 0 && (j == 0 || j == map.length - 1)) || (i == map.length - 1 && (j == 0 || j == map.length - 1))) {
                    System.out.println ("A corner " + map [i] [j] + " was found at " + i + "," + j);
                    totalFencingUnits += 2;
                    switch (2 * i - j) {
                        case - 3 :
                            totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                            totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                            break;
                        case 6 :
                            totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                            totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                            break;
                        case 0 :
                            totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                            totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                            break;
                        case 3 :
                            totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                            totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                            break;
                        default :
                            break;
                    }
                } else if ((i == 0 && (j != 0 && j != map.length - 1)) || (i == map.length - 1 && (j != 0 && j != map.length - 1)) || (j == 0 && (i != 0 && i != map.length - 1)) || (j == map.length - 1 && (i != 0 && i != map.length - 1))) {
                    System.out.println ("A side " + map [i] [j] + " was found at " + i + "," + j);
                    totalFencingUnits ++;
                    if (i == 0) {
                        totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                        totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                        totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                    }
                    if (i == map.length - 1) {
                        totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                        totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                        totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                    }
                    if (j == 0) {
                        totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                        totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                        totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                    }
                    if (j == map.length - 1) {
                        totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                        totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                        totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                    }
                } else {
                    System.out.println ("An internal " + map [i] [j] + " was found at " + i + "," + j);
                    totalFencingUnits += map [i - 1] [j] > 0 ? 0 : 1;
                    totalFencingUnits += map [i] [j - 1] > 0 ? 0 : 1;
                    totalFencingUnits += map [i] [j + 1] > 0 ? 0 : 1;
                    totalFencingUnits += map [i + 1] [j] > 0 ? 0 : 1;
                }

            }
        }
    }
    if (b == false && i == 4) {
        System.out.println ("The map is invalid");
        return;
    } else {
        System.out.println ("Map is valid");
        System.out.println ("TOTAL FENCING UNITS: " + totalFencingUnits);
        System.out.println ("TOTAL FENCING WEIGHT: " + totalFencingUnits * fencingUnitWeight);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40519150_40521092_1_26
40519150_47773280_2_20
Title: Java: How to implement Word Break? 
----------------------------------------

public boolean wordBreak (String s, Set < String > wordDict) {
    if (s == null) {
        return false;
    }
    boolean [] wordBreakDp = new boolean [s.length () + 1];
    wordBreakDp [0] = true;
    for (int i = 1;
    i <= s.length (); i ++) {
        for (int j = 0;
        j < i; j ++) {
            String word = s.substring (j, i);
            System.out.println ("[" + j + "," + i + "]=" + s.substring (j, i) + ", wordBreakDP[" + j + "]=" + wordBreakDp [j]);
            if (wordBreakDp [j] && wordDict.contains (word)) {
                wordBreakDp [i] = true;
                break;
            }
        }
    }
    for (int i = 1, start = 0;
    i <= s.length (); i ++) {
        if (wordBreakDp [i]) {
            System.out.println (s.substring (start, i));
            start = i;
        }
    }
    return wordBreakDp [s.length ()];
}
----------------------------------------

public int wordBreak (String a, ArrayList < String > b) {
    int n = a.length ();
    boolean dp [] = new boolean [n + 1];
    dp [0] = true;
    for (int i = 0;
    i < n; i ++) {
        if (! dp [i]) continue;

        for (String s : b) {
            int len = s.length ();
            int end = len + i;
            if (end > n || dp [end]) continue;

            if (a.substring (i, end).equals (s)) {
                dp [end] = true;
            }
        }
    }
    if (dp [n]) return 1;
    else return 0;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40521046_40521123_14_24
40521046_40521374_1_16
Title: "How do I move two parallel arrays from one method to another by returning to the main method then entering the second one?" 
----------------------------------------

public static void inputAccept () {
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Enter the name of item " + (i + 1) + ": ");
        names [i] = scan.next ();
        System.out.println ("Enter item cost: ");
        costs [i] = scan.nextDouble ();
    }
}
----------------------------------------

public static Item [] inputAccept () {
    Item [] items = new Item [10];
    try (Scanner scan = new Scanner (System.in)) {
        for (int i = 0;
        i < items.length; i ++) {
            System.out.println ("Enter the name of item " + (i + 1) + ": ");
            String name = scan.next ();
            System.out.println ("Enter item cost: ");
            double cost = scan.nextDouble ();
            items [i] = new Item (name, cost);
        }
    }
    return items;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40521046_40521127_8_17
40521046_40521374_1_16
Title: "How do I move two parallel arrays from one method to another by returning to the main method then entering the second one?" 
----------------------------------------

public static void inputAccept (String [] names, double [] costs) {
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Enter the name of item " + (i + 1) + ": ");
        names [i] = scan.nextLine ();
        System.out.println ("Enter item cost: ");
        costs [i] = scan.nextDouble ();
    }
}
----------------------------------------

public static Item [] inputAccept () {
    Item [] items = new Item [10];
    try (Scanner scan = new Scanner (System.in)) {
        for (int i = 0;
        i < items.length; i ++) {
            System.out.println ("Enter the name of item " + (i + 1) + ": ");
            String name = scan.next ();
            System.out.println ("Enter item cost: ");
            double cost = scan.nextDouble ();
            items [i] = new Item (name, cost);
        }
    }
    return items;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40532717_40534791_102_127
40532717_40534791_208_222
Title: FIFO queue with one pointer 
----------------------------------------

public boolean remove (Object o) {
    if (isEmpty ()) return false;

    if (size () == 1) {
        size --;
        if (head.data.equals (o)) head = head.next;

        return true;
    }
    Node temp = head;
    int counter = 1;
    while (counter < size) {
        if (o.equals (temp.next.data)) {
            temp = temp.next.next;
            size --;
            return true;
        }
        temp = temp.next;
        counter ++;
    }
    return false;
}
----------------------------------------

public T remove () {
    if (isEmpty ()) return null;

    Node temp = head;
    int counter = 0;
    while (counter < size) {
        temp = temp.next;
        counter ++;
    }
    head = head.next;
    temp.next = head;
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40532717_40534791_75_87
40532717_40534791_90_99
Title: FIFO queue with one pointer 
----------------------------------------

public Object [] toArray () {
    if (isEmpty ()) return null;

    Object [] arr = new Object [size];
    Node temp = head;
    int counter = 0;
    while (counter < size) {
        arr [counter] = temp.data;
        counter ++;
        temp = temp.next;
    }
    return arr;
}
----------------------------------------

public < T > T [] toArray (T [] a) {
    Node temp = head;
    int counter = 0;
    while (counter < size) {
        a [counter] = (T) temp.data;
        counter ++;
        temp = temp.next;
    }
    return a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40537807_40539167_20_32
40537807_40539167_37_52
Title: How to find value of prefix expression using a recursive method? 
----------------------------------------

public static double evaluate (Queue < String > input) {
    if (input.peek () != null && input.peek ().matches ("^(-?)\\d+$")) {
        return Long.parseLong (input.poll ());
    } else {
        String operator = input.poll ();
        double operand1 = evaluate (input);
        double operand2 = evaluate (input);
        return evaluate (operator, operand1, operand2);
    }
}
----------------------------------------

public static double evaluate (String operator, double operand1, double operand2) {
    if (operator.equals ("+")) {
        return operand1 + operand2;
    } else if (operator.equals ("-")) {
        return operand1 - operand2;
    } else if (operator.equals ("*")) {
        return operand1 * operand2;
    } else if (operator.equals ("/")) {
        return operand1 / operand2;
    } else if (operator.equals ("%")) {
        return operand1 % operand2;
    } else {
        throw new RuntimeException ("illegal operator " + operator);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40543826_40544175_19_27
40543826_40544175_5_17
Title: Middle part of a fence using terrain representation 
----------------------------------------

public static int bordersFor (int [] [] map) {
    int borders = 0;
    for (int row = 0;
    row < map.length; row ++) {
        for (int col = 0;
        col < map [0].length; col ++) {
            if (map [row] [col] == 1) borders += bordersFor (map, row, col);

        }
    }
    return borders;
}
----------------------------------------

public static int bordersFor (int [] [] map, int row, int col) {
    int borders = 0;
    if (col == 0 || map [row] [col - 1] == 0) borders ++;

    if (col == map [0].length - 1 || map [row] [col + 1] == 0) borders ++;

    if (row == 0 || map [row - 1] [col] == 0) borders ++;

    if (row == map.length - 1 || map [row + 1] [col] == 0) borders ++;

    return borders;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40546120_40546787_1_21
40546120_40548197_1_20
Title: java.lang.StringIndexOutOfBoundsException reverse 
----------------------------------------

public static void main (String [] args) {
    String input = "Hello world";
    StringBuilder sb = new StringBuilder ();
    String [] words = input.split (" ");
    for (String word : words) {
        if (sb.length () > 0) {
            sb.append (" ");
        }
        sb.append (reverse (word));
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter a string: ");
    Scanner sc = new Scanner (System.in);
    String str = sc.nextLine ();
    StringBuilder reverseWords = new StringBuilder ();
    String [] words = str.split ("\\s+");
    for (String word : words) {
        char [] charArray = word.toCharArray ();
        int end = word.length () - 1;
        StringBuilder revWords = new StringBuilder ();
        for (int i = end;
        i >= 0; i --) {
            revWords.append (charArray [i]);
        }
        reverseWords.append (revWords);
        reverseWords.append (" ");
    }
    System.out.print (reverseWords);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40547714_40548073_1_21
40547714_40654482_1_34
Title: How to find all sub nodes (children and childrens children) of an ASTNode 
----------------------------------------

public static void getChildren (ASTNode node) {
    if (node != null) {
        List < ASTNode > children = new ArrayList < ASTNode > ();
        List list = node.structuralPropertiesForType ();
        for (int i = 0;
        i < list.size (); i ++) {
            Object child = node.getStructuralProperty ((StructuralPropertyDescriptor) list.get (i));
            if (child instanceof ASTNode) {
                children.add ((ASTNode) child);
            }
        }
        for (ASTNode node : children) {
            if (node != null) {
                String c = children.toString ();
                results.append ("Children Node: " + c + "\n");
                getChildren (node);
            }
        }
    } else {
        return;
    }
}
----------------------------------------

public static int getChildren (ASTNode node, int n) {
    int cont = n;
    String compara = "[]";
    List < ASTNode > children = new ArrayList < ASTNode > ();
    @SuppressWarnings ("rawtypes")
    List list = node.structuralPropertiesForType ();
    for (int i = 0;
    i < list.size (); i ++) {
        Object child = node.getStructuralProperty ((StructuralPropertyDescriptor) list.get (i));
        if (child instanceof ASTNode) {
            children.add ((ASTNode) child);
        }
    }
    String teste = children.toString ();
    if (teste.equals (compara)) {
        results.append ("NMCS = " + cont + "\n");
        return cont;
    }
    if (node.getNodeType () == 32) {
        cont ++;
    } else if (node.getNodeType () == 48) {
        cont ++;
    }

    return getChildren (children.get (0), cont);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40560103_40560148_7_18
40560103_40560198_1_13
Title: Beginner searching through an array 
----------------------------------------

public static int yes (double [] arr, int target) {
    if (arr == null) {
        return - 1;
    }
    for (int i = 0;
    i < arr.length; i ++) {
        if ((arr [i] - target) >= 0.0 && (arr [i] - target) < 1.0) return i;

    }
    return - 1;
}
----------------------------------------

public static int yes (double [] arr, int target) {
    if (arr == null) {
        return - 1;
    }
    for (int i = 0;
    i < arr.length; i ++) {
        if ((int) arr [i] == target) return i;

    }
    return 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40561101_40561173_4_16
40561101_40561188_6_16
Title: Android app keeps crashing on emulator and device 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    btn1 = (Button) findViewById (R.id.button);
    btn1.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            startActivity (new Intent (MainActivity.this, Main2Activity.class));
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    btn1 = Button.class.cast (findViewById (R.id.button));
    btn1.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            startActivity (new Intent (MainActivity.this, Main2Activity.class));
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40561924_40561952_1_11
40561924_40563165_1_29
Title: Efficient algorithm to find number of elements less than a query 
----------------------------------------

public static void main (String arg []) {
    int b [] = {2, 4, 3, 4, 11, 13, 17};
    int x = 5;
    int count = 0;
    for (int i = 0;
    i < b.length; i ++) {
        if (b [i] < x) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int a [] = {1, 2, 3, 4, 5};
    int b [] = {2, 4, 3, 4, 11, 13, 17};
    List < Integer > listA = new LinkedList < > ();
    for (int i : a) {
        listA.add (i);
    }
    List < Integer > listB = new LinkedList < > ();
    for (int i : b) {
        listB.add (i);
    }
    Collections.sort (listA);
    Collections.sort (listB);
    int smallerValues = 0;
    int lastValue = 0;
    Iterator < Integer > iterator = listB.iterator ();
    int nextValue = iterator.next ();
    for (Integer x : listA) {
        while (nextValue < x && iterator.hasNext ()) {
            lastValue = nextValue;
            nextValue = iterator.next ();
            if (nextValue > lastValue) {
                smallerValues ++;
            }
        }
        System.out.println (x + " - " + smallerValues);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40570781_40570876_1_22
40570781_40570982_2_14
Title: java query not passing test case 
----------------------------------------

public static void main (String args []) {
    Scanner s = new Scanner (System.in);
    int n = s.nextInt ();
    int y = n;
    int temp = 0;
    temp = sumOfDigits (n);
    if (y % temp == 0) {
        System.out.print (y);
    } else {
        int yforward = y + 1;
        while (yforward % sumOfDigits (yforward) != 0) yforward ++;

        System.out.println (yforward);
    }
}
----------------------------------------

public static void main (String args []) {
    System.out.print ("Please enter a number: ");
    Scanner s = new Scanner (System.in);
    int inputNumber = s.nextInt ();
    while (inputNumber % sumOfDigits (inputNumber) != 0) {
        inputNumber ++;
    }
    System.out.println ("dosod: " + inputNumber);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40571621_40571733_26_44
40571621_40572066_24_40
Title: Change Floating Action Button Background 
----------------------------------------

public void onClick (View v) {
    boolean flag = getRate ();
    if (flag == false) {
        rateUp ();
        Snackbar.make (v, "Vote +1", Snackbar.LENGTH_LONG).show ();
        saveRate (true);
        fab.setImageResource (R.drawable.dislike);
    } else if (flag == true) {
        rateDown ();
        Snackbar.make (v, "Vote -1", Snackbar.LENGTH_LONG).show ();
        saveRate (false);
        fab.setImageResource (R.drawable.like);
    }

}
----------------------------------------

public void onClick (View v) {
    flag = getRate ();
    if (flag) {
        rateDown ();
        Snackbar.make (v, "Vote -1", Snackbar.LENGTH_LONG).show ();
        saveRate (false);
        fab.setImageResource (R.drawable.like);
    } else {
        rateUp ();
        Snackbar.make (v, "Vote +1", Snackbar.LENGTH_LONG).show ();
        saveRate (true);
        fab.setImageResource (R.drawable.dislike);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40571621_40571733_6_48
40571621_40572066_7_44
Title: Change Floating Action Button Background 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_read);
    fab = (FloatingActionButton) findViewById (R.id.fab);
    boolean flag = getRate ();
    if (flag == false) {
        fab.setImageResource (R.drawable.like);
    } else if (flag == true) {
        fab.setImageResource (R.drawable.dislike);
    }

    fab.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            boolean flag = getRate ();
            if (flag == false) {
                rateUp ();
                Snackbar.make (v, "Vote +1", Snackbar.LENGTH_LONG).show ();
                saveRate (true);
                fab.setImageResource (R.drawable.dislike);
            } else if (flag == true) {
                rateDown ();
                Snackbar.make (v, "Vote -1", Snackbar.LENGTH_LONG).show ();
                saveRate (false);
                fab.setImageResource (R.drawable.like);
            }

        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_read);
    fab = (FloatingActionButton) findViewById (R.id.fab);
    flag = getRate ();
    if (flag) fab.setImageResource (R.drawable.dislike);
    else fab.setImageResource (R.drawable.like);

    fab.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            flag = getRate ();
            if (flag) {
                rateDown ();
                Snackbar.make (v, "Vote -1", Snackbar.LENGTH_LONG).show ();
                saveRate (false);
                fab.setImageResource (R.drawable.like);
            } else {
                rateUp ();
                Snackbar.make (v, "Vote +1", Snackbar.LENGTH_LONG).show ();
                saveRate (true);
                fab.setImageResource (R.drawable.dislike);
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40571722_40575328_30_44
40571722_40575328_87_100
Title: How to draw a rectangle moving in a circle around the center of the canvas? 
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("Animated Square");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    DrawingPanel drawingPanel = new DrawingPanel (DRAWING_WIDTH, DRAWING_HEIGHT, drawingRectangle);
    frame.add (drawingPanel);
    frame.pack ();
    frame.setLocationByPlatform (true);
    frame.setVisible (true);
    new Thread (new DrawingAnimation (drawingPanel, drawingRectangle)).start ();
}
----------------------------------------

public void run () {
    int xCenter = drawingPanel.getWidth () / 2;
    int yCenter = drawingPanel.getHeight () / 2;
    double radius = drawingPanel.getWidth () / 3;
    for (int degree = 0;
    degree < 360; degree ++) {
        double radians = Math.toRadians ((double) degree);
        double x = radius * Math.cos (radians) + xCenter;
        double y = radius * Math.sin (radians) + yCenter;
        drawingRectangle.setRectangleOrigin (x, y);
        repaint ();
        sleep (100L);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40585598_40585706_5_14
40585598_40585724_5_14
Title: Error at Student a=new Student(); 
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40585598_40585706_5_14
40585598_40585744_6_15
Title: Error at Student a=new Student(); 
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40585598_40585724_5_14
40585598_40585744_6_15
Title: Error at Student a=new Student(); 
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------

public static void main (String [] args) {
    Student a = new Student ();
    a.name = "abc";
    a.number = 6;
    a.marks = 1;
    System.out.println (a.name);
    System.out.println (a.number);
    System.out.println (a.marks);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4058912_21132965_2_19
4058912_45147683_4_17
Title: Scanner doesn't read whole sentence 
----------------------------------------

public static void main (String args []) {
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter Your Name: ");
    String name = s.nextLine ();
    System.out.println ("Enter Your Age: ");
    String age = s.nextLine ();
    System.out.println ("Enter Your E-mail: ");
    String email = s.nextLine ();
    System.out.println ("Enter Your Address: ");
    String address = s.nextLine ();
    System.out.println ("Name: " + name);
    System.out.println ("Age: " + age);
    System.out.println ("E-mail: " + email);
    System.out.println ("Address: " + address);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int i = scan.nextInt ();
    double d = scan.nextDouble ();
    String s = "";
    while (scan.hasNext ()) {
        s = scan.nextLine ();
    }
    System.out.println ("String: " + s);
    System.out.println ("Double: " + d);
    System.out.println ("Int: " + i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4058912_21132965_2_19
4058912_45891608_3_16
Title: Scanner doesn't read whole sentence 
----------------------------------------

public static void main (String args []) {
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter Your Name: ");
    String name = s.nextLine ();
    System.out.println ("Enter Your Age: ");
    String age = s.nextLine ();
    System.out.println ("Enter Your E-mail: ");
    String email = s.nextLine ();
    System.out.println ("Enter Your Address: ");
    String address = s.nextLine ();
    System.out.println ("Name: " + name);
    System.out.println ("Age: " + age);
    System.out.println ("E-mail: " + email);
    System.out.println ("Address: " + address);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int i = scan.nextInt ();
    double d = scan.nextDouble ();
    String s = "";
    while (scan.hasNext ()) {
        s = scan.nextLine ();
    }
    System.out.println ("String: " + s);
    System.out.println ("Double: " + d);
    System.out.println ("Int: " + i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4059004_4059041_113_126
4059004_4059041_82_95
Title: Why is java.sql.DriverManager.getConnection(...) hanging? 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4059004_4059041_113_126
4059004_4059041_98_111
Title: Why is java.sql.DriverManager.getConnection(...) hanging? 
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4059004_4059041_82_95
4059004_4059041_98_111
Title: Why is java.sql.DriverManager.getConnection(...) hanging? 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40602817_40603903_4_15
40602817_40603907_1_22
Title: Handling options in a command-line program 
----------------------------------------

public static void main (String args []) {
    Options options = new Options ();
    options.addOption ("t", false, "display current time");
    CommandLineParser parser = new DefaultParser ();
    try {
        CommandLine cmd = parser.parse (options, args);
        if (cmd.hasOption ("t")) {
            System.out.println ("-t is set");
        }
    } catch (ParseException exp) {
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean replay = false;
    boolean replayAll = false;
    if (Arrays.asList (args).contains ("-r")) {
        replay = true;
    }
    if (Arrays.asList (args).contains ("-a")) {
        replayAll = true;
    }
    if (replay && replayAll) {
        replay = false;
    }
    System.out.println (replay);
    System.out.println (replayAll);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40605066_40605187_1_9
40605066_40605366_1_21
Title: Attempting to remove characters from a string 
----------------------------------------

public static void main (String [] args) {
    String stringPara = "this example will remove the vowals aeiou";
    stringPara = removeCharFromString (stringPara, "a");
    stringPara = removeCharFromString (stringPara, "e");
    stringPara = removeCharFromString (stringPara, "i");
    stringPara = removeCharFromString (stringPara, "o");
    stringPara = removeCharFromString (stringPara, "u");
    System.out.println (stringPara);
}
----------------------------------------

public static void main (String [] args) {
    String WordsWithoutVowels = "mayank";
    String updated = "";
    for (char char1 : WordsWithoutVowels.toCharArray ()) {
        switch (char1) {
            case 'a' :
            case 'e' :
            case 'i' :
            case 'o' :
            case 'u' :
                break;
            default :
                updated += char1;
        }
    }
    System.out.println (updated);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40605066_40605357_4_23
40605066_40605400_4_14
Title: Attempting to remove characters from a string 
----------------------------------------

public WordsWithoutVowels (String word) {
    for (int i = 0;
    i < word.length (); i ++) {
        switch (word.charAt (i)) {
            case 'a' :
            case 'e' :
            case 'i' :
            case 'o' :
            case 'u' :
            case 'y' :
                word = word.substring (0, i) + word.substring (i + 1);
                i --;
        }
        System.out.println (word);
    }
    finalWord = word;
}
----------------------------------------

public WordsWithoutVowels (String word) {
    StringBuilder sb = new StringBuilder (word);
    for (int i = 0;
    i < sb.length;) {
        if (sb.charAt (i) == 'a' || sb.charAt (i) == 'e' || sb.charAt (i) == 'i' || sb.charAt (i) == 'o' || sb.charAt (i) == 'u') sb.deleteCharAt (i);
        else i ++;

    }
    finalWord = sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40605066_40605357_4_23
40605066_40605886_1_11
Title: Attempting to remove characters from a string 
----------------------------------------

public WordsWithoutVowels (String word) {
    for (int i = 0;
    i < word.length (); i ++) {
        switch (word.charAt (i)) {
            case 'a' :
            case 'e' :
            case 'i' :
            case 'o' :
            case 'u' :
            case 'y' :
                word = word.substring (0, i) + word.substring (i + 1);
                i --;
        }
        System.out.println (word);
    }
    finalWord = word;
}
----------------------------------------

public WordsWithoutVowels (String word) {
    for (int i = 0;
    i < 20; i ++) {
        if (word.charAt (i) == 'a') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'e') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'i') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'o') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'u') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        }

        if (word.charAt (i) == 'y') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        }
        System.out.println (word + " " + i);
    }
    finalWord = word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40605066_40605400_4_14
40605066_40605886_1_11
Title: Attempting to remove characters from a string 
----------------------------------------

public WordsWithoutVowels (String word) {
    StringBuilder sb = new StringBuilder (word);
    for (int i = 0;
    i < sb.length;) {
        if (sb.charAt (i) == 'a' || sb.charAt (i) == 'e' || sb.charAt (i) == 'i' || sb.charAt (i) == 'o' || sb.charAt (i) == 'u') sb.deleteCharAt (i);
        else i ++;

    }
    finalWord = sb.toString ();
}
----------------------------------------

public WordsWithoutVowels (String word) {
    for (int i = 0;
    i < 20; i ++) {
        if (word.charAt (i) == 'a') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'e') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'i') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'o') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        } else if (word.charAt (i) == 'u') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        }

        if (word.charAt (i) == 'y') {
            word = word.substring (0, i) + (i == 19 ? "" : word.substring (++ i));
        }
        System.out.println (word + " " + i);
    }
    finalWord = word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40607780_40608586_1_20
40607780_40613811_1_14
Title: Reduce Cyclomatic Complexity of Switch Statement - Sonar 
----------------------------------------

public String getCalenderName () {
    ObjectWithGetNameMethod calendarType = null;
    switch (type) {
        case COUNTRY :
            calendarType = country;
            break;
        case CCP :
            calendarType = cpp;
            break;
        case EXCHANGE :
            calendarType = exchange;
            break;
        case TENANT :
            calendarType = tenant;
            break;
        default :
            calendarType = null;
    }
    return (calendarType != null ? (calendarType.getName () + HOLIDAY_CALENDAR) : name);
}
----------------------------------------

public String getCalenderName () {
    switch (type) {
        case COUNTRY :
            return getCountryName ();
        case CCP :
            return getCcpName ();
        case EXCHANGE :
            return getExchangeName ();
        case TENANT :
            return getTenantName ();
        default :
            return name;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40612973_40613162_10_20
40612973_40613701_11_22
Title: Unexpected value converting String date into epoch time? 
----------------------------------------

public static void main (String [] args) throws ParseException {
    String date = "2016-09-27 20:01:15.0";
    DateFormat df = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
    long epoch = df.parse (date).getTime ();
    System.out.println (epoch);
    Date d = new Date (epoch);
    String out = df.format (d);
    System.out.println (out);
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    String date = "2016-09-27 20:01:15 GMT";
    DateFormat df = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss z");
    long epoch = df.parse (date).getTime ();
    System.out.println (epoch);
    Date d = new Date (epoch);
    df.setTimeZone (TimeZone.getTimeZone ("GMT"));
    String out = df.format (d);
    System.out.println (out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617575_12_35
40617041_40617575_46_62
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    System.out.println ("producer started");
    char [] array = input.toCharArray ();
    synchronized (buffer) {
        if (array.length > 0) {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
            }
            buffer.notifyAll ();
        } else {
            try {
                System.out.println ("producer waiting");
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        buffer.notifyAll ();
    }
}
----------------------------------------

public void run () {
    System.out.println ("consumer started");
    synchronized (buffer) {
        while (buffer.isEmpty ()) {
            System.out.println ("consumer waiting");
            try {
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        while (! buffer.isEmpty ()) {
            System.out.println (buffer.readChar ());
        }
        buffer.notifyAll ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617575_12_35
40617041_40617808_13_30
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    System.out.println ("producer started");
    char [] array = input.toCharArray ();
    synchronized (buffer) {
        if (array.length > 0) {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
            }
            buffer.notifyAll ();
        } else {
            try {
                System.out.println ("producer waiting");
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        buffer.notifyAll ();
    }
}
----------------------------------------

public void run () {
    synchronized (buffer) {
        char [] array = input.toCharArray ();
        try {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
                callback.returnData ("Added " + array [i]);
                buffer.notifyAll ();
                buffer.wait ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617575_12_35
40617041_40617808_44_69
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    System.out.println ("producer started");
    char [] array = input.toCharArray ();
    synchronized (buffer) {
        if (array.length > 0) {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
            }
            buffer.notifyAll ();
        } else {
            try {
                System.out.println ("producer waiting");
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        buffer.notifyAll ();
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (buffer) {
            while (! Thread.currentThread ().isInterrupted ()) {
                if (! buffer.isEmpty ()) {
                    System.out.println ("Reading data");
                    callback.returnData (" Retrieved " + String.valueOf (buffer.readChar ()));
                    buffer.notifyAll ();
                } else {
                    System.out.println ("Queue is empty ");
                    callback.returnData ("Waiting");
                }
                buffer.wait ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617575_46_62
40617041_40617808_13_30
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    System.out.println ("consumer started");
    synchronized (buffer) {
        while (buffer.isEmpty ()) {
            System.out.println ("consumer waiting");
            try {
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        while (! buffer.isEmpty ()) {
            System.out.println (buffer.readChar ());
        }
        buffer.notifyAll ();
    }
}
----------------------------------------

public void run () {
    synchronized (buffer) {
        char [] array = input.toCharArray ();
        try {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
                callback.returnData ("Added " + array [i]);
                buffer.notifyAll ();
                buffer.wait ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617575_46_62
40617041_40617808_44_69
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    System.out.println ("consumer started");
    synchronized (buffer) {
        while (buffer.isEmpty ()) {
            System.out.println ("consumer waiting");
            try {
                buffer.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
        while (! buffer.isEmpty ()) {
            System.out.println (buffer.readChar ());
        }
        buffer.notifyAll ();
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (buffer) {
            while (! Thread.currentThread ().isInterrupted ()) {
                if (! buffer.isEmpty ()) {
                    System.out.println ("Reading data");
                    callback.returnData (" Retrieved " + String.valueOf (buffer.readChar ()));
                    buffer.notifyAll ();
                } else {
                    System.out.println ("Queue is empty ");
                    callback.returnData ("Waiting");
                }
                buffer.wait ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40617041_40617808_13_30
40617041_40617808_44_69
Title: My Thread won't wake up 
----------------------------------------

public void run () {
    synchronized (buffer) {
        char [] array = input.toCharArray ();
        try {
            for (int i = 0;
            i < array.length; i ++) {
                buffer.addChar (array [i]);
                System.out.println ("Adding--------- data");
                callback.returnData ("Added " + array [i]);
                buffer.notifyAll ();
                buffer.wait ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (buffer) {
            while (! Thread.currentThread ().isInterrupted ()) {
                if (! buffer.isEmpty ()) {
                    System.out.println ("Reading data");
                    callback.returnData (" Retrieved " + String.valueOf (buffer.readChar ()));
                    buffer.notifyAll ();
                } else {
                    System.out.println ("Queue is empty ");
                    callback.returnData ("Waiting");
                }
                buffer.wait ();
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
40619366_40619486_9_17
40619366_40619521_11_31
Title: Return all negative elements of a array 
----------------------------------------

public static ArrayList < Integer > findNumber (int [] sum) {
    ArrayList < Integer > negativeNumbers = new ArrayList < > ();
    for (int i = 0;
    i < sum.length; i ++) {
        if (sum [i] < 0) {
            negativeNumber.add (sum [i]);
        }
    }
    return negativeNumbers;
}
----------------------------------------

public static int [] findNumber (int [] a) {
    int j = 0;
    int [] n = new int [a.length];
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] < 0) {
            n [j] = a [i];
            j ++;
        }
    }
    int [] neg = new int [j];
    for (int k = 0;
    k < j; k ++) {
        neg [k] = n [k];
    }
    return neg;
}
----------------------------------------
