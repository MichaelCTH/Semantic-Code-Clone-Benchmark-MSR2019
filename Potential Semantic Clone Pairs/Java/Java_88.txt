$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36367728_36367962_1_18
36367728_36380665_6_40
Title: How can I format a two row string so that items of the bottom row line up with items of the top row in java 
----------------------------------------

public static void main (String [] args) {
    String fun = ("3000.05 500 6000.987 70 8000.00");
    String newStringToBePrinted = "";
    for (char c : fun) {
        if (! (c == ' ' || c == '.')) {
            String ch = c + "";
            newStringToBePrinted += ch;
        } else {
            newStringToBePrinted += "-";
        }
    }
    String total = (fun + "\n" + newStringToBePrinted);
    System.out.println (total);
}
----------------------------------------

public static void main (String [] args) {
    String fun = ("3000.05 500 6000.987 70 8000.00");
    String s2 = new String (fun);
    char first = ' ';
    String temp = "";
    for (int i = 0;
    i < s2.length (); i ++) {
        System.out.println ("Should be: 3,5,6,7,8");
        if (i != 0) {
            if (s2.charAt (i) == ' ') {
                first = s2.charAt (i + 1);
            }
        } else {
            first = s2.charAt (i);
        }
        System.out.println ("First = " + first);
        if (s2.charAt (i) != ' ') {
            temp += ' ';
        }
        if (i < s2.length () - 1 && s2.charAt (i + 1) == ' ') {
            temp += first;
        } else if (i == s2.length () - 1) {
            temp += first;
        }

    }
    temp = temp.substring (1);
    System.out.println (s2 + "\n" + temp);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36367728_36367962_1_18
36367728_36488531_1_22
Title: How can I format a two row string so that items of the bottom row line up with items of the top row in java 
----------------------------------------

public static void main (String [] args) {
    String fun = ("3000.05 500 6000.987 70 8000.00");
    String newStringToBePrinted = "";
    for (char c : fun) {
        if (! (c == ' ' || c == '.')) {
            String ch = c + "";
            newStringToBePrinted += ch;
        } else {
            newStringToBePrinted += "-";
        }
    }
    String total = (fun + "\n" + newStringToBePrinted);
    System.out.println (total);
}
----------------------------------------

public static void main (String [] args) {
    String fun = "3000.05 500 6000.987 70 8000.00";
    String lame = "3 5 6 7 8";
    String [] funs = fun.split (" ");
    String [] lames = lame.split (" ");
    for (String s : funs) {
        System.out.printf ("%s\t", s);
    }
    System.out.printf ("%n");
    for (int i = 0;
    i < lames.length; i ++) {
        System.out.printf ("%" + funs [i].length () + "s\t", lames [i]);
    }
    System.out.printf ("%n");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36367728_36380665_6_40
36367728_36488531_1_22
Title: How can I format a two row string so that items of the bottom row line up with items of the top row in java 
----------------------------------------

public static void main (String [] args) {
    String fun = ("3000.05 500 6000.987 70 8000.00");
    String s2 = new String (fun);
    char first = ' ';
    String temp = "";
    for (int i = 0;
    i < s2.length (); i ++) {
        System.out.println ("Should be: 3,5,6,7,8");
        if (i != 0) {
            if (s2.charAt (i) == ' ') {
                first = s2.charAt (i + 1);
            }
        } else {
            first = s2.charAt (i);
        }
        System.out.println ("First = " + first);
        if (s2.charAt (i) != ' ') {
            temp += ' ';
        }
        if (i < s2.length () - 1 && s2.charAt (i + 1) == ' ') {
            temp += first;
        } else if (i == s2.length () - 1) {
            temp += first;
        }

    }
    temp = temp.substring (1);
    System.out.println (s2 + "\n" + temp);
}
----------------------------------------

public static void main (String [] args) {
    String fun = "3000.05 500 6000.987 70 8000.00";
    String lame = "3 5 6 7 8";
    String [] funs = fun.split (" ");
    String [] lames = lame.split (" ");
    for (String s : funs) {
        System.out.printf ("%s\t", s);
    }
    System.out.printf ("%n");
    for (int i = 0;
    i < lames.length; i ++) {
        System.out.printf ("%" + funs [i].length () + "s\t", lames [i]);
    }
    System.out.printf ("%n");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36371957_36372020_1_13
36371957_36372711_1_15
Title: java print a reverse triagle s with integers 
----------------------------------------

public void drawPatternC (int num) {
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j <= (num - i); j ++) {
            System.out.print (" . ");
        }
        for (int j = i;
        j > 0; j --) {
            System.out.print (j + ". ");
        }
        System.out.println ();
    }
}
----------------------------------------

public void drawPatternC (int num) {
    for (int i = 1;
    i < num; i ++) {
        for (int j = num;
        j > i; j --) {
            System.out.print (".");
        }
        for (int k = i;
        k > 0; k --) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36371957_36372020_1_13
36371957_36372864_1_16
Title: java print a reverse triagle s with integers 
----------------------------------------

public void drawPatternC (int num) {
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j <= (num - i); j ++) {
            System.out.print (" . ");
        }
        for (int j = i;
        j > 0; j --) {
            System.out.print (j + ". ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void drawPatternC (int num) {
    System.out.println ("Reverse triangle:");
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j <= (num - i + 1); j ++) {
            System.out.print (".");
        }
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (j);
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36371957_36372711_1_15
36371957_36372864_1_16
Title: java print a reverse triagle s with integers 
----------------------------------------

public void drawPatternC (int num) {
    for (int i = 1;
    i < num; i ++) {
        for (int j = num;
        j > i; j --) {
            System.out.print (".");
        }
        for (int k = i;
        k > 0; k --) {
            System.out.print (k);
        }
        System.out.println ();
    }
}
----------------------------------------

public static void drawPatternC (int num) {
    System.out.println ("Reverse triangle:");
    for (int i = 1;
    i <= num; i ++) {
        for (int j = 1;
        j <= (num - i + 1); j ++) {
            System.out.print (".");
        }
        for (int j = 1;
        j <= i; j ++) {
            System.out.print (j);
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36375815_36376295_1_24
36375815_36376555_45_54
Title: How to read contents from outputStream 
----------------------------------------

public static void main (String [] args) throws Exception {
    executor = Executors.newFixedThreadPool (1);
    PipedInputStream inputStream = new PipedInputStream ();
    OutputStream outputStream = new PipedOutputStream (inputStream);
    executor.submit (new Runnable () {
        @Override
        public void run () {
            for (char c = 'a';
            c <= 'z'; ++ c) {
                try {
                    IOUtils.write ("abcdefghijklmnopqrstuvwxyz".getBytes (), outputStream);
                } catch (IOException e) {
                } finally {
                    IOUtils.closeQuietly (outputStream);
                }
            }
        }}

    );
    String string = IOUtils.toString (inputStream);
    System.out.println (string);
}
----------------------------------------

public static void main (String [] args) {
    FileReadWrite rw = new FileReadWrite ();
    try {
        rw.writeToFile ();
        rw.readFromFile ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36379577_36380718_1_12
36379577_36403656_23_34
Title: Working with properties in Spring to make a list of objects 
----------------------------------------

@Bean
public List < Estudiante > getStudents (@Value ("${estudiante.edad}")
List < Integer > numbers,@Value ("${estudiante.nombre}")
List < String > names) {
    List < Estudiante > listaStudents = new ArrayList < Estudiante > ();
    for (int i = 0;
    i < numbers.size (); i ++) {
        listaStudents.add (new Estudiante (names.get (i), numbers.get (i)));
    }
    return listaStudents;
}
----------------------------------------

public List < Estudiante > getStudents (@Value ("${estudiante.nombre}")
List < String > nombres,@Value ("${estudiante.edad}")
List < Integer > numbers) {
    List < Estudiante > listaStudents = new ArrayList < > ();
    for (int i = 0;
    i < nombres.size (); i ++) {
        listaStudents.add (new Estudiante (nombres.get (i), numbers.get (i)));
    }
    return listaStudents;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36380516_36380535_64_86
36380516_36380535_70_84
Title: Drawing a grid in a JFrame 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    new Timer (TIMER_DELAY, new ActionListener () {
        private int i = 0;
        private int j = 0;
        @Override
        public void actionPerformed (ActionEvent e) {
            if (i == MAX_ROWS) {
                ((Timer) e.getSource ()).stop ();
            }
            if (j == MAX_ROWS) {
                i ++;
                j = 0;
            }
            int number = (int) (MAX_ROWS * Math.random ()) + 1;
            fieldGrid [i] [j].setBackground (SOLVED_BG);
            fieldGrid [i] [j].setText (String.valueOf (number));
            j ++;
        }}

    ).start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (i == MAX_ROWS) {
        ((Timer) e.getSource ()).stop ();
    }
    if (j == MAX_ROWS) {
        i ++;
        j = 0;
    }
    int number = (int) (MAX_ROWS * Math.random ()) + 1;
    fieldGrid [i] [j].setBackground (SOLVED_BG);
    fieldGrid [i] [j].setText (String.valueOf (number));
    j ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36381153_36381374_11_42
36381153_36381394_4_21
Title: Adding Java 2d Arrays 
----------------------------------------

public static int [] [] add (int [] [] matrix) {
    if ((userArray.length != matrix.length) || (userArray [0].length != matrix [0].length)) {
        System.out.println ("Error: arrays are not of the same size");
        return null;
    }
    int rows = userArray.length;
    int cols = userArray [0].length;
    int addedMatrices [] [] = new int [rows] [cols];
    for (int i = 0;
    i < rows; ++ i) {
        for (int j = 0;
        j < cols; ++ j) {
            addedMatrices [i] [j] = matrix [i] [j] + userArray [i] [j];
            if (j == (cols - 1)) {
                for (int col = 0;
                col < cols; col ++) {
                    System.out.print (addedMatrices [i] [col] + " ");
                }
            }
            System.out.println ();
        }
    }
    return addedMatrices;
}
----------------------------------------

static public int [] [] add (int [] [] matrix) {
    final int nb_rows1 = matrix.length;
    final int nb_cols1 = matrix [0].length;
    final int nb_rows2 = userArray.length;
    final int nb_cols2 = userArray [0].length;
    int addedMatrices [] [] = new int [nb_rows1] [nb_rows1];
    if ((nb_rows1 == nb_rows2) && (nb_cols1 == nb_cols2)) {
        for (int i = 0;
        i < nb_rows1; ++ i) {
            for (int j = 0;
            j < nb_cols1; ++ j) {
                addedMatrices [i] [j] = matrix [i] [j] + userArray [i] [j];
                System.out.println (addedMatrices [i] [j]);
            }
        }
    }
    return addedMatrices;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36382075_36382266_1_18
36382075_36382402_60_69
Title: "Trying to understand ""driver"" program in java" 
----------------------------------------

public String toString () {
    selectionSort ();
    System.out.print ("Data after selection sort (lowest to highest): ");
    index = 0;
    for (int num : data) {
        System.out.print (data [index] + " ");
        index ++;
    }
    System.out.println ("");
    calculateMean ();
    String result = null;
    return result;
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Elements: \n");
    for (int number : data) {
        sb.append (number + "\n");
    }
    sb.append ("Mean: " + mean);
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36383313_36383353_5_19
36383313_36383374_4_21
Title: JAVA Reversing a string on multiple lines output 
----------------------------------------

public static void main (String [] args) {
    String input = "";
    System.out.println ("Enter the input string");
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        input = br.readLine ();
        char [] try1 = input.toCharArray ();
        for (int i = try1.length - 1;
        i >= 0; i --) System.out.print (try1 [i]);

    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    String original;
    String reverse = "";
    Scanner kbd = new Scanner (System.in);
    StringBuilder output = new StringBuilder ();
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        StringBuilder sb = new StringBuilder (original);
        output.append (sb.reverse ().toString ()).append ("\n");
    }
    System.out.println (output.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36383313_36383353_5_19
36383313_36383489_5_24
Title: JAVA Reversing a string on multiple lines output 
----------------------------------------

public static void main (String [] args) {
    String input = "";
    System.out.println ("Enter the input string");
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        input = br.readLine ();
        char [] try1 = input.toCharArray ();
        for (int i = try1.length - 1;
        i >= 0; i --) System.out.print (try1 [i]);

    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    String original;
    String reverse = "";
    Scanner kbd = new Scanner (System.in);
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        if (reverse.length () > 0) reverse = reverse + "\n";

        int length = original.length ();
        for (int i = length - 1;
        i >= 0; i --) {
            reverse = reverse + original.charAt (i);
        }
    }
    System.out.println (reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36383313_36383353_5_19
36383313_36385048_1_17
Title: JAVA Reversing a string on multiple lines output 
----------------------------------------

public static void main (String [] args) {
    String input = "";
    System.out.println ("Enter the input string");
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        input = br.readLine ();
        char [] try1 = input.toCharArray ();
        for (int i = try1.length - 1;
        i >= 0; i --) System.out.print (try1 [i]);

    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    String original;
    StringBuilder sbReverse = new StringBuilder ();
    Scanner kbd = new Scanner (System.in);
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        int length = original.length ();
        for (int i = length - 1;
        i >= 0; i --) {
            sbReverse.append (original.charAt (i));
        }
        sbReverse.append ('\n');
    }
    System.out.println (sbReverse.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36383313_36383374_4_21
36383313_36383489_5_24
Title: JAVA Reversing a string on multiple lines output 
----------------------------------------

public static void main (String args []) {
    String original;
    String reverse = "";
    Scanner kbd = new Scanner (System.in);
    StringBuilder output = new StringBuilder ();
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        StringBuilder sb = new StringBuilder (original);
        output.append (sb.reverse ().toString ()).append ("\n");
    }
    System.out.println (output.toString ());
}
----------------------------------------

public static void main (String args []) {
    String original;
    String reverse = "";
    Scanner kbd = new Scanner (System.in);
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        if (reverse.length () > 0) reverse = reverse + "\n";

        int length = original.length ();
        for (int i = length - 1;
        i >= 0; i --) {
            reverse = reverse + original.charAt (i);
        }
    }
    System.out.println (reverse);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36383313_36383374_4_21
36383313_36385048_1_17
Title: JAVA Reversing a string on multiple lines output 
----------------------------------------

public static void main (String args []) {
    String original;
    String reverse = "";
    Scanner kbd = new Scanner (System.in);
    StringBuilder output = new StringBuilder ();
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        StringBuilder sb = new StringBuilder (original);
        output.append (sb.reverse ().toString ()).append ("\n");
    }
    System.out.println (output.toString ());
}
----------------------------------------

public static void main (String args []) {
    String original;
    StringBuilder sbReverse = new StringBuilder ();
    Scanner kbd = new Scanner (System.in);
    while (kbd.hasNextLine ()) {
        original = kbd.nextLine ();
        int length = original.length ();
        for (int i = length - 1;
        i >= 0; i --) {
            sbReverse.append (original.charAt (i));
        }
        sbReverse.append ('\n');
    }
    System.out.println (sbReverse.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36385868_36386264_2_34
36385868_38112935_56_64
Title: "Java : How to print heap stored as array level by level" 
----------------------------------------

public static void main (String args []) {
    int a [] = new int [] {84, 81, 41, 79, 17, 38, 33, 15, 61, 6};
    StringBuilder sb = new StringBuilder ();
    int max = 0;
    for (int i = 0;
    i < 10; i ++) {
        for (int j = 0;
        j < Math.pow (2, i) && j + Math.pow (2, i) < 10; j ++) {
            if (j > max) {
                max = j;
            }
        }
    }
    for (int i = 0;
    i < 10; i ++) {
        for (int j = 0;
        j < Math.pow (2, i) && j + Math.pow (2, i) < 10; j ++) {
            for (int k = 0;
            (k < max / ((int) Math.pow (2, i))); k ++) {
                sb.append (" ");
            }
            sb.append (a [j + (int) Math.pow (2, i) - 1] + " ");
        }
        sb.append ("\n");
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    Heap heap = new Heap ();
    heap.add (30);
    heap.add (2);
    heap.add (15);
    heap.add (10);
    heap.add (31);
    heap.dump ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36387731_36387911_1_11
36387731_36387962_1_18
Title: how to remove a line of file from an other line in the same file? 
----------------------------------------

public static void main (String [] args) {
    String wordTofind = "String";
    String st = "String1String2String3String4";
    String [] arra = st.split (wordTofind);
    for (int i = 1;
    i < arra.length - 1; i ++) {
        System.out.println (wordTofind + arra [i]);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    FileReader fileReader = new FileReader ("test.txt");
    BufferedReader br = new BufferedReader (fileReader);
    int startPosition = 0;
    String line;
    ArrayList < String > items = new ArrayList < String > ();
    while ((line = br.readLine ()) != null) {
        items.add (line.substring (startPosition, line.length ()));
        System.out.println (line.substring (startPosition, line.length ()));
        startPosition = line.length ();
    }
    write ("test2.txt", items);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36393448_36393472_1_14
36393448_36393636_1_30
Title: ((Java) Return statement after if/else if/else loop? 
----------------------------------------

private static String HighOrLow (int [] numbers) {
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] > average) {
            return (numbers [i] + "is above the average");
        } else if (numbers [i] < average) {
            return (numbers [i] + " is below the average");
        } else {
            return (numbers [i] + " is equal to the average");
        }

    }
    return "No numbers founds";
}
----------------------------------------

private static String HighOrLow (int [] numbers) {
    if (numbers.length == 0) {
        return "No numbers provided";
    }
    ArrayList < Integer > above = new ArrayList ();
    ArrayList < Integer > equal = new ArrayList ();
    ArrayList < Integer > below = new ArrayList ();
    for (int i = 0;
    i < numbers.length; i ++) {
        if (numbers [i] > average) {
            above.add (numbers [i]);
        } else if (numbers [i] < average) {
            below.add (numbers [i]);
        } else {
            equal.add (numbers [i]);
        }

    }
    StringBuilder result = new StringBuilder ();
    result.append ("Above Average: ");
    result.append (above.toString ());
    result.append (", ");
    result.append ("Below Average: ");
    result.append (below.toString ());
    result.append (", ");
    result.append ("Average: ");
    result.append (equal.toString ());
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36398564_36398989_13_22
36398564_36399002_15_28
Title: RecyclerView marks unselected items as selected 
----------------------------------------

public void onClick (View v) {
    if (selectedSongs.contains (sSongs [position])) {
        selectedSongs.remove (sSongs [position]);
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    } else {
        selectedSongs.add (sSongs [position]);
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    }
}
----------------------------------------

public void onClick (View v) {
    int pos = holder.getAdapterPosition ();
    System.out.println (sSongs [pos].getTitle ());
    if (selectedSongs.contains (sSongs [pos])) {
        selectedSongs.remove (sSongs [pos]);
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    } else {
        selectedSongs.add (sSongs [pos]);
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36398564_36398989_13_22
36398564_36399262_12_21
Title: RecyclerView marks unselected items as selected 
----------------------------------------

public void onClick (View v) {
    if (selectedSongs.contains (sSongs [position])) {
        selectedSongs.remove (sSongs [position]);
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    } else {
        selectedSongs.add (sSongs [position]);
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    }
}
----------------------------------------

public void onClick (View v) {
    if (selectedSongs.contains (sSongs [position])) {
        selectedSongs.remove (sSongs [position]);
        notifyDataSetChanged ();
    } else {
        selectedSongs.add (sSongs [position]);
        notifyDataSetChanged ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36398564_36398989_1_24
36398564_36399262_1_23
Title: RecyclerView marks unselected items as selected 
----------------------------------------

public void onBindViewHolder (final Holder holder, final int position) {
    holder.txvSongTitle.setText (sSongs [position].getTitle ());
    holder.txvSongInfo.setText (sSongs [position].getArtists ());
    if (selectedSongs.contains (sSongs [position])) {
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    } else {
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    }
    holder.linearLayout.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (selectedSongs.contains (sSongs [position])) {
                selectedSongs.remove (sSongs [position]);
                holder.linearLayout.setBackgroundResource (android.R.color.transparent);
            } else {
                selectedSongs.add (sSongs [position]);
                holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
            }
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (final Holder holder, final int position) {
    holder.txvSongTitle.setText (sSongs [position].getTitle ());
    holder.txvSongInfo.setText (sSongs [position].getArtists ());
    holder.linearLayout.setBackgroundResource (selectedSongs.contains (sSongs [position]) ? R.color.colorItemSelected : android.R.color.transparent);
    holder.linearLayout.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (selectedSongs.contains (sSongs [position])) {
                selectedSongs.remove (sSongs [position]);
                notifyDataSetChanged ();
            } else {
                selectedSongs.add (sSongs [position]);
                notifyDataSetChanged ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36398564_36399002_15_28
36398564_36399262_12_21
Title: RecyclerView marks unselected items as selected 
----------------------------------------

public void onClick (View v) {
    int pos = holder.getAdapterPosition ();
    System.out.println (sSongs [pos].getTitle ());
    if (selectedSongs.contains (sSongs [pos])) {
        selectedSongs.remove (sSongs [pos]);
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    } else {
        selectedSongs.add (sSongs [pos]);
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    }
}
----------------------------------------

public void onClick (View v) {
    if (selectedSongs.contains (sSongs [position])) {
        selectedSongs.remove (sSongs [position]);
        notifyDataSetChanged ();
    } else {
        selectedSongs.add (sSongs [position]);
        notifyDataSetChanged ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36398564_36399002_1_30
36398564_36399262_1_23
Title: RecyclerView marks unselected items as selected 
----------------------------------------

@Override
public void onBindViewHolder (final Holder holder, int position) {
    holder.txvSongTitle.setText (sSongs [position].getTitle ());
    holder.txvSongInfo.setText (sSongs [position].getArtists ());
    if (! selectedSongs.contains (sSongs [position])) {
        holder.linearLayout.setBackgroundResource (android.R.color.transparent);
    } else {
        holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
    }
    holder.linearLayout.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            int pos = holder.getAdapterPosition ();
            System.out.println (sSongs [pos].getTitle ());
            if (selectedSongs.contains (sSongs [pos])) {
                selectedSongs.remove (sSongs [pos]);
                holder.linearLayout.setBackgroundResource (android.R.color.transparent);
            } else {
                selectedSongs.add (sSongs [pos]);
                holder.linearLayout.setBackgroundResource (R.color.colorItemSelected);
            }
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (final Holder holder, final int position) {
    holder.txvSongTitle.setText (sSongs [position].getTitle ());
    holder.txvSongInfo.setText (sSongs [position].getArtists ());
    holder.linearLayout.setBackgroundResource (selectedSongs.contains (sSongs [position]) ? R.color.colorItemSelected : android.R.color.transparent);
    holder.linearLayout.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (selectedSongs.contains (sSongs [position])) {
                selectedSongs.remove (sSongs [position]);
                notifyDataSetChanged ();
            } else {
                selectedSongs.add (sSongs [position]);
                notifyDataSetChanged ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3640080_14887753_1_21
3640080_3640550_51_71
Title: Force flush on a GZIPOutputStream in java 
----------------------------------------

@Override
public synchronized void flush () throws IOException {
    if (hasLastByte) {
        if (! def.finished ()) {
            def.setLevel (Deflater.NO_COMPRESSION);
            flushLastByte ();
            flagReenableCompression = true;
        }
    }
    out.flush ();
}
----------------------------------------

public synchronized void flush () throws IOException {
    if (! somethingWritten) {
        return;
    }
    super.flush ();
    int len;
    while ((len = def.deflate (buf, 0, buf.length)) > 0) {
        out.write (buf, 0, len);
    }
    os.flush ();
    somethingWritten = false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3640648_34094834_1_21
3640648_3641390_61_79
Title: How to correctly use HashMap? 
----------------------------------------

public static void main (String [] args) {
    Map < Integer, String > map = new HashMap < Integer, String > ();
    map.put (1, "ankush");
    map.put (2, "amit");
    map.put (3, "shivam");
    map.put (4, "ankit");
    map.put (5, "yogesh");
    System.out.println ("HashMap = " + map);
}
----------------------------------------

public static void main (final String [] args) {
    final ValueStore store = new ValueStore ();
    final String intKey = "int1";
    final String stringKey = "string1";
    final int intValue = 123;
    final String stringValue = "str";
    store.putAsInt (intKey, intValue);
    store.putAsString (stringKey, stringValue);
    assertTrue (store.containsIntValue (intKey));
    assertTrue (store.containsStringValue (stringKey));
    assertFalse (store.containsIntValue (stringKey));
    assertFalse (store.containsStringValue (intKey));
    assertEquals (123, store.getAsInt (intKey));
    assertEquals (stringValue, store.getAsString (stringKey));
    assertNull (store.getAsString (intKey));
    assertEquals (- 1, store.getAsInt (stringKey));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36410729_36411039_1_29
36410729_36411571_5_37
Title: Reading from Text file but only store specific parts 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    File file = new File ("StationInfo.txt");
    try (Scanner sc = new Scanner (file)) {
        while (sc.hasNext ()) {
            String stationTab = sc.next ();
            if (! stationTab.equals ("Station:")) continue;

            if (! sc.hasNext ()) {
                break;
            }
            String station = sc.next ();
            if (! sc.hasNextInt ()) {
                continue;
            }
            int x = sc.nextInt ();
            if (! sc.hasNextInt ()) {
                continue;
            }
            int y = sc.nextInt ();
            System.out.println (station + " " + x + " " + y);
        }
    } catch (FileNotFoundException e) {
        System.out.println ("File not found");
    }
}
----------------------------------------

public static void main (String [] args) {
    File file = new File ("StationInfo.txt");
    String token1 = "";
    try {
        Scanner sc = new Scanner (file);
        while (sc.hasNext ()) {
            String [] acceptedValues = new String [3];
            String line = sc.nextLine ();
            String [] values = line.split (" ");
            for (int i = 1;
            i < values.length; i ++) {
                acceptedValues [i - 1] = values [i];
            }
            if (values.length < 4) {
                String nextLine = sc.nextLine ();
                String [] nextLineValues = nextLine.split (" ");
                for (int i = 1;
                i <= acceptedValues.length + 1 - values.length; i ++) {
                    acceptedValues [values.length + i - 2] = nextLineValues [i - 1];
                }
            }
        }
        System.out.println ("Name: " + acceptedValues [0]);
        System.out.println ("X: " + acceptedValues [1]);
        System.out.println ("Y: " + acceptedValues [2]);
        sc.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36412008_36412245_34_68
36412008_36412262_1_24
Title: How to add a background grid to JPanel when drawing lines? 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    g.setColor (Color.lightGray);
    int sideLength = 20;
    int nRowCount = getHeight () / sideLength;
    int currentX = sideLength;
    for (int i = 0;
    i < nRowCount; i ++) {
        g.drawLine (0, currentX, getWidth (), currentX);
        currentX = currentX + sideLength;
    }
    int nColumnCount = getWidth () / sideLength;
    int currentY = sideLength;
    for (int i = 0;
    i < nColumnCount; i ++) {
        g.drawLine (currentY, 0, currentY, getHeight ());
        currentY = currentY + sideLength;
    }
    Graphics2D g2d = (Graphics2D) g;
    g2d.setColor (Color.blue);
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setStroke (new BasicStroke (8, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
    g.drawLine (p1.x, p1.y, p2.x, p2.y);
    for (int i = 0;
    i < lines.size (); i ++) {
        g.drawLine (lines.get (i).p1.x, lines.get (i).p1.y, lines.get (i).p2.x, lines.get (i).p2.y);
    }
}
----------------------------------------

@Override
protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    for (int i = 1;
    i < 500; i += 10) {
        g.drawLine (i, 1, i, 500);
    }
    for (int i = 1;
    i < 500; i += 10) {
        g.drawLine (1, i, 500, i);
    }
    Graphics2D g2d = (Graphics2D) g;
    g2d.setColor (Color.blue);
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setStroke (new BasicStroke (8, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
    g.drawLine (p1.x, p1.y, p2.x, p2.y);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36412008_36412245_34_68
36412008_36413742_104_127
Title: How to add a background grid to JPanel when drawing lines? 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    g.setColor (Color.lightGray);
    int sideLength = 20;
    int nRowCount = getHeight () / sideLength;
    int currentX = sideLength;
    for (int i = 0;
    i < nRowCount; i ++) {
        g.drawLine (0, currentX, getWidth (), currentX);
        currentX = currentX + sideLength;
    }
    int nColumnCount = getWidth () / sideLength;
    int currentY = sideLength;
    for (int i = 0;
    i < nColumnCount; i ++) {
        g.drawLine (currentY, 0, currentY, getHeight ());
        currentY = currentY + sideLength;
    }
    Graphics2D g2d = (Graphics2D) g;
    g2d.setColor (Color.blue);
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setStroke (new BasicStroke (8, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
    g.drawLine (p1.x, p1.y, p2.x, p2.y);
    for (int i = 0;
    i < lines.size (); i ++) {
        g.drawLine (lines.get (i).p1.x, lines.get (i).p1.y, lines.get (i).p2.x, lines.get (i).p2.y);
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    double cellSize = cmsToPixel (5d, SCREEN_DPI);
    Rectangle2D cell = new Rectangle2D.Double (0, 0, cellSize, cellSize);
    g2d.setColor (Color.LIGHT_GRAY);
    double x = 0;
    double y = 0;
    while (y + cellSize < getHeight ()) {
        x = 0;
        while (x + cellSize < getWidth ()) {
            g2d.translate (x, y);
            g2d.draw (cell);
            g2d.translate (- x, - y);
            x += cellSize;
        }
        y += cellSize;
    }
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36412008_36412262_1_24
36412008_36413742_104_127
Title: How to add a background grid to JPanel when drawing lines? 
----------------------------------------

@Override
protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    for (int i = 1;
    i < 500; i += 10) {
        g.drawLine (i, 1, i, 500);
    }
    for (int i = 1;
    i < 500; i += 10) {
        g.drawLine (1, i, 500, i);
    }
    Graphics2D g2d = (Graphics2D) g;
    g2d.setColor (Color.blue);
    g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2d.setStroke (new BasicStroke (8, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
    g.drawLine (p1.x, p1.y, p2.x, p2.y);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    double cellSize = cmsToPixel (5d, SCREEN_DPI);
    Rectangle2D cell = new Rectangle2D.Double (0, 0, cellSize, cellSize);
    g2d.setColor (Color.LIGHT_GRAY);
    double x = 0;
    double y = 0;
    while (y + cellSize < getHeight ()) {
        x = 0;
        while (x + cellSize < getWidth ()) {
            g2d.translate (x, y);
            g2d.draw (cell);
            g2d.translate (- x, - y);
            x += cellSize;
        }
        y += cellSize;
    }
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36415594_36416102_1_13
36415594_36417293_93_106
Title: Java GPA CALC issue 
----------------------------------------

public double addClass (double totalGradePoints, String grade) {
    double gradePoints = 0;
    if (grade.equals ("A")) {
        gradePoints = 4.0;
    } else if (grade.equals ("B")) {
        gradePoints = 3.0;
    } else if (grade.equals ("C")) {
        gradePoints = 2.0;
    } else if (grade.equals ("D")) {
        gradePoints = 1.0;
    }

    totalGradePoints = (totalGradePoints + gradePoints);
}
----------------------------------------

public static double addClass (double totalGradePoints, String grade) {
    double gradePoints = 0;
    if (grade.equals ("A")) {
        gradePoints = 4.0;
    } else if (grade.equals ("B")) {
        gradePoints = 3.0;
    } else if (grade.equals ("C")) {
        gradePoints = 2.0;
    } else if (grade.equals ("D")) {
        gradePoints = 1.0;
    }

    totalGradePoints = (totalGradePoints + gradePoints);
    return totalGradePoints;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36427839_36427984_2_23
36427839_36428056_1_36
Title: Filereader.read() method not working 
----------------------------------------

public static void main (String args []) {
    try {
        File f = new File (".\\file1.txt");
        if (f.createNewFile ()) {
            System.out.println ("File is created!");
        } else {
            System.out.println ("File already exists.");
        }
        FileWriter f1 = new FileWriter (".\\file1.txt");
        f1.write ("Hello World. This is a sample text file!");
        FileReader f2 = new FileReader (".\\file1.txt");
        BufferedReader br = new BufferedReader (f2);
        String s;
        while ((s = br.readLine ()) != null) {
            System.out.println (s);
        }
        br.close ();
        f1.close ();
        f2.close ();
    } catch (Exception e) {
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        File f = new File ("file1.txt");
        if (f.createNewFile ()) {
            System.out.println ("File is created!");
        } else {
            System.out.println ("File already exists.");
        }
        FileWriter f1 = new FileWriter (f);
        f1.write ("Hello World. This is a sample text file!");
        f1.flush ();
        f1.close ();
        FileReader f2 = new FileReader (f);
        BufferedReader reader = null;
        try {
            reader = new BufferedReader (f2);
            String l = reader.readLine ();
            while (l != null) {
                System.out.println (l);
                l = reader.readLine ();
            }
        } finally {
            try {
                if (reader != null) reader.close ();

            } catch (Exception e) {
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36441380_36441541_1_19
36441380_36441699_4_33
Title: Java: how to account for (full) names of varying token length in an external file using a scanner 
----------------------------------------

public static void main (String [] args) throws IOException {
    String fileName = "/path/to/file.txt";
    byte [] encoded = Files.readAllBytes (Paths.get (fileName));
    String fileContents = new String (encoded);
    String [] contents = fileContents.split ("\\s");
    for (String element : contents) {
        if (! element.isEmpty ()) {
            if (! isNumeric (element)) {
                System.out.printf (element + " ");
            } else {
                System.out.println (element);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    String fileName = "test.txt";
    File myFile = new File (fileName);
    String name = "";
    int age = 0;
    Scanner scan = new Scanner (myFile);
    scan.useDelimiter (" ");
    while (scan.hasNext ()) {
        if (scan.hasNext ()) {
            name = scan.next ();
            System.out.print (name + " ");
        }
        if (scan.hasNextInt ()) {
            age = scan.nextInt ();
            System.out.println (age);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36455971_36457165_1_18
36455971_36484657_8_26
Title: How to extract address with regular expressions 
----------------------------------------

public static void main (String [] args) {
    int state = 0;
    String line;
    String [] array = new String [3];
    BufferedReader br = new BufferedReader (new FileReader ("addresses.txt"));
    while ((line = br.readLine ()) != null) {
        if (line.equals ("")) {
            processAddress (array, state);
            state = 0;
        } else {
            array [state] = line;
            ++ state;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Pattern compile = Pattern.compile ("at\\s(\\d{1,5}[\\s\\w,\\d]+)\\.", Pattern.CASE_INSENSITIVE | Pattern.MULTILINE | Pattern.UNICODE_CHARACTER_CLASS);
    String s = "23 July 2016\n" + "George Washington living at 5664 rue pierre labelle montreal QC G1H 3A4. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n" + "05 January 2016\n" + "Juana Perez living at 5456 avenue martin curé, sherbrooke, QC, G1H 3A8. Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
    System.out.println (s);
    System.out.println (System.getProperty ("line.separator"));
    System.out.println ("Searching Addresses.....");
    System.out.println (System.getProperty ("line.separator"));
    Matcher matcher = compile.matcher (s);
    while (matcher.find ()) {
        System.out.println (matcher.group (1));
    }
    System.out.println (System.getProperty ("line.separator"));
    System.out.println ("Completed Searching Addresses");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36458861_36458891_1_12
36458861_36459149_1_11
Title: return the index of the first element of the array A whose value is greater or equal to m 
----------------------------------------

public int getOverM (int m) {
    for (int j = 0;
    j < A.length; j ++) {
        if (m <= A [j]) {
            flag = 0;
            break;
        } else flag = 1;

    }
    if (! flag) return j;
    else return - 1;

}
----------------------------------------

public int getOverM (int m) {
    int index = - 1;
    for (int j = 0;
    j < A.length; j ++) {
        if (m <= A [j]) {
            index = j;
            break;
        }
    }
    return index;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36467378_36467428_9_20
36467378_36467481_9_19
Title: "percentEven won't compile" 
----------------------------------------

public static int percentEven (int [] integers) {
    int count = 0;
    int even = 0;
    for (int i = 0;
    i < integers.length; i ++) {
        if (integers [i] % 2 == 0) {
            even ++;
        }
        count ++;
    }
    count = (even / count) * 100;
    return count;
}
----------------------------------------

public static double percentEven (int [] integers) {
    int count = 0;
    int even = 0;
    for (int i = 0;
    i < integers.length; i ++) {
        if (integers [i] % 2 == 0) {
            even ++;
        }
        count ++;
    }
    return (100.0 * even / count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36476183_36476663_1_32
36476183_36477752_1_41
Title: String Radix Sort - StringIndexOutOfBoundsEception 
----------------------------------------

public static void stringRadixSort (List < String > list, int letters) {
    List < String > [] buckets = (List < String > []) Array.newInstance (List.class, 27);
    int letterNumber = 1;
    for (int i = 0;
    i < letters; i ++) {
        while (! list.isEmpty ()) {
            String word = list.remove (list.first ());
            if (word.length () > letters) throw new UnsortableException ("The list contains a word that holds more letters than the given maximum number of letters." + "\nMax Letters: " + letters + "\nWord: " + word);

            int index;
            if (word.length () > letterNumber) {
                char ch = word.charAt (letterNumber - 1);
                index = ch - 'a' + 1;
            } else {
                index = 0;
            }
            if (buckets [index] == null) {
                buckets [index] = new LinkedList < String > ();
            }
            buckets [index].insertLast (word);
        }
        for (int j = 0;
        j < buckets.length; j ++) {
            if (buckets [j] != null) {
                while (! buckets [j].isEmpty ()) {
                    list.insertLast (buckets [j].remove (buckets [j].first ()));
                }
            }
        }
        letterNumber ++;
    }
}
----------------------------------------

public static void stringRadixSort (List < String > list, int letters) {
    if (list.size () <= 1) {
        return;
    }
    List < String > [] buckets = new List [27];
    for (int i = 0;
    i < buckets.length; i ++) {
        buckets [i] = new LinkedList < > ();
    }
    int largestLength = - 1;
    int secondLargestLength = 0;
    for (String s : list) {
        int length = s.length ();
        if (length >= largestLength) {
            secondLargestLength = largestLength;
            largestLength = length;
        } else if (secondLargestLength < length) {
            secondLargestLength = length;
        }

    }
    if (largestLength > letters) {
        throw new IllegalArgumentException ("one of the strings is too long");
    }
    for (int i = secondLargestLength == largestLength ? secondLargestLength - 1 : secondLargestLength;
    i >= 0; i --) {
        for (String word : list) {
            int index = (word.length () <= i) ? 0 : word.charAt (i) - ('a' - 1);
            buckets [index].add (word);
        }
        list.clear ();
        for (List < String > lst : buckets) {
            if (lst != null) {
                list.addAll (lst);
                lst.clear ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36476457_36476745_1_24
36476457_36480544_29_48
Title: code runs multiple times without us asking for it 
----------------------------------------

@Override
public void paintComponent (Graphics g) {
    if (paintComponentExecuted == false) {
        loadLevel ();
        int i = 0;
        int positionX = 50;
        int positionY = 50;
        for (int y = 0;
        y < map.length; y ++) {
            for (int x = 0;
            x < map.length; x ++) {
                new Tile (x, y).paintComponent (g);
                map [y] [x] = gameElements [i];
                g.drawString (gameElements [i], positionY, positionX);
                positionY += 50;
                System.out.print ("[" + map [y] [x] + "]");
                i ++;
            }
            positionY = 50;
            positionX += 50;
            paintComponentExecuted = true;
            System.out.println ();
        }
    }
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (isInitialized) {
        int i = 0;
        g.clearRect (0, 0, this.getWidth (), this.getHeight ());
        for (int y = 0;
        y < map.length; y ++) {
            for (int x = 0;
            x < map.length; x ++) {
                tiles [i].paintComponent (g);
                map [y] [x] = tiles [i].getLabel ();
                System.out.printf ("[%s]", map [y] [x]);
                i ++;
            }
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_23287503_4_18
3647657_44332168_53_62
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public static void main (String args []) {
    int i;
    Scanner in = new Scanner (System.in);
    i = in.nextInt ();
    if (isprime (i)) {
        System.out.println ("YES");
    } else {
        System.out.println ("NO");
    }
}
----------------------------------------

public static void main (String [] args) {
    InputStream inputStream = System.in;
    OutputStream outputStream = System.out;
    InputReader in = new InputReader (inputStream);
    OutputWriter out = new OutputWriter (outputStream);
    ProblemSolver problemSolver = new ProblemSolver ();
    problemSolver.solveTheProblem (in, out);
    out.flush ();
    out.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_340_347
3647657_44332168_349_356
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (Object...objects) {
    for (int i = 0;
    i < objects.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (objects [i]);
    }
}
----------------------------------------

public void print (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_340_347
3647657_44332168_358_365
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (Object...objects) {
    for (int i = 0;
    i < objects.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (objects [i]);
    }
}
----------------------------------------

public void print (double [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_340_347
3647657_44332168_367_374
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (Object...objects) {
    for (int i = 0;
    i < objects.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (objects [i]);
    }
}
----------------------------------------

public void print (long [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_349_356
3647657_44332168_358_365
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------

public void print (double [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_349_356
3647657_44332168_367_374
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (int [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------

public void print (long [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3647657_44332168_358_365
3647657_44332168_367_374
Title: Can someone post a program template for submitting a solution in Java in Codeforces programming competitions? 
----------------------------------------

public void print (double [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------

public void print (long [] array) {
    for (int i = 0;
    i < array.length; i ++) {
        if (i != 0) {
            writer.print (' ');
        }
        writer.print (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36479625_36479779_1_21
36479625_36480151_1_15
Title: Populating a 2D Array Java 
----------------------------------------

public static void main (String [] args) {
    double mark = 0d;
    int id = 0;
    double [] [] studs = new double [50] [8];
    Scanner fromKeyboard = new Scanner (System.in);
    for (int studentNo = 0;
    studentNo < 50; studentNo ++) {
        System.out.print ("enter student ID number for student " + (studentNo + 1) + ":");
        id = fromKeyboard.nextInt ();
        studs [studentNo] [0] = id;
        for (int moduleNo = 1;
        moduleNo < 8; moduleNo ++) {
            System.out.print ("Enter mark of student " + id + " for module " + moduleNo);
            mark = fromKeyboard.nextDouble ();
            studs [studentNo] [moduleNo] = mark;
        }
    }
    fromKeyboard.close ();
}
----------------------------------------

public static void main (String [] args) {
    double [] [] studs = new double [50] [8];
    Scanner fromKeyboard = new Scanner (System.in);
    for (int studentNo = 0;
    studentNo < 50; studentNo ++) {
        System.out.println ("enter student ID number for student " + studentNo);
        studs [studentNo] [0] = fromKeyboard.nextDouble ();
        for (int moduleNo = 1;
        moduleNo < 8; moduleNo ++) {
            System.out.println ("Enter users mark for module " + moduleNo);
            studs [studentNo] [moduleNo] = fromKeyboard.nextDouble ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36480876_36481322_137_154
36480876_36496065_36_58
Title: How to add icons on navigation drawer? 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        convertView = LayoutInflater.from (getContext ()).inflate (R.layout.list_item_drawer, parent, false);
        final ViewHolder holder = new ViewHolder ();
        holder.icon = (ImageView) convertView.findViewById (R.id.drawer_item_icon);
        holder.title = (TextView) convertView.findViewById (R.id.drawer_item_title);
        convertView.setTag (holder);
    }
    final DrawerItem item = getItem (position);
    final ViewHolder holder = (ViewHolder) convertView.getTag ();
    holder.icon.setImageResource (item.iconResId);
    holder.title.setText (item.titleResId);
    return convertView;
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        convertView = layoutInflater.inflate (resource, parent, false);
        menuHolder = new MenuHolder ();
        menuHolder.menuItemImg = (ImageView) convertView.findViewById (R.id.menuItemImg);
        menuHolder.menuItemTitle = (TextView) convertView.findViewById (R.id.menuItemTitle);
        convertView.setTag (menuHolder);
    } else {
        menuHolder = (MenuHolder) convertView.getTag ();
    }
    MenuItem menuItem = data.get (position);
    if (menuItem != null) {
        menuHolder.menuItemImg.setImageResource (menuItem.getImageId ());
        menuHolder.menuItemTitle.setText (menuItem.getTitle ());
    }
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36485256_36485569_1_12
36485256_36485908_1_12
Title: Ascertaining the highest power of 2 for a given integer 
----------------------------------------

public int largestPowerOf2 (int n) {
    int mul = 1;
    int lastWorkingSolution = 0;
    while (true) {
        if (mul >= n) return lastWorkingSolution;
        else {
            lastWorkingSolution = mul;
            mul *= 2;
        }
    }
}
----------------------------------------

private static int largestPowerOf2 (int n) {
    int power = 1;
    int value = (int) Math.pow (2, power);
    while (value < n) {
        power ++;
        value = (int) Math.pow (2, power);
    }
    power --;
    return (int) Math.pow (2, power);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36490768_36490901_5_24
36490768_36491105_2_19
Title: "FileReader class interface or enum expected" 
----------------------------------------

public static void main (String [] args) {
    File input = new File ("mystery.txt");
    try {
        double answer = 0;
        FileReader fr = new FileReader (input);
        BufferedReader br = new BufferedReader (fr);
        String currentLine = null;
        while ((currentLine = br.readLine ()) != null) {
            if (isDouble (currentLine)) {
                double temp = Double.parseDouble (currentLine);
                answer = Double.parseDouble (currentLine) + temp;
            } else {
                continue;
            }
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public static void main (String [] args) {
    File input = new File ("mystery.txt");
    try {
        double answer = 0;
        FileReader fr = new FileReader (input);
        BufferedReader br = new BufferedReader (fr);
        String currentLine = br.readLine ();
        while (currentLine != null) {
            currentLine = br.readLine ();
            Double curDouble = tryParseDouble (currentLine);
            if (curDouble != null) {
                answer += curDouble;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36496869_36497171_1_23
36496869_45755611_1_27
Title: Android ExpandableListView getChildView not triggering 
----------------------------------------

@Override
public View getGroupView (final int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
    if (convertView == null) {
        final Inventory inventory = getGroup (groupPosition);
        convertView = View.inflate (context, R.layout.listview_layout_two_row_delete, null);
    }
    ImageButton btnDelete = (ImageButton) convertView.findViewById (R.id.btnDelete);
    TextView text1 = (TextView) convertView.findViewById (R.id.text1);
    TextView text2 = (TextView) convertView.findViewById (R.id.text2);
    text1.setText (inventory.getCode ());
    text2.setText (inventory.getItem ());
    btnDelete.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Toast.makeText (context, "DELETED", Toast.LENGTH_SHORT).show ();
        }}

    );
    return convertView;
}
----------------------------------------

@Override
public View getGroupView (final int groupPosition, final boolean isExpanded, View convertView, final ViewGroup viewGroup) {
    if (convertView == null) {
        LayoutInflater inflater = (LayoutInflater) m_context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflater.inflate (R.layout.expandable_list_milk_type, null);
    }
    final CheckBox cbMilkType = (CheckBox) convertView.findViewById (R.id.cb_milk_type);
    cbMilkType.setText (m_listMilktype.get (groupPosition));
    cbMilkType.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            ExpandableListView expandableListView = (ExpandableListView) viewGroup;
            cbMilkType.toggle ();
            if (! isExpanded) {
                expandableListView.expandGroup (groupPosition);
            } else {
                expandableListView.collapseGroup (groupPosition);
            }
        }}

    );
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36498208_36498300_1_15
36498208_50561728_1_16
Title: How to insert node at nth position in linked list 
----------------------------------------

void pushnth (int item, int pos) {
    Node cur = new Node ();
    cur.data = item;
    Node temp = head;
    int i = 0;
    while (i < pos - 2) {
        temp = temp.next;
        i ++;
    }
    cur.next = temp.next;
    temp.next = cur;
}
----------------------------------------

void pushnth (int item, int pos) {
    Node cur = new Node ();
    cur.data = item;
    if (pos == 0) {
        cur.next = head;
        head = cur;
    } else {
        Node temp = head;
        for (int i = 1;
        i < pos; ++ i) {
            temp = temp.next;
        }
        cur.next = temp.next;
        temp.next = cur;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36502439_36503364_5_17
36502439_36534754_1_18
Title: Create java list from user input 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Array:");
    Scanner s = new Scanner (System.in);
    String line = s.nextLine ();
    String [] nums = line.split (",");
    int [] result = new int [Integer.parseInt (nums [0])];
    for (int i = 0;
    i < result.length; i ++) {
        result [i] = Integer.parseInt (nums [i + 1]);
    }
    for (int r : result) {
        System.out.println (r);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Insert the first series of numbers: ");
    String number1 = input.nextLine ();
    System.out.println ("Insert the second series of numbers: ");
    String number2 = input.nextLine ();
    String [] items = number1.split (" ");
    String [] items2 = number2.split (" ");
    List < String > itemList = new ArrayList < String > (Arrays.asList (items));
    itemList.remove (0);
    Collections.sort (itemList);
    System.out.println (itemList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36514023_36514193_1_28
36514023_36514218_7_14
Title: How can I count if a specific set of digits are present in an array 
----------------------------------------

private static long digitProcessSystem (long N) {
    long numberN = N;
    String number = Long.toString (N);
    if (number.length () < 10) {
        long divider = 1023456789L / numberN;
        numberN *= divider;
    }
    number = Long.toString (numberN);
    String [] arr = number.split ("");
    Set < String > input = new HashSet < > (Arrays.asList (arr));
    while (input.size () != 10) {
        numberN += N;
        number = Long.toString (numberN);
        arr = number.split ("");
        input.clear ();
        input.addAll (Arrays.asList (arr));
    }
    return numberN;
}
----------------------------------------

public static boolean digitProcessSystem (long input) {
    char [] arr = Long.toString (input).toCharArray ();
    Set < Character > set = new HashSet < > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (arr [i]);
    }
    return set.size () != 10;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36514023_36514193_1_28
36514023_36514457_1_25
Title: How can I count if a specific set of digits are present in an array 
----------------------------------------

private static long digitProcessSystem (long N) {
    long numberN = N;
    String number = Long.toString (N);
    if (number.length () < 10) {
        long divider = 1023456789L / numberN;
        numberN *= divider;
    }
    number = Long.toString (numberN);
    String [] arr = number.split ("");
    Set < String > input = new HashSet < > (Arrays.asList (arr));
    while (input.size () != 10) {
        numberN += N;
        number = Long.toString (numberN);
        arr = number.split ("");
        input.clear ();
        input.addAll (Arrays.asList (arr));
    }
    return numberN;
}
----------------------------------------

private static long digitProcessSystem (long N) {
    long numberN = N;
    String number = Long.toString (N);
    String [] arr = number.split ("");
    int arr2 = new int [10];
    int sum = 0;
    while (sum != 10) {
        sum = 0;
        numberN += N;
        number = Long.toString (numberN);
        if (number.length () < 10) continue;

        arr = number.split ("");
        for (int i = 0;
        i < arr.length; i ++) {
            arr2 [arr] = 1;
        }
        for (int i = 0;
        i < 10; i ++) {
            sum += arr2 [i];
        }
    }
    return numberN;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36514023_36514218_7_14
36514023_36514457_1_25
Title: How can I count if a specific set of digits are present in an array 
----------------------------------------

public static boolean digitProcessSystem (long input) {
    char [] arr = Long.toString (input).toCharArray ();
    Set < Character > set = new HashSet < > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (arr [i]);
    }
    return set.size () != 10;
}
----------------------------------------

private static long digitProcessSystem (long N) {
    long numberN = N;
    String number = Long.toString (N);
    String [] arr = number.split ("");
    int arr2 = new int [10];
    int sum = 0;
    while (sum != 10) {
        sum = 0;
        numberN += N;
        number = Long.toString (numberN);
        if (number.length () < 10) continue;

        arr = number.split ("");
        for (int i = 0;
        i < arr.length; i ++) {
            arr2 [arr] = 1;
        }
        for (int i = 0;
        i < 10; i ++) {
            sum += arr2 [i];
        }
    }
    return numberN;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36520964_36521269_12_21
36520964_36521269_1_10
Title: Spring GET same URL but different parameter types 
----------------------------------------

@RequestMapping (value = "/user", params = "emailID, method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE")
public ResponseEntity < User > getUserByEmail (@RequestParam ("emailID")
String email) {
    System.out.println ("Fetching User with email " + email);
    User user = userService.findByEmail (email);
    if (user == null) {
        System.out.println ("User with email " + email + " not found");
        return new ResponseEntity < User > (HttpStatus.NOT_FOUND);
    }
    return new ResponseEntity < User > (user, HttpStatus.OK);
}
----------------------------------------

@RequestMapping (value = "/user", params = "userID", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
public ResponseEntity < User > getUser (@RequestParam ("userID")
int id) {
    System.out.println ("Fetching User with id " + id);
    User user = userService.findById (id);
    if (user == null) {
        System.out.println ("User with id " + id + " not found");
        return new ResponseEntity < User > (HttpStatus.NOT_FOUND);
    }
    return new ResponseEntity < User > (user, HttpStatus.OK);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36522738_36522867_4_18
36522738_36522886_1_12
Title: "Java ""for"" statement iteration based on a string" 
----------------------------------------

public static void main (String [] args) {
    String name = "Mike";
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter your name: ");
    String user = scan.nextLine ();
    while (! user.equals (name)) {
        System.out.println ("Enter your name: ");
        user = scan.nextLine ();
    }
    System.out.println ("Good bye");
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Welcome to ....");
    System.out.println ("press \"q\" to exit or just type word until the end of the life");
    String userInput = scan.nextLine ();
    while (! "q".equalsIgnoreCase (userInput)) {
        System.out.println ("The user input was: " + userInput);
        System.out.println ("try again please (\"q\" to exit) ");
        userInput = scan.nextLine ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36527567_36527659_1_28
36527567_36527670_1_11
Title: Convert seconds to readable time string 
----------------------------------------

public static void main (String [] args) {
    long duration = 1209622L;
    long days = TimeUnit.SECONDS.toDays (duration);
    duration -= TimeUnit.DAYS.toSeconds (days);
    long hours = TimeUnit.SECONDS.toHours (duration);
    duration -= TimeUnit.HOURS.toSeconds (hours);
    long minutes = TimeUnit.SECONDS.toMinutes (duration);
    duration -= TimeUnit.MINUTES.toSeconds (minutes);
    long seconds = TimeUnit.SECONDS.toSeconds (duration);
    StringBuilder msg = new StringBuilder ();
    if (days != 0) {
        msg.append (days + " day(s)");
    }
    if (hours != 0) {
        msg.append (hours + " hours(s)");
    }
    if (minutes != 0) {
        msg.append (minutes + " minutes(s)");
    }
    if (seconds != 0) {
        msg.append (seconds + " seconds(s)");
    }
    System.out.println (msg.toString ());
}
----------------------------------------

public static void main (String [] args) throws Exception {
    long input = 1209660L;
    long days = input / 86400L;
    long hours = (input % 86400L) / 3600L;
    long minutes = (input % 86400L % 3600L) / 60L;
    long seconds = input % 86400L % 3600L % 60L;
    System.out.print ((days != 0) ? " Days: " + days : "");
    System.out.print ((hours != 0) ? " Hours: " + hours : "");
    System.out.print ((minutes != 0) ? " Minutes: " + minutes : "");
    System.out.print ((seconds != 0) ? " Seconds: " + seconds : "");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36539892_36540527_1_13
36539892_36540812_1_16
Title: Removing all the characters from a given string 
----------------------------------------

public static String removeAllChars (String source, String charsString) {
    HashSet < Character > chars = new HashSet < > ();
    for (int i = 0;
    i < charsString.length (); i ++) {
        chars.add (charsString.charAt (i));
    }
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < source.length (); i ++) {
    }
    return sb.toString ();
}
----------------------------------------

public static String removeAllChars (String src, String dst) {
    HashSet < Character > chars = new HashSet < > ();
    char [] dstCharArray = dst.toCharArray ();
    for (int i = 0;
    i < dstCharArray.length; i ++) {
        chars.add (dstCharArray [i]);
    }
    StringBuilder sb = new StringBuilder ();
    char [] srcCharArray = src.toCharArray ();
    for (int i = 0;
    i < srcCharArray.length; i ++) {
        if (! chars.contains (srcCharArray [i])) {
            sb.append (srcCharArray [i]);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36543417_36543706_10_18
36543417_36543732_9_17
Title: "Alternative to nested methods java" 
----------------------------------------

public int ins_arr (int [] arr, RBNode p, int index) {
    if (p == RBNode.nul) {
        return index;
    }
    int so_far = ins_arr (arr, p.getLeft (), index);
    arr [so_far] = p.getKey ();
    int so_far2 = ins_arr (arr, p.getRight (), so_far + 1);
    return so_far2;
}
----------------------------------------

public int ins_arr (RBNode p, int index) {
    if (p == RBNode.nul) {
        return index;
    }
    int so_far = ins_arr (p.getLeft (), index);
    arr [so_far] = p.getKey ();
    int so_far2 = ins_arr (p.getRight (), so_far + 1);
    return so_far2;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36543516_36544518_11_21
36543516_36544518_26_36
Title: Nested accept() to get files in subdirectory in one String array 
----------------------------------------

public boolean accept (File dir, String name) {
    if (name.matches (Constants.INTERNA_REGEX)) {
        return true;
    } else if (name.matches (Constants.SISS_REGEX)) {
        return true;
    } else if (new File (properties.getProperty (Constants.PATH_NAME) + name).isDirectory ()) {
        directories.add (properties.getProperty (Constants.PATH_NAME) + name);
        return false;
    }

    return false;
}
----------------------------------------

public boolean accept (File dir, String name) {
    if (name.matches (Constants.INTERNA_REGEX)) {
        return true;
    } else if (name.matches (Constants.SISS_REGEX)) {
        return true;
    } else if (new File (properties.getProperty (Constants.PATH_NAME) + name).isDirectory ()) {
        log.info ("Invalid file or directory name");
        return false;
    }

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36547381_1_28
36546595_36549222_4_52
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int n, int p, char [] [] grid) {
    Point bot;
    Point princess;
    getInitialPositions (bot, princess, grid);
    Point dif = getRelativePrincessPosition (bot, princess);
    while (! bot.equals (princess)) {
        switch (dif.y) {
            case UP :
                move (UP_MOVEMENT);
                break;
            case DOWN :
                move (DOWN_MOVEMENT);
                break;
        }
        switch (dif.x) {
            case LEFT :
                move (LEFT_MOVEMENT);
                break;
            case RIGHT :
                move (RIGHT_MOVEMENT);
                break;
        }
    }
}
----------------------------------------

static void displayPathtoPrincess (int n, int p, String [] [] grid) {
    int botRow = 0, botCol = 0;
    for (int r = 0;
    r < n; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c].equalsIgnoreCase ("m")) {
                botRow = r;
                botCol = c;
            }
        }
        if (grid [0] [0].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [0] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        } else if (grid [n - 1] [0].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [n - 1] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36547381_1_28
36546595_41566898_22_80
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int n, int p, char [] [] grid) {
    Point bot;
    Point princess;
    getInitialPositions (bot, princess, grid);
    Point dif = getRelativePrincessPosition (bot, princess);
    while (! bot.equals (princess)) {
        switch (dif.y) {
            case UP :
                move (UP_MOVEMENT);
                break;
            case DOWN :
                move (DOWN_MOVEMENT);
                break;
        }
        switch (dif.x) {
            case LEFT :
                move (LEFT_MOVEMENT);
                break;
            case RIGHT :
                move (RIGHT_MOVEMENT);
                break;
        }
    }
}
----------------------------------------

static void displayPathtoPrincess (int m, char [] [] grid) {
    int botRow = 0, botCol = 0, princessRow = 0, princessCol = 0;
    for (int r = 0;
    r < m; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c] == 'm' || grid [r] [c] == 'M') {
                botRow = r;
                botCol = c;
            } else if (grid [r] [c] == 'p' || grid [r] [c] == 'P') {
                princessRow = r;
                princessCol = c;
            }

        }
    }
    if (princessRow < botRow) {
        while (botRow != princessRow) {
            botRow --;
            System.out.println ("UP");
        }
    } else if (princessRow > botRow) {
        while (botRow != princessRow) {
            botRow ++;
            System.out.println ("DOWN");
        }
    }

    if (princessCol < botCol) {
        while (botCol != princessCol) {
            botCol --;
            System.out.println ("LEFT");
        }
    } else if (princessCol > botCol) {
        while (botCol != princessCol) {
            botCol ++;
            System.out.println ("RIGHT");
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36547381_1_28
36546595_42214063_13_38
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int n, int p, char [] [] grid) {
    Point bot;
    Point princess;
    getInitialPositions (bot, princess, grid);
    Point dif = getRelativePrincessPosition (bot, princess);
    while (! bot.equals (princess)) {
        switch (dif.y) {
            case UP :
                move (UP_MOVEMENT);
                break;
            case DOWN :
                move (DOWN_MOVEMENT);
                break;
        }
        switch (dif.x) {
            case LEFT :
                move (LEFT_MOVEMENT);
                break;
            case RIGHT :
                move (RIGHT_MOVEMENT);
                break;
        }
    }
}
----------------------------------------

static void displayPathtoPrincess (int n, String [] grid) {
    if (grid [0].substring (0, 1).equals ("p")) {
        printPath (n, "UP\nLEFT");
    } else if (grid [0].substring (n - 1, n).equals ("p")) {
        printPath (n, "UP\nRIGHT");
    } else if (grid [n - 1].substring (n - 1, n).equals ("p")) {
        printPath (n, "DOWN\nRIGHT");
    } else {
        printPath (n, "DOWN\nLEFT");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36549222_4_52
36546595_41566898_22_80
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int n, int p, String [] [] grid) {
    int botRow = 0, botCol = 0;
    for (int r = 0;
    r < n; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c].equalsIgnoreCase ("m")) {
                botRow = r;
                botCol = c;
            }
        }
        if (grid [0] [0].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [0] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        } else if (grid [n - 1] [0].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [n - 1] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        }

    }
}
----------------------------------------

static void displayPathtoPrincess (int m, char [] [] grid) {
    int botRow = 0, botCol = 0, princessRow = 0, princessCol = 0;
    for (int r = 0;
    r < m; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c] == 'm' || grid [r] [c] == 'M') {
                botRow = r;
                botCol = c;
            } else if (grid [r] [c] == 'p' || grid [r] [c] == 'P') {
                princessRow = r;
                princessCol = c;
            }

        }
    }
    if (princessRow < botRow) {
        while (botRow != princessRow) {
            botRow --;
            System.out.println ("UP");
        }
    } else if (princessRow > botRow) {
        while (botRow != princessRow) {
            botRow ++;
            System.out.println ("DOWN");
        }
    }

    if (princessCol < botCol) {
        while (botCol != princessCol) {
            botCol --;
            System.out.println ("LEFT");
        }
    } else if (princessCol > botCol) {
        while (botCol != princessCol) {
            botCol ++;
            System.out.println ("RIGHT");
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36549222_4_52
36546595_42214063_13_38
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int n, int p, String [] [] grid) {
    int botRow = 0, botCol = 0;
    for (int r = 0;
    r < n; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c].equalsIgnoreCase ("m")) {
                botRow = r;
                botCol = c;
            }
        }
        if (grid [0] [0].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [0] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow > 0) {
                botRow --;
                System.out.println ("UP\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        } else if (grid [n - 1] [0].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol > 0) {
                botCol --;
                System.out.println ("LEFT\n");
            }
        } else if (grid [n - 1] [p - 1].equalsIgnoreCase ("P")) {
            while (botRow < n - 2) {
                botRow ++;
                System.out.println ("DOWN\n");
            }
            while (botCol < p - 2) {
                botCol ++;
                System.out.println ("RIGHT\n");
            }
        }

    }
}
----------------------------------------

static void displayPathtoPrincess (int n, String [] grid) {
    if (grid [0].substring (0, 1).equals ("p")) {
        printPath (n, "UP\nLEFT");
    } else if (grid [0].substring (n - 1, n).equals ("p")) {
        printPath (n, "UP\nRIGHT");
    } else if (grid [n - 1].substring (n - 1, n).equals ("p")) {
        printPath (n, "DOWN\nRIGHT");
    } else {
        printPath (n, "DOWN\nLEFT");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36549222_53_70
36546595_41566898_7_20
Title: Java Bot saves Princess Challenge 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int m, n;
    m = in.nextInt ();
    int j;
    String grid [] [] = new String [m] [m];
    for (int i = 0;
    i < m; i ++) {
        for (j = 0; j < m; j ++) {
            grid [i] [j] = in.next ();
        }
    }
    displayPathtoPrincess (m, m, grid);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int m = Integer.parseInt (br.readLine ());
    char grid [] [] = new char [m] [m];
    for (int i = 0;
    i < m; i ++) {
        String line = br.readLine ();
        grid [i] = (line.trim ()).toCharArray ();
    }
    displayPathtoPrincess (m, grid);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_36549222_53_70
36546595_42214063_43_61
Title: Java Bot saves Princess Challenge 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int m, n;
    m = in.nextInt ();
    int j;
    String grid [] [] = new String [m] [m];
    for (int i = 0;
    i < m; i ++) {
        for (j = 0; j < m; j ++) {
            grid [i] [j] = in.next ();
        }
    }
    displayPathtoPrincess (m, m, grid);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int m;
    m = in.nextInt ();
    String grid [] = new String [m];
    for (int i = 0;
    i < m; i ++) {
        grid [i] = in.next ();
    }
    in.close ();
    displayPathtoPrincess (m, grid);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_41566898_22_80
36546595_42214063_13_38
Title: Java Bot saves Princess Challenge 
----------------------------------------

static void displayPathtoPrincess (int m, char [] [] grid) {
    int botRow = 0, botCol = 0, princessRow = 0, princessCol = 0;
    for (int r = 0;
    r < m; r ++) {
        for (int c = 0;
        c < grid.length; c ++) {
            if (grid [r] [c] == 'm' || grid [r] [c] == 'M') {
                botRow = r;
                botCol = c;
            } else if (grid [r] [c] == 'p' || grid [r] [c] == 'P') {
                princessRow = r;
                princessCol = c;
            }

        }
    }
    if (princessRow < botRow) {
        while (botRow != princessRow) {
            botRow --;
            System.out.println ("UP");
        }
    } else if (princessRow > botRow) {
        while (botRow != princessRow) {
            botRow ++;
            System.out.println ("DOWN");
        }
    }

    if (princessCol < botCol) {
        while (botCol != princessCol) {
            botCol --;
            System.out.println ("LEFT");
        }
    } else if (princessCol > botCol) {
        while (botCol != princessCol) {
            botCol ++;
            System.out.println ("RIGHT");
        }
    }

}
----------------------------------------

static void displayPathtoPrincess (int n, String [] grid) {
    if (grid [0].substring (0, 1).equals ("p")) {
        printPath (n, "UP\nLEFT");
    } else if (grid [0].substring (n - 1, n).equals ("p")) {
        printPath (n, "UP\nRIGHT");
    } else if (grid [n - 1].substring (n - 1, n).equals ("p")) {
        printPath (n, "DOWN\nRIGHT");
    } else {
        printPath (n, "DOWN\nLEFT");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36546595_41566898_7_20
36546595_42214063_43_61
Title: Java Bot saves Princess Challenge 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int m = Integer.parseInt (br.readLine ());
    char grid [] [] = new char [m] [m];
    for (int i = 0;
    i < m; i ++) {
        String line = br.readLine ();
        grid [i] = (line.trim ()).toCharArray ();
    }
    displayPathtoPrincess (m, grid);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int m;
    m = in.nextInt ();
    String grid [] = new String [m];
    for (int i = 0;
    i < m; i ++) {
        grid [i] = in.next ();
    }
    in.close ();
    displayPathtoPrincess (m, grid);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36548562_36550761_69_78
36548562_36550761_86_98
Title: Pie Chart not showing expected output 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (timer != null && timer.isRunning ()) {
        return;
    }
    redPercent = 0;
    bluePercent = 0;
    repaint ();
    timer = new Timer (TIMER_DELAY, new TimerListener ());
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (redPercent + bluePercent >= 100) {
        ((Timer) e.getSource ()).stop ();
    } else {
        redPercent += random.nextInt (BOUND);
        bluePercent += random.nextInt (BOUND / 2);
        if (redPercent + bluePercent > 100) {
            bluePercent = 100 - redPercent;
        }
        repaint ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36553374_36553535_1_33
36553374_36553585_16_46
Title: I need help looping this program if the user inputs something invalid 
----------------------------------------

public boolean catchError () {
    Scanner input = new Scanner (System.in);
    String choice = input.nextLine ();
    try {
        if (choice.equalsIgnoreCase ("LSD")) {
            System.out.println ("\nMain Chemical: Lysergic Acid Diethylamide");
            System.out.println ("Fatal: NO");
        } else if (choice.equalsIgnoreCase ("SHROOMS")) {
            System.out.println ("\nMain Chemical: Psilocybin");
            System.out.println ("Fatal: NO");
        } else if (choice.equalsIgnoreCase ("WEED")) {
            System.out.println ("\nMain Chemical: THC");
            System.out.println ("Fatal: HELL NO");
        } else {
            System.out.println ("\nInvalid Input!");
            return false;
        }

    } catch (Exception e) {
        System.out.println ("\nInvalid Input!");
        return false;
    }
    return true;
}
----------------------------------------

public void catchError (String choice) {
    try {
        if (choice.equalsIgnoreCase ("LSD")) {
            System.out.println ("\nMain Chemical: Lysergic Acid Diethylamide");
            System.out.println ("Fatal: NO");
        } else if (choice.equalsIgnoreCase ("SHROOMS")) {
            System.out.println ("\nMain Chemical: Psilocybin");
            System.out.println ("Fatal: NO");
        } else if (choice.equalsIgnoreCase ("WEED")) {
            System.out.println ("\nMain Chemical: THC");
            System.out.println ("Fatal: HELL NO");
        } else {
            System.out.println ("\nInvalid Input!");
            design ();
        }

    } catch (Exception e) {
        System.out.println ("\nInvalid Input!");
        design ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36558269_36558841_18_27
36558269_36560368_11_30
Title: Implementing Java's indexOf method (Substring search) 
----------------------------------------

public int indexOf (String string, String pattern) {
    int length = string.length () - pattern.length ();
    for (int index = 0;
    index <= length; index ++) {
        if (patternMatch (string, index, pattern)) {
            return index;
        }
    }
    return - 1;
}
----------------------------------------

static private int indexOf (String src, String pat) {
    int head_in_src = 0;
    while (- 1 != (head_in_src = indexOf (src, pat.charAt (0), head_in_src))) {
        if (head_in_src + pat.length () > src.length () - head_in_src) return - 1;

        boolean match = true;
        int offset = 0;
        for (; offset < pat.length (); offset ++) {
            if (src.charAt (offset + head_in_src) != pat.charAt (offset)) {
                match = false;
                break;
            }
        }
        if (true == match) return head_in_src;

        head_in_src += offset;
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36558269_36558841_5_16
36558269_36560368_32_47
Title: Implementing Java's indexOf method (Substring search) 
----------------------------------------

public static void main (String [] args) {
    MyString myString = new MyString ();
    String string = "abcdefghij";
    String pattern = "defg";
    System.out.println (myString.indexOf (string, pattern));
    pattern = "ghij";
    System.out.println (myString.indexOf (string, pattern));
    pattern = "asdf";
    System.out.println (myString.indexOf (string, pattern));
}
----------------------------------------

public static void main (String [] args) {
    String src = "ne-nevern-nevern";
    String pat = "ever";
    String pat1 = "ne";
    String pat2 = "vern";
    String pat3 = "everne";
    String pat4 = "-ne-";
    String pat5 = "ner";
    System.out.printf ("src=%1$s, pat=%2$s, index=%3$d%n", src, pat, indexOf (src, pat));
    System.out.printf ("src=%1$s, pat1=%2$s, index=%3$d%n", src, pat1, indexOf (src, pat1));
    System.out.printf ("src=%1$s, pat2=%2$s, index=%3$d%n", src, pat2, indexOf (src, pat2));
    System.out.printf ("src=%1$s, pat3=%2$s, index=%3$d%n", src, pat3, indexOf (src, pat3));
    System.out.printf ("src=%1$s, pat4=%2$s, index=%3$d%n", src, pat4, indexOf (src, pat4));
    System.out.printf ("src=%1$s, pat5=%2$s, index=%3$d%n", src, pat5, indexOf (src, pat5));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36561229_36561628_9_23
36561229_36569562_1_39
Title: How can I read and compare numbers from a text file? 
----------------------------------------

public static void main (String [] args) throws ScriptException {
    String line = "Jack 20 20 20";
    line = line.replaceAll ("[^0-9]", " ");
    line = line.replaceFirst ("^ *", "");
    line = line.replaceAll (" ", "+");
    ScriptEngineManager mgr = new ScriptEngineManager ();
    ScriptEngine engine = mgr.getEngineByName ("JavaScript");
    System.out.println (engine.eval (line));
}
----------------------------------------

public static void main (String [] args) {
    String name = null;
    int i = 0;
    int max = Integer.MIN_VALUE;
    int min = Integer.MAX_VALUE;
    try {
        Scanner keybord = new Scanner (System.in);
        System.out.println ("enter in file name");
        String filename = keybord.nextLine ();
        Scanner file = new Scanner (new File (filename));
        while (file.hasNext ()) {
            name = file.next ();
            System.out.println (name + " ");
            while (file.hasNextInt ()) {
                i = i + file.nextInt ();
            }
            if (i < min) {
                min = i;
            }
            System.out.println ("min " + min);
            if (i > max) {
                max = i;
            }
            System.out.println ("max " + max);
            i = 0;
        }
    } catch (IOException e) {
        System.out.println ("File does not exist");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36564264_36564426_1_13
36564264_36564615_1_17
Title: Arranging by Alphabetical Order 
----------------------------------------

public static void main (String [] args) {
    List < Term > myTermList = new ArrayList < > ();
    myTermList.add (new Term ('Z', 4));
    myTermList.add (new Term ('Q', 2));
    myTermList.add (new Term ('c', 3));
    System.out.println ("This is the list unsorted: " + myTermList);
    Collections.sort (myTermList);
    System.out.println ("This is the list SORTED: " + myTermList);
}
----------------------------------------

public static void main (String...args) {
    List < Term > obj_listTerm = new ArrayList < > ();
    obj_listTerm.add (new Term ('Z', 4));
    obj_listTerm.add (new Term ('Q', 2));
    obj_listTerm.add (new Term ('c', 3));
    System.out.println ("This is the list unsorted: " + myTermList);
    Collections.sort (myTermList);
    System.out.println ("This is the list SORTED: " + myTermList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3656762_3656855_1_13
3656762_45157316_15_31
Title: N-gram generation from a sentence 
----------------------------------------

public static String [] ngrams (String s, int len) {
    String [] parts = s.split (" ");
    String [] result = new String [parts.length - len + 1];
    for (int i = 0;
    i < parts.length - len + 1; i ++) {
        StringBuilder sb = new StringBuilder ();
        for (int k = 0;
        k < len; k ++) {
            if (k > 0) sb.append (' ');

            sb.append (parts [i + k]);
        }
        result [i] = sb.toString ();
    }
    return result;
}
----------------------------------------

public static List < String > ngrams (int stepSize, String [] words) {
    List < String > ngrams = new ArrayList < String > ();
    for (int i = 0;
    i < words.length - stepSize; i ++) {
        String initialWord = "";
        int internalCount = i;
        int internalStepSize = i + stepSize;
        while (internalCount <= internalStepSize && internalCount < words.length) {
            initialWord = initialWord + " " + words [internalCount];
            ++ internalCount;
        }
        ngrams.add (initialWord);
    }
    return ngrams;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36568950_36569277_5_13
36568950_36569409_7_17
Title: How to enforce that a collection of objects are instances of the same child class 
----------------------------------------

public void add (Parent newParent) {
    if (clazz == null) {
        clazz = newParent.getClass ();
    }
    if (! clazz.isInstance (newParent)) {
        throw new IllegalArgumentException ("wrong type");
    }
    list.add (newParent);
}
----------------------------------------

public boolean add (E e) {
    if (this.size () > 0) {
        Object firstElement = this.get (0);
        if (e.getClass ().equals (firstElement.getClass ())) {
            return super.add (e);
        } else {
            return false;
        }
    }
    return super.add (e);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36570316_36570481_24_43
36570316_36571165_85_120
Title: What to write in MyGCMListenerService? 
----------------------------------------

private void sendNotification (String message) {
    Intent intent = new Intent (this, HomeActivity.class);
    intent.addFlags (Intent.FLAG_ACTIVITY_CLEAR_TOP);
    PendingIntent pendingIntent = PendingIntent.getActivity (this, GCMUtils.NOTIFICATION_ID, intent, PendingIntent.FLAG_ONE_SHOT);
    Uri defaultSoundUri = RingtoneManager.getDefaultUri (RingtoneManager.TYPE_NOTIFICATION);
    NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder (this).setSmallIcon (getNotificationIcon ()).setContentTitle (getResources ().getString (R.string.app_name)).setContentText (message).setStyle (new NotificationCompat.BigTextStyle ().bigText (message)).setAutoCancel (true).setSound (defaultSoundUri).setContentIntent (pendingIntent);
    NotificationManager notificationManager = (NotificationManager) getSystemService (Context.NOTIFICATION_SERVICE);
    notificationManager.notify (GCMUtils.NOTIFICATION_ID, notificationBuilder.build ());
}
----------------------------------------

private void sendNotification (String message, int i) {
    Intent intent = new Intent (this, ActivityDrawer.class).putExtra (Constants.CLEAR_NOTIFICATION, true);
    intent.addFlags (Intent.FLAG_ACTIVITY_CLEAR_TOP);
    PendingIntent pendingIntent = PendingIntent.getActivity (this, 0, intent, PendingIntent.FLAG_ONE_SHOT);
    defaultSoundUri = RingtoneManager.getDefaultUri (RingtoneManager.TYPE_NOTIFICATION);
    notificationManager = (NotificationManager) getSystemService (Context.NOTIFICATION_SERVICE);
    Context context = this;
    SharedPreferencesHelper sharedPreferencesHelper = new SharedPreferencesHelper (context);
    notificationBuilder = new NotificationCompat.Builder (this).setSmallIcon (R.mipmap.ic_launcher).setContentTitle ("Book That!").setAutoCancel (true).setSound (defaultSoundUri).setContentText (message).setContentIntent (pendingIntent);
    int notificationNumber;
    if (i == 1) {
        notificationNumber = sharedPreferencesHelper.getBookingNotificationNumber ();
        sharedPreferencesHelper.setBookingNotificationNumber (++ notificationNumber);
    } else if (i == 4) {
        notificationNumber = sharedPreferencesHelper.getMeetingNotificationNumber ();
        sharedPreferencesHelper.setMeetingNotificationNumber (++ notificationNumber);
    } else {
        notificationNumber = sharedPreferencesHelper.getNotificationNumber ();
        sharedPreferencesHelper.setNotificationNumber (++ notificationNumber);
    }

    notificationBuilder.setNumber (notificationNumber - 1);
    notificationManager.notify (i, notificationBuilder.build ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36573565_36573880_15_21
36573565_36574287_18_43
Title: Java thread safe locking 
----------------------------------------

public void sendPacket (final ClientConnection clientConnection) {
    new Thread (new Runnable () {
        @Override
        public void run () {
            clientConnection.sendPacket (data);
        }}

    ).start ();
}
----------------------------------------

public void sendPacket (final ClientConnection clientConnection) {
    Thread thread = new Thread (new Runnable () {
        @Override
        public void run () {
            lock.lock ();
            try {
                synchronized (this) {
                    this.notify ();
                }
                thisTakesMuchTime (data);
                clientConnection.sendPacket (data);
            } finally {
                lock.unlock ();
            }
        }}

    ).start ();
    synchronized (thread) {
        try {
            thread.wait ();
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36579527_36579811_1_14
36579527_36579816_1_10
Title: Search and count for single random number in array of 20 integers 
----------------------------------------

public void searchArray (int [] randomNumbers, int numSearch) {
    int count = 0;
    for (int i : randomNumbers) {
        if (i == numSearch) {
            count ++;
        }
    }
    if (count == 0) {
        System.out.println ("Single #" + numSearch + " was not found!");
    } else {
        System.out.println ("Single # " + numSearch + " was found " + count + " times");
    }
}
----------------------------------------

public int searchArray (int [] randomNumbers, int numSearch) {
    int count = 0;
    for (int i : randomNumbers) {
        if (i == numSearch) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36593477_36594105_31_57
36593477_36595308_19_50
Title: How to make a program wait for a method in java 
----------------------------------------

protected Boolean doInBackground (Void...params) {
    try {
        deviceList = new ArrayList < String > ();
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
        return true;
    } catch (UnknownHostException e) {
        e.printStackTrace ();
        return false;
    } catch (IOException e) {
        e.printStackTrace ();
        return false;
    }
    return null;
}
----------------------------------------

protected Void doInBackground (Void...params) {
    try {
        deviceList = new ArrayList < String > ();
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            System.out.println ("checking " + i);
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
    } catch (UnknownHostException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    dataAvailable = true;
    synchronized (DeviceManager.this) {
        DeviceManager.this.notify ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36593477_36594105_31_57
36593477_36595597_18_39
Title: How to make a program wait for a method in java 
----------------------------------------

protected Boolean doInBackground (Void...params) {
    try {
        deviceList = new ArrayList < String > ();
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
        return true;
    } catch (UnknownHostException e) {
        e.printStackTrace ();
        return false;
    } catch (IOException e) {
        e.printStackTrace ();
        return false;
    }
    return null;
}
----------------------------------------

protected List < String > doInBackground (String...params) {
    List < String > deviceList = new ArrayList < > ();
    String networkIP = params [0];
    try {
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
    } catch (IOException e) {
        deviceList = null;
        e.printStackTrace ();
    }
    return deviceList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36593477_36595308_19_50
36593477_36595597_18_39
Title: How to make a program wait for a method in java 
----------------------------------------

protected Void doInBackground (Void...params) {
    try {
        deviceList = new ArrayList < String > ();
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            System.out.println ("checking " + i);
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
    } catch (UnknownHostException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    dataAvailable = true;
    synchronized (DeviceManager.this) {
        DeviceManager.this.notify ();
    }
    return null;
}
----------------------------------------

protected List < String > doInBackground (String...params) {
    List < String > deviceList = new ArrayList < > ();
    String networkIP = params [0];
    try {
        InetAddress address;
        Log.i ("NetworkIPgetDeviceList", networkIP);
        String deviceIP = networkIP;
        for (int i = 0;
        i < 255; i ++) {
            address = InetAddress.getByName (deviceIP += "" + i);
            if (address.isReachable (2000)) {
                Log.i ("Devicefound", deviceIP);
                deviceList.add (deviceIP);
            }
            deviceIP = networkIP;
        }
    } catch (IOException e) {
        deviceList = null;
        e.printStackTrace ();
    }
    return deviceList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36603522_36615467_54_76
36603522_36615467_86_106
Title: "Country state and city spinner not working correctly" 
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    if (position > 0) {
        final Country country = (Country) country_Spinner.getItemAtPosition (position);
        Log.d ("SpinnerCountry", "onItemSelected: country: " + country.getCountryID ());
        ArrayList < State > tempStates = new ArrayList < > ();
        tempStates.add (new State (0, new Country (0, "Choose a Country"), "Choose a State"));
        for (State singleState : states) {
            if (singleState.getCountry ().getCountryID () == country.getCountryID ()) {
                tempStates.add (singleState);
            }
        }
        stateArrayAdapter = new ArrayAdapter < State > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, tempStates);
        stateArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
        state_Spinner.setAdapter (stateArrayAdapter);
    }
    cityArrayAdapter = new ArrayAdapter < City > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, new ArrayList < City > ());
    cityArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
    city_Spinner.setAdapter (cityArrayAdapter);
}
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    if (position > 0) {
        final State state = (State) state_Spinner.getItemAtPosition (position);
        Log.d ("SpinnerCountry", "onItemSelected: state: " + state.getStateID ());
        ArrayList < City > tempCities = new ArrayList < > ();
        Country country = new Country (0, "Choose a Country");
        State firstState = new State (0, country, "Choose a State");
        tempCities.add (new City (0, country, firstState, "Choose a City"));
        for (City singleCity : cities) {
            if (singleCity.getState ().getStateID () == state.getStateID ()) {
                tempCities.add (singleCity);
            }
        }
        cityArrayAdapter = new ArrayAdapter < City > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, tempCities);
        cityArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
        city_Spinner.setAdapter (cityArrayAdapter);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36603522_36615467_54_76
36603522_36616615_45_83
Title: "Country state and city spinner not working correctly" 
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    if (position > 0) {
        final Country country = (Country) country_Spinner.getItemAtPosition (position);
        Log.d ("SpinnerCountry", "onItemSelected: country: " + country.getCountryID ());
        ArrayList < State > tempStates = new ArrayList < > ();
        tempStates.add (new State (0, new Country (0, "Choose a Country"), "Choose a State"));
        for (State singleState : states) {
            if (singleState.getCountry ().getCountryID () == country.getCountryID ()) {
                tempStates.add (singleState);
            }
        }
        stateArrayAdapter = new ArrayAdapter < State > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, tempStates);
        stateArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
        state_Spinner.setAdapter (stateArrayAdapter);
    }
    cityArrayAdapter = new ArrayAdapter < City > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, new ArrayList < City > ());
    cityArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
    city_Spinner.setAdapter (cityArrayAdapter);
}
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View arg1, int pos, long arg3) {
    parent.getItemAtPosition (pos);
    if (pos == 0) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_india, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    } else if (pos == 1) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_pakisthan, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    } else if (pos == 2) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_srilanka, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36603522_36615467_86_106
36603522_36616615_45_83
Title: "Country state and city spinner not working correctly" 
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View view, int position, long id) {
    if (position > 0) {
        final State state = (State) state_Spinner.getItemAtPosition (position);
        Log.d ("SpinnerCountry", "onItemSelected: state: " + state.getStateID ());
        ArrayList < City > tempCities = new ArrayList < > ();
        Country country = new Country (0, "Choose a Country");
        State firstState = new State (0, country, "Choose a State");
        tempCities.add (new City (0, country, firstState, "Choose a City"));
        for (City singleCity : cities) {
            if (singleCity.getState ().getStateID () == state.getStateID ()) {
                tempCities.add (singleCity);
            }
        }
        cityArrayAdapter = new ArrayAdapter < City > (getApplicationContext (), R.layout.simple_spinner_dropdown_item, tempCities);
        cityArrayAdapter.setDropDownViewResource (R.layout.simple_spinner_dropdown_item);
        city_Spinner.setAdapter (cityArrayAdapter);
    }
}
----------------------------------------

public void onItemSelected (AdapterView < ? > parent, View arg1, int pos, long arg3) {
    parent.getItemAtPosition (pos);
    if (pos == 0) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_india, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    } else if (pos == 1) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_pakisthan, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    } else if (pos == 2) {
        ArrayAdapter < CharSequence > adapter = ArrayAdapter.createFromResource (this, R.array.city_srilanka, android.R.layout.simple_spinner_item);
        spinnerCity.setAdapter (adapter);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36605295_36605313_4_20
36605295_36605483_1_16
Title: User input populating an array 
----------------------------------------

public static void main (String [] args) {
    int [] a = new int [20];
    Scanner in = new Scanner (System.in);
    for (int i = 0;
    i < a.length; i ++) {
        System.out.print ("Enter element number  " + i + " : ");
        a [i] = in.nextInt ();
    }
    for (int element : a) {
        System.out.println (element);
    }
    System.out.println (Arrays.toString (a));
}
----------------------------------------

public static void main (String [] args) {
    int x = 0;
    int y = 0;
    int a [] = new int [20];
    Scanner in = new Scanner (System.in);
    while (y < a.length) {
        System.out.print ("Enter element number  " + (y + 1) + " : ");
        x = in.nextInt ();
        a [y] = x;
        y ++;
    }
    System.out.println (Arrays.toString (a));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3660532_3660678_57_70
3660532_3660678_73_86
Title: Cannot connect to Oracle DB from Java - ORA-12560: TNS:protocol adapter error 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3660532_3660678_57_70
3660532_3660678_88_101
Title: Cannot connect to Oracle DB from Java - ORA-12560: TNS:protocol adapter error 
----------------------------------------

public static void close (Connection connection) {
    try {
        if (connection != null) {
            connection.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3660532_3660678_73_86
3660532_3660678_88_101
Title: Cannot connect to Oracle DB from Java - ORA-12560: TNS:protocol adapter error 
----------------------------------------

public static void close (Statement st) {
    try {
        if (st != null) {
            st.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36613247_36613344_1_31
36613247_36613629_7_15
Title: display an entire arraylist in java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    List < Contact > phoneBook = new ArrayList < > ();
    while (true) {
        System.out.println ("Would you like to create a new contact? (Y/N)");
        String input = scan.nextLine ();
        if (input.equalsIgnoreCase ("Y")) {
            System.out.println ("Enter the contact's first name: ");
            String first = scan.nextLine ();
            System.out.println ("Enter the contact's last name: ");
            String last = scan.nextLine ();
            System.out.println ("Enter the contact's phone number: ");
            String phone = scan.nextLine ();
            Contact contact = new Contact (first, last, phone);
            phoneBook.add (contact);
            for (Contact c : phoneBook) {
                System.out.println (c);
            }
        } else {
            System.out.println ("Goodbye!");
            break;
        }
    }
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Inner > list = new ArrayList < > ();
    for (int i = 0;
    i < 10; i ++) {
        Inner in = new Inner ("name" + i, "address" + i);
        list.add (in);
    }
    System.out.println (list.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36613247_36613344_1_31
36613247_36613810_4_54
Title: display an entire arraylist in java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    List < Contact > phoneBook = new ArrayList < > ();
    while (true) {
        System.out.println ("Would you like to create a new contact? (Y/N)");
        String input = scan.nextLine ();
        if (input.equalsIgnoreCase ("Y")) {
            System.out.println ("Enter the contact's first name: ");
            String first = scan.nextLine ();
            System.out.println ("Enter the contact's last name: ");
            String last = scan.nextLine ();
            System.out.println ("Enter the contact's phone number: ");
            String phone = scan.nextLine ();
            Contact contact = new Contact (first, last, phone);
            phoneBook.add (contact);
            for (Contact c : phoneBook) {
                System.out.println (c);
            }
        } else {
            System.out.println ("Goodbye!");
            break;
        }
    }
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    String first;
    String last;
    String phone = "";
    String input;
    boolean add = true;
    boolean phoneValid;
    Scanner scan = new Scanner (System.in);
    ArrayList < Contact > PhoneBook = new ArrayList < > ();
    while (add) {
        phoneValid = false;
        System.out.println ("Type (N) to add a new contact, (D) to display your phonebook, or (Q) to quit!");
        input = scan.nextLine ();
        if (input.equalsIgnoreCase ("N")) {
            System.out.println ("Enter the contact's first name: ");
            first = scan.nextLine ();
            System.out.println ("Enter the contact's last name: ");
            last = scan.nextLine ();
            while (! phoneValid) {
                System.out.println ("Enter the contact's phone number: XXX-XXX-XXXX");
                phone = scan.nextLine ();
                if (phone.matches ("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}")) {
                    phoneValid = true;
                    break;
                } else {
                    System.out.println ("Sorry, I didn't catch that!");
                }
            }
            Contact contact = new Contact (first, last, phone);
            PhoneBook.add (contact);
        } else if (input.equalsIgnoreCase ("Q")) {
            add = false;
            System.out.println ("Goodbye!");
            break;
        } else if (input.equalsIgnoreCase ("D")) {
            for (Contact c : PhoneBook) {
                System.out.println (c);
            }
        } else {
            System.out.println ("Sorry, I didn't catch that!");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36613247_36613629_7_15
36613247_36613810_4_54
Title: display an entire arraylist in java 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Inner > list = new ArrayList < > ();
    for (int i = 0;
    i < 10; i ++) {
        Inner in = new Inner ("name" + i, "address" + i);
        list.add (in);
    }
    System.out.println (list.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String first;
    String last;
    String phone = "";
    String input;
    boolean add = true;
    boolean phoneValid;
    Scanner scan = new Scanner (System.in);
    ArrayList < Contact > PhoneBook = new ArrayList < > ();
    while (add) {
        phoneValid = false;
        System.out.println ("Type (N) to add a new contact, (D) to display your phonebook, or (Q) to quit!");
        input = scan.nextLine ();
        if (input.equalsIgnoreCase ("N")) {
            System.out.println ("Enter the contact's first name: ");
            first = scan.nextLine ();
            System.out.println ("Enter the contact's last name: ");
            last = scan.nextLine ();
            while (! phoneValid) {
                System.out.println ("Enter the contact's phone number: XXX-XXX-XXXX");
                phone = scan.nextLine ();
                if (phone.matches ("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}")) {
                    phoneValid = true;
                    break;
                } else {
                    System.out.println ("Sorry, I didn't catch that!");
                }
            }
            Contact contact = new Contact (first, last, phone);
            PhoneBook.add (contact);
        } else if (input.equalsIgnoreCase ("Q")) {
            add = false;
            System.out.println ("Goodbye!");
            break;
        } else if (input.equalsIgnoreCase ("D")) {
            for (Contact c : PhoneBook) {
                System.out.println (c);
            }
        } else {
            System.out.println ("Sorry, I didn't catch that!");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36618439_36618759_1_35
36618439_36618770_1_79
Title: Implementing do while and exit 
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    DecimalFormat formatter = new DecimalFormat ("#0.00");
    String CType, c1 = "US", c2 = "EUR", c3 = "RM", c4 = "SAR";
    double CValue, US, EUR, RM, SGD, SAR;
    char choice = 'Y';
    System.out.println ("Welcome to Bonus Calculator");
    do {
        System.out.println ("Enter any of the following Currencies:");
        System.out.print ("US\n" + "EUR\n" + "RM\n" + "SGD\n" + "SAR: ");
        CType = input.next ();
        if (CType.equalsIgnoreCase ("US")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            EUR = CValue * .88;
            RM = CValue * 3.92;
            SGD = CValue * 1.35;
            SAR = CValue * 3.75;
            System.out.print ("US = " + formatter.format (CValue) + "EUR =" + formatter.format (EUR) + "RM =" + formatter.format (RM) + "SGD =" + formatter.format (SGD) + "SAR =" + formatter.format (SAR));
        }
        System.out.println ("\nDo you which to Continue if Yes press 'Y' other wise press 'N'");
        choice = input.next ().toCharArray () [0];
    } while (choice != 'N');
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    DecimalFormat formatter = new DecimalFormat ("#0.00");
    String CType, c1 = "US", c2 = "EUR", c3 = "RM", c4 = "SAR";
    double CValue, US, EUR, RM, SGD, SAR;
    System.out.println ("Welcome to Bonus Calculator");
    while (true) {
        System.out.println ("Enter any of the following Currencies:");
        System.out.print ("US\n" + "EUR\n" + "RM\n" + "SGD\n" + "SAR: ");
        CType = input.next ();
        if (CType.equalsIgnoreCase ("EXIT")) break;

        if (CType.equalsIgnoreCase ("US")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            EUR = CValue * .88;
            RM = CValue * 3.92;
            SGD = CValue * 1.35;
            SAR = CValue * 3.75;
            System.out.print ("US = " + formatter.format (CValue) + "EUR =" + formatter.format (EUR) + "RM =" + formatter.format (RM) + "SGD =" + formatter.format (SGD) + "SAR =" + formatter.format (SAR));
        } else if (CType.equalsIgnoreCase ("EU")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            US = CValue * 1.14;
            RM = US * 3.92;
            SGD = US * 1.35;
            SAR = US * 3.75;
            System.out.print ("EUR = " + formatter.format (CValue) + " US = " + formatter.format (US) + " RM = " + formatter.format (RM) + " SGD = " + formatter.format (SGD) + " SAR = " + formatter.format (SAR));
        } else if (CType.equalsIgnoreCase ("RM")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            US = CValue * .26;
            EUR = US * .88;
            SGD = US * 1.35;
            SAR = US * 3.75;
            System.out.print ("RM = " + formatter.format (CValue) + " US = " + formatter.format (US) + " EUR = " + formatter.format (EUR) + " SGD = " + formatter.format (SGD) + " SAR = " + formatter.format (SAR));
        } else if (CType.equalsIgnoreCase ("SGD")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            US = CValue * 0.74;
            EUR = US * .88;
            RM = US * 3.92;
            SAR = US * 3.75;
            System.out.print ("SGD = " + formatter.format (CValue) + " US = " + formatter.format (US) + " EUR = " + formatter.format (EUR) + " SAR = " + formatter.format (SAR) + " RM = " + formatter.format (RM));
        } else if (CType.equalsIgnoreCase ("SAR")) {
            System.out.print ("Enter Value: ");
            CValue = input.nextInt ();
            US = CValue * 0.39;
            EUR = US * .88;
            RM = US * 3.92;
            SGD = US * 1.35;
            System.out.print ("SAR = " + formatter.format (CValue) + " US = " + formatter.format (US) + " EUR = " + formatter.format (EUR) + " SGD = " + formatter.format (SGD) + " RM = " + formatter.format (RM));
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36621737_36622232_1_26
36621737_36623115_1_11
Title: Print elements of a matrix in diagonal stripes 
----------------------------------------

public static int [] [] Zig_Zag (final int size) {
    int [] [] data = new int [size] [size];
    int i = 1;
    int j = 1;
    for (int element = 1;
    element <= size * size; element ++) {
        data [i - 1] [j - 1] = element;
        if ((i + j) % 2 == 0) {
            if (j < size) j ++;
            else i += 2;

            if (i > 1) i --;

        } else {
            if (i < size) i ++;
            else j += 2;

            if (j > 1) j --;

        }
    }
    return data;
}
----------------------------------------

public static int [] [] Zig_Zag (int size) {
    int [] [] a = new int [size] [size];
    int n = 1;
    for (int r = size, c = 0;
    r >= 0; -- r) for (int i = r, j = c;
    i < size; ++ i, ++ j) a [i] [j] = n ++;

    for (int r = 0, c = 1;
    c < size; ++ c) for (int i = r, j = c;
    j < size; ++ i, ++ j) a [i] [j] = n ++;

    return a;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36626128_36626358_7_17
36626128_36626500_2_17
Title: my thread in java is showing errors 
----------------------------------------

public void run () {
    try {
        sleep (3000);
        Intent splash_intent = new Intent (splash.this, MainLFC.class);
        startActivity (splash_intent);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } finally {
        finish ();
    }
}
----------------------------------------

public void run () {
    try {
        sleep (3000);
        runOnUiThread (new Runnable () {
            @Override
            public void run () {
                Intent splash_intent = new Intent (splash.this, MainLFC.class);
                startActivity (splash_intent);
            }}

        );
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } finally {
        finish ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36638420_36638458_48_65
36638420_36638542_8_19
Title: How do I add a background image on a JFrame using a JLabel? 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                ex.printStackTrace ();
            }
            JFrame frame = new Use_PF_Interface ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String path = "Image1.jpg";
    File file = new File (path);
    BufferedImage image = ImageIO.read (file);
    JLabel label = new JLabel (new ImageIcon (image));
    JFrame f = new JFrame ();
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.getContentPane ().add (label);
    f.pack ();
    f.setLocation (200, 200);
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
36655126_36655369_1_17
36655126_36655498_1_17
Title: Find Number Of Square Roots Between Two Numbers 
----------------------------------------

static int FindRoot (int no1, int no2) {
    int res = 0;
    int x = 0;
    while (x * x < no1) {
        x ++;
    }
    while (x * x <= no2) {
        res ++;
        x ++;
    }
    return res;
}
----------------------------------------

static int FindRoot (int no1, int no2) {
    int res = 0;
    int x = 1;
    while ((x * x) < no1) {
        x ++;
    }
    for (; (x * x) <= no2; x ++, res ++) {
    }
    return res;
}
----------------------------------------
