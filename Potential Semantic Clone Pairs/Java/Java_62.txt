$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_28292794_13_31
28292359_51390798_37_63
Title: Creating a Time class in Java 
----------------------------------------

public String toString () {
    String s = "";
    if (hour < 10 && minute < 10) s = "0" + hour + "0" + minute;
    else if (hour < 10 && minute > 10) s = "0" + hour + minute;
    else if (hour > 10 && minute < 10) s = hour + "0" + minute;
    else if (hour > 10 && minute > 10) s = hour + "" + minute;
    else if (hour == 0) s = "0" + hour + minute;
    else if (minute == 0) s = hour + "0" + minute;

    return s;
}
----------------------------------------

public String toString () {
    StringBuilder timeBuilder = new StringBuilder ();
    if (hour < 10 && minute < 10) {
        timeBuilder.append ("0").append (hour).append (":").append ("0").append (minute);
    } else if (hour < 10 && minute > 10) {
        timeBuilder.append ("0").append (hour).append (":").append (minute);
    } else if (hour > 10 && minute < 10) {
        timeBuilder.append (hour).append (":").append ("0").append (minute);
    } else if (hour > 10 && minute > 10) {
        timeBuilder.append (hour).append (":").append (minute);
    } else if (hour == 0) {
        if (minute < 10) timeBuilder.append ("0").append (hour).append (":0").append (minute);
        else timeBuilder.append (hour).append (":").append (minute);

    } else if (minute == 0) {
        if (minute < 10) timeBuilder.append ("0").append (hour).append (":0").append (minute);
        else timeBuilder.append (hour).append (":0").append (minute);

    }

    return timeBuilder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_28292794_33_57
28292359_41772522_49_87
Title: Creating a Time class in Java 
----------------------------------------

public String convert () {
    String c = "";
    if (hour > 12) {
        if (hour > 10) {
            if ((hour - 12) == 12) c = (hour - 12) + ":" + minute + "am";
            else c = (hour - 12) + ":" + minute + "pm";

        } else {
            c = "0" + (hour - 12) + ":" + minute + "pm";
        }
    } else c = hour + ":" + minute + "am";

    if (minute == 0) {
        c = c.substring (0, c.length () - 2) + "0" + c.substring (c.length () - 2, c.length ());
    }
    return c;
}
----------------------------------------

public String convert () {
    String c = "";
    if (hour > 11) {
        if (hour == 12) {
            c = hour + ":" + minute + " PM";
        }
        if (hour > 12) {
            c = (hour - 12) + ":" + minute + " PM";
        }
    } else if (hour == 0) {
        c = (hour + 12) + ":" + minute + " AM";
    } else c = hour + ":" + minute + " AM";

    if (minute < 10) {
        c = c.substring (0, c.length () - 4) + "0" + minute + " " + c.substring (c.length () - 2, c.length ());
    }
    return c;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_28292794_33_57
28292359_51390798_87_109
Title: Creating a Time class in Java 
----------------------------------------

public String convert () {
    String c = "";
    if (hour > 12) {
        if (hour > 10) {
            if ((hour - 12) == 12) c = (hour - 12) + ":" + minute + "am";
            else c = (hour - 12) + ":" + minute + "pm";

        } else {
            c = "0" + (hour - 12) + ":" + minute + "pm";
        }
    } else c = hour + ":" + minute + "am";

    if (minute == 0) {
        c = c.substring (0, c.length () - 2) + "0" + c.substring (c.length () - 2, c.length ());
    }
    return c;
}
----------------------------------------

public String convert () {
    StringBuilder timeBuilder = new StringBuilder ();
    if (hour > 11) {
        if (hour == 12) {
            timeBuilder.append (hour).append (":").append (minute).append (" PM");
        } else if (hour > 12) {
            timeBuilder.append (hour - 12).append (":").append (minute).append (" PM");
        }

    } else if (hour == 0) {
        timeBuilder.append (hour + 12).append (":").append (minute).append (" AM");
    } else {
        timeBuilder.append (hour).append (":").append (minute).append (" AM");
    }

    String timeString = timeBuilder.toString ();
    if (minute < 10) {
        timeString = timeString.substring (0, timeString.length () - 4) + "0" + minute + " " + timeString.substring (timeString.length () - 2, timeString.length ());
    }
    return timeString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_41772522_29_47
28292359_51390798_37_63
Title: Creating a Time class in Java 
----------------------------------------

public String toString () {
    String s = "";
    if (hour < 10 && minute < 10) s = "0" + hour + "0" + minute;
    else if (hour < 10 && minute > 10) s = "0" + hour + minute;
    else if (hour > 10 && minute < 10) s = hour + "0" + minute;
    else if (hour > 10 && minute > 10) s = hour + "" + minute;
    else if (hour == 0) s = "0" + hour + minute;
    else if (minute == 0) s = hour + "0" + minute;

    return s;
}
----------------------------------------

public String toString () {
    StringBuilder timeBuilder = new StringBuilder ();
    if (hour < 10 && minute < 10) {
        timeBuilder.append ("0").append (hour).append (":").append ("0").append (minute);
    } else if (hour < 10 && minute > 10) {
        timeBuilder.append ("0").append (hour).append (":").append (minute);
    } else if (hour > 10 && minute < 10) {
        timeBuilder.append (hour).append (":").append ("0").append (minute);
    } else if (hour > 10 && minute > 10) {
        timeBuilder.append (hour).append (":").append (minute);
    } else if (hour == 0) {
        if (minute < 10) timeBuilder.append ("0").append (hour).append (":0").append (minute);
        else timeBuilder.append (hour).append (":").append (minute);

    } else if (minute == 0) {
        if (minute < 10) timeBuilder.append ("0").append (hour).append (":0").append (minute);
        else timeBuilder.append (hour).append (":0").append (minute);

    }

    return timeBuilder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_41772522_49_87
28292359_51390798_87_109
Title: Creating a Time class in Java 
----------------------------------------

public String convert () {
    String c = "";
    if (hour > 11) {
        if (hour == 12) {
            c = hour + ":" + minute + " PM";
        }
        if (hour > 12) {
            c = (hour - 12) + ":" + minute + " PM";
        }
    } else if (hour == 0) {
        c = (hour + 12) + ":" + minute + " AM";
    } else c = hour + ":" + minute + " AM";

    if (minute < 10) {
        c = c.substring (0, c.length () - 4) + "0" + minute + " " + c.substring (c.length () - 2, c.length ());
    }
    return c;
}
----------------------------------------

public String convert () {
    StringBuilder timeBuilder = new StringBuilder ();
    if (hour > 11) {
        if (hour == 12) {
            timeBuilder.append (hour).append (":").append (minute).append (" PM");
        } else if (hour > 12) {
            timeBuilder.append (hour - 12).append (":").append (minute).append (" PM");
        }

    } else if (hour == 0) {
        timeBuilder.append (hour + 12).append (":").append (minute).append (" AM");
    } else {
        timeBuilder.append (hour).append (":").append (minute).append (" AM");
    }

    String timeString = timeBuilder.toString ();
    if (minute < 10) {
        timeString = timeString.substring (0, timeString.length () - 4) + "0" + minute + " " + timeString.substring (timeString.length () - 2, timeString.length ());
    }
    return timeString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28292359_41772522_88_106
28292359_51390798_112_129
Title: Creating a Time class in Java 
----------------------------------------

public void increment () {
    if (hour == 23 && minute == 59) {
        hour = 0;
        minute = 0;
    } else {
        minute ++;
        if (minute == 60) {
            hour ++;
            minute = 0;
        } else if (hour == 24) hour = 0;

    }
}
----------------------------------------

public void increment () {
    if (hour == 23 && minute == 59) {
        hour = 0;
        minute = 0;
    } else {
        minute ++;
        if (minute == 60) {
            hour ++;
            minute = 0;
            if (hour == 24) {
                hour = 0;
            }
        } else if (hour == 24) {
            hour = 0;
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28297241_28298234_29_54
28297241_28315001_1_54
Title: Trying to get a For Loop to work 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner input = new Scanner (System.in);
    System.out.println ("Number of times to loop:");
    int n = input.nextInt ();
    for (int i = 1;
    i <= 3; i ++) {
        System.out.println ("Size of array #" + i + ": ");
        int alen = input.nextInt ();
        int [] arr = new int [alen];
        System.out.println ("Value in array #" + i + ": ");
        for (int j = 0;
        j < alen; j ++) {
            System.out.println ("Enter value at index " + j + ": ");
            arr [j] = input.nextInt ();
        }
        arr = Ideone.countingSort (arr);
        for (int l = 0;
        l < alen; l ++) System.out.println (arr [l] + " Value of array #" + i + " saved at index " + l);

        System.out.println ("Middle value in array #" + i + " saved at index " + arr [alen / 2]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    try {
        System.out.println ("Number of times to loop:");
        int numEntries = input.nextInt ();
        int [] [] valueArrays = new int [numEntries] [];
        for (int i = 0;
        i < numEntries; i ++) {
            System.out.println ("Size of array #" + i + ": ");
            int arrayLen = input.nextInt ();
            int [] inputArray = new int [arrayLen];
            for (int j = 0;
            j < arrayLen; j ++) {
                System.out.println ("Enter value at index " + j + ": ");
                inputArray [j] = input.nextInt ();
            }
            Arrays.sort (inputArray);
            valueArrays [i] = inputArray;
        }
        for (int l = 0;
        l < valueArrays.length; l ++) {
            int [] values = valueArrays [l];
            for (int m = 0;
            m < values.length; m ++) {
                System.out.println ("Value of array #" + l + " saved at index " + m + ": " + values [m]);
            }
            if ((values.length % 2) == 0) {
                int start = values.length / 2;
                int end = start + 1;
                System.out.println ("Middle values in array #" + l + " saved at indices " + start + " and " + end);
            } else {
                int start = values.length / 2;
                System.out.println ("Middle value in array #" + l + " saved at index " + start);
            }
        }
    } finally {
        input.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28302578_28302697_1_10
28302578_28302706_1_12
Title: Java While Loop 
----------------------------------------

public int readNumber () {
    int x = keyboard.nextInt ();
    keyboard.readNextLine ();
    while (x < 0) {
        System.out.println ("Please enter a positive number.");
        x = keyboard.nextInt ();
        keyboard.readNextLine ();
    }
    return x;
}
----------------------------------------

public int readNumber () {
    int x = - 1;
    while (x < 0) {
        System.out.println ("Please enter a positive number.");
        try {
            x = keyboard.nextInt ();
        } catch (java.util.InputMismatchException e) {
        }
    }
    return x;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28302578_28302697_1_10
28302578_28302714_1_12
Title: Java While Loop 
----------------------------------------

public int readNumber () {
    int x = keyboard.nextInt ();
    keyboard.readNextLine ();
    while (x < 0) {
        System.out.println ("Please enter a positive number.");
        x = keyboard.nextInt ();
        keyboard.readNextLine ();
    }
    return x;
}
----------------------------------------

public int readNumber () {
    int x = - 1;
    do {
        try {
            System.out.println ("Please enter a positive number.");
            x = keyboard.nextInt ();
        } catch (InputMismatchException e) {
        }
    } while (x < 0);
    return x;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28302578_28302706_1_12
28302578_28302714_1_12
Title: Java While Loop 
----------------------------------------

public int readNumber () {
    int x = - 1;
    while (x < 0) {
        System.out.println ("Please enter a positive number.");
        try {
            x = keyboard.nextInt ();
        } catch (java.util.InputMismatchException e) {
        }
    }
    return x;
}
----------------------------------------

public int readNumber () {
    int x = - 1;
    do {
        try {
            System.out.println ("Please enter a positive number.");
            x = keyboard.nextInt ();
        } catch (InputMismatchException e) {
        }
    } while (x < 0);
    return x;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28307723_28307802_1_12
28307723_28307831_4_12
Title: Find the shortest element in an array. Java. Weird error 
----------------------------------------

public String shortest () {
    String shortest = "";
    for (int i = 0;
    i < words.length; i ++) {
        if (shortest.isEmpty ()) shortest = words [i];
        else if (shortest.length () > words [i].length ()) shortest = words [i];

    }
    return shortest;
}
----------------------------------------

private static String shortest () {
    int shortestelement = 0;
    String shortest = "";
    for (int i = 0;
    i < words.length; i ++) {
        if (shortest.length () > words [i].length ()) {
            shortest = words [i];
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28314307_28314492_1_14
28314307_28314692_1_11
Title: How would I make this code more efficient? 
----------------------------------------

public double getRating (long userID, long movieID) {
    double answer = - 1;
    String [] temp = null;
    int length = ratingLineData.length;
    for (int i = 0;
    i < length; i ++) {
        temp = ratingLineData [i].split ("\t");
        if (Long.parseLong (temp [0]) == userID && Long.parseLong (temp [1]) == movieID) return Long.parseLong (temp [2]);

    }
    return answer;
}
----------------------------------------

public double getRating (long userID, long movieID) {
    double answer = - 1;
    for (int i = 0;
    i < ratingLineData.length; i ++) {
        String [] temp = ratingLineData [i].split ("\t");
        if (Long.parseLong (temp [0]) == userID && Long.parseLong (temp [1]) == movieID) return Double.parseDouble (temp [2]);

    }
    return answer;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28321760_28321949_1_22
28321760_37301148_1_16
Title: Java Simple Lottery Program 
----------------------------------------

public static void main (String [] args) {
    int [] lottery = new int [6];
    int randomNum;
    for (int i = 0;
    i < 6; i ++) {
        randomNum = (int) (Math.random () * 50);
        for (int x = 0;
        x < i; x ++) {
            if (lottery [x] == randomNum) {
                randomNum = (int) (Math.random () * 50);
                x = - 1;
            }
        }
        lottery [i] = randomNum;
    }
    for (int i = 0;
    i < lottery.length; i ++) System.out.print (lottery [i] + " ");

}
----------------------------------------

public static void main (String [] args) {
    SecureRandom random = new SecureRandom ();
    for (int i = 0;
    i < 12; i ++) {
        Integer [] tipp = new Integer [6];
        int n = 0;
        do {
            int r = random.nextInt (45) + 1;
            if (Arrays.asList (tipp).indexOf (r) < 0) {
                tipp [n] = r;
                n ++;
            }
        } while (n <= 5);
        Arrays.sort (tipp);
        System.out.println (Arrays.toString (tipp));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28325741_28325817_1_12
28325741_28325828_1_14
Title: Magic Squares Print Square 
----------------------------------------

public void printSquare () {
    DecimalFormat newSquare = new DecimalFormat ("00");
    for (int row = 0;
    row < square.length; row ++) {
        for (int col = 0;
        col < square [row].length; col ++) {
            System.out.print ((newSquare.format (square [row] [col])) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public void printSquare () {
    DecimalFormat newSquare = new DecimalFormat ("00");
    for (int row = 0;
    row < square.length; row ++) {
        for (int col = 0;
        col < square [row].length; col ++) {
            System.out.print ((newSquare.format (square [row] [col])) + " ");
        }
        System.out.println ("\n");
    }
    System.out.println ();
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28325778_28336042_1_20
28325778_28339970_1_10
Title: Why isn't my close browser code working in Java RFT 
----------------------------------------

void closeBrowsers () {
    TestObject browsers [] = find (atChild (".class", "Html.HtmlBrowser"));
    System.out.println ("Browsers found " + browsers.length);
    for (TestObject browser : browsers) {
        ((BrowserTestObject) browser).close ();
    }
    browsers = find (atChild (".class", "Html.HtmlBrowser"));
    System.out.println ("After closing  found " + browsers.length + " browsers still running");
    unregister (browsers);
}
----------------------------------------

boolean closeBrowsers () {
    try {
        Runtime.getRuntime ().exec ("taskkill /f /t /im iexplore.exe");
        return true;
    } catch (IOException e) {
        System.out.println ("cannot close browser");
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28331780_28332179_3_14
28331780_28332200_51_73
Title: How would I have my program calculate two equations from one input field? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input = ExTextField.getText ();
    try {
        double num_ent = Double.parseDouble (input);
        double answerOne = num_ent * num_ent;
        double answerTwo = num_ent * (num_ent + 1.0) / 2.0;
        JOptionPane.showMessageDialog (null, "Your Answers are " + answerOne + " and " + answerTwo);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog (null, "Invalid input " + input);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input;
    int num_ent = 0;
    input = ExTextField.getText ();
    System.out.println (input);
    double answerOne = Double.parseDouble (input);
    System.out.println (answerOne);
    answerOne = num_ent * num_ent;
    JOptionPane.showMessageDialog (null, "Your Answer Is" + answerOne);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28331780_28332179_3_14
28331780_28332219_1_18
Title: How would I have my program calculate two equations from one input field? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input = ExTextField.getText ();
    try {
        double num_ent = Double.parseDouble (input);
        double answerOne = num_ent * num_ent;
        double answerTwo = num_ent * (num_ent + 1.0) / 2.0;
        JOptionPane.showMessageDialog (null, "Your Answers are " + answerOne + " and " + answerTwo);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog (null, "Invalid input " + input);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input;
    int num_ent = 0;
    double answerOne;
    input = ExTextField.getText ();
    try {
        answerOne = Double.parseDouble (input);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog (null, "Bad or empty input field");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28331780_28332200_51_73
28331780_28332219_1_18
Title: How would I have my program calculate two equations from one input field? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input;
    int num_ent = 0;
    input = ExTextField.getText ();
    System.out.println (input);
    double answerOne = Double.parseDouble (input);
    System.out.println (answerOne);
    answerOne = num_ent * num_ent;
    JOptionPane.showMessageDialog (null, "Your Answer Is" + answerOne);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String input;
    int num_ent = 0;
    double answerOne;
    input = ExTextField.getText ();
    try {
        answerOne = Double.parseDouble (input);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog (null, "Bad or empty input field");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28334472_28334656_2_32
28334472_28334779_2_40
Title: How to refactor this java code 
----------------------------------------

public int solution (int [] A) {
    ArrayList < Integer > factor1 = new ArrayList < Integer > ();
    ArrayList < Integer > factor2 = new ArrayList < Integer > ();
    int factor = 1;
    int N = A.length;
    while (factor * factor <= N) {
        if (N % factor == 0) {
            factor1.add (factor);
            factor2.add (N / factor);
        }
        factor ++;
    }
    for (int i = 1;
    i < factor2.size (); i ++) {
        int blockSize = factor2.get (i);
        int elementSize = factor1.get (i);
        int peaks = getElementSize (A, blockSize, elementSize);
        if (peaks == blockSize) return blockSize;

    }
    for (int i = factor1.size () - 1;
    i >= 0; i --) {
        int blockSize = factor1.get (i);
        int elementSize = factor2.get (i);
        int peaks = getElementSize (A, blockSize, elementSize);
        if (peaks == blockSize) return blockSize;

    }
    return 0;
}
----------------------------------------

public int solution (int [] A) {
    ArrayList < Integer > factor1 = new ArrayList < Integer > ();
    ArrayList < Integer > factor2 = new ArrayList < Integer > ();
    int factor = 1;
    int N = A.length;
    while (factor * factor <= N) {
        if (N % factor == 0) {
            factor1.add (factor);
            factor2.add (N / factor);
        }
        factor ++;
    }
    for (int i = 0;
    i < 2; i ++) {
        for (int x = (i == 0 ? 1 : factor1.size () - 1);
        (i == 0 ? x < factor2.size () : x >= 0); (i == 0 ? x ++ : x --)) {
            int blockSize = (i == 0 ? factor2.get (x) : factor1.get (x));
            int elementSize = (i == 0 ? factor1.get (x) : factor2.get (x));
            int peaks = 0;
            for (int j = 0;
            j < blockSize; j ++) {
                boolean hasPeak = false;
                for (int k = elementSize * j;
                k < elementSize * (j + 1); k ++) {
                    if (k > 0 && k < N - 1) {
                        if (A [k] > A [k - 1] && A [k] > A [k + 1]) hasPeak = true;

                    }
                }
                if (! hasPeak) break;
                else peaks ++;

            }
            if (peaks == blockSize) return blockSize;

        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28334674_28334714_1_15
28334674_28334731_1_15
Title: How to resolve a variable? 
----------------------------------------

public static void computerMove (int stones1, int stones2, int stones3) {
    Random randA = new Random ();
    int pcPilePick = randA.nextInt (10);
    Object amtInPile;
    if (pcPilePick == 1) {
        amtInPile = stones1;
    }
    if (pcPilePick == 2) {
        amtInPile = stones2;
    }
    if (pcPilePick == 3) {
        amtInPile = stones3;
    }
}
----------------------------------------

public static void computerMove (int stone1, int stone2, int stone3) {
    Random randA = new Random ();
    int pcPilePick = randA.nextInt (10);
    Object amtInPile;
    if (pcPilePick == 1) {
        amtInPile = stones1;
    }
    if (pcPilePick == 2) {
        amtInPile = stones2;
    }
    if (pcPilePick == 3) {
        amtInPile = stones3;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28342538_28342986_72_92
28342538_28342986_78_89
Title: Java Swing Timer and Animation: how to put it together 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    roll.setEnabled (false);
    Timer timer = new Timer (250, new ActionListener () {
        private int counter;
        private int lastRoll;
        @Override
        public void actionPerformed (ActionEvent e) {
            if (counter < 20) {
                counter ++;
                lastRoll = (int) (Math.random () * 6);
                System.out.println (counter + "/" + lastRoll);
                die.setIcon (new ImageIcon (dice [lastRoll]));
            } else {
                lastDieRollWas (lastRoll);
                ((Timer) e.getSource ()).stop ();
                roll.setEnabled (true);
            }
        }}

    );
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (counter < 20) {
        counter ++;
        lastRoll = (int) (Math.random () * 6);
        System.out.println (counter + "/" + lastRoll);
        die.setIcon (new ImageIcon (dice [lastRoll]));
    } else {
        lastDieRollWas (lastRoll);
        ((Timer) e.getSource ()).stop ();
        roll.setEnabled (true);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2834355_7145745_25_35
2834355_7145745_7_18
Title: Java - when to use notify or notifyAll? 
----------------------------------------

public void run () {
    System.out.println ("two");
    synchronized (a) {
        try {
            a.wait ();
            System.out.println ("two wake up");
        } catch (Exception e) {
            System.out.println (e);
        }
    }
}
----------------------------------------

public void run () {
    System.out.println ("one");
    synchronized (a) {
        try {
            a.wait ();
            System.out.println ("one wake up");
            this.wait ();
        } catch (Exception e) {
            System.out.println (e);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28350793_28351905_133_156
28350793_28354679_36_57
Title: Multithreading queue java 
----------------------------------------

public void run () {
    try {
        synchronized (main) {
            for (int j = 0, counter = 0;
            j < Main.s [i].length (); j ++) {
                while (main.status != 4) {
                    main.wait ();
                }
                System.out.print (Main.s [i].charAt (j) + " ");
                main.status = 1;
                main.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    synchronized (main) {
        for (int j = 0;
        j < Main.s [i].length (); j ++) {
            while (main.lista.get (0) != i) {
                try {
                    main.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            if (j < Main.s [i].length () - 1) main.lista.add (i);

            main.lista.remove (0);
            System.out.print (Main.s [i].charAt (j) + " ");
            main.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28350793_28351905_31_53
28350793_28354679_36_57
Title: Multithreading queue java 
----------------------------------------

public void run () {
    try {
        synchronized (main) {
            for (int j = 0;
            j < Main.s [i].length (); j ++) {
                while (main.status != 1) {
                    main.wait ();
                }
                main.status = 2;
                System.out.print (Main.s [i].charAt (j) + " ");
                main.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    synchronized (main) {
        for (int j = 0;
        j < Main.s [i].length (); j ++) {
            while (main.lista.get (0) != i) {
                try {
                    main.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            if (j < Main.s [i].length () - 1) main.lista.add (i);

            main.lista.remove (0);
            System.out.print (Main.s [i].charAt (j) + " ");
            main.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28350793_28351905_5_19
28350793_28354679_7_22
Title: Multithreading queue java 
----------------------------------------

public static void main (String [] args) {
    Main m = new Main ();
    Watek1 w1 = new Watek1 (0, m);
    Watek2 w2 = new Watek2 (1, m);
    Watek3 w3 = new Watek3 (2, m);
    Watek4 w4 = new Watek4 (3, m);
    w1.start ();
    w2.start ();
    w3.start ();
    w4.start ();
}
----------------------------------------

public static void main (String [] args) {
    Main m = new Main ();
    ArrayList < Thread > watki = new ArrayList < Thread > ();
    lista.add (0);
    for (int i = 0;
    i < s.length; i ++) {
        watki.add (new Watek (i, m));
        lista.add (i);
    }
    for (int i = 0;
    i < watki.size (); i ++) {
        watki.get (i).start ();
    }
    lista.remove (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28350793_28351905_64_86
28350793_28354679_36_57
Title: Multithreading queue java 
----------------------------------------

public void run () {
    try {
        synchronized (main) {
            for (int j = 0;
            j < Main.s [i].length (); j ++) {
                while (main.status != 2) {
                    main.wait ();
                }
                System.out.print (Main.s [i].charAt (j) + " ");
                main.status = 3;
                main.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    synchronized (main) {
        for (int j = 0;
        j < Main.s [i].length (); j ++) {
            while (main.lista.get (0) != i) {
                try {
                    main.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            if (j < Main.s [i].length () - 1) main.lista.add (i);

            main.lista.remove (0);
            System.out.print (Main.s [i].charAt (j) + " ");
            main.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28350793_28351905_98_121
28350793_28354679_36_57
Title: Multithreading queue java 
----------------------------------------

public void run () {
    try {
        synchronized (main) {
            for (int j = 0, counter = 0;
            j < Main.s [i].length (); j ++) {
                while (main.status != 3) {
                    main.wait ();
                }
                System.out.print (Main.s [i].charAt (j) + " ");
                main.status = 4;
                main.notifyAll ();
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    synchronized (main) {
        for (int j = 0;
        j < Main.s [i].length (); j ++) {
            while (main.lista.get (0) != i) {
                try {
                    main.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            if (j < Main.s [i].length () - 1) main.lista.add (i);

            main.lista.remove (0);
            System.out.print (Main.s [i].charAt (j) + " ");
            main.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28351385_28351592_2_31
28351385_28351655_1_13
Title: How can I check that no letters are entered in the array? 
----------------------------------------

public static void main (String [] args) {
    float [] num = new float [2];
    float answer = 0;
    if (args.length > 2 || args.length < 2) {
        System.out.println ("ERROR: enter only two numbers not more not less");
    } else {
        try {
            for (int i = 0;
            i < args.length; i ++) {
                num [i] = Float.parseFloat (args [i]);
                answer += Float.parseFloat (args [i]);
            }
            System.out.println (num [0] + " + " + num [1] + " = " + answer);
        } catch (NumberFormatException ex) {
            System.out.println ("ERROR: enter only numeric values");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    if (args.length != 2) {
        System.out.println ("we need 2 numbers");
    } else if (args [0].matches ("\\d") && args [1].matches ("\\d")) {
        int result = Integer.valueOf (args [0]) + Integer.valueOf (args [1]);
        System.out.println ("Result is: " + result);
    } else {
        System.out.println ("You must type a digit");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28356506_28357193_21_47
28356506_37916222_7_46
Title: Correctly implementing PagerAdapter in Android 
----------------------------------------

public Object instantiateItem (final ViewGroup container, int position) {
    Button button = new Button (container.getContext ());
    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
    button.setLayoutParams (params);
    button.setText (String.valueOf (position));
    LinearLayout layout = new LinearLayout (container.getContext ());
    layout.setOrientation (LinearLayout.VERTICAL);
    ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
    layout.addView (button);
    final int page = position;
    button.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            Toast.makeText (container.getContext (), "You clicked: " + page + ". page.", Toast.LENGTH_SHORT).show ();
        }}

    );
    container.addView (layout);
    return layout;
}
----------------------------------------

public Object instantiateItem (ViewGroup collection, int position) {
    LayoutInflater inflater = LayoutInflater.from (mContext);
    ViewGroup layout = (ViewGroup) inflater.inflate (R.layout.account_dialog_signin_viewpagers, collection, false);
    TextView tvLabel = (TextView) layout.findViewById (R.id.textView);
    switch (position) {
        case 0 :
            tvLabel.setText ("Log In");
            tvLabel.setOnClickListener (new View.OnClickListener () {
                @Override
                public void onClick (View v) {
                }}

            );
            break;
        case 1 :
            tvLabel.setText ("Sign Up");
            tvLabel.setOnClickListener (new View.OnClickListener () {
                @Override
                public void onClick (View v) {
                }}

            );
            break;
        case 2 :
            tvLabel.setText ("Send Reset Link");
            tvLabel.setOnClickListener (new View.OnClickListener () {
                @Override
                public void onClick (View v) {
                }}

            );
            break;
    }
    collection.addView (layout);
    return layout;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28362211_28363258_8_61
28362211_28424658_1_170
Title: Dice Roller Simulator using arrays in java 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner cin = new Scanner (System.in);
    boolean run = true;
    int [] sum = new int [13];
    float [] percent = new float [13];
    int streak = 0, streakValue = 0, currentStreak = 0, streakStart = 0, trials = 0;
    int dice1 = 0, dice2 = 0;
    for (int i = 0;
    i < sum.length; ++ i) {
        sum [i] = 0;
        percent [i] = 0.0f;
    }
    do {
        trials = cin.nextInt ();
        int prevSum = 0;
        for (int t = 0;
        t < trials; ++ t) {
            dice1 = (int) ((Math.random () * 6) + 1);
            dice2 = (int) ((Math.random () * 6) + 1);
            sum [dice1 + dice2] ++;
            if ((dice1 + dice2) == prevSum) {
                ++ currentStreak;
                streakValue = prevSum;
                if (currentStreak > streak) {
                    streak = currentStreak;
                    streakStart = t - streak;
                }
            } else {
                currentStreak = 1;
            }
            prevSum = dice1 + dice2;
        }
        System.out.println ("Continue ? (y/n) : ");
        run = cin.nextLine ().equals ("y");
    } while (run);
    DecimalFormat df = new DecimalFormat ("###.##");
    for (int i = 2;
    i < 13; ++ i) {
        percent [i] = (float) sum [i] / (float) trials * 100.0f;
        System.out.println ("The sum " + i + " has occurred " + df.format (percent [i]) + "% of times");
    }
    System.out.println ("Longest streak of " + streakValue + " has occurred for " + streak + " times");
    System.out.println ("It started at : " + streakStart);
}
----------------------------------------

public static void main (String [] args) {
    int total;
    int newStreak = 1;
    int streak = 1;
    int totalIs2 = 0;
    int totalIs3 = 0;
    int totalIs4 = 0;
    int totalIs5 = 0;
    int totalIs6 = 0;
    int totalIs7 = 0;
    int totalIs8 = 0;
    int totalIs9 = 0;
    int totalIs10 = 0;
    int totalIs11 = 0;
    int totalIs12 = 0;
    double twoPercent;
    double threePercent;
    double fourPercent;
    double fivePercent;
    double sixPercent;
    double sevenPercent;
    double eightPercent;
    double ninePercent;
    double tenPercent;
    double elevenPercent;
    double twelvePercent;
    System.out.println ("Today we are going to generate 2 random dice and tally the results of their random combined rolls");
    System.out.println ("At the bottom of the results, the longest streak will also be listed");
    boolean validInput = true;
    Scanner userInput = new Scanner (System.in);
    while (validInput) {
        try {
            int numberOfRolls = Integer.parseInt (JOptionPane.showInputDialog ("Please Enter the number of trials you would like to be performed: "));
            userInput.close ();
            int die1 [] = new int [numberOfRolls];
            int die2 [] = new int [numberOfRolls];
            int [] array = new int [numberOfRolls];
            for (int i = 1;
            i < array.length; i ++) {
                die1 [i] = (int) ((Math.random () * 6) + 1);
                die2 [i] = (int) ((Math.random () * 6) + 1);
                total = die1 [i] + die2 [i];
                int lastTotal = die1 [i - 1] + die2 [i - 1];
                if (lastTotal == total) {
                    streak ++;
                    if (streak > newStreak) {
                        newStreak = streak;
                    }
                } else {
                    streak = 1;
                }
                if (total == 2) {
                    totalIs2 ++;
                }
                if (total == 3) {
                    totalIs3 ++;
                }
                if (total == 4) {
                    totalIs4 ++;
                }
                if (total == 5) {
                    totalIs5 ++;
                }
                if (total == 6) {
                    totalIs6 ++;
                }
                if (total == 7) {
                    totalIs7 ++;
                }
                if (total == 8) {
                    totalIs8 ++;
                }
                if (total == 9) {
                    totalIs9 ++;
                }
                if (total == 10) {
                    totalIs10 ++;
                }
                if (total == 11) {
                    totalIs11 ++;
                }
                if (total == 12) {
                    totalIs12 ++;
                }
            }
            twoPercent = (totalIs2 / (double) numberOfRolls) * 100;
            threePercent = (totalIs3 / (double) numberOfRolls) * 100;
            fourPercent = (totalIs4 / (double) numberOfRolls) * 100;
            fivePercent = (totalIs5 / (double) numberOfRolls) * 100;
            sixPercent = (totalIs6 / (double) numberOfRolls) * 100;
            sevenPercent = (totalIs7 / (double) numberOfRolls) * 100;
            eightPercent = (totalIs8 / (double) numberOfRolls) * 100;
            ninePercent = (totalIs9 / (double) numberOfRolls) * 100;
            tenPercent = (totalIs10 / (double) numberOfRolls) * 100;
            elevenPercent = (totalIs11 / (double) numberOfRolls) * 100;
            twelvePercent = (totalIs12 / (double) numberOfRolls) * 100;
            System.out.println ("\n" + "Total Results:");
            System.out.println ("\n" + "Total 2  happened " + totalIs2 + " times which is " + twoPercent + "%");
            System.out.println ("Total 3  happened " + totalIs3 + " times which is " + threePercent + "%");
            System.out.println ("Total 4  happened " + totalIs4 + " times which is " + fourPercent + "%");
            System.out.println ("Total 5  happened " + totalIs5 + " times which is " + fivePercent + "%");
            System.out.println ("Total 6  happened " + totalIs6 + " times which is " + sixPercent + "%");
            System.out.println ("Total 7  happened " + totalIs7 + " times which is " + sevenPercent + "%");
            System.out.println ("Total 8  happened " + totalIs8 + " times which is " + eightPercent + "%");
            System.out.println ("Total 9  happened " + totalIs9 + " times which is " + ninePercent + "%");
            System.out.println ("Total 10 happened " + totalIs10 + " times which is " + tenPercent + "%");
            System.out.println ("Total 11 happened " + totalIs11 + " times which is " + elevenPercent + "%");
            System.out.println ("Total 12 happened " + totalIs12 + " times which is " + twelvePercent + "%");
            System.out.println ("The longest run was a run of " + newStreak + " *number that was on a streak*" + " that began at roll" + "*where it started*");
            validInput = false;
        } catch (Exception e) {
            System.out.println ("\n" + "Your input was not a number. Please try again: ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28379397_28379833_26_45
28379397_37521540_3_11
Title: Simple Insertion Sort 
----------------------------------------

public static void main (String h []) {
    int [] a = {100, 12, 31, 5, 4, 3, 2, 1};
    int i, j, temp;
    for (i = 1; i < a.length; i ++) {
        j = i - 1;
        while (j >= 0 && a [j] < a [i]) {
            temp = a [i];
            a [i] = a [j];
            a [j] = temp;
            i = j;
            j --;
        }
    }
    for (int x = 0;
    x < a.length; x ++) {
        System.out.println (a [x]);
    }
}
----------------------------------------

public static void main (String args []) {
    int [] arry1 = {55, 12, 43, 27, 54, 34, 77, 3, 15, 19};
    int [] arry2 = insertionSort (arry1);
    System.out.println ("Insertion Sort Demo:");
    for (int i : arry2) {
        System.out.print (i);
        System.out.print (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28379397_28379833_3_22
28379397_37521540_3_11
Title: Simple Insertion Sort 
----------------------------------------

public static void main (String h []) {
    int [] a = {100, 12, 31, 5, 4, 3, 2, 1};
    int i, j, temp;
    for (i = 1; i < a.length; i ++) {
        j = i - 1;
        while (j >= 0 && a [j] > a [i]) {
            temp = a [i];
            a [i] = a [j];
            a [j] = temp;
            i = j;
            j --;
        }
    }
    for (int x = 0;
    x < a.length; x ++) {
        System.out.println (a [x]);
    }
}
----------------------------------------

public static void main (String args []) {
    int [] arry1 = {55, 12, 43, 27, 54, 34, 77, 3, 15, 19};
    int [] arry2 = insertionSort (arry1);
    System.out.println ("Insertion Sort Demo:");
    for (int i : arry2) {
        System.out.print (i);
        System.out.print (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28379397_37521540_13_26
28379397_52464400_1_17
Title: Simple Insertion Sort 
----------------------------------------

public static int [] insertionSort (int [] arr) {
    int temp;
    for (int i = 1;
    i < arr.length; i ++) {
        for (int j = i;
        j > 0; j --) {
            if (arr [j] < arr [j - 1]) {
                temp = arr [j];
                arr [j] = arr [j - 1];
                arr [j - 1] = temp;
            }
        }
    }
    return arr;
}
----------------------------------------

public int [] insertionSort (int [] list) {
    for (int i = 1;
    i < list.length; i ++) {
        int key = list [i];
        int j = i - 1;
        while (j >= 0 && key < list [j]) {
            int temp = list [j];
            list [j] = list [j + 1];
            list [j + 1] = temp;
            j --;
        }
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28385817_28385838_3_11
28385817_28385885_2_9
Title: My Java Code does't compile. Where could the error be? And what is the output? 
----------------------------------------

public static void main (String [] arg) {
    int [] a = {1, 2, 6, 5, 8, 3, 4, 7};
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > 5) {
            System.out.println (a [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {1, 2, 6, 5, 8, 3, 4, 7};
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] > 5) {
            System.out.println (a [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28398001_51966448_38_75
28398001_51966448_5_34
Title: Adding two numbers using Client Server Multi threading programming in Java Eclipse 
----------------------------------------

public static void main (String [] args) {
    try {
        ServerSocket serverSocket = new ServerSocket (5050);
        while (true) {
            Socket socket = serverSocket.accept ();
            try {
                DataInputStream input = new DataInputStream (socket.getInputStream ());
                Integer x = input.readInt ();
                Integer y = input.readInt ();
                Integer sum = (x + y);
                DataOutputStream out = new DataOutputStream (socket.getOutputStream ());
                out.writeInt (sum);
            } catch (SocketTimeoutException s) {
                System.out.println ("Socket timed out!");
                break;
            } catch (IOException e) {
                e.printStackTrace ();
                break;
            }
        }
    } catch (Exception ex) {
        System.err.println (ex.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int porta = 5050;
    String ip = "localhost";
    Scanner userInput = new Scanner (System.in);
    try {
        Socket socket = new Socket (ip, porta);
        DataOutputStream output = new DataOutputStream (socket.getOutputStream ());
        System.out.println ("Entre com o primeiro número: ");
        int x = userInput.nextInt ();
        System.out.println ("Entre com o segundo número: ");
        int y = userInput.nextInt ();
        output.writeInt (x);
        output.writeInt (y);
        DataInputStream input = new DataInputStream (socket.getInputStream ());
        int soma = input.readInt ();
        System.out.println ("A soma dos dois números é: " + soma);
    } catch (IOException ex) {
        System.err.println (ex.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28400408_28408148_1_43
28400408_47608553_1_33
Title: "What is the new way of getting all methods of a class including inherited default methods of Java 8?" 
----------------------------------------

public static Collection < Method > getAllMethods (Class clazz, boolean includeAllPackageAndPrivateMethodsOfSuperclasses, boolean includeOverridenAndHidden) {
    Predicate < Method > include = m -> ! m.isBridge () && ! m.isSynthetic () && Character.isJavaIdentifierStart (m.getName ().charAt (0)) && m.getName ().chars ().skip (1).allMatch (Character :: isJavaIdentifierPart);
    Set < Method > methods = new LinkedHashSet < > ();
    Collections.addAll (methods, clazz.getMethods ());
    methods.removeIf (include.negate ());
    Stream.of (clazz.getDeclaredMethods ()).filter (include).forEach (methods :: add);
    final int access = Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE;
    Package p = clazz.getPackage ();
    if (! includeAllPackageAndPrivateMethodsOfSuperclasses) {
        int pass = includeOverridenAndHidden ? Modifier.PUBLIC | Modifier.PROTECTED : Modifier.PROTECTED;
        include = include.and (m -> {
            int mod = m.getModifiers ();
            return (mod & pass) != 0 || (mod & access) == 0 && m.getDeclaringClass ().getPackage () == p;
        });
    }
    if (! includeOverridenAndHidden) {
        Map < Object, Set < Package > > types = new HashMap < > ();
        final Set < Package > pkgIndependent = Collections.emptySet ();
        for (Method m : methods) {
            int acc = m.getModifiers () & access;
            if (acc == Modifier.PRIVATE) continue;

            if (acc != 0) types.put (methodKey (m), pkgIndependent);
            else types.computeIfAbsent (methodKey (m), x -> new HashSet < > ()).add (p);

        }
        include = include.and (m -> {
            int acc = m.getModifiers () & access;
            return acc != 0 ? acc == Modifier.PRIVATE || types.putIfAbsent (methodKey (m), pkgIndependent) == null : noPkgOverride (m, types, pkgIndependent);
        });
    }
    for (clazz = clazz.getSuperclass (); clazz != null; clazz = clazz.getSuperclass ()) Stream.of (clazz.getDeclaredMethods ()).filter (include).forEach (methods :: add);

    return methods;
}
----------------------------------------

private static Collection < Method > getAllMethods (Class < ? > target) {
    Class < ? > clazz = target;
    Collection < MethodSignature > methodSignatures = new ArrayList < > ();
    for (Method method : clazz.getDeclaredMethods ()) {
        addIfAbsentAndNonSynthetic (methodSignatures, method);
    }
    for (Method method : clazz.getMethods ()) {
        addIfAbsentAndNonSynthetic (methodSignatures, method);
    }
    Package pkg = clazz.getPackage ();
    clazz = clazz.getSuperclass ();
    while (clazz != null) {
        for (Method method : clazz.getDeclaredMethods ()) {
            int modifier = method.getModifiers ();
            if (Modifier.isPrivate (modifier)) {
                continue;
            }
            if (Modifier.isPublic (modifier) || Modifier.isProtected (modifier)) {
                addIfAbsentAndNonSynthetic (methodSignatures, method);
            } else if ((pkg != null && pkg.equals (clazz.getPackage ())) || (pkg == null && clazz.getPackage () == null)) {
                addIfAbsentAndNonSynthetic (methodSignatures, method);
            }

        }
        clazz = clazz.getSuperclass ();
    }
    Collection < Method > allMethods = new ArrayList < > (methodSignatures.size ());
    for (MethodSignature methodSignature : methodSignatures) {
        allMethods.add (methodSignature.getMethod ());
    }
    return allMethods;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28401372_28401419_1_11
28401372_28401487_22_33
Title: Filter array elements by length 
----------------------------------------

static List < String > filterByLength (String [] names, int length) {
    List < String > filtered = new ArrayList < String > ();
    for (int k = 0;
    k < filtered.length; k ++) {
        if (names.length () == length) filtered.add (names [k]);

    }
    return filtered;
}
----------------------------------------

static String [] filterByLength (String [] names, int length) {
    String [] filtered = new String [countByLength (names, length)];
    int index = 0;
    for (int k = 0;
    k < filtered.length; k ++) {
        if (names [k].length () == length) filtered [index ++] = names [k];

    }
    return filtered;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28402860_28402896_1_13
28402860_28402928_1_12
Title: print arraylist without brackets 
----------------------------------------

public static StringBuilder getDivisors (int number) {
    StringBuilder numbersDivisor = new StringBuilder ();
    int i = 0;
    for (i = 1; i < number; i ++) {
        if (number % i == 0 && i != number && isPalindromic (i)) {
            numbersDivisor.append (i).append (',');
        }
    }
    if (0 < (i = numbersDivisor.length ())) {
        numbersDivisor.deleteCharAt (i - 1);
    }
    return numbersDivisor;
}
----------------------------------------

public static String getDivisors (int number) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 1;
    i < number; i ++) {
        if (number % i == 0 && i != number && isPalindromic (i)) {
            if (sb.length () > 0) {
                sb.append (", ");
            }
            sb.append (i);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28414524_28414593_1_12
28414524_28414678_1_11
Title: Using the CharAt and length methods 
----------------------------------------

public int count (String s, char ch) {
    int count = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == ch) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

private int count (String s, char ch) {
    int index = s.indexOf (ch);
    int count = 0;
    while (index != - 1) {
        count ++;
        s = s.substring (index + 1);
        index = s.indexOf (ch);
    }
    System.out.println ("No of " + ch + " in the input is : " + count);
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28428734_28429466_14_25
28428734_28429466_65_83
Title: Java synchronized: just keep critical sections small? 
----------------------------------------

public void run () throws Exception {
    System.out.println ("Processors: " + Runtime.getRuntime ().availableProcessors () + " Threads: " + NUM_OF_THREADS);
    System.out.println ("Outside  |  Inside  |  Locking  |  Work Done");
    doConcurrentJob (BIG_NUMBER, SMALL_NUMBER, false);
    doConcurrentJob (BIG_NUMBER, SMALL_NUMBER, true);
    doConcurrentJob (SMALL_NUMBER, BIG_NUMBER, false);
    doConcurrentJob (SMALL_NUMBER, BIG_NUMBER, true);
    doConcurrentJob (SMALL_NUMBER, SMALL_NUMBER, false);
    doConcurrentJob (SMALL_NUMBER, SMALL_NUMBER, true);
    System.out.println ("Done.");
}
----------------------------------------

public void run () {
    while (! stopFlag [0]) {
        doWork (outside);
        if (useSynchronization) {
            synchronized (GLOBAL_MUTEX) {
                doWork (inside);
            }
        } else {
            doWork (inside);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28429154_28429891_31_43
28429154_28957928_44_52
Title: "How to get value from HashMap depending on key name while we are passing custom class objects as key and value" 
----------------------------------------

public boolean equals (Object o) {
    if (this == o) return true;

    if (o == null || getClass () != o.getClass ()) return false;

    Employee1 employee1 = (Employee1) o;
    if (age != employee1.age) return false;

    if (id != employee1.id) return false;

    if (salary != employee1.salary) return false;

    if (! name.equals (employee1.name)) return false;

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    Employee employee = (Employee) obj;
    if (this.age != employee.age) return false;

    if (this.id != employee.id) return false;

    if (this.salary != employee.salary) return false;

    if (! this.name.equals (employee.name)) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28433572_28434682_3_38
28433572_30115449_2_20
Title: print 2d array diagonally from bottom to top 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    int [] [] elements = new int [] [] {{1, 5, 9, 13}, {2, 6, 10, 14}, {3, 7, 11, 15}, {4, 8, 12, 16}};
    int R = elements.length;
    int C = elements [0].length;
    for (int row = R - 1, col = C - 1;
    row >= 0 && col >= 0;) {
        if (col == C - 1 && row != 0) {
            System.out.println (elements [row] [col]);
            col = row - 1;
            row = R - 1;
            continue;
        }
        if (row == 0) {
            System.out.println (elements [row] [col]);
            row = col - 1;
            col = 0;
            continue;
        }
        System.out.print (elements [row] [col] + " ");
        row = (row - 1 + R) % R;
        col = (col + 1) % C;
    }
}
----------------------------------------

public static void main (String [] args) {
    int a [] [] = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}};
    int i = 0, j = 0;
    while (i < a [0].length) {
        printDiagonal (0, i ++, a, a [0].length, a.length);
        if (i != a [0].length - 1) System.out.println ();

    }
    i = 0;
    int len = a [0].length - 1;
    while (i < a.length) {
        printDiagonal (i ++, len, a, a.length, a [0].length);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28442385_28442741_1_15
28442385_28442769_1_19
Title: "Breadth First Search using HashMap<Vertex List<Vertex>>" 
----------------------------------------

public static void BFS (Vertex root, HashMap < Vertex, List < Vertex > > map) {
    Deque < Vertex > myQ = new LinkedList < Vertex > ();
    myQ.add (root);
    while (! myQ.empty ()) {
        Vertex current = myQ.getFirst ();
        current.visited = true;
        List < Vertex > neighbors = map.get (current);
        for (Vertex neighbor : neighbors) {
            if (! neighbor.visited) {
                myQ.addLast (neighbor);
            }
        }
    }
}
----------------------------------------

public void BFS (HashMap < Vertex, List < Vertex > > map) {
    if (map.isEmpty ()) return;

    Vertex start = null;
    for (Vertex temp : map.getKeys ()) {
        start = temp;
        break;
    }
    visit (start);
    BFS (start, map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28442385_28442741_1_15
28442385_28442769_21_44
Title: "Breadth First Search using HashMap<Vertex List<Vertex>>" 
----------------------------------------

public static void BFS (Vertex root, HashMap < Vertex, List < Vertex > > map) {
    Deque < Vertex > myQ = new LinkedList < Vertex > ();
    myQ.add (root);
    while (! myQ.empty ()) {
        Vertex current = myQ.getFirst ();
        current.visited = true;
        List < Vertex > neighbors = map.get (current);
        for (Vertex neighbor : neighbors) {
            if (! neighbor.visited) {
                myQ.addLast (neighbor);
            }
        }
    }
}
----------------------------------------

public void BFS (Vertex start, HashMap < Vertex, List < Vertex > > map) {
    int count = start.getCount ();
    assert count == 0;
    count ++;
    start.setCount (count);
    for (Vertex neighbor : map.get (start)) {
        if (neighbor.getCount () != 0) continue;

        visit (neighbor);
    }
    for (Vertex neighbor : map.get (start)) {
        if (neighbor.getCount () != 0) continue;

        BFS (neighbor, map);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28442385_28442769_1_19
28442385_28442769_21_44
Title: "Breadth First Search using HashMap<Vertex List<Vertex>>" 
----------------------------------------

public void BFS (HashMap < Vertex, List < Vertex > > map) {
    if (map.isEmpty ()) return;

    Vertex start = null;
    for (Vertex temp : map.getKeys ()) {
        start = temp;
        break;
    }
    visit (start);
    BFS (start, map);
}
----------------------------------------

public void BFS (Vertex start, HashMap < Vertex, List < Vertex > > map) {
    int count = start.getCount ();
    assert count == 0;
    count ++;
    start.setCount (count);
    for (Vertex neighbor : map.get (start)) {
        if (neighbor.getCount () != 0) continue;

        visit (neighbor);
    }
    for (Vertex neighbor : map.get (start)) {
        if (neighbor.getCount () != 0) continue;

        BFS (neighbor, map);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28446209_28499537_1_33
28446209_51873281_1_15
Title: How to align a button into the bottom right corner in JavaFX? 
----------------------------------------

@Override
public void start (Stage primaryStage) {
    VBox vbCenter = new VBox ();
    TextField console = new TextField ();
    vbCenter.getChildren ().add (console);
    HBox hbButtons = new HBox ();
    Button scrapeBtn = new Button ();
    scrapeBtn.setText ("Scrape!");
    scrapeBtn.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent event) {
            System.out.println ("Scrape button pressed.");
        }}

    );
    hbButtons.getChildren ().add (scrapeBtn);
    hbButtons.setAlignment (Pos.CENTER_RIGHT);
    BorderPane root = new BorderPane ();
    root.setPadding (new Insets (20));
    root.setCenter (vbCenter);
    root.setBottom (hbButtons);
    Scene scene = new Scene (root, 600, 400);
    primaryStage.setTitle ("Wiki Scraper");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

@Override
public void start (Stage primaryStage) throws Exception {
    BorderPane root = new BorderPane ();
    BorderPane bottom = new BorderPane ();
    bottom.setRight (new Button ("I am placed bottom right"));
    root.setBottom (bottom);
    Scene scene = new Scene (root);
    primaryStage.setScene (scene);
    primaryStage.setWidth (400);
    primaryStage.setHeight (400);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28461352_28461484_1_19
28461352_28462009_1_14
Title: "Adding to end of custom Linked List throws a NPE on ""newNode.data = ..""" 
----------------------------------------

public void addLast (int obj) {
    if (head == null) {
        head = new ListNode ();
        head.data = obj;
    } else {
        newNode = head;
        while (newNode.link != null) {
            newNode = newNode.link;
        }
        ListNode temp = new ListNode ();
        temp.data = obj;
        newNode.link = temp;
    }
}
----------------------------------------

public void addLast (int obj) {
    ListNode newNode = new ListNode ();
    newNode = head;
    while (newNode.link != null) {
        newNode = newNode.link;
    }
    ListNode last = new ListNode ();
    last.data = obj;
    newNode.link = last;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_28467155_1_10
28467144_44470156_2_16
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    int nCubed = (int) (Math.pow (n, 3));
    while (nCubed < 12000) {
        n ++;
        nCubed = (int) (Math.pow (n, 3));
    }
    System.out.println ("The highest integer below 12000 is " + (n - 1));
}
----------------------------------------

public static void main (String [] args) {
    int largestValue = 0;
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (n > largestValue) largestValue = n;

        n ++;
    }
    System.out.println (largestValue);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_28467155_1_10
28467144_44557721_3_13
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    int nCubed = (int) (Math.pow (n, 3));
    while (nCubed < 12000) {
        n ++;
        nCubed = (int) (Math.pow (n, 3));
    }
    System.out.println ("The highest integer below 12000 is " + (n - 1));
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (Math.pow (n + 1, 3) >= 12000) break;

        n ++;
    }
    System.out.println ("The largest integer n such that n^3 is less than 12,000 is " + n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_28467155_1_10
28467144_50975507_5_15
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    int nCubed = (int) (Math.pow (n, 3));
    while (nCubed < 12000) {
        n ++;
        nCubed = (int) (Math.pow (n, 3));
    }
    System.out.println ("The highest integer below 12000 is " + (n - 1));
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (true) {
        if (n * n * n < 12000) {
            n ++;
        } else break;

    }
    System.out.println ("The largest integer n less than 12000 is:: " + (n - 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_44470156_2_16
28467144_44557721_3_13
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int largestValue = 0;
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (n > largestValue) largestValue = n;

        n ++;
    }
    System.out.println (largestValue);
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (Math.pow (n + 1, 3) >= 12000) break;

        n ++;
    }
    System.out.println ("The largest integer n such that n^3 is less than 12,000 is " + n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_44470156_2_16
28467144_50975507_5_15
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int largestValue = 0;
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (n > largestValue) largestValue = n;

        n ++;
    }
    System.out.println (largestValue);
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (true) {
        if (n * n * n < 12000) {
            n ++;
        } else break;

    }
    System.out.println ("The largest integer n less than 12000 is:: " + (n - 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28467144_44557721_3_13
28467144_50975507_5_15
Title: "How to find the largest integer (n) such that n^3 < 12000 using a while loop" 
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (Math.pow (n, 3) < 12000) {
        if (Math.pow (n + 1, 3) >= 12000) break;

        n ++;
    }
    System.out.println ("The largest integer n such that n^3 is less than 12,000 is " + n);
}
----------------------------------------

public static void main (String [] args) {
    int n = 0;
    while (true) {
        if (n * n * n < 12000) {
            n ++;
        } else break;

    }
    System.out.println ("The largest integer n less than 12000 is:: " + (n - 1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28469002_28469190_8_28
28469002_40677518_1_16
Title: printing distinct numbers java 
----------------------------------------

public static void main (String [] args) {
    HashMap < Integer, String > distinctNumbers = new HashMap < Integer, String > ();
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter ten numbers");
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Number " + (i + 1) + ":  ");
        Integer numberEntered = input.nextInt ();
        distinctNumbers.put (numberEntered, null);
    }
    System.out.println ("The number of distinct number is: " + distinctNumbers.size ());
    System.out.println ("The distinct numbers are: ");
    Set < Integer > keys = distinctNumbers.keySet ();
    for (Iterator < Integer > iterator = keys.iterator ();
    iterator.hasNext ();) {
        Integer integer = (Integer) iterator.next ();
        System.out.print (" " + integer);
    }
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {1, 3, 5, 4, 7, 3, 4, 7};
    Map < Integer, Integer > frequency = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        if (frequency.containsKey (arr [i])) {
            int value = frequency.get (arr [i]);
            frequency.put (arr [i], value + 1);
        } else {
            frequency.put (arr [i], 1);
        }
    }
    for (Map.Entry < Integer, Integer > entry : frequency.entrySet ()) {
        System.out.println (entry.getKey ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28469217_28469278_1_18
28469217_28469304_1_18
Title: Can someone please fix this? (rookie mistake I'm sure) 
----------------------------------------

public int [] [] transform (int [] [] X) {
    int rows = X.length;
    int columns = X [0].length;
    int [] [] temp = new int [columns] [rows];
    for (int r = 0;
    r < temp.length; r ++) {
        for (int c = 0;
        c < temp [0].length; c ++) {
            temp [r] [c] = X [r] [c];
        }
    }
    return temp;
}
----------------------------------------

public int [] [] transform (int [] [] X) {
    int rows = X.length - 1;
    int columns = X [0].length - 1;
    int [] [] temp = new int [columns] [rows];
    for (int r = 0;
    r < temp.length; r ++) {
        for (int c = 0;
        c < temp [0].length; c ++) {
            temp [r] [c] = X [r] [c];
        }
    }
    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28470173_28470289_1_49
28470173_28470306_1_36
Title: Counting Occurrences With An Array - Java 
----------------------------------------

public static void main (String [] args) {
    Random random = new Random ();
    int count0 = 0, count1 = 0, count2 = 0, count3 = 0, count4 = 0;
    int count5 = 0, count6 = 0, count7 = 0, count8 = 0, count9 = 0;
    for (int i = 0;
    i < 100; i ++) {
        int randomNum = random.nextInt (10);
        int [] arrayNums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        for (double j = 0;
        j < arrayNums.length; j ++) {
            if (arrayNums [0] == randomNum) {
                count0 ++;
            } else if (arrayNums [1] == randomNum) {
                count1 ++;
            } else if (arrayNums [2] == randomNum) {
                count2 ++;
            } else if (arrayNums [3] == randomNum) {
                count3 ++;
            } else if (arrayNums [4] == randomNum) {
                count4 ++;
            } else if (arrayNums [5] == randomNum) {
                count5 ++;
            } else if (arrayNums [6] == randomNum) {
                count6 ++;
            } else if (arrayNums [7] == randomNum) {
                count7 ++;
            } else if (arrayNums [8] == randomNum) {
                count8 ++;
            } else {
                count9 ++;
            }

        }
    }
    System.out.print ("Occurrences of 0: " + count0);
    System.out.print ("\nOccurrences of 1: " + count1);
    System.out.print ("\nOccurrences of 2: " + count2);
    System.out.print ("\nOccurrences of 3: " + count3);
    System.out.print ("\nOccurrences of 4: " + count4);
    System.out.print ("\nOccurrences of 5: " + count5);
    System.out.print ("\nOccurrences of 6: " + count6);
    System.out.print ("\nOccurrences of 7: " + count7);
    System.out.print ("\nOccurrences of 8: " + count8);
    System.out.print ("\nOccurrences of 9: " + count9);
}
----------------------------------------

public static void main (String [] args) {
    double randomNum = 0;
    int count0 = 0, count1 = 0, count2 = 0, count3 = 0, count4 = 0;
    int count5 = 0, count6 = 0, count7 = 0, count8 = 0, count9 = 0;
    for (int i = 0;
    i < 100; i ++) {
        randomNum = Math.random () * 10;
        switch (randomNum) {
            case 0 :
                count0 ++;
                break;
            case 1 :
                count1 ++;
                break;
            case 2 :
                count2 ++;
                break;
            case 3 :
                count3 ++;
                break;
            case 4 :
                count4 ++;
                break;
            case 5 :
                count5 ++;
                break;
            case 6 :
                count6 ++;
                break;
            case 7 :
                count7 ++;
                break;
            case 8 :
                count8 ++;
                break;
            case 9 :
                count9 ++;
                break;
        }
    }
    System.out.print ("Occurrences of 0: " + count0);
    System.out.print ("\nOccurrences of 1: " + count1);
    System.out.print ("\nOccurrences of 2: " + count2);
    System.out.print ("\nOccurrences of 3: " + count3);
    System.out.print ("\nOccurrences of 4: " + count4);
    System.out.print ("\nOccurrences of 5: " + count5);
    System.out.print ("\nOccurrences of 6: " + count6);
    System.out.print ("\nOccurrences of 7: " + count7);
    System.out.print ("\nOccurrences of 8: " + count8);
    System.out.print ("\nOccurrences of 9: " + count9);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28470173_28470289_1_49
28470173_28470392_1_15
Title: Counting Occurrences With An Array - Java 
----------------------------------------

public static void main (String [] args) {
    Random random = new Random ();
    int count0 = 0, count1 = 0, count2 = 0, count3 = 0, count4 = 0;
    int count5 = 0, count6 = 0, count7 = 0, count8 = 0, count9 = 0;
    for (int i = 0;
    i < 100; i ++) {
        int randomNum = random.nextInt (10);
        int [] arrayNums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        for (double j = 0;
        j < arrayNums.length; j ++) {
            if (arrayNums [0] == randomNum) {
                count0 ++;
            } else if (arrayNums [1] == randomNum) {
                count1 ++;
            } else if (arrayNums [2] == randomNum) {
                count2 ++;
            } else if (arrayNums [3] == randomNum) {
                count3 ++;
            } else if (arrayNums [4] == randomNum) {
                count4 ++;
            } else if (arrayNums [5] == randomNum) {
                count5 ++;
            } else if (arrayNums [6] == randomNum) {
                count6 ++;
            } else if (arrayNums [7] == randomNum) {
                count7 ++;
            } else if (arrayNums [8] == randomNum) {
                count8 ++;
            } else {
                count9 ++;
            }

        }
    }
    System.out.print ("Occurrences of 0: " + count0);
    System.out.print ("\nOccurrences of 1: " + count1);
    System.out.print ("\nOccurrences of 2: " + count2);
    System.out.print ("\nOccurrences of 3: " + count3);
    System.out.print ("\nOccurrences of 4: " + count4);
    System.out.print ("\nOccurrences of 5: " + count5);
    System.out.print ("\nOccurrences of 6: " + count6);
    System.out.print ("\nOccurrences of 7: " + count7);
    System.out.print ("\nOccurrences of 8: " + count8);
    System.out.print ("\nOccurrences of 9: " + count9);
}
----------------------------------------

public static void main (String [] args) {
    int [] count = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    int [] arrayNums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    for (int i = 0;
    i < 100; i ++) {
        int randomNum = (int) (Math.random () * 10);
        for (int j = 0;
        j < 10; j ++) {
            if (arrayNums [j] == randomNum) {
                count [j] ++;
            }
        }
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Occurrences of " + i + ": " + count [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28470173_28470306_1_36
28470173_28470392_1_15
Title: Counting Occurrences With An Array - Java 
----------------------------------------

public static void main (String [] args) {
    double randomNum = 0;
    int count0 = 0, count1 = 0, count2 = 0, count3 = 0, count4 = 0;
    int count5 = 0, count6 = 0, count7 = 0, count8 = 0, count9 = 0;
    for (int i = 0;
    i < 100; i ++) {
        randomNum = Math.random () * 10;
        switch (randomNum) {
            case 0 :
                count0 ++;
                break;
            case 1 :
                count1 ++;
                break;
            case 2 :
                count2 ++;
                break;
            case 3 :
                count3 ++;
                break;
            case 4 :
                count4 ++;
                break;
            case 5 :
                count5 ++;
                break;
            case 6 :
                count6 ++;
                break;
            case 7 :
                count7 ++;
                break;
            case 8 :
                count8 ++;
                break;
            case 9 :
                count9 ++;
                break;
        }
    }
    System.out.print ("Occurrences of 0: " + count0);
    System.out.print ("\nOccurrences of 1: " + count1);
    System.out.print ("\nOccurrences of 2: " + count2);
    System.out.print ("\nOccurrences of 3: " + count3);
    System.out.print ("\nOccurrences of 4: " + count4);
    System.out.print ("\nOccurrences of 5: " + count5);
    System.out.print ("\nOccurrences of 6: " + count6);
    System.out.print ("\nOccurrences of 7: " + count7);
    System.out.print ("\nOccurrences of 8: " + count8);
    System.out.print ("\nOccurrences of 9: " + count9);
}
----------------------------------------

public static void main (String [] args) {
    int [] count = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    int [] arrayNums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    for (int i = 0;
    i < 100; i ++) {
        int randomNum = (int) (Math.random () * 10);
        for (int j = 0;
        j < 10; j ++) {
            if (arrayNums [j] == randomNum) {
                count [j] ++;
            }
        }
    }
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Occurrences of " + i + ": " + count [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28478839_28478914_15_24
28478839_28479351_1_13
Title: Minimum Of An Array 
----------------------------------------

public static double min (double [] tenDoubles) {
    double currentMin = Integer.MAX_VALUE;
    for (int j = 0;
    j < tenDoubles.length; j ++) {
        if (tenDoubles [j] < currentMin) {
            currentMin = tenDoubles [j];
        }
    }
    return currentMin;
}
----------------------------------------

public static double min (double [] array) {
    for (int j = 0;
    j < array.length; j ++) {
        double currentMin = array [j];
        double currentMinIndex = j;
        for (int k = j;
        k < array.length; k ++) {
            if (currentMin > array [k]) {
                currentMin = array [k];
                currentMinIndex = k;
            }
        }
    }
    return currentMinIndex;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28478839_28478914_15_24
28478839_28479362_1_17
Title: Minimum Of An Array 
----------------------------------------

public static double min (double [] tenDoubles) {
    double currentMin = Integer.MAX_VALUE;
    for (int j = 0;
    j < tenDoubles.length; j ++) {
        if (tenDoubles [j] < currentMin) {
            currentMin = tenDoubles [j];
        }
    }
    return currentMin;
}
----------------------------------------

public static double min () {
    double [] tenDoubles = new double [10];
    java.util.Scanner input = new java.util.Scanner (System.in);
    System.out.print ("Enter " + tenDoubles.length + " numbers: ");
    for (int i = 0;
    i < tenDoubles.length; i ++) {
        tenDoubles [i] = input.nextDouble ();
    }
    double currentMin = tenDoubles [0];
    for (int j = 1;
    j < tenDoubles.length; j ++) {
        if (currentMin > tenDoubles [j]) {
            currentMin = tenDoubles [j];
        }
    }
    return currentMin;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28478839_28479351_1_13
28478839_28479362_1_17
Title: Minimum Of An Array 
----------------------------------------

public static double min (double [] array) {
    for (int j = 0;
    j < array.length; j ++) {
        double currentMin = array [j];
        double currentMinIndex = j;
        for (int k = j;
        k < array.length; k ++) {
            if (currentMin > array [k]) {
                currentMin = array [k];
                currentMinIndex = k;
            }
        }
    }
    return currentMinIndex;
}
----------------------------------------

public static double min () {
    double [] tenDoubles = new double [10];
    java.util.Scanner input = new java.util.Scanner (System.in);
    System.out.print ("Enter " + tenDoubles.length + " numbers: ");
    for (int i = 0;
    i < tenDoubles.length; i ++) {
        tenDoubles [i] = input.nextDouble ();
    }
    double currentMin = tenDoubles [0];
    for (int j = 1;
    j < tenDoubles.length; j ++) {
        if (currentMin > tenDoubles [j]) {
            currentMin = tenDoubles [j];
        }
    }
    return currentMin;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28482950_28483341_3_20
28482950_28501522_3_12
Title: Issue with Palindrome class using Stacks 
----------------------------------------

public static boolean isPalindrome (String input) {
    Stack stack = new Stack ();
    for (int i = 0;
    i < input.length (); i ++) {
        stack.push (input.charAt (i));
    }
    String opposite = "";
    while (! stack.isEmpty ()) {
        opposite = opposite + stack.pop ();
    }
    return input.equals (opposite);
}
----------------------------------------

public static boolean isPalindrome (String input) {
    char [] inputArray = input.toCharArray ();
    bool isOk = true;
    for (int i = 0;
    i < inputArray.length / 2 && isOk; i ++) {
        isOk &= inputArray [i] == inputArray [inputArray.length - i - 1];
    }
    return isOk;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28488458_28488649_169_196
28488458_28488649_99_121
Title: CardLayout changing panel from another class 
----------------------------------------

public void init () {
    setLayout (new GridLayout (2, 2));
    JLabel maleLabel = new JLabel ("MALE", JLabel.CENTER);
    final JCheckBox maleBox = new JCheckBox ();
    JLabel femaleLabel = new JLabel ("FEMALE", JLabel.CENTER);
    final JCheckBox femaleBox = new JCheckBox ();
    state = new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (maleBox == (JCheckBox) ae.getSource ()) {
                femaleBox.setSelected (false);
                JOptionPane.showMessageDialog (null, "Congrats you are a Male", "Gender : ", JOptionPane.INFORMATION_MESSAGE);
            } else if (femaleBox == (JCheckBox) ae.getSource ()) {
                maleBox.setSelected (false);
                JOptionPane.showMessageDialog (null, "Congrats you are a Female", "Gender : ", JOptionPane.INFORMATION_MESSAGE);
            }

        }}

    ;
    maleBox.addActionListener (state);
    femaleBox.addActionListener (state);
    add (maleLabel);
    add (maleBox);
    add (femaleLabel);
    add (femaleBox);
}
----------------------------------------

private void init () {
    final JButton clickButton = new JButton ("CLICK ME");
    final JButton dontClickButton = new JButton ("DON\'T CLICK ME");
    action = new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (ae.getSource () == clickButton) {
                JOptionPane.showMessageDialog (null, "Hello there dude!", "Right Button", JOptionPane.INFORMATION_MESSAGE);
            } else if (ae.getSource () == dontClickButton) {
                JOptionPane.showMessageDialog (null, "I told you not to click me!", "Wrong Button", JOptionPane.PLAIN_MESSAGE);
            }

        }}

    ;
    clickButton.addActionListener (action);
    dontClickButton.addActionListener (action);
    add (clickButton);
    add (dontClickButton);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28492621_28492793_135_147
28492621_28492793_69_87
Title: Substitution of Thread.suspend() method 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    UI frame = new UI ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    while (keepRunning.get () && ! Thread.currentThread ().isInterrupted ()) {
        checkPausedState ();
        if (keepRunning.get () && ! Thread.currentThread ().isInterrupted ()) {
            try {
                System.out.println (count);
                print (count);
                Thread.sleep (seconds);
                count ++;
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28493013_28493152_1_26
28493013_28493156_4_38
Title: How to I equally space integers in a loop? 
----------------------------------------

public static void main (String [] s) {
    int n1, n2, n3;
    int i1, i2;
    char again;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the starting number:");
    n1 = input.nextInt ();
    System.out.println ("\nPlease enter the ending number:");
    n2 = input.nextInt ();
    System.out.print ("\n\t");
    for (i1 = 1; i1 <= 10; i1 ++) {
        System.out.print ("\t" + i1);
    }
    for (n1 = n1; n1 <= n2; n1 ++) {
        System.out.print ("\n\t" + n1);
        for (i2 = 1; i2 <= 10; i2 ++) {
            n3 = n1 * i2;
            System.out.print ("\t" + n3);
        }
    }
}
----------------------------------------

public static void main (String args []) {
    int n1, n2, n3;
    int i1, i2;
    char again;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the starting number:");
    n1 = input.nextInt ();
    System.out.println ("\nPlease enter the ending number:");
    n2 = input.nextInt ();
    System.out.print ("\n     ");
    for (i1 = 1; i1 <= 10; i1 ++) {
        if (i1 > 9) System.out.print ("   " + i1);
        else System.out.print ("    " + i1);

    }
    for (n1 = n1; n1 <= n2; n1 ++) {
        System.out.print ("\n    " + n1);
        for (i2 = 1; i2 <= 10; i2 ++) {
            n3 = n1 * i2;
            if (n3 > 9) System.out.print ("   " + n3);
            else System.out.print ("    " + n3);

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28493097_35639169_30_60
28493097_40563070_13_43
Title: Is there any Date and Time picker available for javaFx? 
----------------------------------------

public DateTimePicker () {
    getStyleClass ().add ("datetime-picker");
    setFormat (DefaultFormat);
    setConverter (new InternalConverter ());
    valueProperty ().addListener ((observable, oldValue, newValue) -> {
        if (newValue == null) {
            dateTimeValue.set (null);
        } else {
            if (dateTimeValue.get () == null) {
                dateTimeValue.set (LocalDateTime.of (newValue, LocalTime.now ()));
            } else {
                LocalTime time = dateTimeValue.get ().toLocalTime ();
                dateTimeValue.set (LocalDateTime.of (newValue, time));
            }
        }
    });
    dateTimeValue.addListener ((observable, oldValue, newValue) -> {
        setValue (newValue == null ? null : newValue.toLocalDate ());
    });
    getEditor ().focusedProperty ().addListener ((observable, oldValue, newValue) -> {
        if (! newValue) simulateEnterPressed ();

    });
}
----------------------------------------

public DateTimePicker () {
    getStyleClass ().add ("datetime-picker");
    setFormat (DefaultFormat);
    setConverter (new InternalConverter ());
    valueProperty ().addListener ((observable, oldValue, newValue) -> {
        if (newValue == null) {
            dateTimeValue.set (null);
        } else {
            if (dateTimeValue.get () == null) {
                dateTimeValue.set (LocalDateTime.of (newValue, LocalTime.now ()));
            } else {
                LocalTime time = dateTimeValue.get ().toLocalTime ();
                dateTimeValue.set (LocalDateTime.of (newValue, time));
            }
        }
    });
    dateTimeValue.addListener ((observable, oldValue, newValue) -> {
        setValue (newValue == null ? null : newValue.toLocalDate ());
    });
    getEditor ().focusedProperty ().addListener ((observable, oldValue, newValue) -> {
        if (! newValue) simulateEnterPressed ();

    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2850203_18816371_1_12
2850203_9161032_1_18
Title: Count the number of lines in a Java String 
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.isEmpty ()) {
        return 0;
    }
    int lines = 1;
    int pos = 0;
    while ((pos = str.indexOf ("\n", pos) + 1) != 0) {
        lines ++;
    }
    return lines;
}
----------------------------------------

public static int countLines (String str) {
    if (str == null || str.length () == 0) return 0;

    int lines = 1;
    int len = str.length ();
    for (int pos = 0;
    pos < len; pos ++) {
        char c = str.charAt (pos);
        if (c == '\r') {
            lines ++;
            if (pos + 1 < len && str.charAt (pos + 1) == '\n') pos ++;

        } else if (c == '\n') {
            lines ++;
        }

    }
    return lines;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28508361_28508583_16_72
28508361_28511772_1_44
Title: Pattern matching interview Q 
----------------------------------------

private static boolean isMatch (char [] pattern, String searchString, Map < Integer, Pair < Integer, Integer > > candidateSolution, Set < String > mappedStrings) {
    List < Integer > occurrencesOfCharacterInPattern = getNextUnmappedPatternOccurrences (candidateSolution, pattern);
    if (occurrencesOfCharacterInPattern.size () == 0) return isValidSolution (candidateSolution, searchString, pattern, mappedStrings);

    List < Pair < Integer, Integer > > sectionsOfUnmappedStrings = sectionsOfUnmappedStrings (searchString, candidateSolution);
    if (sectionsOfUnmappedStrings.size () == 0) return false;

    String firstUnmappedString = substring (searchString, sectionsOfUnmappedStrings.get (0));
    for (int substringSize = 1;
    substringSize <= firstUnmappedString.length (); substringSize ++) {
        String candidateSubstring = firstUnmappedString.substring (0, substringSize);
        if (mappedStrings.contains (candidateSubstring)) continue;

        List < Pair < Integer, Integer > > listOfAllOccurrencesOfSubstringInString = Lists.newArrayList ();
        for (int currentIndex = 0;
        currentIndex < sectionsOfUnmappedStrings.size (); currentIndex ++) {
            Pair < Integer, Integer > currentUnmappedSection = sectionsOfUnmappedStrings.get (currentIndex);
            List < Pair < Integer, Integer > > occurrencesOfSubstringInString = findAllInstancesOfSubstringInString (searchString, candidateSubstring, currentUnmappedSection);
            for (Pair < Integer, Integer > possibleAddition : occurrencesOfSubstringInString) {
                listOfAllOccurrencesOfSubstringInString.add (possibleAddition);
            }
        }
        if (listOfAllOccurrencesOfSubstringInString.size () < occurrencesOfCharacterInPattern.size ()) return false;

        Iterator < int [] > possibleSolutionIterator = new Combinations (listOfAllOccurrencesOfSubstringInString.size (), occurrencesOfCharacterInPattern.size ()).iterator ();
        iteratorLoop : while (possibleSolutionIterator.hasNext ()) {
            Set < String > newMappedSets = Sets.newHashSet (mappedStrings);
            newMappedSets.add (candidateSubstring);
            TreeMap < Integer, Pair < Integer, Integer > > newCandidateSolution = Maps.newTreeMap ();
            newCandidateSolution.putAll (candidateSolution);
            int [] possibleSolutionIndexSet = possibleSolutionIterator.next ();
            for (int i = 0;
            i < possibleSolutionIndexSet.length; i ++) {
                Pair < Integer, Integer > candidatePair = listOfAllOccurrencesOfSubstringInString.get (possibleSolutionIndexSet [i]);
                if (makesSenseToInsert (newCandidateSolution, occurrencesOfCharacterInPattern.get (i), candidatePair)) newCandidateSolution.put (occurrencesOfCharacterInPattern.get (i), candidatePair);
                else break iteratorLoop;

            }
            if (isMatch (pattern, searchString, newCandidateSolution, newMappedSets)) return true;

        }
    }
    return false;
}
----------------------------------------

public static final boolean isMatch (String patternStr, String input) {
    char [] patt = patternStr.toCharArray ();
    Arrays.sort (patt);
    boolean uniqueCase = true;
    for (int i = 1;
    i < patt.length; i ++) {
        if (patt [i] == patt [i - 1]) {
            uniqueCase = false;
            break;
        }
    }
    if (uniqueCase) {
        return true;
    }
    String t1 = patternStr;
    String t2 = input;
    if (patternStr.length () == 0 && input.length () == 0) {
        return true;
    } else if (patternStr.length () != 0 && input.length () == 0) {
        return false;
    } else if (patternStr.length () == 0 && input.length () != 0) {
        return false;
    }

    int count = 0;
    StringBuffer sb = new StringBuffer ();
    char [] chars = input.toCharArray ();
    String match = "";
    for (int i = 0;
    i < chars.length; i ++) {
        sb.append (chars [i]);
        count ++;
        if (! input.substring (count, input.length ()).contains (sb.toString ())) {
            match = sb.delete (sb.length () - 1, sb.length ()).toString ();
            break;
        }
    }
    if (match.length () == 0) {
        match = t2;
    }
    t1 = t1.replace (String.valueOf (t1.charAt (0)), "");
    t2 = t2.replace (match, "");
    return isMatch (t1, t2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28512381_28519681_104_115
28512381_28519681_118_145
Title: How can I turn a text area into an input stream in java? 
----------------------------------------

public int read () throws IOException {
    Integer i = null;
    try {
        i = queue.take ();
    } catch (InterruptedException ex) {
        Logger.getLogger (Console.class.getName ()).log (Level.SEVERE, null, ex);
    }
    if (i != null) return i;

    return - 1;
}
----------------------------------------

public int read (byte [] b, int off, int len) throws IOException {
    if (b == null) {
        throw new NullPointerException ();
    } else if (off < 0 || len < 0 || len > b.length - off) {
        throw new IndexOutOfBoundsException ();
    } else if (len == 0) {
        return 0;
    }

    int c = read ();
    if (c == - 1) {
        return - 1;
    }
    b [off] = (byte) c;
    int i = 1;
    try {
        for (; i < len && available () > 0; i ++) {
            c = read ();
            if (c == - 1) {
                break;
            }
            b [off + i] = (byte) c;
        }
    } catch (IOException ee) {
    }
    return i;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28515684_28515708_12_25
28515684_28515735_1_10
Title: error in simple factorial program 
----------------------------------------

public static void main (String [] args) {
    try {
        int n;
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        System.out.println ("Enter a number to find its factorial=");
        String s = br.readLine ();
        n = Integer.parseInt (s);
        n = Fact (n);
        System.out.print ("The Factorial is " + n);
    } catch (IOException e) {
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int n;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Enter a number to find its factorial=");
    String s = br.readLine ();
    n = Integer.parseInt (s);
    n = Fact (n);
    System.out.print ("The Factorial is " + n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28522473_28555365_116_172
28522473_28555365_28_97
Title: Looping through an array to calculate relative error 
----------------------------------------

public static void main (String [] args) {
    SimpleReader in = new SimpleReader1L ();
    SimpleWriter out = new SimpleWriter1L ();
    out.print ("Enter a positive real-valued universal physical or mathematical constant: ");
    double mu = in.nextDouble ();
    out.print ("Enter four postitive number not equal to 1: ");
    double w = in.nextDouble ();
    double x = in.nextDouble ();
    double y = in.nextDouble ();
    double z = in.nextDouble ();
    double [] charm = {- 5, - 4, - 3, - 2, - 1, - 1 / 2, - 1 / 3, - 1 / 4, 0, 1 / 4, 1 / 3, 1 / 2, 1, 2, 3, 4, 5};
    double bestEstimate = 0;
    double bestIndex1 = 0;
    double bestIndex2 = 0;
    double bestIndex3 = 0;
    double bestIndex4 = 0;
    for (int i = 0;
    i < charm.length; i ++) {
        double a = (Math.pow (w, charm [i]));
        for (int j = 0;
        j < charm.length; j ++) {
            double b = (Math.pow (x, charm [j]));
            for (int k = 0;
            k < charm.length; k ++) {
                double c = (Math.pow (y, charm [k]));
                for (int n = 0;
                n < charm.length; n ++) {
                    double d = (Math.pow (z, charm [n]));
                    double currentEstimate = a * b * c * d;
                    if (Math.abs (mu - currentEstimate) < Math.abs (mu - bestEstimate)) {
                        bestEstimate = currentEstimate;
                        bestIndex1 = charm [i];
                        bestIndex2 = charm [j];
                        bestIndex3 = charm [k];
                        bestIndex4 = charm [n];
                    }
                }
            }
        }
    }
    double error = relError (mu, bestEstimate);
    out.println ("Most appropriate exponents for w, x, y and z: " + bestIndex1 + " " + bestIndex2 + " " + bestIndex3 + " " + bestIndex4);
    out.println ("Best Estimate = " + bestEstimate);
    out.print ("Relative error = ");
    out.println (error);
    in.close ();
    out.close ();
}
----------------------------------------

public static void main (String [] args) {
    SimpleReader in = new SimpleReader1L ();
    SimpleWriter out = new SimpleWriter1L ();
    out.print ("Enter a positive real-valued universal physical or mathematical constant: ");
    double mu = in.nextDouble ();
    out.print ("Enter four postitive number not equal to 1: ");
    double w = in.nextDouble ();
    double x = in.nextDouble ();
    double y = in.nextDouble ();
    double z = in.nextDouble ();
    double [] charm = {- 5, - 4, - 3, - 2, - 1, - 1 / 2, - 1 / 3, - 1 / 4, 0, 1 / 4, 1 / 3, 1 / 2, 1, 2, 3, 4, 5};
    double bestEstimate = 0;
    double a, b, c, d;
    double bestIndex1 = 0;
    double bestIndex2 = 0;
    double bestIndex3 = 0;
    double bestIndex4 = 0;
    int i = 0;
    while (i < charm.length) {
        a = (Math.pow (w, charm [i]));
        i ++;
        int j = 0;
        while (j < charm.length) {
            b = (Math.pow (x, charm [j]));
            j ++;
            int k = 0;
            while (k < charm.length) {
                c = (Math.pow (y, charm [k]));
                k ++;
                int n = 0;
                while (n < charm.length) {
                    d = (Math.pow (z, charm [n]));
                    double currentEstimate = a * b * c * d;
                    if (Math.abs (mu - currentEstimate) < Math.abs (mu - bestEstimate)) {
                        bestEstimate = currentEstimate;
                        bestIndex1 = charm [i];
                        bestIndex2 = charm [j];
                        bestIndex3 = charm [k];
                        bestIndex4 = charm [n];
                    }
                    n ++;
                }
            }
        }
        double relError = Math.abs ((mu - bestEstimate) / mu);
        out.println ("Most appropriate exponents for w, x, y and z: " + bestIndex1 + " " + bestIndex2 + " " + bestIndex3 + " " + bestIndex4);
        out.println ("Best Estimate = " + bestEstimate);
        out.println ("Relative error = " + relError + "%");
        in.close ();
        out.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28523574_28523663_1_14
28523574_28523729_1_8
Title: Get the number of characters 
----------------------------------------

public static void main (String [] args) {
    String str = "SSDDVVDSSS";
    int counts [] = new int [(int) Character.MAX_VALUE];
    for (int i = 0;
    i < str.length (); i ++) {
        char c = str.charAt (i);
        counts [(int) c] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) System.out.print ((char) i + "-" + counts [i] + "\n");

    }
}
----------------------------------------

public static void main (String [] args) {
    int [] counts = countUniqueCharacters ("SSDDVVDSSS");
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] != 0) {
            System.out.println ("char " + ((char) ('A' + i)) + " repeated " + counts [i] + " times");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28523576_28523653_1_25
28523576_28523689_2_27
Title: CompareTo and If Statement 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String Name, Carswell, Jones, Smith, Young;
    System.out.println ("What's your last name? ");
    Name = keyboard.next ();
    if (Name.compareTo ("Carswell") < 0) {
        System.out.print ("You dont' have to wait long, " + Name);
    } else if (Name.compareTo ("Carswell") > 0 && Name.compareTo ("Jones") < 0) {
        System.out.print ("that's not bad, " + Name);
    }

}
----------------------------------------

public static void main (String [] args) {
    Scanner Keyboard = new Scanner (System.in);
    String Name, Carswell, Jones, Smith, Young;
    System.out.print ("What's your last name? ");
    Name = Keyboard.next ();
    if (Name.compareTo ("Carswell") < 0) {
        System.out.print ("You dont' have to wait long, " + Name);
    } else if (Name.compareTo ("Carswell") > 0 || Name.compareTo ("Jones") < 0) {
        System.out.print ("that's not bad, " + Name);
    } else if (Name.compareTo ("Jones") > 0 || Name.compareTo ("Smith") < 0) {
        System.out.print ("looks like a bit of a wait, " + Name);
    } else if (Name.compareTo ("Smith") > 0 || Name.compareTo ("Young") < 0) {
        System.out.print ("it's gonna be a while, " + Name);
    } else {
        System.out.print ("not going anywhere for a while, " + Name);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28523576_28523653_1_25
28523576_51828077_7_36
Title: CompareTo and If Statement 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String Name, Carswell, Jones, Smith, Young;
    System.out.println ("What's your last name? ");
    Name = keyboard.next ();
    if (Name.compareTo ("Carswell") < 0) {
        System.out.print ("You dont' have to wait long, " + Name);
    } else if (Name.compareTo ("Carswell") > 0 && Name.compareTo ("Jones") < 0) {
        System.out.print ("that's not bad, " + Name);
    }

}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String Name;
    System.out.print ("What is your last name? >>> ");
    Name = keyboard.next ();
    if (Name.compareTo ("Carswell ") < 0) {
        System.out.print ("You don't have to wait " + Name);
    } else if (Name.compareTo ("Carswell") > 0 && Name.compareTo ("Jones") < 0) {
        System.out.print ("That's not Bad " + Name);
    } else if (Name.compareTo ("Jones") > 0 && Name.compareTo ("Smith") < 0) {
        System.out.print ("Looks like a bit wait " + Name);
    } else if (Name.compareTo ("Smith") > 0 && Name.compareTo ("Young") < 0) {
    } else {
        System.out.print ("Your not going anywhere for a while " + Name);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28523576_28523689_2_27
28523576_51828077_7_36
Title: CompareTo and If Statement 
----------------------------------------

public static void main (String [] args) {
    Scanner Keyboard = new Scanner (System.in);
    String Name, Carswell, Jones, Smith, Young;
    System.out.print ("What's your last name? ");
    Name = Keyboard.next ();
    if (Name.compareTo ("Carswell") < 0) {
        System.out.print ("You dont' have to wait long, " + Name);
    } else if (Name.compareTo ("Carswell") > 0 || Name.compareTo ("Jones") < 0) {
        System.out.print ("that's not bad, " + Name);
    } else if (Name.compareTo ("Jones") > 0 || Name.compareTo ("Smith") < 0) {
        System.out.print ("looks like a bit of a wait, " + Name);
    } else if (Name.compareTo ("Smith") > 0 || Name.compareTo ("Young") < 0) {
        System.out.print ("it's gonna be a while, " + Name);
    } else {
        System.out.print ("not going anywhere for a while, " + Name);
    }

}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String Name;
    System.out.print ("What is your last name? >>> ");
    Name = keyboard.next ();
    if (Name.compareTo ("Carswell ") < 0) {
        System.out.print ("You don't have to wait " + Name);
    } else if (Name.compareTo ("Carswell") > 0 && Name.compareTo ("Jones") < 0) {
        System.out.print ("That's not Bad " + Name);
    } else if (Name.compareTo ("Jones") > 0 && Name.compareTo ("Smith") < 0) {
        System.out.print ("Looks like a bit wait " + Name);
    } else if (Name.compareTo ("Smith") > 0 && Name.compareTo ("Young") < 0) {
    } else {
        System.out.print ("Your not going anywhere for a while " + Name);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28524781_28524904_3_16
28524781_28525474_1_12
Title: Java printing patterns using for loops 
----------------------------------------

public static void main (String args []) {
    int startNumber = 9;
    for (int currentNum = startNumber;
    currentNum >= 0; currentNum --) {
        StringBuilder line = new StringBuilder ();
        for (int i = 0;
        i < currentNum; i ++) {
            line.append (currentNum);
        }
        for (int i = 0;
        i < startNumber - currentNum; i ++) {
            line.append (" ");
        }
        System.out.println (line.toString () + line.reverse ().toString ());
    }
}
----------------------------------------

public static void main (String args []) {
    int startNumber = 9;
    for (int i = startNumber;
    i > 0; i --) {
        String numberToPrint = Strings.repeat ("" + i, i);
        String leftHalf = String.format ("%-" + startNumber + "s", numberToPrint);
        String rightHalf = String.format ("%" + startNumber + "s", numberToPrint);
        System.out.printf ("%s%s%n", leftHalf, rightHalf);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28524781_28524904_3_16
28524781_35276677_5_34
Title: Java printing patterns using for loops 
----------------------------------------

public static void main (String args []) {
    int startNumber = 9;
    for (int currentNum = startNumber;
    currentNum >= 0; currentNum --) {
        StringBuilder line = new StringBuilder ();
        for (int i = 0;
        i < currentNum; i ++) {
            line.append (currentNum);
        }
        for (int i = 0;
        i < startNumber - currentNum; i ++) {
            line.append (" ");
        }
        System.out.println (line.toString () + line.reverse ().toString ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 9, y = 10;
    for (int i = x;
    i >= 1; i --) {
        if (i == 6) {
            x --;
            y ++;
            continue;
        }
        for (int j = 1;
        j <= 18; j ++) {
            if ((i != 9) && ((j >= x) && (j <= y))) {
                System.out.print (" ");
            } else {
                System.out.print (i);
            }
        }
        if (i != 9) {
            x --;
            y ++;
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28524781_28525474_1_12
28524781_35276677_5_34
Title: Java printing patterns using for loops 
----------------------------------------

public static void main (String args []) {
    int startNumber = 9;
    for (int i = startNumber;
    i > 0; i --) {
        String numberToPrint = Strings.repeat ("" + i, i);
        String leftHalf = String.format ("%-" + startNumber + "s", numberToPrint);
        String rightHalf = String.format ("%" + startNumber + "s", numberToPrint);
        System.out.printf ("%s%s%n", leftHalf, rightHalf);
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 9, y = 10;
    for (int i = x;
    i >= 1; i --) {
        if (i == 6) {
            x --;
            y ++;
            continue;
        }
        for (int j = 1;
        j <= 18; j ++) {
            if ((i != 9) && ((j >= x) && (j <= y))) {
                System.out.print (" ");
            } else {
                System.out.print (i);
            }
        }
        if (i != 9) {
            x --;
            y ++;
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28528796_28528905_1_18
28528796_28529029_1_20
Title: button event doesn't work properly 
----------------------------------------

public void run () {
    while (true) {
        if (this.canPrint) {
            try {
                this.printCounter ();
                Thread.sleep (pause);
                this.count ++;
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

@Override
public void run () {
    while (true) {
        if (this.canPrint) {
            this.printCounter ();
            this.count ++;
        }
        try {
            Thread.sleep (pause);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28529283_28573943_100_116
28529283_28573943_119_140
Title: Edge disjoint shortest pair algorithm in Java? 
----------------------------------------

public void dijkstra (String startName) {
    if (! graph.containsKey (startName)) {
        System.err.printf ("Graph doesn't contain start vertex \"%s\"\n", startName);
        return;
    }
    final Vertex source = graph.get (startName);
    NavigableSet < Vertex > q = new TreeSet < Vertex > ();
    for (Vertex v : graph.values ()) {
        v.previous = v == source ? source : null;
        v.dist = v == source ? 0 : Integer.MAX_VALUE;
        q.add (v);
    }
    dijkstra (q);
}
----------------------------------------

private void dijkstra (final NavigableSet < Vertex > q) {
    Vertex u, v;
    while (! q.isEmpty ()) {
        u = q.pollFirst ();
        if (u.dist == Integer.MAX_VALUE) break;

        for (Map.Entry < Vertex, Integer > a : u.neighbours.entrySet ()) {
            v = a.getKey ();
            final int alternateDist = u.dist + a.getValue () + u.potential - v.potential;
            if (alternateDist < v.dist) {
                q.remove (v);
                v.dist = alternateDist;
                v.previous = u;
                q.add (v);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28533437_28533999_5_39
28533437_28536995_5_39
Title: Changing single chars to upper or lower case depending on user input in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Please enter three letters: ");
    String letters = input.nextLine ();
    char letter1 = letters.charAt (0);
    char letter2 = letters.charAt (1);
    char letter3 = letters.charAt (2);
    if (Character.isUpperCase (letters.charAt (0)) == true) System.out.print ("Result: " + Character.toLowerCase (letter1));
    else {
        System.out.print ("Result: " + Character.toUpperCase (letter1));
    }
    if (Character.isUpperCase (letters.charAt (1)) == true) System.out.print (Character.toLowerCase (letter2));
    else {
        System.out.print (Character.toUpperCase (letter2));
    }
    if (Character.isUpperCase (letters.charAt (2)) == true) System.out.print (Character.toLowerCase (letter3));
    else {
        System.out.print (Character.toUpperCase (letter3));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Please enter three letters: ");
    String letters = input.nextLine ();
    char letter1 = letters.charAt (0);
    char letter2 = letters.charAt (1);
    char letter3 = letters.charAt (2);
    if (Character.isUpperCase (letters.charAt (0)) == true) System.out.println (Character.toLowerCase (letter1));
    else {
        System.out.println (Character.toUpperCase (letter1));
    }
    if (Character.isUpperCase (letters.charAt (1)) == true) System.out.println (Character.toLowerCase (letter2));
    else {
        System.out.println (Character.toUpperCase (letter2));
    }
    if (Character.isUpperCase (letters.charAt (2)) == true) System.out.println (Character.toLowerCase (letter3));
    else {
        System.out.println (Character.toUpperCase (letter3));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28534433_28534526_129_137
28534433_28536830_1_11
Title: trouble with creating JTable to display data 
----------------------------------------

private void printData () {
    for (int i = 0;
    i < name.size (); i ++) {
        data [i] [0] = name.get (i);
        data [i] [2] = department.get (i);
        data [i] [2] = salary.get (i);
    }
    TableModel model = new DefaultTableModel (data, columnNames);
    resultTable.setModel (model);
}
----------------------------------------

private void printData () {
    DefaultTableModel model = new DefaultTableModel (columnNames, name.size ());
    resultTable.setModel (model);
    for (int i = 0;
    i < name.size (); i ++) {
        resultTable.setValueAt (name.get (i), i, 0);
        resultTable.setValueAt (department.get (i), i, 1);
        resultTable.setValueAt (salary.get (i), i, 2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28535326_28535517_5_20
28535326_28537335_14_28
Title: Grouping the Split elements into own separate arrays 
----------------------------------------

public static void main (String [] args) {
    String [] records = input.split ("~");
    for (String record : records) {
        System.out.println (record);
        StringTokenizer tokenizer = new StringTokenizer (record, "*", false);
        while (tokenizer.hasMoreTokens ()) {
            System.out.println (tokenizer.nextToken ());
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Class.forName ("sun.jdbc.odbc.JdbcOdbcDriver");
    try (Connection con = DriverManager.getConnection ("jdbc:odbc:testing")) {
        try (PreparedStatement ps = con.prepareStatement ("insert into testing (d1, d2, d3, d4, d5, d6) values(?, ?, ?, ?, ?, ?)")) {
            try (BufferedReader in = new BufferedReader (new FileReader ("2.txt"))) {
                String read = null;
                while ((read = in.readLine ()) != null) {
                    read = in.readLine ();
                    addRows (ps, read);
                }
                ps.executeBatch ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28535661_28535691_1_62
28535661_28535702_1_36
Title: How to make int counter go down when answer is wrong 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("WELCOME TO GUESSING GAME BY JOSH!");
    System.out.println ("Rules: Player 1 picks number between 1 - 100 while Player 2 has 10 tries to guess");
    Scanner josh = new Scanner (System.in);
    int guess = 0;
    int counter = 0;
    boolean continueTheGame = true;
    System.out.println ("Enter name here PLAYER 1: ");
    String p1 = josh.nextLine ();
    System.out.println ("Enter name here PLAYER 2: ");
    String p2 = josh.nextLine ();
    System.out.println ("Ok, " + p2 + " look away. " + p1 + ", Please enter a number and press enter:");
    int answer = josh.nextInt ();
    while (continueTheGame == true) {
        if (answer >= 100) {
            System.out.println ("BUSTED! I said a number between 1 - 100!");
        } else if (answer <= 100) {
            System.out.println ("Guess in the space below.");
            guess = josh.nextInt ();
        }

        if (guess == answer) {
            System.out.println ("CORRECT!!!!!");
        } else if (guess != answer) {
            counter --;
            System.out.println ("You have " + counter + " of guesses left");
            if (counter > 0) {
                continueTheGame = true;
            } else {
                continueTheGame = false;
            }
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("WELCOME TO GUESSING GAME BY JOSH!");
    System.out.println ("Rules: Player 1 picks number between 1 - 100 while Player 2 has 10 tries to guess");
    Scanner josh = new Scanner (System.in);
    System.out.println ("Enter name here PLAYER 1: ");
    String p1 = josh.nextLine ();
    System.out.println ("Enter name here PLAYER 2: ");
    String p2 = josh.nextLine ();
    System.out.println ("Ok, " + p2 + " look away. " + p1 + ", Please enter a number and press enter:");
    int answer = josh.nextInt ();
    if (answer >= 100) {
        System.out.println ("BUSTED! I said a number between 1 - 100!");
    } else {
        System.out.println ("Guess in the space below.");
    }
    for (int count = 10;
    count >= 0; count --) {
        int guess = josh.nextInt ();
        if (guess == answer) {
            System.out.println ("CORRECT!!!!!");
            System.exit (0);
        } else {
            System.out.println ("You have " + count + " of guesses left");
            if (count == 0) {
                System.out.println ("Sorry, you lost, no more tries..");
                System.exit (0);
            }
        }
    }
    josh.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28537303_28537428_141_153
28537303_28537428_32_45
Title: Using threads correctly has stumped me 
----------------------------------------

public void run () {
    int times = 100_000;
    for (int i = 0;
    i <= times; i ++) {
        checkPauseState ();
        updateProgress (Math.round ((i / (float) times) * 100f));
        try {
            Thread.sleep (1);
        } catch (InterruptedException ex) {
        }
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28544042_28544433_1_26
28544042_28544433_28_38
Title: Moving and fixing array 
----------------------------------------

public static List < String > fixArguments (List < String > args) {
    List < String > fixed = new ArrayList < > ();
    StringBuilder building = new StringBuilder ();
    boolean build = false;
    for (String arg : args) {
        if (arg.charAt (0) == '\"') {
            build = true;
            building.setLength (0);
        }
        if (build) {
            if (building.length () > 0) {
                building.append (" ");
            }
            building.append (arg);
        } else {
            fixed.add (arg);
        }
        if (arg.charAt (arg.length () - 1) == '\"') {
            fixed.add (building.toString ());
            build = false;
        }
    }
    return fixed;
}
----------------------------------------

public static String [] fixArguments (String [] arguments) {
    List < String > args = Arrays.asList (arguments);
    List < String > fixed = fixArguments (args);
    String [] results = new String [fixed.size ()];
    for (int i = 0;
    i < results.length; i ++) {
        results [i] = fixed.get (i);
    }
    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2854494_21602229_1_12
2854494_2854662_1_20
Title: How do I subtract a binding using a Guice module override? 
----------------------------------------

public static Module subtractBinding (Module module, Key < ? > toSubtract) {
    List < Element > elements = Elements.getElements (module);
    return Elements.getModule (Collections2.filter (elements, input -> {
        if (input instanceof Binding) {
            return ! ((Binding) input).getKey ().equals (toSubtract);
        }
        return true;
    }));
}
----------------------------------------

public Module subtractBinding (Module module, Key < ? > toSubtract) {
    List < Element > elements = Elements.getElements (module);
    for (Iterator < Element > i = elements.iterator ();
    i.hasNext ();) {
        Element element = i.next ();
        boolean remove = element.acceptVisitor (new DefaultElementVisitor < Boolean > () {
            @Override
            public < T > Boolean visit (Binding < T > binding) {
                return binding.getKey ().equals (toSubtract);
            }@Override
            public Boolean visitOther (Element other) {
                return false;
            }}

        );
        if (remove) {
            i.remove ();
        }
    }
    return Elements.getModule (elements);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28546634_28546725_15_24
28546634_28569491_1_24
Title: How does Apache commons IO convert my XML header from UTF-8 to UTF-16? 
----------------------------------------

public static String getDocumentString (Document doc) {
    DOMImplementationLS domImplementation = (DOMImplementationLS) doc.getImplementation ();
    LSSerializer lsSerializer = domImplementation.createLSSerializer ();
    LSOutput lsOut = domImplementation.createLSOutput ();
    lsOut.setEncoding ("UTF-8");
    lsOut.setCharacterStream (new StringWriter ());
    lsSerializer.write (doc, lsOut);
    return lsOut.getCharacterStream ().toString ();
}
----------------------------------------

private String getDocumentString (Document doc) {
    String ret = null;
    DOMSource domSource = new DOMSource (doc);
    StringWriter writer = new StringWriter ();
    StreamResult result = new StreamResult (writer);
    TransformerFactory tf = TransformerFactory.newInstance ();
    Transformer transformer;
    try {
        transformer = tf.newTransformer ();
        transformer.transform (domSource, result);
        ret = writer.toString ();
    } catch (TransformerConfigurationException e) {
        e.printStackTrace ();
    } catch (TransformerException e) {
        e.printStackTrace ();
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28547277_28547545_3_22
28547277_28547957_1_23
Title: How to insert a number into an array in java 
----------------------------------------

public static void main (String [] args) {
    int [] originalArray = {1, 4, 3, 7, 8};
    int [] modifiedArray = new int [originalArray.length + 1];
    int index = 2;
    for (int i = 0;
    i < (originalArray.length + 1); i ++) {
        if (i == 1) {
            modifiedArray [i] = index;
        } else if (i < 1) {
            modifiedArray [i] = originalArray [i];
        } else {
            modifiedArray [i] = originalArray [i - 1];
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    int [] gato = {1, 4, 3, 7, 8};
    int index = 2;
    System.out.println ("the contents of gato are ");
    for (int i = 0;
    i < gato.length; i ++) {
        System.out.println (gato [i]);
    }
    gato = Arrays.copyOf (gato, gato.length + 1);
    for (int i = gato.length - 1;
    i > index; i --) {
        gato [i] = gato [i - 1];
    }
    gato [index] = 2;
    for (int i = 0;
    i < gato.length; i ++) {
        System.out.println (gato [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28548842_28548989_5_15
28548842_28551016_2_15
Title: How do I sort the elements of a set in ascending order? 
----------------------------------------

public static void main (String [] args) {
    Set < Football > teams = new TreeSet < > ();
    teams.add (new Football ("Team A", 3));
    teams.add (new Football ("Team B", 1));
    teams.add (new Football ("Team C", 2));
    for (Football x : teams) {
        System.out.println (x.getName ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Set < Team > setAlphaAscending = new TreeSet < > (new AscendingNameComparator ());
    addTeamsToSet (setAlphaAscending);
    Set < Team > setAlphaDescending = new TreeSet < > (new DescendingNameComparator ());
    addTeamsToSet (setAlphaDescending);
    Set < Team > setPointsOrdered = new TreeSet < > (new PointsComparator ());
    addTeamsToSet (setPointsOrdered);
    System.out.println (setAlphaAscending);
    System.out.println (setAlphaDescending);
    System.out.println (setPointsOrdered);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28555788_28556025_4_19
28555788_28556257_5_27
Title: How would I correct the program so it runs correctly? 
----------------------------------------

public static void main (String [] args) {
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Enter Value : ");
    int nbr = kbd.nextInt ();
    int count = 0;
    while (! ((nbr % 17 == 0) || (nbr % 6 == 0))) {
        count ++;
        System.out.print ("Enter Value: ");
        nbr = kbd.nextInt ();
    }
    System.out.println ("Numbers read : " + count);
}
----------------------------------------

public static void main (String [] args) {
    Scanner kbd = new Scanner (System.in);
    int count = 0;
    while (true) {
        System.out.print ("Enter Value : ");
        int nbr = kbd.nextInt ();
        if (nbr % 7 == 0 || nbr % 16 == 0) {
            break;
        } else {
            count ++;
        }
    }
    System.out.println ("Numbers read : " + count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28562509_28563597_118_160
28562509_28563597_166_187
Title: How to select multiple components of Canvas using ctrl key in javafx? 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isShiftDown () && ! event.isControlDown ()) {
        selectionModel.clear ();
    }
    for (Node node : group.getChildren ()) {
        if (node instanceof ImageView) {
            if (node.getBoundsInParent ().intersects (rect.getBoundsInParent ())) {
                if (event.isShiftDown ()) {
                    selectionModel.add (node);
                } else if (event.isControlDown ()) {
                    if (selectionModel.contains (node)) {
                        selectionModel.remove (node);
                    } else {
                        selectionModel.add (node);
                    }
                } else {
                    selectionModel.add (node);
                }

            }
        }
    }
    selectionModel.log ();
    rect.setX (0);
    rect.setY (0);
    rect.setWidth (0);
    rect.setHeight (0);
    group.getChildren ().remove (rect);
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    double offsetX = event.getSceneX () - dragContext.mouseAnchorX;
    double offsetY = event.getSceneY () - dragContext.mouseAnchorY;
    if (offsetX > 0) rect.setWidth (offsetX);
    else {
        rect.setX (event.getSceneX ());
        rect.setWidth (dragContext.mouseAnchorX - rect.getX ());
    }
    if (offsetY > 0) {
        rect.setHeight (offsetY);
    } else {
        rect.setY (event.getSceneY ());
        rect.setHeight (dragContext.mouseAnchorY - rect.getY ());
    }
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28562509_28563597_118_160
28562509_28563597_99_112
Title: How to select multiple components of Canvas using ctrl key in javafx? 
----------------------------------------

public void handle (MouseEvent event) {
    if (! event.isShiftDown () && ! event.isControlDown ()) {
        selectionModel.clear ();
    }
    for (Node node : group.getChildren ()) {
        if (node instanceof ImageView) {
            if (node.getBoundsInParent ().intersects (rect.getBoundsInParent ())) {
                if (event.isShiftDown ()) {
                    selectionModel.add (node);
                } else if (event.isControlDown ()) {
                    if (selectionModel.contains (node)) {
                        selectionModel.remove (node);
                    } else {
                        selectionModel.add (node);
                    }
                } else {
                    selectionModel.add (node);
                }

            }
        }
    }
    selectionModel.log ();
    rect.setX (0);
    rect.setY (0);
    rect.setWidth (0);
    rect.setHeight (0);
    group.getChildren ().remove (rect);
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    dragContext.mouseAnchorX = event.getSceneX ();
    dragContext.mouseAnchorY = event.getSceneY ();
    rect.setX (dragContext.mouseAnchorX);
    rect.setY (dragContext.mouseAnchorY);
    rect.setWidth (0);
    rect.setHeight (0);
    group.getChildren ().add (rect);
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28562509_28563597_166_187
28562509_28563597_99_112
Title: How to select multiple components of Canvas using ctrl key in javafx? 
----------------------------------------

public void handle (MouseEvent event) {
    double offsetX = event.getSceneX () - dragContext.mouseAnchorX;
    double offsetY = event.getSceneY () - dragContext.mouseAnchorY;
    if (offsetX > 0) rect.setWidth (offsetX);
    else {
        rect.setX (event.getSceneX ());
        rect.setWidth (dragContext.mouseAnchorX - rect.getX ());
    }
    if (offsetY > 0) {
        rect.setHeight (offsetY);
    } else {
        rect.setY (event.getSceneY ());
        rect.setHeight (dragContext.mouseAnchorY - rect.getY ());
    }
    event.consume ();
}
----------------------------------------

public void handle (MouseEvent event) {
    dragContext.mouseAnchorX = event.getSceneX ();
    dragContext.mouseAnchorY = event.getSceneY ();
    rect.setX (dragContext.mouseAnchorX);
    rect.setY (dragContext.mouseAnchorY);
    rect.setWidth (0);
    rect.setHeight (0);
    group.getChildren ().add (rect);
    event.consume ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28572213_28572330_9_31
28572213_28572688_1_22
Title: Storing numbers from a file into an array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter the name of your file (including file extension): ");
    String filename = input.next ();
    int count = 0;
    int [] numberArray;
    try {
        Scanner in = new Scanner (new File (filename));
        int size = in.nextInt ();
        numberArray = new int [size];
        int result;
        while (in.hasNextInt () && count < size) {
            numberArray [count] = result;
            count = count + 1;
            result = in.nextInt ();
        }
    } catch (FileNotFoundException e) {
        System.out.println ("That file was not found. Program terminating...");
        e.printStackTrace ();
    }
    display (numberArray);
}
----------------------------------------

public static void main (String [] args) {
    try (final Scanner input = new Scanner (System.in)) {
        System.out.println ("Enter the name of your file (including file extension): ");
        final String filename = input.next ();
        int [] numberArray = null;
        try (final Scanner in = new Scanner (new File (filename))) {
            final int count = in.nextInt ();
            numberArray = new int [count];
            for (int i = 0;
            in.hasNextInt () && i < count; i ++) {
                numberArray [i] = in.nextInt ();
            }
            display (numberArray);
        } catch (final FileNotFoundException e) {
            System.out.println ("That file was not found. Program terminating...");
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28572274_28572508_10_22
28572274_28590923_4_23
Title: Translating english to morse-code with a for-loop 
----------------------------------------

public static void main (String...args) {
    try (Scanner read = new Scanner (System.in)) {
        System.out.print ("Morse-Code It (type \"exit\" to exit): ");
        String text = "";
        while (! "exit".equals (text.toLowerCase ())) {
            text = removeNonLetters (read.nextLine ());
            System.out.println (toMors (text));
        }
    }
}
----------------------------------------

public static void main (String [] arg) {
    Scanner Read = new Scanner (System.in);
    String uinput, utskr = "";
    String [] letters = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "X", "Y", "Z"};
    String [] mors = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Ange den text du vill översätta till Morse-kod: ");
    uinput = Read.nextLine ();
    for (int i = 0;
    i < uinput.length ();) {
        char currentChar = uinput.charAt (i);
        int charIndex = letters.indexOf (currentChar);
        utskr = utskr + mors [charIndex] + " ";
    }
    System.out.println (utskr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28572274_28572508_10_22
28572274_30133030_26_71
Title: Translating english to morse-code with a for-loop 
----------------------------------------

public static void main (String...args) {
    try (Scanner read = new Scanner (System.in)) {
        System.out.print ("Morse-Code It (type \"exit\" to exit): ");
        String text = "";
        while (! "exit".equals (text.toLowerCase ())) {
            text = removeNonLetters (read.nextLine ());
            System.out.println (toMors (text));
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    alphaMorse.put ("A", ".-");
    alphaMorse.put ("B", "-...");
    alphaMorse.put ("C", "-.-.");
    alphaMorse.put ("D", "-..");
    alphaMorse.put ("E", ".");
    alphaMorse.put ("F", "..-.");
    alphaMorse.put ("G", "--.");
    alphaMorse.put ("H", "....");
    alphaMorse.put ("I", "..");
    alphaMorse.put ("J", ".---");
    alphaMorse.put ("K", "-.-");
    alphaMorse.put ("L", ".-..");
    alphaMorse.put ("M", "--");
    alphaMorse.put ("N", "-.");
    alphaMorse.put ("O", "---");
    alphaMorse.put ("P", ".--.");
    alphaMorse.put ("Q", "--.-");
    alphaMorse.put ("R", ".-.");
    alphaMorse.put ("S", "...");
    alphaMorse.put ("T", "-");
    alphaMorse.put ("U", "..-");
    alphaMorse.put ("V", "...-");
    alphaMorse.put ("W", ".--");
    alphaMorse.put ("X", "-..-");
    alphaMorse.put ("y", "-.--");
    alphaMorse.put ("z", "--..");
    alphaMorse.put ("1", ".----");
    alphaMorse.put ("2", "..---");
    alphaMorse.put ("3", "...--");
    alphaMorse.put ("4", "....-");
    alphaMorse.put ("5", ".....");
    alphaMorse.put ("6", "-....");
    alphaMorse.put ("7", "--...");
    alphaMorse.put ("8", "---..");
    alphaMorse.put ("9", "----.");
    alphaMorse.put ("0", "-----");
    alphaMorse.put (" ", "|");
    String st = "hello";
    String morse = "";
    String convertedMorseCode = toMors (st);
    System.out.print (convertedMorseCode);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28572274_28572508_32_41
28572274_30133030_73_86
Title: Translating english to morse-code with a for-loop 
----------------------------------------

private static String toMors (String str) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < str.length (); i ++) {
        sb.append (MORS [getIndex (str.charAt (i))]);
        sb.append ("   ");
    }
    return sb.toString ();
}
----------------------------------------

public static String toMors (String st) {
    String morse = "";
    for (int i = 0;
    i < st.length (); i ++) {
        char c = st.charAt (i);
        char charUpper = Character.toUpperCase (c);
        String morseCode = alphaMorse.get (Character.toString (charUpper));
        morse = morse + morseCode;
    }
    return morse;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
28572274_28590923_4_23
28572274_30133030_26_71
Title: Translating english to morse-code with a for-loop 
----------------------------------------

public static void main (String [] arg) {
    Scanner Read = new Scanner (System.in);
    String uinput, utskr = "";
    String [] letters = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "X", "Y", "Z"};
    String [] mors = {".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."};
    System.out.println ("Ange den text du vill översätta till Morse-kod: ");
    uinput = Read.nextLine ();
    for (int i = 0;
    i < uinput.length ();) {
        char currentChar = uinput.charAt (i);
        int charIndex = letters.indexOf (currentChar);
        utskr = utskr + mors [charIndex] + " ";
    }
    System.out.println (utskr);
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    alphaMorse.put ("A", ".-");
    alphaMorse.put ("B", "-...");
    alphaMorse.put ("C", "-.-.");
    alphaMorse.put ("D", "-..");
    alphaMorse.put ("E", ".");
    alphaMorse.put ("F", "..-.");
    alphaMorse.put ("G", "--.");
    alphaMorse.put ("H", "....");
    alphaMorse.put ("I", "..");
    alphaMorse.put ("J", ".---");
    alphaMorse.put ("K", "-.-");
    alphaMorse.put ("L", ".-..");
    alphaMorse.put ("M", "--");
    alphaMorse.put ("N", "-.");
    alphaMorse.put ("O", "---");
    alphaMorse.put ("P", ".--.");
    alphaMorse.put ("Q", "--.-");
    alphaMorse.put ("R", ".-.");
    alphaMorse.put ("S", "...");
    alphaMorse.put ("T", "-");
    alphaMorse.put ("U", "..-");
    alphaMorse.put ("V", "...-");
    alphaMorse.put ("W", ".--");
    alphaMorse.put ("X", "-..-");
    alphaMorse.put ("y", "-.--");
    alphaMorse.put ("z", "--..");
    alphaMorse.put ("1", ".----");
    alphaMorse.put ("2", "..---");
    alphaMorse.put ("3", "...--");
    alphaMorse.put ("4", "....-");
    alphaMorse.put ("5", ".....");
    alphaMorse.put ("6", "-....");
    alphaMorse.put ("7", "--...");
    alphaMorse.put ("8", "---..");
    alphaMorse.put ("9", "----.");
    alphaMorse.put ("0", "-----");
    alphaMorse.put (" ", "|");
    String st = "hello";
    String morse = "";
    String convertedMorseCode = toMors (st);
    System.out.print (convertedMorseCode);
}
----------------------------------------
