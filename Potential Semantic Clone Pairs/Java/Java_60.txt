$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27459510_27459820_12_34
27459510_27460138_15_26
Title: GUI doesn't appear in IntelliJ IDEA 
----------------------------------------

public CelsiusConverterGUI () {
    convertButton = new JButton ("Convert");
    celsiusDegree = new JTextField ("");
    panel = new JPanel (new BorderLayout ());
    fahrenheitDeg = new JLabel ();
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()));
            fahrenheitDeg.setText (fahrDegree + " Fahrenheit");
        }}

    );
    panel.add (convertButton, BorderLayout.CENTER);
    panel.add (celsiusDegree, BorderLayout.NORTH);
    panel.add (fahrenheitDeg, BorderLayout.SOUTH);
    this.add (panel);
    this.setVisible (true);
    this.setSize (300, 200);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------

public CelsiusConverterGUI () {
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()) * 1.8 + 32);
            fahrenheitDeg.setText (fahrDegree + " Fahrenheit");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27459510_27459820_12_34
27459510_30961281_13_27
Title: GUI doesn't appear in IntelliJ IDEA 
----------------------------------------

public CelsiusConverterGUI () {
    convertButton = new JButton ("Convert");
    celsiusDegree = new JTextField ("");
    panel = new JPanel (new BorderLayout ());
    fahrenheitDeg = new JLabel ();
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()));
            fahrenheitDeg.setText (fahrDegree + " Fahrenheit");
        }}

    );
    panel.add (convertButton, BorderLayout.CENTER);
    panel.add (celsiusDegree, BorderLayout.NORTH);
    panel.add (fahrenheitDeg, BorderLayout.SOUTH);
    this.add (panel);
    this.setVisible (true);
    this.setSize (300, 200);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
}
----------------------------------------

public CelsiusConverterGUI () {
    super ("CelsiusConverterGUI");
    setSize (400, 500);
    setContentPane (panel);
    pack ();
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setVisible (true);
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()));
            fahrenheitDeg.setText (fahrDegree + "Fahrenheit");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27459510_27460138_15_26
27459510_30961281_13_27
Title: GUI doesn't appear in IntelliJ IDEA 
----------------------------------------

public CelsiusConverterGUI () {
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()) * 1.8 + 32);
            fahrenheitDeg.setText (fahrDegree + " Fahrenheit");
        }}

    );
}
----------------------------------------

public CelsiusConverterGUI () {
    super ("CelsiusConverterGUI");
    setSize (400, 500);
    setContentPane (panel);
    pack ();
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setVisible (true);
    convertButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            int fahrDegree = (int) (Double.parseDouble (celsiusDegree.getText ()));
            fahrenheitDeg.setText (fahrDegree + "Fahrenheit");
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27462689_27462726_1_11
27462689_27462772_6_16
Title: How to use an ArrayList inside a method that calls itself 
----------------------------------------

public static List < File > listFiles (File dir) {
    List < File > result = new ArrayList < > ();
    if (! dir.isDirectory () || ! dir.exists ()) return result;

    for (File file : dir.listFiles ()) {
        result.add (file);
        result.addAll (listFiles (file));
    }
    return result;
}
----------------------------------------

public static ArrayList < File > listFiles (File dir, ArrayList < File > classFileList) {
    if (! dir.isDirectory () || ! dir.exists ()) return null;

    for (File file : dir.listFiles ()) {
        classFileList.add (file);
        listFiles (file, classFileList);
    }
    return classFileList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27491732_27491746_1_11
27491732_27491783_1_11
Title: Object Type resolution: instanceof 
----------------------------------------

public void setFormListener (Object o) {
    if (o instanceof DailyFormListener) {
        this.formDayListener = (DailyFormListener) o;
    } else if (o instanceof GeneFormListener) {
        this.geneFormListener = (GeneFormListener) o;
    } else if (o instanceof LabFormListener) {
        this.labFormListener = (LabFormListener) o;
    }

}
----------------------------------------

public void setFormListener (Object o) {
    if (o instanceof DailyFormListener) {
        this.formDayListener = (DailyFormListener) o;
    } else if (o instanceof GeneFormListener) {
        this.geneFormListener = (GeneFormListener) o;
    } else if (o instanceof LabFormListener) {
        this.labFormListener = (LabFormListener) o;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2749191_2749198_5_24
2749191_2750681_25_37
Title: "Java Graphics not displaying on successive function calls why?" 
----------------------------------------

public static void main (String [] args) {
    final JFrame f = new JFrame ("Frame Test");
    f.setContentPane (new MyTreeComponent ());
    f.setSize (400, 400);
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setVisible (true);
    new Thread () {
        public void run () {
            for (int i = 0;
            i < 10; i ++) {
                try {
                    sleep (1000);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
                f.repaint ();
            }
        }}

    .start ();
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame f = new JFrame ("Star Topology");
            f.add (new StarPanel ());
            f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            f.pack ();
            f.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27492053_27492183_6_28
27492053_27492250_5_21
Title: Less input values than array length 
----------------------------------------

public static void main (String [] args) throws IOException {
    FileReader i = new FileReader ("Set8_Prog3 numbers.txt");
    Scanner j = new Scanner (i);
    int [] values = new int [40];
    int k = 0;
    while (k < 40 && j.hasNextInt ()) {
        values [k] = j.nextInt ();
        k ++;
    }
    k --;
    System.out.println ("The values from the file in reverse order is: ");
    while (k >= 0) {
        System.out.println (values [last]);
        k --;
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    FileReader fileReader = new FileReader ("Set8_Prog3 numbers.txt");
    Scanner scanner = new Scanner (fileReader);
    int [] values = new int [40];
    int count = - 1;
    for (int i = 0;
    i < values.length && scanner.hasNextInt (); i ++) {
        values [i] = scanner.nextInt ();
        count = i;
    }
    System.out.println ("The values from the file in reverse order is: ");
    for (int i = count;
    i >= 0; i --) {
        System.out.println (values [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27495942_27874626_168_203
27495942_49842059_35_85
Title: Get Channel ID from username Java using YouTube API v3 
----------------------------------------

public static void main (String [] args) {
    Helper.readDeveloperKeys ();
    UserHarvest usrHarvest = new UserHarvest ("nqtv");
    try {
        usrHarvest.harvestUserActivities ("nqtv");
    } catch (IOException ex) {
        Logger.getLogger (VideoHarvest.class.getName ()).log (Level.SEVERE, null, ex);
    } catch (ServiceException ex) {
        Logger.getLogger (VideoHarvest.class.getName ()).log (Level.SEVERE, null, ex);
    }
    try {
        Helper.youtube = new YouTube.Builder (Helper.HTTP_TRANSPORT, Helper.JSON_FACTORY, new HttpRequestInitializer () {
            public void initialize (HttpRequest request) throws IOException {
            }}

        ).setApplicationName (Helper.APPLICATION_NAME).build ();
        usrHarvest.harvestChannels ("nqtv");
    } catch (Throwable t) {
        t.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Properties properties = new Properties ();
    try {
        InputStream in = Search.class.getResourceAsStream ("/" + PROPERTIES_FILENAME);
        properties.load (in);
    } catch (IOException e) {
        System.err.println ("There was an error reading " + PROPERTIES_FILENAME + ": " + e.getCause () + " : " + e.getMessage ());
        System.exit (1);
    }
    try {
        youtube = new YouTube.Builder (HTTP_TRANSPORT, JSON_FACTORY, new HttpRequestInitializer () {
            @Override
            public void initialize (HttpRequest request) throws IOException {
            }}

        ).setApplicationName ("youtube-cmdline-search-sample").build ();
        String queryTerm = getInputQuery ();
        YouTube.Search.List search = youtube.search ().list ("id,snippet");
        String apiKey = properties.getProperty ("youtube.apikey");
        search.setKey (apiKey);
        search.setQ (queryTerm);
        search.setType ("video");
        search.setFields ("items(id/kind,id/videoId,snippet/title,snippet/publishedAt,snippet/description,snippet/channelId,snippet/thumbnails/default/url)");
        search.setMaxResults (NUMBER_OF_VIDEOS_RETURNED);
        SearchListResponse searchResponse = search.execute ();
        List < SearchResult > searchResultList = searchResponse.getItems ();
        if (searchResultList != null) {
            prettyPrint (searchResultList.iterator (), queryTerm);
            BufferedReader bRead = new BufferedReader (new InputStreamReader (System.in));
        }
    } catch (GoogleJsonResponseException e) {
        System.err.println ("There was a service error: " + e.getDetails ().getCode () + " : " + e.getDetails ().getMessage ());
    } catch (IOException e) {
        System.err.println ("There was an IO error: " + e.getCause () + " : " + e.getMessage ());
    } catch (Throwable t) {
        t.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27501432_27501754_21_31
27501432_49488889_2_15
Title: Multiple thread to print numbers 
----------------------------------------

public static void main (String args []) {
    A t1 = new A ();
    t1.name = "Thread one";
    A t2 = new A ();
    t2.name = "Thread two";
    A t3 = new A ();
    t3.name = "Thread three";
    t1.start ();
    t2.start ();
    t3.start ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Counter counter = new Counter (100);
    CounterTask counterTask = new CounterTask (counter);
    Thread [] threads = new Thread [5];
    for (int i = 0;
    i < threads.length; i ++) {
        threads [i] = new Thread (counterTask);
        threads [i].start ();
    }
    for (int i = 0;
    i < threads.length; i ++) {
        threads [i].join ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27501432_27501754_4_20
27501432_27502106_24_35
Title: Multiple thread to print numbers 
----------------------------------------

public void run () {
    while (num <= 100) {
        synchronized (num) {
            System.out.println (name + " " + num);
            num ++;
        }
        try {
            Thread.sleep (100);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    for (int i = this.first;
    i <= this.last; i += this.incr) {
        synchronized (this.stream) {
            this.stream.println (i);
        }
        try {
            Thread.sleep (100);
        } catch (final InterruptedException e) {
            return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27501432_27501754_4_20
27501432_49488889_41_49
Title: Multiple thread to print numbers 
----------------------------------------

public void run () {
    while (num <= 100) {
        synchronized (num) {
            System.out.println (name + " " + num);
            num ++;
        }
        try {
            Thread.sleep (100);
        } catch (InterruptedException e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (counter) {
            int next = counter.getNext ();
            if (next == - 1) break;

            System.out.println (Thread.currentThread ().getName () + ": " + next);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27501432_27502106_24_35
27501432_49488889_41_49
Title: Multiple thread to print numbers 
----------------------------------------

public void run () {
    for (int i = this.first;
    i <= this.last; i += this.incr) {
        synchronized (this.stream) {
            this.stream.println (i);
        }
        try {
            Thread.sleep (100);
        } catch (final InterruptedException e) {
            return;
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (counter) {
            int next = counter.getNext ();
            if (next == - 1) break;

            System.out.println (Thread.currentThread ().getName () + ": " + next);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27505198_27527613_139_170
27505198_42111904_180_207
Title: Get current user location 
----------------------------------------

public void showSettingsAlert () {
    AlertDialog.Builder alertDialog = new AlertDialog.Builder (mContext);
    alertDialog.setTitle ("GPS Settings");
    alertDialog.setMessage ("GPS is not enabled. You want to go to the settings menu?");
    alertDialog.setPositiveButton ("Settings", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            Intent intent = new Intent (Settings.ACTION_LOCATION_SOURCE_SETTINGS);
            mContext.startActivity (intent);
        }}

    );
    alertDialog.setNegativeButton ("Cancel", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            dialog.cancel ();
        }}

    );
    alertDialog.show ();
}
----------------------------------------

public void showSettingsAlert () {
    AlertDialog.Builder alertDialog = new AlertDialog.Builder (mContext);
    alertDialog.setTitle ("GPS is settings");
    alertDialog.setMessage ("GPS is not enabled. Do you want to go to settings menu?");
    alertDialog.setPositiveButton ("Settings", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            Intent intent = new Intent (Settings.ACTION_LOCATION_SOURCE_SETTINGS);
            mContext.startActivity (intent);
        }}

    );
    alertDialog.setNegativeButton ("Cancel", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            dialog.cancel ();
        }}

    );
    alertDialog.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27505198_27527613_32_90
27505198_42111904_58_122
Title: Get current user location 
----------------------------------------

public Location getLocation () {
    try {
        locationManager = (LocationManager) mContext.getSystemService (LOCATION_SERVICE);
        isGPSEnabled = locationManager.isProviderEnabled (LocationManager.GPS_PROVIDER);
        isNetworkEnabled = locationManager.isProviderEnabled (LocationManager.NETWORK_PROVIDER);
        if (! isGPSEnabled && ! isNetworkEnabled) {
        } else {
            this.canGetLocation = true;
            if (isNetworkEnabled) {
                locationManager.requestLocationUpdates (LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                Log.d ("Network", "Network");
                if (locationManager != null) {
                    location = locationManager.getLastKnownLocation (LocationManager.NETWORK_PROVIDER);
                    if (location != null) {
                        latitude = location.getLatitude ();
                        longitude = location.getLongitude ();
                    }
                }
            }
            if (isGPSEnabled) {
                if (location == null) {
                    locationManager.requestLocationUpdates (LocationManager.GPS_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                    Log.d ("GPS Enabled", "GPS Enabled");
                    if (locationManager != null) {
                        location = locationManager.getLastKnownLocation (LocationManager.GPS_PROVIDER);
                        if (location != null) {
                            latitude = location.getLatitude ();
                            longitude = location.getLongitude ();
                        }
                    }
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return location;
}
----------------------------------------

public Location getLocation () {
    try {
        locationManager = (LocationManager) mContext.getSystemService (LOCATION_SERVICE);
        isGPSEnabled = locationManager.isProviderEnabled (LocationManager.GPS_PROVIDER);
        isNetworkEnabled = locationManager.isProviderEnabled (LocationManager.NETWORK_PROVIDER);
        if (! isGPSEnabled && ! isNetworkEnabled) {
        } else {
            this.canGetLocation = true;
            if (isNetworkEnabled) {
                locationManager.requestLocationUpdates (LocationManager.NETWORK_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                Log.d ("Network", "Network");
                if (locationManager != null) {
                    location = locationManager.getLastKnownLocation (LocationManager.NETWORK_PROVIDER);
                    if (location != null) {
                        latitude = location.getLatitude ();
                        longitude = location.getLongitude ();
                    }
                }
            }
            if (isGPSEnabled) {
                if (location == null) {
                    locationManager.requestLocationUpdates (LocationManager.GPS_PROVIDER, MIN_TIME_BW_UPDATES, MIN_DISTANCE_CHANGE_FOR_UPDATES, this);
                    Log.d ("GPS Enabled", "GPS Enabled");
                    if (locationManager != null) {
                        location = locationManager.getLastKnownLocation (LocationManager.GPS_PROVIDER);
                        if (location != null) {
                            latitude = location.getLatitude ();
                            longitude = location.getLongitude ();
                        }
                    }
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return location;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27514235_27514401_1_15
27514235_27514414_1_13
Title: How to set actions for actionbar buttons? 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.action_search :
            openSearch ();
            Toast.makeText (getActivity (), "search!", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.action_settings :
            openSettings ();
            Toast.makeText (getActivity (), "settings!", Toast.LENGTH_SHORT).show ();
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.action_search :
            Toast.makeText (this, "Search Button Pressed !", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.action_compose :
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27518493_27518522_1_29
27518493_27518589_6_19
Title: How to find key of the value in hasmap 
----------------------------------------

public static void main (String [] args) {
    HashMap < Integer, List < String > > map = new HashMap < Integer, List < String > > ();
    String sent = "EGInnovations located in seven countries in the world";
    String [] words = sent.split (" ");
    int len = 0;
    List < String > stringList;
    for (String word : words) {
        len = word.length ();
        stringList = map.get (len);
        if (stringList == null) {
            stringList = new ArrayList < String > ();
            map.put (len, stringList);
        }
        stringList.add (word);
    }
    if (! map.isEmpty ()) {
        System.out.println ("Full length map : \n" + map);
        System.out.println ();
        List < Integer > lengthList = new ArrayList < Integer > (map.keySet ());
        System.out.println ("Minimum Length : " + Collections.min (lengthList));
        System.out.println ("Minimum Length Words : " + map.get (Collections.min (lengthList)));
        System.out.println ("\nMax Length : " + Collections.max (lengthList));
        System.out.println ("Max Length Words : " + map.get (Collections.max (lengthList)));
    }
}
----------------------------------------

public static void main (String [] args) {
    NavigableMap < Integer, String > map = new TreeMap < Integer, String > ();
    String sent = "EGInnovations located in seven countries in the world";
    String [] words = sent.split (" ");
    int len = 0;
    for (String word : words) {
        len = word.length ();
        map.put (len, word);
    }
    System.out.println ("Full Map =>" + map);
    System.out.println ("Max Length => " + map.lastEntry ().getValue ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27528698_27550877_2_27
27528698_27573555_10_23
Title: Is there any way I can specify defaultValue for collections with JAXB? 
----------------------------------------

public static void main (String [] args) {
    X x1 = unmarshal (new StringReader ("<x></x>"), X.class);
    X x2 = unmarshal (new StringReader ("<x><flags/></x>"), X.class);
    X x3 = unmarshal (new StringReader ("<x><flags>X Y</flags></x>"), X.class);
    out.println ("First unmarshal:");
    out.println (x1);
    out.println (x2);
    out.println (x3);
    StringWriter s1 = new StringWriter ();
    JAXB.marshal (x1, s1);
    StringWriter s2 = new StringWriter ();
    JAXB.marshal (x2, s2);
    StringWriter s3 = new StringWriter ();
    JAXB.marshal (x3, s3);
    x1 = unmarshal (new StringReader (s1.toString ()), X.class);
    x2 = unmarshal (new StringReader (s2.toString ()), X.class);
    x3 = unmarshal (new StringReader (s3.toString ()), X.class);
    out.println ();
    out.println ("Second unmarshal:");
    out.println (x1);
    out.println (x2);
    out.println (x3);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    SchemaFactory sf = SchemaFactory.newInstance (XMLConstants.W3C_XML_SCHEMA_NS_URI);
    Schema schema = sf.newSchema (new File ("src/forum27528698/schema.xsd"));
    SAXParserFactory spf = SAXParserFactory.newInstance ();
    spf.setSchema (schema);
    SAXParser sp = spf.newSAXParser ();
    XMLReader xr = sp.getXMLReader ();
    xr.setContentHandler (new MyHandler ());
    StringReader xml = new StringReader ("<root><singleEmptyElement/><singlePopulatedElement>populated</singlePopulatedElement><listEmptyElement/><listPopulatedElement>populated</listPopulatedElement></root>");
    InputSource input = new InputSource (xml);
    xr.parse (input);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27537937_27538838_7_23
27537937_27572608_1_21
Title: Index value wont Increase after comparing two chars 
----------------------------------------

public static void main (String [] args) {
    String Text = "aVeIwSjHaNgUkkVarqdlhxn";
    char [] convertedText = Text.toCharArray ();
    for (int i = 1;
    i < convertedText.length; i ++) {
        if (i + 1 < convertedText.length) {
            if (Text.charAt (i) == Text.charAt (i + 1)) {
                i ++;
                System.out.printf ("%s ", convertedText [i]);
            }
        }
        System.out.printf ("%s", convertedText [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    String Text = "aVeIwSjHaNgUaaVdAgRjDkHxAmN";
    char [] convertedText = Text.toCharArray ();
    for (int i = 0;
    i < convertedText.length; i ++) {
        if (i + 1 < convertedText.length) {
            if (Text.charAt (i) == Text.charAt (i + 1)) {
                i += 2;
                System.out.printf (" %s", convertedText [i]);
            } else {
                i ++;
                System.out.printf ("%s", convertedText [i]);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27544569_27544886_2_19
27544569_27545074_28_46
Title: Java: How to control JPanel aspect ratio? 
----------------------------------------

public static void main (String [] args) {
    final JPanel innerPanel = new JPanel ();
    innerPanel.setBackground (Color.YELLOW);
    final JPanel container = new JPanel (new GridBagLayout ());
    container.add (innerPanel);
    container.addComponentListener (new ComponentAdapter () {
        @Override
        public void componentResized (ComponentEvent e) {
            resizePreview (innerPanel, container);
        }}

    );
    final JFrame frame = new JFrame ("AspectRatio");
    frame.getContentPane ().add (container);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (600, 600);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (Exception useDefault) {
            }
            JFrame mainFrame = new JFrame ("..So Square");
            mainFrame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            mainFrame.setLocationByPlatform (true);
            mainFrame.add (createPanel ());
            mainFrame.pack ();
            mainFrame.setMinimumSize (mainFrame.getSize ());
            mainFrame.setVisible (true);
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27544569_27544886_2_19
27544569_41192475_86_100
Title: Java: How to control JPanel aspect ratio? 
----------------------------------------

public static void main (String [] args) {
    final JPanel innerPanel = new JPanel ();
    innerPanel.setBackground (Color.YELLOW);
    final JPanel container = new JPanel (new GridBagLayout ());
    container.add (innerPanel);
    container.addComponentListener (new ComponentAdapter () {
        @Override
        public void componentResized (ComponentEvent e) {
            resizePreview (innerPanel, container);
        }}

    );
    final JFrame frame = new JFrame ("AspectRatio");
    frame.getContentPane ().add (container);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (600, 600);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel ();
    panel.setPreferredSize (new Dimension (300, 600));
    panel.setBackground (Color.ORANGE);
    JPanel wrapperPanel = new JPanel (new SingleComponentAspectRatioKeeperLayout ());
    wrapperPanel.add (panel);
    frame.getContentPane ().add (wrapperPanel);
    frame.setSize (450, 450);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27544569_27545074_28_46
27544569_41192475_86_100
Title: Java: How to control JPanel aspect ratio? 
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (Exception useDefault) {
            }
            JFrame mainFrame = new JFrame ("..So Square");
            mainFrame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            mainFrame.setLocationByPlatform (true);
            mainFrame.add (createPanel ());
            mainFrame.pack ();
            mainFrame.setMinimumSize (mainFrame.getSize ());
            mainFrame.setVisible (true);
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JPanel panel = new JPanel ();
    panel.setPreferredSize (new Dimension (300, 600));
    panel.setBackground (Color.ORANGE);
    JPanel wrapperPanel = new JPanel (new SingleComponentAspectRatioKeeperLayout ());
    wrapperPanel.add (panel);
    frame.getContentPane ().add (wrapperPanel);
    frame.setSize (450, 450);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_13_24
27547519_46562493_26_36
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last sequential unsized")
void last_sequential_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (9_950_000L);
}
----------------------------------------

@Test
@DisplayName ("last parallel sized")
void last_parallel_sized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_13_24
27547519_46562493_38_49
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last sequential unsized")
void last_sequential_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (9_950_000L);
}
----------------------------------------

@Test
@DisplayName ("getLast parallel unsized")
void last_parallel_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_13_24
27547519_46562493_51_71
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last sequential unsized")
void last_sequential_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (9_950_000L);
}
----------------------------------------

@Test
@DisplayName ("last parallel unsized with skip")
void last_parallel_unsized_with_skip () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).isEmpty ();
    assertThat (count).hasValue (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_1_11
27547519_46562493_38_49
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last sequential sized")
void last_sequential_sized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ();
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (9_950_000L);
}
----------------------------------------

@Test
@DisplayName ("getLast parallel unsized")
void last_parallel_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_1_11
27547519_46562493_51_71
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last sequential sized")
void last_sequential_sized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ();
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (9_950_000L);
}
----------------------------------------

@Test
@DisplayName ("last parallel unsized with skip")
void last_parallel_unsized_with_skip () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).isEmpty ();
    assertThat (count).hasValue (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_26_36
27547519_46562493_51_71
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("last parallel sized")
void last_parallel_sized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (1);
}
----------------------------------------

@Test
@DisplayName ("last parallel unsized with skip")
void last_parallel_unsized_with_skip () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).isEmpty ();
    assertThat (count).hasValue (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27547519_46562493_38_49
27547519_46562493_51_71
Title: Most efficient way to get the last element of a stream 
----------------------------------------

@Test
@DisplayName ("getLast parallel unsized")
void last_parallel_unsized () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).hasValue (expected);
    assertThat (count).hasValue (1);
}
----------------------------------------

@Test
@DisplayName ("last parallel unsized with skip")
void last_parallel_unsized_with_skip () throws Exception {
    long expected = 10_000_000L;
    AtomicLong count = new AtomicLong ();
    Stream < Long > stream = LongStream.rangeClosed (1, expected).boxed ().parallel ();
    stream = StreamSupport.stream (((Iterable < Long >) stream :: iterator).spliterator (), stream.isParallel ());
    stream = stream.skip (50_000).peek (num -> count.getAndIncrement ());
    assertThat (Streams.last (stream)).isEmpty ();
    assertThat (count).hasValue (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27550977_27551044_9_16
27550977_27551157_8_17
Title: Java Multi-Software-Threading always using main thread 
----------------------------------------

public void run () {
    for (int i = 0;
    i < n; i ++) {
        System.out.print (i);
        System.out.print (" | ");
        System.out.print (Thread.currentThread ().getName ());
        System.out.println ();
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < n; i ++) {
        System.out.print (i);
        System.out.print (" | ");
        System.out.print (Thread.currentThread ().getName ());
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27564936_27565062_1_19
27564936_27565364_2_25
Title: Count word length with occurrence 
----------------------------------------

public static void main (String [] args) {
    final String input = "I love my work";
    final String [] words = input.split (" ");
    final Map < Integer, Integer > occurencesMap = new HashMap < Integer, Integer > ();
    for (final String word : words) {
        final int lenght = word.length ();
        if (occurencesMap.get (lenght) == null) {
            occurencesMap.put (lenght, 1);
        } else {
            occurencesMap.put (lenght, occurencesMap.get (lenght) + 1);
        }
    }
    System.out.println ("The word count is -");
    final Iterator < Map.Entry < Integer, Integer > > entries = occurencesMap.entrySet ().iterator ();
    while (entries.hasNext ()) {
        final Map.Entry < Integer, Integer > entry = entries.next ();
        System.out.println ("No. of words of length " + entry.getKey () + " are " + entry.getValue ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String s;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter a String :");
    s = sc.nextLine ();
    HashMap < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (String str : s.split (" ")) {
        int key = str.length ();
        if (map.containsKey (key)) {
            map.put (key, map.get (key) + 1);
        } else {
            map.put (key, 1);
        }
    }
    Iterator < Integer > iterator = map.keySet ().iterator ();
    while (iterator.hasNext ()) {
        int key = iterator.next ();
        System.out.println ("No. of words of length " + key + " are " + map.get (key) + ".");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27587309_27587351_20_27
27587309_27587823_1_8
Title: How can I simplify these For-Loops? 
----------------------------------------

public static void main (String [] args) {
    for (int c = Size;
    c >= 1; c --) {
        printRow (c);
    }
    for (int c = 2;
    c <= Size; c ++) {
        printRow (c);
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int c = 1;
    c <= 10; c ++) {
        System.out.println (printPadded (11 - c, '*', (c - 1) * 2, ' '));
    }
    for (int f = 10;
    f >= 2; f --) {
        System.out.println (printPadded (11 - f, '*', (f - 1) * 2, ' '));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27588111_27588133_6_22
27588111_27588190_1_15
Title: Error: Keyboard cannot be resolved 
----------------------------------------

public static void main (String args []) {
    int i, n;
    int [] myList = new int [100];
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("n= ");
    n = keyboard.nextInt ();
    for (i = 0; i < n; i ++) {
        System.out.println ("myList[" + i + "]= ");
        myList [i] = keyboard.nextInt ();
    }
    for (i = 0; i < n; i ++) System.out.println (myList [i]);

    keyboard.close ();
}
----------------------------------------

public static void main (String args []) {
    int i, n;
    int [] myList = new int [100];
    Scanner keyboard = new Scanner ();
    System.out.println ("n= ");
    n = keyboard.next ();
    for (i = 1; i <= n; i ++) {
        System.out.println ("myList[" + i + "]= ");
        mylist [i] = keyboard.next ();
    }
    for (i = 1; i <= n; i ++) System.out.println ("list values" + myList [i]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27613915_27614345_100_121
27613915_27614345_126_140
Title: Query on creating separate thread in java? 
----------------------------------------

public void propertyChange (PropertyChangeEvent evt) {
    if (evt.getNewValue () == SwingWorker.StateValue.DONE) {
        mainGui.closeProgressBarDialog ();
        try {
            int numberOfRows = firstWorker.get ();
            boolean getAllData = mainGui.showOptionGetAllData (numberOfRows);
            if (getAllData) {
                secondWorker = workers.createSecondWorker ();
                secondWorker.addPropertyChangeListener (new SecondPropertyChangeListener ());
                secondWorker.execute ();
                mainGui.showProgressBarDialog ();
            } else {
                workers.cleanUp ();
            }
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (ExecutionException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void propertyChange (PropertyChangeEvent evt) {
    if (evt.getNewValue () == SwingWorker.StateValue.DONE) {
        mainGui.closeProgressBarDialog ();
        try {
            List < String > finalData = secondWorker.get ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        } catch (ExecutionException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27613956_30205939_296_339
27613956_30205939_383_414
Title: bluetooth android server socket issue 
----------------------------------------

public void run () {
    Log.d (TAG, "Socket Type: " + mSocketType + "BEGIN mAcceptThread" + this);
    setName ("AcceptThread" + mSocketType);
    BluetoothSocket socket = null;
    while (mState != STATE_CONNECTED) {
        try {
            socket = mmServerSocket.accept ();
        } catch (IOException e) {
            Log.e (TAG, "Socket Type: " + mSocketType + "accept() failed", e);
            break;
        }
        if (socket != null) {
            synchronized (BluetoothChatService.this) {
                switch (mState) {
                    case STATE_LISTEN :
                    case STATE_CONNECTING :
                        connected (socket, socket.getRemoteDevice (), mSocketType);
                        break;
                    case STATE_NONE :
                    case STATE_CONNECTED :
                        try {
                            socket.close ();
                        } catch (IOException e) {
                            Log.e (TAG, "Could not close unwanted socket", e);
                        }
                        break;
                }
            }
        }
    }
    Log.i (TAG, "END mAcceptThread, socket Type: " + mSocketType);
}
----------------------------------------

public void run () {
    Log.i (TAG, "BEGIN mConnectThread SocketType:" + mSocketType);
    setName ("ConnectThread" + mSocketType);
    mAdapter.cancelDiscovery ();
    try {
        mmSocket.connect ();
    } catch (IOException e) {
        try {
            mmSocket.close ();
        } catch (IOException e2) {
            Log.e (TAG, "unable to close() " + mSocketType + " socket during connection failure", e2);
        }
        connectionFailed ();
        return;
    }
    synchronized (BluetoothChatService.this) {
        mConnectThread = null;
    }
    connected (mmSocket, mmDevice, mSocketType);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27613956_30205939_296_339
27613956_30205939_452_474
Title: bluetooth android server socket issue 
----------------------------------------

public void run () {
    Log.d (TAG, "Socket Type: " + mSocketType + "BEGIN mAcceptThread" + this);
    setName ("AcceptThread" + mSocketType);
    BluetoothSocket socket = null;
    while (mState != STATE_CONNECTED) {
        try {
            socket = mmServerSocket.accept ();
        } catch (IOException e) {
            Log.e (TAG, "Socket Type: " + mSocketType + "accept() failed", e);
            break;
        }
        if (socket != null) {
            synchronized (BluetoothChatService.this) {
                switch (mState) {
                    case STATE_LISTEN :
                    case STATE_CONNECTING :
                        connected (socket, socket.getRemoteDevice (), mSocketType);
                        break;
                    case STATE_NONE :
                    case STATE_CONNECTED :
                        try {
                            socket.close ();
                        } catch (IOException e) {
                            Log.e (TAG, "Could not close unwanted socket", e);
                        }
                        break;
                }
            }
        }
    }
    Log.i (TAG, "END mAcceptThread, socket Type: " + mSocketType);
}
----------------------------------------

public void run () {
    Log.i (TAG, "BEGIN mConnectedThread");
    byte [] buffer = new byte [1024];
    int bytes;
    while (true) {
        try {
            bytes = mmInStream.read (buffer);
            mHandler.obtainMessage (Constants.MESSAGE_READ, bytes, - 1, buffer).sendToTarget ();
        } catch (IOException e) {
            Log.e (TAG, "disconnected", e);
            connectionLost ();
            BluetoothChatService.this.start ();
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27613956_30205939_383_414
27613956_30205939_452_474
Title: bluetooth android server socket issue 
----------------------------------------

public void run () {
    Log.i (TAG, "BEGIN mConnectThread SocketType:" + mSocketType);
    setName ("ConnectThread" + mSocketType);
    mAdapter.cancelDiscovery ();
    try {
        mmSocket.connect ();
    } catch (IOException e) {
        try {
            mmSocket.close ();
        } catch (IOException e2) {
            Log.e (TAG, "unable to close() " + mSocketType + " socket during connection failure", e2);
        }
        connectionFailed ();
        return;
    }
    synchronized (BluetoothChatService.this) {
        mConnectThread = null;
    }
    connected (mmSocket, mmDevice, mSocketType);
}
----------------------------------------

public void run () {
    Log.i (TAG, "BEGIN mConnectedThread");
    byte [] buffer = new byte [1024];
    int bytes;
    while (true) {
        try {
            bytes = mmInStream.read (buffer);
            mHandler.obtainMessage (Constants.MESSAGE_READ, bytes, - 1, buffer).sendToTarget ();
        } catch (IOException e) {
            Log.e (TAG, "disconnected", e);
            connectionLost ();
            BluetoothChatService.this.start ();
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2762093_2762137_6_30
2762093_44666622_5_22
Title: Java Compare Two Lists 
----------------------------------------

public static void main (String [] args) {
    Collection < String > listOne = Arrays.asList ("milan", "iga", "dingo", "iga", "elpha", "iga", "hafil", "iga", "meat", "iga", "neeta.peeta", "iga");
    Collection < String > listTwo = Arrays.asList ("hafil", "iga", "binga", "mike", "dingo", "dingo", "dingo");
    Collection < String > similar = new HashSet < String > (listOne);
    Collection < String > different = new HashSet < String > ();
    different.addAll (listOne);
    different.addAll (listTwo);
    similar.retainAll (listTwo);
    different.removeAll (similar);
    System.out.printf ("One:%s%nTwo:%s%nSimilar:%s%nDifferent:%s%n", listOne, listTwo, similar, different);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > one = new ArrayList < String > ();
    one.add ("one");
    one.add ("two");
    one.add ("six");
    ArrayList < String > two = new ArrayList < String > ();
    two.add ("one");
    two.add ("six");
    two.add ("two");
    System.out.println ("Output1 :: " + compareList (one, two));
    two.add ("ten");
    System.out.println ("Output2 :: " + compareList (one, two));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27621461_27621481_1_15
27621461_27621588_1_14
Title: duplicating a 2D array in a loop using basic commands 
----------------------------------------

public static int [] [] copyMatrix (int [] [] matrix) {
    if (matrix.length < 1) {
        return new int [0] [0];
    }
    int [] [] duplicateMatrix = new int [matrix.length] [matrix [0].length];
    for (int i = 0;
    (i < matrix.length); i ++) {
        for (int j = 0;
        (j < matrix [i].length); j ++) {
            duplicateMatrix [i] [j] = matrix [i] [j];
        }
    }
    return duplicateMatrix;
}
----------------------------------------

public static int [] [] copyMatrix (int [] [] matrix) {
    int [] [] duplicateMatrix = new int [matrix.length] [];
    for (int i = 0;
    (i < matrix.length); i ++) {
        duplicateMatrix [i] = new int [matrix [i].length];
        for (int j = 0;
        (j < matrix [i].length); j ++) {
            duplicateMatrix [i] [j] = matrix [i] [j];
        }
    }
    return duplicateMatrix;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27631648_27631726_31_55
27631648_27631726_59_74
Title: """Cannot Find Symbol"" error in constructor and passing ArrayList from class to class" 
----------------------------------------

public void actionPerformed (ActionEvent jh) {
    String path = files.get (++ index).getPath ();
    System.out.println ("path: " + path);
    File song = new File (path);
    String name = song.getName ();
    name.replace (".mp3", "");
    label.setText ("Now Playing " + name);
    try {
        FileInputStream fis = new FileInputStream (song);
        BufferedInputStream bis = new BufferedInputStream (fis);
        Player player = new Player (bis);
        try {
            player.play ();
        } catch (Exception e) {
        }
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent jk) {
    try {
        player.close ();
    } catch (Exception e) {
    }
    if (index == files.size ()) {
        index = - 1;
    }
    String path = files.get (++ index).getPath ();
    System.out.println ("path: " + path);
    File song = new File (path);
    String name = song.getName ();
    name.replace (".mp3", "");
    label.setText ("Now Playing " + name);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27635757_27636617_11_21
27635757_34146539_78_94
Title: Remove duplicate in ArrayList of Custom objects 
----------------------------------------

public boolean equals (Object o) {
    if (this == o) return true;

    if (o == null || getClass () != o.getClass ()) return false;

    MyObject myObject = (MyObject) o;
    if (Double.compare (myObject.x, x) != 0) return false;

    if (Double.compare (myObject.y, y) != 0) return false;

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Employee other = (Employee) obj;
    if (name == null) {
        if (other.name != null) return false;

    } else if (! name.equals (other.name)) return false;

    if (no != other.no) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27636052_27636494_1_23
27636052_27636543_1_24
Title: Checking characters in a string 
----------------------------------------

public static void main (String [] args) {
    int i, T, j, count;
    String S;
    char K;
    count = 0;
    Scanner scan = new Scanner (System.in);
    T = scan.nextInt ();
    for (i = 0; i <= T - 1; i ++) {
        scan = new Scanner (System.in);
        count = 0;
        S = scan.nextLine ();
        char [] list = new char [S.length ()];
        for (j = 0; j <= S.length () - 1; j ++) {
            list [j] = S.charAt (j);
        }
        for (j = 1; j <= S.length () - 1; j ++) {
            if (list [j - 1] == list [j]) {
                count ++;
            }
        }
        System.out.println (count);
    }
}
----------------------------------------

public static void main (String [] args) {
    int numInput;
    String inputString;
    Scanner scanner = new Scanner (System.in);
    numInput = scanner.nextInt ();
    for (int y = 0;
    y < numInput; y ++) {
        inputString = scanner.next ();
        char [] chars = inputString.toCharArray ();
        int counter = 0;
        char curr;
        for (int x = 0;
        x < chars.length; x ++) {
            curr = chars [x];
            if (x > 0) {
                if (chars [x - 1] == curr) {
                    counter ++;
                }
            }
        }
        System.out.println ("Count for string " + inputString + " was " + counter);
    }
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27644510_27644541_4_16
27644510_27644555_4_16
Title: What am I doing wrong in a string to double conversion? 
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    double r;
    r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    double h;
    h = Double.parseDouble (input);
    double pi = 3.1415926535;
    double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    Double r;
    r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    Double h;
    h = Double.parseDouble (input);
    Double pi = 3.1415926535;
    Double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27644510_27644541_4_16
27644510_27644685_3_13
Title: What am I doing wrong in a string to double conversion? 
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    double r;
    r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    double h;
    h = Double.parseDouble (input);
    double pi = 3.1415926535;
    double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    double r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    double h = Double.parseDouble (input);
    double pi = 3.1415926535;
    double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27644510_27644555_4_16
27644510_27644685_3_13
Title: What am I doing wrong in a string to double conversion? 
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    Double r;
    r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    Double h;
    h = Double.parseDouble (input);
    Double pi = 3.1415926535;
    Double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------

public static void main (String [] args) {
    String input;
    input = JOptionPane.showInputDialog ("What is the radius of the cylinder?");
    double r = Double.parseDouble (input);
    input = JOptionPane.showInputDialog ("What is the height of the cylinder?");
    double h = Double.parseDouble (input);
    double pi = 3.1415926535;
    double volume = pi * r * r * h;
    System.out.println ("The volume of the cylinder is: " + volume + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_107_129
27648010_27649216_25_41
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id2")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID2 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    clavier = new Scanner (System.in);
    while (true) {
        try {
            sleep (1000);
        } catch (Exception e) {
        }
        System.out.print ("tape message :");
        String nextLine = clavier.nextLine ();
        queu.add (nextLine);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_107_129
27648010_27649216_49_71
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id2")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID2 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id1")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID1 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_107_129
27648010_27649216_78_100
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id2")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID2 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id3")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID3 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_25_41
27648010_27649216_49_71
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    clavier = new Scanner (System.in);
    while (true) {
        try {
            sleep (1000);
        } catch (Exception e) {
        }
        System.out.print ("tape message :");
        String nextLine = clavier.nextLine ();
        queu.add (nextLine);
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id1")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID1 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_25_41
27648010_27649216_78_100
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    clavier = new Scanner (System.in);
    while (true) {
        try {
            sleep (1000);
        } catch (Exception e) {
        }
        System.out.print ("tape message :");
        String nextLine = clavier.nextLine ();
        queu.add (nextLine);
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id3")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID3 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648010_27649216_49_71
27648010_27649216_78_100
Title: Feeding several threads with data Java 
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id1")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID1 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            try {
                wait ();
            } catch (Exception e) {
            }
            synchronized (this) {
                String get = queu.get (0);
                String [] messageFormat = get.split (":");
                String id = messageFormat [0];
                if (id.toLowerCase ().equals ("id3")) {
                    String message = messageFormat [0];
                    queu.remove (0);
                    System.out.println ("message recived to thread ID3 :" + message);
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27648068_27648738_32_78
27648068_27648738_86_116
Title: Quiz implementation using sleep() method of thread 
----------------------------------------

public void run () {
    System.out.println ("welcome to quiz v1.0");
    try {
        sleep (1000);
    } catch (InterruptedException ex) {
        Logger.getLogger (quiz.class.getName ()).log (Level.SEVERE, null, ex);
    }
    int questionIndex = 0;
    while (true) {
        try {
            questionIndex = (int) (Math.random () * questions.length);
            System.out.println (questions [questionIndex]);
            int count = 0;
            wait = true;
            while (wait) {
                sleep (1000);
                count ++;
                if (count == 10) {
                    reader.stop ();
                    wait = false;
                }
            }
            wait = false;
            if (answers [questionIndex].toLowerCase ().trim ().equals (answer.toLowerCase ().trim ())) {
                System.out.println ("congratulation");
            } else {
                if (answer.equals ("")) {
                    System.out.println ("you r an idio try harder");
                } else {
                    System.out.println ("good try but answer is false :p next time");
                }
            }
            answer = "";
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    keyboard = new Scanner (System.in);
    while (true) {
        while (! wait) {
            try {
                sleep (1000);
            } catch (InterruptedException ex) {
                Logger.getLogger (quiz.class.getName ()).log (Level.SEVERE, null, ex);
            }
            try {
            } catch (Exception e) {
            }
            System.out.print ("answer: ");
            reader = new Thread () {
                @Override
                public void run () {
                    answer = keyboard.nextLine ();
                    wait = false;
                }}

            ;
            reader.run ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2765478_2767119_1_11
2765478_2767788_1_16
Title: Find all numbers that appear in each of a set of lists 
----------------------------------------

public static List < Integer > intersection (Collection < List < Integer > > lists) {
    if (lists.size () == 0) return Collections.emptyList ();

    Iterator < List < Integer > > it = lists.iterator ();
    HashSet < Integer > resSet = new HashSet < Integer > (it.next ());
    while (it.hasNext ()) resSet.retainAll (new HashSet < Integer > (it.next ()));

    return new ArrayList < Integer > (resSet);
}
----------------------------------------

public List < Integer > intersection (Iterable < List < Integer > > lists) {
    Iterator < List < Integer > > listsIter = lists.iterator ();
    if (! listsIter.hasNext ()) return Collections.emptyList ();

    Set < Integer > bag = new HashSet < Integer > (listsIter.next ());
    while (listsIter.hasNext () && ! bag.isEmpty ()) {
        Iterator < Integer > itemIter = listsIter.next ().iterator ();
        Set < Integer > holder = new HashSet < Integer > ();
        Integer held;
        while (itemIter.hasNext () && ! bag.isEmpty ()) if (bag.remove (held = itemIter.next ())) holder.add (held);

        bag = holder;
    }
    return new ArrayList < Integer > (bag);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27655857_27656369_9_23
27655857_27656676_7_26
Title: How do I get my InputStream to give me lines as a String array? 
----------------------------------------

public String [] getLines (int start, int stop) {
    fastForward (start);
    int stopVal = stop <= start ? Integer.MAX_VALUE : stop - start;
    final List < String > rows = new ArrayList < > ();
    for (int i = 0;
    i < stopVal; i ++) {
        if (scanner.hasNextLine ()) {
            rows.add (scanner.nextLine ());
        } else {
            break;
        }
    }
    return rows.toArray (new String [rows.size ()]);
}
----------------------------------------

String [] getLines (int start, int stop) {
    ArrayList < String > list = new ArrayList < String > ();
    BufferedReader reader = new BufferedReader (new InputStreamReader (myInputStream));
    String line;
    Integer count = 1;
    try {
        while ((line = reader.readLine ()) != null) {
            if (count >= start) {
                if (stop == 0 || count <= stop) list.add (line);

            }
            count ++;
        }
        reader.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return list.toArray (new String [list.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27710169_27714510_1_14
27710169_36236910_1_30
Title: ksoap2 v prefixo to any other prefix 
----------------------------------------

public void write (XmlSerializer writer) throws IOException {
    writer.setPrefix ("i", xsi);
    writer.setPrefix ("d", xsd);
    writer.setPrefix ("c", enc);
    writer.setPrefix ("v", env);
    writer.startTag (env, "Envelope");
    writer.startTag (env, "Header");
    writeHeader (writer);
    writer.endTag (env, "Header");
    writer.startTag (env, "Body");
    writeBody (writer);
    writer.endTag (env, "Body");
    writer.endTag (env, "Envelope");
}
----------------------------------------

@Override
public void write (XmlSerializer writer) throws IOException {
    Log.d ("DEBUG", "XML create process started");
    env = "http://schemas.xmlsoap.org/soap/envelope/";
    String tem = "http://tempuri.org/";
    String ner = "http://schemas.datacontract.org/2004/07/MYSERVICE";
    writer.startDocument ("UTF-8", true);
    writer.setPrefix ("soapenv", env);
    writer.setPrefix ("tem", tem);
    writer.setPrefix ("ner", ner);
    writer.startTag (env, "Envelope");
    writer.startTag (env, "Header");
    writeHeader (writer);
    writer.endTag (env, "Header");
    writer.startTag (env, "Body");
    writer.startTag (tem, "Method");
    writer.startTag (tem, "inputObject");
    writer.startTag (ner, "property");
    writer.text ("property value");
    writer.endTag (ner, "property");
    writeBody (writer);
    writer.endTag (tem, "inputObject");
    writer.endTag (tem, "Method");
    writer.endTag (env, "Body");
    writer.endTag (env, "Envelope");
    writer.endDocument ();
    Log.d ("DEBUG", "XML created");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27718474_27718641_18_30
27718474_27718736_1_23
Title: Java JButton it is not running truly 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Start");
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (300, 300);
    JPanel panel = new JPanel ();
    frame.add (panel);
    JButton button = new JButton ("Click here");
    panel.add (button);
    button.addActionListener (new Action ());
    frame.setVisible (true);
    System.out.println ("End");
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                ex.printStackTrace ();
            }
            JFrame frame = new JFrame ("Testing");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            JPanel panel = new JPanel ();
            frame.add (panel);
            JButton button = new JButton ("Click here");
            panel.add (button);
            button.addActionListener (new Action ());
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27725968_27726674_120_133
27725968_27726674_186_195
Title: How to remove and replace a JPanel using a button click? 
----------------------------------------

protected Color doInBackground () throws Exception {
    int randomColors = 1 + (int) (Math.random () * 100);
    Color color = null;
    for (int index = 0;
    index < randomColors; index ++) {
        int red = (int) (Math.random () * 255);
        int green = (int) (Math.random () * 255);
        int blue = (int) (Math.random () * 255);
        color = new Color (red, green, blue);
        publish (color);
        Thread.sleep (40);
    }
    System.out.println (color);
    return color;
}
----------------------------------------

protected Integer doInBackground () throws Exception {
    int randomNumbers = (int) (Math.random () * 100);
    int number = 0;
    for (int index = 0;
    index < randomNumbers; index ++) {
        number = (int) (Math.random () * 1024);
        publish (number);
        Thread.sleep (40);
    }
    return number;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27725968_27726674_136_145
27725968_27726674_198_207
Title: How to remove and replace a JPanel using a button click? 
----------------------------------------

protected void done () {
    try {
        Color color = get ();
        colorPane.setBackground (color);
    } catch (InterruptedException ex) {
        ex.printStackTrace ();
    } catch (ExecutionException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

protected void done () {
    try {
        int number = get ();
        numberPane.setNumber (number);
    } catch (InterruptedException ex) {
        ex.printStackTrace ();
    } catch (ExecutionException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27726339_27726371_4_12
27726339_27726379_7_15
Title: I am getting exceptions in this program of reading strings and unable to figure it out 
----------------------------------------

public static void main (String args []) throws IOException {
    char c;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter characters,'q' to quit");
    do {
        c = (char) br.read ();
        System.out.println (c);
    } while (c != 'q');
}
----------------------------------------

public static void main (String args []) throws IOException {
    char c;
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("enter characters,'q' to quit");
    do {
        c = (char) br.read ();
        System.out.println (c);
    } while (c != 'q');
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2772763_19888501_6_14
2772763_2772807_1_11
Title: why equals() method when we have == operator? 
----------------------------------------

public boolean equals (Object obj) {
    Employee other = (Employee) obj;
    if (name == null) {
        if (other.name != null) return false;

    } else if (! name.equals (other.name)) return false;

    return true;
}
----------------------------------------

public boolean equals (Object o) {
    if (o == this) return true;

    if (! (o instanceof Set)) return false;

    Set s = (Set) o;
    if (s.size () != c.size ()) return false;

    return containsAll (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27734683_27734715_10_21
27734683_27734781_21_34
Title: Why a finally block can't modify a returned Integer type data from catch block. Java 
----------------------------------------

MutableInteger getInt () {
    MutableInteger returnVal = new MutableInteger (10);
    try {
        throw new Exception ();
    } catch (Exception e) {
        return returnVal;
    } finally {
        returnVal.value += 10;
    }
}
----------------------------------------

MyInteger getInt () {
    MyInteger returnVal = new MyInteger (10);
    try {
        String [] students = {"Harry", "Paul"};
        System.out.println (students [3]);
    } catch (Exception e) {
        return returnVal;
    } finally {
        returnVal.add (10);
    }
    return returnVal;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27737781_27738182_21_33
27737781_27739235_15_24
Title: How to implement round-robin order for PriorityBlockingQueue? 
----------------------------------------

public boolean add (P producer, E item) {
    lock.lock ();
    try {
        if (! queues.containsKey (producer)) {
            queues.put (producer, new PriorityBlockingQueue < > ());
        }
        added.signalAll ();
        return queues.get (producer).add (item);
    } finally {
        lock.unlock ();
    }
}
----------------------------------------

public synchronized void add (M msg) {
    Queue < M > queue = threadQueue.get ();
    if (queue == null) {
        queue = new LinkedList < > ();
        queues.add (queue);
        threadQueue.set (queue);
    }
    queue.add (msg);
    notify ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27738506_27749288_1_23
27738506_47834647_1_36
Title: How to prevent GOBACK button for specific URL in Android Webview? 
----------------------------------------

@Override
public boolean onKeyDown (int keyCode, KeyEvent event) {
    if (event.getAction () == KeyEvent.ACTION_DOWN) {
        switch (keyCode) {
            case KeyEvent.KEYCODE_BACK :
                String url = new String ("http://www.YourDomainName.com/PageAfterSuccessfulLogin");
                String webUrl = new String (webView.getUrl ());
                if (url.equals (webUrl)) {
                    Toast.makeText (this, "You are logged in", Toast.LENGTH_SHORT).show ();
                } else {
                    if (webView.canGoBack ()) {
                        Toast.makeText (this, "Back", Toast.LENGTH_SHORT).show ();
                        webView.goBack ();
                    }
                }
                return true;
        }
    }
    return super.onKeyDown (keyCode, event);
}
----------------------------------------

@Override
public boolean onKeyDown (int keyCode, KeyEvent event) {
    if (event.getAction () == KeyEvent.ACTION_DOWN) {
        switch (keyCode) {
            case KeyEvent.KEYCODE_BACK :
                String url = new String ("https://www.domain name.com/index.php?logged=login%20successfully");
                String webUrl = new String (webView.getUrl ());
                if (url.equals (webUrl)) {
                    Toast.makeText (this, "You are logged in", Toast.LENGTH_SHORT).show ();
                } else {
                    url = new String ("https://www.domain name.com/main.php");
                    webUrl = new String (webView.getUrl ());
                    if (url.equals (webUrl)) {
                        Toast.makeText (this, "Access Denied", Toast.LENGTH_SHORT).show ();
                    } else if (webView.canGoBack ()) {
                        Toast.makeText (this, "Back", Toast.LENGTH_SHORT);
                        webView.goBack ();
                    }

                }
                return true;
        }
    }
    return super.onKeyDown (keyCode, event);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27739833_27834038_122_138
27739833_35059829_174_193
Title: Adapt TableView menu button 
----------------------------------------

private static TableHeaderRow getTableHeaderRow (TableViewSkin < ? > tableSkin) {
    ObservableList < Node > children = tableSkin.getChildren ();
    for (int i = 0;
    i < children.size (); i ++) {
        Node node = children.get (i);
        if (node instanceof TableHeaderRow) {
            return (TableHeaderRow) node;
        }
    }
    return null;
}
----------------------------------------

private TableHeaderRow getTableHeaderRow () {
    TableViewSkin < ? > tableSkin = (TableViewSkin < ? >) tableView.getSkin ();
    if (tableSkin == null) {
        return null;
    }
    ObservableList < Node > children = tableSkin.getChildren ();
    for (int i = 0;
    i < children.size (); i ++) {
        Node node = children.get (i);
        if (node instanceof TableHeaderRow) {
            return (TableHeaderRow) node;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27739833_27834038_122_138
27739833_45331493_154_171
Title: Adapt TableView menu button 
----------------------------------------

private static TableHeaderRow getTableHeaderRow (TableViewSkin < ? > tableSkin) {
    ObservableList < Node > children = tableSkin.getChildren ();
    for (int i = 0;
    i < children.size (); i ++) {
        Node node = children.get (i);
        if (node instanceof TableHeaderRow) {
            return (TableHeaderRow) node;
        }
    }
    return null;
}
----------------------------------------

private TableHeaderRow getTableHeaderRow () {
    TableViewSkin < ? > tableSkin = (TableViewSkin < ? >) tableView.getSkin ();
    if (tableSkin == null) {
        return null;
    }
    ObservableList < Node > children = tableSkin.getChildren ();
    for (int i = 0;
    i < children.size (); i ++) {
        Node node = children.get (i);
        if (node instanceof TableHeaderRow) {
            return (TableHeaderRow) node;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27739833_35059829_102_120
27739833_45331493_64_100
Title: Adapt TableView menu button 
----------------------------------------

private void registerListeners () {
    final Node buttonNode = findButtonNode ();
    tableView.addEventHandler (KeyEvent.KEY_PRESSED, ke -> {
        if (showMenuByKeyboardCheck.apply (ke)) {
            showContextMenu ();
            ke.consume ();
        }
    });
    buttonNode.setOnMousePressed (me -> {
        showContextMenu ();
        me.consume ();
    });
}
----------------------------------------

private void registerListeners () {
    final Node buttonNode = findButtonNode ();
    tableView.addEventHandler (KeyEvent.KEY_PRESSED, ke -> {
        if (showMenuByKeyboardCheck.apply (ke)) {
            showContextMenu ();
            ke.consume ();
        }
    });
    buttonNode.setOnMousePressed (me -> {
        showContextMenu ();
        me.consume ();
    });
    tableView.getColumns ().addListener (new ListChangeListener < TableColumn < ?, ? > > () {
        @Override
        public void onChanged (javafx.collections.ListChangeListener.Change < ? extends TableColumn < ?, ? > > c) {
            while (c.next ()) {
                if (c.getAddedSize () > 0) {
                    for (TableColumn < ?, ? > tc : c.getAddedSubList ()) {
                        if (turnedOff.contains (tc.getText ())) {
                            tc.setVisible (false);
                        }
                    }
                }
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27744163_27744672_36_49
27744163_27748832_17_37
Title: How one thread can wait until another one finishes to fire some actions 
----------------------------------------

public void run () {
    long start = System.currentTimeMillis ();
    System.out.println ("Loading file on Thread [" + Thread.currentThread ().getName () + "]");
    try {
        Thread.sleep (TimeUnit.SECONDS.toMillis (2));
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    long end = System.currentTimeMillis ();
    completionFuture.complete (end - start);
}
----------------------------------------

public void run () {
    if (fileLoadIndicatorExecutor == null || fileLoadIndicatorExecutor.isShutdown ()) {
        fileLoadIndicatorExecutor = Executors.newCachedThreadPool (CustomizableThreadFactory.createSingleNamedFactory ("FileLoaderThreadPool"));
    }
    for (int i = 0;
    number_of_files; i ++) {
        fileLoadIndicatorExecutor.execute (new FileThreadThread ());
    }
    fileLoadIndicatorExecutor.shutdown ();
    while (isRunning) {
        boolean threadTerminated = fileLoadIndicatorExecutor.awaitTermination (Long.MAX_VALUE, TimeUnit.NANOSECONDS);
        if (threadTerminated) {
            isRunning = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27746622_27747809_17_33
27746622_27747857_1_29
Title: JavaFx 8 Bidirectional binding 
----------------------------------------

public static void main (String [] args) {
    final DoubleProperty amount = new SimpleDoubleProperty (100_000.00);
    final DoubleProperty rate = new SimpleDoubleProperty ();
    final DoubleProperty part = new SimpleDoubleProperty ();
    NumberBiBinding.bind (rate, rate.multiply (amount), part, part.divide (amount));
    System.out.println ("Amount: " + amount.get ());
    rate.set (0.025);
    System.out.println ("Part is " + part.get () + " when rate is set to " + rate.get ());
    part.set (1200);
    System.out.println ("Rate is " + rate.get () + " when part is set to " + part.get ());
}
----------------------------------------

public static void main (String [] args) {
    final DoubleProperty amount = new SimpleDoubleProperty (100_000.00);
    final DoubleProperty part = new SimpleDoubleProperty ();
    final DoubleProperty rate = new SimpleDoubleProperty ();
    part.addListener (new InvalidationListener () {
        @Override
        public void invalidated (Observable observable) {
            System.out.println ("part is invalid");
            rate.set (part.get () / amount.get ());
        }}

    );
    rate.addListener (new InvalidationListener () {
        @Override
        public void invalidated (Observable observable) {
            System.out.println ("rate is invalid");
            part.set (rate.get () * amount.get ());
        }}

    );
    System.out.println ("setting rate");
    rate.set (0.025);
    System.out.println ("Part: " + part.get ());
    System.out.println ("setting part");
    part.set (1200);
    System.out.println ("Rate: " + rate.get ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27749981_27750017_1_14
27749981_27750137_1_17
Title: Coding Bat Recursion exercise (java) 
----------------------------------------

public String changeXY (String str) {
    if (str.length () == 0) {
        return str;
    }
    if (str.charAt (0) == 'x') {
        return 'y' + changeXY (str.substring (1));
    }
    return str.charAt (0) + changeXY (str.substring (1));
}
----------------------------------------

public String changeXY (String str) {
    int len = str.length ();
    String changedStr = "";
    for (int i = 0;
    i < len; i ++) {
        if (str.charAt (i) == 'x') {
            changedStr += "y";
        } else {
            changedStr += str.charAt (i);
        }
    }
    if (len == 0) return str;

    return changedStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27749981_27750017_1_14
27749981_27750162_1_14
Title: Coding Bat Recursion exercise (java) 
----------------------------------------

public String changeXY (String str) {
    if (str.length () == 0) {
        return str;
    }
    if (str.charAt (0) == 'x') {
        return 'y' + changeXY (str.substring (1));
    }
    return str.charAt (0) + changeXY (str.substring (1));
}
----------------------------------------

public String changeXY (String string) {
    string = string.toLowerCase ();
    if (string.length () == 0) {
        return string;
    } else if (str.charAt (0) == 'x') {
        return 'y' + changeXY (str.substring (1));
    }

    return str.charAt (0) + changeXY (str.substring (1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27749981_27750137_1_17
27749981_27750162_1_14
Title: Coding Bat Recursion exercise (java) 
----------------------------------------

public String changeXY (String str) {
    int len = str.length ();
    String changedStr = "";
    for (int i = 0;
    i < len; i ++) {
        if (str.charAt (i) == 'x') {
            changedStr += "y";
        } else {
            changedStr += str.charAt (i);
        }
    }
    if (len == 0) return str;

    return changedStr;
}
----------------------------------------

public String changeXY (String string) {
    string = string.toLowerCase ();
    if (string.length () == 0) {
        return string;
    } else if (str.charAt (0) == 'x') {
        return 'y' + changeXY (str.substring (1));
    }

    return str.charAt (0) + changeXY (str.substring (1));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27755401_27755659_1_13
27755401_27764630_7_25
Title: How do I remove duplicates from two arrays? 
----------------------------------------

public void clear (int [] A, int [] B) {
    for (int i = 0;
    i < A.length; i ++) {
        for (int j = 0;
        j < B.length; j ++) if (A [i] == B [j]) {
            for (int k = i;
            k < A.length; k ++) A [k] = A [k + 1];

            j = B.length - 1;
        }

    }
}
----------------------------------------

public static int [] clear (int [] A, int [] B) {
    int a = 0;
    for (int i = 0;
    i < A.length; i ++) {
        for (int j = 0;
        j < B.length; j ++) {
            if (A [i] == B [j]) {
                a ++;
                for (int k = i;
                k < A.length - a; k ++) {
                    A [k] = A [k + 1];
                }
            }
        }
    }
    int [] C = new int [A.length - a];
    for (int p = 0;
    p < C.length; p ++) C [p] = A [p];

    return C;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27755401_27755677_1_33
27755401_27757404_1_31
Title: How do I remove duplicates from two arrays? 
----------------------------------------

public void clearDuplicates (int [] A, int [] B) {
    final Set < Integer > notInB = new HashSet < > ();
    for (int i = 0;
    i <= 90; i ++) {
        notInB.add (i);
    }
    final Set < Integer > bSet = new HashSet < > ();
    for (final int b : B) {
        bSet.add (b);
        notInB.remove (b);
    }
    for (int i = 0;
    i < A.length; i ++) {
        if (bSet.contains (A [i])) {
            if (! notInB.isEmpty ()) {
                A [i] = notInB.iterator ().next ();
                notInB.remove (A [i]);
            } else {
                return;
            }
        }
    }
}
----------------------------------------

public void clearDuplicates (int [] A, int [] B) {
    int duplicate = 0;
    for (int i = 0;
    i < A.length; i ++) {
        for (int j = 0;
        j < B.length; j ++) if (A [i] == B [j]) duplicate ++;

    }
    int [] newA = new int [A.length - duplicate];
    int notDuplicate = 0;
    boolean check;
    for (int i = 0;
    i < A.length; i ++) {
        check = true;
        for (int j = 0;
        j < B.length; j ++) {
            if (A [i] == B [j]) {
                check = false;
                notDuplicate --;
            }
        }
        if (check) newA [notDuplicate] = A [i];

        notDuplicate ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27757955_27758018_1_25
27757955_27758123_1_14
Title: "Get an array decide if the number is closer to right/left zero" 
----------------------------------------

public static void zeroDistance (int [] a) {
    int closest = - 1;
    for (int i = 0;
    i < a.length; i ++) if (a [i] == 0) closest = 0;
    else {
        if (closest == - 1) a [i] = Integer.MAX_VALUE;
        else {
            closest ++;
            a [i] = closest;
        }
    }

    closest = - 1;
    for (int i = a.length - 1;
    i >= 0; i --) if (a [i] == 0) closest = 0;
    else if (closest != - 1 && a [i] > ++ closest) a [i] = closest;

}
----------------------------------------

public static void zeroDistance (int a []) {
    for (int x = 0;
    x < a.length; x ++) {
        if (a [x] != 0) {
            int leftdist = recurse (- 1, a, 0, x);
            int rightdist = recurse (1, a, 0, x);
            int bestdist;
            if (leftdist < 0 || rightdist < 0) bestdist = Math.max (leftdist, rightdist);
            else bestdist = Math.min (leftdist, rightdist);

            a [x] = bestdist;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27758904_27758992_1_31
27758904_27759290_99_130
Title: Dynamically set non-editable JTable row as editable 
----------------------------------------

public void setValueAt (Object value, int row, int col) {
    ProduitInBonDachat tableEtry;
    try {
        tableEtry = data.get (row);
        switch (col) {
            case 0 :
                tableEtry.setDesignationProduit ((String) value);
                break;
            case 1 :
                tableEtry.setQte ((BigDecimal) value);
                break;
            case 2 :
                tableEtry.setPrixDeVente ((BigDecimal) value);
                break;
        }
        fireTableCellUpdated (row, col);
        if (row == nextActiveRow && activeRowIsVaid ()) {
            nextRowActive ();
        }
    } catch (IndexOutOfBoundsException e) {
    }
}
----------------------------------------

public void setValueAt (Object value, int row, int col) {
    ProduitInBonDachat tableEtry;
    try {
        tableEtry = data.get (row);
    } catch (IndexOutOfBoundsException e) {
        tableEtry = new ProduitInBonDachat ();
        data.add (row, tableEtry);
    }
    switch (col) {
        case 0 :
            String valueCast = (String) value;
            if (valueCast.isEmpty ()) {
                break;
            }
            nextActiveRow ++;
            tableEtry.setDesignationProduit ((String) value);
            break;
        case 1 :
            tableEtry.setQte ((BigDecimal) value);
            break;
        case 2 :
            tableEtry.setPrixDeVente ((BigDecimal) value);
            break;
        default :
            super.setValueAt (value, row, col);
    }
    fireTableCellUpdated (row, col);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27767778_27767829_1_10
27767778_27767864_1_15
Title: How to implement circular linked list in java? 
----------------------------------------

public Link delete () {
    if (first.next == null) {
        first = null;
        last = null;
    }
    Link temp = first;
    first = first.next;
    last.next = first;
    return temp;
}
----------------------------------------

public Link delete () {
    Link temp = first;
    if (first == null) {
    } else if (first == last) {
        first = null;
        last = null;
    } else {
        first = first.next;
        last.next = first;
    }

    return temp;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27787543_27787846_24_63
27787543_27787915_25_52
Title: Dynamically checking a checkbox in onClickListener 
----------------------------------------

public void onCheckedChanged (CompoundButton buttonView, final boolean isChecked) {
    if (! isShowing) {
        isShowing = true;
        CharSequence options [];
        if (isChecked) {
            cb.setChecked (false);
            options = new CharSequence [] {"Mark as Complete", "Cancel"};
        } else {
            cb.setChecked (true);
            options = new CharSequence [] {"Mark as Incomplete", "Cancel"};
        }
        AlertDialog.Builder builder = new AlertDialog.Builder (MyActivity.this);
        builder.setItems (options, new DialogInterface.OnClickListener () {
            @Override
            public void onClick (DialogInterface dialog, int which) {
                switch (which) {
                    case 0 :
                        cb.toggle ();
                        dialog.cancel ();
                        break;
                    case 1 :
                        dialog.cancel ();
                }
            }}

        );
        builder.setOnCancelListener (new DialogInterface.OnCancelListener () {
            @Override
            public void onCancel (DialogInterface dialog) {
                isShowing = false;
            }}

        );
        builder.show ();
    }
}
----------------------------------------

public void onCheckedChanged (CompoundButton buttonView, final boolean isChecked) {
    CharSequence options [];
    if (isChecked) {
        cb.setChecked (false);
        options = new CharSequence [] {"Mark as Complete", "Cancel"};
    } else {
        cb.setChecked (true);
        options = new CharSequence [] {"Mark as Incomplete", "Cancel"};
    }
    AlertDialog.Builder builder = new AlertDialog.Builder (MainActivity.this);
    builder.setItems (options, new DialogInterface.OnClickListener () {
        @Override
        public void onClick (DialogInterface dialog, int which) {
            switch (which) {
                case 0 :
                    {
                        cb.setOnCheckedChangeListener (null);
                        cb.toggle ();
                        cb.setOnCheckedChangeListener (mOnCheckedChangeListener);
                    }}
        }}

    );
    builder.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27787543_27787846_41_53
27787543_27787915_40_49
Title: Dynamically checking a checkbox in onClickListener 
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    switch (which) {
        case 0 :
            cb.toggle ();
            dialog.cancel ();
            break;
        case 1 :
            dialog.cancel ();
    }
}
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    switch (which) {
        case 0 :
            {
                cb.setOnCheckedChangeListener (null);
                cb.toggle ();
                cb.setOnCheckedChangeListener (mOnCheckedChangeListener);
            }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27790417_27791813_24_36
27790417_27792266_27_36
Title: Alignment of Single Characters in Java BoxLayout on Y-Axis Is Off-Center 
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ("Alignment Test");
    JScrollPane scroller = new JScrollPane ();
    JPanel panel = new JPanel (new GridLayout (1, 0, 5, 5));
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLayout (new GridLayout (1, 0, 5, 5));
    f.add (new AlignmentTest ('a', Font.PLAIN));
    f.add (new AlignmentTest ('a', Font.BOLD));
    f.add (new AlignmentTest ('a', Font.ITALIC));
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ("Alignment Test");
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLayout (new GridLayout (1, 0, 5, 5));
    f.add (new AlignmentTest ("aMa", Font.PLAIN));
    f.add (new AlignmentTest ("aMa", Font.BOLD));
    f.add (new AlignmentTest ("aMa", Font.ITALIC));
    f.pack ();
    f.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27790417_27791813_24_36
27790417_27793425_84_90
Title: Alignment of Single Characters in Java BoxLayout on Y-Axis Is Off-Center 
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ("Alignment Test");
    JScrollPane scroller = new JScrollPane ();
    JPanel panel = new JPanel (new GridLayout (1, 0, 5, 5));
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLayout (new GridLayout (1, 0, 5, 5));
    f.add (new AlignmentTest ('a', Font.PLAIN));
    f.add (new AlignmentTest ('a', Font.BOLD));
    f.add (new AlignmentTest ('a', Font.ITALIC));
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27790417_27791813_7_23
27790417_27792266_6_18
Title: Alignment of Single Characters in Java BoxLayout on Y-Axis Is Off-Center 
----------------------------------------

public AlignmentTest (char label, int style) {
    JLabel l = new JLabel (Character.toString (label));
    setBorder (BorderFactory.createLineBorder (Color.BLACK, 1));
    setBackground (Color.WHITE);
    setLayout (new RelativeLayout (RelativeLayout.Y_AXIS));
    setPreferredSize (new Dimension (300, 50));
    add (Box.createVerticalGlue (), new Float (1));
    add (l);
    l.setFont (l.getFont ().deriveFont (style));
    l.setAlignmentX (CENTER_ALIGNMENT);
    l.setHorizontalAlignment (JLabel.CENTER);
    add (Box.createVerticalGlue (), new Float (1));
}
----------------------------------------

public AlignmentTest (String label, int style) {
    setBorder (BorderFactory.createLineBorder (Color.BLACK, 1));
    setBackground (Color.WHITE);
    setLayout (new BoxLayout (this, BoxLayout.Y_AXIS));
    l = new JLabel (label, JLabel.CENTER);
    l.setFont (l.getFont ().deriveFont (style));
    l.setAlignmentX (CENTER_ALIGNMENT);
    l.setOpaque (true);
    l.setBackground (Color.cyan);
    add (Box.createVerticalGlue ());
    add (l);
    add (Box.createVerticalGlue ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27790417_27792266_27_36
27790417_27793425_84_90
Title: Alignment of Single Characters in Java BoxLayout on Y-Axis Is Off-Center 
----------------------------------------

public static void main (String [] args) {
    JFrame f = new JFrame ("Alignment Test");
    f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    f.setLayout (new GridLayout (1, 0, 5, 5));
    f.add (new AlignmentTest ("aMa", Font.PLAIN));
    f.add (new AlignmentTest ("aMa", Font.BOLD));
    f.add (new AlignmentTest ("aMa", Font.ITALIC));
    f.pack ();
    f.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27801271_27801485_1_13
27801271_27801824_1_12
Title: I want to interchange two words in a given java file 
----------------------------------------

public static void changeOrder (File f) throws Exception {
    FileInputStream _inp = new FileInputStream (f.getAbsolutePath ());
    BufferedReader _rd = new BufferedReader (new InputStreamReader (_inp));
    String _p = _rd.readLine ();
    while (_p != null) {
        String [] _b = _p.split (" ");
        String temp = _b [_b.length - 1];
        _b [_b.length - 1] = _b [_b.length - 2];
        _b [_b.length - 2] = temp;
        _p = _rd.readLine ();
    }
}
----------------------------------------

public static String changeOrder (File fileName) throws IOException {
    Scanner file = new Scanner (fileName);
    String line = file.nextLine ();
    line = line.replace ('.', ' ');
    String [] items = line.split (" ");
    StringBuilder sb = new StringBuilder ();
    sb.append (items [0] + " ");
    sb.append (items [1] + " ");
    sb.append (items [3] + " ");
    sb.append (items [2] + ".");
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27813490_27813552_1_10
27813490_27813602_8_18
Title: Java equality integer 
----------------------------------------

private static int myMethod (int initialValue) {
    switch (initialValue) {
        case 1 :
            return 2;
        case 2 :
            return 1;
        default :
            return 0;
    }
}
----------------------------------------

private static int myMethod (int initialValue) {
    int n = 1;
    if (initialValue == n) {
        return 2;
    } else if (initialValue == 2) {
        return 1;
    } else {
        return initialValue;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27817940_27818220_112_125
27817940_27818220_86_99
Title: Printing column using String Format in java 
----------------------------------------

public static String repeat (String str, int n) {
    if (n < 0) throw new IllegalArgumentException ("the given repetition count is smaller than zero!");
    else if (n == 0) return "";
    else if (n == 1) return str;
    else if (n % 2 == 0) {
        String s = repeat (str, n / 2);
        return s.concat (s);
    } else return str.concat (repeat (str, n - 1));

}
----------------------------------------

public static String repeat (String str, int n) {
    if (n < 0) throw new IllegalArgumentException ("the given repetition count is smaller than zero!");
    else if (n == 0) return "";
    else if (n == 1) return str;
    else if (n % 2 == 0) {
        String s = repeat (str, n / 2);
        return s.concat (s);
    } else return str.concat (repeat (str, n - 1));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27844780_27844838_1_22
27844780_27846030_10_54
Title: While loop with hasNext(); not fully looping 
----------------------------------------

public static void main (String [] args) {
    InputStream inStream = GetData.class.getResourceAsStream (DATA_FILE);
    List < Cruise > cruiseList = new ArrayList < > ();
    Scanner input = new Scanner (inStream);
    while (input.hasNext ()) {
        String name = getLine (input);
        String id = getLine (input);
        int length = Integer.parseInt (getLine (input));
        int crew = Integer.parseInt (getLine (input));
        Cruise cruise = new Cruise (name, id, length, crew);
        for (int i = 0;
        i < crew; i ++) {
            cruise.addPayRate (Double.parseDouble (getLine (input)));
        }
        cruiseList.add (cruise);
    }
    input.close ();
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner input = new Scanner (new FileReader ("TestData.txt"));
    PrintWriter output = new PrintWriter ("wagedaily.txt");
    float RecommendedMaximum;
    RecommendedMaximum = Float.parseFloat (JOptionPane.showInputDialog (null, "Enter the recommended maximum journey cost:"));
    String ShipID, JourneyID;
    int JourneyLength, Crew;
    double RateOfPay, CrewCost, TotalCost;
    while (input.hasNext ()) {
        System.out.println ("While Enter");
        ShipID = input.nextLine ();
        JourneyID = input.nextLine ();
        JourneyLength = input.nextInt ();
        input.nextLine ();
        Crew = input.nextInt ();
        input.nextLine ();
        CrewCost = 0;
        TotalCost = 0;
        for (int x = Crew;
        x > 0; x --) {
            System.out.println ("While Under if Enter");
            RateOfPay = input.nextDouble ();
            input.nextLine ();
            CrewCost = RateOfPay * JourneyLength;
            TotalCost = TotalCost + CrewCost;
            System.out.println ("While Under if Exit");
        }
        if (TotalCost < RecommendedMaximum) {
            output.println ("The total cost of...");
        } else if (TotalCost == RecommendedMaximum) {
            System.out.println ("The total cost of...");
            output.println ("The total cost of...");
        } else {
            System.out.println ("The total cost of...");
        }

        System.out.println ("While Exit");
    }
    output.close ();
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27845759_27846000_1_19
27845759_27846094_1_17
Title: java Expression too complex reduce the number of conditionl operators 
----------------------------------------

public boolean onlyNumbers (KeyEvent evt) {
    char c = evt.getKeyChar ();
    boolean returnValue;
    returnValue = ! (Character.isDigit (c));
    returnValue &= ! (c == KeyEvent.VK_BACK_SPACE);
    returnValue &= ! (c == KeyEvent.VK_DELETE);
    returnValue &= ! (c == KeyEvent.VK_END);
    returnValue &= ! (c == KeyEvent.VK_HOME);
    returnValue |= (c == KeyEvent.VK_PAGE_UP);
    returnValue |= (c == KeyEvent.VK_PAGE_DOWN);
    returnValue |= (c == KeyEvent.VK_INSERT);
    if (returnValue) {
        evt.consume ();
        returnValue = ! returnValue;
    }
    return returnValue;
}
----------------------------------------

public boolean onlyNumbers (KeyEvent evt) {
    char c = evt.getKeyChar ();
    boolean returnValue = true;
    boolean bad = Character.isDigit (c);
    bad |= (c == KeyEvent.VK_BACK_SPACE);
    bad |= (c == KeyEvent.VK_DELETE);
    bad |= (c == KeyEvent.VK_END);
    bad |= (c == KeyEvent.VK_HOME);
    boolean good = (c == KeyEvent.VK_PAGE_UP);
    good |= c == KeyEvent.VK_PAGE_DOWN;
    good |= c == KeyEvent.VK_INSERT;
    if (! bad || good) {
        evt.consume ();
        returnValue = false;
    }
    return returnValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27846868_27847077_1_26
27846868_27848519_1_24
Title: Android: TextView not updating 
----------------------------------------

private void ConsoleWindow (String dataString) {
    LinearLayout layout;
    TextView tv;
    EditText et;
    if (first2) {
        layout = new LinearLayout (getApplicationContext ());
        setContentView (layout);
        layout.setOrientation (LinearLayout.VERTICAL);
        layout.setBackgroundColor (Color.parseColor ("#000000"));
        et = new EditText (getApplicationContext ());
        et.setHint ("Enter Command");
        layout.addView (et);
        tv = new TextView (getApplicationContext ());
        layout.addView (tv);
        first2 = false;
    }
    if (tv != null) {
        tv.setText (dataString);
    }
}
----------------------------------------

private void ConsoleWindow (String dataString) {
    LinearLayout layout = new LinearLayout (getApplicationContext ());
    if (first2) {
        setContentView (layout);
        layout.setOrientation (LinearLayout.VERTICAL);
        layout.setBackgroundColor (Color.parseColor ("#000000"));
        EditText et = new EditText (getApplicationContext ());
        et.setHint ("Enter Command");
        layout.addView (et);
        first2 = false;
    }
    tv.setText (dataString);
    layout.addView (tv);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27858576_27859004_7_40
27858576_27859394_6_21
Title: Comparing String inputs to desired length 
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int t = Integer.parseInt (br.readLine ());
    System.out.println (t);
    String line = br.readLine ();
    int N = Integer.parseInt (line);
    System.out.println (N);
    String [] profiles = new String [N];
    for (int i = 0;
    i < N; i ++) {
        profiles [i] = br.readLine ().trim ();
    }
    for (int i = 0;
    i < N; i ++) {
        System.out.println (Integer.parseInt (profiles [0]) > t && Integer.parseInt (profiles [1]) == t);
        System.out.println (Integer.parseInt (profiles [0]) > t || Integer.parseInt (profiles [1]) > t);
        System.out.println (Integer.parseInt (profiles [0]) == t && Integer.parseInt (profiles [1]) > t);
        if (Integer.parseInt (profiles [0]) > t && Integer.parseInt (profiles [1]) == t || Integer.parseInt (profiles [0]) > t || Integer.parseInt (profiles [1]) > t || Integer.parseInt (profiles [0]) == t && Integer.parseInt (profiles [1]) > t) {
            System.out.println ("Crop");
        }
        System.out.println (Integer.parseInt (profiles [0]) < t && Integer.parseInt (profiles [1]) < t);
        if (Integer.parseInt (profiles [0]) < t && Integer.parseInt (profiles [1]) < t) {
            System.out.println ("Upload next");
        }
        System.out.println (Integer.parseInt (profiles [0]) == t && Integer.parseInt (profiles [1]) == t);
        if (Integer.parseInt (profiles [0]) == t && Integer.parseInt (profiles [1]) == t) {
            System.out.println ("Accepted");
        }
    }
    System.out.println ("Hello World!");
}
----------------------------------------

public static void main (String args []) throws IOException {
    int t = Integer.parseInt (br.readLine ());
    int N = Integer.parseInt (br.readLine ());
    String [] profiles = new String [N];
    for (int i = 0;
    i < N; i ++) {
        profiles [i] = br.readLine ().trim ();
        if (profiles [i].length () < t) System.out.println ("shorter than t");
        else if (profiles [i].length () == t) System.out.println ("equals to t");
        else System.out.println ("longer than t");

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27865113_27865831_7_27
27865113_27867176_6_71
Title: "different ways of sorting ArrayList of of HashMap<String String>" 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    List < Data > data = new ArrayList < Data > ();
    data.add (new Data ("Title1", "Link1", 8));
    data.add (new Data ("Title2", "Link2", 1));
    data.add (new Data ("Title3", "Link3", 3));
    for (Data d : data) {
        System.out.print (d.getNumber () + " ");
    }
    System.out.println ();
    Collections.sort (data);
    for (Data d : data) {
        System.out.print (d.getNumber () + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < HashMap < String, String > > yourArrayList = new ArrayList < HashMap < String, String > > ();
    HashMap < String, String > myHashMap = new HashMap < String, String > ();
    myHashMap.put ("title", "first Title");
    myHashMap.put ("date", "This is 1st date");
    myHashMap.put ("number", "5");
    yourArrayList.add (0, myHashMap);
    myHashMap = new HashMap < String, String > ();
    myHashMap.put ("title", "Second Title");
    myHashMap.put ("date", "This is 2nd date");
    myHashMap.put ("number", "2");
    yourArrayList.add (1, myHashMap);
    myHashMap = new HashMap < String, String > ();
    myHashMap.put ("title", "Third Title");
    myHashMap.put ("date", "This is 3rd date");
    myHashMap.put ("number", "7");
    yourArrayList.add (2, myHashMap);
    myHashMap = new HashMap < String, String > ();
    myHashMap.put ("title", "Fourth Title");
    myHashMap.put ("date", "This is 4th date");
    myHashMap.put ("number", "0");
    yourArrayList.add (3, myHashMap);
    System.out.println ("=================");
    System.out.println ("BEFORE SORTING");
    System.out.println ("=================");
    for (int i = 0;
    i < yourArrayList.size (); i ++) {
        System.out.println (yourArrayList.get (i));
    }
    HashMap < String, String > temporary;
    for (int c = 0;
    c < (yourArrayList.size () - 1); c ++) {
        for (int d = 0;
        d < (yourArrayList.size () - c - 1); d ++) {
            if (Integer.parseInt (yourArrayList.get (d).get ("number")) > Integer.parseInt (yourArrayList.get (d + 1).get ("number"))) {
                temporary = yourArrayList.get (d);
                yourArrayList.set (d, yourArrayList.get (d + 1));
                yourArrayList.set (d + 1, temporary);
            }
        }
    }
    System.out.println ("=================");
    System.out.println ("AFTER SORTING");
    System.out.println ("=================");
    for (int i = 0;
    i < yourArrayList.size (); i ++) {
        System.out.println (yourArrayList.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27873365_27873455_1_16
27873365_27873461_1_11
Title: Displaying numbers in a particular manner 
----------------------------------------

public static void main (String [] args) {
    Int I = 56789;
    Int v = 5;
    System.out.println (I);
    for (Int p = 0;
    p < 5; p ++) {
        I -= v * Math.pow (10, 10 - v);
        v ++;
        System.out.println (I);
    }
}
----------------------------------------

public static void main (String args []) {
    int x, y;
    for (x = 0; x < 5; x ++) {
        for (y = x + 5; y < 10; y ++) {
            System.out.print (y);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27876450_27876504_1_14
27876450_39058368_1_24
Title: CodingBat help on counting elements in array 
----------------------------------------

public boolean haveThree (int [] nums) {
    if (nums.length <= 0) return false;

    int count = 0;
    for (int i = 0;
    i < nums.length - 1; i ++) {
        if (nums [i] == 3 && nums [i + 1] == 3) return false;

        if (nums [i] == 3) count ++;

    }
    if (nums [nums.length - 1] == 3) count ++;

    return (count == 3);
}
----------------------------------------

public boolean haveThree (int [] nums) {
    int count = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            if (nums.length > 1) {
                if (i == nums.length - 1 && nums [i - 1] != 3) {
                    count ++;
                } else if (i < nums.length - 1 && nums [i + 1] != 3) {
                    count ++;
                }

            }
        }
    }
    return count == 3;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27878138_27878207_1_11
27878138_28002104_4_11
Title: sort string from the third character in java 
----------------------------------------

public int compare (String s1, String s2) {
    if (s1.length () > 2 && s2.length () > 2) {
        return s1.substring (2).compareTo (s2.substring (2));
    } else if (s1.length () > 2) {
        return 1;
    } else if (s2.length () > 2) {
        return - 1;
    } else {
    }

}
----------------------------------------

public int compare (String s1, String s2) {
    final int l = Math.min (s1.length (), s2.length ());
    for (int i = first;
    i < l; i ++) {
        int c = Integer.compare (s1.charAt (i), s2.charAt (i));
        if (c != 0) return c;

    }
    return Integer.compare (s1.length (), s2.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27878888_27880305_1_32
27878888_51124068_1_31
Title: "Faster GCD(n m) in Java?" 
----------------------------------------

public static long gcd (long first, long second) {
    long big = 0;
    long small = 0;
    if (first > second) {
        big = first;
        small = second;
    } else {
        big = second;
        small = first;
    }
    long temp = big % small;
    while ((temp) > 1) {
        big = small;
        small = temp;
        temp = big % small;
    }
    if (temp == 0) {
        return small;
    } else if (temp == 1) {
        return 1;
    } else {
        return - 1;
    }

}
----------------------------------------

static long gcd (long u, long v) {
    int shift;
    if (u == 0) return v;

    if (v == 0) return u;

    for (shift = 0; ((u | v) & 1) == 0; ++ shift) {
        u>>= 1;
        v>>= 1;
    }
    while ((u & 1) == 0) {
        u>>= 1;
    }
    do {
        while ((v & 1) == 0) {
            v>>= 1;
        }
        if (u > v) {
            long t = v;
            v = u;
            u = t;
        }
        v = v - u;
    } while (v != 0);
    return u << shift;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27880830_27880854_1_21
27880830_27880863_1_21
Title: Creating a Deck of Cards using an ArrayList 
----------------------------------------

public static ArrayList < Card > makeDeck () {
    ArrayList < Card > cards = new ArrayList < Card > ();
    String [] cardNames = {"Deuce", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Jack", "Queen", "King", "Ace"};
    String [] suits = {"spades", "hearts", "diamonds", "clubs"};
    for (int a = 0;
    a <= 12; a ++) {
        for (int b = 0;
        b <= 3; b ++) {
            cards.add (new Card (cardNames [a], suits [b]));
        }
    }
    return cards;
}
----------------------------------------

public static ArrayList < Card > makeDeck () {
    ArrayList < Card > cards = new ArrayList < Card > ();
    String [] cardNames = {"Deuce", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Jack", "Queen", "King", "Ace"};
    String [] suits = {"spades", "hearts", "diamonds", "clubs"};
    for (int a = 0;
    a <= 12; a ++) {
        for (int b = 0;
        b <= 3; b ++) {
            cards.add (new Card (cardNames [a], b));
        }
    }
    return cards;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27887261_27887349_5_22
27887261_30951232_3_18
Title: How can I check the number of times a character is shown in the array? 
----------------------------------------

public static void main (String [] args) {
    char [] inputs = {'a', 'b', 'a', 'b', 'c', 'a'};
    HashMap < Character, Integer > map = new HashMap < > ();
    for (Character c : inputs) {
        if (map.containsKey (c)) {
            Integer i = map.get (c);
            i ++;
            map.put (c, i);
        } else {
            map.put (c, 1);
        }
    }
    System.out.println (map);
}
----------------------------------------

public static void main (String [] args) {
    int [] count = new int [26];
    char [] inputs = {'a', 'b', 'a', 'b', 'c', 'a'};
    for (Character c : inputs) {
        count [c - 'a'] ++;
    }
    for (int i = 0;
    i < 26; i ++) {
        if (count [i] > 0) System.out.println ((char) (i + 'a') + ":" + count [i]);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27897091_27897467_1_17
27897091_27954785_8_22
Title: How to show Disabled combobox in the same color as enabled one? 
----------------------------------------

public void start (Stage primaryStage) {
    ComboBox < String > combobox1 = new ComboBox < > ();
    ComboBox < String > combobox2 = new ComboBox < > ();
    combobox2.setDisable (true);
    combobox2.setStyle ("-fx-opacity: 1;");
    BorderPane root = new BorderPane ();
    root.setPadding (new Insets (15));
    root.setTop (combobox1);
    root.setBottom (combobox2);
    Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    setEnableMode ();
    BorderPane root = new BorderPane ();
    root.setTop (combobox1);
    root.setBottom (combobox2);
    Scene scene = new Scene (root, 400, 400);
    primaryStage.setScene (scene);
    primaryStage.show ();
    setPrintMode ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27897630_27899367_23_32
27897630_27899367_4_18
Title: OutOfMemoryError - No trace in the console 
----------------------------------------

public Void call () throws Exception {
    System.out.println ("callableNormal");
    try {
        TimeUnit.SECONDS.sleep (5);
    } catch (InterruptedException ex) {
        System.err.println (ex.getMessage ());
    }
    return null;
}
----------------------------------------

public Void call () throws Exception {
    System.out.println ("callableOOME");
    HashMap < String, Integer > map = new HashMap < > ();
    try {
        for (int i = 0;
        i < 10_000_000; i ++) {
            map.put (Integer.toString (i), i);
        }
    } catch (Error e) {
        e.printStackTrace ();
    } finally {
        System.out.println ("callableOOME: map size " + map.size ());
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27900058_27900116_1_23
27900058_27900250_9_26
Title: Java pass by value with recursion 
----------------------------------------

void insert (NODE nodeptr, int key) {
    if (root == null) {
        root = new NODE (key);
        return;
    }
    if (nodeptr == null) {
        insert (root, key);
        return;
    }
    if (key <= nodeptr.data) {
        if (nodeptr.left != null) insert (nodeptr.left, key);
        else nodeptr.left = new NODE (key);

    } else {
        if (nodeptr.right != null) insert (nodeptr.right, key);
        else nodeptr.right = new NODE (key);

    }
}
----------------------------------------

private void insert (NODE nodeptr, int key) {
    if (key <= nodeptr.data) {
        if (nodeptr.left == null) {
            nodeptr.left = new NODE (key)
        } else {
            insert (nodeptr.left, key);
        }
    } else {
        if (nodeptr.right == null) {
            nodeptr.right = new NODE (key)
        } else {
            insert (nodeptr.right, key);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
27900058_27900116_1_23
27900058_27903008_1_13
Title: Java pass by value with recursion 
----------------------------------------

void insert (NODE nodeptr, int key) {
    if (root == null) {
        root = new NODE (key);
        return;
    }
    if (nodeptr == null) {
        insert (root, key);
        return;
    }
    if (key <= nodeptr.data) {
        if (nodeptr.left != null) insert (nodeptr.left, key);
        else nodeptr.left = new NODE (key);

    } else {
        if (nodeptr.right != null) insert (nodeptr.right, key);
        else nodeptr.right = new NODE (key);

    }
}
----------------------------------------

NODE insert (NODE nodeptr, int key) {
    if (nodeptr == null) {
        nodeptr = new NODE (key);
    } else if (key <= nodeptr.data) {
        nodeptr.left = insert (nodeptr.left, key);
    } else {
        nodeptr.right = insert (nodeptr.right, key);
    }

    return nodeptr;
}
----------------------------------------
