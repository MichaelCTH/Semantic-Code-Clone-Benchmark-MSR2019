$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33589366_33589452_1_10
33589366_33589512_1_14
Title: "In my code below Yes/No statement is not functioning properly" 
----------------------------------------

private int getAnswer () {
    System.out.println ("Would you like to play a game? Enter yes to play or no to exit a game");
    mAnswer = mScanner.nextLine ();
    if (mAnswer.equals ("no")) {
        System.out.println ("Maybe next time");
        return DO_NOT_PLAY_AGAIN;
    } else {
        return 1;
    }
}
----------------------------------------

private boolean getAnswer () {
    System.out.println ("Would you lioke to play a game enter yes to play or no to exit a game");
    mAnswer = mScanner.nextLine ();
    if (mAnswer.equals ("no")) {
        System.out.println ("Maybe next time");
        sayGoodbye ();
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33590424_33640765_27_37
33590424_33640765_42_52
Title: How do I return time; from ClockDisplay() object in printDetails? 
----------------------------------------

public HistoricalMoment (String nameOfTheEvent) {
    if ((nameOfTheEvent == null) || (nameOfTheEvent.equals (""))) {
        eventName = "untitled event";
        timeOfEvent = new ClockDisplay (MIDNIGHT_HOUR, MINUTE_ZERO);
    } else {
        eventName = nameOfTheEvent;
        timeOfEvent = new ClockDisplay (MIDNIGHT_HOUR, MINUTE_ZERO);
    }
}
----------------------------------------

public HistoricalMoment (String nameOfTheEvent, ClockDisplay theTime) {
    if ((nameOfTheEvent == null) || (nameOfTheEvent.equals (""))) {
        eventName = "untitled event";
        timeOfEvent = new ClockDisplay (MIDNIGHT_HOUR, MINUTE_ZERO);
    } else {
        eventName = nameOfTheEvent;
        timeOfEvent = theTime;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33593128_33593182_1_13
33593128_33594789_2_19
Title: Cannot figure out how to get Pascal Triangle In Java 
----------------------------------------

public static void main (String [] args) {
    int rows = 6;
    int [] [] triangle = new int [rows] [rows];
    for (int i = 1;
    i <= rows; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (j == 0) triangle [i - 1] [j] = 1;
            else triangle [i - 1] [j] = triangle [i - 2] [j - 1] + triangle [i - 2] [j];

            System.out.print (triangle [i - 1] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main () {
    int rows = 6;
    for (int i = 0;
    i < rows; i ++) {
        int number = 1;
        System.out.format ("%" + (rows - i) * 2 + "s", "");
        for (int j = 0;
        j <= i; j ++) {
            System.out.format ("%4d", number);
            number = number * (i - j) / (j + 1);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33606152_33606485_1_17
33606152_33606492_1_18
Title: How can I control the flow of the recursive methods? 
----------------------------------------

static void GenerateAllPasswordsWords (String input, int pos, String pwd) {
    if (pos < input.length ()) {
        if (input.charAt (pos) == '#') {
            for (String ch1 : names) {
                GenerateAllPasswordsWords (input, pos + 1, pwd + ch1);
            }
        } else if (input.charAt (pos) == '0') {
            for (String ch : chars) {
                GenerateAllPasswordsWords (input, pos + 1, pwd + ch);
            }
        }

    } else {
        System.out.println (pwd);
    }
}
----------------------------------------

static void GenerateAllPasswordsWords (String pwd, int pos, int siz) {
    if (pos < siz) {
        if (h.charAt (pos) == '#') {
            for (String str : names) {
                GenerateAllPasswordsWords (pwd + str, pos + 1, siz);
            }
        }
        if (h.charAt (pos) == '0') {
            for (String str : chars) {
                GenerateAllPasswordsWords (pwd + str, pos + 1, siz);
            }
        }
    } else {
        System.out.println (pwd);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33611323_33611724_1_40
33611323_33611727_5_25
Title: Counting actors and storing and displaying their name and role 
----------------------------------------

public static void main (String [] args) {
    int actorCount;
    Scanner input = new Scanner (System.in);
    Scanner kb = new Scanner (System.in);
    System.out.println ("How many actors are in the film? ");
    actorCount = kb.nextInt ();
    String [] [] actorValues = new String [actorCount] [2];
    for (int k = 0;
    k < actorCount; k ++) {
        String actor, character;
        System.out.println ("What is the actors name? ");
        actor = kb.next ();
        System.out.println ("What is " + actor + "'s character?");
        character = kb.next ();
        System.out.print (actor + " - " + character + "\n");
        actorValues [k] [0] = actor;
        actorValues [k] [1] = character;
    }
    System.out.println ("All Actors:");
    for (int i = 0;
    i < actorValues.length; i ++) {
        String [] strings = actorValues [i];
        System.out.println ("Actorssname: " + strings [0] + " Character:" + strings [1]);
    }
    kb.close ();
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    int actorCount;
    String output = "";
    actorCount = Integer.parseInt (JOptionPane.showInputDialog (null, "How many actors are in the film? "));
    for (int k = 1;
    k <= actorCount; k ++) {
        String actor, character;
        actor = JOptionPane.showInputDialog (null, "What is the actors name?");
        character = JOptionPane.showInputDialog (null, "What is " + actor + "s character?");
        output += actor + " - " + character + "\n";
    }
    JOptionPane.showMessageDialog (null, output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33611407_33612372_41_52
33611407_33624406_11_24
Title: How to show multiple carets in a JTextArea or JTextPane 
----------------------------------------

public static void main (String [] args) throws Exception {
    JFrame.setDefaultLookAndFeelDecorated (true);
    JFrame frame = new TextAndNewLinesTest ();
    frame.setTitle ("Text and New Lines - Problem");
    frame.setDefaultCloseOperation (EXIT_ON_CLOSE);
    frame.setSize (400, 120);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame fr = new JFrame ("Multi caret test");
    JTextArea ta = new JTextArea ("Test test test", 20, 40);
    MultiCaret c = new MultiCaret ();
    c.setBlinkRate (500);
    c.setAdditionalDots (Arrays.asList (2, 4, 7));
    ta.setCaret (c);
    fr.add (ta);
    fr.pack ();
    fr.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    fr.setLocationRelativeTo (null);
    fr.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33613480_33613856_1_23
33613480_33613880_1_25
Title: if condition get skipped for calculating average in a loop based on some condition 
----------------------------------------

public static void main (String [] args) throws Exception {
    int N = 655;
    File file = new File ("box_raw.txt");
    Scanner scannerFile = new Scanner (file);
    int a [] = new int [N];
    int b [] = new int [N];
    double c [] = new double [N];
    int i = 0;
    while (scannerFile.hasNextLine ()) {
        String line = scannerFile.nextLine ();
        String [] lineVector = line.split (",");
        a [i] = Integer.parseInt (lineVector [0]);
        b [i] = Integer.parseInt (lineVector [1]);
        c [i] = Double.parseDouble (lineVector [2]);
        i ++;
    }
    System.out.println ((dtw_post.lookup (a, b, c)));
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int N = 655;
    int x = 655;
    int a [] = new int [N];
    int b [] = new int [N];
    double c [] = new double [x];
    int i = 0;
    File file = new File ("box_raw.txt");
    Scanner scannerFile = new Scanner (file);
    while (scannerFile.hasNextLine ()) {
        String line = scannerFile.nextLine ();
        String [] lineVector = line.split (",");
        a [i] = Integer.parseInt (lineVector [0]);
        b [i] = Integer.parseInt (lineVector [1]);
        c [i] = Double.parseDouble (lineVector [2]);
        ++ i;
    }
    System.out.println ((dtw_post.lookup (a, b, c)));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33624763_33640915_1_25
33624763_33772925_1_26
Title: How to do SQL queries using CachedRowSet? 
----------------------------------------

public CachedRowSet getContentsOfCoffeesTable (Connection mycConn) throws SQLException {
    CachedRowSet crs = null;
    ResultSet resultSet = null;
    Statement stmt = null;
    String sql = "select COF_NAME, SUP_ID, PRICE, SALES, TOTAL from COFFEES";
    try {
        stmt = myConn.createStatement ();
        resultSet = stmt.executeQuery (sql);
        crs = new CachedRowSetImpl ();
        crs.populate (resultSet);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return crs;
}
----------------------------------------

private CachedRowSet getContentsOfCoffeesTable (Connection con) throws SQLException {
    CachedRowSet cr = null;
    try {
        cr = new CachedRowSetImpl ();
        cr.setType (ResultSet.TYPE_SCROLL_INSENSITIVE);
        cr.setConcurrency (ResultSet.CONCUR_UPDATABLE);
        cr.setUsername (username);
        cr.setPassword (password);
        cr.setUrl (url);
        cr.setCommand ("select COF_NAME, SUP_ID, PRICE, SALES, TOTAL from COFFEES");
        cr.execute ();
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
    return cr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33636887_33637238_3_30
33636887_33638102_4_34
Title: Generating 10 random numbers without duplicate with fundamental techniques 
----------------------------------------

public static void main (String [] args) {
    int [] number = new int [10];
    int count = 0;
    while (count < number.length) {
        int candidate = ThreadLocalRandom.current ().nextInt (21);
        boolean exists = false;
        for (int i = 0;
        i < count; i ++) {
            if (number [i] == candidate) {
                exists = true;
                break;
            }
        }
        if (! exists) {
            number [count ++] = candidate;
        }
    }
    for (int j = 0;
    j < number.length; j ++) {
        System.out.println (number [j]);
    }
}
----------------------------------------

public static void main (String args []) {
    Random r = new Random ();
    int [] number = new int [10];
    int count = 0;
    int num;
    while (count < number.length) {
        num = r.nextInt (21);
        boolean repeat = false;
        int i = 0;
        do {
            if (num == number [i]) {
                repeat = true;
            } else if (num != number [i] && i == count) {
                number [count] = num;
                count ++;
                repeat = true;
            }

            i ++;
        } while (! repeat && i < number.length);
    }
    for (int j = 0;
    j < number.length; j ++) {
        System.out.print (number [j] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33636887_33637238_3_30
33636887_42141034_5_34
Title: Generating 10 random numbers without duplicate with fundamental techniques 
----------------------------------------

public static void main (String [] args) {
    int [] number = new int [10];
    int count = 0;
    while (count < number.length) {
        int candidate = ThreadLocalRandom.current ().nextInt (21);
        boolean exists = false;
        for (int i = 0;
        i < count; i ++) {
            if (number [i] == candidate) {
                exists = true;
                break;
            }
        }
        if (! exists) {
            number [count ++] = candidate;
        }
    }
    for (int j = 0;
    j < number.length; j ++) {
        System.out.println (number [j]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Random rnd = new Random ();
    int qask [] = new int [10];
    int it, i, t = 0, in, flag;
    for (it = 0;; it ++) {
        i = rnd.nextInt (11);
        flag = 0;
        for (in = 0; in < qask.length; in ++) {
            if (i == qask [in]) {
                flag = 1;
                break;
            }
        }
        if (flag != 1) {
            qask [t ++] = i;
        }
        if (t == 10) break;

    }
    for (it = 0; it < qask.length; it ++) System.out.println (qask [it]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33636887_33638102_4_34
33636887_42141034_5_34
Title: Generating 10 random numbers without duplicate with fundamental techniques 
----------------------------------------

public static void main (String args []) {
    Random r = new Random ();
    int [] number = new int [10];
    int count = 0;
    int num;
    while (count < number.length) {
        num = r.nextInt (21);
        boolean repeat = false;
        int i = 0;
        do {
            if (num == number [i]) {
                repeat = true;
            } else if (num != number [i] && i == count) {
                number [count] = num;
                count ++;
                repeat = true;
            }

            i ++;
        } while (! repeat && i < number.length);
    }
    for (int j = 0;
    j < number.length; j ++) {
        System.out.print (number [j] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Random rnd = new Random ();
    int qask [] = new int [10];
    int it, i, t = 0, in, flag;
    for (it = 0;; it ++) {
        i = rnd.nextInt (11);
        flag = 0;
        for (in = 0; in < qask.length; in ++) {
            if (i == qask [in]) {
                flag = 1;
                break;
            }
        }
        if (flag != 1) {
            qask [t ++] = i;
        }
        if (t == 10) break;

    }
    for (it = 0; it < qask.length; it ++) System.out.println (qask [it]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33637848_33637922_3_34
33637848_33638274_1_32
Title: Looping this guessing game continuously 
----------------------------------------

public static void main (String args []) {
    Scanner keyboard = new Scanner (System.in);
    int a = 0;
    int count = 0;
    int guess = 0;
    startNewGame ();
    System.out.println ("Welcome to the Number Guessing Game");
    while (guess != - 1) {
        System.out.print ("Guess a number between 0 and 100 or enter -1 to end: ");
        guess = keyboard.nextInt ();
        count ++;
        if (guess < 0 || guess > 100) {
            System.out.print ("Out of bounds. Try Again: ");
            continue;
        }
        if (guess > a) {
            System.out.print ("The number is lower. Try again: ");
        } else if (guess < a) {
            System.out.print ("The number is higher. Try again: ");
        } else if (guess == a) {
            System.out.println ("Congratulations. You guessed the number in " + count + " tries!");
            startNewGame ();
        }

        resetGuess ();
    }
    System.out.print ("Thank you for playing the game!");
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner keyboard = new Scanner (System.in);
    while (true) {
        int count = 0;
        int a = 1 + (int) (Math.random () * 99);
        int guess = 0;
        System.out.println ("Welcome to the Number Guessing Game");
        System.out.print ("Guess a number between 0 and 100 or enter -1 to end: ");
        while (guess != a) {
            guess = keyboard.nextInt ();
            count ++;
            if (guess < 0 || guess > 100) {
                if (guess == - 1) {
                    System.out.print ("Thank you for playing the game!");
                    System.exit (0);
                }
                System.out.print ("Out of bounds. Try Again: ");
                continue;
            }
            if (guess > a) {
                System.out.print ("The number is lower. Try again: ");
            } else if (guess < a) {
                System.out.print ("The number is higher. Try again: ");
            } else if (guess == a) {
                System.out.println ("Congratulations. You guessed the number in " + count + " tries!");
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33638774_33703872_1_16
33638774_33703872_20_91
Title: Setting context path in while authorizing application to access google apis using java 
----------------------------------------

@RequestMapping ("/simplelogin")
public@ResponseBody
void simplemethod (HttpServletRequest request, HttpServletResponse response) throws IOException, GeneralSecurityException {
    String REDIRECT_URI = "http://localhost:8080/counterwebapp/redirect";
    HttpTransport httpTransport = new NetHttpTransport ();
    JsonFactory jsonFactory = new JacksonFactory ();
    final Collection < String > SCOPE = Arrays.asList ("https://www.googleapis.com/auth/userinfo.profile;https://www.googleapis.com/auth/userinfo.email;https://www.googleapis.com/auth/calendar".split (";"));
    GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder (httpTransport, jsonFactory, CLIENT_ID, CLIENT_SECRET, SCOPE).setAccessType ("online").setApprovalPrompt ("auto").build ();
    String url = flow.newAuthorizationUrl ().setRedirectUri (REDIRECT_URI).build ();
    System.out.println ("Please open the following URL in your browser then type the authorization code:");
    System.out.println ("  " + url);
    response.sendRedirect (flow.newAuthorizationUrl ().setRedirectUri (REDIRECT_URI).build ());
    return;
}
----------------------------------------

@RequestMapping ("/redirect")
@ResponseBody
String CallSampleServlet_sub (HttpServletRequest request, HttpServletResponse response) throws IOException {
    final String USER_INFO_URL = "https://www.googleapis.com/oauth2/v1/userinfo";
    GoogleAuthorizationCodeFlow authFlow = Utils.initializeFlowCalendar ();
    HttpTransport httpTransport = new NetHttpTransport ();
    JsonFactory jsonFactory = new JacksonFactory ();
    String code = request.getParameter ("code");
    System.out.println ("code " + code);
    final Collection < String > SCOPE = Arrays.asList ("https://www.googleapis.com/auth/userinfo.profile;https://www.googleapis.com/auth/userinfo.email;https://www.googleapis.com/auth/calendar".split (";"));
    GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder (httpTransport, jsonFactory, CLIENT_ID, CLIENT_SECRET, Collections.singleton (CalendarScopes.CALENDAR)).setAccessType ("online").setApprovalPrompt ("auto").build ();
    GoogleTokenResponse resp = flow.newTokenRequest (code).setRedirectUri ("http://localhost:8080/counterwebapp/redirect").execute ();
    System.out.println ((resp.getAccessToken ()));
    GoogleTokenResponse resp2 = new GoogleTokenResponse ();
    resp2.setAccessToken (resp.getAccessToken ());
    final Credential credential = flow.createAndStoreCredential ((TokenResponse) resp2, null);
    System.out.println ("credential created: " + credential);
    com.google.api.services.calendar.Calendar service = new com.google.api.services.calendar.Calendar.Builder (httpTransport, jsonFactory, credential).setApplicationName ("Spring API Demo").build ();
    System.out.println ("<h1>HELLO WORLD Prafull</h1>");
    DateTime now = new DateTime (System.currentTimeMillis ());
    System.out.println ("<h2>" + service.getApplicationName () + "</h2>");
    CalendarList feed = service.calendarList ().list ().execute ();
    Events even = service.events ().list ("primary").setMaxResults (10).setTimeMin (now).setOrderBy ("startTime").setSingleEvents (true).execute ();
    com.google.api.services.calendar.model.Events events = service.events ().list ("primary").setMaxResults (10).setTimeMin (now).setOrderBy ("startTime").setSingleEvents (true).execute ();
    System.out.println ("No upcoming events first found.");
    List < Event > items = events.getItems ();
    if (items.size () == 0) {
        System.out.println ("No upcoming events found.");
    } else {
        System.out.println ("Upcoming events");
        for (Event event : items) {
            DateTime start = event.getStart ().getDateTime ();
            if (start == null) {
                start = event.getStart ().getDate ();
            }
            System.out.printf ("%s (%s)\n", event.getSummary (), start);
        }
    }
    final HttpRequestFactory requestFactory = httpTransport.createRequestFactory (credential);
    final GenericUrl url = new GenericUrl (USER_INFO_URL);
    final HttpRequest req = requestFactory.buildGetRequest (url);
    req.getHeaders ().setContentType ("application/json");
    final String jsonIdentity = req.execute ().parseAsString ();
    final String jsonIdentit1y = req.execute ().parseAsString ();
    Oauth2 oauth2 = new Oauth2.Builder (new NetHttpTransport (), new JacksonFactory (), credential).setApplicationName ("Oauth2").build ();
    Userinfoplus userinfo = oauth2.userinfo ().get ().execute ();
    System.out.println (userinfo.toPrettyString ());
    com.google.appengine.repackaged.com.google.gson.Gson usergson = new com.google.appengine.repackaged.com.google.gson.Gson ();
    Userinfoplus user = usergson.fromJson (jsonIdentity, Userinfoplus.class);
    System.out.println (user.getFamilyName () + "  " + user.getGivenName () + " " + user.getEmail ());
    System.out.println (jsonIdentity);
    return VIEW_INDEX;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33639461_33639603_2_20
33639461_33639616_3_24
Title: Arithmetic Sequences program 
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [args.length];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = Integer.parseInt (args [i]);
    }
    for (int a = 0;
    a < arr.length; a ++) {
        for (int b = a + 1;
        b < arr.length; b ++) {
            for (int c = b + 1;
            c < arr.length; c ++) {
                if (arr [b] - arr [a] == arr [c] - arr [b]) {
                    System.out.println (arr [a] + " " + arr [b] + " " + arr [c]);
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = new int [args.length];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = Integer.parseInt (args [i]);
    }
    for (int a = 0;
    a < arr.length; a ++) {
        for (int b = a + 1;
        b < arr.length; b ++) {
            for (int c = b + 1;
            c < arr.length; c ++) {
                if (arr [b] - arr [a] == arr [c] - arr [b]) {
                    System.out.println (arr [a] + " " + arr [b] + " " + arr [c]);
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33640002_33640241_1_10
33640002_33640489_1_13
Title: Set ImageButton image Programatically 
----------------------------------------

public void onActivityResult (int requestCode, int resultCode, Intent data) {
    if (resultCode == RESULT_OK) {
        if (requestCode == SELECT_PICTURE) {
            Uri selectedImageUri = data.getData ();
            selectedImagePath = getPath (selectedImageUri);
            Bitmap myBitmap = BitmapFactory.decodeFile (selectedImagePath);
            b1.setImageBitmap (myBitmap);
        }
    }
}
----------------------------------------

public void onActivityResult (int requestCode, int resultCode, Intent data) {
    if (resultCode == RESULT_OK) {
        if (requestCode == SELECT_PICTURE) {
            Uri selectedImageUri = data.getData ();
            try {
                Bitmap bitmap = MediaStore.Images.Media.getBitmap (this.getContentResolver (), selectedImageUri);
                b1.setBackground (new BitmapDrawable (getResources (), bitmap));
            } catch (IOException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33645569_33645784_1_15
33645569_33645837_1_23
Title: Return multiple values from void and boolean methods 
----------------------------------------

public static boolean isSimilar (int a, int b) {
    int abs = Math.abs (a - b);
    if (abs == 0) {
        return true;
    } else if (abs > 10) {
        return false;
    } else if (abs <= 5) {
        int c = a / 0;
        return true;
    } else {
        Integer d = null;
        d.intValue ();
        return false;
    }

}
----------------------------------------

public static boolean isSimilar (int a, int b, int condition) {
    int abs = Math.abs (a - b);
    switch (condition) {
        case 1 :
            if (abs == 0) {
                return true;
            }
        case 2 :
            if (abs > 10) {
                return true;
            }
        case 3 :
            if (abs <= 5 && abs != 0) {
                return true;
            }
        case 4 :
            if (abs > 5 && abs <= 10) {
                return true;
            }
        default :
            return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33647209_34071478_11_43
33647209_34071478_47_57
Title: Spring Jdbctemplate one to many data retrieving 
----------------------------------------

public ReceiptHdr mapRow (ResultSet rs, int rowNum) throws SQLException {
    logger.info ("--------Excute check 2 -->");
    ReceiptHdr rcptHdr = new ReceiptHdr ();
    rcptHdr.setRcptId (rs.getInt ("rcpt_id"));
    rcptHdr.setHdrRemark (rs.getString ("hdr_remark"));
    rcptHdr.setCurrency (rs.getString ("currency"));
    rcptHdr.setRateValue (rs.getBigDecimal ("rate_value"));
    rcptHdr.setRcptStDate (rs.getDate ("rcpt_st_date"));
    rcptHdr.setRcptEndDate (rs.getDate ("rcpt_end_date"));
    rcptHdr.setGrandTotal (rs.getBigDecimal ("grand_total"));
    rcptHdr.setTotDiscountAmt (rs.getBigDecimal ("tot_discount_amt"));
    rcptHdr.setNetTotal (rs.getBigDecimal ("net_total"));
    rcptHdr.setTotPaidAmt (rs.getBigDecimal ("tot_paid_amt"));
    rcptHdr.setAddedBy (rs.getString ("added_by"));
    SaleInvHdr salesInvHdr = new SaleInvHdr ();
    salesInvHdr.setSaleInvId (rs.getShort ("sale_inv_id"));
    rcptHdr.setSaleInvHdr (salesInvHdr);
    SoHdr soHdr = new SoHdr ();
    soHdr.setSoId (rs.getShort ("so_id"));
    rcptHdr.setSoHdr (soHdr);
    Customer customer = new Customer ();
    customer.setCustId (rs.getShort ("cust_id"));
    rcptHdr.setCustomer (customer);
    rcptHdr.setAddedDate (rs.getDate ("added_date"));
    rcptHdr.setStatCode (rs.getShort ("stat_code"));
    rcptHdr.setCurrentInstNo (rs.getShort ("current_inst_no"));
    return rcptHdr;
}
----------------------------------------

public ReceiptDet mapRow (ResultSet rs, int rowNum) throws SQLException {
    ReceiptDet receiptDet = new ReceiptDet ();
    receiptDet.setRcptDetId (rs.getInt ("rcpt_det_id"));
    receiptDet.setRcptDate (rs.getDate ("rcpt_date"));
    receiptDet.setPaidAmt (rs.getBigDecimal ("paid_amt"));
    receiptDet.setInstmntNo (rs.getShort ("instmnt_no"));
    receiptDet.setOutstndAmt (rs.getBigDecimal ("outstnd_amt"));
    receiptDet.setDeleteComment (rs.getString ("delete_comment"));
    receiptDet.setAddedDate (rs.getDate ("added_date"));
    return receiptDet;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33654457_33655088_21_41
33654457_41843022_7_35
Title: "Converting separate ""double"" values into an Array within an ArrayList" 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Student > studentArray = new ArrayList < Student > ();
    int [] grades1 = {88, 79, 59};
    int [] grades2 = {91, 72, 85};
    int [] grades3 = {85, 84, 87};
    int [] grades4 = {91, 98, 82};
    int [] grades5 = {99, 98, 97};
    studentArray.add (new Student ("1", "John", "Smith", "John1989@gmail.com", 20, grades1));
    studentArray.add (new Student ("2", "Susan", "Erickson", "Erickson_1990@gmailcom", 19, grades2));
    studentArray.add (new Student ("3", "Jack", "Napoli", "The_lawyer99yahoo.com", 19, grades3));
    studentArray.add (new Student ("4", "Erin", "Black", "Erin.black@comcast.net", 22, grades4));
    studentArray.add (new Student ("5", "Captain", "Planet", "PowIsYours@planet.edu", 65, grades5));
    Roster r = new Roster (studentArray);
    for (Student v : studentArray) {
        r.print_average_grade (v.getStuID ());
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] grade0 = {0, 0, 0};
    int [] grade1 = {88, 79, 59};
    int [] grade2 = {91, 72, 85};
    int [] grade3 = {85, 84, 87};
    int [] grade4 = {91, 98, 82};
    int [] grade5 = {99, 98, 97};
    addStudent (0, "null", "null", "null@null.com", 0, grade0);
    addStudent (1, "John", "Smith", "John1989@gmail.com", 20, grade1);
    addStudent (2, "Suzan", "Erickson", "Erickson_1990@gmailcom", 19, grade2);
    addStudent (3, "Jack", "Napoli", "The_lawyer99yahoo.com", 19, grade3);
    addStudent (4, "Erin", "Black", "Erin.black@comcast.net", 22, grade4);
    addStudent (5, "Habib", "Trump", "someemail@mywqu.edu", 42, grade5);
    Student student = students.get (3);
    System.out.println ("Print one student:");
    student.print ();
    printAllStudents ();
    print_invalid_emails ();
    printAverageGrade ();
    remove ();
    printAllStudents ();
    remove ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33663398_33663423_1_16
33663398_33663451_1_17
Title: Missing Return Statement in Java Recursive Function 
----------------------------------------

public int addRandom () {
    Random rnd = new Random ();
    for (int i = 0;
    i < 26; i ++) {
        int rando = rnd.nextInt (101);
        if (checkRandom.indexOf (rando) != - 1) {
            return addRandom ();
        } else {
            checkRandom.add (rando);
            array4.add (rando);
            return (rando);
        }
    }
    return - 1;
}
----------------------------------------

public int addRandom () {
    Random rnd = new Random ();
    int b = 0;
    for (int i = 0;
    i < 26; i ++) {
        int rando = rnd.nextInt (101);
        if (checkRandom.indexOf (rando) != - 1) {
            b = addRandom ();
        } else {
            checkRandom.add (rando);
            array4.add (rando);
            b = rando;
        }
    }
    return b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33663398_33663423_1_16
33663398_33663743_12_21
Title: Missing Return Statement in Java Recursive Function 
----------------------------------------

public int addRandom () {
    Random rnd = new Random ();
    for (int i = 0;
    i < 26; i ++) {
        int rando = rnd.nextInt (101);
        if (checkRandom.indexOf (rando) != - 1) {
            return addRandom ();
        } else {
            checkRandom.add (rando);
            array4.add (rando);
            return (rando);
        }
    }
    return - 1;
}
----------------------------------------

public void addRandom (List someList) {
    if (randomList.size () < LIST_SIZE) {
        int random = rnd.nextInt (101);
        if (! randomList.contains (random)) {
            randomList.add (random);
            someList.add (random);
        }
        addRandom (someList);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33663398_33663451_1_17
33663398_33663743_12_21
Title: Missing Return Statement in Java Recursive Function 
----------------------------------------

public int addRandom () {
    Random rnd = new Random ();
    int b = 0;
    for (int i = 0;
    i < 26; i ++) {
        int rando = rnd.nextInt (101);
        if (checkRandom.indexOf (rando) != - 1) {
            b = addRandom ();
        } else {
            checkRandom.add (rando);
            array4.add (rando);
            b = rando;
        }
    }
    return b;
}
----------------------------------------

public void addRandom (List someList) {
    if (randomList.size () < LIST_SIZE) {
        int random = rnd.nextInt (101);
        if (! randomList.contains (random)) {
            randomList.add (random);
            someList.add (random);
        }
        addRandom (someList);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3366925_13466049_1_15
3366925_29546114_1_15
Title: Deep copy duplicate() of Java's ByteBuffer 
----------------------------------------

public static ByteBuffer deepCopy (ByteBuffer orig) {
    int pos = orig.position (), lim = orig.limit ();
    try {
        orig.position (0).limit (orig.capacity ());
        ByteBuffer toReturn = deepCopyVisible (orig);
        toReturn.position (pos).limit (lim);
        return toReturn;
    } finally {
        orig.position (pos).limit (lim);
    }
}
----------------------------------------

public ByteBuffer deepCopy (ByteBuffer source, ByteBuffer target) {
    int sourceP = source.position ();
    int sourceL = source.limit ();
    if (null == target) {
        target = ByteBuffer.allocate (source.remaining ());
    }
    target.put (source);
    target.flip ();
    source.position (sourceP);
    source.limit (sourceL);
    return target;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33684870_33684990_1_34
33684870_33685110_1_18
Title: How to create a method to count characters in an array 
----------------------------------------

public static void countArray () {
    int vowelA = 0, vowelE = 0, vowelI = 0, vowelO = 0, vowelU = 0, vowelY = 0;
    int elsePlaceHolder = 0;
    char [] arr = new char [100];
    arr = createArray ();
    for (int x = 0;
    x < 100; x ++) {
        if (arr [x] == 'a') vowelA ++;
        else if (arr [x] == 'e') vowelE ++;
        else if (arr [x] == 'i') vowelI ++;
        else if (arr [x] == 'o') vowelO ++;
        else if (arr [x] == 'u') vowelU ++;
        else if (arr [x] == 'y') vowelY ++;
        else elsePlaceHolder ++;

    }
    System.out.print (vowelA + " " + vowelE + " " + vowelI + " " + vowelO + " " + vowelU + " " + vowelY);
}
----------------------------------------

public static void countArray (char ch1, char ch2, char [] character) {
    int [] vowels = {(int) 'a', (int) 'e', (int) 'i', (int) 'o', (int) 'u'};
    int [] dictionary = new int [(int) ch2 - (int) ch1 + 1];
    for (int i = 0;
    i < character.length; i ++) {
        dictionary [((int) character [i] - (int) ch1)] ++;
    }
    for (int j = 0;
    j < vowels.length; j ++) {
        System.out.println ((char) vowels [j] + ": " + dictionary [vowels [j] - (int) 'a']);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33685678_33686260_1_24
33685678_33687689_1_22
Title: creating java generic data structure 
----------------------------------------

public void add (Integer a) {
    if (m.size () < 3) {
        m.add (a);
        return;
    }
    int max = Integer.MIN_VALUE;
    int index = - 1;
    for (int i = 0;
    i < 3; i ++) {
        int v = m.get (i);
        if (v > max) {
            max = v;
            index = i;
        }
    }
    if (a < max) {
        m.remove (index);
        m.add (a);
    }
}
----------------------------------------

public void add (V a) {
    V temp = null;
    if (a.compareTo (v [0]) == - 1) {
        temp = v [0];
        v [0] = a;
        add (temp);
    } else if (a.compareTo (v [0]) == 1 && a.compareTo (v [1]) == - 1) {
        temp = v [1];
        v [1] = a;
        add (temp);
    } else if (a.compareTo (v [1]) == 1 && a.compareTo (v [2]) == - 1) {
        temp = v [2];
        v [2] = a;
        add (temp);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33685678_33686260_1_24
33685678_33688195_14_27
Title: creating java generic data structure 
----------------------------------------

public void add (Integer a) {
    if (m.size () < 3) {
        m.add (a);
        return;
    }
    int max = Integer.MIN_VALUE;
    int index = - 1;
    for (int i = 0;
    i < 3; i ++) {
        int v = m.get (i);
        if (v > max) {
            max = v;
            index = i;
        }
    }
    if (a < max) {
        m.remove (index);
        m.add (a);
    }
}
----------------------------------------

public void add (V a) {
    int i = 0;
    int l = v.size ();
    while (i < l && v.get (i).compareTo (a) < 0) i ++;

    if (i < s) {
        v.add (i, a);
        if (v.size () > s) v.remove (v.size () - 1);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33685678_33687689_1_22
33685678_33688195_14_27
Title: creating java generic data structure 
----------------------------------------

public void add (V a) {
    V temp = null;
    if (a.compareTo (v [0]) == - 1) {
        temp = v [0];
        v [0] = a;
        add (temp);
    } else if (a.compareTo (v [0]) == 1 && a.compareTo (v [1]) == - 1) {
        temp = v [1];
        v [1] = a;
        add (temp);
    } else if (a.compareTo (v [1]) == 1 && a.compareTo (v [2]) == - 1) {
        temp = v [2];
        v [2] = a;
        add (temp);
    }

}
----------------------------------------

public void add (V a) {
    int i = 0;
    int l = v.size ();
    while (i < l && v.get (i).compareTo (a) < 0) i ++;

    if (i < s) {
        v.add (i, a);
        if (v.size () > s) v.remove (v.size () - 1);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33688787_33690540_1_21
33688787_36751899_1_16
Title: How to unit test java multiple thread 
----------------------------------------

@Test
public void testInvoke () throws Exception {
    final CountDownLatch countDownLatch = new CountDownLatch (1);
    JustAClass justAClass = new JustAClass ();
    JustAClass.JustACallBack callBack = new JustAClass.JustACallBack () {
        @Override
        public void callFunc (final JustAClass.JustAResult result) {
            assertNotNull ("Result should not be null", result);
            assertTrue ("Result should be instance of JustAResultReal", result instanceof JustAClass.JustAResultReal);
            countDownLatch.countDown ();
        }}

    ;
    justAClass.threadFunc (callBack);
    if (! countDownLatch.await (1200, TimeUnit.MILLISECONDS)) {
        fail ("Timed out, see log for errors");
    }
}
----------------------------------------

@Test
public void testInvoke () throws Throwable {
    Waiter waiter = new Waiter ();
    JustAClass justAClass = new JustAClass ();
    JustAClass.JustACallBack callBack = new JustAClass.JustACallBack () {
        @Override
        public void callFunc (final JustAClass.JustAResult result) {
            waiter.assertNotNull (result);
            waiter.assertTrue (result instanceof JustAClass.JustAResultReal);
            waiter.resume ();
        }}

    ;
    justAClass.threadFunc (callBack);
    waiter.await (1200, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33695850_33840143_1_25
33695850_35244569_1_16
Title: Determine whether string2 occurs with string1 or not 
----------------------------------------

public boolean occurs (String str1, String str2) {
    int l1 = str1.length ();
    int l2 = str2.length ();
    int p = 0;
    int count = 0;
    int j = 0;
    for (; j < l1; j ++) {
        char ch1 = str1.charAt (j);
        char ch2 = str2.charAt (p);
        if (ch1 == ch2) {
            p ++;
            count ++;
        } else {
            p = 0;
            count = 0;
        }
        if (count == l2) {
            break;
        }
    }
    if (l2 == count) return true;
    else return false;

}
----------------------------------------

public boolean occurs (String str1, String str2) {
    int len1 = str1.length ();
    int len2 = str2.length ();
    for (int i = 0;
    i < (len1 - len2 + 1); i ++) {
        String str = "";
        for (int j = i;
        j < i + len2; j ++) {
            str = str + str1.charAt (j);
            if (str.equals (str2)) return true;

        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3369871_3370116_13_40
3369871_3371491_1_14
Title: Check if Dates from List<Date> are following each other 
----------------------------------------

public boolean checkList (List < Date > list, int num) {
    int count = 0;
    for (int i = 0;
    i < list.size () - 1; i ++) {
        Calendar calendar1 = Calendar.getInstance ();
        calendar1.setTime (list.get (i));
        calendar1.set (Calendar.DAY_OF_MONTH, calendar1.get (Calendar.DAY_OF_MONTH) + 1);
        calendar1.set (Calendar.HOUR_OF_DAY, 0);
        calendar1.set (Calendar.MINUTE, 0);
        calendar1.set (Calendar.MILLISECOND, 0);
        Calendar calendar2 = Calendar.getInstance ();
        calendar2.setTime (list.get (i + 1));
        calendar2.set (Calendar.HOUR_OF_DAY, 0);
        calendar2.set (Calendar.MINUTE, 0);
        calendar2.set (Calendar.MILLISECOND, 0);
        if (calendar1.equals (calendar2)) {
            count ++;
        } else {
            count = 0;
        }
        if (count >= num) {
            return true;
        }
    }
    return false;
}
----------------------------------------

public static boolean checkList (List < Date > list) {
    int count = 0;
    for (int i = 0;
    i < list.size () - 1; ++ i) {
        if (list.get (i).after (list.get (i + 1))) {
            count = 0;
        } else {
            ++ count;
            if (count == 4) {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33704646_33704721_2_23
33704646_33944689_2_29
Title: How to call a java main function? 
----------------------------------------

public static void main (String [] args) {
    if (args.length < 3) {
        System.out.println ("Usage: java Calculator operand1 operator operand2");
        System.exit (0);
    }
    int result = 0;
    switch (args [1]) {
        case "+" :
            result = Integer.parseInt (args [0]) + Integer.parseInt (args [2]);
            break;
        case "-" :
            result = Integer.parseInt (args [0]) - Integer.parseInt (args [2]);
            break;
        case "*" :
            result = Integer.parseInt (args [0]) * Integer.parseInt (args [2]);
            break;
        case "/" :
            result = Integer.parseInt (args [0]) / Integer.parseInt (args [2]);
            break;
    }
    System.out.println (args [0] + ' ' + args [1] + ' ' + args [2] + " = " + result);
}
----------------------------------------

public static void main (String [] args) {
    if (args.length < 3) {
        System.out.println ("Usage: java Calculator operand1 operator operand2");
        System.exit (0);
    }
    int result = 0;
    char op = args [1].charAt (0);
    System.out.println ((int) op);
    int ope = (int) op;
    switch (ope) {
        case 43 :
            result = Integer.parseInt (args [0]) + Integer.parseInt (args [2]);
            break;
        case 45 :
            result = Integer.parseInt (args [0]) - Integer.parseInt (args [2]);
            break;
        case 42 :
            result = Integer.parseInt (args [0]) * Integer.parseInt (args [2]);
            break;
        case 47 :
            result = Integer.parseInt (args [0]) / Integer.parseInt (args [2]);
            break;
    }
    System.out.println (args [0] + ' ' + args [1] + ' ' + args [2] + " = " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33706467_33706602_1_37
33706467_33706653_30_59
Title: How can delete listview items using checkbox? 
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    final ViewHolder holder;
    if (convertView == null) {
        holder = new ViewHolder ();
        convertView = inflater.inflate (R.layout.row1, null);
        holder.checkbox = (CheckBox) convertView.findViewById (R.id.add_food_item);
        convertView.setTag (holder);
    } else {
        holder = (ViewHolder) convertView.getTag ();
    }
    final ItemInList element = list.get (position);
    holder.checkbox.setChecked (element.isSelected ());
    holder.checkbox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            element.setSelected (buttonView.isChecked ());
            if (element.isSelected ()) {
                array.add (element.getName ());
            } else {
                if (position < array.size ()) array.remove (position);

            }
        }}

    );
    return convertView;
}
----------------------------------------

public View getView (final int position, View convertview, ViewGroup parent) {
    View v = convertview;
    LayoutInflater vi = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    v = vi.inflate (R.layout.row_layout, null);
    final x obj = items.get (position);
    TextView txt_name = (TextView) v.findViewById (R.id.txt_name);
    CheckBox checkBox1 = (CheckBox) findViewById (R.id.checkBox1);
    if (checkBox1.isChecked ()) {
        new_al.add (x_list.get (position));
    }
    btn_clear.setOnItemClickListener (new Listener () {
        public void onClick (View v) {
            x_list.clear ();
            x_list.add (new_al);
        }}

    );
    notifyDataSetChanged ();
    return v;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33711003_33711178_1_12
33711003_33711361_1_10
Title: Transposing a matrix represented as a string? 
----------------------------------------

static String transpose (String s) {
    char [] c = s.toCharArray ();
    int n = (int) Math.sqrt (s.length ());
    for (int i = 0;
    i < n; ++ i) {
        for (int j = i + 1;
        j < n; ++ j) {
            char h = c [i * n + j];
            c [i * n + j] = c [j * n + i];
            c [j * n + i] = h;
        }
    }
    return new String (c);
}
----------------------------------------

static String transpose (String s, int rows, int columns) {
    int n = s.length ();
    if (rows * columns != n) throw new IllegalArgumentException ();

    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < n - 1; i ++) sb.append (s.charAt (i * columns % (n - 1)));

    sb.append (s.charAt (n - 1));
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33714931_33715028_6_17
33714931_33715068_7_16
Title: Replace all instances of a character in a String 
----------------------------------------

public static String updatePartialword (String partial, String secret, char c) {
    char [] tmp = partial.toCharArray ();
    for (int i = 0;
    i < secret.length (); i ++) {
        char x = secret.charAt (i);
        if (c == x) {
            tmp [i] = c;
        }
    }
    return new String (tmp);
}
----------------------------------------

public static String updatePartialword (String partial, String secret, char c) {
    StringBuilder sb = new Stringbuilder ();
    sb.append ("");
    for (int i = 0;
    i < partial.lenght; i ++) if (secret.charAt (i) == c) sb.append (c);
    else sb.append ('-');

    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33725002_33725392_1_33
33725002_33725571_1_27
Title: Java - parse CSV into Arrays based on columns 
----------------------------------------

public static void main (String [] args) {
    Scanner s = null;
    try {
        s = new Scanner (new File ("C:\\temp\\file.txt"));
        ArrayList lis1 = new ArrayList ();
        ArrayList lis2 = new ArrayList ();
        ArrayList lis3 = new ArrayList ();
        while (s.hasNext ()) {
            String d = s.nextLine ();
            lis1.add (d.split ("\\$") [0]);
            lis2.add (d.split ("\\$") [1]);
            lis3.add (d.split ("\\$") [2]);
        }
        for (Object l : lis1) {
            System.out.print (l + " ");
        }
        System.out.print ("\n ");
        for (Object l : lis2) {
            System.out.print (l + " ");
        }
        System.out.print ("\n ");
        for (Object l : lis3) {
            System.out.print (l + " ");
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < ArrayList < String > > columns = new ArrayList < ArrayList < String > > ();
    BufferedReader br = null;
    try {
        String sCurrentLine;
        br = new BufferedReader (new FileReader ("testing.cvs"));
        while ((sCurrentLine = br.readLine ()) != null) {
            String [] fields = sCurrentLine.split ("\\$");
            for (int i = 0;
            i < fields.length; i ++) {
                if (columns.size () <= i) {
                    columns.add (new ArrayList < String > ());
                }
                columns.get (i).add (fields [i]);
            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (br != null) br.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33725505_41165259_4_19
33725505_41408981_1_32
Title: Printing the first N prime numbers 
----------------------------------------

public static void main (String [] args) {
    int count = 0, max_count = 100, i;
    System.out.println ("First " + max_count + " Prime Numbers:");
    for (int num = 1;
    count < max_count; num ++) {
        for (i = 2; num % i != 0; i ++);

        if (i == num) {
            System.out.print (" " + num);
            count ++;
        }
    }
}
----------------------------------------

public static void main (String...commandline_args) {
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        System.out.println ("Please enter the limit of prime nos");
        int limit = Integer.parseInt (br.readLine ());
        int checkLimit = 0;
        int check = 0;
        outer : for (int i = 2;
        ; i ++) {
            check = 0;
            for (int j = 1;
            j <= i; j ++) {
                if (i % j == 0) {
                    check ++;
                }
            }
            if (check == 2) {
                checkLimit ++;
                System.out.println (i);
                if (checkLimit == limit) break outer;

            }
        }
    } catch (Exception e) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33727830_33727882_83_93
33727830_33727882_98_110
Title: Java Button pausing graphical updates 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Collections.shuffle (panels);
    for (SequencePane pane : panels) {
        try {
            pane.setHighlighted (true);
            Thread.sleep (250);
            pane.setHighlighted (false);
        } catch (InterruptedException ex) {
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (sequenceIndex > 0) {
        panels.get (sequenceIndex - 1).setHighlighted (false);
    }
    if (sequenceIndex < panels.size ()) {
        panels.get (sequenceIndex).setHighlighted (true);
        sequenceIndex ++;
    } else {
        timer.stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33743359_33743527_55_70
33743359_33744081_62_79
Title: Editable JComboBox gives error: <identifier> expected and illegal start of type 
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    Object source = e.getSource ();
    if (source == tunes) {
        songNum = tunes.getSelectedIndex ();
        songPrice = songAmount [songNum];
        result = "Total Price $" + songPrice;
        outputs.setText (result);
    }
}
----------------------------------------

public void itemStateChanged (ItemEvent e) {
    Object source = e.getSource ();
    if (source == tunes) {
        songNum = tunes.getSelectedIndex ();
        songPrice = songAmount [songNum];
        result = "Total Price $" + songPrice;
        outputs.setText (result);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33744327_33744562_1_33
33744327_33746507_1_60
Title: Java - parse CSV into Hashmap and Arraylist based on columns 
----------------------------------------

public static void main (String [] args) {
    Map < String, List < String > > columnsMap = new HashMap < > ();
    BufferedReader br = null;
    try {
        String sCurrentLine;
        br = new BufferedReader (new FileReader ("testing.cvs"));
        while ((sCurrentLine = br.readLine ()) != null) {
            String [] fields = sCurrentLine.split ("\\$");
            for (int i = 0;
            i < fields.length; i ++) {
                String columnKey = "column" + (i + 1);
                List < String > columnValuesList = columnsMap.get (columnKey);
                if (columnValuesList == null) {
                    columnValuesList = new ArrayList < > ();
                }
                columnValuesList.add (fields [i]);
                columnsMap.put (columnKey, columnValuesList);
            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (br != null) br.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Map < String, List < String > > columns = new HashMap < String, List < String > > ();
    List < String > columnNames = new ArrayList < String > ();
    BufferedReader br = null;
    try {
        String sCurrentLine;
        br = new BufferedReader (new FileReader ("C:\\testing.csv"));
        boolean header = true;
        while ((sCurrentLine = br.readLine ()) != null) {
            String [] fields = sCurrentLine.split ("\\$");
            for (int i = 0;
            i < fields.length; i ++) {
                if (header) {
                    columns.put (fields [i], null);
                    columnNames.add (fields [i]);
                    if (i == (fields.length - 1)) header = false;

                } else {
                    List < String > tempList = columns.get (columnNames.get (i));
                    if (tempList != null) {
                        tempList.add (fields [i]);
                    } else {
                        tempList = new ArrayList < String > ();
                        tempList.add (fields [i]);
                    }
                    columns.put (columnNames.get (i), tempList);
                }
            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (br != null) br.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
    System.out.println ("columns: " + columns.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33745035_33745930_1_12
33745035_33746170_1_12
Title: Iterator stops midway through after finding a match 
----------------------------------------

public void printAreaCode (String areacode) {
    for (String p : phonebook.values ()) {
        if (p.startsWith (areacode)) {
            for (String name : phonebook.keySet ()) {
                String key = name;
                System.out.println (key);
            }
        }
    }
}
----------------------------------------

public boolean printAreaCode (String areacode) {
    boolean found = false;
    for (Map.Entry < String, String > entry : phonebook.entrySet ()) {
        String value = entry.getValue ();
        if (value.startsWith (areacode)) {
            String key = entry.getKey ();
            System.out.println (key);
            found = true;
        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33747887_33748120_1_10
33747887_33748200_1_18
Title: Remove every third element from array? 
----------------------------------------

public static int [] replicate (int [] array, int n) {
    int [] newArray = new int [array.length - array.length / n];
    int j = 0;
    for (int i = 0;
    i != array.length; i ++) {
        if ((i + 1) % n != 0) {
            newArray [j ++] = array [i];
        }
    }
    return newArray;
}
----------------------------------------

public static int [] replicate (int [] arr, int n) {
    int [] temp = new int [arr.length];
    int current = 0;
    int count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (count % n != 0) {
            temp [count] = arr [i];
            count ++;
        }
    }
    int [] whitelist = new int [count];
    System.arraycopy (temp, 0, whitelist, 0, count);
    return whitelist;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33749043_33749274_1_15
33749043_33749506_1_24
Title: how to find next and previous date from date variable 
----------------------------------------

public static void main (String [] args) {
    Date date = new Date ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    try {
        date = sdf.parse ("17/11/2015");
        Calendar cal = Calendar.getInstance ();
        cal.setTime (date);
        System.out.println (cal.getTime ());
        cal.add (Calendar.DAY_OF_MONTH, 1);
        System.out.println (cal.getTime ());
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    List < Date > dateList = new ArrayList < Date > ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    dateList.add (sdf.parse ("5/1/2015"));
    dateList.add (sdf.parse ("20/2/2015"));
    dateList.add (sdf.parse ("15/3/2015"));
    dateList.add (sdf.parse ("11/4/2015"));
    System.out.println ("Testing with 1/3/2015.");
    dateSorting (dateList, sdf.parse ("1/3/2015"));
    System.out.println ("Testing with 1/1/2015.");
    dateSorting (dateList, sdf.parse ("1/1/2015"));
    System.out.println ("Testing with 12/4/2015.");
    dateSorting (dateList, sdf.parse ("12/4/2015"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33749043_33749274_1_15
33749043_33750264_32_42
Title: how to find next and previous date from date variable 
----------------------------------------

public static void main (String [] args) {
    Date date = new Date ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    try {
        date = sdf.parse ("17/11/2015");
        Calendar cal = Calendar.getInstance ();
        cal.setTime (date);
        System.out.println (cal.getTime ());
        cal.add (Calendar.DAY_OF_MONTH, 1);
        System.out.println (cal.getTime ());
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    List < Date > dateList = new ArrayList < > ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    dateList.add (sdf.parse ("05/01/2015"));
    dateList.add (sdf.parse ("20/02/2015"));
    dateList.add (sdf.parse ("15/03/2015"));
    dateList.add (sdf.parse ("11/04/2015"));
    new CompareDate ().compare ("max-closet", dateList, sdf, new DateSort ());
    new CompareDate ().compare ("min-closet", dateList, sdf, new DateSort ().reversed ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33749043_33749506_1_24
33749043_33750264_32_42
Title: how to find next and previous date from date variable 
----------------------------------------

public static void main (String [] args) throws ParseException {
    List < Date > dateList = new ArrayList < Date > ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    dateList.add (sdf.parse ("5/1/2015"));
    dateList.add (sdf.parse ("20/2/2015"));
    dateList.add (sdf.parse ("15/3/2015"));
    dateList.add (sdf.parse ("11/4/2015"));
    System.out.println ("Testing with 1/3/2015.");
    dateSorting (dateList, sdf.parse ("1/3/2015"));
    System.out.println ("Testing with 1/1/2015.");
    dateSorting (dateList, sdf.parse ("1/1/2015"));
    System.out.println ("Testing with 12/4/2015.");
    dateSorting (dateList, sdf.parse ("12/4/2015"));
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    List < Date > dateList = new ArrayList < > ();
    SimpleDateFormat sdf = new SimpleDateFormat ("dd/MM/yyyy");
    dateList.add (sdf.parse ("05/01/2015"));
    dateList.add (sdf.parse ("20/02/2015"));
    dateList.add (sdf.parse ("15/03/2015"));
    dateList.add (sdf.parse ("11/04/2015"));
    new CompareDate ().compare ("max-closet", dateList, sdf, new DateSort ());
    new CompareDate ().compare ("min-closet", dateList, sdf, new DateSort ().reversed ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752752_1_14
33752616_33752759_1_14
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l != null && ! l.isEmpty ()) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            addRekursive (l);
        }
        return l.get (0);
    } else {
        return 0;
    }
}
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () >= 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l.size () > 0) {
        return l.get (0);
    } else {
        return - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752752_1_14
33752616_33752761_12_20
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l != null && ! l.isEmpty ()) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            addRekursive (l);
        }
        return l.get (0);
    } else {
        return 0;
    }
}
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () != 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    return l.get (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752752_1_14
33752616_33752767_1_15
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l != null && ! l.isEmpty ()) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            addRekursive (l);
        }
        return l.get (0);
    } else {
        return 0;
    }
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (l != null && l.size () > 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l != null) {
        return l.get (0);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752752_1_14
33752616_33753055_1_13
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l != null && ! l.isEmpty ()) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            addRekursive (l);
        }
        return l.get (0);
    } else {
        return 0;
    }
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (CollectionUtils.isNotEmpty (l)) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            return addRekursive (l);
        } else {
            return l.get (0);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752759_1_14
33752616_33752761_12_20
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () >= 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l.size () > 0) {
        return l.get (0);
    } else {
        return - 1;
    }
}
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () != 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    return l.get (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752759_1_14
33752616_33752767_1_15
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () >= 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l.size () > 0) {
        return l.get (0);
    } else {
        return - 1;
    }
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (l != null && l.size () > 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l != null) {
        return l.get (0);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752759_1_14
33752616_33753055_1_13
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () >= 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l.size () > 0) {
        return l.get (0);
    } else {
        return - 1;
    }
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (CollectionUtils.isNotEmpty (l)) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            return addRekursive (l);
        } else {
            return l.get (0);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752761_12_20
33752616_33752767_1_15
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () != 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    return l.get (0);
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (l != null && l.size () > 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l != null) {
        return l.get (0);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752761_12_20
33752616_33753055_1_13
Title: Java adding list of int 
----------------------------------------

public static int addRekursive (List < Integer > l) {
    if (l.size () != 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    return l.get (0);
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (CollectionUtils.isNotEmpty (l)) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            return addRekursive (l);
        } else {
            return l.get (0);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33752616_33752767_1_15
33752616_33753055_1_13
Title: Java adding list of int 
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (l != null && l.size () > 1) {
        l.add (l.get (0) + l.get (1));
        l.remove (1);
        l.remove (0);
        addRekursive (l);
    }
    if (l != null) {
        return l.get (0);
    }
    return null;
}
----------------------------------------

public int addRekursive (List < Integer > l) {
    if (CollectionUtils.isNotEmpty (l)) {
        if (l.size () > 1) {
            l.add (l.get (0) + l.get (1));
            l.remove (1);
            l.remove (0);
            return addRekursive (l);
        } else {
            return l.get (0);
        }
    }
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33755248_33755745_175_186
33755248_33755745_188_199
Title: How to get particular Log in csv/txt file to android device 
----------------------------------------

private static void write (LogLevel logLevel, String tag, String log) {
    if (isLogEnable (logLevel) && ENABLE_FILE_LOG) {
        StackTraceElement stackTraceElement = Thread.currentThread ().getStackTrace () [4];
        String logPoint = stackTraceElement.getClassName () + "." + stackTraceElement.getMethodName () + ":" + stackTraceElement.getLineNumber ();
        String msg = "[" + getCurrentDateTime () + "] " + logLevel.name () + " " + logPoint + " " + tag + "//:" + log;
        write (msg);
    }
    if (isLogEnable (logLevel) && ENABLE_CONSOLE_LOG) {
        Log.println (logLevel.getLogLevel (), makeLogTag (tag), log);
    }
}
----------------------------------------

private static void write (LogLevel logLevel, String tag, String log, Throwable tr) {
    if (isLogEnable (logLevel) && ENABLE_FILE_LOG) {
        StackTraceElement stackTraceElement = Thread.currentThread ().getStackTrace () [4];
        String logPoint = stackTraceElement.getClassName () + "::" + stackTraceElement.getMethodName () + ":" + stackTraceElement.getLineNumber ();
        String msg = "[" + getCurrentDateTime () + "] " + logLevel.name () + " " + logPoint + " " + tag + "//:" + log + "\n" + Log.getStackTraceString (tr);
        write (msg);
    }
    if (isLogEnable (logLevel) && ENABLE_CONSOLE_LOG) {
        Log.println (logLevel.getLogLevel (), makeLogTag (tag), log + "\n" + Log.getStackTraceString (tr));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33755248_33755745_175_186
33755248_33755745_201_235
Title: How to get particular Log in csv/txt file to android device 
----------------------------------------

private static void write (LogLevel logLevel, String tag, String log) {
    if (isLogEnable (logLevel) && ENABLE_FILE_LOG) {
        StackTraceElement stackTraceElement = Thread.currentThread ().getStackTrace () [4];
        String logPoint = stackTraceElement.getClassName () + "." + stackTraceElement.getMethodName () + ":" + stackTraceElement.getLineNumber ();
        String msg = "[" + getCurrentDateTime () + "] " + logLevel.name () + " " + logPoint + " " + tag + "//:" + log;
        write (msg);
    }
    if (isLogEnable (logLevel) && ENABLE_CONSOLE_LOG) {
        Log.println (logLevel.getLogLevel (), makeLogTag (tag), log);
    }
}
----------------------------------------

private static void write (String text) {
    BufferedWriter out = null;
    String filePath = LOG_DIRECTORY + "AppLog.txt";
    try {
        SimpleDateFormat df = new SimpleDateFormat ("dd_MMM_yyyy", Locale.ENGLISH);
        String formattedDate = df.format (System.currentTimeMillis ());
        if (! new File (LOG_DIRECTORY).exists ()) {
            new File (LOG_DIRECTORY).mkdirs ();
        }
        if (! new File (filePath).exists ()) new File (filePath).createNewFile ();

        if (new File (filePath).exists ()) {
            FileWriter fStream = new FileWriter (filePath, true);
            out = new BufferedWriter (fStream);
            out.write (text);
            out.flush ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        try {
            if (out != null) out.close ();

        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33755248_33755745_188_199
33755248_33755745_201_235
Title: How to get particular Log in csv/txt file to android device 
----------------------------------------

private static void write (LogLevel logLevel, String tag, String log, Throwable tr) {
    if (isLogEnable (logLevel) && ENABLE_FILE_LOG) {
        StackTraceElement stackTraceElement = Thread.currentThread ().getStackTrace () [4];
        String logPoint = stackTraceElement.getClassName () + "::" + stackTraceElement.getMethodName () + ":" + stackTraceElement.getLineNumber ();
        String msg = "[" + getCurrentDateTime () + "] " + logLevel.name () + " " + logPoint + " " + tag + "//:" + log + "\n" + Log.getStackTraceString (tr);
        write (msg);
    }
    if (isLogEnable (logLevel) && ENABLE_CONSOLE_LOG) {
        Log.println (logLevel.getLogLevel (), makeLogTag (tag), log + "\n" + Log.getStackTraceString (tr));
    }
}
----------------------------------------

private static void write (String text) {
    BufferedWriter out = null;
    String filePath = LOG_DIRECTORY + "AppLog.txt";
    try {
        SimpleDateFormat df = new SimpleDateFormat ("dd_MMM_yyyy", Locale.ENGLISH);
        String formattedDate = df.format (System.currentTimeMillis ());
        if (! new File (LOG_DIRECTORY).exists ()) {
            new File (LOG_DIRECTORY).mkdirs ();
        }
        if (! new File (filePath).exists ()) new File (filePath).createNewFile ();

        if (new File (filePath).exists ()) {
            FileWriter fStream = new FileWriter (filePath, true);
            out = new BufferedWriter (fStream);
            out.write (text);
            out.flush ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        try {
            if (out != null) out.close ();

        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33769457_33769560_1_11
33769457_33769565_3_14
Title: "Java Constructor w/ array as an argument & user input from Driver" 
----------------------------------------

public static void main (String [] args) {
    double testScores [] = new double [5];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < testScores.length; i ++) {
        System.out.println ("Enter some test scores: ");
        testScores [i] = scan.nextDouble ();
    }
    TestScores scores = new TestScores (testScores);
    System.out.println ("The average of the test scores is " + scores.averageScores ());
}
----------------------------------------

public static void main (String [] args) {
    double testScores [] = new double [5];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < testScores.length; i ++) {
        System.out.println ("Enter some test scores: ");
        testScores [i] = scan.nextDouble ();
    }
    TestScores scores = new TestScores (testScores);
    System.out.println ("The average of the test scores is " + scores.averageScores ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33770590_33770754_1_18
33770590_33772112_1_21
Title: How to identify the number of common character between two strings? 
----------------------------------------

public int count (String str1, String str2) {
    int result = 0;
    if (str1.length () == 0 || str2.length () == 0) return result;

    if (str1.length () > str2.length ()) {
        for (int i = 0;
        i < str2.length (); i ++) {
            if (str2.charAt (i) == str1.charAt (i)) result ++;

        }
    } else {
        for (int i = 0;
        i < str1.length (); i ++) {
            if (str1.charAt (i) == str2.charAt (i)) result ++;

        }
    }
    return result;
}
----------------------------------------

public int count (String s1, String s2) {
    int result = 0;
    char [] ch1 = s1.toCharArray ();
    char [] ch2 = s2.toCharArray ();
    if (ch1.length > ch2.length) {
        for (int i = 0;
        i < ch2.length; i ++) {
            if (ch1 [i] == ch2 [i]) {
                result ++;
            }
        }
    } else {
        for (int i = 0;
        i < ch1.length; i ++) {
            if (ch2 [i] == ch1 [i]) {
                result ++;
            }
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33779366_33779602_1_21
33779366_33779632_1_15
Title: Finding intersection 
----------------------------------------

public int [] intersection (Set parSet) {
    int [] interArr = new int [numbers.length];
    int [] testArr = parSet.toArray ();
    int intCount = 0;
    for (int index = 0;
    index < numbers.length; index ++) {
        for (int compareInt = 0;
        compareInt < testArr.length; compareInt ++) {
            if (numbers [index] == testArr [compareInt]) {
                interArr [intCount] = testArr [compareInt];
                intCount ++;
            }
        }
    }
    return interArr;
}
----------------------------------------

public int [] intersection (Set parSet) {
    int [] interArr = new int [numbers.length];
    int [] testArr = parSet.numbers;
    int intCount = 0;
    for (int index = 0;
    index < numbers.length; index ++) {
        for (int compareInt = 0;
        compareInt < testArr.length; compareInt ++) {
            if (numbers [index] == testArr [compareInt]) {
                interArr [intCount] = testArr [compareInt];
                intCount ++;
            }
        }
    }
    return interArr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33782392_40406010_1_17
33782392_42785482_4_25
Title: How to modify this code to print the 3 integers in order? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please insert 3 numbers: ");
    Scanner number = new Scanner (System.in);
    Integer [] input = new Integer [3];
    int i = 0;
    while (i != 3) {
        input [i ++] = number.nextInt ();
    }
    number.close ();
    Arrays.sort (input, Collections.reverseOrder ());
    StringBuffer sb = new StringBuffer ();
    for (Integer a : input) {
        sb.append (a).append ("><![CDATA[");
    }
    System.out.println (sb.substring (0, sb.length () - 1));
}
----------------------------------------

public static void main (String [] args) {
    int [] nums = new int [3];
    int k = 0;
    System.out.println ("Please insert 3 numbers: ");
    Scanner number = new Scanner (System.in);
    while (number.hasNext () && k < 3) {
        int i = 0;
        try {
            i = Integer.parseInt (number.nextLine ());
        } catch (NumberFormatException e) {
            System.out.println ("Error: Invalid Value.");
        }
        nums [k] = i;
        k ++;
    }
    Arrays.sort (nums);
    System.out.println (nums [2] + "><![CDATA[" + nums [1] + "><![CDATA[" + nums [0]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33788739_33788883_1_36
33788739_33789051_6_33
Title: How to exit from a do while loop in Java? 
----------------------------------------

public static void main (String [] args) {
    String PhoneNumber;
    int numLength = 10;
    do {
        PhoneNumber = JOptionPane.showInputDialog (null, "Enter your 10 digit phone number or enter 999 to quit");
        if (PhoneNumber == null || PhoneNumber.equals ("999")) {
            break;
        }
        while (PhoneNumber.length () != numLength) {
            PhoneNumber = JOptionPane.showInputDialog (null, "Error: You Entered " + PhoneNumber.length () + " digits\nPlease" + " Enter a 10 digit Phone number");
            if (PhoneNumber == null) PhoneNumber = "";

        }
        StringBuilder str = new StringBuilder (PhoneNumber);
        str.insert (0, '(');
        str.insert (4, ')');
        str.insert (5, ' ');
        str.insert (9, '-');
        JOptionPane.showMessageDialog (null, "Your telephone number is " + str.toString ());
    } while (! PhoneNumber.equals ("999"));
}
----------------------------------------

public static void main (String [] args) {
    String PhoneNumber;
    int numLength = 10;
    do {
        PhoneNumber = JOptionPane.showInputDialog (null, "Enter your 10 digit phone number or enter 999 to quit");
        while (PhoneNumber != null && PhoneNumber.length () != numLength) {
            PhoneNumber = JOptionPane.showInputDialog (null, "Error: You Entered " + PhoneNumber.length () + " digits\nPlease" + " Enter a 10 digit Phone number");
        }
        StringBuilder str = new StringBuilder (PhoneNumber);
        str.insert (0, '(');
        str.insert (4, ')');
        str.insert (5, ' ');
        str.insert (9, '-');
        JOptionPane.showMessageDialog (null, "Your telephone number is " + str.toString ());
    } while (! PhoneNumber.substring (0, 3).equals ("999"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33794139_33794188_1_12
33794139_33794347_1_12
Title: My loop in java is not working. Can anyone see why? 
----------------------------------------

public static double [] dReadInputs (int numberOfInputs) {
    int t = 0;
    double [] inputs = new double [numberOfInputs];
    while (t < numberOfInputs) {
        JOptionPane.showInputDialog ("Please enter " + numberOfInputs + "grade values one at a time: ");
        inputs [t] = Integer.parseInt (in.nextLine ());
        t ++;
    }
    return inputs;
}
----------------------------------------

public static double [] dReadInputs (int numberOfInputs) {
    int t = 0;
    double [] inputs = new double [numberOfInputs];
    while (t < numberOfInputs) {
        String in = JOptionPane.showInputDialog ("Please enter value for grade " + (t + 1) + " : ");
        inputs [t] = Double.parseDouble (in);
        t ++;
    }
    return inputs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33794572_33794663_1_15
33794572_33794721_1_13
Title: Why won't my code take the input from the command line? 
----------------------------------------

public static void main (String [] args) {
    int num = 0;
    for (int i = 0;
    i < args.length; i ++) {
        System.out.println ("Enter a three digit number, with the first digit larger than the third");
        try (Scanner s = new Scanner (System.in)) {
            num = s.nextInt ();
        }
        reverseNum (num);
        subtractNum (num);
        addNum (num);
    }
}
----------------------------------------

public static void main (String [] args) {
    int num = 0;
    for (int i = 0;
    i < args.length; i ++) {
        System.out.println ("Enter a three digit number, with the first digit larger than the third");
        num = Integer.parseInt (args [i]);
        reverseNum (num);
        subtractNum (num);
        addNum (num);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33797231_33797267_1_18
33797231_33797420_1_19
Title: Trying to get file name of the largest file 
----------------------------------------

public static File largestFile (File f) {
    if (f.isFile ()) {
        return f;
    } else {
        File largestFile = null;
        for (File file : f.listFiles ()) {
            File possiblyLargeFile = largestFile (file);
            if (possiblyLargeFile != null) {
                if (largestFile == null || possiblyLargeFile.length () > largestFile.length ()) {
                    largestFile = possiblyLargeFile;
                }
            }
        }
        return largestFile;
    }
}
----------------------------------------

public static File largestFile (File f) {
    if (f.isFile ()) {
        return f;
    } else {
        long largestSoFar = - 1;
        File largestFile = null;
        for (File file : f.listFiles ()) {
            file = largestFile (file);
            if (file != null) {
                long newSize = file.length ();
                if (newSize > largestSoFar) {
                    largestSoFar = newSize;
                    largestFile = file;
                }
            }
        }
        return largestFile;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33805714_33805855_1_17
33805714_33805885_1_16
Title: Swapping Min and Max int of an array [Java] 
----------------------------------------

public static int [] swap (int [] intArray) {
    int max = intArray [0], min = intArray [0], maxIndex = 0, minIndex = 0;
    for (int index = 1;
    index < intArray.length; index ++) {
        if (intArray [index] > max) {
            max = intArray [index];
            maxIndex = index;
        }
        if (intArray [index] < min) {
            min = intArray [index];
            minIndex = index;
        }
    }
    intArray [maxIndex] = min;
    intArray [minIndex] = max;
    return intArray;
}
----------------------------------------

public static int [] swap (int [] array) {
    int minIndex = 0, maxIndex = 0;
    for (int i = 1;
    i < array.length; ++ i) {
        if (array [i] < array [minIndex]) minIndex = i;

        if (array [i] > array [maxIndex]) maxIndex = i;

    }
    int t;
    if (maxIndex != minIndex) {
        t = array [minIndex];
        array [minIndex] = array [maxIndex];
        array [maxIndex] = t;
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33805760_33806957_10_31
33805760_33825783_19_76
Title: how to group xml elements in java by attributes 
----------------------------------------

public static void main (String argv []) {
    try {
        File fXmlFile = new File ("C:/test.xml");
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder ();
        Document doc = dBuilder.parse (fXmlFile);
        doc.getDocumentElement ().normalize ();
        System.out.println ("Root element in this XML file is :" + doc.getDocumentElement ().getNodeName ());
        NodeList nList = doc.getElementsByTagName ("ContractorAvailable");
        System.out.println ("----------------------------");
        for (int i = 0;
        i < nList.getLength (); i ++) {
            Node nNode = nList.item (i);
            System.out.println ("\nCurrent Element :" + nNode.getNodeName ());
            if (nNode.getNodeType () == Node.ELEMENT_NODE) {
                Element eElement = (Element) nNode;
                System.out.println ("Contractor ID : " + eElement.getAttribute ("ContractorID"));
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws ParserConfigurationException, SAXException, IOException {
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance ();
    dbf.setNamespaceAware (true);
    DocumentBuilder db = dbf.newDocumentBuilder ();
    Document inputDoc = db.parse ("input.xml");
    Document outputDoc = db.newDocument ();
    outputDoc.appendChild (outputDoc.createElement ("root"));
    NodeList domSlots = inputDoc.getElementsByTagName ("Slots");
    List < Element > slots = new ArrayList < > ();
    for (int i = 0;
    i < domSlots.getLength (); i ++) {
        slots.add ((Element) domSlots.item (i));
    }
    List < Element > groups = slots.stream ().collect (Collectors.groupingBy (slot -> slot.getAttribute ("date"))).entrySet ().stream ().map (entry -> {
        Element newSlot = outputDoc.createElement ("Slots");
        newSlot.setAttribute ("date", entry.getKey ());
        entry.getValue ().stream ().collect (Collectors.groupingBy (slot -> ((Element) slot.getElementsByTagName ("TimePeriod").item (0)).getAttribute ("value"))).entrySet ().forEach (time -> {
            Element timeEl = outputDoc.createElement ("TimePeriod");
            timeEl.setAttribute ("value", time.getKey ());
            newSlot.appendChild (timeEl);
            time.getValue ().forEach (el -> {
                NodeList cas = el.getElementsByTagName ("ContractorAvailable");
                for (int j = 0;
                j < cas.getLength (); j ++) {
                    timeEl.appendChild (outputDoc.importNode (cas.item (j), true));
                }
            });
        });
        return newSlot;
    }).collect (Collectors.toList ());
    LSSerializer serializer = ((DOMImplementationLS) db.getDOMImplementation ()).createLSSerializer ();
    serializer.getDomConfig ().setParameter ("format-pretty-print", true);
    groups.forEach (slot -> outputDoc.getDocumentElement ().appendChild (slot));
    System.out.println (serializer.writeToString (outputDoc));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33805944_33805989_1_12
33805944_33806153_1_10
Title: java reader ends String with null 
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String line;
    String indexInFile = "";
    while ((line = reader.readLine ()) != null) {
        indexInFile += line;
        System.out.println ("indexxxxxxxx: " + line);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String indexInFile = "";
    while ((indexInFile = reader.readLine ()) != null) {
        System.out.println ("indexxxxxxxx: " + indexInFile);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33805944_33805989_1_12
33805944_33806210_1_11
Title: java reader ends String with null 
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String line;
    String indexInFile = "";
    while ((line = reader.readLine ()) != null) {
        indexInFile += line;
        System.out.println ("indexxxxxxxx: " + line);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String indexInFile = "";
    while (reader.ready ()) {
        indexInFile += reader.readLine ();
        System.out.println ("indexxxxxxxx: " + indexInFile);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33805944_33806153_1_10
33805944_33806210_1_11
Title: java reader ends String with null 
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String indexInFile = "";
    while ((indexInFile = reader.readLine ()) != null) {
        System.out.println ("indexxxxxxxx: " + indexInFile);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------

public String readIndex () throws IOException {
    if (! fileExisits) return "";

    String indexInFile = "";
    while (reader.ready ()) {
        indexInFile += reader.readLine ();
        System.out.println ("indexxxxxxxx: " + indexInFile);
    }
    System.out.println ("reader get: " + indexInFile);
    return indexInFile;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3381619_3381635_20_33
3381619_3383081_36_50
Title: In multithreading: How to determine which thread stops first 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5000; i ++) {
        System.out.println (i + "  " + this.getName ());
        try {
            Thread.sleep (250);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    System.out.println (this.getName () + " finished.");
}
----------------------------------------

public void run () {
    try {
        startingPistol.await ();
        for (int i = 1;
        i <= 5000; i ++) {
            System.out.println (i + "  " + name);
        }
        boolean iWon = winner.compareAndSet (null, this);
        System.out.printf ("%s %s.%n", name, iWon ? "won" : "lost");
    } catch (InterruptedException ex) {
        System.out.printf ("%s was assasinated before the race started.%n", name);
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33819553_34305469_29_92
33819553_35716771_26_70
Title: How to make connections for Kafka-Producer for this Twitter API 
----------------------------------------

public void run () {
    try {
        FileReader f = new FileReader ("/home/trainings/Desktop/Streamin/input1.csv");
        BufferedReader bf = new BufferedReader (f);
        String Screen_Name = "";
        while ((Screen_Name = bf.readLine ()) != null) {
            System.out.println ("Starting Twitter public stream consumer thread.");
            System.out.println (Screen_Name);
            OAuthService service = new ServiceBuilder ().provider (TwitterApi.class).apiKey ("ZRra7TMrssssssssssssssssxxxxxxxxxxx").apiSecret ("LgUhEY4R8xxxxxxxxxxxxxxxxxxQw069D").build ();
            Token accessToken = new Token ("349211dddddddddddddddhyv4AL01lMRVN", "gqNqPuWoSxxxxxxxxxxxxxxxxxxxxkz1xCrzxWMUgd3kZ");
            Properties props = new Properties ();
            props.put ("metadata.broker.list", "localhost:9092");
            props.put ("serializer.class", "kafka.serializer.StringEncoder");
            props.put ("partitioner.class", "example.producer.SimplePartitioner");
            props.put ("request.required.acks", "1");
            props.put ("retry.backoff.ms", "150");
            props.put ("message.send.max.retries", "10");
            props.put ("topic.metadata.refresh.interval.ms", "0");
            ProducerConfig config = new ProducerConfig (props);
            final Producer < String, String > producer = new Producer < String, String > (config);
            OAuthRequest request = new OAuthRequest (Verb.POST, STREAM_URI);
            request.addHeader ("version", "HTTP/1.1");
            request.addHeader ("host", "stream.twitter.com");
            request.setConnectionKeepAlive (true);
            request.addHeader ("user-agent", "Twitter Stream Reader");
            request.addBodyParameter ("track", Screen_Name);
            service.signRequest (accessToken, request);
            Response response = request.send ();
            BufferedReader reader = new BufferedReader (new InputStreamReader (response.getStream ()));
            String line;
            while ((line = reader.readLine ()) != null) {
                KeyedMessage < String, String > data = new KeyedMessage < String, String > ("twitter_events5", line);
                System.out.println (line);
                producer.send (data);
                Thread.sleep (1000);
            }
        }
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void run (String consumerKey, String consumerSecret, String token, String secret) throws InterruptedException {
    Properties properties = new Properties ();
    properties.put ("metadata.broker.list", "localhost:9092");
    properties.put ("serializer.class", "kafka.serializer.StringEncoder");
    properties.put ("client.id", "camus");
    ProducerConfig producerConfig = new ProducerConfig (properties);
    Producer < String, String > producer = new Producer < String, String > (producerConfig);
    BlockingQueue < String > queue = new LinkedBlockingQueue < String > (10);
    StatusesFilterEndpoint endpoint = new StatusesFilterEndpoint ();
    endpoint.trackTerms (Lists.newArrayList ("", "#India"));
    Authentication auth = new OAuth1 (consumerKey, consumerSecret, token, secret);
    Client client = new ClientBuilder ().hosts (Constants.STREAM_HOST).endpoint (endpoint).authentication (auth).processor (new StringDelimitedProcessor (queue)).build ();
    client.connect ();
    for (int msgRead = 0;
    msgRead < 10; msgRead ++) {
        KeyedMessage < String, String > message = null;
        try {
            message = new KeyedMessage < String, String > (topic, queue.take ());
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        producer.send (message);
        System.out.println (message);
    }
    producer.close ();
    client.stop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
338206_29531341_1_18
338206_7445174_6_26
Title: Why can't I use switch statement on a String? 
----------------------------------------

public static void main (String [] args) {
    switch (args [0]) {
        case "Monday" :
        case "Tuesday" :
        case "Wednesday" :
            System.out.println ("boring");
            break;
        case "Thursday" :
            System.out.println ("getting better");
        case "Friday" :
        case "Saturday" :
        case "Sunday" :
            System.out.println ("much better");
            break;
    }
}
----------------------------------------

public static void main (String [] args) {
    String current = args [0];
    Days currentDay = Days.valueOf (current.toUpperCase ());
    switch (currentDay) {
        case MONDAY :
        case TUESDAY :
        case WEDNESDAY :
            System.out.println ("boring");
            break;
        case THURSDAY :
            System.out.println ("getting better");
        case FRIDAY :
        case SATURDAY :
        case SUNDAY :
            System.out.println ("much better");
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33834965_33835064_10_44
33834965_33835305_10_51
Title: Can't Get my menu to open methods 
----------------------------------------

public static void main (String args []) throws IOException {
    int menuChoice = 1;
    System.out.println ("Hello and Welcome to Javavision");
    while (menuChoice != 6) {
        System.out.println ("Enter Menu Choice");
        System.out.println ("(1) Enter TV Shows/Add a TV Show");
        System.out.println ("(2) Modify TV Show");
        System.out.println ("(3) Delete TV Show");
        System.out.println ("(4) Sort TV Shows");
        System.out.println ("(5) Show all TV Shows");
        System.out.println ("(6) Exit Program");
        Scanner scn = new Scanner (System.in);
        menuChoice = scn.nextInt ();
        if (menuChoice == 1) {
            addShow ();
        } else if (menuChoice == 2) {
            modShow ();
        } else if (menuChoice == 3) {
            deleteShow ();
        } else if (menuChoice == 4) {
            sortShow ();
        } else if (menuChoice == 5) {
            showShows ();
        } else if (menuChoice == 6) {
            break;
        }

    }
}
----------------------------------------

public static void main (String args []) throws IOException {
    int menuChoice = 1;
    System.out.println ("Hello and Welcome to Javavision");
    while (menuChoice != 6) {
        System.out.println ("Enter Menu Choice");
        System.out.println ("(1) Enter TV Shows/Add a TV Show");
        System.out.println ("(2) Modify TV Show");
        System.out.println ("(3) Delete TV Show");
        System.out.println ("(4) Sort TV Shows");
        System.out.println ("(5) Show all TV Shows");
        System.out.println ("(6) Exit Program");
        BufferedReader in;
        in = new BufferedReader (new InputStreamReader (System.in));
        try {
            menuChoice = Integer.parseInt (in.readLine ());
        } catch (IOException ie) {
            ie.printStackTrace ();
        }
        switch (menuChoice) {
            case 1 :
                addShow ();
                break;
            case 2 :
                modShow ();
                break;
            case 3 :
                deleteShow ();
                break;
            case 4 :
                sortShow ();
                break;
            case 5 :
                showShows ();
                break;
            case 6 :
                return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33836919_33837239_12_20
33836919_33837240_1_11
Title: How can i check a string whether it contains letters of a given word by user 
----------------------------------------

public static boolean occursIn (String pattern, String str) {
    for (int i = 0;
    i < pattern.length (); i ++) {
        String c = pattern.substring (i, i + 1);
        if (! "*".equalsIgnoreCase (c) && ! str.contains (c)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean occursIn (String pattern, String str) {
    boolean allLettersFound = true;
    for (int i = 0;
    pattern.charAt (i) <= str.length (); i ++) {
        if (! str.contains (pattern.charAt (i))) {
            allLettersFound = false;
            break;
        }
    }
    return allLettersFound;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_13_26
33841876_33842214_32_47
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("A");
        if (condition.get ()) {
            flag.set (true);
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        while (flag == false) {
            synchronized (lock) {
                if (flag == false) {
                    try {
                        lock.wait ();
                    } catch (InterruptedException ex) {
                    }
                }
            }
        }
        System.out.println ("Kaboom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_13_26
33841876_33842214_50_64
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("A");
        if (condition.get ()) {
            flag.set (true);
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    RunnableA runnableA = new RunnableA ();
    RunnableB runnableB = new RunnableB ();
    Thread t1 = new Thread (runnableA);
    Thread t2 = new Thread (runnableB);
    t1.start ();
    t2.start ();
    try {
        Thread.sleep (5000L);
    } catch (InterruptedException ex) {
    }
    runnableA.condition = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_13_26
33841876_33842214_8_27
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("A");
        if (condition.get ()) {
            flag.set (true);
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        if (condition) {
            if (! flag) {
                synchronized (lock) {
                    System.out.println ("Setting Flag to True");
                    flag = true;
                    lock.notifyAll ();
                }
            }
        } else {
            System.out.println ("Condition is False");
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_36_49
33841876_33842214_32_47
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("B");
        if (a.flag.get ()) {
            System.out.println ("Kaboom");
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        while (flag == false) {
            synchronized (lock) {
                if (flag == false) {
                    try {
                        lock.wait ();
                    } catch (InterruptedException ex) {
                    }
                }
            }
        }
        System.out.println ("Kaboom");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_36_49
33841876_33842214_50_64
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("B");
        if (a.flag.get ()) {
            System.out.println ("Kaboom");
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    RunnableA runnableA = new RunnableA ();
    RunnableB runnableB = new RunnableB ();
    Thread t1 = new Thread (runnableA);
    Thread t2 = new Thread (runnableB);
    t1.start ();
    t2.start ();
    try {
        Thread.sleep (5000L);
    } catch (InterruptedException ex) {
    }
    runnableA.condition = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33841886_36_49
33841876_33842214_8_27
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        System.out.println ("B");
        if (a.flag.get ()) {
            System.out.println ("Kaboom");
            return;
        }
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        if (condition) {
            if (! flag) {
                synchronized (lock) {
                    System.out.println ("Setting Flag to True");
                    flag = true;
                    lock.notifyAll ();
                }
            }
        } else {
            System.out.println ("Condition is False");
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33842214_32_47
33841876_33842214_50_64
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        while (flag == false) {
            synchronized (lock) {
                if (flag == false) {
                    try {
                        lock.wait ();
                    } catch (InterruptedException ex) {
                    }
                }
            }
        }
        System.out.println ("Kaboom");
    }
}
----------------------------------------

public void run () {
    RunnableA runnableA = new RunnableA ();
    RunnableB runnableB = new RunnableB ();
    Thread t1 = new Thread (runnableA);
    Thread t2 = new Thread (runnableB);
    t1.start ();
    t2.start ();
    try {
        Thread.sleep (5000L);
    } catch (InterruptedException ex) {
    }
    runnableA.condition = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33842214_32_47
33841876_33842214_8_27
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    while (true) {
        while (flag == false) {
            synchronized (lock) {
                if (flag == false) {
                    try {
                        lock.wait ();
                    } catch (InterruptedException ex) {
                    }
                }
            }
        }
        System.out.println ("Kaboom");
    }
}
----------------------------------------

public void run () {
    while (true) {
        if (condition) {
            if (! flag) {
                synchronized (lock) {
                    System.out.println ("Setting Flag to True");
                    flag = true;
                    lock.notifyAll ();
                }
            }
        } else {
            System.out.println ("Condition is False");
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33841876_33842214_50_64
33841876_33842214_8_27
Title: How to make two thread wait for each other outcome? 
----------------------------------------

public void run () {
    RunnableA runnableA = new RunnableA ();
    RunnableB runnableB = new RunnableB ();
    Thread t1 = new Thread (runnableA);
    Thread t2 = new Thread (runnableB);
    t1.start ();
    t2.start ();
    try {
        Thread.sleep (5000L);
    } catch (InterruptedException ex) {
    }
    runnableA.condition = true;
}
----------------------------------------

public void run () {
    while (true) {
        if (condition) {
            if (! flag) {
                synchronized (lock) {
                    System.out.println ("Setting Flag to True");
                    flag = true;
                    lock.notifyAll ();
                }
            }
        } else {
            System.out.println ("Condition is False");
            try {
                Thread.sleep (500);
            } catch (InterruptedException ex) {
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33844359_33844723_6_32
33844359_40099639_3_30
Title: Using nested for loops to produce multiple lines of String output 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int s = 4;
        s > i; s --) {
            System.out.print (" ");
        }
        for (int j = 1;
        j < i; j ++) {
            System.out.print ("5");
        }
        System.out.println ("");
    }
    for (int i = 1;
    i <= 3; i ++) {
        for (int s = 1;
        s < i; s ++) {
            System.out.print (" ");
        }
        for (int j = 4;
        j > i; j --) {
            System.out.print ("5");
        }
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] args) {
    int noOfColumns = Integer.parseInt (args [0]);
    int noOfRows = noOfColumns;
    int index = noOfColumns;
    int mid = noOfRows / 2;
    for (int i = 0;
    i < noOfRows; i ++) {
        if (i <= mid) {
            index = index - 2;
        } else {
            index = index + 2;
        }
        for (int j = 0;
        j < noOfColumns; j ++) {
            if (j % 2 == 0 && j >= index) {
                System.out.print ("5");
            } else {
                System.out.print (" ");
            }
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33845829_33846024_7_20
33845829_33846455_1_45
Title: For loop that checks if a string contains symbols? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String variableName;
    String status = "good";
    System.out.print ("This program checks the properness of a proposed Java variable name.");
    System.out.print ("\nEnter a variable name (q to quit): ");
    variableName = sc.next ();
    if (! variableName.matches (MATCH_REGEX)) {
        status = "bad";
    }
    System.out.println (status);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String variableName;
    String status;
    boolean firstTime;
    System.out.print ("This program checks the properness of a proposed Java variable name.");
    while (true) {
        System.out.print ("\nEnter a variable name (q to quit): ");
        status = "Good!";
        variableName = sc.nextLine ();
        if (variableName.equals ("q")) {
            System.exit (0);
        }
        firstTime = true;
        for (char ch : variableName.toCharArray ()) {
            if (Character.isJavaIdentifierPart (ch)) {
                if (Character.isLetterOrDigit (ch)) {
                    if (firstTime) {
                        if (Character.isDigit (ch)) {
                            status = "Illegal";
                            break;
                        }
                        if (Character.isUpperCase (ch)) {
                            status = "Poor Style";
                            break;
                        }
                    }
                } else {
                    status = "Poor Style";
                    break;
                }
            } else {
                status = "Illegal";
                break;
            }
            firstTime = false;
        }
        System.out.println (status);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33846584_33846693_1_14
33846584_33847405_3_33
Title: Java program that concatenates the contents of several files into one file...? 
----------------------------------------

public static void main (final String...args) {
    final List < String > list = new ArrayList < > ();
    Collections.addAll (list, args);
    final Path dstFile = Paths.get (list.remove (list.size () - 1));
    try (final OutputStream out = Files.newOutputStream (dstFile)) {
        for (final String s : list) Files.copy (Paths.get (s), out);

    }
}
----------------------------------------

public static void main (final String [] args) throws Exception {
    checkArgument (args.length > 2, "You must supply at least 3 file paths as arguments dest, src, src, ...");
    final List < Path > paths = Lists.transform (Arrays.asList (args), new Function < String, Path > () {
        @Nullable
        @Override
        public Path apply (@Nullable
        String input) {
            return Paths.get (checkNotNull (input));
        }}

    );
    final Path destination = paths.get (0);
    try (final OutputStream fos = new FileOutputStream (destination.toFile ())) {
        for (final Path p : paths.subList (1, paths.size ())) {
            if (p.toFile ().exists ()) {
                System.out.format ("Reading %s and writing to %s", p.toAbsolutePath (), destination.toAbsolutePath ());
                final FileInputStream fis = new FileInputStream (p.toFile ());
                ByteStreams.copy (fis, fos);
                System.out.println ();
            } else {
                System.err.format ("%s does not exist skipping!", p.toAbsolutePath ());
                System.err.println ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33850086_33850406_1_16
33850086_33851958_1_15
Title: Calculating the maximum difference between two adjacent numbers in an array 
----------------------------------------

public static int maxDiff (int [] numbers) {
    if (numbers.length < 2) {
        return 0;
    }
    if (numbers.length == 2) {
        return Math.abs (numbers [1] - numbers [0]);
    }
    int max = Math.abs (numbers [1] - numbers [0]);
    for (int i = 2;
    i < numbers.length; i ++) {
        int diff = Math.abs (numbers [i - 1] - numbers [i]);
        if (diff > max) {
            max = diff;
        }
    }
    return max;
}
----------------------------------------

public static int maxDiff (int [] arr) {
    if (arr.length < 2) return - 1;

    int min = Integer.MAX_VALUE;
    int max = Integer.MIN_VALUE;
    for (int i = 0;
    i < arr.length; ++ i) {
        if (arr [i] < min) min = arr [i];

        if (arr [i] > max) max = arr [i];

    }
    return Math.abs (max - min);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33860457_33863116_66_89
33860457_33863116_74_85
Title: Swing delay between calls 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    List < JButton > sequence = new ArrayList < > (Arrays.asList (new JButton [] {btnImg1, btnImg2, btnImg3, btnImg4}));
    Collections.shuffle (sequence);
    Timer timer = new Timer (1000, new ActionListener () {
        private JButton last;
        @Override
        public void actionPerformed (ActionEvent e) {
            if (last != null) {
                last.setBackground (null);
            }
            if (! sequence.isEmpty ()) {
                JButton btn = sequence.remove (0);
                btn.setBackground (Color.RED);
                last = btn;
            } else {
                ((Timer) e.getSource ()).stop ();
            }
        }}

    );
    timer.setInitialDelay (0);
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (last != null) {
        last.setBackground (null);
    }
    if (! sequence.isEmpty ()) {
        JButton btn = sequence.remove (0);
        btn.setBackground (Color.RED);
        last = btn;
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33865265_33865796_4_26
33865265_33866552_5_36
Title: How to dynamically change List items for the ListView in Android? 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    View v = convertView;
    ViewHolder holder;
    if (v == null) {
        v = LayoutInflater.from (getContext ()).inflate (R.layout.list_item, parent, false);
        holder = new ViewHolder ();
        holder.stepName = (TextView) v.findViewById (R.id.step_heading);
        holder.steps = (LinearLayout) v.findViewById (R.id.steps);
        v.setTag (holder);
    } else {
        holder = (ViewHolder) v.getTag ();
    }
    final FirstAidSteps steps = getItem (position);
    holder.stepName.setText (steps.getStepName ());
    holder.steps.removeAllViews ();
    for (String step : steps.getSteps ()) {
        holder.steps.addView (createStepView (step));
    }
    return v;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView == null) {
        convertView = LayoutInflater.from (getContext ()).inflate (R.layout.list_item, parent, false);
    }
    TextView stepName = (TextView) convertView.findViewById (R.id.step_heading);
    LinearLayout mLinearLayout = (LinearLayout) v.findViewById (R.id.steps);
    stepName.setText (stepsName.get (position));
    mLinearLayout.removeAllViews ();
    ArrayList < String > single_step = steps.get (position);
    if (single_step.size () > 0) {
        for (int size = 0;
        size < single_step.size (); size ++) {
            TextView text = new TextView (this);
            text.setLayoutParams (new LayoutParams (LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
            text.setGravity (Gravity.CENTER);
            text.setPadding (5, 2, 5, 2);
            text.setText (single_step.get (size));
            mLinearLayout.addView (text);
        }
    }
    return convertView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33866750_33866793_4_31
33866750_33866814_1_14
Title: Simple Java Guessing program. Continuing 
----------------------------------------

public static void main (String [] args) {
    int myInt = 2;
    Scanner input = new Scanner (System.in);
    for (;;) {
        System.out.println ("Enter a number:");
        int value = input.nextInt ();
        if (value == myInt) {
            System.out.println ("You discover me!");
            break;
        } else {
            System.out.println ("Not yet! You entered:" + value + " Make another guess");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int myInt = 2;
    int value = 0;
    Scanner input = new Scanner (System.in);
    boolean guessCorrect = false;
    while (! guessCorrect) {
        System.out.println ("Not yet! You entered:" + value + " Make another guess");
        value = input.nextInt ();
        if (value == myInt) {
            guessCorrect = true
        }
    }
    System.out.println ("You discover me!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33867317_33867410_1_22
33867317_33867414_1_17
Title: Keep storing of the variable value with the recursive call 
----------------------------------------

private boolean contains (TrieNode node, String s) {
    String communsubString = checkEdgeString (node.getNext (), s);
    String restString = s.substring (communsubString.length ());
    if (node.getNext () != null && ! node.getNext ().isEmpty ()) {
        for (TrieNode nextNodeEdge : node.getNext ()) {
            if (nextNodeEdge.getEdge ().equals (communsubString)) {
                if (! restString.isEmpty ()) {
                    if (contains (nextNodeEdge, restString)) {
                        return true;
                    }
                } else {
                    return true;
                }
            }
        }
    }
    return false;
}
----------------------------------------

private boolean contains (TrieNode node, String s) {
    var available = false;
    String communsubString = checkEdgeString (node.getNext (), s);
    String restString = s.substring (communsubString.length ());
    if (node.getNext () != null && ! node.getNext ().isEmpty ()) {
        for (TrieNode nextNodeEdge : node.getNext ()) {
            if (nextNodeEdge.getEdge ().equals (communsubString)) {
                if (! restString.isEmpty ()) {
                    available = contains (nextNodeEdge, restString);
                } else {
                    return true;
                }
            }
        }
    }
    return available;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33877843_33877959_113_134
33877843_33878118_134_159
Title: "I have created a small book program I am new to java. Can't find what the error or mistake in this code?" 
----------------------------------------

public static void main (String args []) {
    BookInfo p = new BookInfo ();
    String input, s;
    int ch;
    while (true) {
        input = JOptionPane.showInputDialog ("Enter 1 to add " + "\n Enter 2 to             Search \n Enter 3 to Delete" + "\n Enter 4 to Exit");
        ch = Integer.parseInt (input);
        switch (ch) {
            case 1 :
                p.addbook ();
                break;
            case 2 :
                s = JOptionPane.showInputDialog ("Enter name to search ");
                p.searchBook (s);
                break;
            case 3 :
                s = JOptionPane.showInputDialog ("Enter name to delete ");
                p.deleteBook (s);
                break;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    BookInfo p = new BookInfo ();
    String input, s;
    int ch;
    while (true) {
        input = JOptionPane.showInputDialog ("Enter 1 to add " + "\n Enter 2 to             Search \n Enter 3 to Delete" + "\n Enter 4 to Exit");
        ch = Integer.parseInt (input);
        switch (ch) {
            case 1 :
                p.addbook ();
                break;
            case 2 :
                s = JOptionPane.showInputDialog ("Enter name to search ");
                p.searchBook (s);
                break;
            case 3 :
                s = JOptionPane.showInputDialog ("Enter name to delete ");
                p.deleteBook (s);
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33877843_33877959_29_50
33877843_33878118_32_58
Title: "I have created a small book program I am new to java. Can't find what the error or mistake in this code?" 
----------------------------------------

public void loadbooks () {
    String tokens [] = null;
    String no, name, author;
    try {
        FileReader fr = new FileReader ("books.txt");
        BufferedReader br = new BufferedReader (fr);
        String line = br.readLine ();
        while (line != null) {
            tokens = line.split (",");
            no = tokens [0];
            name = tokens [1];
            author = tokens [2];
            BookInfo b = new BookInfo (no, name, author);
            books.add (b);
            line = br.readLine ();
        }
        br.close ();
        fr.close ();
    } catch (IOException ioEx) {
        System.out.println (ioEx);
    }
}
----------------------------------------

public void loadbooks () {
    String tokens [] = null;
    String no, name, author;
    try {
        FileReader fr = new FileReader ("books.txt");
        BufferedReader br = new BufferedReader (fr);
        String line = br.readLine ();
        while (line != null) {
            tokens = line.split (",");
            no = tokens [0];
            name = tokens [1];
            author = tokens [2];
            BookInfo b = new BookInfo (no, name, author);
            books.add (b);
            line = br.readLine ();
        }
        br.close ();
        fr.close ();
    } catch (IOException ioEx) {
        System.out.println (ioEx);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33877843_33877959_52_71
33877843_33878118_60_84
Title: "I have created a small book program I am new to java. Can't find what the error or mistake in this code?" 
----------------------------------------

public void savebooks () {
    try {
        BookInfo b;
        String line;
        FileWriter fw = new FileWriter ("books.txt");
        PrintWriter pw = new PrintWriter (fw);
        for (int i = 0;
        i < books.size (); i ++) {
            b = (BookInfo) books.get (i);
            line = b.ISBN + "," + b.BookName + "," + b.AuthorName;
            pw.println (line);
        }
        pw.flush ();
        pw.close ();
        fw.close ();
    } catch (IOException ioEx) {
        System.out.println (ioEx);
    }
}
----------------------------------------

public void savebooks () {
    try {
        BookInfo b;
        String line;
        FileWriter fw = new FileWriter ("books.txt");
        PrintWriter pw = new PrintWriter (fw);
        for (int i = 0;
        i < books.size (); i ++) {
            b = (BookInfo) books.get (i);
            line = b.ISBN + "," + b.BookName + "," + b.AuthorName;
            pw.println (line);
        }
        pw.flush ();
        pw.close ();
        fw.close ();
    } catch (IOException ioEx) {
        System.out.println (ioEx);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33877843_33877959_85_92
33877843_33878118_99_109
Title: "I have created a small book program I am new to java. Can't find what the error or mistake in this code?" 
----------------------------------------

public void searchBook (String n) {
    for (int i = 0;
    i < books.size (); i ++) {
        BookInfo p = (BookInfo) books.get (i);
        if (n.equals (p.AuthorName)) {
            p.print ();
        }
    }
}
----------------------------------------

public void searchBook (String n) {
    for (int i = 0;
    i < books.size (); i ++) {
        BookInfo p = (BookInfo) books.get (i);
        if (n.equals (p.AuthorName)) {
            p.print ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33881210_33985116_17_29
33881210_33985116_33_43
Title: Java IPC w/Sockets - Using Loopback Device 
----------------------------------------

public void run () {
    try {
        Socket toClient = serverSocket.accept ();
        DataOutputStream dos = new DataOutputStream (toClient.getOutputStream ());
        for (int i = 0;
        i < NUMBER_OF_MESSAGES; i ++) {
            PRODUCED_MSSG [i] = (int) ((Math.random () - .5) * Integer.MAX_VALUE);
            dos.writeInt (PRODUCED_MSSG [i]);
        }
    } catch (IOException ex) {
        System.err.println ("Producer Error: " + ex.toString ());
    }
}
----------------------------------------

public void run () {
    try {
        Socket fromServer = new Socket (HOST, PORT);
        DataInputStream dis = new DataInputStream (fromServer.getInputStream ());
        for (int i = 0;
        i < NUMBER_OF_MESSAGES; i ++) {
            CONSUMED_MSSG [i] = dis.readInt ();
        }
    } catch (IOException ex) {
        System.err.println ("Consumer Error: " + ex.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33882960_33883028_1_13
33882960_33883089_1_13
Title: java array diplay lowest student 
----------------------------------------

public String getLowest () {
    int theScore = scores [0];
    String theName = "";
    for (int x = 0;
    x < scores.length; x ++) {
        if (scores [x] < theScore) {
            theScore = scores [x];
            theName = names [x];
        }
    }
    return theName;
}
----------------------------------------

public String getLowest () {
    int theScore = scores [0];
    int lowest = 0;
    for (int x = 1;
    x < scores.length; x ++) {
        if (scores [x] < theScore) {
            theScore = scores [x];
            lowest = x;
        }
    }
    return names [lowest];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33888386_33888510_4_14
33888386_33888576_5_17
Title: How to solve syntax error in eclipse Mars.1 
----------------------------------------

public static void main (String [] args) {
    double amount;
    Scanner myScanner = new Scanner (System.in);
    System.out.print ("What is the price of CD-ROM? ");
    amount = myScanner.nextDouble ();
    amount = amount + 25.00;
    System.out.print ("We will bill R ");
    System.out.print (amount);
    System.out.println (" to your credit card.");
}
----------------------------------------

public static void main (String [] args) {
    double amount;
    Scanner myScanner = new Scanner (System.in);
    System.out.print ("What is the price of CD-ROM? ");
    amount = myScanner.nextDouble ();
    amount += 25.00;
    System.out.print ("We will bill R" + amount + " to your credit card.");
    myScanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33894366_33919485_44_66
33894366_36085582_19_57
Title: How to update textarea(console)in realtime in JavaFX without loosing flow or freezing the application 
----------------------------------------

protected Task < String > createTask () {
    return new Task < String > () {
        StringBuilder results = new StringBuilder ();
        @Override
        protected String call () throws Exception {
            long i = 1;
            String s = null;
            while (i < 90) {
                if (isCancelled ()) {
                    break;
                }
                double k = Math.sqrt (Math.pow (i, 2) / Math.sqrt (i));
                results.append ("i: ").append (i).append (" Count: ").append (k).append ("\n");
                updateValue (results.toString ());
                updateProgress ((100 * i) / 90, 90);
                Thread.sleep (100);
                i ++;
            }
            return results.toString ();
        }}

    ;
}
----------------------------------------

protected Task < String > createTask () {
    return new Task < String > () {
        protected String call () throws Exception {
            while (true) {
                if (isCancelled ()) {
                    break;
                }
                if (updated) {
                    updateValue (results.toString ());
                    updated = false;
                    Platform.runLater (() -> {
                        consoleOutput.setScrollTop (Double.MAX_VALUE);
                    });
                }
                if (exported) {
                    consoleOutput.setScrollTop (Double.MAX_VALUE);
                    exported = false;
                }
                Thread.sleep (100);
            }
            return results.toString ();
        }}

    ;
}
----------------------------------------
