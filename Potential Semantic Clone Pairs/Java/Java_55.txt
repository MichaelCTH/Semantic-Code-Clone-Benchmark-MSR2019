$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228432_34985090_1_31
26228432_51630057_1_40
Title: manhattan skyline cover failing some test cases 
----------------------------------------

public static int solution (int [] H) {
    Stack < Integer > s = new Stack < Integer > ();
    int count = 1;
    for (int i = 0;
    i < H.length - 1; i ++) {
        if (H [i + 1] > H [i]) {
            s.push (H [i]);
            count ++;
        } else if (H [i + 1] < H [i]) {
            if (s.empty ()) {
                s.push (H [i]);
                count ++;
            } else if (H [i + 1] > s.peek ()) {
                count ++;
            } else if (H [i + 1] < s.peek ()) {
                while (! s.empty () && H [i + 1] < s.peek ()) {
                    s.pop ();
                }
                if (s.empty ()) {
                    count ++;
                } else if (H [i + 1] > s.peek ()) {
                    count ++;
                }

            } else {
                s.pop ();
            }

        }

    }
    return count;
}
----------------------------------------

public int solution (int [] H) {
    Stack < Integer > stack = new Stack < > ();
    stack.push (H [0]);
    int count = 1;
    int N = H.length;
    for (int i = 1;
    i < N; i ++) {
        if (H [i] == stack.peek ()) {
            continue;
        } else if (H [i] > stack.peek ()) {
            stack.push (H [i]);
            count ++;
        } else {
            while (! stack.isEmpty () && H [i] < stack.peek ()) {
                stack.pop ();
            }
            if (! stack.isEmpty () && H [i] == stack.peek ()) {
                continue;
            }
            stack.push (H [i]);
            count ++;
        }

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26228495_26228556_1_12
26228495_26228984_59_84
Title: Constructor and no-argument constructor? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Enter the car's year model: ");
    int year = keyboard.nextInt ();
    keyboard.nextLine ();
    System.out.println ("Enter the car's make: ");
    String make = keyboard.nextLine ();
    System.out.println ("Enter the car's speed: ");
    int speedIn = keyboard.nextInt ();
    Car car = new Car (year, make, speedIn);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Enter the car's made year model: ");
    int year = keyboard.nextInt ();
    keyboard.nextLine ();
    System.out.println ("Enter the car's make Company: ");
    String make = keyboard.nextLine ();
    System.out.println ("Enter the car's speed: ");
    int speedIn = keyboard.nextInt ();
    Car c = new Car (year, make, speedIn);
    for (int i = 0;
    i < 5; i ++) {
        int speedchange = c.acclarate (c.getSpeed ());
        c.setSpeed (speedchange);
    }
    for (int i = 0;
    i < 5; i ++) {
        int decreasedpeed = c.Breaking (c.getSpeed ());
        c.setSpeed (decreasedpeed);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26229758_26230320_19_48
26229758_37177342_158_211
Title: How to convert dicom file to jpg conversion 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("test5/12840.dcm");
    Iterator < ImageReader > iterator = ImageIO.getImageReadersByFormatName ("DICOM");
    while (iterator.hasNext ()) {
        ImageReader imageReader = (ImageReader) iterator.next ();
        DicomImageReadParam dicomImageReadParam = (DicomImageReadParam) imageReader.getDefaultReadParam ();
        try {
            ImageInputStream iis = ImageIO.createImageInputStream (file);
            imageReader.setInput (iis, false);
            myJpegImage = imageReader.read (0, dicomImageReadParam);
            iis.close ();
            if (myJpegImage == null) {
                System.out.println ("Could not read image!!");
            }
        } catch (IOException e) {
            e.printStackTrace ();
        }
        File file2 = new File ("/test.jpg");
        try {
            OutputStream outputStream = new BufferedOutputStream (new FileOutputStream (file2));
            JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder (outputStream);
            encoder.encode (myJpegImage);
            outputStream.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
        System.out.println ("Completed");
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    CommandLine cl = parse (args);
    Dcm2Jpeg dcm2jpg = new Dcm2Jpeg ();
    if (cl.hasOption ("f")) {
        dcm2jpg.setFrameNumber (parseInt (cl.getOptionValue ("f"), "illegal argument of option -f", 1, Integer.MAX_VALUE));
    }
    if (cl.hasOption ("p")) {
        dcm2jpg.setPresentationState (loadDicomObject (new File (cl.getOptionValue ("p"))));
    }
    if (cl.hasOption ("pv2gray")) {
        dcm2jpg.setPValue2Gray (loadPVal2Gray (new File (cl.getOptionValue ("pv2gray"))));
    }
    if (cl.hasOption ("c")) {
        dcm2jpg.setWindowCenter (parseFloat (cl.getOptionValue ("c"), "illegal argument of option -c"));
    }
    if (cl.hasOption ("w")) {
        dcm2jpg.setWindowWidth (parseFloat (cl.getOptionValue ("w"), "illegal argument of option -w"));
    }
    if (cl.hasOption ("sigmoid")) {
        dcm2jpg.setVoiLutFunction (DicomImageReadParam.SIGMOID);
    }
    dcm2jpg.setAutoWindowing (! cl.hasOption ("noauto"));
    if (cl.hasOption ("jpgext")) {
        dcm2jpg.setFileExt (cl.getOptionValue ("jpgext"));
    }
    final List < String > argList = cl.getArgList ();
    int argc = argList.size ();
    File dest = new File (argList.get (argc - 1));
    long t1 = System.currentTimeMillis ();
    int count = 1;
    if (dest.isDirectory ()) {
        count = dcm2jpg.mconvert (argList, 0, dest);
    } else {
        File src = new File (argList.get (0));
        if (argc > 2 || src.isDirectory ()) {
            exit ("dcm2jpg: when converting several files, " + "last argument must be a directory\n");
        }
        dcm2jpg.convert (src, dest);
    }
    long t2 = System.currentTimeMillis ();
    System.out.println ("\nconverted " + count + " files in " + (t2 - t1) / 1000f + " s.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26229758_37177342_113_121
26229758_37177342_128_155
Title: How to convert dicom file to jpg conversion 
----------------------------------------

public int mconvert (List < String > args, int optind, File destDir) throws IOException {
    int count = 0;
    for (int i = optind, n = args.size () - 1;
    i < n; ++ i) {
        File src = new File (args.get (i));
        count += mconvert (src, new File (destDir, src2dest (src)));
    }
    return count;
}
----------------------------------------

public int mconvert (File src, File dest) throws IOException {
    if (! src.exists ()) {
        System.err.println ("WARNING: No such file or directory: " + src + " - skipped.");
        return 0;
    }
    if (src.isFile ()) {
        try {
            convert (src, dest);
        } catch (Exception e) {
            System.err.println ("WARNING: Failed to convert " + src + ":");
            e.printStackTrace (System.err);
            System.out.print ('F');
            return 0;
        }
        System.out.print ('.');
        return 1;
    }
    File [] files = src.listFiles ();
    if (files.length > 0 && ! dest.exists ()) {
        dest.mkdirs ();
    }
    int count = 0;
    for (int i = 0;
    i < files.length; ++ i) {
        count += mconvert (files [i], new File (dest, src2dest (files [i])));
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26234136_26342802_15_76
26234136_26342802_22_34
Title: How to remotely connect to multiple Glassfish 4+ instances simultaneously? 
----------------------------------------

public void run () {
    try {
        Tools.log (RemoteDatastoreService.class, Level.INFO, "Starting RMI registry on port " + port + " for connecting to LawSuiteEE server instance.");
        this.process = Runtime.getRuntime ().exec (new String [] {"java", "-jar", Context.getWorkingDirectory () + "/lib/LawSuiteSX.jar", Integer.toString (port), "LawSuiteEE"});
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    try (DataInputStream in = new DataInputStream (process.getErrorStream ())) {
                        BufferedReader br = new BufferedReader (new InputStreamReader (in));
                        String line;
                        while ((line = br.readLine ()) != null) {
                            Tools.log (RemoteDatastoreService.class, Level.SEVERE, line);
                        }
                    }
                } catch (Exception ex) {
                    Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
                }
            }}

        ).start ();
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    try (DataInputStream in = new DataInputStream (process.getInputStream ())) {
                        BufferedReader br = new BufferedReader (new InputStreamReader (in));
                        String line;
                        while ((line = br.readLine ()) != null) {
                            if (line.contains ("SIGNAL[READY]")) {
                                ready = true;
                            }
                            Tools.log (RemoteDatastoreService.class, Level.INFO, line);
                        }
                    }
                } catch (Exception ex) {
                    Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
                }
            }}

        ).start ();
        if (process.waitFor () > 0) {
            if (process.exitValue () == 2) {
                if (trials < 3) {
                    process = null;
                    port = ++ RemoteDatastoreService.cport;
                    trials ++;
                    if (trials < 3) {
                        start ();
                    }
                }
            }
        }
    } catch (IOException ex) {
        Tools.log (RemoteDatastoreService.class, Level.SEVERE, ex.getMessage ());
    } catch (InterruptedException ex) {
        Tools.log (RemoteDatastoreService.class, Level.SEVERE, ex.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        try (DataInputStream in = new DataInputStream (process.getErrorStream ())) {
            BufferedReader br = new BufferedReader (new InputStreamReader (in));
            String line;
            while ((line = br.readLine ()) != null) {
                Tools.log (RemoteDatastoreService.class, Level.SEVERE, line);
            }
        }
    } catch (Exception ex) {
        Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26234136_26342802_15_76
26234136_26342802_40_53
Title: How to remotely connect to multiple Glassfish 4+ instances simultaneously? 
----------------------------------------

public void run () {
    try {
        Tools.log (RemoteDatastoreService.class, Level.INFO, "Starting RMI registry on port " + port + " for connecting to LawSuiteEE server instance.");
        this.process = Runtime.getRuntime ().exec (new String [] {"java", "-jar", Context.getWorkingDirectory () + "/lib/LawSuiteSX.jar", Integer.toString (port), "LawSuiteEE"});
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    try (DataInputStream in = new DataInputStream (process.getErrorStream ())) {
                        BufferedReader br = new BufferedReader (new InputStreamReader (in));
                        String line;
                        while ((line = br.readLine ()) != null) {
                            Tools.log (RemoteDatastoreService.class, Level.SEVERE, line);
                        }
                    }
                } catch (Exception ex) {
                    Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
                }
            }}

        ).start ();
        new Thread (new Runnable () {
            @Override
            public void run () {
                try {
                    try (DataInputStream in = new DataInputStream (process.getInputStream ())) {
                        BufferedReader br = new BufferedReader (new InputStreamReader (in));
                        String line;
                        while ((line = br.readLine ()) != null) {
                            if (line.contains ("SIGNAL[READY]")) {
                                ready = true;
                            }
                            Tools.log (RemoteDatastoreService.class, Level.INFO, line);
                        }
                    }
                } catch (Exception ex) {
                    Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
                }
            }}

        ).start ();
        if (process.waitFor () > 0) {
            if (process.exitValue () == 2) {
                if (trials < 3) {
                    process = null;
                    port = ++ RemoteDatastoreService.cport;
                    trials ++;
                    if (trials < 3) {
                        start ();
                    }
                }
            }
        }
    } catch (IOException ex) {
        Tools.log (RemoteDatastoreService.class, Level.SEVERE, ex.getMessage ());
    } catch (InterruptedException ex) {
        Tools.log (RemoteDatastoreService.class, Level.SEVERE, ex.getMessage ());
    }
}
----------------------------------------

public void run () {
    try {
        try (DataInputStream in = new DataInputStream (process.getInputStream ())) {
            BufferedReader br = new BufferedReader (new InputStreamReader (in));
            String line;
            while ((line = br.readLine ()) != null) {
                if (line.contains ("SIGNAL[READY]")) {
                    ready = true;
                }
                Tools.log (RemoteDatastoreService.class, Level.INFO, line);
            }
        }
    } catch (Exception ex) {
        Tools.log (MgmtCenterDatastore.class, Level.SEVERE, ex.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2623432_2623776_1_33
2623432_2623791_1_19
Title: Java: dangerous self-returning-recursive function by IOException? 
----------------------------------------

public static void search () {
    boolean succeeded = false;
    int attemptsLeft = MAX_ATTEMPTS;
    while (! succeeded && (-- attemptsLeft > 0)) {
        try {
            BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
            String s;
            System.out.println ("Give me an path.");
            while ((s = in.readLine ()) != null && s.length () != 0) {
                SubDirs dirs = new SubDirs ();
                List < File > subDirs = dirs.getSubdirs (new File (s));
                for (File f : subDirs) {
                    System.out.println (f.getName ());
                }
                System.out.println ("Give me an path.");
            }
            succeeded = true;
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    if (! succeeded) {
        log ("Hmm ... bailing search() without succeeding");
    }
}
----------------------------------------

public static void search () {
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    String s;
    System.out.println ("Give me an path.");
    while ((s = in.readLine ()) != null && s.length () != 0) {
        try {
            SubDirs dirs = new SubDirs ();
            List < File > subDirs = dirs.getSubdirs (new File (s));
            for (File f : subDirs) {
                System.out.println (f.getName ());
            }
        } catch (Exception e) {
            System.out.println ("Something went wrong! Everybody scream and run in circles!");
        }
        System.out.println ("Give me an path.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26252334_26252809_3_33
26252334_26253066_5_25
Title: I am trying to get the number of the matching character (I mean how many character are matched) in java 
----------------------------------------

public static void main (String [] args) {
    double l1, l2, biggerN;
    Map < String, Integer > map = new HashMap < > ();
    String name1 = "Siti";
    String name2 = "Ali";
    l1 = name1.length ();
    l2 = name2.length ();
    if (l1 > l2) {
        biggerN = l1;
    } else {
        biggerN = l2;
    }
    char [] shojib = name1.toCharArray ();
    char [] farhana = name2.toCharArray ();
    for (int i = 0;
    i < shojib.length; i ++) {
        for (int j = 0;
        j < farhana.length; j ++) {
            if (shojib [i] == farhana [j]) {
                System.out.println (shojib [i]);
                int count = map.get (shojib [i] + "") != null ? map.get (shojib [i] + "") : 0;
                map.put (shojib [i] + "", ++ count);
            }
        }
    }
    System.out.println (map);
}
----------------------------------------

public static void main (String [] args) {
    String word1 = "Siti";
    String word2 = "Ali";
    Map < Character, Integer > m = new HashMap < Character, Integer > ();
    char [] charWord1 = word1.toLowerCase ().toCharArray ();
    char [] charWord2 = word2.toLowerCase ().toCharArray ();
    for (int i = 0;
    i < charWord1.length; i ++) {
        Integer freq = m.get (charWord1 [i]);
        m.put (charWord1 [i], (freq == null) ? 1 : freq + 1);
    }
    for (int i = 0;
    i < charWord2.length; i ++) {
        Integer freq = m.get (charWord2 [i]);
        m.put (charWord2 [i], (freq == null) ? 1 : freq + 1);
    }
    System.out.println (m);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26252334_26252809_3_33
26252334_26253255_2_22
Title: I am trying to get the number of the matching character (I mean how many character are matched) in java 
----------------------------------------

public static void main (String [] args) {
    double l1, l2, biggerN;
    Map < String, Integer > map = new HashMap < > ();
    String name1 = "Siti";
    String name2 = "Ali";
    l1 = name1.length ();
    l2 = name2.length ();
    if (l1 > l2) {
        biggerN = l1;
    } else {
        biggerN = l2;
    }
    char [] shojib = name1.toCharArray ();
    char [] farhana = name2.toCharArray ();
    for (int i = 0;
    i < shojib.length; i ++) {
        for (int j = 0;
        j < farhana.length; j ++) {
            if (shojib [i] == farhana [j]) {
                System.out.println (shojib [i]);
                int count = map.get (shojib [i] + "") != null ? map.get (shojib [i] + "") : 0;
                map.put (shojib [i] + "", ++ count);
            }
        }
    }
    System.out.println (map);
}
----------------------------------------

public static void main (String [] args) {
    String name1 = "Siti";
    String name2 = "Ali";
    String matchedChars = "";
    String comBinedString = name1 + name2;
    for (int i = 0;
    i < comBinedString.length (); i ++) {
        if (! matchedChars.contains (comBinedString.charAt (i) + "")) {
            countOccurencesAndPrint (comBinedString, i);
        } else {
            continue;
        }
        matchedChars += comBinedString.charAt (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26252334_26253066_5_25
26252334_26253255_2_22
Title: I am trying to get the number of the matching character (I mean how many character are matched) in java 
----------------------------------------

public static void main (String [] args) {
    String word1 = "Siti";
    String word2 = "Ali";
    Map < Character, Integer > m = new HashMap < Character, Integer > ();
    char [] charWord1 = word1.toLowerCase ().toCharArray ();
    char [] charWord2 = word2.toLowerCase ().toCharArray ();
    for (int i = 0;
    i < charWord1.length; i ++) {
        Integer freq = m.get (charWord1 [i]);
        m.put (charWord1 [i], (freq == null) ? 1 : freq + 1);
    }
    for (int i = 0;
    i < charWord2.length; i ++) {
        Integer freq = m.get (charWord2 [i]);
        m.put (charWord2 [i], (freq == null) ? 1 : freq + 1);
    }
    System.out.println (m);
}
----------------------------------------

public static void main (String [] args) {
    String name1 = "Siti";
    String name2 = "Ali";
    String matchedChars = "";
    String comBinedString = name1 + name2;
    for (int i = 0;
    i < comBinedString.length (); i ++) {
        if (! matchedChars.contains (comBinedString.charAt (i) + "")) {
            countOccurencesAndPrint (comBinedString, i);
        } else {
            continue;
        }
        matchedChars += comBinedString.charAt (i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_26253701_7_18
26253503_26253716_4_14
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    Pattern phoneNumber = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = phoneNumber.matcher ("1-425-9854706");
    if (matcher.matches ()) {
        System.out.println (matcher.group (1));
        System.out.println (matcher.group (2));
        System.out.println (matcher.group (3));
    }
}
----------------------------------------

public static void main (String [] args) {
    String line = "1-425-9854706";
    Pattern pattern = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = pattern.matcher (line);
    while (matcher.find ()) {
        printMatch ("Country Code", matcher, 1);
        printMatch ("Local Area Code", matcher, 2);
        printMatch ("Number", matcher, 3);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_26253701_7_18
26253503_33363154_9_26
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    Pattern phoneNumber = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = phoneNumber.matcher ("1-425-9854706");
    if (matcher.matches ()) {
        System.out.println (matcher.group (1));
        System.out.println (matcher.group (2));
        System.out.println (matcher.group (3));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter phone number to tokenize: ");
    String phoneNumber = scanner.nextLine ();
    String [] tokens = phoneNumber.split ("\\D+");
    System.out.println ("The tokens are: ");
    for (String token : tokens) System.out.println (token);

    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_26253701_7_18
26253503_34028283_1_17
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    Pattern phoneNumber = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = phoneNumber.matcher ("1-425-9854706");
    if (matcher.matches ()) {
        System.out.println (matcher.group (1));
        System.out.println (matcher.group (2));
        System.out.println (matcher.group (3));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int a = sc.nextInt ();
    sc.nextLine ();
    int i = 1;
    while (i <= a) {
        String s = sc.nextLine ();
        String [] words = s.trim ().split ("[ -]");
        System.out.println ("CountryCode=" + words [0] + "," + "LocalAreaCode=" + words [1] + "," + "Number=" + words [2]);
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_26253716_4_14
26253503_33363154_9_26
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    String line = "1-425-9854706";
    Pattern pattern = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = pattern.matcher (line);
    while (matcher.find ()) {
        printMatch ("Country Code", matcher, 1);
        printMatch ("Local Area Code", matcher, 2);
        printMatch ("Number", matcher, 3);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter phone number to tokenize: ");
    String phoneNumber = scanner.nextLine ();
    String [] tokens = phoneNumber.split ("\\D+");
    System.out.println ("The tokens are: ");
    for (String token : tokens) System.out.println (token);

    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_26253716_4_14
26253503_34028283_1_17
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    String line = "1-425-9854706";
    Pattern pattern = Pattern.compile ("^(\\d{1,3})[- ](\\d{1,3})[- ](\\d{4,10})$");
    Matcher matcher = pattern.matcher (line);
    while (matcher.find ()) {
        printMatch ("Country Code", matcher, 1);
        printMatch ("Local Area Code", matcher, 2);
        printMatch ("Number", matcher, 3);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int a = sc.nextInt ();
    sc.nextLine ();
    int i = 1;
    while (i <= a) {
        String s = sc.nextLine ();
        String [] words = s.trim ().split ("[ -]");
        System.out.println ("CountryCode=" + words [0] + "," + "LocalAreaCode=" + words [1] + "," + "Number=" + words [2]);
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26253503_33363154_9_26
26253503_34028283_1_17
Title: Regex for splitting a phone number 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter phone number to tokenize: ");
    String phoneNumber = scanner.nextLine ();
    String [] tokens = phoneNumber.split ("\\D+");
    System.out.println ("The tokens are: ");
    for (String token : tokens) System.out.println (token);

    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int a = sc.nextInt ();
    sc.nextLine ();
    int i = 1;
    while (i <= a) {
        String s = sc.nextLine ();
        String [] words = s.trim ().split ("[ -]");
        System.out.println ("CountryCode=" + words [0] + "," + "LocalAreaCode=" + words [1] + "," + "Number=" + words [2]);
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26261085_26261289_6_43
26261085_26261368_6_48
Title: JOptionPane Cannot Find Symbol 
----------------------------------------

public static void main (String args []) {
    JFrame f = new JFrame ();
    double n1 = Double.parseDouble (JOptionPane.showInputDialog (" Enter first number: "));
    double n2 = Double.parseDouble (JOptionPane.showInputDialog (" Enter second number: "));
    String x = JOptionPane.showInputDialog ("Enter operator: ");
    double result;
    if (x == "+") {
        result = (n1 + n2);
        JOptionPane.showMessageDialog (f, n1 + "+" + n2 + "=" + result);
    } else if (x == "-") {
        result = (n1 - n2);
        JOptionPane.showMessageDialog (f, n1 + "-" + n2 + "=" + result);
    } else if (x == "/") {
        result = (n1 / n2);
        JOptionPane.showMessageDialog (f, n1 + "/" + n2 + "=" + result);
    } else if (n2 == 0) {
        JOptionPane.showMessageDialog (null, "Cannot divide by 0");
    } else if (x == "*") {
        result = (n1 * n2);
        JOptionPane.showMessageDialog (f, n1 + "*" + n2 + "=" + result);
    } else if (x == "%") {
        result = (n1 % n2);
        JOptionPane.showMessageDialog (f, n1 + "%" + n2 + "=" + (n1 % n2));
    }

}
----------------------------------------

public static void main (String args []) {
    JFrame f = new JFrame ();
    double n1 = Double.parseDouble (JOptionPane.showInputDialog (" Enter first number: "));
    double n2 = Double.parseDouble (JOptionPane.showInputDialog (" Enter second number: "));
    String x = JOptionPane.showInputDialog ("Enter operator: ");
    double result;
    if (x.equals ("+")) {
        result = (n1 + n2);
        JOptionPane.showMessageDialog (f, n1 + "+" + n2 + "=" + result);
        System.out.println (x);
    } else if (x.equals ("-")) {
        result = (n1 - n2);
        JOptionPane.showMessageDialog (f, n1 + "-" + n2 + "=" + result);
        System.out.println (x);
    } else if (x.equals ("/")) {
        if (n2 == 0) {
            JOptionPane.showMessageDialog (null, "Cannot divide by 0");
        } else {
            result = (n1 / n2);
            JOptionPane.showMessageDialog (f, n1 + "/" + n2 + "=" + result);
            System.out.println (x);
        }
    } else if (x.equals ("*")) {
        result = (n1 * n2);
        JOptionPane.showMessageDialog (f, n1 + "*" + n2 + "=" + result);
    } else if (x.equals ("%")) {
        result = (n1 % n2);
        JOptionPane.showMessageDialog (f, n1 + "%" + n2 + "=" + (n1 % n2));
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26262089_26262125_1_16
26262089_26262158_1_12
Title: How to return an object that was deleted? 
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    int index = - 1;
    boolean result = false;
    for (InventoryItem i : iList) {
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            index = (iList.indexOf (i));
            result = true;
        }
        if (index >= 0) {
            return iList.remove (index);
        }
    }
    return null;
}
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    Iterator < InventoryItem > iterator = iList.iterator ();
    while (iterator.hasNext ()) {
        InventoryItem i = iterator.next ();
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            iterator.remove ();
            return i;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26262089_26262125_1_16
26262089_26262198_1_14
Title: How to return an object that was deleted? 
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    int index = - 1;
    boolean result = false;
    for (InventoryItem i : iList) {
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            index = (iList.indexOf (i));
            result = true;
        }
        if (index >= 0) {
            return iList.remove (index);
        }
    }
    return null;
}
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    InventoryItem returnItem = null;
    InventoryItem i = null;
    for (int j = 0;
    j < iList.size (); j ++) {
        boolean result = false;
        i = iList.get (j);
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            returnItem = i;
            iList.remove (j);
            j --;
        }
    }
    return returnItem;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26262089_26262158_1_12
26262089_26262198_1_14
Title: How to return an object that was deleted? 
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    Iterator < InventoryItem > iterator = iList.iterator ();
    while (iterator.hasNext ()) {
        InventoryItem i = iterator.next ();
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            iterator.remove ();
            return i;
        }
    }
    return null;
}
----------------------------------------

public InventoryItem deleteInventoryItem (String descriptionIn) {
    InventoryItem returnItem = null;
    InventoryItem i = null;
    for (int j = 0;
    j < iList.size (); j ++) {
        boolean result = false;
        i = iList.get (j);
        if (i.getDescription ().toLowerCase ().startsWith (descriptionIn.toLowerCase ())) {
            returnItem = i;
            iList.remove (j);
            j --;
        }
    }
    return returnItem;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626718_5_25
2626640_2626737_1_11
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    int length = s.length ();
    int end = length - 1;
    StringBuilder t = new StringBuilder ();
    for (int i = 0;
    i < length / 2; i ++) {
        t.append (s.charAt (i));
        t.append (s.charAt (end));
        end --;
    }
    if (length % 2 == 1) {
        t.append (s.charAt (length / 2));
    }
    return t.toString ();
}
----------------------------------------

public static void transpose (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 1;
    i < sb.length (); i = i + 2) {
        sb.insert (i, sb.charAt (sb.length () - 1));
        sb.deleteCharAt (sb.length () - 1);
    }
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626718_5_25
2626640_2626758_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    int length = s.length ();
    int end = length - 1;
    StringBuilder t = new StringBuilder ();
    for (int i = 0;
    i < length / 2; i ++) {
        t.append (s.charAt (i));
        t.append (s.charAt (end));
        end --;
    }
    if (length % 2 == 1) {
        t.append (s.charAt (length / 2));
    }
    return t.toString ();
}
----------------------------------------

public static String transpose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); ++ i) {
        out.append (in.charAt (i));
        out.append (in.charAt (in.length () - i - 1));
    }
    return out.substring (0, in.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626718_5_25
2626640_2626777_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    int length = s.length ();
    int end = length - 1;
    StringBuilder t = new StringBuilder ();
    for (int i = 0;
    i < length / 2; i ++) {
        t.append (s.charAt (i));
        t.append (s.charAt (end));
        end --;
    }
    if (length % 2 == 1) {
        t.append (s.charAt (length / 2));
    }
    return t.toString ();
}
----------------------------------------

public static String transpose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (x ++, s.charAt (i ++));
        if (i > j) break;

        sb.setCharAt (x ++, s.charAt (j --));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626718_5_25
2626640_2626877_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    int length = s.length ();
    int end = length - 1;
    StringBuilder t = new StringBuilder ();
    for (int i = 0;
    i < length / 2; i ++) {
        t.append (s.charAt (i));
        t.append (s.charAt (end));
        end --;
    }
    if (length % 2 == 1) {
        t.append (s.charAt (length / 2));
    }
    return t.toString ();
}
----------------------------------------

public static String transpose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = 1;
    pos < length; pos += 2) {
        swapCharacters (out, length - 1, pos);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626718_5_25
2626640_53131733_2_9
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    int length = s.length ();
    int end = length - 1;
    StringBuilder t = new StringBuilder ();
    for (int i = 0;
    i < length / 2; i ++) {
        t.append (s.charAt (i));
        t.append (s.charAt (end));
        end --;
    }
    if (length % 2 == 1) {
        t.append (s.charAt (length / 2));
    }
    return t.toString ();
}
----------------------------------------

public static String transpose (String s) {
    char [] ts = new char [s.length ()];
    int i = 0, j = ts.length;
    for (int k = 0;
    k < ts.length; k ++) {
        ts [k] = s.charAt (k % 2 == 0 ? i ++ : -- j);
    }
    return new String (ts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626737_1_11
2626640_2626758_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static void transpose (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 1;
    i < sb.length (); i = i + 2) {
        sb.insert (i, sb.charAt (sb.length () - 1));
        sb.deleteCharAt (sb.length () - 1);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static String transpose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); ++ i) {
        out.append (in.charAt (i));
        out.append (in.charAt (in.length () - i - 1));
    }
    return out.substring (0, in.length ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626737_1_11
2626640_2626777_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static void transpose (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 1;
    i < sb.length (); i = i + 2) {
        sb.insert (i, sb.charAt (sb.length () - 1));
        sb.deleteCharAt (sb.length () - 1);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static String transpose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (x ++, s.charAt (i ++));
        if (i > j) break;

        sb.setCharAt (x ++, s.charAt (j --));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626737_1_11
2626640_2626877_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static void transpose (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 1;
    i < sb.length (); i = i + 2) {
        sb.insert (i, sb.charAt (sb.length () - 1));
        sb.deleteCharAt (sb.length () - 1);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static String transpose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = 1;
    pos < length; pos += 2) {
        swapCharacters (out, length - 1, pos);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626737_1_11
2626640_53131733_2_9
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static void transpose (String s) {
    StringBuilder sb = new StringBuilder (s);
    for (int i = 1;
    i < sb.length (); i = i + 2) {
        sb.insert (i, sb.charAt (sb.length () - 1));
        sb.deleteCharAt (sb.length () - 1);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static String transpose (String s) {
    char [] ts = new char [s.length ()];
    int i = 0, j = ts.length;
    for (int k = 0;
    k < ts.length; k ++) {
        ts [k] = s.charAt (k % 2 == 0 ? i ++ : -- j);
    }
    return new String (ts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_12_26
2626640_2626759_1_13
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); i += 2) {
        out.append (in.charAt (i));
    }
    StringBuilder reversedSecondHalf = new StringBuilder ();
    for (int i = 1;
    i < in.length (); i += 2) {
        reversedSecondHalf.append (in.charAt (i));
    }
    out.append (reversedSecondHalf.reverse ());
    return out.toString ();
}
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    int length = s.length ();
    int iopp = (length % 2 == 0) ? length - 1 : length - 2;
    for (int i = 0;
    i < length; i += 2, iopp -= 2) {
        sb1.append (s.charAt (i));
        if (iopp >= 0) sb2.append (s.charAt (iopp));

    }
    return sb1.append (sb2).toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_12_26
2626640_2626777_12_21
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); i += 2) {
        out.append (in.charAt (i));
    }
    StringBuilder reversedSecondHalf = new StringBuilder ();
    for (int i = 1;
    i < in.length (); i += 2) {
        reversedSecondHalf.append (in.charAt (i));
    }
    out.append (reversedSecondHalf.reverse ());
    return out.toString ();
}
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (i ++, s.charAt (x ++));
        if (i > j) break;

        sb.setCharAt (j --, s.charAt (x ++));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_12_26
2626640_2626877_12_21
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); i += 2) {
        out.append (in.charAt (i));
    }
    StringBuilder reversedSecondHalf = new StringBuilder ();
    for (int i = 1;
    i < in.length (); i += 2) {
        reversedSecondHalf.append (in.charAt (i));
    }
    out.append (reversedSecondHalf.reverse ());
    return out.toString ();
}
----------------------------------------

public static String untranspose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = length - 1 - (length % 2);
    pos > 0; pos -= 2) {
        swapCharacters (out, pos, length - 1);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_12_26
2626640_53131733_11_18
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); i += 2) {
        out.append (in.charAt (i));
    }
    StringBuilder reversedSecondHalf = new StringBuilder ();
    for (int i = 1;
    i < in.length (); i += 2) {
        reversedSecondHalf.append (in.charAt (i));
    }
    out.append (reversedSecondHalf.reverse ());
    return out.toString ();
}
----------------------------------------

public static String untranspose (String ts) {
    char [] s = new char [ts.length ()];
    int i = 0, j = ts.length ();
    for (int k = 0;
    k < ts.length (); k ++) {
        s [k % 2 == 0 ? i ++ : -- j] = ts.charAt (k);
    }
    return new String (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_1_10
2626640_2626777_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); ++ i) {
        out.append (in.charAt (i));
        out.append (in.charAt (in.length () - i - 1));
    }
    return out.substring (0, in.length ());
}
----------------------------------------

public static String transpose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (x ++, s.charAt (i ++));
        if (i > j) break;

        sb.setCharAt (x ++, s.charAt (j --));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_1_10
2626640_2626877_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); ++ i) {
        out.append (in.charAt (i));
        out.append (in.charAt (in.length () - i - 1));
    }
    return out.substring (0, in.length ());
}
----------------------------------------

public static String transpose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = 1;
    pos < length; pos += 2) {
        swapCharacters (out, length - 1, pos);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626758_1_10
2626640_53131733_2_9
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String in) {
    StringBuilder out = new StringBuilder ();
    for (int i = 0;
    i < in.length (); ++ i) {
        out.append (in.charAt (i));
        out.append (in.charAt (in.length () - i - 1));
    }
    return out.substring (0, in.length ());
}
----------------------------------------

public static String transpose (String s) {
    char [] ts = new char [s.length ()];
    int i = 0, j = ts.length;
    for (int k = 0;
    k < ts.length; k ++) {
        ts [k] = s.charAt (k % 2 == 0 ? i ++ : -- j);
    }
    return new String (ts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626759_1_13
2626640_2626777_12_21
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    int length = s.length ();
    int iopp = (length % 2 == 0) ? length - 1 : length - 2;
    for (int i = 0;
    i < length; i += 2, iopp -= 2) {
        sb1.append (s.charAt (i));
        if (iopp >= 0) sb2.append (s.charAt (iopp));

    }
    return sb1.append (sb2).toString ();
}
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (i ++, s.charAt (x ++));
        if (i > j) break;

        sb.setCharAt (j --, s.charAt (x ++));
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626759_1_13
2626640_2626877_12_21
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    int length = s.length ();
    int iopp = (length % 2 == 0) ? length - 1 : length - 2;
    for (int i = 0;
    i < length; i += 2, iopp -= 2) {
        sb1.append (s.charAt (i));
        if (iopp >= 0) sb2.append (s.charAt (iopp));

    }
    return sb1.append (sb2).toString ();
}
----------------------------------------

public static String untranspose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = length - 1 - (length % 2);
    pos > 0; pos -= 2) {
        swapCharacters (out, pos, length - 1);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626759_1_13
2626640_53131733_11_18
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb1 = new StringBuilder ();
    StringBuilder sb2 = new StringBuilder ();
    int length = s.length ();
    int iopp = (length % 2 == 0) ? length - 1 : length - 2;
    for (int i = 0;
    i < length; i += 2, iopp -= 2) {
        sb1.append (s.charAt (i));
        if (iopp >= 0) sb2.append (s.charAt (iopp));

    }
    return sb1.append (sb2).toString ();
}
----------------------------------------

public static String untranspose (String ts) {
    char [] s = new char [ts.length ()];
    int i = 0, j = ts.length ();
    for (int k = 0;
    k < ts.length (); k ++) {
        s [k % 2 == 0 ? i ++ : -- j] = ts.charAt (k);
    }
    return new String (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626777_12_21
2626640_2626877_12_21
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (i ++, s.charAt (x ++));
        if (i > j) break;

        sb.setCharAt (j --, s.charAt (x ++));
    }
    return sb.toString ();
}
----------------------------------------

public static String untranspose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = length - 1 - (length % 2);
    pos > 0; pos -= 2) {
        swapCharacters (out, pos, length - 1);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626777_12_21
2626640_53131733_11_18
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (i ++, s.charAt (x ++));
        if (i > j) break;

        sb.setCharAt (j --, s.charAt (x ++));
    }
    return sb.toString ();
}
----------------------------------------

public static String untranspose (String ts) {
    char [] s = new char [ts.length ()];
    int i = 0, j = ts.length ();
    for (int k = 0;
    k < ts.length (); k ++) {
        s [k % 2 == 0 ? i ++ : -- j] = ts.charAt (k);
    }
    return new String (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626777_1_10
2626640_2626877_1_10
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (x ++, s.charAt (i ++));
        if (i > j) break;

        sb.setCharAt (x ++, s.charAt (j --));
    }
    return sb.toString ();
}
----------------------------------------

public static String transpose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = 1;
    pos < length; pos += 2) {
        swapCharacters (out, length - 1, pos);
    }
    return out.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626777_1_10
2626640_53131733_2_9
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String s) {
    StringBuilder sb = new StringBuilder ();
    sb.setLength (s.length ());
    for (int i = 0, j = s.length () - 1, x = 0;
    i <= j;) {
        sb.setCharAt (x ++, s.charAt (i ++));
        if (i > j) break;

        sb.setCharAt (x ++, s.charAt (j --));
    }
    return sb.toString ();
}
----------------------------------------

public static String transpose (String s) {
    char [] ts = new char [s.length ()];
    int i = 0, j = ts.length;
    for (int k = 0;
    k < ts.length; k ++) {
        ts [k] = s.charAt (k % 2 == 0 ? i ++ : -- j);
    }
    return new String (ts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626877_12_21
2626640_53131733_11_18
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String untranspose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = length - 1 - (length % 2);
    pos > 0; pos -= 2) {
        swapCharacters (out, pos, length - 1);
    }
    return out.toString ();
}
----------------------------------------

public static String untranspose (String ts) {
    char [] s = new char [ts.length ()];
    int i = 0, j = ts.length ();
    for (int k = 0;
    k < ts.length (); k ++) {
        s [k % 2 == 0 ? i ++ : -- j] = ts.charAt (k);
    }
    return new String (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626640_2626877_1_10
2626640_53131733_2_9
Title: Transposing and Untransposing a String in java 
----------------------------------------

public static String transpose (String in) {
    int length = in.length ();
    StringBuilder out = new StringBuilder (in);
    for (int pos = 1;
    pos < length; pos += 2) {
        swapCharacters (out, length - 1, pos);
    }
    return out.toString ();
}
----------------------------------------

public static String transpose (String s) {
    char [] ts = new char [s.length ()];
    int i = 0, j = ts.length;
    for (int k = 0;
    k < ts.length; k ++) {
        ts [k] = s.charAt (k % 2 == 0 ? i ++ : -- j);
    }
    return new String (ts);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626731_2627045_36_50
2626731_2630617_64_87
Title: "Cannot draw pixels Pi number in a Synesthetic way" 
----------------------------------------

public void paintComponent (Graphics g) {
    if (image == null) {
        image = (BufferedImage) createImage (W, H);
        int i = 0;
        for (int row = 0;
        row < H; row ++) {
            for (int col = 0;
            col < W; col ++) {
                image.setRGB (col, row, clut [pi.get (i)]);
                if (++ i == pi.size ()) {
                    i = 0;
                }
            }
        }
    }
    g.drawImage (image, 0, 0, getWidth (), getHeight (), null);
}
----------------------------------------

public void paintComponent (Graphics g) {
    if (image == null) {
        image = (BufferedImage) createImage (W, H);
        int i = 0;
        boolean end = false;
        for (int row = 0;
        row < H && ! end; row ++) {
            for (int col = 0;
            col < W && ! end; col ++) {
                image.setRGB (col, row, clut [pi.get (i)]);
                if (++ i == pi.size ()) {
                    i = 0;
                    end = true;
                }
            }
        }
    }
    g.drawImage (image, 0, 0, getWidth (), getHeight (), null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2626731_2627045_52_64
2626731_2630617_89_105
Title: "Cannot draw pixels Pi number in a Synesthetic way" 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new JFrame ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.add (new PiRaster ());
            frame.pack ();
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new JFrame ("Pi raster");
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.add (new PiRaster ());
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26269753_26270026_33_53
26269753_26270026_7_18
Title: Adding a path length to each node in a Binary Search Tree 
----------------------------------------

private Node put (K key, V value) {
    int cmp = key.compareTo (this.key);
    if (cmp < 0) {
        if (left == null) {
            left = new Node (key, value, height + 1);
            return left;
        } else {
            return left.put (key, value);
        }
    } else if (cmp > 0) {
        if (right == null) {
            right = new Node (key, value, height + 1);
            return right;
        } else {
            return right.put (key, value);
        }
    } else {
        this.value = value;
        return this;
    }

}
----------------------------------------

public Node put (K key, V value) {
    size ++;
    if (head == null) {
        head = new Node (key, value, 0);
        return head;
    }
    Node result = head.put (key, value);
    if (result.height > height) {
        height = result.height;
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26269799_26270036_15_59
26269799_26270658_14_36
Title: Trying to read a text file using regex to check each line 
----------------------------------------

public static void main (String [] args) {
    realPath = "movie_release_dates.txt";
    File f = new File (realPath);
    if (! f.exists ()) {
        System.err.println ("file path not specified");
    }
    try {
        String regex1 = "[^(0-9).+]";
        String regex2 = "[^0-9$]";
        Scanner sc = new Scanner (f);
        while (sc.hasNextLine ()) {
            System.out.println ("Hello");
            String nextLine = sc.nextLine ();
            if (nextLine != null) {
                if (! nextLine.matches (regex2)) {
                    i = nextLine;
                    System.out.println ("Hello2");
                    System.out.println (i);
                }
                while (nextLine != null && nextLine.matches (regex1)) {
                    System.out.println ("Hello3");
                    if (! nextLine.matches (regex1)) {
                        j = nextLine;
                        mov.add (nextLine);
                        System.out.println ("Hello4");
                    }
                    nextLine = sc.nextLine ();
                }
            }
            Movie movie = new Movie (mov, i);
            movies.add (movie);
        }
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    ReadFile readFile = new ReadFile ();
    readFile.movies = new TreeMap < > ();
    try {
        readFile.importData ();
        printf (readFile.queryData ("Der Anstandige"));
        printf (readFile.queryData ("Bitter"));
        printf (readFile.queryData ("blah"));
        printf (readFile.queryData ("the"));
    } catch (IOException e) {
        throw (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26270406_26270462_1_11
26270406_26273529_2_14
Title: Parsing a string and returning an array 
----------------------------------------

int [] stringToCodes (String characters) {
    int characterLength = 0;
    if (characters != null) {
        characterLength = characters.length ();
    }
    int [] array = new int [characterLength];
    for (int i = 0;
    i < characterLength; i ++) {
        array [i] = characters.charAt (i);
    }
    return array;
}
----------------------------------------

int [] stringToCodes (String s) {
    int [] codepoints = new int [s.length ()];
    int count = 0;
    for (int cp, i = 0;
    i < s.length (); i += Character.charCount (cp)) {
        cp = s.codePointAt (i);
        System.out.println (String.format (cp < 0x10000 ? "U+%04X" : "U+%05X", cp));
        codepoints [count ++] = cp;
    }
    int [] array = java.util.Arrays.copyOf (codepoints, count);
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26288373_32165579_51_67
26288373_32165579_69_97
Title: Spring MVC: Generic DAO and Service classes 
----------------------------------------

public Long saveOrUpdate (T domain) throws Exception {
    try {
        Session session = sessionFactory.openSession ();
        Transaction tx = session.beginTransaction ();
        session.saveOrUpdate (domain);
        tx.commit ();
        Serializable ids = session.getIdentifier (domain);
        session.close ();
        return (Long) ids;
    } catch (ConstraintViolationException e) {
        throw new ConstraintViolationException ("Duplicate Record inserted", sqlException, "");
    }
}
----------------------------------------

public void saveOrUpdate (List domainList) throws Exception {
    try {
        Session session = sessionFactory.openSession ();
        Transaction tx = session.beginTransaction ();
        Object dom = null;
        for (int i = 0;
        i < domainList.size (); i ++) {
            dom = domainList.get (i);
            session.saveOrUpdate (dom);
            if (i % 10 == 0) {
                session.flush ();
                session.clear ();
            }
        }
        tx.commit ();
        session.close ();
    } catch (ConstraintViolationException e) {
        throw new ConstraintViolationException ("Duplicate Record inserted", sqlException, "");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26288877_26289096_1_27
26288877_26289096_29_41
Title: Getting method regardless of parameters 
----------------------------------------

public Callback (Class < ? > clazz, String methodName, Object parentObj) {
    Method [] allMethods;
    try {
        allMethods = clazz.getMethods ();
    } catch (SecurityException se) {
        allMethods = new Method [0];
    }
    int count = 0;
    Method single = null;
    for (Method m : allMethods) {
        if (m.getName ().equals (methodName)) {
            single = m;
            count ++;
        }
        if (count > 1) throw new IllegalArgumentException (clazz.getName () + " has more than one method named " + methodName);

    }
    if (count == 0) throw new IllegalArgumentException (clazz.getName () + " has no method named " + methodName);

    this.parentObj = parentObj;
    this.method = single;
    this.parameters = single.getParameterTypes ();
}
----------------------------------------

public Callback (Class < ? > clazz, String methodName, Object parentObj, Class < ? >...parameters) {
    try {
        this.method = clazz.getMethod (methodName, parameters);
    } catch (NoSuchMethodException nsme) {
        nsme.printStackTrace ();
    } catch (SecurityException se) {
        se.printStackTrace ();
    }
    this.parentObj = parentObj;
    this.parameters = parameters;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26305590_26306435_1_20
26305590_26307068_1_23
Title: Find out if an ArrayList has a certain char or partial string in it and then print the results 
----------------------------------------

private static void filterFlower (ArrayList < Flower > flowers) {
    String partialName = getString ("Enter the partial name of the flower: ");
    ArrayList < Flower > filteredFlowers = new ArrayList < Flower > ();
    for (Flower flower : flowers) {
        if (flower.getName ().contains (partialName)) {
            filteredFlowers.add (flower);
        }
    }
    if (filteredFlowers.size () > 0) {
        System.out.println ("The flowers containing " + partialName + " are: ");
        for (Flower flower : filteredFlowers) {
            System.out.println (flower.getName ());
        }
    } else {
        System.out.println ("None of the flowers contain " + partialName);
    }
}
----------------------------------------

private static void filterFlower (ArrayList < Flower > flowers) {
    System.out.print ("Enter the partial name of the flower: ");
    Scanner scanner = new Scanner (System.in);
    String partial = scanner.next ();
    ArrayList < Flower > matchedFlowers = new ArrayList < Flower > ();
    for (Flower flower : flowers) {
        if (flower.contains (partial)) matchedFlowers.add (flower);

    }
    if (matchedFlowers.isEmpty ()) {
        System.out.println ("No match for '" + partial + "'");
    } else {
        System.out.println ("Matches for '" + partial + "':");
        for (Flower flower : matchedFlowers) {
            System.out.println (flower.name);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26313979_26314180_4_27
26313979_26314644_1_20
Title: Finding the greatest integer from user input without using lists 
----------------------------------------

public static void main (String [] args) {
    Integer greatest = null;
    Scanner in = new Scanner (System.in);
    while (true) {
        System.out.print ("Input an integer: ");
        input = in.nextLine ();
        if ("".eq (input)) {
            break;
        }
        try {
            int current = Integer.parseInt (input);
            if (greatest == null || current > greatest) {
                greatest = current;
            }
        } catch (NumberFormatException e) {
        }
    }
    if (greatest != null) {
        System.out.println (greatest);
    }
}
----------------------------------------

public static void main (String [] args) {
    int highest = Integer.MIN_VALUE, lowest = Integer.MAX_VALUE, num = 0;
    Scanner scan = new Scanner (System.in);
    while (true) {
        System.out.print ("Enter a number:");
        String input = scan.nextLine ();
        if (input.equals ("")) {
            break;
        } else {
            num = Integer.parseInt (input);
            if (num > highest) {
                highest = num;
            }
            if (num < lowest) {
                lowest = num;
            }
        }
    }
    System.out.println ("Highest number is: " + highest);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26316674_26316721_1_11
26316674_26316727_1_16
Title: Swap two letters in a string 
----------------------------------------

private static String swap (String str, char one, char two) {
    char [] chars = str.toCharArray ();
    for (int i = 0;
    i < chars.length; i ++) {
        if (chars [i] == one) {
            chars [i] = two;
        } else if (chars [i] == two) {
            chars [i] = one;
        }

    }
    return String.valueOf (chars);
}
----------------------------------------

public static String swap (String org, String swapA, String swapB) {
    String swapAEscaped = swapA.replaceAll ("([\\[\\]\\\\+*?(){}^$])", "\\\\$1");
    StringBuilder builder = new StringBuilder (org.length ());
    String [] split = org.split (swapAEscaped);
    for (int i = 0;
    i < split.length; i ++) {
        builder.append (split [i].replace (swapB, swapA));
        if (i != (split.length - 1)) {
            builder.append (swapB);
        }
    }
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26318397_26318508_1_14
26318397_26318556_23_37
Title: Duplicate code in setOnClickListener method - android - java 
----------------------------------------

public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonBlue :
            break;
        case R.id.buttonGreen :
            break;
        case R.id.buttonRed :
            break;
        default :
    }
}
----------------------------------------

public void onClick (View view) {
    switch (view.getId ()) {
        case R.id.redButton :
        case R.id.greenButton :
            clickedButtonTag = Integer.parseInt ((String) view.getTag ());
            break;
        default :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26319035_26319133_1_36
26319035_26319308_2_20
Title: Using nested loops to create a box with stars in java 
----------------------------------------

public static void main (String [] args) {
    int row = 7;
    int col = 7;
    int count;
    String strNewLine = "*" + System.lineSeparator ();
    String str = "*";
    String strToPrint;
    for (int i = 0;
    i < row; i ++) {
        count = i;
        for (int c = 0;
        c < col; c ++) {
            if (count == 0 || count == row - 1 || c == 0) {
                if (c == row - 1) {
                    strToPrint = strNewLine;
                } else {
                    strToPrint = str;
                }
                System.out.print (strToPrint);
            } else {
                System.out.print (" ");
                count --;
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int col;
    int row;
    for (row = 0; row < 7; row ++) {
        for (col = 0; col < 7; col ++) {
            String symbol = " ";
            if (row == 0 || col == 0 || col > row || row == 6) {
                symbol = "*";
            }
            if (col == 6) {
                symbol += System.getProperty ("line.separator");
            }
            System.out.print (symbol);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26319222_26319715_3_35
26319222_26319937_21_71
Title: Change panels with Combo box 
----------------------------------------

public void start (Stage primaryStage) {
    Rectangle blueRectangle = new Rectangle (100, 100, Color.BLUE);
    Rectangle grinRectangle = new Rectangle (100, 100, Color.GREEN);
    StackPane stackPane = new StackPane ();
    stackPane.getChildren ().add (0, blueRectangle);
    stackPane.getChildren ().add (1, grinRectangle);
    ComboBox < String > comboBox = new ComboBox < > ();
    comboBox.getItems ().addAll ("Blue rectangle", "Green rectangle");
    comboBox.setValue ("Green rectangle");
    comboBox.setOnAction (e -> {
        switch (comboBox.getValue ()) {
            case "Blue rectangle" :
                blueRectangle.toFront ();
                break;
            case "Green rectangle" :
                grinRectangle.toFront ();
                break;
        }
    });
    VBox vBox = new VBox ();
    vBox.setAlignment (Pos.CENTER);
    vBox.setPadding (new Insets (5, 5, 5, 5));
    vBox.setSpacing (10);
    vBox.getChildren ().addAll (comboBox, stackPane);
    Scene scene = new Scene (vBox, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    final ComboBox comboBox = new ComboBox ();
    comboBox.getItems ().addAll ("Show Blue", "Show Green");
    final Label label = new Label ();
    final StackPane stack = new StackPane ();
    Button btn = new Button ();
    btn.setText ("Read comboBox");
    comboBox.getSelectionModel ().selectedIndexProperty ().addListener ((ObservableValue < ? extends Number > observable, Number oldValue, Number newValue) -> setVisibility (stack, comboBox, label));
    stack.getChildren ().add (new Rectangle (100, 100, Color.BLUE));
    stack.getChildren ().add (new Rectangle (100, 100, Color.GREEN));
    comboBox.setValue ("Show Blue");
    VBox vBox = new VBox ();
    vBox.setPadding (new Insets (5, 5, 5, 5));
    vBox.setSpacing (5);
    vBox.getChildren ().addAll (label, comboBox, btn, stack);
    StackPane root = new StackPane ();
    root.getChildren ().add (vBox);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26323683_26323706_1_14
26323683_26323754_1_12
Title: How to fix this code? 
----------------------------------------

public static int guess (int numberOfGuesses, int secretNumber) {
    Scanner sc = new Scanner (System.in);
    for (int n = 1;
    n <= numberOfGuesses; n ++) {
        System.out.println ("Guess " + n + " of " + numberOfGuesses + ":");
        int userNumber = sc.nextInt ();
        if (userNumber == secretNumber) {
            return n;
        }
    }
    return - 1;
}
----------------------------------------

public static int guess (int numberOfGuesses, int secretNumber) {
    Scanner sc = new Scanner (System.in);
    int userNumber = secretNumber / 2;
    boolean found = false;
    int tries;
    for (tries = 0; tries <= numberOfGuesses && ! found; tries ++) {
        userNumber = sc.nextInt ();
        found = secretNumber == userNumber;
    }
    sc.close ();
    return found ? tries : - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26329974_26330208_1_37
26329974_26330274_11_59
Title: ArrayList and strings 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter some words (all on one line, separated by spaces):");
    String line = input.nextLine ();
    String [] words = line.split (" +");
    ArrayList < String > a = new ArrayList < String > ();
    for (int i = 0;
    i < words.length; i ++) {
        a.add (words [i]);
    }
    System.out.println ("The words are stored in an ArrayList");
    System.out.println ("The ArrayList is " + a);
    System.out.print ("\nEnter a number");
    int len = input.nextInt ();
    for (int j = 0;
    j < a.size (); j ++) {
        String b = a.get (j);
        if (b.length () < len) {
            a.remove (j);
            j --;
        }
    }
    System.out.println ("The ArrayList is " + a);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter some words (all on one line, separated by spaces):");
    String line = input.nextLine ();
    String [] words = line.split (" +");
    a = new ArrayList < String > ();
    presenter = new ArrayList < String > ();
    for (int i = 0;
    i < words.length; i ++) {
        a.add (words [i]);
    }
    System.out.println ("The words are stored in an ArrayList");
    System.out.println ("The ArrayList is " + a);
    System.out.print ("\nEnter a number");
    int len = input.nextInt ();
    for (int j = 0;
    j < words.length; j ++) {
        String b = a.get (j);
        if ((b.length () < len)) {
        } else {
            presenter.add (a.get (j));
        }
    }
    System.out.print ("The ArrayList is " + presenter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2633112_25023749_1_10
2633112_32529587_1_10
Title: Get JSF managed bean by name in any Servlet related class 
----------------------------------------

public static Object getBean (String beanName) {
    Object bean = null;
    FacesContext fc = FacesContext.getCurrentInstance ();
    if (fc != null) {
        ELContext elContext = fc.getELContext ();
        bean = elContext.getELResolver ().getValue (elContext, null, beanName);
    }
    return bean;
}
----------------------------------------

public static < T > T getBean (Class < T > clazz) {
    try {
        String beanName = getBeanName (clazz);
        FacesContext facesContext = FacesContext.getCurrentInstance ();
        return facesContext.getApplication ().evaluateExpressionGet (facesContext, "#{" + beanName + "}", clazz);
    } catch (Exception ex) {
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26333309_26333330_1_11
26333309_26333678_1_17
Title: displaying a reversed array? java 
----------------------------------------

public static void flip (int [] flp) {
    System.out.println ("This is the flip method");
    for (int i = 0;
    i < flp.length / 2; i ++) {
        int e = flp.length - (1 + i);
        int temp = flp [i];
        flp [i] = flp [e];
        flp [e] = temp;
    }
}
----------------------------------------

public static void flip (int [] flp) {
    System.out.println ("This is the flip method");
    int e = flp.length - 1;
    for (int i = 0;
    i < flp.length / 2; i ++) {
        int temp = flp [i];
        flp [i] = flp [e];
        flp [e] = temp;
        e --;
    }
    for (int i = 0;
    i < flp.length; i ++) {
        System.out.println ("Index" + (i) + " :" + flp [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26337833_26337982_23_37
26337833_26337985_20_29
Title: Finding prime numbers with a custom IsPrime method 
----------------------------------------

public static boolean isPrime (int prime) {
    for (int number = 2;
    number < Math.sqrt (prime); number ++) {
        if (prime % number == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    int sqrt = (int) Math.sqrt (number) + 1;
    for (int i = 2;
    i < sqrt; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26337833_26337982_6_21
26337833_26337985_4_13
Title: Finding prime numbers with a custom IsPrime method 
----------------------------------------

public static void main (String args []) throws IOException {
    PrintWriter primeNumbersWriter = new PrintWriter ("PrimeNumber.txt");
    for (int i = 0;
    i < 100; i ++) {
        if (isPrime (i)) {
            primeNumbersWriter.println ("Prime numbers are: " + i);
        }
    }
    primeNumbersWriter.close ();
}
----------------------------------------

public static void main (String args []) {
    Scanner scnr = new Scanner (System.in);
    int number = Integer.MAX_VALUE;
    System.out.println ("Enter number to check if prime or not ");
    while (number != 0) {
        number = scnr.nextInt ();
        System.out.printf ("Does %d is prime? %s %s  %s %n", number, isPrime (number), isPrimeOrNot (number), isPrimeNumber (number));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26351882_26352275_20_40
26351882_26352432_1_16
Title: How i can replace string in java for rewrite the sequence 
----------------------------------------

private static String compress (String toCompress) {
    StringBuilder compressedSB = new StringBuilder ();
    char tempChar = ' ';
    for (int i = 0, counter = 1;
    i < toCompress.length (); i ++) {
        if (tempChar != toCompress.charAt (i)) {
            tempChar = toCompress.charAt (i);
            compressedSB.append (tempChar);
            if (counter > 1) {
                compressedSB.append (counter);
                counter = 1;
            }
        } else {
            counter ++;
        }
        if (i == toCompress.length () - 1) {
            compressedSB.append (counter);
        }
    }
    return compressedSB.toString ();
}
----------------------------------------

public String compress (String str) {
    String mystr = "";
    char last = str.charAt (8);
    int count = 1;
    for (int i = 1;
    i < str.lengthQ; i ++) {
        if (str.charAt (i) == last) {
            count ++;
        } else {
            mystr += last + "" + count;
            last = str.charAt (i);
            count = 1;
        }
    }
    return mystr + last + count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2635292_2635361_1_11
2635292_48279973_1_21
Title: How do I remove the leaves of a binary tree? 
----------------------------------------

public void removeLeaves (BinaryTree n) {
    if (n.left != null) {
        if (n.left.isLeaf ()) {
            n.removeLeftChild ();
        } else {
            removeLeaves (n.left);
        }
    }
}
----------------------------------------

public boolean removeLeaves (Node n) {
    boolean isLeaf = false;
    if (n.left == null && n.right == null) {
        return true;
    }
    if (n != null && n.left != null) {
        isLeaf = removeLeaves (n.left);
        if (isLeaf) n.left = null;

    }
    if (n != null && n.right != null) {
        isLeaf = removeLeaves (n.right);
        if (b) n.right = null;

    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26353415_26353453_1_13
26353415_26353965_8_20
Title: How to find out the odd integers in an array using a recursive method? 
----------------------------------------

public static int countOddsInRange (int [] a, int first, int last) {
    int count = 0;
    if (first <= last) {
        count += countOddsInRange (a, first + 1, last);
        if (a [first] % 2 != 0) {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int countOddsInRange (int [] a, int first, int last) {
    int count = 0;
    if (first <= last) {
        count += countOddsInRange (a, first + 1, last);
        if (a [first] % 2 != 0) {
            count ++;
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26353574_26353732_1_11
26353574_26357775_1_12
Title: Collect all the div id inside the table - webdriver using Java 
----------------------------------------

public void gettingFee () {
    List < String > allIds = new ArrayList < String > ();
    WebElement tdElement = driver.findElement (By.xpath ("//*[@id='tblRenewalAgent']/tbody/tr/td"));
    List < WebElement > allDivElements = tdElement.findElements (By.tagName ("div"));
    for (int i = 0;
    i < allDivElements.size (); i ++) {
        try {
            String id = allDivElements.get (i).getAttribute ("id");
            allIds.add (id);
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void gettingFee () {
    List < WebElement > divList = driver.findElements (By.tagName ("div"));
    List < String > idList = new ArrayList < String > ();
    for (WebElement e : divList) {
        if (! e.getAttribute ("id").isEmpty ()) {
            String s = e.getAttribute ("id");
            idList.add (s);
            System.out.println (s);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26354678_26354894_3_16
26354678_26355140_7_20
Title: Using a for loop to read ONLY 5 numbers and average them. JAVA 
----------------------------------------

public static void main (String args []) {
    int numlenngth = 5;
    double total = 0;
    Scanner sc = new Scanner (System.in);
    for (int num1 = 0;
    num1 < numlenngth; num1 ++) {
        System.out.print ("Please enter a number: ");
        total += sc.nextInt ();
    }
    System.out.println ("Average : " + (total / numlenngth));
}
----------------------------------------

public static void main (final String [] args) {
    final Scanner scanner = new Scanner (System.in);
    double sum = 0;
    System.out.format ("You have to enter %d numbers now.\n", TOTAL);
    for (int cnt = 1;
    cnt <= TOTAL; cnt ++) {
        System.out.format ("Please enter number %d of %d: ", cnt, TOTAL);
        sum += scanner.nextInt ();
    }
    System.out.format ("The average is %f.\n", sum / TOTAL);
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26367855_1_35
26367626_26367937_15_43
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    playAgain = "Y";
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        if (guess == answer) {
            System.out.println ("Congratulations, You guessed the number!");
            System.out.println ("Would you like to play again? Enter Y to play or N to quit: ");
            input.nextLine ();
            playAgain = input.next ();
            answer = num.nextInt (10);
            guess = - 1;
            if (! playAgain.equalsIgnoreCase ("N")) {
                System.out.println ("Enter a number between 1 and 10 as your first guess: ");
                guess = input.nextInt ();
            }
        }
    } while (! playAgain.equalsIgnoreCase ("N"));
}
----------------------------------------

public static void inputGuess () {
    answer = 1 + num.nextInt (10);
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
    System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
    playAgain = input.nextLine ();
    if (playAgain.equalsIgnoreCase ("Y")) {
        inputGuess ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26367855_1_35
26367626_26368051_16_51
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    playAgain = "Y";
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        if (guess == answer) {
            System.out.println ("Congratulations, You guessed the number!");
            System.out.println ("Would you like to play again? Enter Y to play or N to quit: ");
            input.nextLine ();
            playAgain = input.next ();
            answer = num.nextInt (10);
            guess = - 1;
            if (! playAgain.equalsIgnoreCase ("N")) {
                System.out.println ("Enter a number between 1 and 10 as your first guess: ");
                guess = input.nextInt ();
            }
        }
    } while (! playAgain.equalsIgnoreCase ("N"));
}
----------------------------------------

public void inputGuess () {
    Random num = new Random ();
    int answer = num.nextInt (10) + 1;
    Scanner input = new Scanner (System.in);
    int guess;
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        input.nextLine ();
    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26367855_1_35
26367626_26368231_5_34
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    playAgain = "Y";
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        if (guess == answer) {
            System.out.println ("Congratulations, You guessed the number!");
            System.out.println ("Would you like to play again? Enter Y to play or N to quit: ");
            input.nextLine ();
            playAgain = input.next ();
            answer = num.nextInt (10);
            guess = - 1;
            if (! playAgain.equalsIgnoreCase ("N")) {
                System.out.println ("Enter a number between 1 and 10 as your first guess: ");
                guess = input.nextInt ();
            }
        }
    } while (! playAgain.equalsIgnoreCase ("N"));
}
----------------------------------------

public static void inputGuess () {
    Scanner input = new Scanner (System.in);
    String playAgain = "Y";
    int guess;
    Random ran = new Random ();
    int answer = ran.nextInt (10) + 1;
    while (playAgain.equalsIgnoreCase ("Y")) {
        System.out.println ("Enter a number between 1 and 10 as your first guess: " + answer);
        guess = input.nextInt ();
        do {
            if (guess < 1 || guess > 10) {
                System.out.println ("That is not a valid entry. Please try again: ");
                guess = input.nextInt ();
            } else if (guess > answer) {
                System.out.println ("Too high, Try Again: ");
                guess = input.nextInt ();
            } else if (guess < answer) {
                System.out.println ("Too low, Try Again: ");
                guess = input.nextInt ();
            }

        } while (guess != answer);
        System.out.println ("Congratulations, You guessed the number!");
        System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
        input.nextLine ();
        playAgain = input.nextLine ();
        answer = ran.nextInt (10) + 1
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26367855_1_35
26367626_26368568_11_49
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    playAgain = "Y";
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        if (guess == answer) {
            System.out.println ("Congratulations, You guessed the number!");
            System.out.println ("Would you like to play again? Enter Y to play or N to quit: ");
            input.nextLine ();
            playAgain = input.next ();
            answer = num.nextInt (10);
            guess = - 1;
            if (! playAgain.equalsIgnoreCase ("N")) {
                System.out.println ("Enter a number between 1 and 10 as your first guess: ");
                guess = input.nextInt ();
            }
        }
    } while (! playAgain.equalsIgnoreCase ("N"));
}
----------------------------------------

public void inputGuess () {
    answer = num.nextInt (11);
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
    System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
    do {
        playAgain = input.nextLine ();
    } while (playAgain.length () < 1);
    if (playAgain.trim ().equalsIgnoreCase ("y")) {
        inputGuess ();
    } else {
        System.out.println ("Good Bye!!!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26367937_15_43
26367626_26368051_16_51
Title: User input to repeat program in Java 
----------------------------------------

public static void inputGuess () {
    answer = 1 + num.nextInt (10);
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
    System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
    playAgain = input.nextLine ();
    if (playAgain.equalsIgnoreCase ("Y")) {
        inputGuess ();
    }
}
----------------------------------------

public void inputGuess () {
    Random num = new Random ();
    int answer = num.nextInt (10) + 1;
    Scanner input = new Scanner (System.in);
    int guess;
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        input.nextLine ();
    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26368051_16_51
26367626_26368231_5_34
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    Random num = new Random ();
    int answer = num.nextInt (10) + 1;
    Scanner input = new Scanner (System.in);
    int guess;
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        input.nextLine ();
    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
}
----------------------------------------

public static void inputGuess () {
    Scanner input = new Scanner (System.in);
    String playAgain = "Y";
    int guess;
    Random ran = new Random ();
    int answer = ran.nextInt (10) + 1;
    while (playAgain.equalsIgnoreCase ("Y")) {
        System.out.println ("Enter a number between 1 and 10 as your first guess: " + answer);
        guess = input.nextInt ();
        do {
            if (guess < 1 || guess > 10) {
                System.out.println ("That is not a valid entry. Please try again: ");
                guess = input.nextInt ();
            } else if (guess > answer) {
                System.out.println ("Too high, Try Again: ");
                guess = input.nextInt ();
            } else if (guess < answer) {
                System.out.println ("Too low, Try Again: ");
                guess = input.nextInt ();
            }

        } while (guess != answer);
        System.out.println ("Congratulations, You guessed the number!");
        System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
        input.nextLine ();
        playAgain = input.nextLine ();
        answer = ran.nextInt (10) + 1
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26368051_16_51
26367626_26368568_11_49
Title: User input to repeat program in Java 
----------------------------------------

public void inputGuess () {
    Random num = new Random ();
    int answer = num.nextInt (10) + 1;
    Scanner input = new Scanner (System.in);
    int guess;
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

        input.nextLine ();
    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
}
----------------------------------------

public void inputGuess () {
    answer = num.nextInt (11);
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
    System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
    do {
        playAgain = input.nextLine ();
    } while (playAgain.length () < 1);
    if (playAgain.trim ().equalsIgnoreCase ("y")) {
        inputGuess ();
    } else {
        System.out.println ("Good Bye!!!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26367626_26368231_5_34
26367626_26368568_11_49
Title: User input to repeat program in Java 
----------------------------------------

public static void inputGuess () {
    Scanner input = new Scanner (System.in);
    String playAgain = "Y";
    int guess;
    Random ran = new Random ();
    int answer = ran.nextInt (10) + 1;
    while (playAgain.equalsIgnoreCase ("Y")) {
        System.out.println ("Enter a number between 1 and 10 as your first guess: " + answer);
        guess = input.nextInt ();
        do {
            if (guess < 1 || guess > 10) {
                System.out.println ("That is not a valid entry. Please try again: ");
                guess = input.nextInt ();
            } else if (guess > answer) {
                System.out.println ("Too high, Try Again: ");
                guess = input.nextInt ();
            } else if (guess < answer) {
                System.out.println ("Too low, Try Again: ");
                guess = input.nextInt ();
            }

        } while (guess != answer);
        System.out.println ("Congratulations, You guessed the number!");
        System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
        input.nextLine ();
        playAgain = input.nextLine ();
        answer = ran.nextInt (10) + 1
    }
}
----------------------------------------

public void inputGuess () {
    answer = num.nextInt (11);
    System.out.println ("Enter a number between 1 and 10 as your first guess: ");
    Scanner input = new Scanner (System.in);
    guess = input.nextInt ();
    do {
        if (guess < 1 || guess > 10) {
            System.out.println ("That is not a valid entry. Please try again: ");
            guess = input.nextInt ();
        } else if (guess > answer) {
            System.out.println ("Too high, Try Again: ");
            guess = input.nextInt ();
        } else if (guess < answer) {
            System.out.println ("Too low, Try Again: ");
            guess = input.nextInt ();
        }

    } while (guess != answer);
    System.out.println ("Congratulations, You guessed the number!");
    System.out.println ("Would you like to play again? Enter Y to play or any other key to quit: ");
    do {
        playAgain = input.nextLine ();
    } while (playAgain.length () < 1);
    if (playAgain.trim ().equalsIgnoreCase ("y")) {
        inputGuess ();
    } else {
        System.out.println ("Good Bye!!!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26372126_35332735_3_16
26372126_53344829_5_18
Title: jgrasp. need assistance. cannot figure out how to code this 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print (" Enter a word: ");
    String word = input.nextLine ();
    int count = 0;
    for (int i = 0;
    i < word.length (); i ++) {
        if (word.charAt (i) == '@') count ++;

    }
    if (count > 0) System.out.println ("Its an E-mail ");
    else System.out.println ("Its not an E-mail ");

}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print (" Enter a word: ");
    String word = input.nextLine ();
    if (word.contains ('@')) {
        System.out.println ("It's an Email");
    } else {
        System.out.println ("It's not an Email");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26372340_26372510_1_31
26372340_26374933_1_22
Title: Cannot update entity using Hibernate 
----------------------------------------

@Override
public void updatePageWithText (String pageName, String rawText) {
    Session session = null;
    Transaction tx = null;
    WikiPage res = null;
    try {
        session = HibernateUtils.getInstance ().openSession ();
        tx = session.beginTransaction ();
        String hql = "FROM WikiPage M WHERE M.name = :name";
        Query query = session.createQuery (hql);
        query.setParameter ("name", pageName);
        res = (WikiPage) query.list ().get (0);
        res.setRawText (rawText);
        session.update (res);
        tx.commit;
    } catch (IndexOutOfBoundsException e) {
    } catch (Exception ex) {
        if (tx != null) {
            tx.rollback ();
        }
        throw ex;
    } finally {
        session.close ();
    }
}
----------------------------------------

@Override
public void updatePageWithText (String pageName, String rawText) {
    Session session = HibernateUtils.getInstance ().openSession ();
    Transaction transaction = session.beginTransaction ();
    String hql = "FROM WikiPage M WHERE M.name = :name";
    Query query = session.createQuery (hql);
    query.setParameter ("name", pageName);
    WikiPage res = null;
    try {
        res = (WikiPage) query.list ().get (0);
        res.setRawText (rawText);
        transaction.commit ();
    } catch (IndexOutOfBoundsException e) {
        transaction.rollback ();
    } finally {
        session.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26373750_26373918_1_15
26373750_26374018_1_15
Title: My loop won't execute? 
----------------------------------------

public static void main (String [] args) {
    String line;
    int sub, length;
    Scanner kb = new Scanner (System.in);
    System.out.print ("Enter a string: ");
    line = kb.nextLine ();
    System.out.print ("Enter substring length: ");
    sub = kb.nextInt ();
    length = line.length ();
    for (int i = 0;
    i < length - (sub - 1); i ++) {
        if (i + sub <= length) System.out.println (line.substring (i, i + sub));

    }
}
----------------------------------------

public static void main (final String [] args) {
    final Scanner kb = new Scanner (System.in);
    System.out.print ("Enter a string: ");
    final String line = kb.nextLine ();
    System.out.print ("Enter substring length: ");
    final int sub = kb.nextInt ();
    for (int i = 0;
    i < line.length () - (sub - 1); i ++) {
        System.out.println (line.substring (i, i + sub));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26375630_26376340_1_10
26375630_26380291_1_10
Title: Hot to stop the program from crashing after a String is entered instead of an int 
----------------------------------------

public static int inputInt (String prompt, Scanner keyboard) {
    System.out.print (prompt);
    try {
        return keyboard.nextInt ();
    } catch (InputMismatchException e) {
        System.out.println ("Input Mismatch! Please enter Numbers");
        keyboard.next ();
        return inputInt (prompt, keyboard);
    }
}
----------------------------------------

public static int inputInt (String prompt, Scanner keyboard) {
    System.out.println (prompt);
    if (keyboard.hasNextInt ()) return keyboard.nextInt ();
    else {
        System.out.println ("please input a number");
        keyboard.next ();
        return inputInt (prompt, keyboard);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26375678_26375729_1_10
26375678_26375811_1_13
Title: taking in command prompt arguments and constructing objects 
----------------------------------------

public static void main (String [] args) {
    int numEach = 0;
    int boatSize = 0;
    if (args.length > 1) numEach = Integer.parseInt (args [1]);

    if (args.length > 3) boatSize = Integer.parseInt (args [3]);

    RiverCrossingPuzzle puzzle = new RiverCrossingPuzzle (numEach, boatSize);
}
----------------------------------------

public static void main (String [] args) {
    RiverCrossingPuzzle puzzle;
    try {
        int numEach = Integer.parseInt (args [1]);
        int boatSize = Integer.parseInt (args [3]);
        puzzle = new RiverCrossingPuzzle (numEach, boatSize);
    } catch (NumberFormatException e) {
        e.printStackTrace ();
        System.out.println ("Invalid command line arguments passed in!! You should pass arguments such as : -n NUMBER -b NUMBER");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26375678_26375729_1_10
26375678_26375852_1_18
Title: taking in command prompt arguments and constructing objects 
----------------------------------------

public static void main (String [] args) {
    int numEach = 0;
    int boatSize = 0;
    if (args.length > 1) numEach = Integer.parseInt (args [1]);

    if (args.length > 3) boatSize = Integer.parseInt (args [3]);

    RiverCrossingPuzzle puzzle = new RiverCrossingPuzzle (numEach, boatSize);
}
----------------------------------------

public static void main (String [] args) {
    int nIndex = - 1;
    int bIndex = - 1;
    for (int i = 0;
    i < args.length; i ++) if (args [i].equals ("-n")) nIndex = i + 1;
    else if (args [i].equals ("-b")) bIndex = i + 1;

    int boatSize, numEach;
    if (nIndex != - 1 && bIndex != - 1 && nIndex < args.length && bIndex < args.length) {
        boatSize = Integer.parse (args [bIndex]);
        numEach = Integer.parse (args [nIndex]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26375678_26375811_1_13
26375678_26375852_1_18
Title: taking in command prompt arguments and constructing objects 
----------------------------------------

public static void main (String [] args) {
    RiverCrossingPuzzle puzzle;
    try {
        int numEach = Integer.parseInt (args [1]);
        int boatSize = Integer.parseInt (args [3]);
        puzzle = new RiverCrossingPuzzle (numEach, boatSize);
    } catch (NumberFormatException e) {
        e.printStackTrace ();
        System.out.println ("Invalid command line arguments passed in!! You should pass arguments such as : -n NUMBER -b NUMBER");
        return;
    }
}
----------------------------------------

public static void main (String [] args) {
    int nIndex = - 1;
    int bIndex = - 1;
    for (int i = 0;
    i < args.length; i ++) if (args [i].equals ("-n")) nIndex = i + 1;
    else if (args [i].equals ("-b")) bIndex = i + 1;

    int boatSize, numEach;
    if (nIndex != - 1 && bIndex != - 1 && nIndex < args.length && bIndex < args.length) {
        boatSize = Integer.parse (args [bIndex]);
        numEach = Integer.parse (args [nIndex]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26375962_26376047_40_78
26375962_26376960_38_86
Title: Java menu looping 
----------------------------------------

public static void main (String [] args) {
    double meters;
    int choice;
    Scanner keyboard = new Scanner (System.in);
    boolean quitFlag = false;
    while (! quitFlag) {
        System.out.println ("Enter a Distance in Meters: ");
        meters = keyboard.nextDouble ();
        if (meters < 1) {
            System.out.println ("Meter can not be negative.");
        } else showMenu ();

        choice = keyboard.nextInt ();
        switch (choice) {
            case 1 :
                showKilometers (meters);
                break;
            case 2 :
                showInches (meters);
                break;
            case 3 :
                showFeet (meters);
                break;
            case 4 :
                quitFlag = true;
                quitProgram ();
                break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int choice;
    double meters;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Enter a Distance in Meters: ");
    meters = keyboard.nextDouble ();
    do {
        if (meters < 1) {
            System.out.println ("Meter can not be negative and keep it greater then 0");
            System.out.println ("Enter a Distance in Meters: ");
            meters = keyboard.nextDouble ();
            showMenu ();
            choice = keyboard.nextInt ();
            switch (choice) {
                case 1 :
                    showKilometers (meters);
                    break;
                case 2 :
                    showInches (meters);
                    break;
                case 3 :
                    showFeet (meters);
                    break;
                case 4 :
                    quitProgram ();
                    break;
            }
        } else showMenu ();

        choice = keyboard.nextInt ();
        switch (choice) {
            case 1 :
                showKilometers (meters);
                break;
            case 2 :
                showInches (meters);
                break;
            case 3 :
                showFeet (meters);
                break;
            case 4 :
                quitProgram ();
                break;
        }
    } while (choice != 4);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26380983_26381630_1_17
26380983_26381667_1_30
Title: Finding uniques integers in an array 
----------------------------------------

public int uniques (int [] a) {
    int unique = 1;
    boolean seen = false;
    for (int i = 1;
    i < a.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            if (a [i] == a [j]) {
                seen = true;
            }
        }
        if (! seen) {
            unique ++;
        }
        seen = false;
    }
    return unique;
}
----------------------------------------

public int uniques (int [] a) {
    int tempArray [] = new int [a.length];
    boolean duplicate = false;
    int index = 0;
    int digitsAdded = 0;
    for (int i = 0;
    i < a.length; i ++) {
        for (int j = 0;
        j < tempArray.length; j ++) {
            if (a [i] == tempArray [j]) {
                duplicate = true;
            }
        }
        if (! duplicate) {
            tempArray [index] = a [i];
            index ++;
            digitsAdded ++;
        }
        duplicate = false;
    }
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] == 0) {
            digitsAdded ++;
            break;
        }
    }
    return digitsAdded;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26382702_26383239_4_13
26382702_26383502_1_12
Title: How to read input from user with unknown length? 
----------------------------------------

public static void main (String args []) {
    int sum = 0;
    Console c = System.console ();
    Scanner scan = new Scanner (c.readLine ());
    scan.useDelimiter ("[,x]");
    while (scan.hasNextInt ()) sum += scan.nextInt ();

    scan.close ();
    System.out.print (sum);
}
----------------------------------------

public static void main (String [] args) {
    int result = 0;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the value");
    String string = sc.nextLine ();
    string = string.replace ("x", "");
    String [] strArray = string.split (",");
    for (String str : strArray) {
        result += Integer.valueOf (str);
    }
    System.out.println ("Result is " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26382702_26383239_4_13
26382702_26383990_1_20
Title: How to read input from user with unknown length? 
----------------------------------------

public static void main (String args []) {
    int sum = 0;
    Console c = System.console ();
    Scanner scan = new Scanner (c.readLine ());
    scan.useDelimiter ("[,x]");
    while (scan.hasNextInt ()) sum += scan.nextInt ();

    scan.close ();
    System.out.print (sum);
}
----------------------------------------

public static void main (final String [] args) {
    final Scanner userInputScanner = new Scanner (System.in);
    String userInput;
    do {
        System.out.println ("Please enter a list of numbers in following format: 1,2,3,4x or 1 2 3 4x");
        userInput = userInputScanner.nextLine ();
    } while (! (userInput.matches ("\\d+(,\\d+)*x") || userInput.matches ("\\d+( \\d+)*x")));
    userInputScanner.close ();
    final String [] numberStrings = userInput.replace ("x", "").split ("[, ]");
    int sum = 0;
    for (final String numberString : numberStrings) {
        sum += Integer.valueOf (numberString);
    }
    System.out.println ("The sum of all numbers in the list is: " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26382702_26383502_1_12
26382702_26383990_1_20
Title: How to read input from user with unknown length? 
----------------------------------------

public static void main (String [] args) {
    int result = 0;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the value");
    String string = sc.nextLine ();
    string = string.replace ("x", "");
    String [] strArray = string.split (",");
    for (String str : strArray) {
        result += Integer.valueOf (str);
    }
    System.out.println ("Result is " + result);
}
----------------------------------------

public static void main (final String [] args) {
    final Scanner userInputScanner = new Scanner (System.in);
    String userInput;
    do {
        System.out.println ("Please enter a list of numbers in following format: 1,2,3,4x or 1 2 3 4x");
        userInput = userInputScanner.nextLine ();
    } while (! (userInput.matches ("\\d+(,\\d+)*x") || userInput.matches ("\\d+( \\d+)*x")));
    userInputScanner.close ();
    final String [] numberStrings = userInput.replace ("x", "").split ("[, ]");
    int sum = 0;
    for (final String numberString : numberStrings) {
        sum += Integer.valueOf (numberString);
    }
    System.out.println ("The sum of all numbers in the list is: " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26383377_26383647_1_22
26383377_26383648_1_18
Title: linked list sublist method-java 
----------------------------------------

public List < L > subList (int fromIndex, int toIndex) {
    Node < L > currentInOriginal = nthItem (fromIndex);
    int count = (toIndex - fromIndex) + 1;
    List < L > newSubList = new List < L > ();
    newSubList.head = new Node < L > (current.data);
    Node < L > lastItemInList = newSubList.head;
    int soFar = 1;
    currentInOriginal = currentInOriginal.next;
    while (currentInOriginal != null && soFar < count) {
        lastItemInList.next = new Node < L > (currentInOriginal.data);
        listItemInList = lastItemInList.next;
        currentInOriginal = currentInOriginal.next;
        soFar ++;
    }
    return newSubList;
}
----------------------------------------

public List < L > subList (int fromIndex, int toIndex) throws IndexOutOfBoundsException {
    if (fromIndex < 0 || fromIndex > size () || toIndex < fromIndex || toIndex > size ()) {
        throw new IndexOutOfBoundsException ();
    }
    List < L > n = new List < L > ();
    Node < L > startNode = head;
    int counter = 0;
    while (startNode != null) {
        if (counter > fromIndex && counter < toIndex) {
            n.add (startNode);
        }
        startNode = startNode.next;
        counter ++;
    }
    return n;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26388638_26388759_1_10
26388638_26389637_7_21
Title: When using ArrayList<int[][]> how to see if an element is already in the list? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < int [] [] > test = new ArrayList < int [] [] > ();
    int [] [] one = {{1, 2, 3}, {4, 5, 6}};
    int [] [] two = {{1, 2, 3}, {4, 5, 6}};
    int [] [] three = {{9, 7, 5}, {1, 2, 4}, {5, 6, 7}};
    test.add (one);
    if (contains (test, two)) {
        System.out.println ("Found two");
    }
}
----------------------------------------

public static void main (String [] args) {
    List < int [] [] > list = new ArrayList < int [] [] > ();
    int [] [] one = {{1, 2, 3}, {4, 5, 6}};
    int [] [] two = {{1, 2, 3}, {4, 5, 6}};
    list.add (one);
    if (list.stream ().anyMatch (e -> Arrays.deepEquals (e, two))) {
        System.out.println ("Found two");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26391772_26392045_1_13
26391772_26392081_1_17
Title: Class of Enum of any type generic construction 
----------------------------------------

private static < T extends Enum < T > > T findEnumValue (final Class < T > cls, final Object value) {
    if (value == null) {
        return null;
    }
    if (value.getClass () == cls) {
        return cls.cast (value);
    }
    if (value instanceof String) {
        return Enum.valueOf (cls, (String) value);
    }
    return null;
}
----------------------------------------

private static < T extends Enum < T > > T findEnumValue (final Class < T > cls, final Object value) {
    if (value == null) {
        return null;
    }
    if (value instanceof Enum < ? >) {
        return (T) value;
    }
    if (value instanceof String) {
        for (T item : cls.getEnumConstants ()) {
            if (item.name ().equals (value)) {
                return item;
            }
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26393116_26393375_58_68
26393116_26393375_93_118
Title: Why does my TimerTask keep running faster and faster? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (movie != null) {
        window.setText (movie.displayFrame (counter));
        counter ++;
        if (counter > movie.frameSize) {
            counter = 0;
        }
    } else {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (e.getSource () == play) {
        if (! input.getText ().equals ("")) {
            run = true;
            if (input.getText ().equals (fileName)) {
            }
            fileName = input.getText ();
            getFrameSize ();
            int counter = 0;
            if (! input.getText ().equals ("File does not exist")) {
                movie = new Asciimation (fileName, frameSize, totalFrames);
                timer.start ();
            }
        }
    } else {
        run = false;
        timer.stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26396554_26396594_1_13
26396554_26396818_2_14
Title: Write a method that returns the even indexes of a string 
----------------------------------------

public static String decrypt (String question, Scanner console) {
    System.out.print (question + " ");
    String s = console.nextLine ();
    StringBuilder builder = new StringBuilder ("");
    for (int i = 0;
    i < s.length (); i ++) {
        if (i % 2 == 0) {
            builder.append (s.charAt (i));
        }
    }
    return builder.toString ();
}
----------------------------------------

public static String decrypt (String question, Scanner console) {
    String str = "";
    System.out.print (question + " ");
    String s = console.nextLine ();
    for (int i = 0;
    i < s.length (); i = i + 2) {
        char x = (s.charAt (i));
        str = str + String.valueOf (x);
    }
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26403067_26403179_1_16
26403067_26403254_1_16
Title: Return int from for loop 
----------------------------------------

public int pAhead (String name) {
    Patient p;
    int patientsAhead = 0;
    for (int i = 0;
    i < list.size (); i ++) {
        p = list.get (i);
        String n = p.getName ();
        if (name.equalsIgnoreCase (n)) {
            patientsAhead = i;
            break;
        }
    }
    return list.size () - patientsAhead;
}
----------------------------------------

public int pAhead (String name) {
    Patient p;
    int patientsAhead = 0;
    for (int i = 0;
    i < list.size (); i ++) {
        p = list.get (i);
        String n = p.getName ();
        if (name.equalsIgnoreCase (n)) {
            patientsAhead = i;
        }
    }
    return patientsAhead;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26412344_26412479_6_20
26412344_26412545_4_15
Title: Extract a numerical value from a file in java 
----------------------------------------

public static void main (String [] args) {
    Pattern pattern = Pattern.compile ("\\D*(\\d+)\\D*");
    Matcher matcher = pattern.matcher ("Abc defghijk lmn opqr st uvwxyza bc 19");
    try {
        if (matcher.find ()) {
            String stringDigit = matcher.group (1);
            int number = Integer.parseInt (stringDigit);
            System.out.println (number);
        }
    } catch (Exception e) {
    }
}
----------------------------------------

public static void main (String [] args) {
    String text = "xAbc defghijk lmn opqr st uvwxyza bc 19";
    Pattern pattern = Pattern.compile ("([0-9]+)");
    Matcher matcher = pattern.matcher (text);
    if (matcher.find ()) {
        int number = Integer.valueOf (matcher.group (1));
        System.out.println ("First number: " + number);
    } else {
        System.out.println ("Not found");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26416706_26416866_9_39
26416706_40785426_1_22
Title: Java perfect numbers nested for loop 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Enter A Number: ");
    Scanner sc = new Scanner (System.in);
    int input = sc.nextInt ();
    int sumOfDivisors = 0;
    Collection < Integer > col = new ArrayList < > ();
    for (int number = 1;
    number <= input; number ++) {
        for (int divisor = 1;
        divisor < number; divisor ++) {
            if (number % divisor == 0) {
                sumOfDivisors += divisor;
                col.add (divisor);
            }
        }
        if (sumOfDivisors == number) {
            System.out.printf ("Perfect Number: %,d%n[", number);
            for (Integer i : col) {
                System.out.printf ("%,d, ", i);
            }
            System.out.printf ("\b\b]%n");
        }
        sumOfDivisors = 0;
        col.clear ();
    }
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    int i = 6;
    int n = i;
    int r = 0;
    while (i > 0) {
        i --;
        if (i > 0 && n % i == 0) {
            if (i != 0) r = r + i;

        }
    }
    System.out.println (r);
    if (r == n) System.out.println ("its True");
    else System.out.println ("its False");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26418840_26418968_1_28
26418840_26444126_1_28
Title: Java SQL ResultSet Exception 
----------------------------------------

public void commandButton () {
    DBConn nCon = new DBConn ();
    Calculations nCalc = new Calculations ();
    nCalc.setPieChartSQL (getDate ());
    nCon.setSQL (nCalc.getPieChartSQL ());
    System.out.println ("............");
    System.out.println (nCon.getResultSet ());
    System.out.println ("............");
    System.out.println (nCon.getResultSet ());
    System.out.println ("............");
    try {
        System.out.println (nCon.getResultSet ().getString (1));
        while (nCon.getResultSet ().next ()) {
            System.out.println ("++++++++++++");
            System.out.println (nCon.getResultSet ().getString (1));
            System.out.println ("++++++++++++");
            setShowRes (nCon.getResultSet ().getString (1));
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
    System.out.println ("777777777777777777777");
}
----------------------------------------

public void commandButton () {
    DBConn nCon = new DBConn ();
    Calculations nCalc = new Calculations ();
    nCalc.setPieChartSQL (getDate ());
    nCon.setSQL (nCalc.getPieChartSQL ());
    System.out.println ("............");
    System.out.println (nCon.getResultSet ());
    System.out.println ("............");
    System.out.println (nCon.getResultSet ());
    System.out.println ("............");
    try {
        ResultSet rst = nCon.getResultSet ();
        rst.beforeFirst ();
        while (rst.next ()) {
            System.out.println ("++++++++++++");
            String str = rst.getString (1);
            System.out.println ("++++++++++++");
            setShowRes (str);
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
    System.out.println ("777777777777777777777");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26424734_26425064_5_20
26424734_26425828_1_25
Title: Java String Manipulation into Columns 
----------------------------------------

public static void main (String [] args) {
    String to_test = "1234567891";
    StringBuilder sb = new StringBuilder ("");
    char [] charArray = to_test.toCharArray ();
    int period = 3;
    for (int j = 0;
    j < period; j ++) {
        for (int i = j;
        i < charArray.length; i += period) {
            sb.append (charArray [i]);
        }
        sb.append (";");
    }
    System.out.println (sb);
}
----------------------------------------

public static void main (String [] args) {
    final String to_test = "1234567891";
    for (int i = 1;
    i < 5; i ++) {
        final int period = i;
        final char [] [] result = new char [period] [to_test.length () / period + ((to_test.length () % period) > 0 ? 1 : 0)];
        IntStream.range (0, to_test.length ()).forEach (index -> result [index % period] [index / period] = to_test.charAt (index));
        System.out.println ("Period = " + period);
        for (char [] line : result) {
            for (int j = 0;
            j < line.length; j ++) {
                System.out.print (line [j] + ((j < line.length - 1 && line [j + 1] != '\0') ? ", " : ""));
            }
            System.out.println ();
        }
        System.out.println ();
    }
}
----------------------------------------
