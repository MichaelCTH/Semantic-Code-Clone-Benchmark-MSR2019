$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_41818899_1_15
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String args []) {
    char Char;
    int count;
    String a = "Hi my name is Rahul";
    a = a.toLowerCase ();
    for (Char = 'a'; Char <= 'z'; Char ++) {
        count = 0;
        for (int i = 0;
        i < a.length (); i ++) {
            if (a.charAt (i) == Char) {
                count ++;
            }
        }
        System.out.println ("Number of occurences of " + Char + " is " + count);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_41818899_1_15
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String args []) {
    char Char;
    int count;
    String a = "Hi my name is Rahul";
    a = a.toLowerCase ();
    for (Char = 'a'; Char <= 'z'; Char ++) {
        count = 0;
        for (int i = 0;
        i < a.length (); i ++) {
            if (a.charAt (i) == Char) {
                count ++;
            }
        }
        System.out.println ("Number of occurences of " + Char + " is " + count);
    }
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_41818899_1_15
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String args []) {
    char Char;
    int count;
    String a = "Hi my name is Rahul";
    a = a.toLowerCase ();
    for (Char = 'a'; Char <= 'z'; Char ++) {
        count = 0;
        for (int i = 0;
        i < a.length (); i ++) {
            if (a.charAt (i) == Char) {
                count ++;
            }
        }
        System.out.println ("Number of occurences of " + Char + " is " + count);
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_42611760_3_20
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_43020511_3_26
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_44093828_1_20
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_45513947_3_29
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42205630_1_18
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String name = "AnuvratAnuvra";
    char [] arr = name.toCharArray ();
    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();
    for (char val : arr) {
        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);
    }
    for (Entry < Character, Integer > entry : map.entrySet ()) {
        if (entry.getValue () > 1) {
            Character key = entry.getKey ();
            Object value = entry.getValue ();
            System.out.println (key + ":" + value);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_43020511_3_26
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_44093828_1_20
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_45513947_3_29
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_42611760_3_20
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String input = "Hi how are you";
    char charCount = 'h';
    int count = 0;
    input = input.toLowerCase ();
    for (int i = 0;
    i < input.length (); i ++) {
        if (input.charAt (i) == charCount) {
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_43020511_3_26
13119926_44093828_1_20
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_43020511_3_26
13119926_45513947_3_29
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_43020511_3_26
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_43020511_3_26
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_43020511_3_26
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String s = "hezzz";
    char [] st = s.toCharArray ();
    int count = 0;
    Set < Character > ch = new HashSet < > ();
    for (Character cg : st) {
        if (ch.add (cg) == false) {
            int occurrences = Collections.frequency (ch, cg);
            count += occurrences;
            if (count > 1) {
                System.out.println (cg + ": This character exist more than one time");
            } else {
                System.out.println (cg);
            }
        }
    }
    System.out.println (count);
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_44093828_1_20
13119926_45513947_3_29
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_44093828_1_20
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_44093828_1_20
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_44093828_1_20
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String test = "The quick brown fox jumped over the lazy dog.";
    int countA = 0, countO = 0, countSpace = 0, countDot = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        switch (test.charAt (i)) {
            case 'a' :
            case 'A' :
                countA ++;
                break;
            case 'o' :
            case 'O' :
                countO ++;
                break;
            case ' ' :
                countSpace ++;
                break;
            case '.' :
                countDot ++;
                break;
        }
    }
    System.out.printf ("%s%d%n%s%d%n%s%d%n%s%d", "A: ", countA, "O: ", countO, "Space: ", countSpace, "Dot: ", countDot);
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_45513947_3_29
13119926_46005190_9_42
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_45513947_3_29
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_45513947_3_29
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String...a) {
    System.out.print ("Enter the String");
    Scanner sc = new Scanner (System.in);
    String st = sc.nextLine ();
    int [] ar = new int [256];
    for (int i = 0;
    i < st.length (); i ++) {
        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;
    }
    for (int i = 0;
    i < 256; i ++) {
        char ch = (char) i;
        if (ar [i] > 0) {
            if (ar [i] == 1) {
                System.out.print (ch);
            } else {
                System.out.print (ch + "" + ar [i]);
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_46005190_9_42
13119926_48723167_5_19
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_46005190_9_42
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    String reverse1;
    String reverse2;
    int count = 0;
    while (n > 0) {
        String A = sc.next ();
        String B = sc.next ();
        reverse1 = new StringBuffer (A).reverse ().toString ();
        reverse2 = new StringBuffer (B).reverse ().toString ();
        if (! A.equals (reverse1)) {
            for (int i = 0;
            i < A.length (); i ++) {
                for (int j = 0;
                j < A.length (); j ++) {
                    if (A.charAt (j) == A.charAt (i)) {
                        count ++;
                    }
                }
                if (count % 2 != 0) {
                    A.replace (A.charAt (i), "");
                    count = 0;
                }
            }
            System.out.println (A);
        }
        n --;
    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13119926_48723167_5_19
13119926_48888657_2_23
Title: Find duplicate characters in a String and count the number of occurances using Java 
----------------------------------------

public static void main (String [] args) {
    String string = "check duplicate charcters in string";
    string = string.toLowerCase ();
    char [] charAr = string.toCharArray ();
    Arrays.sort (charAr);
    for (int i = 1;
    i < charAr.length;) {
        int count = recursiveMethod (charAr, i, 1);
        if (count > 1) {
            System.out.println ("'" + charAr [i] + "' comes " + count + " times");
            i = i + count;
        } else i ++;

    }
}
----------------------------------------

public static void main (String [] args) {
    String str = "abcdabghplhhnfl".toLowerCase ();
    Integer [] ar = new Integer [26];
    for (int i = 0;
    i < str.length (); i ++) {
        int j = str.charAt (i) - 'a';
        if (ar [j] == null) {
            ar [j] = 1;
        } else {
            ar [j] += 1;
        }
    }
    for (int i = 0;
    i < ar.length; i ++) {
        if (ar [i] != null && ar [i] > 1) {
            char c = (char) (97 + i);
            System.out.println ("'" + c + "' comes " + ar [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13125807_13125853_1_53
13125807_13129652_17_27
Title: How to convert void statement into return statement returning a string? 
----------------------------------------

private static String output (String input) {
    char s;
    char m;
    int l = input.length ();
    String endString;
    String startString;
    String finalString;
    String mtr;
    String lowercase;
    for (int k = 0;
    k < l; k ++) {
        s = input.charAt (k);
        if (s == 'q' || s == 'Q' && input.charAt (k + 1) == 'u') {
            endString = input.substring (0, k + 2);
            endString = endString + "ay";
            startString = input.substring (k + 2, l);
            finalString = startString + endString;
            System.out.println (finalString);
            break;
        }
        if (s == 'a' || s == 'e' || s == 'i' || s == 'o' || s == 'u' || s == 'A' || s == 'E' || s == 'I' || s == 'O' || s == 'U' || s == 'y' || s == 'Y') {
            endString = input.substring (0, k);
            endString = endString + "ay";
            startString = input.substring (k, l);
            finalString = startString + endString;
            System.out.println (finalString);
            break;
        } else if (k == l - 1) {
            System.out.println ("ERROR");
            break;
        }

    }
    return finalString;
}
----------------------------------------

private static String output (String input) {
    int firstVowel = firstVowel (input);
    if (firstVowel < 0) {
        return "ERROR";
    }
    String start = input.substring (firstVowel);
    String end = input.substring (0, firstVowel) + "ay";
    return start + end;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13130528_13130680_9_19
13130528_13130721_27_41
Title: android menu does nothing 
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menuHelp :
            return true;
        case R.id.menuShowInstallationCode :
            return true;
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case MENU_ONE :
            {
            } return true;
        case MENU_TWO :
            {
            } return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13150131_13150282_1_20
13150131_13150403_1_11
Title: "Java recursively reverse an array" 
----------------------------------------

public void reverseArray (int [] x) {
    if (x.length == 2) {
        int first = x [0];
        x [0] = x [1];
        x [1] = first;
    } else if (x.length > 2) {
        int first = x [0];
        x [0] = x [x.length - 1];
        x [x.length - 1] = first;
        int [] copy = new int [x.length - 2];
        System.arraycopy (x, 1, copy, 0, x.length - 2);
        reverseArray (copy);
        System.arraycopy (copy, 0, x, 1, copy.length);
    }

}
----------------------------------------

void reverseArray (int [] x) {
    if (x != null) {
        for (int i = 0;
        i < length.x / 2; i ++) {
            int j = (length.x - 1) - i;
            int temp = x [i];
            x [i] = x [j];
            x [j] = temp;
        }
        reverseArray (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13163947_13168123_112_122
13163947_13169070_97_106
Title: How to update a set of JavaFX2.2 TextFields from a Service? 
----------------------------------------

protected ObservableList < String > call () throws Exception {
    for (int i = 0;
    i < 500; i ++) {
        updateProgress (i, 500);
        Thread.sleep (5);
    }
    ObservableList < String > sales = FXCollections.observableArrayList ();
    sales.add (new String ("A1 " + System.currentTimeMillis ()));
    sales.add (new String ("A2 " + System.currentTimeMillis ()));
    sales.add (new String ("A3 " + System.currentTimeMillis ()));
    return sales;
}
----------------------------------------

protected ObservableList < String > call () throws Exception {
    for (int i = 0;
    i < 500; i ++) {
        updateProgress (i, 500);
        Thread.sleep (5);
    }
    ObservableList < String > sales = FXCollections.observableArrayList ();
    sales.add ("A1: " + random.nextInt ());
    sales.add ("A2: " + random.nextInt ());
    return sales;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13163947_13168123_41_89
13163947_13169070_36_73
Title: How to update a set of JavaFX2.2 TextFields from a Service? 
----------------------------------------

private void init (Stage primaryStage) {
    Group root = new Group ();
    primaryStage.setScene (new Scene (root));
    final VBox vbox = new VBox (5);
    vbox.setPadding (new Insets (12));
    Button button = new Button ("Refresh");
    button.setOnAction (new EventHandler < ActionEvent > () {
        public void handle (ActionEvent t) {
            service.restart ();
        }}

    );
    TextField tf1, tf2, tf3;
    tf1 = new TextField ();
    tf1.setId ("0");
    tf2 = new TextField ();
    tf2.setId ("1");
    tf3 = new TextField ();
    tf3.setId ("2");
    vbox.getChildren ().addAll (tf1, tf2, tf3, button);
    Region veil = new Region ();
    veil.setStyle ("-fx-background-color: rgba(0, 0, 0, 0.4)");
    ProgressIndicator p = new ProgressIndicator ();
    p.setMaxSize (150, 150);
    p.progressProperty ().bind (service.progressProperty ());
    veil.visibleProperty ().bind (service.runningProperty ());
    p.visibleProperty ().bind (service.runningProperty ());
    StackPane stack = new StackPane ();
    stack.getChildren ().addAll (vbox, veil, p);
    root.getChildren ().add (stack);
    service.setOnSucceeded (new EventHandler < WorkerStateEvent > () {
        @Override
        public void handle (WorkerStateEvent t) {
            System.out.println ("done:" + t.getSource ().getValue ());
            List list = service.valueProperty ().getValue ();
            String [] sa = (String []) list.toArray (new String [0]);
            for (int i = 0;
            i < sa.length; i ++) {
                TextField tf = (TextField) vbox.lookup ("#" + i);
                tf.setText (sa [i]);
            }
        }}

    );
    service.start ();
}
----------------------------------------

private void init (Stage primaryStage) {
    Group root = new Group ();
    primaryStage.setScene (new Scene (root));
    VBox vbox = new VBox (5);
    vbox.setPadding (new Insets (12));
    ListView < String > listView = new ListView < > ();
    listView.setEditable (true);
    Button button = new Button ("Refresh");
    button.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent t) {
            service.restart ();
        }}

    );
    listView.setCellFactory (new Callback < ListView < String >, ListCell < String > > () {
        @Override
        public ListCell < String > call (ListView < String > param) {
            return new InstantEditingCell ();
        }}

    );
    listView.setPrefHeight (200);
    vbox.getChildren ().addAll (listView, button);
    Region veil = new Region ();
    veil.setStyle ("-fx-background-color: rgba(0, 0, 0, 0.4)");
    ProgressIndicator p = new ProgressIndicator ();
    p.setMaxSize (150, 150);
    p.progressProperty ().bind (service.progressProperty ());
    veil.visibleProperty ().bind (service.runningProperty ());
    p.visibleProperty ().bind (service.runningProperty ());
    listView.itemsProperty ().bind (service.valueProperty ());
    StackPane stack = new StackPane ();
    stack.getChildren ().addAll (vbox, veil, p);
    root.getChildren ().add (stack);
    service.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13163947_13169070_116_133
13163947_13169070_167_185
Title: How to update a set of JavaFX2.2 TextFields from a Service? 
----------------------------------------

public void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setGraphic (null);
    } else {
        final TextField textField = new TextField (getString ());
        textField.setMinWidth (this.getWidth () - this.getGraphicTextGap () * 2);
        textField.focusedProperty ().addListener (new ChangeListener < Boolean > () {
            @Override
            public void changed (ObservableValue < ? extends Boolean > value, Boolean wasFocused, Boolean isFocused) {
                if (! isFocused) {
                    commitEdit (textField.getText ());
                }
            }}

        );
        setGraphic (textField);
    }
}
----------------------------------------

public void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        if (isEditing ()) {
            if (textField != null) {
                textField.setText (getString ());
            }
            setText (null);
            setGraphic (textField);
        } else {
            setText (getString ());
            setGraphic (null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13168822_13168945_36_43
13168822_13168960_26_36
Title: Java Swing setting JPanel Size 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Test ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            Cobie c = new Cobie ();
            c.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
            c.setSize (600, 400);
            c.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13169670_30582115_14_41
13169670_37524788_18_35
Title: Calling a GOval method 
----------------------------------------

public void run () {
    double moveX = getWidth () / 2 - 36;
    double moveY = getHeight () / 2 - 36;
    GOval outerRed = new GOval (72, 72);
    outerRed.setFilled (true);
    outerRed.setColor (Color.RED);
    outerRed.setFillColor (Color.RED);
    outerRed.move (moveX, moveY);
    GOval middleWhite = new GOval (12.6, 12.6, 46.8, 46.8);
    middleWhite.setFilled (true);
    middleWhite.setColor (Color.WHITE);
    middleWhite.setFillColor (Color.WHITE);
    middleWhite.move (moveX, moveY);
    GOval innerRed = new GOval (25.2, 25.2, 21.6, 21.6);
    innerRed.setFilled (true);
    innerRed.setColor (Color.RED);
    innerRed.setFillColor (Color.RED);
    innerRed.move (moveX, moveY);
    add (outerRed);
    add (middleWhite);
    add (innerRed);
}
----------------------------------------

public void run () {
    GOval outerCircle = new GOval (getWidth () / 2 - RADIUS_OUTER_CIRCLE / 2, getHeight () / 2 - RADIUS_OUTER_CIRCLE / 2, RADIUS_OUTER_CIRCLE, RADIUS_OUTER_CIRCLE);
    outerCircle.setFilled (true);
    outerCircle.setFillColor (Color.RED);
    add (outerCircle);
    GOval midCircle = new GOval (getWidth () / 2 - RADIUS_MID_CIRCLE / 2, getHeight () / 2 - RADIUS_MID_CIRCLE / 2, RADIUS_MID_CIRCLE, RADIUS_MID_CIRCLE);
    midCircle.setFilled (true);
    midCircle.setFillColor (Color.WHITE);
    add (midCircle);
    GOval innerCircle = new GOval (getWidth () / 2 - RADIUS_INNER_CIRCLE / 2, getHeight () / 2 - RADIUS_INNER_CIRCLE / 2, RADIUS_INNER_CIRCLE, RADIUS_INNER_CIRCLE);
    innerCircle.setFilled (true);
    innerCircle.setFillColor (Color.RED);
    add (innerCircle);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13170002_13170046_65_75
13170002_13170046_80_100
Title: "When I trigger my fireball creating it resets my Character JLabel" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (! coolOff) {
        coolOff = true;
        JLabel fireBall = createFireBall ();
        fireBalls.add (fireBall);
        if (! timer.isRunning ()) {
            timer.start ();
        }
        coolOffTimer.restart ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (fireBalls.size () > 0) {
        JLabel [] balls = fireBalls.toArray (new JLabel [fireBalls.size ()]);
        for (JLabel fireBall : balls) {
            if (fireBall.getParent () == null) {
                add (fireBall);
            }
            Point p = fireBall.getLocation ();
            p.x += vX;
            if (p.x + fireBall.getWidth () >= getWidth ()) {
                remove (fireBall);
                fireBalls.remove (fireBall);
            } else {
                fireBall.setLocation (p);
            }
            repaint ();
        }
    } else {
        timer.stop ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13204180_13204250_1_18
13204180_13204263_1_27
Title: How can I check that each part of expression is separated by a single white space? 
----------------------------------------

public static boolean isSSWS (String s) {
    boolean isWhiteSpace = false;
    boolean isPreviousCharDigit = false;
    for (char c : s.toCharArray ()) {
        if (! isPreviousCharDigit || ! Character.isDigit (c)) {
            if (c == ' ' && ! isWhiteSpace) {
                return false;
            }
            if (c != ' ' && isWhiteSpace) {
                return false;
            }
            isWhiteSpace = ! isWhiteSpace;
        }
        isPreviousCharDigit = Character.isDigit (c);
    }
    return true;
}
----------------------------------------

public static boolean isSSWS (String e) {
    for (int i = 1;
    i < e.length () - 1; i ++) {
        char preChar = e.charAt (i - 1);
        char postChar = e.charAt (i + 1);
        char zchar = e.charAt (i);
        if (zchar == ' ' && (preChar == ' ' || postChar == ' ')) {
            return false;
        }
        if (Character.isDigit (zchar)) {
            if (! Character.isDigit (preChar) && preChar != ' ') {
                return false;
            }
            if (! Character.isDigit (postChar) && postChar != ' ') {
                return false;
            }
        }
        if (("+-*/()".indexOf (zchar) != - 1) && (preChar != ' ' || postChar != ' ')) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_124_137
13205990_13206344_139_147
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            if (response.length () > 0) {
                return Integer.parseInt (response);
            }
            System.out.println ("An integer is required.");
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound) {
    int result = 0;
    while (true) {
        result = readInteger (prompt);
        if (result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_124_137
13205990_13206344_149_159
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            if (response.length () > 0) {
                return Integer.parseInt (response);
            }
            System.out.println ("An integer is required.");
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------

public static int readInteger (String prompt, int defaultValue) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            return response.trim ().length () > 0 ? Integer.parseInt (response) : defaultValue;
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_124_137
13205990_13206344_161_169
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            if (response.length () > 0) {
                return Integer.parseInt (response);
            }
            System.out.println ("An integer is required.");
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound, int defaultValue) {
    int result = 0;
    while (true) {
        result = readInteger (prompt, defaultValue);
        if (result == defaultValue || result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_139_147
13205990_13206344_149_159
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound) {
    int result = 0;
    while (true) {
        result = readInteger (prompt);
        if (result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------

public static int readInteger (String prompt, int defaultValue) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            return response.trim ().length () > 0 ? Integer.parseInt (response) : defaultValue;
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_139_147
13205990_13206344_161_169
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound) {
    int result = 0;
    while (true) {
        result = readInteger (prompt);
        if (result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound, int defaultValue) {
    int result = 0;
    while (true) {
        result = readInteger (prompt, defaultValue);
        if (result == defaultValue || result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_149_159
13205990_13206344_161_169
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static int readInteger (String prompt, int defaultValue) {
    String response = null;
    while (true) {
        try {
            response = readString (prompt);
            return response.trim ().length () > 0 ? Integer.parseInt (response) : defaultValue;
        } catch (NumberFormatException e) {
            System.out.println ("Oops \"" + response + "\" cannot be interpreted as 32-bit signed integer!");
        }
    }
}
----------------------------------------

public static int readInteger (String prompt, int lowerBound, int upperBound, int defaultValue) {
    int result = 0;
    while (true) {
        result = readInteger (prompt, defaultValue);
        if (result == defaultValue || result >= lowerBound && result <= upperBound) break;

        System.out.println ("An integer between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
    return (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13205990_13206344_171_184
13205990_13206344_186_194
Title: stringindexoutofbounds with currency converter java program 
----------------------------------------

public static double readDouble (String fmt, Object...args) {
    String response = null;
    while (true) {
        try {
            response = System.console ().readLine (fmt, args);
            if (response != null && response.length () > 0) {
                return Double.parseDouble (response);
            }
            System.out.println ("A number is required.");
        } catch (NumberFormatException e) {
            System.out.println ("\"" + response + "\" cannot be interpreted as a number!");
        }
    }
}
----------------------------------------

public static double readDouble (String prompt, double lowerBound, double upperBound) {
    while (true) {
        double result = readDouble (prompt);
        if (result >= lowerBound && result <= upperBound) {
            return (result);
        }
        System.out.println ("A number between " + lowerBound + " and " + upperBound + " (inclusive) is required.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13206018_13206141_4_20
13206018_13206204_53_73
Title: Unknown data type declaration 
----------------------------------------

public static void main (String args []) {
    List < TempClassArray > sample = new ArrayList < TempClassArray > ();
    sample.add (new TempClassArray (1, "One"));
    sample.add (new TempClassArray (2, "Two"));
    sample.add (new TempClassArray (3, "Three"));
    sample.add (new TempClassArray (4, "Four"));
    sample.add (new TempClassArray (5, "Five"));
    sample.add (new TempClassArray (6, "Six"));
    System.out.println ("Integer \t\t String");
    System.out.println ("********\t\t********");
    for (TempClassArray s : sample) {
        System.out.println (s.numValue + "\t\t\t" + s.strValue);
    }
}
----------------------------------------

public static void main (String [] args) {
    IntsAndStrings testApp = new IntsAndStrings ();
    testApp.put (1);
    testApp.put (2);
    testApp.put ("hello");
    testApp.put ("world");
    for (int i = 0;
    i < testApp.intsAndStrings.size (); i ++) {
        if (testApp.isInteger (i)) {
            int intVal = testApp.getInt (i);
            System.out.println ("int:" + intVal);
        } else {
            System.out.println ("String: " + testApp.getString (i));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13213645_13213694_23_31
13213645_13213716_38_46
Title: Set size of JTable in JScrollPane and in JPanel with the size of the JFrame 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13213645_13213694_23_31
13213645_13213749_19_30
Title: Set size of JTable in JScrollPane and in JPanel with the size of the JFrame 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setDefaultCloseOperation (EXIT_ON_CLOSE);
            ex.setLocationByPlatform (true);
            ex.pack ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13213645_13213694_3_21
13213645_13213716_11_36
Title: Set size of JTable in JScrollPane and in JPanel with the size of the JFrame 
----------------------------------------

public Main () {
    String [] columnNames = {"A", "B", "C"};
    Object [] [] data = {{"Moni", "adsad", 2}, {"Jhon", "ewrewr", 4}, {"Max", "zxczxc", 6}};
    JTable table = new JTable (data, columnNames);
    JScrollPane tableSP = new JScrollPane (table);
    tableSP.setPreferredSize (400, 600);
    add (tableSP);
    setTitle ("Marks");
    setLocationRelativeTo (null);
    setDefaultCloseOperation (EXIT_ON_CLOSE);
    pack ();
}
----------------------------------------

public Main () {
    String [] columnNames = {"A", "B", "C"};
    Object [] [] data = {{"Moni", "adsad", 2}, {"Jhon", "ewrewr", 4}, {"Max", "zxczxc", 6}};
    JTable table = new JTable (data, columnNames);
    JScrollPane tableSP = new JScrollPane (table);
    int A = this.getWidth ();
    int B = this.getHeight ();
    table.setSize (A, B);
    JPanel tablePanel = new JPanel (new GridLayout ());
    tablePanel.add (tableSP);
    tablePanel.setBackground (Color.red);
    add (tablePanel);
    setTitle ("Marks");
    setLocationRelativeTo (null);
    setDefaultCloseOperation (EXIT_ON_CLOSE);
    pack ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13213645_13213716_38_46
13213645_13213749_19_30
Title: Set size of JTable in JScrollPane and in JPanel with the size of the JFrame 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            Main ex = new Main ();
            ex.setDefaultCloseOperation (EXIT_ON_CLOSE);
            ex.setLocationByPlatform (true);
            ex.pack ();
            ex.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13213838_13214011_17_31
13213838_13225985_10_64
Title: How can I set a JLabel's background and border the same as a table header? 
----------------------------------------

public void run () {
    try {
        for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels ()) {
            if ("Nimbus".equals (info.getName ())) {
                UIManager.setLookAndFeel (info.getClassName ());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
        e.printStackTrace ();
    }
    new Test ();
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    TableColumnModel model = new DefaultTableColumnModel ();
    final TableColumn column = new TableColumn (0, 250);
    column.setHeaderValue ("I don't see the problem");
    model.addColumn (column);
    final JTableHeader header = new JTableHeader ();
    header.setColumnModel (model);
    DefaultTableModel tm = new DefaultTableModel (new Object [] {"A", "B", "C"}, 0);
    tm.addRow (new Object [] {"1", "2", "3", "4"});
    tm.addRow (new Object [] {"5", "6", "7", "8"});
    tm.addRow (new Object [] {"9", "10", "11", "12"});
    tm.addRow (new Object [] {"13", "14", "15", "16"});
    final JTable table = new JTable (tm);
    final JScrollPane scrollPane = new JScrollPane (table);
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            scrollPane.setColumnHeaderView (header);
        }}

    );
    table.addComponentListener (new ComponentAdapter () {
        @Override
        public void componentResized (ComponentEvent e) {
            column.setWidth (table.getWidth ());
        }}

    );
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (scrollPane);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13217456_13217484_1_12
13217456_13217510_1_17
Title: Setter Getter Method in Loop in Java 
----------------------------------------

public void Modify () {
    System.out.println ("You r  modifying account");
    Scanner sc = new Scanner (System.in);
    for (int i = 0;
    i < stu.length; i ++) {
        System.out.println ("Enter id");
        stu [i].setId (sc.nextInt ());
        System.out.println ("Enter name ");
        stu [i].setName (sc.nextLine ());
    }
}
----------------------------------------

public void Modify () {
    String Cid;
    System.out.println ("Enter your ID :");
    Scanner sc = new Scanner (System.in);
    int id = sc.nextInt ();
    for (int i = 0;
    i < stu.length; i ++) {
        if (id == stu [i].getId ()) {
            System.out.println ("Enter name ");
            name = sc.next ();
            stu [i].setName (name);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13218019_17642079_3_16
13218019_36139335_7_30
Title: Generating permutations of an int array using java -- error 
----------------------------------------

public static void permute (char [] input2, int startindex) {
    if (input2.length == startindex) {
        displayArray (input2);
    } else {
        for (int i = startindex;
        i < input2.length; i ++) {
            char [] input = input2.clone ();
            char temp = input [i];
            input [i] = input [startindex];
            input [startindex] = temp;
            permute (input, startindex + 1);
        }
    }
}
----------------------------------------

public static void permute (int start, int [] input) {
    if (start == input.length) {
        for (int x : input) {
            System.out.print (x);
        }
        System.out.println ("");
        return;
    }
    for (int i = start;
    i < input.length; i ++) {
        int temp = input [i];
        input [i] = input [start];
        input [start] = temp;
        permute (start + 1, input);
        int temp2 = input [i];
        input [i] = input [start];
        input [start] = temp2;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13218019_17642079_3_16
13218019_36551955_8_21
Title: Generating permutations of an int array using java -- error 
----------------------------------------

public static void permute (char [] input2, int startindex) {
    if (input2.length == startindex) {
        displayArray (input2);
    } else {
        for (int i = startindex;
        i < input2.length; i ++) {
            char [] input = input2.clone ();
            char temp = input [i];
            input [i] = input [startindex];
            input [startindex] = temp;
            permute (input, startindex + 1);
        }
    }
}
----------------------------------------

public void permute (int [] arr, int i) {
    if (i == arr.length) {
        System.out.println (Arrays.toString (arr));
        return;
    }
    for (int j = i;
    j < arr.length; j ++) {
        swap (arr, i, j);
        permute (arr, i + 1);
        swap (arr, i, j);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13218019_36139335_7_30
13218019_36551955_8_21
Title: Generating permutations of an int array using java -- error 
----------------------------------------

public static void permute (int start, int [] input) {
    if (start == input.length) {
        for (int x : input) {
            System.out.print (x);
        }
        System.out.println ("");
        return;
    }
    for (int i = start;
    i < input.length; i ++) {
        int temp = input [i];
        input [i] = input [start];
        input [start] = temp;
        permute (start + 1, input);
        int temp2 = input [i];
        input [i] = input [start];
        input [start] = temp2;
    }
}
----------------------------------------

public void permute (int [] arr, int i) {
    if (i == arr.length) {
        System.out.println (Arrays.toString (arr));
        return;
    }
    for (int j = i;
    j < arr.length; j ++) {
        swap (arr, i, j);
        permute (arr, i + 1);
        swap (arr, i, j);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13222071_18449506_1_33
13222071_47072928_3_33
Title: Spring 3.1 WebApplicationInitializer & Embedded Jetty 8 AnnotationConfiguration 
----------------------------------------

public static void main (String [] args) throws Exception {
    Server server = new Server ();
    ServerConnector scc = new ServerConnector (server);
    scc.setPort (Integer.parseInt (System.getProperty ("jetty.port", "8080")));
    server.setConnectors (new Connector [] {scc});
    WebAppContext context = new WebAppContext ();
    context.setServer (server);
    context.setContextPath ("/");
    context.setWar ("src/main/webapp");
    context.getMetaData ().addContainerResource (new FileResource (new File ("./target/classes").toURI ()));
    context.setConfigurations (new Configuration [] {new WebXmlConfiguration (), new AnnotationConfiguration ()});
    server.setHandler (context);
    try {
        System.out.println ("><![CDATA[>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP");
        System.out.println (String.format ("><![CDATA[>> open http://localhost:%s/", scc.getPort ()));
        server.start ();
        while (System.in.available () == 0) {
            Thread.sleep (5000);
        }
        server.stop ();
        server.join ();
    } catch (Throwable t) {
        t.printStackTrace ();
        System.exit (100);
    }
}
----------------------------------------

public static void main (String...args) throws Exception {
    Properties properties = new Properties ();
    InputStream stream = Main.class.getResourceAsStream ("/WEB-INF/application.properties");
    properties.load (stream);
    stream.close ();
    PropertyConfigurator.configure (properties);
    WebAppContext webAppContext = new WebAppContext ();
    webAppContext.setResourceBase ("resource");
    webAppContext.setContextPath (properties.getProperty ("base.url"));
    webAppContext.setConfigurations (new Configuration [] {new WebXmlConfiguration (), new AnnotationConfiguration () {
        @Override
        public void preConfigure (WebAppContext context) {
            ClassInheritanceMap map = new ClassInheritanceMap ();
            map.put (WebApplicationInitializer.class.getName (), new ConcurrentHashSet < String > () {

                {
                    add (WebInitializer.class.getName ());
                    add (SecurityWebInitializer.class.getName ());
                }

            }

            );
            context.setAttribute (CLASS_INHERITANCE_MAP, map);
            _classInheritanceHandler = new ClassInheritanceHandler (map);
        }}

    });
    Server server = new Server (Integer.parseInt (properties.getProperty ("base.port")));
    server.setHandler (webAppContext);
    server.start ();
    server.join ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13222071_18449506_1_33
13222071_47316741_2_15
Title: Spring 3.1 WebApplicationInitializer & Embedded Jetty 8 AnnotationConfiguration 
----------------------------------------

public static void main (String [] args) throws Exception {
    Server server = new Server ();
    ServerConnector scc = new ServerConnector (server);
    scc.setPort (Integer.parseInt (System.getProperty ("jetty.port", "8080")));
    server.setConnectors (new Connector [] {scc});
    WebAppContext context = new WebAppContext ();
    context.setServer (server);
    context.setContextPath ("/");
    context.setWar ("src/main/webapp");
    context.getMetaData ().addContainerResource (new FileResource (new File ("./target/classes").toURI ()));
    context.setConfigurations (new Configuration [] {new WebXmlConfiguration (), new AnnotationConfiguration ()});
    server.setHandler (context);
    try {
        System.out.println ("><![CDATA[>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP");
        System.out.println (String.format ("><![CDATA[>> open http://localhost:%s/", scc.getPort ()));
        server.start ();
        while (System.in.available () == 0) {
            Thread.sleep (5000);
        }
        server.stop ();
        server.join ();
    } catch (Throwable t) {
        t.printStackTrace ();
        System.exit (100);
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        Server server = new Server (8080);
        server.setHandler (getWebAppContext ());
        server.start ();
        server.join ();
    } catch (Exception e) {
        log.error ("server exited with exception", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13222071_47072928_3_33
13222071_47316741_2_15
Title: Spring 3.1 WebApplicationInitializer & Embedded Jetty 8 AnnotationConfiguration 
----------------------------------------

public static void main (String...args) throws Exception {
    Properties properties = new Properties ();
    InputStream stream = Main.class.getResourceAsStream ("/WEB-INF/application.properties");
    properties.load (stream);
    stream.close ();
    PropertyConfigurator.configure (properties);
    WebAppContext webAppContext = new WebAppContext ();
    webAppContext.setResourceBase ("resource");
    webAppContext.setContextPath (properties.getProperty ("base.url"));
    webAppContext.setConfigurations (new Configuration [] {new WebXmlConfiguration (), new AnnotationConfiguration () {
        @Override
        public void preConfigure (WebAppContext context) {
            ClassInheritanceMap map = new ClassInheritanceMap ();
            map.put (WebApplicationInitializer.class.getName (), new ConcurrentHashSet < String > () {

                {
                    add (WebInitializer.class.getName ());
                    add (SecurityWebInitializer.class.getName ());
                }

            }

            );
            context.setAttribute (CLASS_INHERITANCE_MAP, map);
            _classInheritanceHandler = new ClassInheritanceHandler (map);
        }}

    });
    Server server = new Server (Integer.parseInt (properties.getProperty ("base.port")));
    server.setHandler (webAppContext);
    server.start ();
    server.join ();
}
----------------------------------------

public static void main (String [] args) {
    try {
        Server server = new Server (8080);
        server.setHandler (getWebAppContext ());
        server.start ();
        server.join ();
    } catch (Exception e) {
        log.error ("server exited with exception", e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
132231_1195240_5_38
132231_134974_2_19
Title: Dealing with command line arguments and Spring 
----------------------------------------

public static void main (String [] args) {
    CommandLineParser parser = new GnuParser ();
    CommandLine cmdLine = null;
    try {
        cmdLine = parser.parse (OPTIONS, args);
    } catch (ParseException pe) {
        System.err.println ("Error parsing command line: " + pe.getMessage ());
        new HelpFormatter ().printHelp ("command", OPTIONS);
        return;
    }
    DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory ();
    ExternalBeanReferneceFactoryBean.setInstance ("commandLine", cmdLine);
    beanFactory.registerBeanDefinition ("commandLine", BeanDefinitionBuilder.rootBeanDefinition (ExternalBeanReferneceFactoryBean.class).getBeanDefinition ());
    GenericApplicationContext rootAppContext = new GenericApplicationContext (beanFactory);
    rootAppContext.refresh ();
    ApplicationContext appContext = new ClassPathXmlApplicationContext (new String [] {"/commandlineapp/applicationContext.xml"}, rootAppContext);
    System.out.println (appContext.getBean ("commandLine"));
}
----------------------------------------

public static void main (String [] args) {
    DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory ();
    BeanDefinition beanDefinition = BeanDefinitionBuilder.rootBeanDefinition (Arrays.class, "asList").addConstructorArgValue (args).getBeanDefinition ();
    beanFactory.registerBeanDefinition ("args", beanDefinition);
    GenericApplicationContext cmdArgCxt = new GenericApplicationContext (beanFactory);
    cmdArgCxt.refresh ();
    ApplicationContext mainContext = new ClassPathXmlApplicationContext (CONFIG_LOCATIONS, cmdArgCxt);
    System.out.println ("Args: " + mainContext.getBean ("args"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13232531_13233723_25_33
13232531_13233723_4_21
Title: How to test my Deck class in Java 
----------------------------------------

public String toString () {
    switch (this) {
        case CLUBS :
            return "Clubs";
        case DIAMONDS :
            return "Diamonds";
        case HEARTS :
            return "Hearts";
        case SPADES :
            return "Spades";
        default :
            return "ERROR: no valid suit";
    }
}
----------------------------------------

public String toString () {
    switch (this) {
        case ACE :
            return "Ace";
        case TWO :
            return "Two";
        case THREE :
            return "Three";
        case FOUR :
            return "Four";
        case FIVE :
            return "Five";
        case SIX :
            return "Six";
        case SEVEN :
            return "Seven";
        case EIGHT :
            return "Eight";
        case NINE :
            return "Nine";
        case TEN :
            return "Ten";
        case JACK :
            return "Jack";
        case QUEEN :
            return "Queen";
        case KING :
            return "King";
        default :
            return "ERROR: no valid rank";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13233460_13234858_35_50
13233460_13234858_55_69
Title: Parsing a String into a Map in Java 
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    while (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if (! "content".equals (token)) {
            continue;
        }
        contentMap = new LinkedHashMap < String, List < Integer > > ();
        tokenizer.nextToken ();
        tokenizer.nextToken ();
        state = new KeyParseState ();
        break;
    }
}
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    if (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if (",".equals (token)) {
            token = tokenizer.nextToken ();
        }
        if ("}".equals (token)) {
            state = new EndParseState ();
            return;
        }
        currentKey = token;
        tokenizer.nextToken ();
        state = new ListParseState ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13233460_13234858_35_50
13233460_13234858_74_87
Title: Parsing a String into a Map in Java 
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    while (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if (! "content".equals (token)) {
            continue;
        }
        contentMap = new LinkedHashMap < String, List < Integer > > ();
        tokenizer.nextToken ();
        tokenizer.nextToken ();
        state = new KeyParseState ();
        break;
    }
}
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    currentList = new ArrayList < Integer > ();
    while (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if ("}".equals (token)) {
            break;
        }
        if ("=".equals (token)) {
            currentList.add (Integer.valueOf (tokenizer.nextToken ()));
        }
    }
    contentMap.put (currentKey, currentList);
    state = new KeyParseState ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13233460_13234858_55_69
13233460_13234858_74_87
Title: Parsing a String into a Map in Java 
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    if (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if (",".equals (token)) {
            token = tokenizer.nextToken ();
        }
        if ("}".equals (token)) {
            state = new EndParseState ();
            return;
        }
        currentKey = token;
        tokenizer.nextToken ();
        state = new ListParseState ();
    }
}
----------------------------------------

public void parse (StringTokenizer tokenizer) {
    currentList = new ArrayList < Integer > ();
    while (tokenizer.hasMoreTokens ()) {
        String token = tokenizer.nextToken ();
        if ("}".equals (token)) {
            break;
        }
        if ("=".equals (token)) {
            currentList.add (Integer.valueOf (tokenizer.nextToken ()));
        }
    }
    contentMap.put (currentKey, currentList);
    state = new KeyParseState ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1323698_1323799_1_24
1323698_1324416_1_15
Title: How can I let a user hit enter for a default value using the Scanner in java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader input = new BufferedReader (new InputStreamReader (System.in));
    System.out.print ("Enter the number of iterations (400): ");
    int iterations = 400;
    String userInput = input.readLine ();
    if (! "".equals (userInput.trim ())) {
        try {
            iterations = Integer.parseInt (userInput);
        } catch (NumberFormatException nfe) {
        }
    }
    System.out.println ("Iterations = " + iterations);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    int val = 400;
    String line = scanner.nextLine ();
    if (line.matches ("\\d+")) {
        Integer val2 = Integer.valueOf (line);
        val = val2;
    }
    System.out.println (val);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13237464_13238612_113_133
13237464_13238612_69_80
Title: JList very slow adding first element 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (name.isEmpty () || alreadyInList (name)) {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
        return;
    }
    int index = list.getSelectedIndex ();
    if (index == - 1) {
        index = 0;
    } else {
        index ++;
    }
    listModel.insertElementAt (employeeName.getText (), index);
    employeeName.requestFocusInWindow ();
    employeeName.setText ("");
    list.setSelectedIndex (index);
    list.ensureIndexIsVisible (index);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    listModel.addElement ("Jane Doe");
    listModel.addElement ("John Smith");
    listModel.addElement ("Kathy Green");
    list.ensureIndexIsVisible (listModel.getSize () - 1);
    count ++;
    if (count >= 500) {
        timer.stop ();
        System.out.println ("update cycle completed");
        System.out.println (new Date ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13237464_13238612_113_133
13237464_13238612_87_100
Title: JList very slow adding first element 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (name.isEmpty () || alreadyInList (name)) {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
        return;
    }
    int index = list.getSelectedIndex ();
    if (index == - 1) {
        index = 0;
    } else {
        index ++;
    }
    listModel.insertElementAt (employeeName.getText (), index);
    employeeName.requestFocusInWindow ();
    employeeName.setText ("");
    list.setSelectedIndex (index);
    list.ensureIndexIsVisible (index);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int index = list.getSelectedIndex ();
    listModel.remove (index);
    int size = listModel.getSize ();
    if (size == 0) {
        fireButton.setEnabled (false);
    } else {
        if (index == listModel.getSize ()) {
            index --;
        }
        list.setSelectedIndex (index);
        list.ensureIndexIsVisible (index);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13237464_13238612_69_80
13237464_13238612_87_100
Title: JList very slow adding first element 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    listModel.addElement ("Jane Doe");
    listModel.addElement ("John Smith");
    listModel.addElement ("Kathy Green");
    list.ensureIndexIsVisible (listModel.getSize () - 1);
    count ++;
    if (count >= 500) {
        timer.stop ();
        System.out.println ("update cycle completed");
        System.out.println (new Date ());
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int index = list.getSelectedIndex ();
    listModel.remove (index);
    int size = listModel.getSize ();
    if (size == 0) {
        fireButton.setEnabled (false);
    } else {
        if (index == listModel.getSize ()) {
            index --;
        }
        list.setSelectedIndex (index);
        list.ensureIndexIsVisible (index);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13238618_13260209_1_12
13238618_13260302_1_11
Title: set text in label during an action event 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    label.setText ("Processing...");
    ActionListener taskPerformer = new ActionListener () {
        public void actionPerformed (ActionEvent evt) {
            label.setText ("Processed");
        }}

    ;
    Timer timer = new Timer (1000, taskPerformer);
    timer.setRepeats (false);
    timer.start ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            myLabel.setText ("Processing");
            myLabel.setText ("Processed");
        }}

    );
    t.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13238884_13240195_10_26
13238884_13249557_17_25
Title: Which Layout Manager to use? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new FormPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("Contact information");
    frame.getContentPane ().add (new ContactPanel ());
    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);
    frame.setMinimumSize (new Dimension (800, 450));
    frame.setLocationRelativeTo (null);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13260145_13260596_6_41
13260145_34599608_17_61
Title: How to click through JGlassPane With MouseListener to UI behind it 
----------------------------------------

public static void main (String [] args) {
    JButton button = new JButton ("Test");
    button.setPreferredSize (new Dimension (100, 100));
    final JButton glassButton = new JButton ("Block");
    JPanel panel = new JPanel ();
    panel.add (button);
    final JPanel glass = new JPanel ();
    glass.setOpaque (false);
    glass.add (glassButton);
    final JFrame frame = new JFrame ();
    frame.setGlassPane (glass);
    glass.setVisible (true);
    frame.setContentPane (panel);
    frame.pack ();
    frame.setVisible (true);
    glassButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (isBlocked) {
                glass.removeMouseListener (ml);
                glassButton.setText ("Block");
            } else {
                ml = new MouseAdapter () {
                }

                ;
                glass.addMouseListener (ml);
                glassButton.setText ("Unblock");
            }
            isBlocked = ! isBlocked;
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    final JFrame frame = new JFrame ("BetterGlassPane Test");
    frame.setLayout (null);
    frame.setSize (400, 300);
    frame.setResizable (false);
    frame.setLocationByPlatform (true);
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    BetterGlassPane glassPane = new BetterGlassPane (frame.getRootPane ()) {
        private static final long serialVersionUID = 1L;
        @Override
        protected void paintComponent (Graphics graphics) {
            super.paintComponent (graphics);
            graphics.setColor (Color.BLACK);
            graphics.drawRect (20, 160, 360, 50);
            graphics.setFont (graphics.getFont ().deriveFont (Font.BOLD));
            graphics.drawString ("I'm the glass pane, click me!", 120, 190);
        }}

    ;
    glassPane.addMouseListener (new MouseAdapter () {
        public void mouseClicked (MouseEvent event) {
            if (new Rectangle (20, 180, 360, 50).contains (event.getPoint ())) JOptionPane.showMessageDialog (frame, "I'm the glass pane!");

        }}

    );
    glassPane.setLayout (null);
    ActionListener defaultActionListener = new ActionListener () {
        public void actionPerformed (ActionEvent event) {
            JOptionPane.showMessageDialog (frame, ((JButton) event.getSource ()).getText ());
        }}

    ;
    JButton frameButton = new JButton ("I'm on the frame!");
    frameButton.addActionListener (defaultActionListener);
    frameButton.setBounds (20, 20, 360, 50);
    frame.add (frameButton);
    JButton glassPaneButton = new JButton ("I'm on the glass pane!");
    glassPaneButton.addActionListener (defaultActionListener);
    glassPaneButton.setBounds (20, 90, 360, 50);
    glassPane.add (glassPaneButton);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13261767_13263022_115_139
13261767_13263022_75_85
Title: Java ball object doesn't bounce off of drawn rectangles like it's supposed to. 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    if (beachBall != null) {
        Graphics2D g2d = (Graphics2D) g.create ();
        g2d.setRenderingHint (RenderingHints.KEY_ALPHA_INTERPOLATION, RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
        g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHint (RenderingHints.KEY_COLOR_RENDERING, RenderingHints.VALUE_COLOR_RENDER_QUALITY);
        g2d.setRenderingHint (RenderingHints.KEY_DITHERING, RenderingHints.VALUE_DITHER_ENABLE);
        g2d.setRenderingHint (RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
        g2d.setRenderingHint (RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2d.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2d.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
        int x = (getWidth () - beachBall.getWidth ()) / 2;
        int y = (getHeight () - beachBall.getHeight ()) / 2;
        AffineTransform transform = g2d.getTransform ();
        AffineTransform at = new AffineTransform ();
        at.translate (getX (), getY ());
        at.rotate (Math.toRadians (rotation), getWidth () / 2, getHeight () / 2);
        g2d.setTransform (at);
        g2d.drawImage (beachBall, x, y, this);
        g2d.setTransform (transform);
        g2d.dispose ();
    }
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    g2d.setColor (Color.GRAY);
    g2d.fill (world);
    if (insect != null) {
        g2d.setColor (Color.RED);
        g2d.fill (insect);
    }
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13264972_13265055_8_25
13264972_13265163_1_18
Title: yahtzee three of a kind 
----------------------------------------

private boolean isThreeOfAKind () {
    evaluate (die1);
    evaluate (die2);
    evaluate (die3);
    evaluate (die4);
    evaluate (die5);
    if (val1 >= 3) return true;

    if (val2 >= 3) return true;

    if (val3 >= 3) return true;

    if (val4 >= 3) return true;

    if (val5 >= 3) return true;

    if (val6 >= 3) return true;

    return false;
}
----------------------------------------

public Boolean isThreeOfAKind () {
    int input;
    int [] dice = new int [5];
    for (int i = 5;
    i <= 5; i ++) {
        input = rangen.nextInt (5) + 1;
        dice [i] = input;
    }
    java.util.Arrays.sort (dice);
    for (int i = 0;
    i < dice.length - 3; i ++) {
        if (dice [i] == dice [i + 1] ? dice [i + 1] == dice [i + 2] : false) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13276765_13276982_1_21
13276765_13277065_1_11
Title: Java - Compare 2 int Arrays and judge them based on their values 
----------------------------------------

public int [] compare (int [] first, int [] second) {
    Set < Integer > numbersFoundInFirstArray = new LinkedHashSet < Integer > ();
    Set < Integer > numbersFoundInSecondArray = new LinkedHashSet < Integer > ();
    int inSameIndex = 0;
    int inDifferentIndex = 0;
    for (int i;
    i < first.length; i ++) {
        if (first [i] == second [i]) {
            inSameIndex ++;
        }
        if (numbersFoundInFirstArray.contains (second [i])) {
            inDifferentIndex ++;
        }
        if (numbersFoundInSecondArray.contains (first [i])) {
            inDifferentIndex ++;
        }
        numbersFoundInFirstArray.add (first [i]);
        numbersFoundInSecondArray.add (second [i]);
    }
    return new int [] {inSameIndex, inDifferentIndex};
}
----------------------------------------

public int compare (int [] array0, int [] array1) {
    int matches = 0;
    List < Integer > list1 = Arrays.asList (array1);
    for (int curInt : array0) {
        if (list1.contains (curInt)) {
            matches ++;
        }
    }
    return matches;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13276765_13276982_1_21
13276765_13277820_1_25
Title: Java - Compare 2 int Arrays and judge them based on their values 
----------------------------------------

public int [] compare (int [] first, int [] second) {
    Set < Integer > numbersFoundInFirstArray = new LinkedHashSet < Integer > ();
    Set < Integer > numbersFoundInSecondArray = new LinkedHashSet < Integer > ();
    int inSameIndex = 0;
    int inDifferentIndex = 0;
    for (int i;
    i < first.length; i ++) {
        if (first [i] == second [i]) {
            inSameIndex ++;
        }
        if (numbersFoundInFirstArray.contains (second [i])) {
            inDifferentIndex ++;
        }
        if (numbersFoundInSecondArray.contains (first [i])) {
            inDifferentIndex ++;
        }
        numbersFoundInFirstArray.add (first [i]);
        numbersFoundInSecondArray.add (second [i]);
    }
    return new int [] {inSameIndex, inDifferentIndex};
}
----------------------------------------

public void compare (int [] arrayA, int [] arrayB) {
    int sameIndex = 0;
    int diffIndex = 0;
    String [] arrayAstatus = new String [arrayA.length];
    String [] arrayBstatus = new String [arrayB.length];
    for (int i = 0;
    i < arrayA.length; i ++) {
        if (arrayA [i] == arrayB [i] || arrayAstatus [i] != null) {
            sameIndex ++;
            continue;
        }
        for (int a = 0;
        a < arrayB.length; a ++) {
            if (a == i || arrayBstatus [a] != null) {
                continue;
            }
            if (arrayA [i] == arrayB [a]) {
                arrayAstatus [i] = "checked";
                arrayBstatus [a] = "checked";
                diffIndex ++;
                break;
            }
        }
    }
    System.out.println (sameIndex + ", " + diffIndex);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13276765_13277065_1_11
13276765_13277820_1_25
Title: Java - Compare 2 int Arrays and judge them based on their values 
----------------------------------------

public int compare (int [] array0, int [] array1) {
    int matches = 0;
    List < Integer > list1 = Arrays.asList (array1);
    for (int curInt : array0) {
        if (list1.contains (curInt)) {
            matches ++;
        }
    }
    return matches;
}
----------------------------------------

public void compare (int [] arrayA, int [] arrayB) {
    int sameIndex = 0;
    int diffIndex = 0;
    String [] arrayAstatus = new String [arrayA.length];
    String [] arrayBstatus = new String [arrayB.length];
    for (int i = 0;
    i < arrayA.length; i ++) {
        if (arrayA [i] == arrayB [i] || arrayAstatus [i] != null) {
            sameIndex ++;
            continue;
        }
        for (int a = 0;
        a < arrayB.length; a ++) {
            if (a == i || arrayBstatus [a] != null) {
                continue;
            }
            if (arrayA [i] == arrayB [a]) {
                arrayAstatus [i] = "checked";
                arrayBstatus [a] = "checked";
                diffIndex ++;
                break;
            }
        }
    }
    System.out.println (sameIndex + ", " + diffIndex);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13282520_13283606_10_26
13282520_13283606_42_54
Title: Swing invokeLater() method not working 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    JFrame frame = new JFrame ();
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (1000);
    } catch (InterruptedException ex) {
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            runMe.setEnabled (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13282913_13283030_1_14
13282913_13283258_1_14
Title: Writing A Recursive Function That Counts Zeros 
----------------------------------------

public static int zeroCount (int num) {
    String s = Integer.toString (num);
    int count = 0;
    int i = 0;
    for (i = 0; i < s.length; i ++) {
        if (s.charAt (i) == '0') {
            count ++;
        }
    }
    return count;
}
----------------------------------------

public static int zeroCount (int num) {
    int count = 0;
    if (num == 0) return 1;
    else if (Math.abs (num) < 9) return 0;
    else {
        if (num % 10 == 0) count ++;

        return count + zeroCount (num / 10);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13282913_13283030_1_14
13282913_51107315_5_26
Title: Writing A Recursive Function That Counts Zeros 
----------------------------------------

public static int zeroCount (int num) {
    String s = Integer.toString (num);
    int count = 0;
    int i = 0;
    for (i = 0; i < s.length; i ++) {
        if (s.charAt (i) == '0') {
            count ++;
        }
    }
    return count;
}
----------------------------------------

static int zeroCount (int num) {
    if (num == 0) {
        return 1;
    } else if (Math.abs (num) <= 9) {
        return 0;
    } else {
        if (num % 10 == 0) {
            count ++;
            zeroCount (num / 10);
        } else if (num % 10 != 0) {
            zeroCount (num / 10);
        }

    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13282913_13283258_1_14
13282913_51107315_5_26
Title: Writing A Recursive Function That Counts Zeros 
----------------------------------------

public static int zeroCount (int num) {
    int count = 0;
    if (num == 0) return 1;
    else if (Math.abs (num) < 9) return 0;
    else {
        if (num % 10 == 0) count ++;

        return count + zeroCount (num / 10);
    }

}
----------------------------------------

static int zeroCount (int num) {
    if (num == 0) {
        return 1;
    } else if (Math.abs (num) <= 9) {
        return 0;
    } else {
        if (num % 10 == 0) {
            count ++;
            zeroCount (num / 10);
        } else if (num % 10 != 0) {
            zeroCount (num / 10);
        }

    }

    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13295600_13599470_26_40
13295600_13599470_7_17
Title: multiple one-to-many relations ResultSetExtractor 
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List brandList = customer.getBrands ();
        if (brandsList == null) {
            brandsList = new ArrayList < Brand > ();
            customer.setBrands (brandsList);
        }
        Brand brand = new Brand ();
        brand.setId (rs.getLong ("CUSTOMER_BRAND_ID"));
        brand.setName (rs.getString ("CUSTOMER_BRAND_NAME"));
        brandsList.add (brand);
    }
}
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer == null) {
        customer = new Customer ();
        customer.setId (id);
        customer.setName (rs.getString ("CUSTOMER_NAME"));
        customer.setAccountNumber (rs.getLong ("CUSTOMER_ACCOUNT_NO"));
        map.put (id, customer);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13295600_13599470_49_62
13295600_13599470_7_17
Title: multiple one-to-many relations ResultSetExtractor 
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer != null) {
        List ordersList = customer.getOrders ();
        if (ordersList == null) {
            ordersList = new ArrayList < Order > ();
            customer.setOrders (ordersList);
        }
        Order order = new Order ();
        order.setId (rs.getLong ("ORDER_ID"));
        ordersList.add (order);
    }
}
----------------------------------------

public void processRow (ResultSet rs) throws SQLException {
    Long id = rs.getLong ("CUSTOMER_ID");
    Customer customer = map.get (id);
    if (customer == null) {
        customer = new Customer ();
        customer.setId (id);
        customer.setName (rs.getString ("CUSTOMER_NAME"));
        customer.setAccountNumber (rs.getLong ("CUSTOMER_ACCOUNT_NO"));
        map.put (id, customer);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13299864_13300092_222_256
13299864_13300092_87_97
Title: CSS3 to style Java? 
----------------------------------------

public void paint (Graphics g, JComponent c) {
    Graphics2D g2 = (Graphics2D) g.create ();
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setRenderingHint (RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    ButtonModel buttonModel;
    JButton b;
    if (((JLayer) c).getView () instanceof JButton) {
        b = (JButton) ((JLayer) c).getView ();
        buttonModel = b.getModel ();
    } else {
        super.paint (g, c);
        return;
    }
    int iconHeight = b.getIcon () != null ? b.getIcon ().getIconHeight () : 60;
    int iconWidth = b.getIcon () != null ? b.getIcon ().getIconWidth () : 60;
    Shape circle = new Ellipse2D.Double (STROKE_WIDTH, STROKE_WIDTH, iconHeight, iconWidth);
    g2.setPaint (new GradientPaint (5, 5, new Color (222, 224, 230), 30, 55, new Color (187, 189, 199)));
    g2.fill (circle);
    g2.setPaint (new GradientPaint (15, 0, new Color (90, 97, 105), 15, 30, new Color (132, 142, 152)));
    g2.setStroke (new BasicStroke (5));
    g2.draw (circle);
    if (buttonModel.isPressed ()) {
        g2.translate (1, 1);
    }
    super.paint (g2, c);
    g2.dispose ();
}
----------------------------------------

public void paint (Graphics g, JComponent c) {
    Graphics2D g2 = (Graphics2D) g.create ();
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setRenderingHint (RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    int height = c.getHeight ();
    int width = c.getWidth ();
    g2.setPaint (new GradientPaint (0, 0, new Color (136, 146, 155), 0, height, new Color (101, 108, 116)));
    Rectangle2D area = new Rectangle (0, 0, width, height);
    g2.fill (area);
    super.paint (g2, c);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13300442_13301907_20_32
13300442_13301907_35_47
Title: Program not executing function when mouse is clicked 
----------------------------------------

public Board () {
    width = 200;
    height = 200;
    topLeft = new Block (0, 0, width / 2 - 10, height / 2 - 10, Color.RED);
    topRight = new Block (width / 2, 0, width / 2 - 10, height / 2 - 10, Color.GREEN);
    botLeft = new Block (0, height / 2, width / 2 - 10, height / 2 - 10, Color.BLUE);
    botRight = new Block (width / 2, height / 2, width / 2 - 10, height / 2 - 10, Color.YELLOW);
    setBackground (Color.WHITE);
    setVisible (true);
    addMouseListener (this);
}
----------------------------------------

public Board (int w, int h) {
    width = w;
    height = h;
    topLeft = new Block (0, 0, width / 2 - 10, height / 2 - 10, Color.RED);
    topRight = new Block (width / 2, 0, width / 2 - 10, height / 2 - 10, Color.GREEN);
    botLeft = new Block (0, height / 2, width / 2 - 10, height / 2 - 10, Color.BLUE);
    botRight = new Block (width / 2, height / 2, width / 2 - 10, height / 2 - 10, Color.YELLOW);
    setBackground (Color.WHITE);
    setVisible (true);
    addMouseListener (this);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13318574_13318864_88_96
13318574_13319161_196_204
Title: Why does the height of the rectangles jump vary? 
----------------------------------------

public Square (SuperMarioGame game) {
    this.game = game;
    x = 100;
    y = 631;
    xa = 0;
    ya = 0;
    onGround = false;
    wide = game.getWidth ();
}
----------------------------------------

public Square (Game game) {
    this.game = game;
    x = 100;
    y = 100;
    xa = 0;
    ya = 0;
    onGround = false;
    wide = game.getWidth ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13318574_13318864_98_114
13318574_13319161_206_246
Title: Why does the height of the rectangles jump vary? 
----------------------------------------

public void move () {
    if (x + xa > 0 && x + xa < game.getWidth () - 30) x = x + xa;

    if (y + ya > 0 && y + ya < game.getHeight () - 60) {
        for (int i = 12;
        i < 0; i --);

        ya += 10;
        y = y + ya;
    }
    if (collision ()) {
        y -= 10;
        onGround = true;
    }
    Square.y += 10;
}
----------------------------------------

public void move () {
    y += ya;
    x += xa;
    if (x < 0) {
        x = 0;
    } else if (x + 30 > game.getWidth ()) {
        x = game.getWidth () - 30;
    }

    if (y < 0) {
        y = 0;
    } else if (collision ()) {
        onGround = true;
        y = game.ground.getBounds ().y - d;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13318574_13319161_10_28
13318574_13319161_42_64
Title: Why does the height of the rectangles jump vary? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    Game game = new Game ();
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (game);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    while (true) {
        game.move ();
        try {
            long startedAt = System.currentTimeMillis ();
            SwingUtilities.invokeAndWait (new Runnable () {
                @Override
                public void run () {
                    game.repaint ();
                }}

            );
            long completedAt = System.currentTimeMillis ();
            long sleepFor = 30 - (completedAt - startedAt);
            if (sleepFor < 0) {
                sleepFor = 30;
            }
            Thread.sleep (sleepFor);
        } catch (Exception exp) {
            exp.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13321740_13322139_152_172
13321740_13322139_72_136
Title: Socket Issue - Only first message read 
----------------------------------------

public void run () {
    for (Socket sRaW : socList) {
        if (mSocket.equals (sRaW)) {
            System.out.println ("Mai same hun");
            continue;
        } else {
            try {
                new PrintWriter (sRaW.getOutputStream (), true).println (mString);
            } catch (IOException e) {
                System.out.println ("Its in Catch");
            }
        }
    }
}
----------------------------------------

public void run () {
    if (sInThread.isConnected ()) {
        System.out.println ("Welcamu Clienta");
        System.out.println (socList);
    }
    try {
        is = sInThread.getInputStream ();
        System.out.println ("IS: " + is);
        isr = new InputStreamReader (is);
        br = new BufferedReader (isr);
        os = sInThread.getOutputStream ();
        pw = new PrintWriter (os, true);
        String s = new String ();
        while ((! isDone) && (s = br.readLine ()) != null) {
            String [] asx = s.split ("-");
            System.out.println ("On Console: " + s);
            Thread tx = new Thread (new ReplyKaroToClient (s, this.sInThread));
            tx.start ();
            if (asx [1].trim ().equalsIgnoreCase ("BYE")) {
                System.out.println ("I am inside Bye");
                isDone = true;
            }
        }
    } catch (IOException e) {
        System.out.println ("Thanks for Chatting.....");
    } finally {
        try {
            Thread tiku = new Thread (new ByeByeKarDo (sInThread));
            tiku.start ();
            try {
                tiku.join ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            System.out.println ("Accha to hum Chalte hain !!!");
            System.out.println (socList);
            br.close ();
            pw.close ();
            sInThread.close ();
        } catch (IOException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13326044_13326076_7_25
13326044_13326170_3_14
Title: Using a byte array 
----------------------------------------

public static void main (String args []) {
    byte [] b = new byte [100];
    try (FileInputStream fin = new FileInputStream ("file.txt")) {
        while (true) {
            int i = fin.read (b);
            if (i < 0) {
                break;
            }
            if (i < b.length) {
                b = Arrays.copyOf (b, i);
            }
            System.out.println (Arrays.toString (b));
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    int i;
    int j = 0;
    FileInputStream fin = new FileInputStream ("file.txt");
    byte [] b = new byte [100];
    do {
        i = fin.read ();
        j ++;
        b [j] = (byte) i;
    } while (i != - 1);
    System.out.println (b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13326861_13326948_1_15
13326861_48286367_32_53
Title: Avoid Deadlock example 
----------------------------------------

public static void transfer (Account from, Account to, double amount) {
    Account first = from;
    Account second = to;
    if (first.compareTo (second) < 0) {
        first = to;
        second = from;
    }
    synchronized (first) {
        synchronized (second) {
            from.withdraw (amount);
            to.deposit (amount);
        }
    }
}
----------------------------------------

void transfer (Account fromAccount, Account toAccount, double amount) {
    if (impendingTransaction (fromAccount, toAccount)) {
        try {
            System.out.format ("Transaction Begins from:%d to:%d\n", fromAccount.id, toAccount.id);
            fromAccount.withdraw (amount);
            toAccount.deposit (amount);
        } finally {
            fromAccount.lock.unlock ();
            toAccount.lock.unlock ();
        }
    } else {
        System.out.println ("Unable to begin transaction");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13328307_13328762_120_138
13328307_13328762_86_101
Title: Drawing an image at a point of another image 
----------------------------------------

public void run () {
    while (true) {
        if (keyPressed [0]) {
            x -= 5;
            repaint ();
        }
        if (keyPressed [1]) {
            if (x != 0) {
                x += 5;
                repaint ();
            }
        }
        try {
            Thread.sleep (25);
        } catch (InterruptedException e) {
            System.err.println (e);
        }
    }
}
----------------------------------------

public void run () {
    canJump = false;
    for (double i = 0;
    i <= 5.1; i += .2) {
        characterY = (int) (k * i * i - j * i + 351);
        f.repaint ();
        System.out.println (characterY);
        System.out.println (canJump);
        try {
            Thread.sleep (25);
        } catch (InterruptedException e) {
            System.err.println (e);
        }
    }
    repaint ();
    canJump = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13331902_13335004_39_52
13331902_13343540_11_21
Title: "How to get the binary name of a java class if one has only the fully qualified name?" 
----------------------------------------

public static void main (String [] args) {
    TestLocal test = new TestLocal ();
    Object [] objects = new Object [] {test.getObject1 (), test.getObject2 (), test.getObject3 ()};
    for (Object o : objects) {
        System.out.println ("Object      : " + o);
        System.out.println ("Simple Name : " + o.getClass ().getSimpleName ());
        System.out.println ("Name        : " + o.getClass ().getName ());
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Class < ? > cl1 = Class.forName ("com.stack.Test$Example$Cow$Hoof");
    Class < ? > cl2 = Class.forName ("com.stack.Test.Example.Cow.Hoof");
    System.out.println (cl1.getName ());
    System.out.println (cl1.getSimpleName ());
    System.out.println (cl1.getCanonicalName ());
    System.out.println ();
    System.out.println (cl2.getName ());
    System.out.println (cl2.getSimpleName ());
    System.out.println (cl2.getCanonicalName ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13333372_13333565_1_11
13333372_13333726_1_10
Title: Hard time understanting checked & unchecked exceptions 
----------------------------------------

public void readFile () {
    File foo = new File ("./foo.bar");
    try {
        BufferedReader bufferedReader = new BufferedReader (new FileReader (foo));
        getDataFromFile (bufferedReader);
    } catch (IOException e) {
        System.out.println ("Data could not be read due to an IO error.");
    }
}
----------------------------------------

public void readFile () {
    BufferedReader bufferedReader = null;
    try {
        File foo = new File ("./foo.bar");
        bufferedReader = new BufferedReader (new FileReader (foo));
    } catch (FileNotFoundException e) {
    }
    getDataFromFile (bufferedReader);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_13337856_1_32
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    if (nums == null || nums.length <= 1) {
        return nums;
    }
    int [] pos = new int [nums.length];
    int j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 5) {
            pos [j ++] = i;
        }
    }
    j = 0;
    for (int i = 0;
    i <= nums.length - 2; i ++) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            if (j >= pos.length) {
                System.err.println ("No more 5s: there are more 4 than 5 in the input array");
                break;
            }
            nums [pos [j ++]] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_13337858_1_18
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public static int [] fix45 (int [] nums) {
    int j = 0;
    for (int i = 0;
    i < nums.length - 1; ++ i) {
        if (nums [i] == 4 && nums [i + 1] != 5) {
            while (nums [j] != 5 || (j != 0 && nums [j - 1] == 4)) {
                j ++;
            }
            nums [j] = nums [i + 1];
            nums [i + 1] = 5;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_13337859_1_15
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int [] otherValues = new int [nums.length];
    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] != 4 && nums [i] != 5) otherValues [c ++] = nums [i];

    for (int i = 0, c = 0;
    i < nums.length; i ++) if (nums [i] == 4) nums [++ i] = 5;
    else nums [i] = otherValues [c ++];

    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
13337515_13337691_1_19
13337515_24751626_1_14
Title: Is there a simpler solution for Codingbat fix45? 
----------------------------------------

public int [] fix45 (int [] nums) {
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 4) {
            if (nums [i + 1] == 5) continue;

            for (int j = 0;
            i < nums.length; j ++) {
                if (nums [j] == 5 && (j == 0 || nums [j - 1] != 4)) {
                    nums [j] = nums [i + 1];
                    nums [i + 1] = 5;
                    break;
                }
            }
        }
    }
    return nums;
}
----------------------------------------

public int [] fix45 (int [] nums) {
    int t = 0;
    for (int i = 0;
    i < nums.length; i ++) for (int j = 0;
    j < nums.length; j ++) if (nums [i] == 5 && nums [j] == 4) {
        t = nums [j + 1];
        nums [j + 1] = nums [i];
        nums [i] = t;
    }

    return nums;
}
----------------------------------------
