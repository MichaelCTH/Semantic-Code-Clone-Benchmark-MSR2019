$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49153420_49153681_1_11
49153420_49154499_1_24
Title: "Unfortunately app has stopped How to fix?" 
----------------------------------------

@Override
public void onBindViewHolder (SingleViewHolder holder, int position) {
    final Single single = singleList.get (position);
    try {
        holder.img.setImageResource (single.getImg ());
    } catch (Exception e) {
    }
    holder.title.setText (single.getTitle ());
}
----------------------------------------

@Override
public void onBindViewHolder (SingleViewHolder holder, int position) {
    final Single single = singleList.get (position);
    if (single.getImg () != 0) {
        String resourceName = String.valueOf (single.getImg ());
        int checkExistence = mContext.getResources ().getIdentifier (resourceName, "drawable", mContext.getPackageName ());
        if (checkExistence != 0) {
            try {
                holder.img.setImageResource (single.getImg ());
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }
    }
    holder.title.setText (single.getTitle ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49154922_49155193_1_20
49154922_49155288_1_16
Title: Trying to find whitespaces in String 
----------------------------------------

private static void stringFunc () {
    String s = new String ("Crying to be heard");
    String [] splits = s.split ("\\s+");
    int largeIndex = - 1;
    int maxLen = 0;
    if (splits.length > 1) {
        for (int i = 0;
        i < splits.length; i ++) {
            if (maxLen < splits [i].length ()) {
                largeIndex = i;
                maxLen = splits [i].length ();
            }
        }
    }
    if (largeIndex != - 1) System.out.println (splits [largeIndex]);
    else System.out.println ("No white spaces");

}
----------------------------------------

private static void stringFunc () {
    String s = new String ("Crying to be heard");
    String rts = " ";
    String word [] = s.split (rts);
    if (s.contains (rts)) {
        System.out.println ("There are spaces");
        for (int i = 0;
        i < word.length; i ++) {
            if (word [i].length () >= rts.length ()) {
                rts = word [i];
            }
        }
        System.out.println (rts);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_121_130
49169892_49170243_96_107
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sb.append (matrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Matrix: \n");
    for (int i = 0;
    i < subMatrix.length; i ++) {
        for (int j = 0;
        j < subMatrix [i].length; j ++) {
            sb.append (subMatrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    sb.append ("Sum: " + sum);
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_121_130
49169892_52053319_121_130
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sb.append (matrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sb.append (matrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_121_130
49169892_52053319_96_107
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sb.append (matrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Matrix: \n");
    for (int i = 0;
    i < subMatrix.length; i ++) {
        for (int j = 0;
        j < subMatrix [i].length; j ++) {
            sb.append (subMatrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    sb.append ("Sum: " + sum);
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_19_43
49169892_52053319_19_43
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

private List < SubMatrixSum > findAllSubMatrices (Matrix m) {
    List < SubMatrixSum > subs = new ArrayList < > ();
    int row = 0, column;
    while (row < m.matrix.length - m.subMatrixSize + 1) {
        column = 0;
        while (column < m.matrix [0].length - m.subMatrixSize + 1) {
            int [] [] sub = new int [m.subMatrixSize] [m.subMatrixSize];
            int sum = 0;
            if (row == 0 || row == m.matrix.length || column == 0 || column == m.matrix [0].length) {
                for (int i = 0, mi = row;
                i < m.subMatrixSize; i ++, mi ++) {
                    for (int j = 0, mj = column;
                    j < m.subMatrixSize; j ++, mj ++) {
                        sub [i] [j] = m.matrix [mi] [mj];
                        sum += sub [i] [j];
                    }
                }
                subs.add (new SubMatrixSum (sub, sum));
            }
            column ++;
        }
        row ++;
    }
    return subs;
}
----------------------------------------

private List < SubMatrixSum > findAllSubMatrices (Matrix m) {
    List < SubMatrixSum > subs = new ArrayList < > ();
    int row = 0, column;
    while (row < m.matrix.length - m.subMatrixSize + 1) {
        column = 0;
        while (column < m.matrix [0].length - m.subMatrixSize + 1) {
            int [] [] sub = new int [m.subMatrixSize] [m.subMatrixSize];
            int sum = 0;
            if (row == 0 || row == m.matrix.length || column == 0 || column == m.matrix [0].length) {
                for (int i = 0, mi = row;
                i < m.subMatrixSize; i ++, mi ++) {
                    for (int j = 0, mj = column;
                    j < m.subMatrixSize; j ++, mj ++) {
                        sub [i] [j] = m.matrix [mi] [mj];
                        sum += sub [i] [j];
                    }
                }
                subs.add (new SubMatrixSum (sub, sum));
            }
            column ++;
        }
        row ++;
    }
    return subs;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_45_82
49169892_52053319_45_82
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

private Matrix readInput () {
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        System.out.print ("Input width and height of matrix:");
        String line = br.readLine ();
        String [] wh = line.split ("\\s+");
        if (wh.length == 2) {
            int w = Integer.parseInt (wh [0]);
            int h = Integer.parseInt (wh [1]);
            int [] [] m = new int [h] [w];
            System.out.println ("Input matrix with numbers from 0-9 :");
            for (int i = 0;
            i < h; i ++) {
                line = br.readLine ();
                String [] row = line.split ("\\s+");
                if (row.length == w) {
                    for (int j = 0;
                    j < w; j ++) {
                        m [i] [j] = Integer.parseInt (row [j]);
                    }
                } else {
                    throw new RuntimeException ("Invalid input");
                }
            }
            System.out.println ("Input maximum width of square submatrix:");
            line = br.readLine ();
            int sm = Integer.parseInt (line);
            if (sm > w || sm > h) {
                throw new RuntimeException ("Invalid input");
            }
            return new Matrix (m, sm);
        } else {
            throw new RuntimeException ("Invalid input");
        }
    } catch (IOException e) {
    }
    return null;
}
----------------------------------------

private Matrix readInput () {
    try {
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        System.out.print ("Input width and height of matrix:");
        String line = br.readLine ();
        String [] wh = line.split ("\\s+");
        if (wh.length == 2) {
            int w = Integer.parseInt (wh [0]);
            int h = Integer.parseInt (wh [1]);
            int [] [] m = new int [h] [w];
            System.out.println ("Input matrix with numbers from 0-9 :");
            for (int i = 0;
            i < h; i ++) {
                line = br.readLine ();
                String [] row = line.split ("\\s+");
                if (row.length == w) {
                    for (int j = 0;
                    j < w; j ++) {
                        m [i] [j] = Integer.parseInt (row [j]);
                    }
                } else {
                    throw new RuntimeException ("Invalid input");
                }
            }
            System.out.println ("Input maximum width of square submatrix:");
            line = br.readLine ();
            int sm = Integer.parseInt (line);
            if (sm > w || sm > h) {
                throw new RuntimeException ("Invalid input");
            }
            return new Matrix (m, sm);
        } else {
            throw new RuntimeException ("Invalid input");
        }
    } catch (IOException e) {
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_96_107
49169892_52053319_121_130
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Matrix: \n");
    for (int i = 0;
    i < subMatrix.length; i ++) {
        for (int j = 0;
        j < subMatrix [i].length; j ++) {
            sb.append (subMatrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    sb.append ("Sum: " + sum);
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sb.append (matrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49170243_96_107
49169892_52053319_96_107
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Matrix: \n");
    for (int i = 0;
    i < subMatrix.length; i ++) {
        for (int j = 0;
        j < subMatrix [i].length; j ++) {
            sb.append (subMatrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    sb.append ("Sum: " + sum);
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append ("Matrix: \n");
    for (int i = 0;
    i < subMatrix.length; i ++) {
        for (int j = 0;
        j < subMatrix [i].length; j ++) {
            sb.append (subMatrix [i] [j] + " ");
        }
        sb.append ("\n");
    }
    sb.append ("Sum: " + sum);
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49421706_33_47
49169892_53410392_6_38
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

public static void main (String [] args) {
    System.out.print ("Input width and height of matrix:");
    Scanner sc = new Scanner (System.in);
    int row = sc.nextInt ();
    int col = sc.nextInt ();
    int [] [] inputMat = new int [row] [col];
    System.out.println ("Input Matrix with numbers from 0 to 9");
    for (int i = 0;
    i < row; i ++) {
        for (int j = 0;
        j < col; j ++) {
            inputMat [i] [j] = sc.nextInt ();
        }
    }
    subMatrix (inputMat);
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter height and width of matrix: ");
    int height = sc.nextInt ();
    int width = sc.nextInt ();
    int mat [] [] = new int [height] [width];
    System.out.println ("\nEnter elements between 0 and in the matrix: ");
    for (int i = 0;
    i < height; i ++) {
        for (int j = 0;
        j < width; j ++) {
            mat [i] [j] = sc.nextInt ();
        }
    }
    for (int i = 0;
    i < height; i ++) {
        for (int j = 0;
        j < width; j ++) {
            System.out.print ("\t" + mat [i] [j]);
        }
        System.out.println ("\n");
    }
    System.out.println ("\nEnter Max width of square sub matrix: ");
    int size = sc.nextInt ();
    int height_sub = size;
    int width_sub = size;
    subMatrix (mat, size, height, width);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49169892_49421706_7_32
49169892_53410392_39_105
Title: 2D matrix square submatrix with the highest sum of boundary 
----------------------------------------

static void subMatrix (int [] [] arr) {
    int row = arr.length - 2;
    int col = arr [0].length - 2;
    int sum, maxSum = 0, subRow = 0, subCol = 0;
    for (int i = 0;
    i < row; i ++) {
        sum = 0;
        for (int j = 0;
        j < col; j ++) {
            sum = arr [i] [j] + arr [i] [j + 1] + arr [i] [j + 2] + arr [i + 1] [j] + arr [i + 1] [j + 1] + arr [i + 1] [j + 2] + arr [i + 2] [j] + arr [i + 2] [j + 1] + arr [i + 2] [j + 2];
            if (maxSum < sum) {
                maxSum = sum;
                subRow = i;
                subCol = j;
            }
        }
    }
    for (int i = subRow;
    i < subRow + 3; i ++) {
        for (int j = subCol;
        j < subCol + 3; j ++) {
            System.out.print (arr [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

static void subMatrix (int mat [] [], int size, int height, int width) {
    int sub_mat [] [] = new int [size] [size];
    int max_sum = 0;
    int final_sub_mat [] [] = new int [size] [size];
    if (size > width) {
        System.out.println ("\nInvalid size for sub-matrix:");
        return;
    }
    for (int i = 0;
    i < height - size + 1; i ++) {
        for (int j = 0;
        j < width - size + 1; j ++) {
            for (int x = i, p = 0;
            x < size + i; x ++, p ++) for (int y = j, q = 0;
            y < size + j; y ++, q ++) sub_mat [p] [q] = mat [x] [y];

            for (int ii = 0;
            ii < size; ii ++) {
                for (int jj = 0;
                jj < size; jj ++) {
                    System.out.print ("\t" + sub_mat [ii] [jj]);
                }
                System.out.println ("\n");
            }
            int sum = 0;
            for (int a = 0;
            a < size; a ++) {
                for (int b = 0;
                b < size; b ++) {
                    if (a == 0) sum += sub_mat [a] [b];
                    else if (a == size - 1) sum += sub_mat [a] [b];
                    else if (b == 0) sum += sub_mat [a] [b];
                    else if (b == size - 1) sum += sub_mat [a] [b];

                }
            }
            if (sum >= max_sum) {
                max_sum = sum;
                for (int a = 0;
                a < size; a ++) {
                    for (int b = 0;
                    b < size; b ++) {
                        final_sub_mat [a] [b] = sub_mat [a] [b];
                    }
                }
            } else continue;

        }
    }
    System.out.println ("\nSquare Sub-matrix with highest sum boundary elements:");
    for (int ii = 0;
    ii < size; ii ++) {
        for (int jj = 0;
        jj < size; jj ++) {
            System.out.print ("\t" + final_sub_mat [ii] [jj]);
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49182195_49182330_3_29
49182195_49182598_1_20
Title: "String reverse wrong results" 
----------------------------------------

public String spinWords (String sentence) {
    String [] tablica = sentence.split (" ");
    int y = 0;
    for (String x : tablica) {
        if (x.length () >= 5) {
            StringBuilder p = new StringBuilder (x).reverse ();
            x = p.toString ();
        }
        tablica [y] = x;
        y ++;
    }
    StringBuilder wynik = new StringBuilder ();
    y = 0;
    for (String z : tablica) {
        tablica [y] = z;
        wynik.append (tablica [y]);
        if (tablica.length > 1 && y != tablica.length - 1) {
            wynik.append (" ");
        }
        y ++;
    }
    return wynik.toString ();
}
----------------------------------------

public String spinWords (String sentence) {
    String [] tablica = sentence.split (" ");
    for (int i = 0;
    i < tablica.length; i ++) {
        if (tablica [i].length () >= 5) {
            StringBuilder p = new StringBuilder (tablica [i]).reverse ();
            tablica [i] = p.toString ();
        }
    }
    StringBuilder builder = new StringBuilder ();
    for (String s : tablica) {
        builder.append (s + " ");
    }
    String str = builder.toString ();
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49191026_49191776_19_43
49191026_49193720_11_23
Title: Create array from existed array 
----------------------------------------

public static < T > List < List < T > > clickButton (List < T > myArray) {
    List < List < T > > returnedArrays = new ArrayList < > ();
    for (int i = 0;
    i < myArray.size (); i ++) {
        T object = myArray.get (i);
        List < T > array = new ArrayList < > ();
        array.addAll (myArray);
        array.remove (object);
        returnedArrays.add (array);
    }
    return returnedArrays;
}
----------------------------------------

public static int [] [] clickButton (int [] myArray) {
    int [] [] returnedArrays = new int [myArray.length] [myArray.length - 1];
    for (int i = 0;
    i < myArray.length; i ++) {
        int [] array = new int [myArray.length - 1];
        for (int j = 0, k = 0;
        j < myArray.length; j ++) {
            if (j != i) {
                array [k ++] = myArray [j];
            }
        }
        returnedArrays [i] = array;
    }
    return returnedArrays;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49191026_49191776_1_17
49191026_49191869_1_14
Title: Create array from existed array 
----------------------------------------

public static void main (String args []) {
    List < Integer > myArray = new ArrayList < > ();
    myArray.add (4);
    myArray.add (5);
    myArray.add (6);
    myArray.add (7);
    List < List < Integer > > result = clickButton (myArray);
    for (List < Integer > list : result) {
        System.out.println ("List: " + list);
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] myArray = {1, 2, 3, 4};
    int [] sub1 = subArray (myArray, 0);
    printArray (sub1);
    for (int i = 0;
    i < myArray.length; i ++) {
        int [] sub2 = subArray (myArray, i);
        printArray (sub2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49195941_49197215_18_26
49195941_49197293_15_32
Title: Peterson lock/unlock java implementation 
----------------------------------------

public void lock (int i) {
    for (int l = 0;
    l < this.n - 1; l ++) {
        this.levels [i].set (l);
        this.lastToEnter [l].set (i);
        while (this.lastToEnter [l].get () == i && existsLevelGteL (l, i)) {
        }
    }
}
----------------------------------------

public void lock (int i) {
    for (int l = 0;
    l < this.N - 1; l ++) {
        this.FLAG [i].set (l);
        this.LAST [l].set (i);
        boolean other_flags = true;
        while (other_flags && this.LAST [l].get () == i) {
            other_flags = false;
            for (int k = 0;
            k < this.N; k ++) {
                if (k == i) continue;

                if (this.FLAG [k].get () >= l) {
                    other_flags = true;
                    break;
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49222059_49222143_9_21
49222059_49223000_8_25
Title: Passing a checkbox state from XML to Java 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    hasWhippedCream = (CheckBox) findViewById (R.id.toppings_checkbox);
    hasWhippedCream.setOnCheckedChangeListener (new OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            checked = isChecked;
        }}

    );
    checked = hasWhippedCream.isChecked ();
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    CheckBox hasWhippedCream = (CheckBox) findViewById (R.id.toppings_checkbox);
    hasWhippedCream.setOnCheckedChangeListener (new OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            checked = isChecked;
        }}

    );
    int quantity = 0;
    int pricePerCup = 5;
    int toppingPrice = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49224872_49225161_1_24
49224872_49225868_1_28
Title: REST API: Using a GET Request to match an ID within a File and display the object corresponding to ID 
----------------------------------------

@RequestMapping (value = "/getVehicle/{id}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
public Vehicle getVehicle (@PathVariable ("id")
int id) throws IOException {
    ObjectMapper mapper = new ObjectMapper ();
    String inventory = FileUtils.readFileToString (new File ("./inventory.txt"), CharEncoding.UTF_8);
    List < Vehicle > vehicle = (Vehicle) mapper.readValue (inventory, Vehicle.class);
    List < Object > vehicle = mapper.readValue (inventory, Vehicle.class);
    for (Vehicle v : vehicle) {
        if (vehicle.getId () == id) {
            return vehicle;
        }
    }
    return null;
}
----------------------------------------

@RequestMapping (value = "/getVehicle/{id}", method = RequestMethod.GET)
public Vehicle getVehicle (@PathVariable ("id")
int id) throws IOException {
    ObjectMapper mapper = new ObjectMapper ();
    LineIterator inventory = FileUtils.lineIterator (new File ("./inventory.txt"), CharEncoding.UTF_8);
    String vehicle = "";
    while (inventory.hasNext ()) {
        String tempVehicle = inventory.next ();
        Vehicle v = mapper.readValue (tempVehicle, Vehicle.class);
        if (v.getId () == id) {
            vehicle = tempVehicle;
        }
    }
    return new ObjectMapper ().readValue (vehicle, Vehicle.class);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49227907_49228065_4_80
49227907_49228113_20_36
Title: Java program that returns a date when given a number and returns what day it will be in the future when given another number 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter today's day:");
    int num = scanner.nextInt ();
    if (num > 6 || num < 0) {
        System.out.println ("This is an invalid number");
    }
    String day = "Invalid";
    switch (num) {
        case 0 :
            day = "Sunday";
            break;
        case 1 :
            day = "Monday";
            break;
        case 2 :
            day = "Tuesday";
            break;
        case 3 :
            day = "Wednesday";
            break;
        case 4 :
            day = "Thursday";
            break;
        case 5 :
            day = "Friday";
            break;
        case 6 :
            day = "Saturday";
            break;
    }
    Scanner scanner2 = new Scanner (System.in);
    System.out.println ("Enter the number of days elapsed since today:");
    int num2 = scanner2.nextInt ();
    int newday = num + num2;
    while (newday > 6) {
        newday = newday - 7;
    }
    String day2 = "Invalid";
    switch (newday) {
        case 0 :
            day2 = "Sunday";
            break;
        case 1 :
            day2 = "Monday";
            break;
        case 2 :
            day2 = "Tuesday";
            break;
        case 3 :
            day2 = "Wednesday";
            break;
        case 4 :
            day2 = "Thursday";
            break;
        case 5 :
            day2 = "Friday";
            break;
        case 6 :
            day2 = "Saturday";
            break;
    }
    System.out.println ("Today is " + day + " and the future day is " + day2);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter today's day: ");
    int num = scanner.nextInt ();
    System.out.println ("Enter the number of days elapsed since today: ");
    int num2 = scanner.nextInt ();
    if (num < 0 || num > 6) {
        System.out.println ("Invalid Number");
        System.exit (0);
    }
    int newDay = (num + num2) % 7;
    System.out.println ("Today is " + getDay (num) + " and the future day is " + getDay (newDay));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49227907_49228113_20_36
49227907_49228119_11_84
Title: Java program that returns a date when given a number and returns what day it will be in the future when given another number 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter today's day: ");
    int num = scanner.nextInt ();
    System.out.println ("Enter the number of days elapsed since today: ");
    int num2 = scanner.nextInt ();
    if (num < 0 || num > 6) {
        System.out.println ("Invalid Number");
        System.exit (0);
    }
    int newDay = (num + num2) % 7;
    System.out.println ("Today is " + getDay (num) + " and the future day is " + getDay (newDay));
}
----------------------------------------

public static void main (String [] args) {
    String day = "", day2 = "";
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter today's day:");
    int num = scanner.nextInt ();
    if (num > 6 && num < 0) {
        System.out.println ("This is an invalid number");
    }
    switch (num) {
        case 0 :
            day = "Sunday";
            break;
        case 1 :
            day = "Monday";
            break;
        case 2 :
            day = "Tuesday";
            break;
        case 3 :
            day = "Wednesday";
            break;
        case 4 :
            day = "Thursday";
            break;
        case 5 :
            day = "Friday";
            break;
        case 6 :
            day = "Saturday";
            break;
    }
    Scanner scanner2 = new Scanner (System.in);
    System.out.println ("Enter the number of days elapsed since today:");
    int num2 = scanner2.nextInt ();
    int newday = num + num2;
    while (newday > 6) {
        newday = newday - 7;
    }
    switch (newday) {
        case 0 :
            day2 = "Sunday";
            break;
        case 1 :
            day2 = "Monday";
            break;
        case 2 :
            day2 = "Tuesday";
            break;
        case 3 :
            day2 = "Wednesday";
            break;
        case 4 :
            day2 = "Thursday";
            break;
        case 5 :
            day2 = "Friday";
            break;
        case 6 :
            day2 = "Saturday";
            break;
    }
    System.out.println ("Today is " + day + " and the future day is " + day2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49252971_49252995_1_13
49252971_49258218_1_13
Title: Android Date Format into custom date 
----------------------------------------

public static String getCustomDateScoreboard (String dateTimeStr) {
    Date date = null;
    String formattedTime = "";
    try {
        date = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss", Locale.US).parse (dateTimeStr);
        Log.d (TAG, date.toString ());
        formattedTime = new SimpleDateFormat ("dd-MM-yyyy hh:mm aa", Locale.US).format (date);
    } catch (ParseException e) {
        Timber.e (e, "date time not in proper format: %s", dateTimeStr);
    }
    return formattedTime;
}
----------------------------------------

public static String getCustomDateScoreboard () {
    Date date = null;
    String formattedTime = "";
    try {
        date = new SimpleDateFormat ("yyyy-mm-dd HH:mm:ss", Locale.US).parse ("2018-03-13 19:00:00");
        Log.d ("Time::", date.toString ());
        formattedTime = new SimpleDateFormat ("dd-MM-yyyy hh:mm aa", Locale.US).format (date);
        Log.d ("Time2::", formattedTime);
    } catch (ParseException e) {
    }
    return formattedTime;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49255235_49255409_1_13
49255235_49255503_1_18
Title: "C(nr) calculator program doesn't work" 
----------------------------------------

private void lllActionPerformed (java.awt.event.ActionEvent evt) {
    int n = Integer.parseInt (t1.getText ());
    int r = Integer.parseInt (t2.getText ());
    if (r > n / 2) r = n - r;

    long ans = 1;
    int i;
    for (i = 1; i <= r; i ++) {
        ans *= n - r + i;
        ans /= i;
    }
    t3.setText (" " + ans);
}
----------------------------------------

private void lllActionPerformed (java.awt.event.ActionEvent evt) {
    int n = Integer.parseInt (t1.getText ());
    int r = Integer.parseInt (t2.getText ());
    int s = 1;
    for (int i = 1;
    i <= n; i = i + 1) {
        s = i * s;
    }
    long p = 1L;
    for (int j = 1;
    j <= n - r; j = j + 1) {
        p = j * p;
    }
    long q = 1L;
    for (int k = 1;
    k <= r; k = k + 1) {
        q = k * q;
    }
    long re = s / (p * q);
    t3.setText (" " + re);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49263161_49264142_19_34
49263161_49264142_42_57
Title: How to create 3 thread that will work one by one 
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 2;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 3;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49263161_49264142_19_34
49263161_49264142_65_80
Title: How to create 3 thread that will work one by one 
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 2;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 1;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49263161_49264142_42_57
49263161_49264142_65_80
Title: How to create 3 thread that will work one by one 
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 3;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            synchronized (lock) {
                while (turnIsFor != turn) {
                    lock.wait ();
                }
                System.out.println (Thread.currentThread ().getName ());
                turnIsFor = 1;
                lock.notifyAll ();
            }
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49263227_49263378_1_11
49263227_49266036_9_18
Title: Problems returning the length of the longest String among the values of input in a HashMap 
----------------------------------------

public static void main (String [] args) {
    HashMap < String, String > input = new HashMap < > ();
    input.put ("", "");
    input.put ("asdfa", "asdfas");
    input.put ("asdfsdasdf", "asdfas");
    input.put ("asasdfasdfasdfdfa", "asdfas4");
    input.put ("assafasdfasdfasdfasdfdfa", "asdfasxxxxxxxxxxxxxxxxxxxxxxx");
    input.put ("asdddccfa", "asdfas");
    System.out.println (q1 (input));
}
----------------------------------------

public static void main (String [] args) {
    Map < String, String > stringMap = new HashMap < String, String > () {

        {
            put ("key1", "ss");
            put ("key2", "sss");
            put ("key3", "ssss");
            put ("key4", "sssssssssssssssssssssssssss");
        }

    }

    ;
    System.out.println (getLongestStringFromMapValues (stringMap));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49263632_49264692_22_40
49263632_52124694_9_34
Title: Converting a JSON file to a specific XML format 
----------------------------------------

public static void main (String [] args) throws SaxonApiException {
    final String XSLT_PATH = "src/so/test1/test.xsl";
    final String JSON = "{\"playerStats\": [\n" + "    {\"jerseyNumber\": \"23\", \"fgPercentage\": 60, \"plusMinus\": \"plus\"},\n" + "    {\"jerseyNumber\": \"24\", \"fgPercentage\": 40, \"plusMinus\": \"minus\"}\n" + "]}";
    OutputStream outputStream = System.out;
    Processor processor = new Processor (false);
    Serializer serializer = processor.newSerializer ();
    serializer.setOutputStream (outputStream);
    XsltCompiler compiler = processor.newXsltCompiler ();
    XsltExecutable executable = compiler.compile (new StreamSource (new File (XSLT_PATH)));
    XsltTransformer transformer = executable.load ();
    transformer.setInitialTemplate (new QName ("init"));
    transformer.setParameter (new QName ("json"), new XdmAtomicValue (JSON));
    transformer.setDestination (serializer);
    transformer.transform ();
}
----------------------------------------

public static void main (String args []) {
    String json = "{\"playerStats\": [\n" + "{ \"jerseyNumber\": \"23\",  \"fgPercentage\": 60, \"plusMinus\": \"plus\" }," + "{ \"jerseyNumber\": \"24\",  \"fgPercentage\": 40, \"plusMinus\": \"minus\" }" + "] }";
    String xml = "<BallerStats>" + "<BallerStat>" + "    <Baller><BallerJersey>23</BallerJersey><Type>Jersey</Type></Baller>" + "    <fgPercentage><Type>PERCENT</Type><Value>60</Value></fgPercentage>" + "</BallerStat>" + "</BallerStats>";
    List < Map < String, Object > > jsonArray = U.get ((Map < String, Object >) U.fromJson (json), "playerStats");
    Map < String, Object > map = new LinkedHashMap < > ();
    List < Map < String, Object > > ballerStats = new ArrayList < > ();
    Map < String, Object > ballerStat = new LinkedHashMap < > ();
    map.put ("BallerStats", ballerStat);
    ballerStat.put ("BallerStat", ballerStats);
    for (Map < String, Object > jsonItem : jsonArray) {
        Map < String, Object > newBallerStat = (Map < String, Object >) ((Map < String, Object >) ((Map < String, Object >) U.fromXml (xml)).get ("BallerStats")).get ("BallerStat");
        ((Map < String, Object >) newBallerStat.get ("Baller")).put ("BallerJersey", jsonItem.get ("jerseyNumber"));
        ((Map < String, Object >) newBallerStat.get ("fgPercentage")).put ("Value", jsonItem.get ("fgPercentage"));
        ballerStats.add (newBallerStat);
    }
    System.out.println (U.toXml (map));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49264411_49264646_22_30
49264411_49264646_32_39
Title: Separating code from javafx start method 
----------------------------------------

public Rectangle [] [] generateBricks (Rectangle [] [] bricks) {
    for (int i = 0;
    i < bricks.length; i ++) {
        for (int j = 0;
        j < bricks [0].length; j ++) {
            bricks [i] [j] = new Rectangle (10 + (40 * i), 70 + (20 * j), 30, 10);
        }
    }
    return bricks;
}
----------------------------------------

public void generateBricks (Rectangle [] [] bricks) {
    for (int i = 0;
    i < bricks.length; i ++) {
        for (int j = 0;
        j < bricks [0].length; j ++) {
            root.getChildren ().add (bricks [i] [j]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49264411_49264646_22_30
49264411_49265195_27_35
Title: Separating code from javafx start method 
----------------------------------------

public Rectangle [] [] generateBricks (Rectangle [] [] bricks) {
    for (int i = 0;
    i < bricks.length; i ++) {
        for (int j = 0;
        j < bricks [0].length; j ++) {
            bricks [i] [j] = new Rectangle (10 + (40 * i), 70 + (20 * j), 30, 10);
        }
    }
    return bricks;
}
----------------------------------------

private Rectangle [] [] generateBricks (int numCols, int numRows) {
    Rectangle [] [] bricks = new Rectangle [numCols] [numRows];
    for (int i = 0;
    i < numCols; i ++) {
        for (int j = 0;
        j < numRows; j ++) {
            bricks [i] [j] = new Rectangle (10 + (40 * i), 70 + (20 * j), 30, 10);
        }
    }
    return bricks;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49264411_49264646_32_39
49264411_49265195_27_35
Title: Separating code from javafx start method 
----------------------------------------

public void generateBricks (Rectangle [] [] bricks) {
    for (int i = 0;
    i < bricks.length; i ++) {
        for (int j = 0;
        j < bricks [0].length; j ++) {
            root.getChildren ().add (bricks [i] [j]);
        }
    }
}
----------------------------------------

private Rectangle [] [] generateBricks (int numCols, int numRows) {
    Rectangle [] [] bricks = new Rectangle [numCols] [numRows];
    for (int i = 0;
    i < numCols; i ++) {
        for (int j = 0;
        j < numRows; j ++) {
            bricks [i] [j] = new Rectangle (10 + (40 * i), 70 + (20 * j), 30, 10);
        }
    }
    return bricks;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49267817_49267997_2_21
49267817_49268403_2_16
Title: "Print out the letter E made of asterisks - My program works but I don't understand why" 
----------------------------------------

public static void main (String args []) {
    final int NUM_ACROSS = 3;
    final int NUM_DOWN = 5;
    int row;
    int column;
    for (row = 1; row <= NUM_DOWN; row ++) {
        if (row == 1 || row == 3 || row == NUM_DOWN) {
            for (column = 1; column <= NUM_ACROSS; column ++) {
                if (column == 1 || column == NUM_ACROSS) System.out.print ("L");

            }
        }
        System.out.print ("*");
        System.out.print (" ");
        System.out.println ();
    }
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    int row;
    int column;
    for (row = 1; row <= 5; row ++) {
        if (row == 1 || row == 3 || row == 5) {
            for (column = 1; column <= 3; column ++) {
                if (column == 1 || column == 3) System.out.print ("*");

            }
        }
        System.out.print ("*");
        System.out.print ("\n");
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49267817_49267997_2_21
49267817_49268503_3_14
Title: "Print out the letter E made of asterisks - My program works but I don't understand why" 
----------------------------------------

public static void main (String args []) {
    final int NUM_ACROSS = 3;
    final int NUM_DOWN = 5;
    int row;
    int column;
    for (row = 1; row <= NUM_DOWN; row ++) {
        if (row == 1 || row == 3 || row == NUM_DOWN) {
            for (column = 1; column <= NUM_ACROSS; column ++) {
                if (column == 1 || column == NUM_ACROSS) System.out.print ("L");

            }
        }
        System.out.print ("*");
        System.out.print (" ");
        System.out.println ();
    }
    System.exit (0);
}
----------------------------------------

public static void main (String args []) {
    final int NUM_ACROSS = 3;
    final int NUM_DOWN = 5;
    for (int row = 1;
    row <= NUM_DOWN; row ++) {
        if (row == 1 || row == NUM_DOWN / 2 + 1 || row == NUM_DOWN) for (int column = 2;
        column <= NUM_ACROSS; column ++) System.out.print ("*");

        System.out.println ("*");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49267817_49268403_2_16
49267817_49268503_3_14
Title: "Print out the letter E made of asterisks - My program works but I don't understand why" 
----------------------------------------

public static void main (String [] args) {
    int row;
    int column;
    for (row = 1; row <= 5; row ++) {
        if (row == 1 || row == 3 || row == 5) {
            for (column = 1; column <= 3; column ++) {
                if (column == 1 || column == 3) System.out.print ("*");

            }
        }
        System.out.print ("*");
        System.out.print ("\n");
    }
    System.exit (0);
}
----------------------------------------

public static void main (String args []) {
    final int NUM_ACROSS = 3;
    final int NUM_DOWN = 5;
    for (int row = 1;
    row <= NUM_DOWN; row ++) {
        if (row == 1 || row == NUM_DOWN / 2 + 1 || row == NUM_DOWN) for (int column = 2;
        column <= NUM_ACROSS; column ++) System.out.print ("*");

        System.out.println ("*");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49277007_49277352_1_23
49277007_52984103_1_19
Title: The highest even number in a array 
----------------------------------------

public static void main (String [] args) {
    int [] a = new int [] {10, 46, 78, 32, 3, 80, 92, 11, 39, 57};
    System.out.println (Arrays.toString (a));
    int largest = Integer.MIN_VALUE;
    for (int number : a) {
        if (number % 2 == 1) {
            continue;
        }
        if (number > largest) {
            largest = number;
        }
    }
    System.out.println (largest);
}
----------------------------------------

public static void main (String [] args) {
    int [] arr = {31, - 2, 3, - 4, 9, 3, 8, 11, 7};
    int maxEven, firstEven = 1;
    for (int i = 0;
    i < arr.length; i ++) if (arr [i] % 2 == 0) {
        firstEven = arr [i];
        break;
    }

    maxEven = firstEven;
    for (int j = 0;
    j < arr.length; j ++) if (arr [j] % 2 == 0 && arr [j] > maxEven) maxEven = arr [j];

    if (maxEven == 1) System.out.println ("No even numbers in this array!");
    else System.out.println ("The maximum even number is: " + maxEven);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49277068_49277882_8_50
49277068_49284570_8_51
Title: Application with reentrantLock condition hangs on sometimes 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread receiverThread = new Thread (() -> {
        try {
            for (int i = 0;
            i < 10; i ++) {
                reentrantLock.lock ();
                while (state) {
                    CONDITION_PRODUCED.await ();
                }
                state = true;
                System.out.println ("Received");
                CONDITION_RECEIVED.signal ();
                reentrantLock.unlock ();
            }
        } catch (InterruptedException e) {
            Thread.currentThread ().interrupt ();
        }
    });
    Thread senderThread = new Thread (() -> {
        try {
            for (int i = 0;
            i < 10; i ++) {
                reentrantLock.lock ();
                while (! state) {
                    CONDITION_RECEIVED.await ();
                }
                state = false;
                System.out.println ("Produced");
                CONDITION_PRODUCED.signal ();
                reentrantLock.unlock ();
            }
        } catch (InterruptedException e) {
            Thread.currentThread ().interrupt ();
        }
    });
    receiverThread.setName ("received");
    senderThread.setName ("Producer");
    receiverThread.start ();
    senderThread.start ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread receiverThread = new Thread (() -> {
        for (int i = 0;
        i < 100; i ++) {
            reentrantLock.lock ();
            try {
                while (! dataAvailale) {
                    CONDITION_PRODUCED.await ();
                }
                dataAvailale = false;
                System.out.println ("Received " + i);
                CONDITION_RECEIVED.signal ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
            reentrantLock.unlock ();
        }
    });
    Thread senderThread = new Thread (() -> {
        for (int i = 0;
        i < 100; i ++) {
            reentrantLock.lock ();
            while (dataAvailale) {
                try {
                    CONDITION_RECEIVED.await ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
            dataAvailale = true;
            System.out.println ("Produced " + i);
            CONDITION_PRODUCED.signal ();
            reentrantLock.unlock ();
        }
    });
    receiverThread.setName ("received");
    senderThread.setName ("Producer");
    receiverThread.start ();
    Thread.sleep (50);
    senderThread.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49312621_49312927_3_21
49312621_49313759_1_28
Title: "Remove from map from List<map<keyvalue>> if key belongs in the list" 
----------------------------------------

public static void main (String args []) {
    List < Map < String, Integer > > db = new LinkedList < Map < String, Integer > > ();
    Map < String, Integer > item = new HashMap < String, Integer > ();
    item.put ("a", 1);
    item.put ("b", 2);
    item.put ("c", 3);
    db.add (item);
    List < String > excludeList = Arrays.asList ("a");
    List < Map < String, Integer > > newDb = db.stream ().map (sample -> {
        Map < String, Integer > newSample = new HashMap < String, Integer > (sample);
        excludeList.forEach (key -> newSample.remove (key));
        return newSample;
    }).collect (Collectors.toList ());
    System.out.println (db);
    System.out.println (newDb);
}
----------------------------------------

public static void main (String [] args) {
    List < String > removeList = Arrays.asList ("a", "d", "e");
    List < Map < String, Integer > > maps = new ArrayList < > ();
    Map < String, Integer > map1 = new HashMap < > ();
    map1.put ("a", 1);
    map1.put ("b", 2);
    map1.put ("c", 3);
    maps.add (map1);
    Map < String, Integer > map2 = new HashMap < > ();
    map2.put ("e", 1);
    map2.put ("f", 2);
    map2.put ("g", 3);
    maps.add (map2);
    for (String string : removeList) {
        for (Map < String, Integer > eachMap : maps) {
            eachMap.remove (string);
        }
    }
    System.out.println (maps);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49316355_49316547_1_26
49316355_49316737_1_24
Title: Java Array Subtraction 
----------------------------------------

static int sub (int i, int j) {
    int result;
    int [] [] tab = new int [i] [j];
    if (i % 2 == 0 || j % 2 == 0) {
        result = 0;
    } else {
        for (int k = 0;
        k < i; k ++) {
            for (int l = 0;
            l < j; l ++) {
                tab [k] [l] = (int) (Math.random () * 99);
            }
        }
        int horizontalSum = 0;
        int verticalSum = 0;
        for (int k = 0;
        k < i; k ++) {
            horizontalSum += tab [(i / 2)] [k];
        }
        for (int l = 0;
        l < j; l ++) {
            verticalSum += tab [l] [(j / 2)];
        }
        result = horizontalSum - verticalSum;
    }
    return result;
}
----------------------------------------

static int sub (int [] [] array) {
    if (array.length % 2 == 0) return 0;

    for (int [] x : array) {
        if (x.length % 2 == 0) return 0;

    }
    int result = 0;
    int middle = array.length / 2;
    for (int i : array [middle]) {
        result += i;
    }
    for (int i = 0;
    i < array [middle].length; i ++) {
        result -= array [i] [middle];
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49327331_49327880_27_44
49327331_49327880_8_46
Title: What is the best way of accessing dialog controls from within inner classes? 
----------------------------------------

public void onClick (View view) {
    int checkPermission = ContextCompat.checkSelfPermission (ApplicationClass.getInstance (), Manifest.permission.CALL_PHONE);
    if (checkPermission != PackageManager.PERMISSION_GRANTED) {
        ActivityCompat.requestPermissions (context, new String [] {Manifest.permission.CALL_PHONE}, REQUEST_CALL);
    } else {
        Intent callIntent = new Intent (Intent.ACTION_CALL);
        callIntent.setData (Uri.parse ("373548474"));
        context.startActivity (callIntent);
    }
}
----------------------------------------

public void onClick (View view) {
    final Dialog dialog = new Dialog (ApplicationClass.getInstance ());
    dialog.setTitle ("Delegate");
    dialog.setContentView (R.layout.dialog_deleagte_access_profile);
    final Button callBtn = (Button) dialog.findViewById (R.id.call_btn);
    Button emailBtn = (Button) dialog.findViewById (R.id.call_btn);
    CircularImageView imgView = dialog.findViewById (R.id.imageView2);
    dialog.show ();
    callBtn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            int checkPermission = ContextCompat.checkSelfPermission (ApplicationClass.getInstance (), Manifest.permission.CALL_PHONE);
            if (checkPermission != PackageManager.PERMISSION_GRANTED) {
                ActivityCompat.requestPermissions (context, new String [] {Manifest.permission.CALL_PHONE}, REQUEST_CALL);
            } else {
                Intent callIntent = new Intent (Intent.ACTION_CALL);
                callIntent.setData (Uri.parse ("373548474"));
                context.startActivity (callIntent);
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4932947_7283106_101_109
4932947_7283106_57_124
Title: Sending SMS Problem from Blackberry Device 
----------------------------------------

public void run () {
    try {
        System.out.println ("Message Sent Successfully : TextMessage");
        Dialog.alert ("Message Sent Successfully : TextMessage");
    } catch (Exception e) {
        System.out.println ("Exception **1 : " + e.toString ());
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    if (RadioInfo.getNetworkType () == RadioInfo.NETWORK_CDMA) {
        DatagramConnection dc = null;
        try {
            dc = (DatagramConnection) Connector.open ("sms://" + no);
            byte [] data = msg.getBytes ();
            Datagram dg = dc.newDatagram (dc.getMaximumLength ());
            dg.setData (data, 0, data.length);
            dc.send (dg);
            UiApplication.getUiApplication ().invokeLater (new Runnable () {
                public void run () {
                    try {
                        System.out.println ("Message Sent Successfully : Datagram");
                        Dialog.alert ("Message Sent Successfully : Datagram");
                    } catch (Exception e) {
                        System.out.println ("Exception **1 : " + e.toString ());
                        e.printStackTrace ();
                    }
                }}

            );
        } catch (Exception e) {
            System.out.println ("Exception 1 : " + e.toString ());
            e.printStackTrace ();
        } finally {
            try {
                dc.close ();
                dc = null;
            } catch (IOException e) {
                System.out.println ("Exception 2 : " + e.toString ());
                e.printStackTrace ();
            }
        }
    } else {
        MessageConnection conn = null;
        try {
            conn = (MessageConnection) Connector.open ("sms://" + no);
            TextMessage tmsg = (TextMessage) conn.newMessage (MessageConnection.TEXT_MESSAGE);
            tmsg.setAddress ("sms://" + no);
            tmsg.setPayloadText (msg);
            conn.send (tmsg);
            UiApplication.getUiApplication ().invokeLater (new Runnable () {
                public void run () {
                    try {
                        System.out.println ("Message Sent Successfully : TextMessage");
                        Dialog.alert ("Message Sent Successfully : TextMessage");
                    } catch (Exception e) {
                        System.out.println ("Exception **1 : " + e.toString ());
                        e.printStackTrace ();
                    }
                }}

            );
        } catch (Exception e) {
            System.out.println ("Exception 3 : " + e.toString ());
            e.printStackTrace ();
        } finally {
            try {
                conn.close ();
                conn = null;
            } catch (IOException e) {
                System.out.println ("Exception 4 : " + e.toString ());
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4932947_7283106_101_109
4932947_7283106_67_75
Title: Sending SMS Problem from Blackberry Device 
----------------------------------------

public void run () {
    try {
        System.out.println ("Message Sent Successfully : TextMessage");
        Dialog.alert ("Message Sent Successfully : TextMessage");
    } catch (Exception e) {
        System.out.println ("Exception **1 : " + e.toString ());
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("Message Sent Successfully : Datagram");
        Dialog.alert ("Message Sent Successfully : Datagram");
    } catch (Exception e) {
        System.out.println ("Exception **1 : " + e.toString ());
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4932947_7283106_57_124
4932947_7283106_67_75
Title: Sending SMS Problem from Blackberry Device 
----------------------------------------

public void run () {
    if (RadioInfo.getNetworkType () == RadioInfo.NETWORK_CDMA) {
        DatagramConnection dc = null;
        try {
            dc = (DatagramConnection) Connector.open ("sms://" + no);
            byte [] data = msg.getBytes ();
            Datagram dg = dc.newDatagram (dc.getMaximumLength ());
            dg.setData (data, 0, data.length);
            dc.send (dg);
            UiApplication.getUiApplication ().invokeLater (new Runnable () {
                public void run () {
                    try {
                        System.out.println ("Message Sent Successfully : Datagram");
                        Dialog.alert ("Message Sent Successfully : Datagram");
                    } catch (Exception e) {
                        System.out.println ("Exception **1 : " + e.toString ());
                        e.printStackTrace ();
                    }
                }}

            );
        } catch (Exception e) {
            System.out.println ("Exception 1 : " + e.toString ());
            e.printStackTrace ();
        } finally {
            try {
                dc.close ();
                dc = null;
            } catch (IOException e) {
                System.out.println ("Exception 2 : " + e.toString ());
                e.printStackTrace ();
            }
        }
    } else {
        MessageConnection conn = null;
        try {
            conn = (MessageConnection) Connector.open ("sms://" + no);
            TextMessage tmsg = (TextMessage) conn.newMessage (MessageConnection.TEXT_MESSAGE);
            tmsg.setAddress ("sms://" + no);
            tmsg.setPayloadText (msg);
            conn.send (tmsg);
            UiApplication.getUiApplication ().invokeLater (new Runnable () {
                public void run () {
                    try {
                        System.out.println ("Message Sent Successfully : TextMessage");
                        Dialog.alert ("Message Sent Successfully : TextMessage");
                    } catch (Exception e) {
                        System.out.println ("Exception **1 : " + e.toString ());
                        e.printStackTrace ();
                    }
                }}

            );
        } catch (Exception e) {
            System.out.println ("Exception 3 : " + e.toString ());
            e.printStackTrace ();
        } finally {
            try {
                conn.close ();
                conn = null;
            } catch (IOException e) {
                System.out.println ("Exception 4 : " + e.toString ());
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("Message Sent Successfully : Datagram");
        Dialog.alert ("Message Sent Successfully : Datagram");
    } catch (Exception e) {
        System.out.println ("Exception **1 : " + e.toString ());
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49334112_49334212_1_15
49334112_49334364_21_35
Title: How can I use values stored in an array to another method to do a calculation? 
----------------------------------------

static int [] calculateBonus (int [] val) {
    int [] bonusVal = new int [val.length];
    for (int j = 0;
    j < val.length; j ++) {
        if (val [j] > 10 && val [j] != 11) {
            bonus [j] = (val [j] - 10) / 2;
        } else if (val [j] < 10) {
            bonus [j] = ((val [j] / 2) - 5);
        } else if (val [j] == 10 || val [j] == 11) {
            bonus [j] = 0;
        }

    }
    return bonusVal;
}
----------------------------------------

static double [] calculateBonus (int [] val) {
    int count = val.length;
    double [] bonus = new double [count];
    for (int j = 0;
    j < count; j ++) {
        double value = 0.0;
        if (val [j] > 11) {
            value = (val [j] - 10.0) / 2.0;
        } else if (val [j] < 10.0) {
            value = ((val [j] / 2.0) - 5.0);
        }

        bonus [j] = value;
    }
    return bonus;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49334807_49334871_1_18
49334807_49335664_7_24
Title: Censoring words with regex in java 
----------------------------------------

public static void main (String args []) {
    String toCensor = "you can add the dirty words here";
    String censorRegex1 = "([cC]?)+([hH])+[uU]+[jJ]+([uU+]?)";
    String censorRegex2 = "[kK]+[Uu]+[rR]+[wW]+[aA]+";
    Map < String, String > censorMap = new HashMap < String, String > ();
    censorMap.put (censorRegex1, "c***u");
    censorMap.put (censorRegex2, "k***a");
    for (Map.Entry < String, String > e : censorMap.entrySet ()) {
        toCensor = toCensor.replaceAll (e.getKey (), e.getValue ());
    }
    System.out.println (toCensor);
}
----------------------------------------

public static void main (String [] args) {
    String [] filterArray = new String [] {"FWORD"};
    Map < String, String > filterMap = new HashMap < > ();
    for (String f : filterArray) {
        String replacement = f.charAt (0) + StringUtils.leftPad ("*", (f.length () - 2), '*') + f.charAt (f.length () - 1);
        filterMap.put ("(?i)\\b" + f + "\\b", replacement);
    }
    String result = "This is example message with bad words like FWORD";
    for (Map.Entry < String, String > filter : filterMap.entrySet ()) {
        result = result.replaceAll (filter.getKey (), filter.getValue ());
    }
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49344198_49344229_1_14
49344198_49344437_7_17
Title: "create and write files  return boolean" 
----------------------------------------

public static boolean q1 () {
    String fileName = "location.txt", toFind = "statistical";
    try (BufferedReader br = new BufferedReader (new FileReader (new File (fileName)))) {
        String line;
        while ((line = br.readLine ()) != null) {
            if (line.contains (toFind)) {
                return true;
            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------

public static boolean q1 () throws IOException {
    Path path = Paths.get ("location.txt");
    try (Stream < String > lines = Files.lines (path)) {
        return lines.anyMatch (line -> line.contains ("statistical"));
    } catch (FileNotFoundException e) {
        return false;
    } catch (UncheckedIOException e) {
        throw e.getCause ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49345294_49345414_1_14
49345294_49345489_9_24
Title: take input from console and parse in java 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter number of input : ");
    Integer total = scanner.nextInt ();
    Integer [] array = new Integer [total];
    for (int i = 0;
    i < total; i ++) {
        array [i] = scanner.nextInt ();
    }
    scanner.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    String a = s.nextLine ();
    String [] b = (a.split (","));
    for (int i = 0;
    i < b.length; i ++) {
        System.out.println (b [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49355907_49356109_41_53
49355907_49357644_1_22
Title: make a string displayed as a box 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter a phrase or word!");
    String phrase = scan.nextLine ();
    String capPhrase = phrase.toUpperCase ();
    int phraseLength = capPhrase.length ();
    printTopRow (capPhrase, phraseLength);
    printIntermediateBoxRows (capPhrase, phraseLength);
    printLastRow (capPhrase, phraseLength);
}
----------------------------------------

public static void main (String [] args) {
    try (Scanner scan = new Scanner (System.in)) {
        System.out.println ("Enter a phrase or word!");
        String phrase = scan.nextLine ();
        phrase = phrase.toUpperCase ();
        phrase = cleanUpWordBoundaries (phrase);
        for (int letter = 0;
        letter < phrase.length (); letter ++) {
            System.out.print (phrase.charAt (letter) + " ");
        }
        System.out.println ();
        printSidePhrase (phrase);
        for (int letter = phrase.length () - 1;
        letter >= 0; letter --) {
            System.out.print (phrase.charAt (letter) + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_108_125
4939809_4941578_186_214
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

public void insert (final T value) {
    while (! lowerStack.isEmpty () && lowerStack.peek ().compareTo (value) > 0) {
        move (lowerStack, higherStack);
    }
    while (! higherStack.isEmpty () && higherStack.peek ().compareTo (value) < 0) {
        move (higherStack, lowerStack);
    }
    assert lowerStack.isEmpty () || lowerStack.peek ().compareTo (value) <= 0;
    assert higherStack.isEmpty () || higherStack.peek ().compareTo (value) >= 0;
    lowerStack.push (value);
}
----------------------------------------

private void insert (final T value, final Stack < T > targetStack, final Stack < T > tempHoldingStack) {
    final int oldTargetStackSize = targetStack.size ();
    final int oldHoldingStackSize = tempHoldingStack.size ();
    int movedItems = 0;
    while (! targetStack.isEmpty () && targetStack.peek ().compareTo (value) > 0) {
        move (targetStack, tempHoldingStack);
        movedItems ++;
    }
    assert targetStack.isEmpty () || targetStack.peek ().compareTo (value) <= 0;
    assert movedItems == 0 || tempHoldingStack.peek ().compareTo (value) >= 0;
    targetStack.push (value);
    while (movedItems > 0) {
        move (tempHoldingStack, targetStack);
        movedItems --;
    }
    assert targetStack.size () == oldTargetStackSize + 1;
    assert tempHoldingStack.size () == oldHoldingStackSize;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_108_125
4939809_4941578_61_78
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

public void insert (final T value) {
    while (! lowerStack.isEmpty () && lowerStack.peek ().compareTo (value) > 0) {
        move (lowerStack, higherStack);
    }
    while (! higherStack.isEmpty () && higherStack.peek ().compareTo (value) < 0) {
        move (higherStack, lowerStack);
    }
    assert lowerStack.isEmpty () || lowerStack.peek ().compareTo (value) <= 0;
    assert higherStack.isEmpty () || higherStack.peek ().compareTo (value) >= 0;
    lowerStack.push (value);
}
----------------------------------------

public void insert (final T value) {
    while (! mainStack.isEmpty () && mainStack.peek ().compareTo (value) > 0) {
        move (mainStack, tempHoldingStack);
    }
    assert mainStack.isEmpty () || mainStack.peek ().compareTo (value) <= 0;
    assert tempHoldingStack.isEmpty () || tempHoldingStack.peek ().compareTo (value) >= 0;
    mainStack.push (value);
    while (! tempHoldingStack.isEmpty ()) {
        move (tempHoldingStack, mainStack);
    }
    assert tempHoldingStack.isEmpty ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_147_158
4939809_4941578_48_58
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

public void load (final List < T > startState) {
    oddStack.clear ();
    evenStack.clear ();
    clearMoves ();
    for (final T item : startState) {
        if (item.hashCode () % 2 == 1) {
            oddStack.push (item);
        } else {
            evenStack.push (item);
        }
    }
}
----------------------------------------

public void load (final List < T > startState) {
    mainStack.clear ();
    tempHoldingStack.clear ();
    clearMoves ();
    T lastItem = null;
    for (final T item : startState) {
        mainStack.push (item);
        assert lastItem == null || item.compareTo (lastItem) >= 0;
        lastItem = item;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_147_158
4939809_4941578_95_105
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

public void load (final List < T > startState) {
    oddStack.clear ();
    evenStack.clear ();
    clearMoves ();
    for (final T item : startState) {
        if (item.hashCode () % 2 == 1) {
            oddStack.push (item);
        } else {
            evenStack.push (item);
        }
    }
}
----------------------------------------

public void load (final List < T > startState) {
    lowerStack.clear ();
    higherStack.clear ();
    clearMoves ();
    T lastItem = null;
    for (final T item : startState) {
        lowerStack.push (item);
        assert lastItem == null || item.compareTo (lastItem) >= 0;
        lastItem = item;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_186_214
4939809_4941578_61_78
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

private void insert (final T value, final Stack < T > targetStack, final Stack < T > tempHoldingStack) {
    final int oldTargetStackSize = targetStack.size ();
    final int oldHoldingStackSize = tempHoldingStack.size ();
    int movedItems = 0;
    while (! targetStack.isEmpty () && targetStack.peek ().compareTo (value) > 0) {
        move (targetStack, tempHoldingStack);
        movedItems ++;
    }
    assert targetStack.isEmpty () || targetStack.peek ().compareTo (value) <= 0;
    assert movedItems == 0 || tempHoldingStack.peek ().compareTo (value) >= 0;
    targetStack.push (value);
    while (movedItems > 0) {
        move (tempHoldingStack, targetStack);
        movedItems --;
    }
    assert targetStack.size () == oldTargetStackSize + 1;
    assert tempHoldingStack.size () == oldHoldingStackSize;
}
----------------------------------------

public void insert (final T value) {
    while (! mainStack.isEmpty () && mainStack.peek ().compareTo (value) > 0) {
        move (mainStack, tempHoldingStack);
    }
    assert mainStack.isEmpty () || mainStack.peek ().compareTo (value) <= 0;
    assert tempHoldingStack.isEmpty () || tempHoldingStack.peek ().compareTo (value) >= 0;
    mainStack.push (value);
    while (! tempHoldingStack.isEmpty ()) {
        move (tempHoldingStack, mainStack);
    }
    assert tempHoldingStack.isEmpty ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4939809_4941578_48_58
4939809_4941578_95_105
Title: Implementing a Priority Stack with two stacks 
----------------------------------------

public void load (final List < T > startState) {
    mainStack.clear ();
    tempHoldingStack.clear ();
    clearMoves ();
    T lastItem = null;
    for (final T item : startState) {
        mainStack.push (item);
        assert lastItem == null || item.compareTo (lastItem) >= 0;
        lastItem = item;
    }
}
----------------------------------------

public void load (final List < T > startState) {
    lowerStack.clear ();
    higherStack.clear ();
    clearMoves ();
    T lastItem = null;
    for (final T item : startState) {
        lowerStack.push (item);
        assert lastItem == null || item.compareTo (lastItem) >= 0;
        lastItem = item;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49399633_49399912_1_28
49399633_49400403_1_13
Title: Encountered Issues Using Multiple Methods on the Same Code 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter Number of employees : ");
    int totalEmployeeCount = sc.nextInt ();
    System.out.println ("## totalEmployeeCount : " + totalEmployeeCount);
    String [] employeeNames = new String [totalEmployeeCount];
    int [] employeeSoldCount = new int [totalEmployeeCount];
    String name;
    int count;
    for (int index = 0;
    index < totalEmployeeCount; index ++) {
        System.out.print ("Enter employee name : ");
        name = sc.next ();
        System.out.print ("Enter employee sale count : ");
        count = sc.nextInt ();
        employeeNames [index] = name;
        employeeSoldCount [index] = count;
    }
    System.out.println ("---------------- Pringting all info ----------------");
    for (int i = 0;
    i < employeeNames.length; i ++) {
        System.out.println ("name : " + employeeNames [i] + " & sale count : " + employeeSoldCount [i]);
    }
    findTheAverageOfTotalSales (employeeSoldCount);
    findTheHighestSaleNumber (employeeSoldCount);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] names = {"Employee A", "Employee B", "Employee C", "Employee D", "Employee E", "Employee F", "Employee G", "Employee H", "Employee I", "Employee J"};
    System.out.print ("Enter the sales numbers, in dollars,  for each 
     employee: ");
    int [] sales = new int [10];
    for (int i = 0;
    i < 10; i ++) {
        sales [i] = sc.nextInt ();
    }
    double average = getAverage (sales);
    int index = indexOfHighestSale (sales);
    print (average, names [index], sales [index], "hooray");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49400131_49400206_1_10
49400131_49400412_24_42
Title: Android : How to get a reference of a button defined in resource XML and not in Activity XML 
----------------------------------------

public View getView (int position,@Nullable
View convertView,@NonNull
ViewGroup parent) {
    Button btn = (Button) v.findViewById (R.id.btn);
    btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            myFancyMethod (v);
        }}

    )
}
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    String name = getItem (position);
    View view = convertView;
    if (view == null) {
        LayoutInflater vi = (LayoutInflater) context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        view = vi.inflate (resourceId, null);
    }
    TextView mTextView = (TextView) view.findViewById (R.id.ridedetails);
    mTextview.setText (name);
    Button mButton = (Button) view.findViewById (R.id.button);
    mButton.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View view) {
            Toast.makeText (context, name, Toast.LENGTH_SHORT).show ();
        }}

    );
    return view;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49406549_49406619_1_21
49406549_49406680_1_12
Title: JAVA how would I calculate the sum of each row in a 2 dimensional array? 
----------------------------------------

public static int [] sum (int [] [] array) {
    int [] result = new int [array.length];
    int total;
    for (int i = 0;
    i < array.length; i ++) {
        total = 0;
        for (int k = 0;
        k < array [i].length; k ++) {
            total += array [i] [k];
        }
        result [i] = total;
    }
    return result;
}
----------------------------------------

public static int [] sum (int [] [] array) {
    List < Integer > rowTotal = new ArrayList < > ();
    int total = 0;
    for (int i = 0;
    i < array.length; i ++) {
        for (int k = 0;
        k < array [i].length; k ++) {
            total = total + array [i] [k];
        }
        rowTotal.add (total);
        total = 0;
    }
    return rowTotal.stream ().mapToInt (i -> i).toArray ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49406549_49406619_1_21
49406549_49406870_1_11
Title: JAVA how would I calculate the sum of each row in a 2 dimensional array? 
----------------------------------------

public static int [] sum (int [] [] array) {
    int [] result = new int [array.length];
    int total;
    for (int i = 0;
    i < array.length; i ++) {
        total = 0;
        for (int k = 0;
        k < array [i].length; k ++) {
            total += array [i] [k];
        }
        result [i] = total;
    }
    return result;
}
----------------------------------------

public static List < Integer > sum (int [] [] array) {
    List < Integer > total = new ArrayList < > ();
    for (int i = 0;
    i < array.length; i ++) {
        int sum = 0;
        for (int k = 0;
        k < array [i].length; k ++) {
            sum = sum + array [i] [k];
        }
        total.add (sum);
    }
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49409379_49409472_16_28
49409379_49409489_1_13
Title: How to properly assign a variable a Boolean value and test for it? 
----------------------------------------

public String toString () {
    String halfDay;
    if (amPm == true) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------

public String toString () {
    String halfDay;
    if (amPm) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49409379_49409472_16_28
49409379_49409511_1_14
Title: How to properly assign a variable a Boolean value and test for it? 
----------------------------------------

public String toString () {
    String halfDay;
    if (amPm == true) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------

public String toString () {
    String halfDay = "";
    if (amPm == true) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49409379_49409489_1_13
49409379_49409511_1_14
Title: How to properly assign a variable a Boolean value and test for it? 
----------------------------------------

public String toString () {
    String halfDay;
    if (amPm) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------

public String toString () {
    String halfDay = "";
    if (amPm == true) {
        halfDay = "P.M.";
    } else {
        halfDay = "A.M.";
    }
    return hour + ":" + minute + ":" + second + " " + halfDay + ".";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49410048_49410140_1_13
49410048_49410181_1_13
Title: Java Observer/Observable 
----------------------------------------

public void update (Observable arg0, Object arg1) {
    String [] labels = new String [5];
    if (! (arg0 instanceof BDCommande)) System.out.println ("Objet émetteur inconnu\n");

    if (arg1 instanceof String []) {
        labels = (String []) arg1;
    } else System.out.println ("Type de message inconnu");

    int num = Integer.parseInt (labels [0]);
}
----------------------------------------

public void update (Observable arg0, Object arg1) {
    String [] labels = new String [5];
    if (! (arg0 instanceof BDCommande)) {
        System.out.println ("Objet émetteur inconnu\n");
    }
    if (arg1 instanceof String []) {
        labels = (String []) arg1;
    } else {
        System.out.println ("Type de message inconnu");
    }
    int num = Integer.parseInt (labels [0]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49412101_49425580_131_166
49412101_49425580_75_99
Title: Is there any way to pass Observable<String> into AbstractInputStreamContent? 
----------------------------------------

public int read (byte [] b, int off, int len) throws IOException {
    if (off < 0 || len < 0 || off >= b.length || off + len > b.length) {
        throw new IndexOutOfBoundsException ("b.length=" + b.length + ", off=" + off + ", len=" + len);
    }
    for (;;) {
        byte [] a = awaitBufferIfNecessary ();
        if (a == null) {
            Throwable ex = error;
            if (ex != null) {
                if (ex instanceof IOException) {
                    throw (IOException) ex;
                }
                throw new IOException (ex);
            }
            return - 1;
        }
        int idx = index;
        if (idx == a.length) {
            index = 0;
            bytes = null;
            upstream.get ().request (1);
        } else {
            int r = 0;
            while (idx < a.length && len > 0) {
                b [off] = a [idx];
                idx ++;
                off ++;
                r ++;
                len --;
            }
            index = idx;
            return r;
        }
    }
}
----------------------------------------

public int read () throws IOException {
    for (;;) {
        byte [] a = awaitBufferIfNecessary ();
        if (a == null) {
            Throwable ex = error;
            if (ex != null) {
                if (ex instanceof IOException) {
                    throw (IOException) ex;
                }
                throw new IOException (ex);
            }
            return - 1;
        }
        int idx = index;
        if (idx == a.length) {
            index = 0;
            bytes = null;
            upstream.get ().request (1);
        } else {
            int result = a [idx] & 0xFF;
            index = idx + 1;
            return result;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49419177_49419564_1_17
49419177_49419989_3_32
Title: Finding the element with the lowest difference in an ArrayList when compared to a constant 
----------------------------------------

public void deliver (double miles, int boxes) {
    if (! cars.isEmpty ()) {
        int smallest = cars.get (0).getBoxCapacity ();
        Car deliveryCar = cars.get (0);
        for (Car car : cars) {
            if (car.getBoxCapacity () >= boxes && car.getBoxCapacity () < smallest) {
                deliveryCar = car;
            }
        }
        System.out.println ("Delivering with " + deliveryCar.getPlate ());
    }
}
----------------------------------------

public void deliver (List < Car > cars, double miles, int minimumBoxCapacity) {
    if ((cars != null) && (cars.size () > 0)) {
        int indexOfBestMatch = - 1;
        for (int i = 0;
        i < cars.size (); i ++) {
            if (cars.get (i).getBoxCapacity () > minimumBoxCapacity) {
                if (indexOfBestMatch < 0) {
                    indexOfBestMatch = i;
                } else {
                    if (cars.get (i).getBoxCapacity () < cars.get (indexOfBestMatch).getBoxCapacity ()) {
                        indexOfBestMatch = i;
                    }
                }
            }
        }
        if (indexOfBestMatch >= 0) {
            System.out.println ("Delivering with " + cars.get (indexOfBestMatch).getPlate ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49423078_49424417_7_24
49423078_49425219_6_15
Title: The best way to keep the main method running 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Hello");
    ExecutorService threadPool = Executors.newFixedThreadPool (1);
    Runnable task = () -> {
        try {
            Thread.sleep (1000);
            System.out.println ("This is from Task");
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    };
    threadPool.execute (task);
    threadPool.shutdown ();
}
----------------------------------------

public static void main (String [] args) {
    Runnable runnable = new Runnable () {
        public void run () {
            System.out.println ("Running Task ...");
        }}

    ;
    ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor ();
    service.scheduleAtFixedRate (runnable, 0, 1, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49436768_49478726_64_95
49436768_49478726_8_38
Title: How to avoid Stack Overflow errors in infinitely recursive method? 
----------------------------------------

public void run () {
    try {
        while (running) {
            if (! connection.isOpen ()) {
                if (connected == true) {
                    logEntryService.logWarning (LogEntry.CONNECTIVITY, "Lost " + connectionType + " connection to " + intfc.getName () + "(" + intfc.getIp () + ") on port " + port);
                }
                connected = false;
                setStatus ("Disconnected");
                monitoringThread.interrupt ();
            } else {
                connected = true;
            }
            TimeUnit.SECONDS.sleep (connectionMonitorIntervalInSeconds);
        }
    } catch (InterruptedException ex) {
        logEntryService.logDebug (LogEntry.CONNECTIVITY, "Monitoring thread for " + connectionType + " connection to " + intfc.getName () + " interrupted");
    }
}
----------------------------------------

public void run () {
    while (running) {
        if (! connected) {
            try {
                connect ();
            } catch (HL7Exception ex) {
                connected = false;
                setStatus ("Disconnected");
                try {
                    TimeUnit.SECONDS.sleep (connectionRetryIntervalInSeconds);
                } catch (InterruptedException ex2) {
                }
            }
        }
        try {
            TimeUnit.MILLISECONDS.sleep (500);
        } catch (InterruptedException ex2) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49443285_49443358_1_10
49443285_49443399_1_10
Title: Search animal method for animal class 
----------------------------------------

public Animal search (String name) {
    Animal result = null;
    for (Animal a : animals) {
        if (name.equals (a.getName ())) {
            result = a;
        }
    }
    return result;
}
----------------------------------------

public Animal search (String name) {
    Animal result = null;
    for (Animal a : animals) {
        if (name.equals (a.getName ())) {
            result = a;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49448108_49448257_1_15
49448108_49448346_1_15
Title: Handle MalformedURLException exception inside try catch block 
----------------------------------------

public static byte [] fetchAttachmentFromThisURL (String path) {
    String urlString = ORBEON_BASE + path;
    ByteArrayOutputStream baos = new ByteArrayOutputStream ();
    try (InputStream is = new URL (urlString).openStream ()) {
        int n;
        byte [] byteChunk = new byte [4096];
        while ((n = is.read (byteChunk)) > 0) {
            baos.write (byteChunk, 0, n);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return baos.toByteArray ();
}
----------------------------------------

public static byte [] fetchAttachmentFromThisURL (String path) {
    String urlString = "" + path;
    ByteArrayOutputStream baos = new ByteArrayOutputStream ();
    try {
        URL obj = new URL (urlString);
        int n;
        byte [] byteChunk = new byte [4096];
        while ((n = obj.openStream ().read (byteChunk)) > 0) {
            baos.write (byteChunk, 0, n);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    return baos.toByteArray ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49462397_51708975_1_17
49462397_53576567_1_32
Title: Codility Tape Equilibrium Getting zero on some cases 
----------------------------------------

public static int solution (int [] A) {
    int sum = 0, leftsum = 0, rightsum = 0, newmin = 0, min = 0;
    for (int i = 0;
    i < A.length; i ++) {
        sum = sum + A [i];
    }
    for (int i = 1;
    i < A.length; i ++) {
        leftsum = leftsum + A [i - 1];
        rightsum = sum - leftsum;
        if (i == 1) min = newmin = Math.abs (leftsum - rightsum);
        else newmin = Math.abs (leftsum - rightsum);

        min = Math.min (min, newmin);
    }
    return min;
}
----------------------------------------

public int solution (int [] A) {
    int l = A.Length;
    int mid = l % 2 > 0 ? (l / 2) : (l / 2) - 1;
    long ls = 0;
    long rs = 0;
    long res = long.MaxValue;
    long shared = 0;
    for (int i = 0, j = l - 1;
    i < l; i ++, j --) {
        ls = ls + A [i];
        rs = rs + A [j];
        if (i >= mid && i < l - 1) {
            if (i == j) shared = A [i];
            else if (i > j) shared = shared + A [i] + A [j];

            rs = rs - shared;
            res = res < Math.Abs (ls - rs) ? res : Math.Abs (ls - rs);
            rs = rs + shared;
            ls = ls - shared;
            res = res < Math.Abs (ls - rs) ? res : Math.Abs (ls - rs);
            ls = ls + shared;
        }
    }
    return (int) res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49466727_49466783_3_33
49466727_49466872_1_10
Title: Multiple for loop in java with conditions 
----------------------------------------

public static void main (String [] args) {
    String a = "hi";
    String b = "hey";
    String c = "hello";
    int len1 = a.length ();
    int len2 = b.length ();
    int len3 = c.length ();
    int max = 0;
    if (len1 > len2 && len1 > len3) max = len1;
    else if (len2 > len1 && len2 > len3) max = len2;
    else if (len3 > len1 && len3 > len2) max = len3;

    for (int i = 0;
    i <= max; i ++) {
        String c1 = "";
        String c2 = "";
        String c3 = "";
        if (i >= a.length ()) c1 = "";
        else c1 = "" + a.charAt (i);

        if (i >= b.length ()) c2 = "";
        else c2 = "" + b.charAt (i);

        if (i >= c.length ()) c3 = "";
        else c3 = "" + c.charAt (i);

        printCharMerge (c1, c2, c3);
    }
}
----------------------------------------

public static void main (String [] args) {
    String a = "hi", b = "hey", c = "hello";
    int max = Math.max (a.length (), Math.max (b.length (), c.length ()));
    for (int i = 0;
    i < max; i ++) {
        Character x = i >= a.length () ? null : a.charAt (i), y = i >= b.length () ? null : b.charAt (i), z = i >= c.length () ? null : c.charAt (i);
        printChar (x, y, z);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49466727_49466783_3_33
49466727_49466993_3_28
Title: Multiple for loop in java with conditions 
----------------------------------------

public static void main (String [] args) {
    String a = "hi";
    String b = "hey";
    String c = "hello";
    int len1 = a.length ();
    int len2 = b.length ();
    int len3 = c.length ();
    int max = 0;
    if (len1 > len2 && len1 > len3) max = len1;
    else if (len2 > len1 && len2 > len3) max = len2;
    else if (len3 > len1 && len3 > len2) max = len3;

    for (int i = 0;
    i <= max; i ++) {
        String c1 = "";
        String c2 = "";
        String c3 = "";
        if (i >= a.length ()) c1 = "";
        else c1 = "" + a.charAt (i);

        if (i >= b.length ()) c2 = "";
        else c2 = "" + b.charAt (i);

        if (i >= c.length ()) c3 = "";
        else c3 = "" + c.charAt (i);

        printCharMerge (c1, c2, c3);
    }
}
----------------------------------------

public static void main (String [] args) {
    String a = "hi";
    String b = "hey";
    String c = "hello";
    int len1 = a.length ();
    int len2 = b.length ();
    int len3 = c.length ();
    int max = 0;
    if (len1 > len2 && len1 > len3) max = len1;
    else if (len2 > len1 && len2 > len3) max = len2;
    else if (len3 > len1 && len3 > len2) max = len3;

    for (int i = 0;
    i <= max; i ++) {
        char c1 = getChar (a, i);
        char c2 = getChar (b, i);
        char c3 = getChar (c, i);
        printCharMerge (c1, c2, c3);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49466727_49466872_1_10
49466727_49466993_3_28
Title: Multiple for loop in java with conditions 
----------------------------------------

public static void main (String [] args) {
    String a = "hi", b = "hey", c = "hello";
    int max = Math.max (a.length (), Math.max (b.length (), c.length ()));
    for (int i = 0;
    i < max; i ++) {
        Character x = i >= a.length () ? null : a.charAt (i), y = i >= b.length () ? null : b.charAt (i), z = i >= c.length () ? null : c.charAt (i);
        printChar (x, y, z);
    }
}
----------------------------------------

public static void main (String [] args) {
    String a = "hi";
    String b = "hey";
    String c = "hello";
    int len1 = a.length ();
    int len2 = b.length ();
    int len3 = c.length ();
    int max = 0;
    if (len1 > len2 && len1 > len3) max = len1;
    else if (len2 > len1 && len2 > len3) max = len2;
    else if (len3 > len1 && len3 > len2) max = len3;

    for (int i = 0;
    i <= max; i ++) {
        char c1 = getChar (a, i);
        char c2 = getChar (b, i);
        char c3 = getChar (c, i);
        printCharMerge (c1, c2, c3);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4948529_4948560_9_17
4948529_4951567_2_22
Title: Easiest way to cause memory leak in Java? 
----------------------------------------

public static void main (String [] args) {
    while (true) {
        for (int i = 0;
        i < 100000; i ++) {
            finalizer f = new finalizer ();
        }
        System.out.println ("" + Runtime.getRuntime ().freeMemory () + " bytes free!");
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    long lastOut = System.currentTimeMillis ();
    File file = new File ("deleteme.txt");
    ObjectOutputStream out;
    try {
        out = new ObjectOutputStream (new FileOutputStream ("deleteme.txt"));
        while (true) {
            out.writeUnshared (new LittleObject ());
            if ((System.currentTimeMillis () - lastOut) > 2000) {
                lastOut = System.currentTimeMillis ();
                System.out.println ("Size " + file.length ());
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49501676_49501831_1_16
49501676_49501962_1_12
Title: How do I shift elements in an array to the left by 1 if there is a zero? 
----------------------------------------

public int [] shiftArray (int [] arr) {
    int shift = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] == 0) {
            shift ++;
        } else if (shift > 0) {
            arr [i - shift] = arr [i];
        }

    }
    for (int i = arr.length - shift;
    i < arr.length; i ++) {
        arr [i] = 0;
    }
    return null;
}
----------------------------------------

public int [] shiftArray (int [] arr) {
    for (int i = 0;
    i < arr.length - 1; i ++) {
        if ((arr [i] == 0) && (i != (arr.length - 1))) {
            int prev = arr [i];
            int next = arr [i + 1];
            arr [i] = next;
            arr [i + 1] = prev;
        }
    }
    return arr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49502363_49512451_24_43
49502363_49512451_49_62
Title: Jetty retrying requests when Exception thrown by RequestHandler 
----------------------------------------

public void handle (String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException {
    System.out.println ("MyRequestHandler.handle() - DispatcherType: " + request.getDispatcherType ());
    if (! DispatcherType.REQUEST.equals (request.getDispatcherType ())) {
        return;
    }
    baseRequest.setHandled (true);
    ByteArrayOutputStream bos = new ByteArrayOutputStream ();
    IO.copy (request.getInputStream (), bos);
    String body = new String (bos.toByteArray ());
    System.out.println ("request body: " + body);
    throw new NullPointerException ();
}
----------------------------------------

public void handle (String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException {
    System.out.println ("MyErrorHandler.handle() - DispatcherType: " + request.getDispatcherType ());
    if (! DispatcherType.ERROR.equals (request.getDispatcherType ())) {
        return;
    }
    baseRequest.setHandled (true);
    response.setStatus (HttpServletResponse.SC_SERVICE_UNAVAILABLE);
    response.setContentType ("text/plain");
    response.getWriter ().println ("Go away, you silly NPE fool");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49540916_49541089_1_18
49540916_49541263_1_20
Title: How to use variable from another class for scanner input? 
----------------------------------------

public static void dock () {
    int count = 10;
    Ship [] dock1 = new Ship [count];
    for (int i = 0;
    i < count; i ++) {
        Ship ship = new Ship ();
        System.out.println ("Enter ship's name: ");
        ship.setShipName (scan.nextLine ());
        System.out.println ("Enter ship's size: ");
        ship.setShipSize (scan.nextLine ());
        dock1 [i] = ship;
    }
    printArray (dock1);
}
----------------------------------------

public static void dock () {
    Ship [] dock1 = new Ship [10];
    for (int i = 0;
    i < 10; i ++) {
        Ship ship = new Ship ();
        System.out.println ("Enter ship's name: ");
        ship.setShipName (scan.nextLine ());
        System.out.println ("Enter ship's size: ");
        ship.setShipSize (scan.nextLine ());
        dock1 [i] = ship;
    }
    printArray (dock1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49540916_49541089_1_18
49540916_49541401_45_65
Title: How to use variable from another class for scanner input? 
----------------------------------------

public static void dock () {
    int count = 10;
    Ship [] dock1 = new Ship [count];
    for (int i = 0;
    i < count; i ++) {
        Ship ship = new Ship ();
        System.out.println ("Enter ship's name: ");
        ship.setShipName (scan.nextLine ());
        System.out.println ("Enter ship's size: ");
        ship.setShipSize (scan.nextLine ());
        dock1 [i] = ship;
    }
    printArray (dock1);
}
----------------------------------------

public static void dock () {
    System.out.println ("Enter ship's name: ");
    String name = scan.nextLine ();
    System.out.println ("Enter ship's size: ");
    String size = scan.nextLine ();
    System.out.println ("Enter the ships dock:");
    int i = Integer.valueOf (scan.nextLine ());
    if (i >= 0 && i < 10 && dock1 [i] == null) {
        dock1 [i] = new Ship (name, size);
    } else {
        System.out.println ("Couldn't dock");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49540916_49541263_1_20
49540916_49541401_45_65
Title: How to use variable from another class for scanner input? 
----------------------------------------

public static void dock () {
    Ship [] dock1 = new Ship [10];
    for (int i = 0;
    i < 10; i ++) {
        Ship ship = new Ship ();
        System.out.println ("Enter ship's name: ");
        ship.setShipName (scan.nextLine ());
        System.out.println ("Enter ship's size: ");
        ship.setShipSize (scan.nextLine ());
        dock1 [i] = ship;
    }
    printArray (dock1);
}
----------------------------------------

public static void dock () {
    System.out.println ("Enter ship's name: ");
    String name = scan.nextLine ();
    System.out.println ("Enter ship's size: ");
    String size = scan.nextLine ();
    System.out.println ("Enter the ships dock:");
    int i = Integer.valueOf (scan.nextLine ());
    if (i >= 0 && i < 10 && dock1 [i] == null) {
        dock1 [i] = new Ship (name, size);
    } else {
        System.out.println ("Couldn't dock");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49542187_49542402_14_22
49542187_49542490_5_15
Title: Why no deadlock on the same object in this program - Java Multithreading 
----------------------------------------

synchronized void foo (String msg) {
    System.out.println ("Foo Started: " + msg);
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    bar (msg);
}
----------------------------------------

void foo () {
    synchronized (foolock) {
        System.out.println ("Foo Started");
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        bar ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49542187_49542402_24_32
49542187_49542490_17_27
Title: Why no deadlock on the same object in this program - Java Multithreading 
----------------------------------------

synchronized void bar (String msg) {
    System.out.println ("bar started: " + msg);
    try {
        Thread.sleep (1000);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    foo (msg);
}
----------------------------------------

void bar () {
    synchronized (barlock) {
        System.out.println ("bar started");
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
        foo ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49567018_49567083_1_23
49567018_49567116_1_34
Title: Remove method in double linked list isn't working? 
----------------------------------------

public void remove (int data) {
    if (length == 0) {
        return;
    }
    if (head.data == data) {
        head = head.next;
        length --;
    }
    Node current = head;
    while (current != null) {
        if (current.data != data) {
            current = current.next;
        } else {
            if (current.next == null) {
                current.pre.next = null;
            } else {
                current.pre.next = current.next;
                current.next.pre = current.pre;
            }
            length --;
        }
    }
}
----------------------------------------

public void remove (int data) {
    if (isEmpty ()) {
        throw new NoSuchElementException ();
    }
    if (this.size == 1 && this.head.getData () == data) {
        this.head = this.tail = null;
        this.size --;
        return;
    }
    if (this.head.getData () == data) {
        this.head = this.head.getNext ();
        this.head.setPrevious (null);
        this.size --;
        return;
    }
    if (this.tail.getData () == data) {
        this.tail = this.tail.getPrevious ();
        this.tail.setNext (null);
        this.size --;
        return;
    }
    for (Node < T > current = this.head;
    current != null; current = current.getNext ()) {
        if (current.getData () == data) {
            Node < T > previous = current.getPrevious ();
            Node < T > next = current.getNext ();
            previous.setNext (next);
            next.setPrevious (previous);
            this.size --;
            return;
        }
    }
    throw new NoSuchElementException ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49568589_49568771_1_13
49568589_49623608_1_32
Title: Sorting using collections for multiple parameter with null values 
----------------------------------------

@Override
public int compare (UserDto dto1, UserDto dto2) {
    int result;
    if ((result = nullSort (dto1.getLastLoginDate (), dto2.getLastLoginDate (), false, false)) != 0) return result;

    if ((result = nullSort (dto1.getLastActionDate (), dto2.getLastActionDate (), false, false)) != 0) return result;

    if ((result = nullSort (dto1.getLastName (), dto2.getLastName (), true, false)) != 0) return result;

    if ((result = nullSort (dto1.getFirstName (), dto2.getFirstName (), true, false)) != 0) return result;

    return 0;
}
----------------------------------------

public int compare (UserDto userDto1, UserDto userDto2) {
    DateFormat format = new SimpleDateFormat ("yyyy-MM-dd");
    if (userDto1.getLastLoginDate () != null && userDto2.getLastLoginDate () != null && userDto2.getLastLoginDate ().compareTo (userDto1.getLastLoginDate ()) != 0) {
        String Date1 = format.format (userDto1.getLastLoginDate ());
        String Date2 = format.format (userDto2.getLastLoginDate ());
        if (Date1.equals (Date2)) {
            if (userDto1.getLastActionDate () != null && userDto2.getLastActionDate () != null && userDto2.getLastActionDate ().compareTo (userDto1.getLastActionDate ()) != 0) {
                String Date3 = format.format (userDto1.getLastActionDate ());
                String Date4 = format.format (userDto2.getLastActionDate ());
                if (Date3.equals (Date4)) {
                    if (userDto1.getLastName () != null && userDto2.getLastName () != null && userDto1.getLastName ().compareTo (userDto2.getLastName ()) != 0) {
                        return userDto1.getLastName ().compareTo (userDto2.getLastName ());
                    }
                } else {
                    return userDto2.getLastActionDate ().compareTo (userDto1.getLastActionDate ());
                }
            }
        } else {
            return userDto2.getLastLoginDate ().compareTo (userDto1.getLastLoginDate ());
        }
    }
    if (userDto1.getLastLoginDate () != null && userDto2.getLastLoginDate () == null) {
        return - 1;
    }
    if (userDto1.getLastLoginDate () == null && userDto2.getLastLoginDate () != null) {
        return 1;
    }
    if (userDto1.getLastLoginDate () == null && userDto2.getLastLoginDate () == null) {
        return userDto1.getLastName ().compareTo (userDto2.getLastName ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49584607_49584798_107_120
49584607_49584798_25_56
Title: "If RecyclerView scrolls then item id changes. How to resolve this?" 
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "imgCancelDownloadNote position = " + position);
    Log.e ("PDFListAdapter", "imgCancelDownloadNote = " + pdfList.getId ());
    final AlertDialog alertDialog = new AlertDialog.Builder (context, R.style.AlertDialogStyle).create ();
    alertDialog.setTitle ("Alert");
    alertDialog.setMessage ("Are you sure want to cancel download?");
    alertDialog.setButton ("Yes", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            alertDialog.hide ();
            downloader.cancel (true);
        }}

    );
    alertDialog.show ();
}
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "layout_open_pdf position = " + position);
    Log.e ("PDFListAdapter", "layout_open_pdf = " + pdfList.getId ());
    if (databaseNotes.isPurchasedNoteSaved (pdfList.getId (), final_nav_opt_name)) {
        DownloadeNotesModel downloadeNotesModel = databaseNotes.getNotesByID (pdfList.getId (), final_nav_opt_name);
        Intent intent = new Intent (context, PDFResults.class);
        intent.putExtra ("pdfList", downloadeNotesModel.getFileLocation ());
        intent.putExtra ("from", "database");
        intent.putExtra ("getSubjectName", downloadeNotesModel.getSubjectName ());
        context.startActivity (intent);
    } else {
        final AlertDialog.Builder alertDialog = new AlertDialog.Builder (context);
        alertDialog.setTitle ("Alert");
        alertDialog.setCancelable (true);
        alertDialog.setMessage ("Notes not downloaded. Do you want to download it?");
        alertDialog.setPositiveButton ("Yes", new DialogInterface.OnClickListener () {
            @RequiresApi (api = Build.VERSION_CODES.JELLY_BEAN_MR2)
            public void onClick (DialogInterface dialog, int which) {
                downloader = new Downloader ();
                new CheckSpace ().execute (pdfList.getFileName ());
            }}

        );
        alertDialog.show ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49584607_49584798_107_120
49584607_49584798_62_102
Title: "If RecyclerView scrolls then item id changes. How to resolve this?" 
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "imgCancelDownloadNote position = " + position);
    Log.e ("PDFListAdapter", "imgCancelDownloadNote = " + pdfList.getId ());
    final AlertDialog alertDialog = new AlertDialog.Builder (context, R.style.AlertDialogStyle).create ();
    alertDialog.setTitle ("Alert");
    alertDialog.setMessage ("Are you sure want to cancel download?");
    alertDialog.setButton ("Yes", new DialogInterface.OnClickListener () {
        public void onClick (DialogInterface dialog, int which) {
            alertDialog.hide ();
            downloader.cancel (true);
        }}

    );
    alertDialog.show ();
}
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "imgDownloadNote position = " + position);
    Log.e ("PDFListAdapter", "imgDownloadNote = " + pdfList.getId ());
    pdfList = pdfModelClasses.get (position);
    deepak = index;
    if (! databaseNotes.isPurchasedNoteSaved (pdfList.getId (), final_nav_opt_name)) {
        if (UtilsMethods.isNetworkAvailable (context)) {
            int result = ContextCompat.checkSelfPermission (context, Manifest.permission.READ_EXTERNAL_STORAGE);
            if (result == PackageManager.PERMISSION_GRANTED) {
                downloader = new Downloader ();
                new CheckSpace ().execute (pdfList.getFileName ());
                holder1.imgDownloadNote.setVisibility (View.VISIBLE);
                holder1.imgCancelDownloadNote.setVisibility (View.VISIBLE);
                holder1.progress_download_note.setVisibility (View.VISIBLE);
            } else {
                Toast.makeText (context, "storage permission is not granted", Toast.LENGTH_SHORT).show ();
                PermissionCheck.checkWritePermission (context);
                holder1.imgDownloadNote.setVisibility (View.GONE);
                holder1.imgCancelDownloadNote.setVisibility (View.GONE);
                holder1.progress_download_note.setVisibility (View.GONE);
            }
        } else {
            holder1.imgDownloadNote.setVisibility (View.GONE);
            holder1.imgCancelDownloadNote.setVisibility (View.GONE);
            holder1.progress_download_note.setVisibility (View.GONE);
            context.startActivity (new Intent (context, NoInternetActivity.class));
        }
    } else {
        holder1.imgDownloadNote.setVisibility (View.GONE);
        holder1.imgCancelDownloadNote.setVisibility (View.GONE);
        holder1.progress_download_note.setVisibility (View.GONE);
        Log.e ("", "Not in db");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49584607_49584798_25_56
49584607_49584798_62_102
Title: "If RecyclerView scrolls then item id changes. How to resolve this?" 
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "layout_open_pdf position = " + position);
    Log.e ("PDFListAdapter", "layout_open_pdf = " + pdfList.getId ());
    if (databaseNotes.isPurchasedNoteSaved (pdfList.getId (), final_nav_opt_name)) {
        DownloadeNotesModel downloadeNotesModel = databaseNotes.getNotesByID (pdfList.getId (), final_nav_opt_name);
        Intent intent = new Intent (context, PDFResults.class);
        intent.putExtra ("pdfList", downloadeNotesModel.getFileLocation ());
        intent.putExtra ("from", "database");
        intent.putExtra ("getSubjectName", downloadeNotesModel.getSubjectName ());
        context.startActivity (intent);
    } else {
        final AlertDialog.Builder alertDialog = new AlertDialog.Builder (context);
        alertDialog.setTitle ("Alert");
        alertDialog.setCancelable (true);
        alertDialog.setMessage ("Notes not downloaded. Do you want to download it?");
        alertDialog.setPositiveButton ("Yes", new DialogInterface.OnClickListener () {
            @RequiresApi (api = Build.VERSION_CODES.JELLY_BEAN_MR2)
            public void onClick (DialogInterface dialog, int which) {
                downloader = new Downloader ();
                new CheckSpace ().execute (pdfList.getFileName ());
            }}

        );
        alertDialog.show ();
    }
}
----------------------------------------

public void onClick (View v) {
    Log.e ("PDFListAdapter", "imgDownloadNote position = " + position);
    Log.e ("PDFListAdapter", "imgDownloadNote = " + pdfList.getId ());
    pdfList = pdfModelClasses.get (position);
    deepak = index;
    if (! databaseNotes.isPurchasedNoteSaved (pdfList.getId (), final_nav_opt_name)) {
        if (UtilsMethods.isNetworkAvailable (context)) {
            int result = ContextCompat.checkSelfPermission (context, Manifest.permission.READ_EXTERNAL_STORAGE);
            if (result == PackageManager.PERMISSION_GRANTED) {
                downloader = new Downloader ();
                new CheckSpace ().execute (pdfList.getFileName ());
                holder1.imgDownloadNote.setVisibility (View.VISIBLE);
                holder1.imgCancelDownloadNote.setVisibility (View.VISIBLE);
                holder1.progress_download_note.setVisibility (View.VISIBLE);
            } else {
                Toast.makeText (context, "storage permission is not granted", Toast.LENGTH_SHORT).show ();
                PermissionCheck.checkWritePermission (context);
                holder1.imgDownloadNote.setVisibility (View.GONE);
                holder1.imgCancelDownloadNote.setVisibility (View.GONE);
                holder1.progress_download_note.setVisibility (View.GONE);
            }
        } else {
            holder1.imgDownloadNote.setVisibility (View.GONE);
            holder1.imgCancelDownloadNote.setVisibility (View.GONE);
            holder1.progress_download_note.setVisibility (View.GONE);
            context.startActivity (new Intent (context, NoInternetActivity.class));
        }
    } else {
        holder1.imgDownloadNote.setVisibility (View.GONE);
        holder1.imgCancelDownloadNote.setVisibility (View.GONE);
        holder1.progress_download_note.setVisibility (View.GONE);
        Log.e ("", "Not in db");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49588590_49588644_2_64
49588590_49588667_4_77
Title: While loop prints one line twice when validating if string is double ( Basic Calculator ) 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String answer = "yes";
    double finalValue;
    while (answer.equalsIgnoreCase ("Yes")) {
        System.out.print ("Enter First Number: ");
        String firstNumber = scanner.next ();
        while (! firstNumber.matches ("[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?")) {
            System.out.print ("Please enter number only: ");
            firstNumber = scanner.next ();
        }
        System.out.print ("Enter an operator (+, -, / or *): ");
        char operator = scanner.next ().charAt (0);
        System.out.print ("Enter Second Number: ");
        String secondNumber = scanner.next ();
        while (! secondNumber.matches ("[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?")) {
            System.out.print ("Please enter number only: ");
            secondNumber = scanner.nextLine ();
        }
        switch (operator) {
            case '+' :
                finalValue = Double.parseDouble (firstNumber) + Double.parseDouble (secondNumber);
                System.out.println (finalValue);
                break;
            case '-' :
                finalValue = Double.parseDouble (firstNumber) - Double.parseDouble (secondNumber);
                System.out.println (finalValue);
                break;
            case '*' :
                finalValue = Double.parseDouble (firstNumber) * Double.parseDouble (secondNumber);
                System.out.println (finalValue);
                break;
            case '/' :
                if (secondNumber.equals ("0")) {
                    System.out.println ("a number can not be divided by 0.");
                } else {
                    finalValue = Double.parseDouble (firstNumber) / Double.parseDouble (secondNumber);
                    System.out.println (finalValue);
                }
                break;
            default :
                System.out.println ("Operator entered incorrectly.");
                break;
        }
        System.out.print ("Do you want another operation? (type yes to continue): ");
        answer = scanner.next ();
    }
    System.out.println ("Bye.");
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    String answer = "yes";
    double finalValue;
    while (answer.equalsIgnoreCase ("Yes")) {
        System.out.print ("Enter First Number: ");
        Double firstNumber = null;
        while (firstNumber == null) {
            try {
                firstNumber = Double.valueOf (scanner.nextLine ());
            } catch (NumberFormatException ex) {
                System.out.println ("Please enter number only.");
            }
        }
        System.out.print ("Enter an operator (+, -, / or *): ");
        String line = null;
        while (line == null || line.length () == 0) {
            line = scanner.nextLine ();
        }
        char operator = line.charAt (0);
        System.out.print ("Enter Second Number: ");
        Double secondNumber = null;
        while (secondNumber == null) {
            try {
                secondNumber = Double.valueOf (scanner.nextLine ());
            } catch (NumberFormatException ex) {
                System.out.println ("Please enter number only.");
                secondNumber = null;
                scanner.reset ();
            }
        }
        switch (operator) {
            case '+' :
                finalValue = firstNumber + secondNumber;
                System.out.println (finalValue);
                break;
            case '-' :
                finalValue = firstNumber - secondNumber;
                System.out.println (finalValue);
                break;
            case '*' :
                finalValue = firstNumber * secondNumber;
                System.out.println (finalValue);
                break;
            case '/' :
                if (secondNumber == 0d) {
                    System.out.println ("a number can not be divided by 0.");
                } else {
                    finalValue = firstNumber / secondNumber;
                    System.out.println (finalValue);
                }
                break;
            default :
                System.out.println ("Operator entered incorrectly.");
                break;
        }
        System.out.print ("Do you want another operation? (type yes to continue): ");
        answer = scanner.next ();
    }
    System.out.println ("Bye.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49592943_49598803_197_211
49592943_49598803_50_77
Title: Edit ListCell on MenuItem click 
----------------------------------------

public void handle (KeyEvent t) {
    if (t.getCode () == KeyCode.ENTER) {
        if (textField.getText ().trim () != "" && textField.getText ().trim ().length () > 3) {
            commitEdit (textField.getText ());
            setGraphic (null);
            setGraphic (getGraphic ());
        }
    } else if (t.getCode () == KeyCode.ESCAPE) {
        cancelEdit ();
    }

}
----------------------------------------

public void handle (ActionEvent ev) {
    i ++;
    String lang = "New Language " + i;
    languages.getItems ().add (lang);
    if (i == 10) {
        addItem.setDisable (true);
    }
    languages.getSelectionModel ().clearSelection ();
    languages.getSelectionModel ().select (languages.getItems ().size () - 1);
    cell.setItem (languages.getSelectionModel ().getSelectedItem ());
    manually_selected = true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49592943_49598803_197_211
49592943_49598803_88_108
Title: Edit ListCell on MenuItem click 
----------------------------------------

public void handle (KeyEvent t) {
    if (t.getCode () == KeyCode.ENTER) {
        if (textField.getText ().trim () != "" && textField.getText ().trim ().length () > 3) {
            commitEdit (textField.getText ());
            setGraphic (null);
            setGraphic (getGraphic ());
        }
    } else if (t.getCode () == KeyCode.ESCAPE) {
        cancelEdit ();
    }

}
----------------------------------------

public void handle (ActionEvent ev) {
    if (languages.getSelectionModel ().getSelectedItems ().size () - 1 > 0) {
        if (i > 0) {
            i = (languages.getItems ().size () - languages.getSelectionModel ().getSelectedItems ().size ()) - 1;
        }
        ArrayList < String > delete_data = new ArrayList < String > (languages.getSelectionModel ().getSelectedItems ());
        languages.getItems ().removeAll (delete_data);
    }
    languages.getItems ().remove (cell.getItem ());
    if (i > 0) i = 0;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49592943_49598803_50_77
49592943_49598803_88_108
Title: Edit ListCell on MenuItem click 
----------------------------------------

public void handle (ActionEvent ev) {
    i ++;
    String lang = "New Language " + i;
    languages.getItems ().add (lang);
    if (i == 10) {
        addItem.setDisable (true);
    }
    languages.getSelectionModel ().clearSelection ();
    languages.getSelectionModel ().select (languages.getItems ().size () - 1);
    cell.setItem (languages.getSelectionModel ().getSelectedItem ());
    manually_selected = true;
}
----------------------------------------

public void handle (ActionEvent ev) {
    if (languages.getSelectionModel ().getSelectedItems ().size () - 1 > 0) {
        if (i > 0) {
            i = (languages.getItems ().size () - languages.getSelectionModel ().getSelectedItems ().size ()) - 1;
        }
        ArrayList < String > delete_data = new ArrayList < String > (languages.getSelectionModel ().getSelectedItems ());
        languages.getItems ().removeAll (delete_data);
    }
    languages.getItems ().remove (cell.getItem ());
    if (i > 0) i = 0;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49603808_49605318_175_188
49603808_49605318_192_204
Title: easy java swing arrayList.size() error? constructor parameter override? arrayList.size() not working? java 
----------------------------------------

public void actionPerformed (ActionEvent event) {
    areaN.setText ("");
    areaS.setText ("");
    list ++;
    if (list >= qz.getQuestionListSize ()) {
        list = 0;
    }
    areaN.setText (qz.getQuestion (list));
    areaS.setText (qz.getAnswer (list));
}
----------------------------------------

public void actionPerformed (ActionEvent event) {
    for (int z = 0;
    z < qz.getQuestionListSize (); z ++) {
        if (! areaN.equals (qz.getQuestion (z))) {
            areaS.setText (" ");
            areaS.setText ("CUSTOM QUESTION HAS NOT BEEN SAVED!");
        }
    }
    areaS.setText ("");
    areaS.setText (qz.getAnswer (list));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49607619_49607685_4_28
49607619_50854774_3_23
Title: java sort names with respect to location in descending order 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String name [] = new String [5];
    System.out.println ("enter the name");
    for (int i = 0;
    i < name.length; i ++) {
        name [i] = sc.nextLine ();
    }
    String location [] = new String [5];
    System.out.println ("enter the  location");
    for (int i = 0;
    i < location.length; i ++) {
        location [i] = sc.nextLine ();
    }
    Arrays.sort (location);
    Arrays.sort (location, Collections.reverseOrder ());
    System.out.println ("Name and location:");
    System.out.println (name [0] + " " + location [0]);
    System.out.println (name [1] + " " + location [1]);
    System.out.println (name [2] + " " + location [2]);
    System.out.println (name [3] + " " + location [3]);
    System.out.println (name [4] + " " + location [4]);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String name [] = new String [5];
    String location [] = new String [5];
    for (int i = 0;
    i < name.length; i ++) {
        System.out.println ("enter the name");
        name [i] = sc.nextLine ();
        System.out.println ("enter the  location");
        location [i] = sc.nextLine ();
    }
    Arrays.sort (location, Collections.reverseOrder ());
    System.out.println ("Name and location:");
    System.out.println (name [0] + " " + location [0]);
    System.out.println (name [1] + " " + location [1]);
    System.out.println (name [2] + " " + location [2]);
    System.out.println (name [3] + " " + location [3]);
    System.out.println (name [4] + " " + location [4]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49619361_49620174_11_26
49619361_49620174_42_54
Title: Java - Killing all parent and child thread spawned through scheduledExecutorService 
----------------------------------------

public void run () {
    try {
        System.out.println ("Started parent");
        while (true) {
            ChildRunnable child = new ChildRunnable (getChildName ());
            executor.schedule (child, 1, TimeUnit.SECONDS);
            System.out.println ("Submitted " + child.getName ());
            Thread.sleep (2000);
        }
    } catch (InterruptedException e) {
        System.out.println ("Parent thread was interrupted and is stopping");
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("Started " + name);
        while (true) {
            Thread.sleep (1000);
        }
    } catch (InterruptedException e) {
        System.out.println (name + " was interrupted and is stopping");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49637776_49652047_55_81
49637776_49652047_88_130
Title: Bi-direction multithreaded socket connection 
----------------------------------------

public void run () {
    BufferedReader in = null;
    try {
        in = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
        String command;
        while ((command = in.readLine ()) != null) {
            if (command.equalsIgnoreCase ("OK") || command.equalsIgnoreCase ("ERR")) queue.put (command);
            else if (command.startsWith ("move")) {
                System.out.println ("A player made a move: command=" + command);
            } else System.out.println ("Unrecognized command=" + command);

        }
    } catch (IOException e) {
        e.printStackTrace ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } finally {
        try {
            in.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    Random random = new Random ();
    Socket socket = null;
    try {
        ServerSocket ss = new ServerSocket (5001);
        while (true) {
            System.out.println ("Listening for new connections");
            socket = ss.accept ();
            System.out.println ("New session has started");
            PrintWriter out = new PrintWriter (socket.getOutputStream (), true);
            BufferedReader in = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
            String command;
            while ((command = in.readLine ()) != null) {
                System.out.println ("Got command=" + command);
                int responseType = random.nextInt (3);
                if (responseType == 0) out.println ("OK");
                else if (responseType == 1) out.println ("ERR");
                else {
                    out.println ("move 1 [3,4]");
                    out.println ("OK");
                }

            }
            in.close ();
            out.close ();
            socket.close ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            socket.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49642796_49643745_2_13
49642796_49644064_1_22
Title: How to reverse a String converting int to String? 
----------------------------------------

public static void main (String sr []) {
    Scanner s = new Scanner (System.in);
    System.out.println ("Type the integer you'd like to be reversed:");
    int num = s.nextInt ();
    String strNum = "" + num;
    String inputString = String.valueOf (num);
    StringBuilder builder = new StringBuilder (inputString);
    System.out.println (builder.reverse ());
}
----------------------------------------

public static void main (String [] args) {
    Stack < String > stack = new Stack < > ();
    String retVal = "";
    Scanner s = new Scanner (System.in);
    try {
        String nextStr = String.valueOf (s.nextInt ());
        for (int i = 0;
        i < nextStr.length (); i ++) {
            stack.push (String.valueOf (nextStr.charAt (i)));
        }
        for (int i = 0;
        i < nextStr.length (); i ++) {
            retVal += stack.pop ();
        }
        System.out.println (retVal);
    } finally {
        s.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643050_1_20
49643014_49643084_1_15
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int maxNo = 0;
    int storeLargestNo = 0;
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        int temp = name [i].length ();
        System.out.println ("Number of each " + temp);
        if (maxNo < temp) {
            maxNo = temp;
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        System.out.println ("and its length is " + longestWord.length ());
        if (name [i].length () > longestWord.length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643050_1_20
49643014_49643198_1_14
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int maxNo = 0;
    int storeLargestNo = 0;
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        int temp = name [i].length ();
        System.out.println ("Number of each " + temp);
        if (maxNo < temp) {
            maxNo = temp;
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        if (longestWord.length () < name [i].length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name is :" + longestWord);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643050_1_20
49643014_49646480_1_16
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int maxNo = 0;
    int storeLargestNo = 0;
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        int temp = name [i].length ();
        System.out.println ("Number of each " + temp);
        if (maxNo < temp) {
            maxNo = temp;
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int strlen = 0;
    String longestName = null;
    for (String rec : name) {
        rec.length ();
        if (rec.length () > strlen) {
            strlen = rec.length ();
            longestName = rec.toString ();
        }
    }
    System.out.println ("Longest Name is : " + longestName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643084_1_15
49643014_49643198_1_14
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        System.out.println ("and its length is " + longestWord.length ());
        if (name [i].length () > longestWord.length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        if (longestWord.length () < name [i].length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name is :" + longestWord);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643084_1_15
49643014_49646480_1_16
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        System.out.println ("and its length is " + longestWord.length ());
        if (name [i].length () > longestWord.length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name found is " + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int strlen = 0;
    String longestName = null;
    for (String rec : name) {
        rec.length ();
        if (rec.length () > strlen) {
            strlen = rec.length ();
            longestName = rec.toString ();
        }
    }
    System.out.println ("Longest Name is : " + longestName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49643014_49643198_1_14
49643014_49646480_1_16
Title: Finding the largest Number 
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    String longestWord = "";
    for (int i = 0;
    i < name.length; i ++) {
        if (longestWord.length () < name [i].length ()) {
            longestWord = name [i];
        }
    }
    System.out.println ("longest Name is :" + longestWord);
}
----------------------------------------

public static void main (String [] args) {
    String [] name = "myName is popy".split (" ");
    int strlen = 0;
    String longestName = null;
    for (String rec : name) {
        rec.length ();
        if (rec.length () > strlen) {
            strlen = rec.length ();
            longestName = rec.toString ();
        }
    }
    System.out.println ("Longest Name is : " + longestName);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49654780_49655226_1_11
49654780_49655421_5_18
Title: running through tree recursively with global variable 
----------------------------------------

public List < Integer > SortTree (Node node) {
    List < Integer > candidate = new ArrayList < Integer > ();
    if (node.getLeft () != null) {
        candidate.addAll (SortTree (node.getLeft ()));
    } else if (node.getRight () != null) {
        candidate.addAll (SortTree (node.getRight ()));
    }

    candidate.add (node.getValue ());
    return candidate;
}
----------------------------------------

private List < Integer > SortTree (Node node, List < Integer > result) {
    if (node.getLeft () != null) {
        SortTree (node.getLeft (), result);
    }
    result.add (node.getValue ());
    if (node.getRight () != null) {
        SortTree (node.getRight (), result);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
49656102_49656321_2_14
49656102_49656919_5_28
Title: Change 343 into 42 in a short chunk of Java code 
----------------------------------------

public static void main (String [] args) {
    int iters = 0;
    for (int i = 0;
    i < 7; i ++) {
        for (int j = 0;
        j < 7; j ++) {
            if (j == 6) continue;

            for (int k = 0;
            k < 7; k ++) {
                iters ++;
            }
        }
        break;
    }
    System.out.println (iters);
}
----------------------------------------

public static void main (String [] args) {
    System.setOut (new PrintStream (System.out) {
        @Override
        public void println (int x) {
            System.err.println (42);
        }}

    );
    int iters = 0;
    for (int i = 0;
    i < 7; i ++) {
        for (int j = 0;
        j < 7; j ++) {
            for (int k = 0;
            k < 7; k ++) {
                iters ++;
            }
        }
    }
    System.out.println (iters);
}
----------------------------------------
