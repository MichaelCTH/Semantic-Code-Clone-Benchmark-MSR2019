$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12481583_12481799_11_19
12481583_12481799_22_30
Title: Exception composition in Java when both first strategy and recovery strategy failed 
----------------------------------------

public void printStackTrace () {
    if (causes.isEmpty ()) {
        super.printStackTrace ();
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace ();
    }
}
----------------------------------------

public void printStackTrace (PrintStream s) {
    if (causes.isEmpty ()) {
        super.printStackTrace (s);
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12481583_12481799_11_19
12481583_12481799_33_41
Title: Exception composition in Java when both first strategy and recovery strategy failed 
----------------------------------------

public void printStackTrace () {
    if (causes.isEmpty ()) {
        super.printStackTrace ();
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace ();
    }
}
----------------------------------------

public void printStackTrace (PrintWriter s) {
    if (causes.isEmpty ()) {
        super.printStackTrace (s);
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12481583_12481799_22_30
12481583_12481799_33_41
Title: Exception composition in Java when both first strategy and recovery strategy failed 
----------------------------------------

public void printStackTrace (PrintStream s) {
    if (causes.isEmpty ()) {
        super.printStackTrace (s);
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace (s);
    }
}
----------------------------------------

public void printStackTrace (PrintWriter s) {
    if (causes.isEmpty ()) {
        super.printStackTrace (s);
        return;
    }
    for (Throwable cause : causes) {
        cause.printStackTrace (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12482786_12482891_7_15
12482786_12485082_23_45
Title: Struggle with JSplitPane 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new JavaApplication100 ().createAndShowUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ()) {
                    if ("Nimbus".equals (info.getName ())) {
                        javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
            } catch (InstantiationException ex) {
            } catch (IllegalAccessException ex) {
            } catch (UnsupportedLookAndFeelException ex) {
            }
            new TestSplitPane ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12484639_12484696_1_10
12484639_12484815_1_13
Title: why does this value not change when I turn it into a negative? 
----------------------------------------

public Rational (long a, long b) {
    numerator = a;
    denominator = b;
    boolean isNegative = false;
    if (numerator * denominator < 0) isNegative = true;

    long gd = gcd (numerator, denominator);
    numerator /= gd;
    denominator /= gd;
}
----------------------------------------

public Rational (long a, long b) {
    boolean isNegative = a < 0 || b < 0;
    a = Math.abs (a);
    b = Math.abs (b);
    for (int i = min (a, b);
    i >= 2; -- i) if (a % i == 0 && b % i == 0) {
        a /= i;
        b /= i;
    }

    numerator = isNegative ? - a : a;
    denominator = b;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12486972_12488807_7_15
12486972_12489407_8_42
Title: Main Menu Not Appearing On My Android Phone 
----------------------------------------

@Override
public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case menu_1 :
            fnRegistration ();
            return true;
    }
    return super.onOptionsItemSelected (item);
}
----------------------------------------

public boolean onOptionsItemSelected (MenuItem item) {
    switch (item.getItemId ()) {
        case R.id.menu_bookmark :
            Toast.makeText (AndroidMenusActivity.this, "Bookmark is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.menu_save :
            Toast.makeText (AndroidMenusActivity.this, "Save is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.menu_search :
            Toast.makeText (AndroidMenusActivity.this, "Search is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.menu_share :
            Toast.makeText (AndroidMenusActivity.this, "Share is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.menu_delete :
            Toast.makeText (AndroidMenusActivity.this, "Delete is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        case R.id.menu_preferences :
            Toast.makeText (AndroidMenusActivity.this, "Preferences is Selected", Toast.LENGTH_SHORT).show ();
            return true;
        default :
            return super.onOptionsItemSelected (item);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12488990_12489307_5_16
12488990_12489727_1_12
Title: How can I shorten a String join in Java? 
----------------------------------------

public String join (String a, String b, String separator) {
    if (! isEmpty (a) && ! isEmpty (b)) {
        return a + separator + b;
    }
    if (! isEmpty (a)) {
        return a;
    }
    if (! isEmpty (b)) {
        return b;
    }
    return "";
}
----------------------------------------

private static String join (String delimiter, String...parts) {
    StringBuilder builder = new StringBuilder ();
    for (String part : parts) {
        if (! isEmpty (part)) {
            if (builder.length () > 0) {
                builder.append (delimiter);
            }
            builder.append (part);
        }
    }
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12503221_14091663_1_18
12503221_14092048_1_18
Title: Get file extension in java 
----------------------------------------

public static String getFileExtension (String filename) {
    if (filename == null) {
        return null;
    }
    int lastUnixPos = filename.lastIndexOf ('/');
    int lastWindowsPos = filename.lastIndexOf ('\\');
    int indexOfLastSeparator = Math.max (lastUnixPos, lastWindowsPos);
    int extensionPos = filename.lastIndexOf ('.');
    int lastSeparator = indexOfLastSeparator;
    int indexOfExtension = lastSeparator > extensionPos ? - 1 : extensionPos;
    int index = indexOfExtension;
    if (index == - 1) {
        return "";
    } else {
        return filename.substring (index + 1);
    }
}
----------------------------------------

String getFileExtension (String url) {
    String [] urlSplit = url.split ("/");
    String filename = urlSplit [urlSplit.length - 1];
    String [] nameSplit = filename.split ("[.]");
    StringBuffer fileExtension = new StringBuffer ();
    if (nameSplit.length > 1) {
        for (int index = 1;
        index < nameSplit.length; index ++) {
            if (index != nameSplit.length - 1) fileExtension.append (nameSplit [index] + ".");
            else fileExtension.append (nameSplit [index]);

        }
    } else {
        fileExtension.append (nameSplit [0]);
    }
    return fileExtension.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12505876_12505913_4_23
12505876_12505989_1_21
Title: How do I get this variable to be global? 
----------------------------------------

public static void main (String [] args) {
    Scanner console = new Scanner (System.in);
    System.out.println ("*** Basic Wage Calculator ***");
    System.out.printf ("%n");
    System.out.println ("Enter start time in 24:00 format");
    String startTime = console.nextLine ();
    String [] tokens = startTime.split (":");
    double starttimeHours = Double.parseDouble (tokens [0]);
    double startMinutes = Double.parseDouble (tokens [1]);
    double wage = 0;
    if (starttimeHours >= 6 && starttimeHours <= 8 || starttimeHours >= 9 && starttimeHours <= 19) {
        wage = 1.6;
    } else if (starttimeHours >= 9 && starttimeHours >= 10 && startMinutes >= 01) {
        wage = 43;
    } else {
        wage = 987;
    }

    System.out.println (wage);
}
----------------------------------------

public static void main (String [] args) {
    String name = "Makoto";
    Integer numPhones = new Integer (1);
    if (name.length () == 6) {
        String newWord = "Wow!";
        System.out.println (name + " " + newWord);
    } else {
        String oldWord = "bummer.";
        System.out.println (name + " " + oldWord);
    }
    for (int i = 0;
    i < args.length; i ++) {
        String word = "hello";
        System.out.println (word + args [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12522348_12522518_20_29
12522348_12522518_35_44
Title: How can I make a cell in a ListView in Android expand and contract vertically when it's touched? 
----------------------------------------

public void onClick (View v) {
    TextView tv = (TextView) v;
    String [] textSplited = tv.getText ().toString ().split (" ");
    tv.setMaxLines (textSplited.length);
    StringBuilder sb = new StringBuilder ();
    for (String word : textSplited) sb.append (word + "\n");

    tv.setText (sb.toString ());
    tv.setOnClickListener (contract);
}
----------------------------------------

public void onClick (View v) {
    TextView tv = (TextView) v;
    tv.setMaxLines (1);
    String [] textSplitted = tv.getText ().toString ().split ("\n");
    StringBuilder sb = new StringBuilder ();
    for (String word : textSplitted) sb.append (word + " ");

    tv.setText (sb.toString ());
    tv.setOnClickListener (expand);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12524727_12525698_1_17
12524727_30951962_3_23
Title: Remove empty nodes from a XML recursively 
----------------------------------------

public static void main (String [] args) throws Exception {
    DocumentBuilder builder = DocumentBuilderFactory.newInstance ().newDocumentBuilder ();
    String input = "<A><B><C><C1><C11>something</C11><C12>something</C12></C1></C><D><D1><D11><D111 operation=\"create\"><![CDATA[<Node>something else</Node></D111></D11></D1><D2><D21></D21></D2></D></B></A>";
    Document document = builder.parse (new InputSource (new StringReader (input)));
    removeNodes (document);
    Transformer transformer = TransformerFactory.newInstance ().newTransformer ();
    transformer.setOutputProperty (OutputKeys.INDENT, "yes");
    StreamResult result = new StreamResult (new StringWriter ());
    transformer.transform (new DOMSource (document), result);
    System.out.println (result.getWriter ().toString ());
}
----------------------------------------

public static void main (String [] args) {
    ReadFile readFile = new ReadFile ();
    String strXml = readFile.readFileFromPath (new File ("sampleXml4.xml"));
    RemoveEmprtElement elementEmprtElement = new RemoveEmprtElement ();
    DocumentBuilder dBuilder = null;
    Document doc = null;
    try {
        dBuilder = DocumentBuilderFactory.newInstance ().newDocumentBuilder ();
        doc = dBuilder.parse (new ByteArrayInputStream (strXml.getBytes ()));
        elementEmprtElement.getEmptyNodes (doc);
        TransformerFactory tf = TransformerFactory.newInstance ();
        Transformer trans = tf.newTransformer ();
        StreamResult result = new StreamResult (new StringWriter ());
        trans.transform (new DOMSource (doc), result);
        System.out.println (result.getWriter ().toString ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12529326_12529690_1_16
12529326_12529790_10_31
Title: Creating a JSON object 
----------------------------------------

public static void main (String [] args) throws JSONException {
    JSONObject jsonObject = new JSONObject ();
    jsonObject.put ("method", "SearchBySearchConfiguration");
    JSONArray jsonArray = new JSONArray ();
    JSONObject innerRecord = new JSONObject ();
    innerRecord.put ("SearchCriteria", "%arriva");
    innerRecord.put ("IsAccountSearch", true);
    jsonArray.put (innerRecord);
    jsonObject.put ("params", jsonArray);
    System.out.println ("jsonObject :" + jsonObject);
}
----------------------------------------

public static void main (String [] args) {
    JSONObject obj = new JSONObject ();
    obj.put ("method", "SearchBySearchConfiguration");
    JSONArray list = new JSONArray ();
    JSONObject innerObj = new JSONObject ();
    innerObj.put ("SearchCriteria", "%arriva");
    innerObj.put ("IsAccountSearch", true);
    innerObj.put ("IsContactSearch", false);
    innerObj.put ("SearchByName", true);
    innerObj.put ("SearchByAddress", false);
    innerObj.put ("CRMTextValues", new JSONArray ());
    innerObj.put ("CRMCurrencyValues", new JSONArray ());
    list.add (innerObj);
    obj.put ("params", list);
    System.out.print (obj);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12533419_13936705_1_11
12533419_16141629_1_25
Title: programmatically sending text message - set expiration 
----------------------------------------

public boolean deleteSms (String smsId) {
    boolean isDelSms = false;
    try {
        mActivity.getContentResolver ().delete (Uri.parse ("content://sms/" + smsId), null, null);
        isDelSms = true;
    } catch (Exception ex) {
        isDelSms = true;
    }
    return isDelSms;
}
----------------------------------------

public boolean deleteSms (String smsId) {
    boolean isDelSms = false;
    try {
        mActivity.getContentResolver ().delete (Uri.parse ("content://sms/" + smsId), null, null);
        isDelSms = true;
        Toast.makeText (getApplicationContext (), countryCode, Toast.LENGTH_SHORT).show ();
    } catch (Exception ex) {
        isDelSms = true;
    }
    return isDelSms;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12540659_12540799_3_18
12540659_12541047_221_234
Title: browse html files in java swing 
----------------------------------------

public void hyperlinkUpdate (HyperlinkEvent e) {
    if (e.getEventType () == HyperlinkEvent.EventType.ACTIVATED) {
        JEditorPane pane = (JEditorPane) e.getSource ();
        if (e instanceof HTMLFrameHyperlinkEvent) {
            HTMLFrameHyperlinkEvent evt = (HTMLFrameHyperlinkEvent) e;
            HTMLDocument doc = (HTMLDocument) pane.getDocument ();
            doc.processHTMLFrameHyperlinkEvent (evt);
        } else {
            try {
                pane.setPage (e.getURL ());
            } catch (Throwable t) {
                t.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void hyperlinkUpdate (HyperlinkEvent event) {
    HyperlinkEvent.EventType eventType = event.getEventType ();
    if (eventType == HyperlinkEvent.EventType.ACTIVATED) {
        if (event instanceof HTMLFrameHyperlinkEvent) {
            HTMLFrameHyperlinkEvent linkEvent = (HTMLFrameHyperlinkEvent) event;
            HTMLDocument document = (HTMLDocument) displayEditorPane.getDocument ();
            document.processHTMLFrameHyperlinkEvent (linkEvent);
        } else {
            showPage (event.getURL (), true);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12550284_12550310_21_40
12550284_39139701_9_22
Title: How to code Queue in Java 
----------------------------------------

void enqueue () {
    try {
        if (count < n) {
            System.out.println ("Enter the element to be added:");
            item = Integer.parseInt (get.readLine ());
            a [rear] = item;
            rear ++;
            count ++;
        } else System.out.println ("QUEUE IS FULL");

    } catch (Exception e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------

public void enqueue (int N) {
    if (tail == (queue.length - 1)) queue = Arrays.copyOf (queue, 2 * queue.length);

    if (head == - 1) {
        head ++;
        tail ++;
        queue [head] = N;
    } else {
        tail ++;
        queue [tail] = N;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12550284_12550310_41_53
12550284_39139701_24_35
Title: How to code Queue in Java 
----------------------------------------

void dequeue () {
    if (count != 0) {
        System.out.println ("The item deleted is:" + a [front]);
        front ++;
        count --;
    } else System.out.println ("QUEUE IS EMPTY");

    if (rear == n) rear = 0;

}
----------------------------------------

public int dequeue () {
    if (head == - 1) throw new IllegalStateException ("Cannot dequeue if queue is empty");

    int firstItem = queue [head];
    if (head == tail) {
        head = - 1;
        tail = - 1;
    } else head ++;

    return firstItem;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12550284_12550310_68_100
12550284_12550324_7_34
Title: How to code Queue in Java 
----------------------------------------

public static void main (String arg []) {
    DataInputStream get = new DataInputStream (System.in);
    int ch;
    clrqueue obj = new clrqueue ();
    obj.getdata ();
    try {
        do {
            System.out.println (" 1.Enqueue  2.Dequeue  3.Display  4.Exit");
            System.out.println ("Enter the choice");
            ch = Integer.parseInt (get.readLine ());
            switch (ch) {
                case 1 :
                    obj.enqueue ();
                    break;
                case 2 :
                    obj.dequeue ();
                    break;
                case 3 :
                    obj.display ();
                    break;
            }
        } while (ch != 4);
    } catch (Exception e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Queue < String > qe = new LinkedList < String > ();
    qe.add ("b");
    qe.add ("a");
    qe.add ("c");
    qe.add ("e");
    qe.add ("d");
    Iterator it = qe.iterator ();
    System.out.println ("Initial Size of Queue :" + qe.size ());
    while (it.hasNext ()) {
        String iteratorValue = (String) it.next ();
        System.out.println ("Queue Next Value :" + iteratorValue);
    }
    System.out.println ("Queue peek :" + qe.peek ());
    System.out.println ("Queue poll :" + qe.poll ());
    System.out.println ("Final Size of Queue :" + qe.size ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12550284_12550310_68_100
12550284_39139701_45_59
Title: How to code Queue in Java 
----------------------------------------

public static void main (String arg []) {
    DataInputStream get = new DataInputStream (System.in);
    int ch;
    clrqueue obj = new clrqueue ();
    obj.getdata ();
    try {
        do {
            System.out.println (" 1.Enqueue  2.Dequeue  3.Display  4.Exit");
            System.out.println ("Enter the choice");
            ch = Integer.parseInt (get.readLine ());
            switch (ch) {
                case 1 :
                    obj.enqueue ();
                    break;
                case 2 :
                    obj.dequeue ();
                    break;
                case 3 :
                    obj.display ();
                    break;
            }
        } while (ch != 4);
    } catch (Exception e) {
        System.out.println (e.getMessage ());
    }
}
----------------------------------------

public static void main (String [] args) {
    Queue queue = new Queue ();
    queue.enqueue (10);
    queue.enqueue (20);
    queue.enqueue (30);
    queue.enqueue (40);
    queue.display ();
    int dequeue = queue.dequeue ();
    System.out.println (dequeue);
    queue.display ();
    int dequeue1 = queue.dequeue ();
    System.out.println (dequeue1);
    queue.display ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12550284_12550324_7_34
12550284_39139701_45_59
Title: How to code Queue in Java 
----------------------------------------

public static void main (String [] args) {
    Queue < String > qe = new LinkedList < String > ();
    qe.add ("b");
    qe.add ("a");
    qe.add ("c");
    qe.add ("e");
    qe.add ("d");
    Iterator it = qe.iterator ();
    System.out.println ("Initial Size of Queue :" + qe.size ());
    while (it.hasNext ()) {
        String iteratorValue = (String) it.next ();
        System.out.println ("Queue Next Value :" + iteratorValue);
    }
    System.out.println ("Queue peek :" + qe.peek ());
    System.out.println ("Queue poll :" + qe.poll ());
    System.out.println ("Final Size of Queue :" + qe.size ());
}
----------------------------------------

public static void main (String [] args) {
    Queue queue = new Queue ();
    queue.enqueue (10);
    queue.enqueue (20);
    queue.enqueue (30);
    queue.enqueue (40);
    queue.display ();
    int dequeue = queue.dequeue ();
    System.out.println (dequeue);
    queue.display ();
    int dequeue1 = queue.dequeue ();
    System.out.println (dequeue1);
    queue.display ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12551885_12552012_1_17
12551885_12552015_1_12
Title: How do the StringBuffer insert() and deleteCharAt() methods work 
----------------------------------------

public AbstractStringBuilder insert (int index, char str [], int offset, int len) {
    if ((index < 0) || (index > length ())) throw new StringIndexOutOfBoundsException (index);

    if ((offset < 0) || (len < 0) || (offset > str.length - len)) throw new StringIndexOutOfBoundsException ("offset " + offset + ", len " + len + ", str.length " + str.length);

    int newCount = count + len;
    if (newCount > value.length) expandCapacity (newCount);

    System.arraycopy (value, index, value, index + len, count - index);
    System.arraycopy (str, offset, value, index, len);
    count = newCount;
    return this;
}
----------------------------------------

public AbstractStringBuilder insert (int offset, String str) {
    if ((offset < 0) || (offset > length ())) throw new StringIndexOutOfBoundsException (offset);

    if (str == null) str = "null";

    int len = str.length ();
    ensureCapacityInternal (count + len);
    System.arraycopy (value, offset, value, offset + len, count - offset);
    str.getChars (value, offset);
    count += len;
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12554390_12590863_27_35
12554390_12590863_7_17
Title: Producer/consumer multithreading 
----------------------------------------

public void run () {
    for (int nIterations = 0;
    nIterations <= N_ITERATIONS; nIterations ++) {
        logger.info ("Produced: {}", nIterations);
        queue.put (nIterations);
    }
    queue.put (FINAL_VALUE);
    logger.info ("Produced: END (end of data production token).");
    logger.info ("Signing off.");
}
----------------------------------------

public void run () {
    while (true) {
        int consumedData = queue.take ();
        if (consumedData == Producer.FINAL_VALUE) {
            logger.info ("Consumed: END (end of data production token).");
            break;
        }
        logger.info ("Consumed: {}.", consumedData);
    }
    logger.info ("Signing off.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12557837_12561496_15_30
12557837_12561496_42_51
Title: paginated queries / iterator recipe 
----------------------------------------

protected T computeNext () {
    if (rowSet == null) {
        if (resultIter.hasNext ()) {
            rowSet = resultIter.next ().iterator ();
        } else {
            return endOfData ();
        }
    }
    if (rowSet.hasNext ()) {
        return rowSet.next ();
    } else {
        rowSet = null;
        return computeNext ();
    }
}
----------------------------------------

protected List < T > computeNext () {
    String sql = String.format ("%s limit %s offset %s", query, pageSize, page ++ * pageSize);
    List < T > results = jdbc ().queryForList (sql, paramMap, elementType);
    if (! results.isEmpty ()) {
        return results;
    } else {
        return endOfData ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12558956_12559178_16_28
12558956_12559178_1_14
Title: java Intellij error 
----------------------------------------

public void example () {
    String str = "test";
    switch (1) {
        case 1 :
            str.toString ();
            break;
        default :
            str.toString ();
            break;
    }
}
----------------------------------------

public void example () {
    String str;
    switch (1) {
        case 1 :
            str = "test";
            str.toString ();
            break;
        default :
            str.toString ();
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12563361_12563493_1_10
12563361_12563578_1_12
Title: A method that prints out a number of asteriskw for the number given 
----------------------------------------

public static void stars (int [] values) {
    for (int value : values) {
        char [] numberChars = new char [value];
        Arrays.fill (numberChars, '*');
        System.out.print (numberChars);
        System.out.print (" ");
    }
    System.out.println ();
}
----------------------------------------

public void stars (int [] values) {
    StringBuilder sb = new StringBuilder ();
    for (int val : values) {
        for (int i = 0;
        i < val; ++ i) {
            sb.append ("*");
        }
        sb.append (" ");
    }
    System.out.println (sb.toString ().trim ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12572337_23888793_321_342
12572337_23888793_354_375
Title: How to spellcheck in an SWT application 
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    String newWord = wrongWord.getText ();
    String correctedChanges = richText.getText ().replace (oldWrongWord, newWord);
    richText.setText (correctedChanges);
    ignoreButton.setText ("Ignore");
    ignoreButton.removeSelectionListener (modifiedIgnoreButtonListener);
    ignoreButton.addSelectionListener (ignoreButtonListener);
    changeButton.removeSelectionListener (modifiedChangeButtonListener);
    changeButton.addSelectionListener (changeButtonListener);
    suggestedWords.setEnabled (true);
    wrongWord.addKeyListener (new WrongWordKeyListener ());
    startSpellChecking ();
}
----------------------------------------

public void widgetSelected (SelectionEvent e) {
    ignoreButton.setText ("Ignore");
    ignoreButton.removeSelectionListener (modifiedIgnoreButtonListener);
    ignoreButton.addSelectionListener (ignoreButtonListener);
    changeButton.removeSelectionListener (modifiedChangeButtonListener);
    changeButton.addSelectionListener (changeButtonListener);
    suggestedWords.setEnabled (true);
    wrongWord.setText (oldWrongWord);
    wrongWord.addKeyListener (new WrongWordKeyListener ());
    if (suggestedWords.getItem (0).equals ("No Suggestions")) {
        changeButton.setEnabled (false);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12597468_12597653_20_47
12597468_12597753_6_13
Title: Hash function for a generic object 
----------------------------------------

public boolean equals (final Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (! (obj instanceof Address)) return false;

    final Address other = (Address) obj;
    if (country == null) {
        if (other.country != null) return false;

    } else if (! country.equals (other.country)) return false;

    if (streetAndNumber == null) {
        if (other.streetAndNumber != null) return false;

    } else if (! streetAndNumber.equals (other.streetAndNumber)) return false;

    if (zipCode == null) {
        if (other.zipCode != null) return false;

    } else if (! zipCode.equals (other.zipCode)) return false;

    return true;
}
----------------------------------------

public boolean equals (Object any) {
    if (any == this) return true;
    else if (! (any instanceof EmailAddress)) return false;
    else {
        final EmailAddress id = (EmailAddress) any;
        return mailbox.equals (id.mailbox);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12608347_12608580_1_35
12608347_12608674_1_12
Title: How can I make this more readable and cleaner? 
----------------------------------------

@Override
public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, true);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
            }
        }
    }
    for (EventPriority priority : EventPriority.values ()) {
        Map < Method, EventListener > internalMapping = getRegistry ().getMethodMap (event.getClass (), priority, false);
        if (internalMapping != null) {
            for (Entry < Method, EventListener > entry : internalMapping.entrySet ()) {
                invokeEntry (entry, event);
                if (cancellable && cancellableEvent.isCancelled ()) {
                    return;
                }
            }
        }
    }
}
----------------------------------------

@Override
public void dispatchEvent (Event event) {
    checkNotNull (event);
    CancellableEvent cancellableEvent = null;
    boolean cancellable;
    if (cancellable = event instanceof CancellableEvent) {
        cancellableEvent = (CancellableEvent) event;
        checkArgument (cancellableEvent.isCancelled ());
    }
    handleEvents (event, true);
    handleEvents (event, false, cancellableEvent);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12608828_12608852_3_35
12608828_12608871_3_31
Title: Java Exception Handling? 
----------------------------------------

public static void main (String [] args) {
    int c = 1;
    long sum = 0;
    String strFileName;
    strFileName = args [0];
    Scanner scFileData;
    try {
        scFileData = new Scanner (new File (strFileName));
    } catch (FileNotFoundException e) {
        System.out.println ("File not found!");
        System.exit (1);
    }
    while (true) {
        if (scFileData.hasNextInt ()) {
            sum = sum + scFileData.nextInt ();
            c ++;
            break;
        } else {
            System.out.println ("Enter an integr");
        }
    }
    scFileData.close ();
    System.out.println ("Number of integers: " + (c - 1));
    System.out.println ("Average = " + (float) sum / (c - 1));
}
----------------------------------------

public static void main (String [] args) {
    int c = 1;
    long sum = 0;
    String strFileName;
    strFileName = args [0];
    Scanner scFileData;
    try {
        scFileData = new Scanner (new File (strFileName));
        while (scFileData.hasNext ()) {
            sum = sum + scFileData.nextInt ();
            c ++;
        }
        scFileData.close ();
        System.out.println ("Number of integers: " + (c - 1));
        System.out.println ("Average = " + (float) sum / (c - 1));
    } catch (FileNotFoundException e) {
        System.out.println ("File not found!");
        System.exit (1);
    } catch (InputMismatchException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12609252_12609830_29_45
12609252_12631511_5_38
Title: String Array's in Java and parsing them 
----------------------------------------

public static String getDefinition (String word, String sentence) throws DefinitionNotFoundException {
    sentence = sentence.replace (" " + " ", " ");
    String [] words = sentence.split (" ");
    int wordsToJoin = word.length ();
    word = word.toUpperCase ();
    for (int i = 0;
    i < words.length - (wordsToJoin - 1); i ++) {
        String [] tryingWords = Arrays.copyOfRange (words, i, i + wordsToJoin);
        if (word.equals (makeInitialism (tryingWords))) {
            return word + ": " + buildPhrase (tryingWords);
        }
    }
    throw new DefinitionNotFoundException ();
}
----------------------------------------

public String getDefinition (String word, String sentence) {
    sentence = sentence.trim ();
    word = word.trim ();
    final int sLength = sentence.length ();
    final int wLength = word.length ();
    int startPos = 0, endPos = sLength;
    int w = 0, s = 0;
    if (equalsIgnoringCase (sentence, s, word, w)) {
        startPos = s;
        w ++;
        s ++;
    }
    for (; s < sLength; s ++) {
        if (sentence.charAt (s) == ' ') {
            if (w == 0) {
                startPos = s + 1;
            }
            if (w == wLength) {
                endPos = s;
                break;
            }
            if (equalsIgnoringCase (sentence, s + 1, word, w)) {
                w = (w < wLength) ? w + 1 : wLength;
            } else {
                w = 0;
            }
        }
    }
    return sentence.substring (startPos, endPos);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1261934_1262145_3_22
1261934_1262276_18_30
Title: "Nice general way to sort nulls to the bottom regardless?" 
----------------------------------------

static < T > Comparator < T > atEnd (final Comparator < T > comparator) {
    return new Comparator < T > () {
        public int compare (T o1, T o2) {
            if (o1 == null && o2 == null) {
                return 0;
            }
            if (o1 == null) {
                return 1;
            }
            if (o2 == null) {
                return - 1;
            }
            return comparator.compare (o1, o2);
        }}

    ;
}
----------------------------------------

public static < T > Comparator < T > atEnd (final Comparator < T > comparator) {
    return new Comparator < T > () {
        public int compare (T a, T b) {
            if (a == null && b == null) return 0;

            if (a == null) return 1;

            if (b == null) return - 1;

            return comparator.compare (a, b);
        }}

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1261934_1262145_6_20
1261934_1262276_20_28
Title: "Nice general way to sort nulls to the bottom regardless?" 
----------------------------------------

public int compare (T o1, T o2) {
    if (o1 == null && o2 == null) {
        return 0;
    }
    if (o1 == null) {
        return 1;
    }
    if (o2 == null) {
        return - 1;
    }
    return comparator.compare (o1, o2);
}
----------------------------------------

public int compare (T a, T b) {
    if (a == null && b == null) return 0;

    if (a == null) return 1;

    if (b == null) return - 1;

    return comparator.compare (a, b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1261934_1262145_6_20
1261934_1262276_34_42
Title: "Nice general way to sort nulls to the bottom regardless?" 
----------------------------------------

public int compare (T o1, T o2) {
    if (o1 == null && o2 == null) {
        return 0;
    }
    if (o1 == null) {
        return 1;
    }
    if (o2 == null) {
        return - 1;
    }
    return comparator.compare (o1, o2);
}
----------------------------------------

public int compare (T a, T b) {
    if (a == null && b == null) return 0;

    if (a == null) return - 1;

    if (b == null) return 1;

    return comparator.compare (a, b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1261934_1262276_20_28
1261934_1262276_34_42
Title: "Nice general way to sort nulls to the bottom regardless?" 
----------------------------------------

public int compare (T a, T b) {
    if (a == null && b == null) return 0;

    if (a == null) return 1;

    if (b == null) return - 1;

    return comparator.compare (a, b);
}
----------------------------------------

public int compare (T a, T b) {
    if (a == null && b == null) return 0;

    if (a == null) return - 1;

    if (b == null) return 1;

    return comparator.compare (a, b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12621081_12622746_33_50
12621081_12623933_1_35
Title: Exit gracefully from blocked process 
----------------------------------------

public boolean startService () {
    try {
        ProcessBuilder pb = new ProcessBuilder ("service.exe");
        pb.directory (new File ("C:/serviceFolder/"));
        pb.redirectErrorStream (true);
        Process p = pb.start ();
        BufferedReader reader = new BufferedReader (new InputStreamReader (p.getInputStream ()));
        String line;
        while ((line = reader.readLine ()) != null) {
            if (line.toLowerCase ().contains ("started")) {
                return true;
            }
        }
        return false;
    } catch (IOException e) {
        throw new RuntimeException ("Could not start the service.exe process", e);
    }
}
----------------------------------------

public boolean startService () {
    Callable < Boolean > start = new Callable < Boolean > () {
        @Override
        public Boolean call () throws Exception {
            ProcessBuilder pb = new ProcessBuilder ("service.exe");
            pb.directory (new File ("C:/serviceFolder/"));
            pb.redirectErrorStream (true);
            Process p = pb.start ();
            BufferedReader reader = new BufferedReader (new InputStreamReader (p.getInputStream ()));
            String line;
            while ((line = reader.readLine ()) != null) {
                if (line.toLowerCase ().contains ("started")) {
                    return true;
                }
            }
            return false;
        }}

    ;
    ExecutorService executor = Executors.newSingleThreadExecutor ();
    Future < Boolean > future = executor.submit (start);
    try {
        return future.get (1, TimeUnit.SECONDS);
    } catch (InterruptedException ignore) {
        Thread.currentThread ().interrupt ();
        return false;
    } catch (ExecutionException | TimeoutException e) {
        logger.error ("Could not start service", e);
        return false;
    } finally {
        executor.shutdownNow ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1262239_1262345_88_133
1262239_21136400_26_36
Title: Natural sort order string comparison in Java - is one built in? 
----------------------------------------

public int compare (String s1, String s2) {
    int thisMarker = 0;
    int thatMarker = 0;
    int s1Length = s1.length ();
    int s2Length = s2.length ();
    while (thisMarker < s1Length && thatMarker < s2Length) {
        String thisChunk = getChunk (s1, s1Length, thisMarker);
        thisMarker += thisChunk.length ();
        String thatChunk = getChunk (s2, s2Length, thatMarker);
        thatMarker += thatChunk.length ();
        int result = 0;
        if (isDigit (thisChunk.charAt (0)) && isDigit (thatChunk.charAt (0))) {
            int thisChunkLength = thisChunk.length ();
            result = thisChunkLength - thatChunk.length ();
            if (result == 0) {
                for (int i = 0;
                i < thisChunkLength; i ++) {
                    result = thisChunk.charAt (i) - thatChunk.charAt (i);
                    if (result != 0) {
                        return result;
                    }
                }
            }
        } else {
            result = comparator.compare (thisChunk, thatChunk);
        }
        if (result != 0) return result;

    }
    return s1Length - s2Length;
}
----------------------------------------

public int compare (String theStr1, String theStr2) {
    char [] theCharArr1 = theStr1.toCharArray ();
    char [] theCharArr2 = theStr2.toCharArray ();
    int aPosition = 0;
    if (Character.isDigit (theCharArr1 [aPosition]) && Character.isDigit (theCharArr2 [aPosition])) {
        return sortAsNumber (theCharArr1, theCharArr2, aPosition ++);
    }
    return sortAsString (theCharArr1, theCharArr2, 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12627178_12627334_2_31
12627178_12627348_18_46
Title: java IF NOT statement 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Guess a number betwwen 1 and 1000");
    Random rand = new Random ();
    int secretNumber = rand.nextInt (1000);
    Scanner keyboard = new Scanner (System.in);
    int guess;
    do {
        if (! keyboard.hasNextInt ()) {
            System.out.println ("invalid input, please use type numbers only!");
            return;
        }
        guess = keyboard.nextInt ();
        if (guess == secretNumber) System.out.println ("You WON!!! Congratulations!");
        else if (guess < secretNumber) System.out.println ("Nope, to low");
        else if (guess > secretNumber) System.out.println ("Sorry, to high");

    } while (guess != secretNumber);
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Guess a number betwwen 1 and 1000");
    Random rand = new Random ();
    int secretNumber = rand.nextInt (1000);
    Scanner keyboard = new Scanner (System.in);
    int guess = - 1;
    do {
        String g = keyboard.next ();
        if (isInteger (g)) {
            guess = Integer.parseInt (g);
            if (guess == secretNumber) System.out.println ("You WON!!! Congratulations!");
            else if (guess < secretNumber) System.out.println ("Nope, to low");
            else if (guess > secretNumber) System.out.println ("Sorry, to high");

        } else {
            System.out.println ("NaN");
        }
    } while (guess != secretNumber);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12629750_12629869_15_34
12629750_12629967_14_33
Title: java.lang.NullPointerException 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the original price of the car: ");
    OP = keyboard.nextDouble ();
    System.out.println ("Please enter the mileage factor as 0.7(high),1(average) and 1.2(low):");
    FM = keyboard.nextDouble ();
    System.out.println ("Place enter the age of the car :");
    Age = keyboard.nextDouble ();
    System.out.println ("Estimated price of the car is " + Calculation (Age, FM, OP) + " Dollers");
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Please enter the original price of the car: ");
    OP = keyboard.nextDouble ();
    System.out.println ("Please enter the mileage factor as 0.7(high),1(average) and 1.2(low):");
    FM = keyboard.nextDouble ();
    System.out.println ("Place enter the age of the car :");
    Age = keyboard.nextDouble ();
    System.out.println ("Estimated price of the car is " + Calculation (Age, FM, OP) + " Dollers");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12631862_12631889_1_15
12631862_38236640_1_17
Title: Weird characters result from reading/writing 
----------------------------------------

public static void main (String [] args) throws Exception {
    File f = new File ("in.txt");
    FileInputStream stream = new FileInputStream (f);
    BufferedReader reader = new BufferedReader (new InputStreamReader (stream, Charset.forName ("windows-1252")));
    String x;
    BufferedWriter writer = new BufferedWriter (new FileWriter (new File ("testing.txt")));
    while ((x = reader.readLine ()) != null) {
        writer.write (x);
        writer.newLine ();
    }
    writer.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    File f = new File ("in.txt");
    FileInputStream stream = new FileInputStream (f);
    InputStreamReader conexion = new InputStreamReader (stream, "ISO-8859-1");
    BufferedReader reader = new BufferedReader (conexion);
    String x;
    OutputStreamWriter writer = new OutputStreamWriter (new FileOutputStream ("in.txt"), "ISO-8859-1");
    while ((x = reader.readLine ()) != null) {
        writer.write (x);
        writer.newLine ();
    }
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12632167_12632244_1_13
12632167_19071574_7_16
Title: How to remove duplicates from a list using an auxiliary array in Java? 
----------------------------------------

public static void main (String [] args) {
    Double [] values = new Double [] {1.0, 2.0, 2.0, 2.0, 3.0, 10.0, 10.0};
    Set < Double > singleValues = new HashSet < Double > ();
    for (Double value : values) {
        singleValues.add (value);
    }
    System.out.println ("singleValues: " + singleValues);
    Double [] dValues = singleValues.toArray (new Double [] {});
}
----------------------------------------

public static void main (String [] args) {
    int arr [] = {1, 5, 1, 2, 5, 2, 10};
    TreeSet < Integer > set = new TreeSet < Integer > ();
    for (int i = 0;
    i < arr.length; i ++) {
        set.add (Integer.valueOf (arr [i]));
    }
    System.out.println (set);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12633916_12634135_1_12
12633916_12634138_1_15
Title: Spring - How to pass a message between Views? 
----------------------------------------

@RequestMapping (method = RequestMethod.GET)
public String editDelete (ModelMap model) {
    if (success) {
        model.addAttribute ("result", "Success");
        return new ModelAndView ("redirect:/displaytagView");
    } else {
        model.addAttribute ("result", "Error");
        return "displayPage";
    }
}
----------------------------------------

@RequestMapping (value = "/accounts/{id}/edit ")
public String yourMethod (HttpServletRequest request, HttpServletResponse response, ModelMap model) {
    if (someCondition) {
        String result = "Success";
        model.addAttribute ("result", result);
    } else {
        String result = "failure";
        model.addAttribute ("result", result);
    }
    return new YourControllerClass ().yourMethodforAccountDisplay (request, response, model);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12634990_12635011_19_28
12634990_12635037_19_37
Title: Howto Store 2 combined unique key in a HashMap? 
----------------------------------------

public boolean equals (Object obj) {
    if (! (obj instanceof NameIntPair)) {
        return false;
    }
    if (this == obj) {
        return true;
    }
    NameIntPair other = (NameIntPair) obj;
    return other.intValue == intValue && Objects.equal (other.name, name);
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Key other = (Key) obj;
    if (! getOuterType ().equals (other.getOuterType ())) return false;

    if (name == null) {
        if (other.name != null) return false;

    } else if (! name.equals (other.name)) return false;

    if (number != other.number) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12645155_12645231_6_16
12645155_13151121_14_27
Title: How to automatically shut down an JMXConnectorServer 
----------------------------------------

public void run () {
    if (jcs.isActive ()) {
        try {
            jcs.stop ();
            log ("Connector Server Stopped");
        } catch (Exception e) {
            log ("Failed to stop JCS");
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        List < Thread > tb = getSubThreads ();
        target.run ();
        List < Thread > ta = new java.util.ArrayList < > (getSubThreads ());
        ta.removeAll (tb);
        for (Thread thread : ta) {
            thread.setName (newThreadName);
        }
        Thread.sleep (Long.MAX_VALUE);
    } catch (InterruptedException ex) {
        Logger.getLogger (HardDaemonizer.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1264661_1264686_24_36
1264661_1264689_26_40
Title: "Dealing with maps equals() and hashCodes(). How efficient is this?" 
----------------------------------------

public boolean equals (Object o) {
    boolean ret;
    if (this == o) {
        ret = true;
    } else if (o instanceof Prefix) {
        ret = toString ().equals (((Prefix) o).toString ());
    } else {
        ret = false;
    }

    return ret;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    MyIdMap other = (MyIdMap) obj;
    if (value == null) {
        if (other.value != null) return false;

    } else if (! value.equals (other.value)) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12650837_12650850_1_14
12650837_12650919_1_12
Title: java : return multiple values from a method 
----------------------------------------

static List < String > sumofNum (int N) {
    List < String > result = new ArrayList < String > ();
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        result.add ("(" + a + "," + b + ")");
        int next = a + 1;
        if (next == b || a == b) return result;

    }
    return result;
}
----------------------------------------

static ArrayList < Point > sumofNum (int N) {
    ArrayList < Point > result = new ArrayList < Point > ();
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        System.out.println (a + "," + b);
        int next = a + 1;
        if (next == b | a == b) result.add (new Point (a, b));

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12650837_12650850_1_14
12650837_12651474_1_10
Title: java : return multiple values from a method 
----------------------------------------

static List < String > sumofNum (int N) {
    List < String > result = new ArrayList < String > ();
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        result.add ("(" + a + "," + b + ")");
        int next = a + 1;
        if (next == b || a == b) return result;

    }
    return result;
}
----------------------------------------

static void sumofNum (int N) {
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        consumer.consume (a, b);
        int next = a + 1;
        if (next == b || a == b) return;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12650837_12650919_1_12
12650837_12651474_1_10
Title: java : return multiple values from a method 
----------------------------------------

static ArrayList < Point > sumofNum (int N) {
    ArrayList < Point > result = new ArrayList < Point > ();
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        System.out.println (a + "," + b);
        int next = a + 1;
        if (next == b | a == b) result.add (new Point (a, b));

    }
    return result;
}
----------------------------------------

static void sumofNum (int N) {
    for (int a = 1;
    a < N; a ++) {
        int b = N - a;
        consumer.consume (a, b);
        int next = a + 1;
        if (next == b || a == b) return;

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12653927_12654188_14_22
12653927_25333122_20_30
Title: java swing: in paintComponent method how to know what to repaint? 
----------------------------------------

public static void main (String [] args) throws Exception {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Test ().createAndShowUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) throws Exception {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12653927_12654188_55_66
12653927_25333122_121_165
Title: java swing: in paintComponent method how to know what to repaint? 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    for (int i = 0;
    i < across; i ++) {
        for (int j = 0;
        j < down; j ++) {
            g.setColor (color);
            for (int k = 0;
            k < 5; k ++) {
                g.drawRect (tiles [i] [j].x + k, tiles [i] [j].y + k, tiles [i] [j].side - k * 2, tiles [i] [j].side - 2 * k);
            }
        }
    }
    updateScrollPane ();
}
----------------------------------------

protected void paintComponent (Graphics gr) {
    super.paintComponent (gr);
    Graphics2D g = (Graphics2D) gr;
    g.setColor (color);
    Rectangle clipBounds = g.getClipBounds ();
    Rectangle ownBounds = new Rectangle (0, 0, getWidth (), getHeight ());
    System.out.println ("clipBounds: " + clipBounds);
    System.out.println (" ownBounds: " + ownBounds);
    Rectangle paintedRegion = null;
    if (useClipBounds) {
        System.out.println ("Using clipBounds");
        paintedRegion = clipBounds;
    } else {
        System.out.println ("Using ownBounds");
        paintedRegion = ownBounds;
    }
    int counter = 0;
    for (int x = 0;
    x < getWidth (); x += 20) {
        for (int y = 0;
        y < getHeight (); y += 20) {
            Rectangle r = new Rectangle (x + 5, y + 5, 10, 10);
            if (r.intersects (paintedRegion)) {
                g.fill (r);
                counter ++;
            }
        }
    }
    System.out.println ("Painted " + counter + " rectangles ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_36_44
12656203_12656521_46_54
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterable < ? > values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterator < ? > values) {
    if (null == values) {
        return buf;
    }
    while (values.hasNext ()) {
        buf.append (sep ()).append (values.next ());
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_36_44
12656203_12656521_56_64
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterable < ? > values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Object...values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_36_44
12656203_12656521_66_74
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterable < ? > values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final int...values) {
    if (null == values) {
        return buf;
    }
    for (final int v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_46_54
12656203_12656521_56_64
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterator < ? > values) {
    if (null == values) {
        return buf;
    }
    while (values.hasNext ()) {
        buf.append (sep ()).append (values.next ());
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Object...values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_46_54
12656203_12656521_66_74
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Iterator < ? > values) {
    if (null == values) {
        return buf;
    }
    while (values.hasNext ()) {
        buf.append (sep ()).append (values.next ());
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final int...values) {
    if (null == values) {
        return buf;
    }
    for (final int v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12656203_12656521_56_64
12656203_12656521_66_74
Title: How to add spaces only between catenated values using java 
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final Object...values) {
    if (null == values) {
        return buf;
    }
    for (final Object v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------

public StringBuilder addAll (final StringBuilder buf, final int...values) {
    if (null == values) {
        return buf;
    }
    for (final int v : values) {
        buf.append (sep ()).append (v);
    }
    return buf;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12659405_12659492_1_12
12659405_12659604_1_11
Title: "Function to set row column and diagonal elements in a 2D array given a cell in the array" 
----------------------------------------

public void requiredFunction (int [] [] array, int row, int column) {
    for (int i = 0;
    i < arr.length; i ++) {
        if (i == col) continue;

        arr [row] [i] ++;
    }
    for (int i = 0;
    i < arr [0].length; i ++) {
        if (i == col) continue;

        arr [i] [col] ++;
    }
}
----------------------------------------

public void requiredFunction (int [] [] array, int row, int column) {
    for (int i = 0;
    i < array.length; ++ i) {
        for (int j = 0;
        j < array [i].length; ++ j) {
            if (i == column && j == row) continue;

            if (Math.abs (i - column) == Math.abs (j - row) || i - column == 0 || j - row == 0) array [i] [j] ++;

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12676588_12676617_6_20
12676588_12676738_8_22
Title: Java - Trouble with brackets 
----------------------------------------

public static void addVehicleBooking () {
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
}
----------------------------------------

public static void addVehicleBooking () {
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12676588_12676617_6_20
12676588_12676791_9_38
Title: Java - Trouble with brackets 
----------------------------------------

public static void addVehicleBooking () {
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
}
----------------------------------------

public static void addVehicleBooking () {
    String menu_choice = "";
    Scanner input = new Scanner (System.in);
    Scanner scan = new Scanner (System.in);
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
    while (! "X".equals (menu_choice)) {
        System.out.println ("*** Ferry Ticketing System Menu ***");
        System.out.println ("A   -   Add Vehicle Booking");
        System.out.println ("B   -   Display Booking Info");
        System.out.println ("C   -   Update Insurance Status");
        System.out.println ("D   -   Display Booking Summary");
        System.out.println ("X   -   Exit");
        System.out.print ("Enter your selection: ");
        menu_choice = input.next ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12676588_12676738_8_22
12676588_12676791_9_38
Title: Java - Trouble with brackets 
----------------------------------------

public static void addVehicleBooking () {
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
}
----------------------------------------

public static void addVehicleBooking () {
    String menu_choice = "";
    Scanner input = new Scanner (System.in);
    Scanner scan = new Scanner (System.in);
    String booking_ID = "";
    System.out.print ("Enter your booking ID");
    booking_ID = input.next ();
    String registration = "";
    System.out.print ("Enter registration number");
    registration = input.next ();
    String make_model = "";
    System.out.print ("Enter vehicle make/model");
    make_model = input.next ();
    int number_passengers = 1;
    System.out.print ("Enter number of passengers");
    number_passengers = scan.nextInt ();
    while (! "X".equals (menu_choice)) {
        System.out.println ("*** Ferry Ticketing System Menu ***");
        System.out.println ("A   -   Add Vehicle Booking");
        System.out.println ("B   -   Display Booking Info");
        System.out.println ("C   -   Update Insurance Status");
        System.out.println ("D   -   Display Booking Summary");
        System.out.println ("X   -   Exit");
        System.out.print ("Enter your selection: ");
        menu_choice = input.next ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683114_12683166_1_11
12683114_12697903_48_61
Title: Java newbie - car application 
----------------------------------------

public void start () {
    if (isStopped) {
        isStarted = true;
        isDriving = false;
        isStopped = false;
        showState = "started";
        System.out.println ("The car is " + this.showState);
    }
}
----------------------------------------

public void start () {
    if (isStarted == false) {
        isStopped = false;
        isStarted = true;
        showState ();
    } else {
        System.out.println ("You can't start a car which is already started.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683601_12_33
12683533_12683632_114_123
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    int result = JOptionPane.OK_OPTION;
    if (dirty) {
        result = JOptionPane.showConfirmDialog (gui, "Erase the current painting?");
    }
    if (result == JOptionPane.OK_OPTION) {
        clear (canvasImage);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683601_12_33
12683533_12683632_149_157
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683601_12_33
12683533_12683632_236_255
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683601_12_33
12683533_12683632_265_279
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x = (int) (Math.random () * getWidth ());
    int y = (int) (Math.random () * getHeight ());
    int width = (int) (Math.random () * (getWidth () / 4));
    int height = (int) (Math.random () * (getHeight () / 4));
    if (x + width > getWidth ()) {
        x = getWidth () - width;
    }
    if (y + height > getHeight ()) {
        y = getHeight () - height;
    }
    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));
    lstShapes.add (new MyRectangle (x, y, width, height, color));
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser ch = getFileChooser ();
    int result = ch.showSaveDialog (gui);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            File f = ch.getSelectedFile ();
            ImageIO.write (BasicPaint.this.canvasImage, "png", f);
            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;
            dirty = false;
        } catch (IOException ioe) {
            showError (ioe);
            ioe.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_114_123
12683533_12683632_149_157
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    int result = JOptionPane.OK_OPTION;
    if (dirty) {
        result = JOptionPane.showConfirmDialog (gui, "Erase the current painting?");
    }
    if (result == JOptionPane.OK_OPTION) {
        clear (canvasImage);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_114_123
12683533_12683632_236_255
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    int result = JOptionPane.OK_OPTION;
    if (dirty) {
        result = JOptionPane.showConfirmDialog (gui, "Erase the current painting?");
    }
    if (result == JOptionPane.OK_OPTION) {
        clear (canvasImage);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_114_123
12683533_12683632_265_279
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    int result = JOptionPane.OK_OPTION;
    if (dirty) {
        result = JOptionPane.showConfirmDialog (gui, "Erase the current painting?");
    }
    if (result == JOptionPane.OK_OPTION) {
        clear (canvasImage);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser ch = getFileChooser ();
    int result = ch.showSaveDialog (gui);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            File f = ch.getSelectedFile ();
            ImageIO.write (BasicPaint.this.canvasImage, "png", f);
            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;
            dirty = false;
        } catch (IOException ioe) {
            showError (ioe);
            ioe.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_149_157
12683533_12683632_236_255
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_149_157
12683533_12683632_265_279
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == select) {
        activeTool = SELECTION_TOOL;
    } else if (ae.getSource () == draw) {
        activeTool = DRAW_TOOL;
    } else if (ae.getSource () == text) {
        activeTool = TEXT_TOOL;
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser ch = getFileChooser ();
    int result = ch.showSaveDialog (gui);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            File f = ch.getSelectedFile ();
            ImageIO.write (BasicPaint.this.canvasImage, "png", f);
            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;
            dirty = false;
        } catch (IOException ioe) {
            showError (ioe);
            ioe.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683533_12683632_236_255
12683533_12683632_265_279
Title: Drawing a rectangle that won't disappear in next paint 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (! dirty) {
        JFileChooser ch = getFileChooser ();
        int result = ch.showOpenDialog (gui);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());
                setImage (bi);
            } catch (IOException e) {
                showError (e);
                e.printStackTrace ();
            }
        }
    } else {
        JOptionPane.showMessageDialog (gui, "TODO - prompt save image..");
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    JFileChooser ch = getFileChooser ();
    int result = ch.showSaveDialog (gui);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            File f = ch.getSelectedFile ();
            ImageIO.write (BasicPaint.this.canvasImage, "png", f);
            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;
            dirty = false;
        } catch (IOException ioe) {
            showError (ioe);
            ioe.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12683725_12683789_3_15
12683725_23336842_4_18
Title: split a string into 3 parts and converting to int 
----------------------------------------

public static void main (String [] args) {
    int i1, i2, i3;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Input a 3 digit number ");
    i1 = Integer.parseInt (keyboard.next ());
    i2 = Integer.parseInt (keyboard.next ());
    i3 = Integer.parseInt (keyboard.next ());
    System.out.println (i1);
    System.out.println (i2);
    System.out.println (i3);
}
----------------------------------------

public static void main (String [] args) {
    String input;
    int i1, i2, i3;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("Input a 3 digit number ");
    input = keyboard.next ();
    int i = 0;
    for (String result : input.split ("\\s+")) {
        System.out.println (result.charAt (i ++));
        System.out.println (result.charAt (i ++));
        System.out.println (result.charAt (i ++));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12690777_12690849_1_13
12690777_12690974_1_13
Title: Remove code duplication in specific example 
----------------------------------------

private void drawImageAtLocations (Graphics g, Image image, List < Location > locations) {
    double hScale = getWidth () / (double) groundMap.getWidth ();
    double vScale = getHeight () / (double) groundMap.getHeight ();
    int imageOffsetX = image.getWidth () / 2;
    int imageOffsetY = image.getHeight () / 2;
    for (Location l : locations) {
        int x = (int) (l.getX () * hScale);
        int y = (int) (l.getY () * vScale);
        g.drawImage (image, x - imageOffsetX, y - imageOffsetY, null);
    }
}
----------------------------------------

private void drawImageAtLocations (Graphics g, Image i, Collection < Location > cl) {
    double hScale = getWidth () / (double) groundMap.getWidth ();
    double vScale = getHeight () / (double) groundMap.getHeight ();
    int imageOffsetX = i.getWidth () / 2;
    int imageOffsetY = i.getHeight () / 2;
    for (Location l : cl) {
        int x = (int) (l.getX () * hScale);
        int y = (int) (l.getY () * vScale);
        g.drawImage (i, x - imageOffsetX, y - imageOffsetY, null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12694790_12695549_1_12
12694790_18832274_1_16
Title: Dragging JPanel's inside JFrame 
----------------------------------------

public void handleDrag (JPanel panel) {
    final JPanel p = panel;
    panel.addMouseMotionListener (new MouseMotionAdapter () {
        @Override
        public void mouseDragged (MouseEvent me) {
            me.translatePoint (me.getComponent ().getLocation ().x, me.getComponent ().getLocation ().y);
            p.setLocation (me.getX (), me.getY ());
        }}

    );
}
----------------------------------------

public void handleDrag (final JPanel panel) {
    panel.addMouseListener (new MouseAdapter () {
        @Override
        public void mousePressed (MouseEvent me) {
            x = me.getX ();
            y = me.getY ();
        }}

    );
    panel.addMouseMotionListener (new MouseMotionAdapter () {
        @Override
        public void mouseDragged (MouseEvent me) {
            me.translatePoint (me.getComponent ().getLocation ().x - x, me.getComponent ().getLocation ().y - y);
            panel.setLocation (me.getX (), me.getY ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12697202_29297046_7_28
12697202_32023118_34_56
Title: Remove duplicate elements in an ArrayList without using HashSet 
----------------------------------------

public static void main (String [] args) {
    List < String > lst = new LinkedList < String > ();
    lst.add ("ABC");
    lst.add ("ABC");
    lst.add ("ABCD");
    lst.add ("ABCD");
    lst.add ("ABCE");
    System.out.println ("Duplicates List " + lst);
    Object [] st = lst.toArray ();
    for (Object s : st) {
        if (lst.indexOf (s) != lst.lastIndexOf (s)) {
            lst.remove (lst.lastIndexOf (s));
        }
    }
    System.out.println ("Distinct List " + lst);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Student > list = new ArrayList < Student > ();
    list.add (new Student ("prakash", "89"));
    list.add (new Student ("prakash", "89"));
    list.add (new Student ("saurabh", "79"));
    list.add (new Student ("saurabh", "79"));
    Iterator < Student > it = list.iterator ();
    while (it.hasNext ()) {
        System.out.println (it.next ());
    }
    int size = list.size ();
    for (int i = 0;
    i < size - 1; i ++) {
        for (int j = i + 1;
        j < size - 1; j ++) {
            if (list.get (i).getName ().equals (list.get (j).getName ())) {
                list.remove (j);
            }
        }
    }
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1270173_3612741_11_48
1270173_49859741_9_52
Title: Accessing a remote MBean server 
----------------------------------------

static void main (String [] args) throws Exception {
    if (args == null) {
        System.out.println ("Usage: java JVMRuntimeClient HOST PORT");
    }
    if (args.length < 2) {
        System.out.println ("Usage: java JVMRuntimeClient HOST PORT");
    }
    try {
        JMXServiceURL target = new JMXServiceURL ("service:jmx:rmi:///jndi/rmi://" + args [0] + ":" + args [1] + "/jmxrmi");
        JMXConnector connector = JMXConnectorFactory.connect (target);
        MBeanServerConnection remote = connector.getMBeanServerConnection ();
        ObjectName bean = new ObjectName ("com.digitalscripter.search.statistics:name=requestStatistics,type=RequestStatistics");
        MBeanInfo info = remote.getMBeanInfo (bean);
        MBeanAttributeInfo [] attributes = info.getAttributes ();
        for (MBeanAttributeInfo attr : attributes) {
            System.out.println (attr.getDescription () + " " + remote.getAttribute (bean, attr.getName ()));
        }
        connector.close ();
    } catch (Exception e) {
        System.out.println (e.getMessage ());
        System.exit (0);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException, MalformedObjectNameException, IntrospectionException, InstanceNotFoundException, ReflectionException {
    String jmxHost = "localhost:9000";
    String url = "service:jmx:rmi:///jndi/rmi://" + jmxHost + "/jmxrmi";
    JMXServiceURL serviceURL = new JMXServiceURL (url);
    JMXConnector connector = JMXConnectorFactory.connect (serviceURL);
    MBeanServerConnection serverConnection = connector.getMBeanServerConnection ();
    System.out.println ("\n     Now we have a look at " + serverConnection.getMBeanCount () + " mbeans!");
    int objectCount = 0;
    for (String domain : serverConnection.getDomains ()) {
        System.out.println ("\n***********************************************************************************");
        System.out.println ("DOMAIN: " + domain);
        for (ObjectName objectName : serverConnection.queryNames (new ObjectName (domain + ":*"), null)) {
            System.out.println ("    objectName " + ++ objectCount + ": " + objectName);
            MBeanInfo info = serverConnection.getMBeanInfo (objectName);
            for (MBeanAttributeInfo attr : info.getAttributes ()) {
                System.out.print ("        attr: " + attr.getDescription ());
                try {
                    String val = serverConnection.getAttribute (objectName, attr.getName ()).toString ();
                    System.out.println (" -> " + abbreviate (val));
                } catch (Exception e) {
                    System.out.println (" FAILED: " + e);
                }
            }
            for (MBeanOperationInfo op : info.getOperations ()) {
                System.out.println ("        op: " + op.getName ());
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12702305_12984227_102_110
12702305_20609314_100_109
Title: using html5 client with a server in java 
----------------------------------------

public void run () {
    try {
        while (true) {
            System.out.println ("Recieved from client: " + reiceveMessage ());
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            System.out.println ("Recieved from client: " + reiceveMessage ());
            System.out.println ("Enter data to send");
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12702305_12984227_115_136
12702305_20609314_114_181
Title: using html5 client with a server in java 
----------------------------------------

public String reiceveMessage () throws IOException {
    byte [] buf = readBytes (2);
    System.out.println ("Headers:");
    convertAndPrint (buf);
    int opcode = buf [0] & 0x0F;
    if (opcode == 8) {
        System.out.println ("Client closed!");
        socket.close ();
        System.exit (0);
        return null;
    } else {
        final int payloadSize = getSizeOfPayload (buf [1]);
        System.out.println ("Payloadsize: " + payloadSize);
        buf = readBytes (MASK_SIZE + payloadSize);
        System.out.println ("Payload:");
        convertAndPrint (buf);
        buf = unMask (Arrays.copyOfRange (buf, 0, 4), Arrays.copyOfRange (buf, 4, buf.length));
        String message = new String (buf);
        return message;
    }
}
----------------------------------------

public String reiceveMessage () throws IOException {
    String EasyBytes = null;
    byte [] buf = readBytes (2);
    convertAndPrint (buf);
    EasyBytes = (String.format ("%02X ", buf [1]));
    int payloadadder = 0;
    if (EasyBytes.contains ("FE")) {
        byte [] buf2 = readBytes (1);
        int a = (buf2 [0] & 0xff) + 1;
        System.out.println ("Number of extra bytes" + a);
        payloadadder = 2;
        byte [] adder = null;
        for (int x = 0;
        x < a; x ++) {
            if (x == 0) {
                adder = readBytes (1);
                payloadadder += ((adder [0] & 0xFF) - 0x80);
            }
            if (x == 1) {
                payloadadder = (buf [1] & 0xFF) + (adder [0] & 0xFF);
            }
            if (x > 1) {
                payloadadder = (Integer.parseInt ((String.format ("%02X", buf2 [0]) + String.format ("%02X", adder [0])), 16));
            }
        }
        System.out.println ("Overflow in byte/s " + payloadadder);
    }
    System.out.println ("Headers:");
    int opcode = buf [0] & 0x0F;
    if (opcode == 8) {
        System.out.println ("Client closed!");
        socket.close ();
        System.exit (0);
        return null;
    } else {
        int payloadSize = 0;
        if (payloadadder <= 0) {
            payloadSize = getSizeOfPayload (buf [1]);
        } else {
            payloadSize = getSizeOfPayload (buf [1]) + payloadadder;
        }
        System.out.println ("Payloadsize: " + payloadSize);
        buf = readBytes (MASK_SIZE + payloadSize);
        System.out.println ("Payload:");
        convertAndPrint (buf);
        buf = unMask (Arrays.copyOfRange (buf, 0, 4), Arrays.copyOfRange (buf, 4, buf.length));
        String message = new String (buf);
        return message;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12702305_12984227_43_77
12702305_20609314_39_75
Title: using html5 client with a server in java 
----------------------------------------

private boolean handshake () throws IOException {
    PrintWriter out = new PrintWriter (socket.getOutputStream ());
    BufferedReader in = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
    HashMap < String, String > keys = new HashMap < > ();
    String str;
    while (! (str = in.readLine ()).equals ("")) {
        String [] s = str.split (": ");
        System.out.println ();
        System.out.println (str);
        if (s.length == 2) {
            keys.put (s [0], s [1]);
        }
    }
    String hash;
    try {
        hash = new BASE64Encoder ().encode (MessageDigest.getInstance ("SHA-1").digest ((keys.get ("Sec-WebSocket-Key") + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11").getBytes ()));
    } catch (NoSuchAlgorithmException ex) {
        ex.printStackTrace ();
        return false;
    }
    out.write ("HTTP/1.1 101 Switching Protocols\r\n" + "Upgrade: websocket\r\n" + "Connection: Upgrade\r\n" + "Sec-WebSocket-Accept: " + hash + "\r\n" + "\r\n");
    out.flush ();
    return true;
}
----------------------------------------

private boolean handshake () throws IOException {
    PrintWriter out = new PrintWriter (socket.getOutputStream ());
    BufferedReader in = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
    HashMap < String, String > keys = new HashMap < > ();
    String str;
    while (! (str = in.readLine ()).equals ("")) {
        String [] s = str.split (": ");
        System.out.println ();
        System.out.println (str);
        if (s.length == 2) {
            keys.put (s [0], s [1]);
        }
    }
    String hash;
    try {
        hash = new BASE64Encoder ().encode (MessageDigest.getInstance ("SHA-1").digest ((keys.get ("Sec-WebSocket-Key") + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11").getBytes ()));
    } catch (NoSuchAlgorithmException ex) {
        ex.printStackTrace ();
        return false;
    }
    out.write ("HTTP/1.1 101 Switching Protocols\r\n" + "Upgrade: websocket\r\n" + "Connection: Upgrade\r\n" + "Sec-WebSocket-Accept: " + hash + "\r\n" + "Origin: http://face2fame.com\r\n" + "\r\n");
    out.flush ();
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12702305_12984227_85_97
12702305_20609314_83_95
Title: using html5 client with a server in java 
----------------------------------------

public void sendMessage (byte [] msg) throws IOException {
    System.out.println ("Sending to client");
    ByteArrayOutputStream baos = new ByteArrayOutputStream ();
    BufferedOutputStream os = new BufferedOutputStream (socket.getOutputStream ());
    baos.write (SINGLE_FRAME_UNMASKED);
    baos.write (msg.length);
    baos.write (msg);
    baos.flush ();
    baos.close ();
    convertAndPrint (baos.toByteArray ());
    os.write (baos.toByteArray (), 0, baos.size ());
    os.flush ();
}
----------------------------------------

public void sendMessage (byte [] msg) throws IOException {
    System.out.println ("Sending to client");
    ByteArrayOutputStream baos = new ByteArrayOutputStream ();
    BufferedOutputStream os = new BufferedOutputStream (socket.getOutputStream ());
    baos.write (SINGLE_FRAME_UNMASKED);
    baos.write (msg.length);
    baos.write (msg);
    baos.flush ();
    baos.close ();
    convertAndPrint (baos.toByteArray ());
    os.write (baos.toByteArray (), 0, baos.size ());
    os.flush ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12702305_12984227_99_113
12702305_20609314_97_112
Title: using html5 client with a server in java 
----------------------------------------

public void listenerThread () {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                while (true) {
                    System.out.println ("Recieved from client: " + reiceveMessage ());
                }
            } catch (IOException ex) {
                ex.printStackTrace ();
            }
        }}

    );
    t.start ();
}
----------------------------------------

public void listenerThread () {
    Thread t = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                while (true) {
                    System.out.println ("Recieved from client: " + reiceveMessage ());
                    System.out.println ("Enter data to send");
                }
            } catch (IOException ex) {
                ex.printStackTrace ();
            }
        }}

    );
    t.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12704325_16253135_25_50
12704325_16255640_23_36
Title: Java - Bounded Queue using array 
----------------------------------------

public void enQueue (int Number) throws Exception {
    if (! isFull ()) {
        if (cnt == 0) {
            frontindex ++;
        }
        if (rearindex + 1 != sizeofArr) {
            Q [++ rearindex] = Number;
        } else {
            rearindex = - 1;
            Q [++ rearindex] = Number;
        }
        cnt ++;
    } else throw new Exception ("Queue Overflow");

}
----------------------------------------

public void enQueue (int number) {
    Node n = new Node (number);
    if (front == null && rear == null) front = rear = n;
    else {
        rear.next = n;
        rear = rear.next;
    }
    cnt ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12704325_16253135_52_76
12704325_16255640_38_58
Title: Java - Bounded Queue using array 
----------------------------------------

public int deQueue () throws Exception {
    int x;
    if (cnt != 0) {
        cnt --;
        if (frontindex != sizeofArr) {
            x = Q [frontindex];
            Q [frontindex] = - 1;
            frontindex ++;
            return x;
        } else {
            frontindex = 0;
            x = Q [0];
            Q [0] = - 1;
            return x;
        }
    } else throw new Exception ("Queue Underflow");

}
----------------------------------------

public Object deQueue () throws Exception {
    Node temp;
    if (front == null && rear == null) {
        throw new Exception ("Queue underflow, can not DeQueue any element");
    } else if (front == rear && front.next == null) {
        temp = front;
        front = rear = null;
        return temp.data;
    } else {
        temp = front;
        front = front.next;
        cnt --;
        return temp.data;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12704325_16253135_98_134
12704325_16255640_84_123
Title: Java - Bounded Queue using array 
----------------------------------------

public static void main (String [] args) {
    try {
        QueueUsingArray q = new QueueUsingArray (5);
        System.out.println ("CurrentQueue Size is:" + q.size ());
        q.enQueue (1);
        q.enQueue (2);
        q.enQueue (3);
        q.enQueue (4);
        q.enQueue (5);
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
        System.out.println ("Is QueuFull ?" + q.isFull ());
        System.out.println (q.deQueue ());
        System.out.println (q.deQueue ());
        System.out.println (q.deQueue ());
        System.out.println ("CurrentQueue Size is:" + q.size ());
        q.enQueue (6);
        q.enQueue (7);
        q.enQueue (8);
        q.printQ ();
        System.out.println (q.deQueue ());
        q.enQueue (9);
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        QueueUsingLinkeList q = new QueueUsingLinkeList ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
        q.enQueue (1);
        q.enQueue (2);
        q.enQueue (3);
        q.enQueue (4);
        q.enQueue (5);
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
        System.out.println (q.deQueue ());
        System.out.println (q.deQueue ());
        System.out.println (q.deQueue ());
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
        q.enQueue (6);
        q.enQueue (7);
        q.enQueue (8);
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
        System.out.println (q.deQueue ());
        System.out.println (q.deQueue ());
        q.enQueue (9);
        q.printQ ();
        System.out.println ("CurrentQueue Size is:" + q.size ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12713563_12713622_5_17
12713563_12713700_4_15
Title: "Java Swing : why must resize frame so that can show components have added" 
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("JScroll Pane Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    JTextArea txtNotes = new JTextArea ();
    txtNotes.setText ("Hello World");
    JScrollPane scrollPane = new JScrollPane (txtNotes);
    frame.add (scrollPane);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("JScroll Pane Test");
    JTextArea txtNotes = new JTextArea ();
    txtNotes.setText ("Hello World");
    JScrollPane scrollPane = new JScrollPane (txtNotes);
    frame.add (scrollPane);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (new Dimension (800, 600));
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12715246_12715931_5_15
12715246_33537691_2_20
Title: How to check if a character in a string is a digit or letter 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Input a letter");
    String line = in.nextLine ();
    char c = line.charAt (0);
    if (Character.isDigit (c)) System.out.println (c + " Is a digit");
    else if (Character.isLetter (c)) System.out.println (c + " Is a Letter");

}
----------------------------------------

public static void main (String [] args) {
    String c;
    boolean b;
    System.out.println ("Enter the value");
    Scanner s = new Scanner (System.in);
    c = s.next ();
    b = containsNumber (c);
    try {
        if (b == true) {
            throw new CharacterFormatException ();
        } else {
            System.out.println ("Valid String \t" + c);
        }
    } catch (CharacterFormatException ex) {
        System.out.println ("Exception Raised-Contains Number");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12715246_12715931_5_15
12715246_42808237_6_27
Title: How to check if a character in a string is a digit or letter 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Input a letter");
    String line = in.nextLine ();
    char c = line.charAt (0);
    if (Character.isDigit (c)) System.out.println (c + " Is a digit");
    else if (Character.isLetter (c)) System.out.println (c + " Is a Letter");

}
----------------------------------------

public static void main (String arg []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the value");
    String data;
    data = in.next ();
    int len = data.length ();
    for (int i = 0;
    i < len; i ++) {
        char ch = data.charAt (i);
        if ((ch >= '0' && ch <= '9')) {
            System.out.println ("Number ");
        } else if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {
            System.out.println ("Character");
        } else {
            System.out.println ("Symbol");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12715246_33537691_2_20
12715246_42808237_6_27
Title: How to check if a character in a string is a digit or letter 
----------------------------------------

public static void main (String [] args) {
    String c;
    boolean b;
    System.out.println ("Enter the value");
    Scanner s = new Scanner (System.in);
    c = s.next ();
    b = containsNumber (c);
    try {
        if (b == true) {
            throw new CharacterFormatException ();
        } else {
            System.out.println ("Valid String \t" + c);
        }
    } catch (CharacterFormatException ex) {
        System.out.println ("Exception Raised-Contains Number");
    }
}
----------------------------------------

public static void main (String arg []) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the value");
    String data;
    data = in.next ();
    int len = data.length ();
    for (int i = 0;
    i < len; i ++) {
        char ch = data.charAt (i);
        if ((ch >= '0' && ch <= '9')) {
            System.out.println ("Number ");
        } else if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {
            System.out.println ("Character");
        } else {
            System.out.println ("Symbol");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12719085_12719389_100_129
12719085_12724072_17_32
Title: How to zoom in to JPanel without moving the center: math or Swing? 
----------------------------------------

public void setZoom (float value) {
    if (zoom != value) {
        zoom = value;
        if (zoom < 0) {
            zoom = 0f;
        }
        int width = (int) Math.floor (background.getWidth (this) * zoom);
        int height = (int) Math.floor (background.getHeight (this) * zoom);
        scaled = background.getScaledInstance (width, height, Image.SCALE_SMOOTH);
        scaledSize = new Dimension (width, height);
        if (getParent () instanceof JViewport) {
            int centerX = width / 2;
            int centerY = height / 2;
            JViewport parent = (JViewport) getParent ();
            Rectangle viewRect = parent.getViewRect ();
            viewRect.x = centerX - (viewRect.width / 2);
            viewRect.y = centerY - (viewRect.height / 2);
            scrollRectToVisible (viewRect);
        }
        invalidate ();
        repaint ();
    }
}
----------------------------------------

public void setZoom (double zoom) {
    Point oCenter = scaler.inverseTransform (getViewportCenter ());
    Dimension dim = railMap.getDimension ();
    scaler.setZoom (zoom);
    setPreferredSize (scaler.transform (dim));
    setViewportCenter (scaler.transform (oCenter));
    invalidate ();
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1273986_1274830_4_21
1273986_37040992_5_18
Title: Converting UTF-8 to ISO-8859-1 in Java 
----------------------------------------

public static < T extends Appendable > T escapeNonLatin (CharSequence sequence, T out) throws java.io.IOException {
    for (int i = 0;
    i < sequence.length (); i ++) {
        char ch = sequence.charAt (i);
        if (Character.UnicodeBlock.of (ch) == Character.UnicodeBlock.BASIC_LATIN) {
            out.append (ch);
        } else {
            int codepoint = Character.codePointAt (sequence, i);
            i += Character.charCount (codepoint) - 1;
            out.append ("&#x");
            out.append (Integer.toHexString (codepoint));
            out.append (";");
        }
    }
    return out;
}
----------------------------------------

public static < T extends Appendable > T escapeNonLatin (CharSequence sequence, T out) throws java.io.IOException {
    for (PrimitiveIterator.OfInt iterator = sequence.codePoints ().iterator ();
    iterator.hasNext ();) {
        int codePoint = iterator.nextInt ();
        if (Character.UnicodeBlock.of (codePoint) == Character.UnicodeBlock.BASIC_LATIN) {
            out.append ((char) codePoint);
        } else {
            out.append ("&#x");
            out.append (Integer.toHexString (codePoint));
            out.append (";");
        }
    }
    return out;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12740445_12740491_1_28
12740445_12740581_1_15
Title: Get Next key in Linkedhashmap in java 
----------------------------------------

public static String getNextTab (String currentTab) {
    String nextTab = null;
    Map < String, Boolean > tabList = generateTab ();
    Iterator iterator = tabList.keySet ().iterator ();
    while (iterator.hasNext ()) {
        String entry = (String) iterator.next ();
        if (entry.equals (currentTab)) {
            if (tabList.get (entry).equals (true)) {
                nextTab = entry;
                break;
            } else {
                nextTab = (String) iterator.next ();
                break;
            }
        }
    }
    return nextTab;
}
----------------------------------------

public String getNextTab (String currentTab) {
    Map < String, Boolean > tabList = generateTab ();
    boolean shouldStart = false;
    for (Map.Entry < String, Boolean > value : tabList.entrySet ()) {
        if (value.getKey ().equals (currentTab)) {
            shouldStart = true;
            continue;
        }
        if (shouldStart) {
            if (value.getValue ().equals (true)) return value.getKey ();

        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12740445_12740491_1_28
12740445_12740747_12_26
Title: Get Next key in Linkedhashmap in java 
----------------------------------------

public static String getNextTab (String currentTab) {
    String nextTab = null;
    Map < String, Boolean > tabList = generateTab ();
    Iterator iterator = tabList.keySet ().iterator ();
    while (iterator.hasNext ()) {
        String entry = (String) iterator.next ();
        if (entry.equals (currentTab)) {
            if (tabList.get (entry).equals (true)) {
                nextTab = entry;
                break;
            } else {
                nextTab = (String) iterator.next ();
                break;
            }
        }
    }
    return nextTab;
}
----------------------------------------

public String getNextTab (String currentTab) {
    String nextTab = null;
    Map < String, Boolean > tabList = generateTab ();
    Iterator < Map.Entry < String, Boolean > > iterator = tabList.entrySet ().iterator ();
    while (iterator.hasNext ()) {
        Map.Entry < String, Boolean > entry = iterator.next ();
        if (entry.getKey ().equals (currentTab)) {
            if (entry.getValue ()) {
                nextTab = entry.getKey ();
                break;
            }
        }
    }
    return nextTab;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12740445_12740581_1_15
12740445_12740747_12_26
Title: Get Next key in Linkedhashmap in java 
----------------------------------------

public String getNextTab (String currentTab) {
    Map < String, Boolean > tabList = generateTab ();
    boolean shouldStart = false;
    for (Map.Entry < String, Boolean > value : tabList.entrySet ()) {
        if (value.getKey ().equals (currentTab)) {
            shouldStart = true;
            continue;
        }
        if (shouldStart) {
            if (value.getValue ().equals (true)) return value.getKey ();

        }
    }
    return null;
}
----------------------------------------

public String getNextTab (String currentTab) {
    String nextTab = null;
    Map < String, Boolean > tabList = generateTab ();
    Iterator < Map.Entry < String, Boolean > > iterator = tabList.entrySet ().iterator ();
    while (iterator.hasNext ()) {
        Map.Entry < String, Boolean > entry = iterator.next ();
        if (entry.getKey ().equals (currentTab)) {
            if (entry.getValue ()) {
                nextTab = entry.getKey ();
                break;
            }
        }
    }
    return nextTab;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12741244_16905032_8_51
12741244_23878860_1_17
Title: How do I do recursive multiplication when one or both of the factors is/are negative? 
----------------------------------------

public static int multiply (int x, int y) {
    System.out.println ("Multiply called: x = " + x + ", y = " + y);
    if (x == 0 || y == 0) {
        System.out.println ("Zero case: x = " + x + ", y = " + y);
        return 0;
    } else if (x == 1 && y > 0) {
        return y;
    } else if (y == 1 && x > 0) {
        return x;
    } else if (x == - 1 && y > 0) {
        return - y;
    } else if (y == - 1 && x > 0) {
        return - x;
    } else if (y == - 1) {
        System.out.println ("y is == -1");
        return - x;
    } else if (x == - 1) {
        System.out.println ("x is == -1");
        return - y;
    } else if (y < 0) {
        System.out.println ("y is < 0");
        return - x + multiply (x, y + 1);
    } else {
        System.out.println ("Last case: x = " + x + ", y = " + y);
        return x + multiply (x, y - 1);
    }

}
----------------------------------------

public static int multiply (int a, int b) {
    if (a == 0) {
        return result;
    } else if (a < 0) {
        return - b + multiply (a + 1, b);
    } else {
        result = result + b;
        return multiply (Math.abs (a - 1), b);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12752568_12752626_1_11
12752568_12752909_1_19
Title: Skip if conditions when a flag is false 
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    if (fruit.weight > 2) return false;

    if (! "red".equals (fruit.color)) return false;

    if (! "sweet".equals (fruit.taste)) return false;

    if (! fruit.isPerishable) return false;

    return true;
}
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    boolean isRecommended = true;
    if (fruit.weight > 2) {
        isRecommended = false;
    } else {
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
        }
    }
    return isRecommended;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12752568_12752626_1_11
12752568_12864885_1_25
Title: Skip if conditions when a flag is false 
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    if (fruit.weight > 2) return false;

    if (! "red".equals (fruit.color)) return false;

    if (! "sweet".equals (fruit.taste)) return false;

    if (! fruit.isPerishable) return false;

    return true;
}
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    boolean isRecommended = true;
    labelA : {
        if (fruit.weight > 2) {
            isRecommended = false;
            break labelA;
        }
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
            break labelA;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
            break labelA;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
        }
    } return isRecommended;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12752568_12752626_1_11
12752568_45577190_1_24
Title: Skip if conditions when a flag is false 
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    if (fruit.weight > 2) return false;

    if (! "red".equals (fruit.color)) return false;

    if (! "sweet".equals (fruit.taste)) return false;

    if (! fruit.isPerishable) return false;

    return true;
}
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    while (true) {
        boolean isRecommended = true;
        if (fruit.weight > 2) {
            isRecommended = false;
            break;
        }
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
            break;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
            break;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
            break;
        }
    }
    return isRecommended;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12752568_12752909_1_19
12752568_12864885_1_25
Title: Skip if conditions when a flag is false 
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    boolean isRecommended = true;
    if (fruit.weight > 2) {
        isRecommended = false;
    } else {
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
        }
    }
    return isRecommended;
}
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    boolean isRecommended = true;
    labelA : {
        if (fruit.weight > 2) {
            isRecommended = false;
            break labelA;
        }
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
            break labelA;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
            break labelA;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
        }
    } return isRecommended;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12752568_12864885_1_25
12752568_45577190_1_24
Title: Skip if conditions when a flag is false 
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    boolean isRecommended = true;
    labelA : {
        if (fruit.weight > 2) {
            isRecommended = false;
            break labelA;
        }
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
            break labelA;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
            break labelA;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
        }
    } return isRecommended;
}
----------------------------------------

private static boolean isRecommended (Fruit fruit) {
    while (true) {
        boolean isRecommended = true;
        if (fruit.weight > 2) {
            isRecommended = false;
            break;
        }
        if (! "red".equals (fruit.color)) {
            isRecommended = false;
            break;
        }
        if (! "sweet".equals (fruit.taste)) {
            isRecommended = false;
            break;
        }
        if (! fruit.isPerishable) {
            isRecommended = false;
            break;
        }
    }
    return isRecommended;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12755629_12755698_5_21
12755629_12755826_1_11
Title: Printing by Mr. Maty Hall.: How do i code if the print is successfull? 
----------------------------------------

public Boolean print () {
    PrinterJob printJob = PrinterJob.getPrinterJob ();
    printJob.setPrintable (this);
    if (printJob.printDialog ()) {
        try {
            printJob.print ();
        } catch (PrinterException pe) {
            System.out.println ("Error printing: " + pe);
        }
        return true;
    } else {
        return false;
    }
}
----------------------------------------

public void print () {
    PrinterJob printJob = PrinterJob.getPrinterJob ();
    printJob.setPrintable (this);
    if (printJob.printDialog ()) try {
        System.out.println ("code here");
        printJob.print ();
    } catch (PrinterException pe) {
        System.out.println ("Error printing: " + pe);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
12756434_12756524_101_142
12756434_12756524_6_15
Title: using double buffering kinda ruin my applet. and it has java uses or overrides a deprecated API 
----------------------------------------

public void run () {
    rowOfAliens = new RowOfAliens ();
    rowOfAliens.setLocation (new Point (0, 0));
    rowOfAliens.setDirection (10);
    while (true) {
        try {
            Thread.sleep (16);
        } catch (InterruptedException ex) {
        }
        cycle ++;
        BufferedImage buffer = getBuffer ();
        if (buffer != null) {
            updateAliens ();
            int width = buffer.getWidth ();
            int height = buffer.getHeight ();
            Graphics2D g2d = buffer.createGraphics ();
            paintBackground (g2d, width, height);
            paintMidground (g2d, width, height);
            paintForeground (g2d, width, height);
            g2d.dispose ();
            paintBuffer (buffer);
        }
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException ex) {
    } catch (InstantiationException ex) {
    } catch (IllegalAccessException ex) {
    } catch (UnsupportedLookAndFeelException ex) {
    }
    new SpaceFrame ();
}
----------------------------------------
