$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33894366_33919485_48_64
33894366_36085582_23_55
Title: How to update textarea(console)in realtime in JavaFX without loosing flow or freezing the application 
----------------------------------------

protected String call () throws Exception {
    long i = 1;
    String s = null;
    while (i < 90) {
        if (isCancelled ()) {
            break;
        }
        double k = Math.sqrt (Math.pow (i, 2) / Math.sqrt (i));
        results.append ("i: ").append (i).append (" Count: ").append (k).append ("\n");
        updateValue (results.toString ());
        updateProgress ((100 * i) / 90, 90);
        Thread.sleep (100);
        i ++;
    }
    return results.toString ();
}
----------------------------------------

protected String call () throws Exception {
    while (true) {
        if (isCancelled ()) {
            break;
        }
        if (updated) {
            updateValue (results.toString ());
            updated = false;
            Platform.runLater (() -> {
                consoleOutput.setScrollTop (Double.MAX_VALUE);
            });
        }
        if (exported) {
            consoleOutput.setScrollTop (Double.MAX_VALUE);
            exported = false;
        }
        Thread.sleep (100);
    }
    return results.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896028_1_13
33895920_33896229_1_21
Title: String combination function doesn't work as expected 
----------------------------------------

public static String combine (String str1, String str2) {
    String output = "";
    for (int i = 0;
    i < str1.length () || i < str2.length (); ++ i) {
        if (i < str1.length ()) {
            output += str1.charAt (i);
        }
        if (i < str2.length ()) {
            output += str2.charAt (i);
        }
    }
    return output;
}
----------------------------------------

String combine (String s1, String s2) {
    if (s1 == null && s2 == null) {
        return null;
    } else if (s1 == null) {
        return s2;
    } else if (s2 == null) {
        return s1;
    } else {
        StringBuilder sb = new StringBuilder ();
        for (int pos = 0;
        pos < Math.max (s1.length (), s2.length ()); ++ pos) {
            if (pos < s1.length ()) {
                sb.append (s1.charAt (pos));
            }
            if (pos < s2.length ()) {
                sb.append (s2.charAt (pos));
            }
        }
        return sb.toString ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896028_1_13
33895920_33896438_1_18
Title: String combination function doesn't work as expected 
----------------------------------------

public static String combine (String str1, String str2) {
    String output = "";
    for (int i = 0;
    i < str1.length () || i < str2.length (); ++ i) {
        if (i < str1.length ()) {
            output += str1.charAt (i);
        }
        if (i < str2.length ()) {
            output += str2.charAt (i);
        }
    }
    return output;
}
----------------------------------------

public static String combine (String str1, String str2) {
    StringBuilder result = new StringBuilder ();
    int str1size = str1 == null ? 0 : str1.length ();
    int str2size = str2 == null ? 0 : str2.length ();
    int lowerSize = Math.min (str1size, str2size);
    int greaterSize = Math.max (str1size, str2size);
    int i;
    for (i = 0; i < lowerSize; i ++) {
        result.append (str1.charAt (i)).append (str2.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str1size);
    i < upTo; i ++) {
        result.append (str1.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str2size);
    i < upTo; i ++) {
        result.append (str2.charAt (i));
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896028_1_13
33895920_33896876_49_58
Title: String combination function doesn't work as expected 
----------------------------------------

public static String combine (String str1, String str2) {
    String output = "";
    for (int i = 0;
    i < str1.length () || i < str2.length (); ++ i) {
        if (i < str1.length ()) {
            output += str1.charAt (i);
        }
        if (i < str2.length ()) {
            output += str2.charAt (i);
        }
    }
    return output;
}
----------------------------------------

private static String combine (String firstWord, String secondWord) {
    String word = "";
    for (int i = 0;
    i < firstWord.length (); i ++) {
        word += firstWord.charAt (i);
        word += secondWord.charAt (i);
    }
    return word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896229_1_21
33895920_33896438_1_18
Title: String combination function doesn't work as expected 
----------------------------------------

String combine (String s1, String s2) {
    if (s1 == null && s2 == null) {
        return null;
    } else if (s1 == null) {
        return s2;
    } else if (s2 == null) {
        return s1;
    } else {
        StringBuilder sb = new StringBuilder ();
        for (int pos = 0;
        pos < Math.max (s1.length (), s2.length ()); ++ pos) {
            if (pos < s1.length ()) {
                sb.append (s1.charAt (pos));
            }
            if (pos < s2.length ()) {
                sb.append (s2.charAt (pos));
            }
        }
        return sb.toString ();
    }

}
----------------------------------------

public static String combine (String str1, String str2) {
    StringBuilder result = new StringBuilder ();
    int str1size = str1 == null ? 0 : str1.length ();
    int str2size = str2 == null ? 0 : str2.length ();
    int lowerSize = Math.min (str1size, str2size);
    int greaterSize = Math.max (str1size, str2size);
    int i;
    for (i = 0; i < lowerSize; i ++) {
        result.append (str1.charAt (i)).append (str2.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str1size);
    i < upTo; i ++) {
        result.append (str1.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str2size);
    i < upTo; i ++) {
        result.append (str2.charAt (i));
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896229_1_21
33895920_33896876_49_58
Title: String combination function doesn't work as expected 
----------------------------------------

String combine (String s1, String s2) {
    if (s1 == null && s2 == null) {
        return null;
    } else if (s1 == null) {
        return s2;
    } else if (s2 == null) {
        return s1;
    } else {
        StringBuilder sb = new StringBuilder ();
        for (int pos = 0;
        pos < Math.max (s1.length (), s2.length ()); ++ pos) {
            if (pos < s1.length ()) {
                sb.append (s1.charAt (pos));
            }
            if (pos < s2.length ()) {
                sb.append (s2.charAt (pos));
            }
        }
        return sb.toString ();
    }

}
----------------------------------------

private static String combine (String firstWord, String secondWord) {
    String word = "";
    for (int i = 0;
    i < firstWord.length (); i ++) {
        word += firstWord.charAt (i);
        word += secondWord.charAt (i);
    }
    return word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33895920_33896438_1_18
33895920_33896876_49_58
Title: String combination function doesn't work as expected 
----------------------------------------

public static String combine (String str1, String str2) {
    StringBuilder result = new StringBuilder ();
    int str1size = str1 == null ? 0 : str1.length ();
    int str2size = str2 == null ? 0 : str2.length ();
    int lowerSize = Math.min (str1size, str2size);
    int greaterSize = Math.max (str1size, str2size);
    int i;
    for (i = 0; i < lowerSize; i ++) {
        result.append (str1.charAt (i)).append (str2.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str1size);
    i < upTo; i ++) {
        result.append (str1.charAt (i));
    }
    for (int upTo = Math.min (greaterSize, str2size);
    i < upTo; i ++) {
        result.append (str2.charAt (i));
    }
    return result.toString ();
}
----------------------------------------

private static String combine (String firstWord, String secondWord) {
    String word = "";
    for (int i = 0;
    i < firstWord.length (); i ++) {
        word += firstWord.charAt (i);
        word += secondWord.charAt (i);
    }
    return word;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33901738_33902415_1_20
33901738_33902586_1_26
Title: Using StringBuilder to fill in the blanks in a string 
----------------------------------------

public static void printWithVar (String theString, String [] insertArray) {
    String [] splitStrings = theString.split ("_");
    String output = "";
    String insert;
    for (int i = 0;
    i < insertArray.length; i ++) {
        if (insertArray [i].substring (i).equalsIgnoreCase ("a") || insertArray [i].substring (i).equalsIgnoreCase ("e") || insertArray [i].substring (i).equalsIgnoreCase ("i") || insertArray [i].substring (i).equalsIgnoreCase ("o") || insertArray [i].substring (i).equalsIgnoreCase ("u")) {
            insert = "an " + insertArray [i];
        } else {
            insert = "a " + insertArray [i];
        }
        output = output + splitStrings [i] + insert;
    }
    System.out.println (output);
}
----------------------------------------

public static void printWithVar (String theString, String [] array) {
    int wordArrayPosition = 0;
    String [] vowels = {"a", "e", "i", "o", "u"};
    StringBuilder builder = new StringBuilder (theString);
    int indexOfSymbol = builder.indexOf ("_");
    while (indexOfSymbol != - 1) {
        String word = null;
        if (Arrays.asList (vowels).contains (array [wordArrayPosition].charAt (0))) {
            word = "an " + array [wordArrayPosition];
        } else {
            word = "a " + array [wordArrayPosition];
        }
        if ((indexOfSymbol == 0) || (builder.charAt (indexOfSymbol - 1) == '.')) {
            word = "A" + word.substring (1);
        }
        builder.replace (indexOfSymbol, indexOfSymbol + 1, word);
        wordArrayPosition += 1;
        indexOfSymbol = builder.indexOf ("_");
    }
    System.out.println (builder.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33902623_33902776_9_20
33902623_33902870_10_21
Title: Having trouble calling an array from one method to another in Java 
----------------------------------------

public static void test2 (String [] array) {
    int count = 0;
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            System.out.print (array [count] + "\t");
            count ++;
        }
        System.out.println ();
        System.out.println ();
        System.out.println ();
    }
}
----------------------------------------

public static void test2 (String [] array) {
    int count = 0;
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            System.out.print (array [count] + "\t");
            count ++;
        }
        System.out.println ();
        System.out.println ();
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33903278_33903333_59_94
33903278_33903333_72_90
Title: Modifying JLabel text changes its alignement 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    creatingSpeciesPanel.setTitleLabelText (CreatingSpeciesPanel.INITIALIZING);
    final JDialog dialog = new JDialog (mainFrame, "Creating Species", ModalityType.APPLICATION_MODAL);
    dialog.add (creatingSpeciesPanel);
    dialog.pack ();
    dialog.setLocationRelativeTo (mainFrame);
    new Timer (200, new ActionListener () {
        private int doneCount = 0;
        private int value = 0;
        private static final int MAX_DONE_COUNT = 10;
        @Override
        public void actionPerformed (ActionEvent e) {
            if (value < 100) {
                value += (int) Math.random () * 5 + 5;
                value = Math.min (100, value);
                creatingSpeciesPanel.setValue (value);
                if (value == 100) {
                    creatingSpeciesPanel.setTitleLabelText (CreatingSpeciesPanel.DONE);
                }
            } else {
                doneCount ++;
                if (doneCount >= MAX_DONE_COUNT) {
                    ((Timer) e.getSource ()).stop ();
                    dialog.setVisible (false);
                }
            }
        }}

    ).start ();
    dialog.setVisible (true);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (value < 100) {
        value += (int) Math.random () * 5 + 5;
        value = Math.min (100, value);
        creatingSpeciesPanel.setValue (value);
        if (value == 100) {
            creatingSpeciesPanel.setTitleLabelText (CreatingSpeciesPanel.DONE);
        }
    } else {
        doneCount ++;
        if (doneCount >= MAX_DONE_COUNT) {
            ((Timer) e.getSource ()).stop ();
            dialog.setVisible (false);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33905350_33905974_1_74
33905350_33927733_1_24
Title: Nim game not working Java 
----------------------------------------

public static void gamePlay () {
    int stones = 25, computer, player;
    boolean valc, valp;
    Scanner inData = new Scanner (System.in);
    computer = computerMoves (stones);
    valc = checkIfComputerValid (stones);
    boolean playerTurn = false;
    while (stones > 0) {
        if (playerTurn) {
            playerTurn = false;
            System.out.println ("How many stones will you take?(max 3): ");
            player = inData.nextInt ();
            valp = checkIfPlayerValid (stones, player);
            while (! valp) {
                System.out.println (player + " stones is invalid, choose to take 1, 2, or 3.");
                player = inData.nextInt ();
                valp = checkIfPlayerValid (stones, player);
            }
            if (valp) {
                stones = stones - player;
                System.out.println ("There are " + stones + " stones remaining.");
                valp = checkIfPlayerValid (stones, player);
                if (stones == 0) {
                    System.out.println ("You win.");
                    continue;
                }
            }
        } else {
            valc = false;
            while (! valc) {
                computer = computerMoves (stones);
                valc = checkIfComputerValid (stones);
            }
            if (valc) {
                System.out.println ("The computer takes " + computer + " stone(s)");
                stones = stones - computer;
                System.out.println ("There are " + stones + " stones remaining.");
                playerTurn = true;
                if (stones == 0) {
                    System.out.println ("The computer takes " + computer + " stone(s)");
                    continue;
                }
            }
        }
    }
}
----------------------------------------

public static void gamePlay () {
    int stonesRemaining = 25;
    System.out.println ("The game begins with " + stonesRemaining + " stones");
    boolean playersTurn = false;
    int stonesJustTaken = 0;
    while (stonesRemaining >= 0) {
        if (playersTurn) {
            stonesJustTaken = playerMoves (stonesRemaining);
        } else {
            stonesJustTaken = computerMoves (stonesRemaining);
            System.out.println ("The computer takes " + stonesJustTaken + " stone(s)");
        }
        stonesRemaining = stonesRemaining - stonesJustTaken;
        System.out.println ("There are " + stonesRemaining + " stones remaining.");
        if (stonesRemaining <= 0) {
            printWinningMessage (playersTurn);
            return;
        }
        playersTurn = ! playersTurn;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33916647_33917314_1_15
33916647_33917422_1_21
Title: How do I print certain parts of my 2D array in a certain order? 
----------------------------------------

public static void print_player_info (String [] [] data, String player) {
    String name = player.toLowerCase ();
    for (int i = 0;
    i < data [0].length; i ++) {
        String namecolumn = data [i] [0];
        String rownames = data [0] [i];
        if (data [i] [0].contains (player)) {
            for (int j = 0;
            j < data [0].length; j ++) {
                System.out.println (rownames + ": " + data [j] [i]);
            }
        }
    }
}
----------------------------------------

public static void print_player_info (String [] [] data, String player) {
    String searchString = player.toLowerCase ();
    for (int row = 1;
    row < data.length; row ++) {
        String playerInThisRow = data [row] [0];
        if (playerInThisRow.toLowerCase ().contains (searchString)) {
            for (int column = 0;
            column < data [0].length; column ++) {
                String columnContent = data [row] [column];
                String columnName = data [0] [column];
                System.out.println (columnName + ": " + columnContent);
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3391794_3444682_28_79
3391794_3444682_40_50
Title: SWT ExpandListener executes before collapse occurs on Linux 
----------------------------------------

public void run () {
    final int [] orgSize = new int [1];
    final int [] currentSize = new int [1];
    final Object lock = new Object ();
    if (display.isDisposed () || bar.isDisposed ()) {
        return;
    }
    display.syncExec (new Runnable () {
        public void run () {
            if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
                return;
            }
            synchronized (lock) {
                bar.getShell ().pack (true);
                orgSize [0] = bar.getShell ().getSize ().y;
                currentSize [0] = orgSize [0];
            }
        }}

    );
    while (currentSize [0] == orgSize [0]) {
        if (display.isDisposed () || bar.isDisposed ()) {
            return;
        }
        display.syncExec (new Runnable () {
            public void run () {
                synchronized (lock) {
                    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
                        return;
                    }
                    currentSize [0] = bar.getShell ().getSize ().y;
                    if (currentSize [0] != orgSize [0]) {
                        return;
                    } else {
                        bar.getShell ().layout (true);
                        bar.getShell ().pack (true);
                    }
                }
            }}

        );
    }
}
----------------------------------------

public void run () {
    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
        return;
    }
    synchronized (lock) {
        bar.getShell ().pack (true);
        orgSize [0] = bar.getShell ().getSize ().y;
        currentSize [0] = orgSize [0];
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3391794_3444682_28_79
3391794_3444682_59_76
Title: SWT ExpandListener executes before collapse occurs on Linux 
----------------------------------------

public void run () {
    final int [] orgSize = new int [1];
    final int [] currentSize = new int [1];
    final Object lock = new Object ();
    if (display.isDisposed () || bar.isDisposed ()) {
        return;
    }
    display.syncExec (new Runnable () {
        public void run () {
            if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
                return;
            }
            synchronized (lock) {
                bar.getShell ().pack (true);
                orgSize [0] = bar.getShell ().getSize ().y;
                currentSize [0] = orgSize [0];
            }
        }}

    );
    while (currentSize [0] == orgSize [0]) {
        if (display.isDisposed () || bar.isDisposed ()) {
            return;
        }
        display.syncExec (new Runnable () {
            public void run () {
                synchronized (lock) {
                    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
                        return;
                    }
                    currentSize [0] = bar.getShell ().getSize ().y;
                    if (currentSize [0] != orgSize [0]) {
                        return;
                    } else {
                        bar.getShell ().layout (true);
                        bar.getShell ().pack (true);
                    }
                }
            }}

        );
    }
}
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
            return;
        }
        currentSize [0] = bar.getShell ().getSize ().y;
        if (currentSize [0] != orgSize [0]) {
            return;
        } else {
            bar.getShell ().layout (true);
            bar.getShell ().pack (true);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3391794_3444682_40_50
3391794_3444682_59_76
Title: SWT ExpandListener executes before collapse occurs on Linux 
----------------------------------------

public void run () {
    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
        return;
    }
    synchronized (lock) {
        bar.getShell ().pack (true);
        orgSize [0] = bar.getShell ().getSize ().y;
        currentSize [0] = orgSize [0];
    }
}
----------------------------------------

public void run () {
    synchronized (lock) {
        if (bar.isDisposed () || bar.getShell ().isDisposed ()) {
            return;
        }
        currentSize [0] = bar.getShell ().getSize ().y;
        if (currentSize [0] != orgSize [0]) {
            return;
        } else {
            bar.getShell ().layout (true);
            bar.getShell ().pack (true);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33931160_33931402_1_23
33931160_33931475_8_31
Title: Adding letters to the top of a game board printed with nested for loops 
----------------------------------------

public void printBoard () {
    System.out.print ("  ");
    for (int i = 0;
    i < board.length; ++ i) System.out.print (" " + (char) (i + 'A') + " ");

    for (int i = 0;
    i < board.length; i ++) {
        for (int j = 0;
        j < board.length; j ++) {
            board [i] [j] = '-';
        }
    }
    for (int i = 0;
    i < board.length; i ++) {
        System.out.println ();
        for (int j = 0;
        j < board.length; j ++) {
            if (j == 0) {
                System.out.print (i + 1);
                System.out.print ("| ");
            }
            System.out.print (board [i] [j] + " | ");
        }
    }
}
----------------------------------------

public void printBoard () {
    System.out.print ("  ");
    for (int i = 0;
    i < board.length; i ++) {
        char hor = (char) (i + 65);
        System.out.print (hor + " ");
    }
    for (int i = 0;
    i < board.length; i ++) {
        for (int j = 0;
        j < board.length; j ++) {
            board [i] [j] = '-';
        }
    }
    for (int i = 0;
    i < board.length; i ++) {
        System.out.println ();
        for (int j = 0;
        j < board.length; j ++) {
            if (j == 0) {
                System.out.print (i + 1);
                System.out.print ("|");
            }
            System.out.print (board [i] [j] + "|");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33935220_39403768_13_66
33935220_47068015_10_25
Title: JAVA-8 streams collect advanced usage 
----------------------------------------

public static void main (String [] args) {
    StubsUtils.forEach (new ExecutorContext () {
        List < Integer > consumerList = new ArrayList < Integer > ();
        @Override
        public List < Integer > getQuery () {
            return QUERY_RESULTSET_INTEGER;
        }@Override
        public Consumer < Integer > getConsumer () {
            return x -> {
                System.out.println (x);
                consumerList.add (x);
            };
        }}

    );
    StubsUtils.forEach (new ExecutorContext () {
        List < String > consumerList = new ArrayList < String > ();
        @Override
        public List < String > getQuery () {
            return QUERY_RESULTSET_STRING;
        }@Override
        public Consumer < String > getConsumer () {
            return x -> {
                System.out.println (x);
                consumerList.add (x);
            };
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    TestLookupService testLookupService = new TestLookupService ();
    testLookupService.forEach ("A", val -> {
        System.out.println (" Count of 'A' is " + val);
    });
    System.out.println ("******************************************");
    testLookupService.forEach ("B", val -> {
        System.out.println (" Count of 'B' is " + val);
    });
    System.out.println ("******************************************");
    testLookupService.forEach ("C", val -> {
        System.out.println (" Count of 'C' is " + val);
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33940564_33940913_1_27
33940564_33940916_1_11
Title: How to exit the program when Ctrl+D is entered in Java? 
----------------------------------------

public static void main (String [] args) {
    Scanner mySc = new Scanner (System.in);
    while (mySc.hasNext ()) {
        if (mySc.hasNextInt ()) {
            System.out.println (String.format ("myStack.push(%s);", mySc.nextInt ()));
        } else {
            String input = mySc.nextLine ();
            System.out.println (String.format ("input = %s", input));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        byte [] b = new byte [1024];
        for (int r;
        (r = System.in.read (b)) != - 1;) {
            String buffer = new String (b, 0, r);
            System.out.println ("read: " + buffer);
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33944939_33967683_117_175
33944939_33967683_81_108
Title: KeyListener doesn't do anything after using getContentPane() through ActionListener 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (xTank <= 0) xTank = 0;

    if (xTank >= 400) xTank = 400;

    if (yTank <= 0) yTank = 0;

    if (yTank >= 600 - tankHeight) yTank = 600 - tankHeight;

    if (truot == 0) {
        if (xAlien <= 1200 - alienWidth) {
            xAlienMotion = 1;
            yAlienMotion = 0;
        }
        if (xAlien >= 1200 - alienWidth) {
            xAlienMotion = 0;
            yAlienMotion = 1;
        }
        if (yAlien >= 600 - alienHeight) {
            xAlienMotion = - 1;
            yAlienMotion = 0;
        }
        if (xAlien <= 800 && yAlien >= 0) {
            xAlienMotion = 0;
            yAlienMotion = - 1;
        }
    } else {
        if (trung == 0 && ((xTank <= xAlien + alienWidth && xTank + tankWidth >= xAlien + alienWidth && ((yTank >= yAlien && yTank <= yAlien + alienHeight) || (yTank + tankHeight >= yAlien && yTank + tankHeight <= yAlien + alienHeight))) || (yTank <= yAlien + alienHeight && yAlien + alienHeight <= yTank + tankHeight && ((xTank >= xAlien && xTank <= xAlien + alienWidth) || (xTank + tankWidth >= xAlien && xTank + tankWidth <= xAlien + alienWidth))) || (xTank + tankWidth >= xAlien && xAlien >= xTank && ((yTank >= yAlien && yTank <= yAlien + alienHeight) || (yTank + tankHeight >= yAlien && yTank + tankHeight <= yAlien + alienHeight))) || (yTank + tankHeight <= yAlien && yAlien >= yTank && ((xTank >= xAlien && xTank <= xAlien + alienWidth) || (xTank + tankWidth >= xAlien && xTank + tankWidth <= xAlien + alienWidth))))) {
            time.stop ();
            frame.setContentPane (new Defeated (frame));
            frame.pack ();
            return;
        } else {
            if (yAlien > yTank) {
                yAlienMotion = - 1;
                if (xAlien > xTank) xAlienMotion = - 1;
                else if (xAlien < xTank) xAlienMotion = 1;
                else xAlienMotion = 0;

            } else if (yAlien < yTank) {
                yAlienMotion = 1;
                if (xAlien > xTank) xAlienMotion = - 1;
                else if (xAlien < xTank) xAlienMotion = 1;
                else xAlienMotion = 0;

            } else {
                yAlienMotion = 0;
                if (xAlien > xTank) xAlienMotion = - 1;
                else if (xAlien < xTank) xAlienMotion = 1;

            }

        }
    }
    xTank += xTankMotion;
    yTank += yTankMotion;
    xRocket += xRocketMotion;
    yRocket += yRocketMotion;
    xAlien += xAlienMotion;
    yAlien += yAlienMotion;
    if ((xRocket >= 1200 || xRocket < 0 || yRocket < 0 || yRocket > 600) && truot == 0) {
        truot = 1;
        banduoc = true;
    }
    if (xRocket >= xAlien && xRocket <= xAlien + alienWidth && yRocket >= yAlien && yRocket <= yAlien + alienHeight) {
        trung = 1;
        frame.setContentPane (new Victory (frame));
        frame.pack ();
    }
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (banduoc) {
        fire = 1;
        if (key == 1) {
            xRocket = xTank;
            yRocket = yTank + tankHeight / 2;
            xRocketMotion = - 2;
            yRocketMotion = 0;
        }
        if (key == 2) {
            xRocket = xTank + tankWidth / 2;
            yRocket = yTank;
            yRocketMotion = - 2;
            xRocketMotion = 0;
        }
        if (key == 3) {
            xRocket = xTank + tankWidth;
            yRocket = yTank + tankHeight / 2;
            xRocketMotion = 2;
            yRocketMotion = 0;
        }
        if (key == 4) {
            xRocket = xTank + tankWidth / 2;
            yRocket = yTank + tankHeight;
            yRocketMotion = 2;
            xRocketMotion = 0;
        }
        banduoc = false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33952323_33952373_1_17
33952323_33952383_1_17
Title: Iterate over List of array objects 
----------------------------------------

public static void main (String [] args) {
    List < Object [] > items = new ArrayList < Object [] > ();
    String [] item = new String [5];
    item [0] = "saurabh";
    item [1] = "Kumar";
    item [2] = "Singh";
    items.add (item);
    for (Object [] d : items) {
        System.out.println (Arrays.toString (d));
    }
}
----------------------------------------

public static void main (String [] args) {
    List < Object [] > items = new ArrayList < Object [] > ();
    String [] item = new String [5];
    item [0] = "saurabh";
    item [1] = "Kumar";
    item [2] = "Singh";
    items.add (item);
    for (Object [] d : items) {
        System.out.println (Arrays.toString (d));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33954105_33954219_1_14
33954105_33955419_1_11
Title: How to create a method to return matching values in two arrays 
----------------------------------------

public static void main (String [] args) {
    int list1 [] = {1, 2, 55, 8, 7, 9, 60, 4};
    int list2 [] = {3, 12, 1, 71, 4, 6, 1, 10};
    for (int i = 0;
    i < list1.length; i ++) {
        System.out.println (list [i]);
        System.out.println (list [0]);
    }
    for (int j = 0;
    i < list2.length; j ++) {
        System.out.println (list [j]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int list1 [] = {1, 2, 55, 8, 7, 9, 60, 4};
    int list2 [] = {3, 12, 1, 71, 4, 6, 1, 10};
    for (int x : list1) {
        if (Arrays.asList (list2).contains (x)) {
            System.out.println (x + " : present in second array.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3396646_3396664_10_20
3396646_3403426_1_10
Title: Display Manifest properties in JSF2 
----------------------------------------

public void init () {
    File manifestFile = null;
    try {
        String home = FacesContext.getCurrentInstance ().getExternalContext ().getRealPath ("/");
        manifestFile = new File (home, "META-INF/MANIFEST.MF");
        manifest = new Manifest ();
        manifest.read (new FileInputStream (manifestFile));
    } catch (IOException ioe) {
        logger.error ("Unable to read the Manifest file from '" + manifestFile.getAbsolutePath () + "'", ioe);
    }
}
----------------------------------------

@PostConstruct
public void init () {
    try {
        InputStream is = FacesContext.getCurrentInstance ().getExternalContext ().getResourceAsStream ("/META-INF/MANIFEST.MF");
        manifest = new Manifest ();
        manifest.read (is);
    } catch (IOException ioe) {
        logger.error ("Unable to read the Manifest file from classpath.", ioe);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33967008_33967089_1_20
33967008_33967195_1_20
Title: Is there a way I can combine these two methods? 
----------------------------------------

public void reverse (Node...nodes) {
    Node h;
    if (nodes.length == 0) h = head;
    else {
        assert nodes.length == 1;
        h = nodes [0];
    }
    if (h.next == null) {
        System.out.print (h.data + " ");
        return;
    }
    reverse (h.next);
    System.out.print (h.data + " ");
}
----------------------------------------

public void reverse () {
    int length = length ();
    Node [] nodes = new Node [length];
    Node currentNode = head;
    int i = 0;
    while (currentNode != null) {
        nodes [i] = currentNode;
        currentNode = currentNode.next;
        i ++;
    }
    for (int j = length - 1;
    j >= 0; j --) {
        System.out.println (nodes [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33967008_33967179_1_12
33967008_33967195_1_20
Title: Is there a way I can combine these two methods? 
----------------------------------------

public void reverse (Node...headerInfo) {
    Node h = 0;
    if (headerinfo.length != 0) {
        h = headerInfo [0];
    }
    if (h.next == null) {
        System.out.print (h.data + " ");
        return;
    }
    reverse (h.next);
    System.out.print (h.data + " ");
}
----------------------------------------

public void reverse () {
    int length = length ();
    Node [] nodes = new Node [length];
    Node currentNode = head;
    int i = 0;
    while (currentNode != null) {
        nodes [i] = currentNode;
        currentNode = currentNode.next;
        i ++;
    }
    for (int j = length - 1;
    j >= 0; j --) {
        System.out.println (nodes [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33972152_33981600_57_73
33972152_33981600_77_92
Title: How to make android digital clock flash? 
----------------------------------------

public void run () {
    if (mTickerStopped) return;

    mCalendar.setTimeInMillis (System.currentTimeMillis ());
    if (dotsVisible.get ()) {
        setText (DateFormat.format (m24, mCalendar));
    } else {
        setText (DateFormat.format (m24space, mCalendar));
    }
    invalidate ();
    long now = SystemClock.uptimeMillis ();
    long next = now + 800;
    mHandler.postAtTime (mTicker, next);
}
----------------------------------------

public void run () {
    while (! dotsRunnerStopped) {
        try {
            Thread.sleep (800);
            Log.i (LOG_TAG, "slept for 1 sec");
            if (dotsVisible.compareAndSet (true, false)) {
                Log.i (LOG_TAG, "set visible to " + dotsVisible.get ());
            } else {
                dotsVisible.compareAndSet (false, true);
                Log.i (LOG_TAG, "Set visible to " + dotsVisible.get ());
            }
        } catch (InterruptedException ex) {
            Log.e (LOG_TAG, ex.getMessage ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33976919_33977566_1_13
33976919_37649471_1_13
Title: ArrayAdapter and retrofit 2.0 
----------------------------------------

@Override
public void onResponse (Response < List < tel_list > > response, Retrofit retrofit) {
    if (! response.isSuccess ()) {
        return;
    }
    List < tel_list > date = response.body ();
    ArrayAdapter adapter = new ArrayAdapter (MainActivity.this, date);
    listView.setAdapter (adapter);
}
----------------------------------------

@Override
public void onResponse (Response < List < tel_list > > response, Retrofit retrofit) {
    if (! response.isSuccess ()) {
        return;
    }
    List < tel_list > date = response.body ();
    ArrayAdapter adapter = new ArrayAdapter (MainActivity.this, android.R.layout.simple_list_item_1, date);
    listView.setAdapter (adapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33977282_33977415_1_11
33977282_33977522_1_11
Title: Java testing enum 
----------------------------------------

@Before
public void setUp () {
    Position LEFT = Position.LEFT;
    Position MIDDLE = Position.MIDDLE;
    Position RIGHT = Position.RIGHT;
    t1 = new Tower (LEFT);
    t2 = new Tower (MIDDLE);
    t3 = new Tower (RIGHT);
}
----------------------------------------

@Before
public void setUp () {
    LEFT = Position.LEFT;
    MIDDLE = Position.MIDDLE;
    RIGHT = Position.RIGHT;
    t1 = new Position (LEFT);
    t2 = new Position (MIDDLE);
    t3 = new Position (RIGHT);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33977650_33977769_1_13
33977650_33977789_1_16
Title: "removeElement method and rolling elements Dynamic Array" 
----------------------------------------

public static int removeElements (T val) {
    int cantRemoved = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (val == arr [i]) {
            cantRemoved ++;
            i ++;
        }
        if (i < arr.length) arr [i - cantRemoved] = arr [i];

    }
    return cantRemoved;
}
----------------------------------------

public int removeElements (T val) {
    int cantRemovidos = 0;
    for (int i = 0, j = 0;
    i < arr.length; i ++) {
        if (val == arr [i]) {
            cantRemovidos = cantRemovidos + 1;
        } else {
            arr [j] = arr [i];
            j ++;
        }
    }
    size = size - cantRemovidos;
    return cantRemovidos;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33977686_37164331_4_30
33977686_37164331_7_28
Title: Retrofit 2.0 + RxJava + Error JSON body 
----------------------------------------

public Observable < T > call (Observable < T > observable) {
    return observable.onErrorResumeNext (new Func1 < Throwable, Observable < ? extends T > > () {
        @Override
        public Observable < ? extends T > call (Throwable throwable) {
            if (throwable instanceof HttpException) {
                Retrofit retrofit = new Retrofit.Builder ().baseUrl (SERVER_URL).addConverterFactory (GsonConverterFactory.create ()).build ();
                Converter < ResponseBody, Error > errorConverter = retrofit.responseBodyConverter (Error.class, new Annotation [0]);
                try {
                    Error error = errorConverter.convert (((HttpException) throwable).response ().errorBody ());
                    return Observable.error (new Throwable (error.getMessage ()));
                } catch (Exception e2) {
                    return Observable.error (new Throwable ());
                }
            }
            return Observable.error (throwable);
        }}

    );
}
----------------------------------------

public Observable < ? extends T > call (Throwable throwable) {
    if (throwable instanceof HttpException) {
        Retrofit retrofit = new Retrofit.Builder ().baseUrl (SERVER_URL).addConverterFactory (GsonConverterFactory.create ()).build ();
        Converter < ResponseBody, Error > errorConverter = retrofit.responseBodyConverter (Error.class, new Annotation [0]);
        try {
            Error error = errorConverter.convert (((HttpException) throwable).response ().errorBody ());
            return Observable.error (new Throwable (error.getMessage ()));
        } catch (Exception e2) {
            return Observable.error (new Throwable ());
        }
    }
    return Observable.error (throwable);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3398153_3398623_1_30
3398153_5256930_1_37
Title: Removing duplicate character from array 
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) {
        return;
    }
    int len = str.length;
    if (len < 2) {
        return;
    }
    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str [i] == str [j]) {
                break;
            }
        }
        if (j == tail) {
            str [tail] = str [i];
            ++ tail;
        }
    }
    for (; tail < len; tail ++) {
        str [tail] = 0;
    }
}
----------------------------------------

public static void removeDuplicates (StringBuffer str) {
    int len = str.length ();
    if (len < 2) {
        return;
    }
    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str.charAt (i) == str.charAt (j)) {
                break;
            }
        }
        if (j == tail) {
            str.setCharAt (tail, str.charAt (i));
            ++ tail;
        }
    }
    str.setLength (tail);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3398153_37562499_1_26
3398153_5256930_1_37
Title: Removing duplicate character from array 
----------------------------------------

public static void removeDuplicates (char [] str) {
    if (str == null) {
        return;
    }
    int len = str.length;
    if (len < 2) {
        return;
    }
    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str [i] == str [j]) break;

        }
        if (j == tail) {
            str [tail] = str [i];
            if (i != tail) str [i] = 0;

            ++ tail;
        } else {
            str [i] = 0;
        }
    }
}
----------------------------------------

public static void removeDuplicates (StringBuffer str) {
    int len = str.length ();
    if (len < 2) {
        return;
    }
    int tail = 1;
    for (int i = 1;
    i < len; ++ i) {
        int j;
        for (j = 0; j < tail; ++ j) {
            if (str.charAt (i) == str.charAt (j)) {
                break;
            }
        }
        if (j == tail) {
            str.setCharAt (tail, str.charAt (i));
            ++ tail;
        }
    }
    str.setLength (tail);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33988382_33988456_4_21
33988382_33988907_5_13
Title: Calculator and using arrays 
----------------------------------------

public static void main (String args []) {
    double i, n;
    Scanner input = new Scanner (System.in);
    while (input.hasNext ()) {
        n = input.nextInt ();
        double a [] = new double [(int) n];
        for (i = 0; i < n; i ++) {
            a [(int) i] = input.nextDouble ();
            double max1 = max (a);
            double min1 = min (a);
            double sum1 = sum (a);
            double avg = sum1 / n;
            System.out.printf ("%10.2f", min1, max1, sum1, avg);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int arraysize = in.nextInt ();
    Double [] array = new Double [arraysize];
    for (int i = 0;
    i < arraysize; i ++) {
        array [i] = in.nextDouble ();
    }
    System.out.println (sum (array) + " " + min (array) + " " + max (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33988382_33988456_4_21
33988382_33989047_5_22
Title: Calculator and using arrays 
----------------------------------------

public static void main (String args []) {
    double i, n;
    Scanner input = new Scanner (System.in);
    while (input.hasNext ()) {
        n = input.nextInt ();
        double a [] = new double [(int) n];
        for (i = 0; i < n; i ++) {
            a [(int) i] = input.nextDouble ();
            double max1 = max (a);
            double min1 = min (a);
            double sum1 = sum (a);
            double avg = sum1 / n;
            System.out.printf ("%10.2f", min1, max1, sum1, avg);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    while (in.hasNext ()) {
        int arraysize = in.nextInt ();
        Double [] array = new Double [arraysize];
        for (int i = 0;
        i < arraysize; i ++) {
            array [i] = in.nextDouble ();
        }
        double sum1 = sum (array);
        double max1 = max (array);
        double min1 = min (array);
        double avg = sum1 / arraysize;
        System.out.printf ("%10.2f", sum1);
        System.out.printf ("%10.2f", avg);
        System.out.printf ("%10.2f", min1);
        System.out.printf ("%10.2f", max1);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33988382_33988907_15_24
33988382_33989047_24_33
Title: Calculator and using arrays 
----------------------------------------

private static double sum (Double [] array) {
    double sum = 0;
    double i = 0;
    Double a [] = new Double [array.length];
    a = array;
    for (double e : a) sum += e;

    return sum;
}
----------------------------------------

private static double sum (Double [] array) {
    double sum = 0;
    double i = 0;
    Double a [] = new Double [array.length];
    a = array;
    for (double e : a) sum += e;

    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33988382_33988907_5_13
33988382_33989047_5_22
Title: Calculator and using arrays 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int arraysize = in.nextInt ();
    Double [] array = new Double [arraysize];
    for (int i = 0;
    i < arraysize; i ++) {
        array [i] = in.nextDouble ();
    }
    System.out.println (sum (array) + " " + min (array) + " " + max (array));
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    while (in.hasNext ()) {
        int arraysize = in.nextInt ();
        Double [] array = new Double [arraysize];
        for (int i = 0;
        i < arraysize; i ++) {
            array [i] = in.nextDouble ();
        }
        double sum1 = sum (array);
        double max1 = max (array);
        double min1 = min (array);
        double avg = sum1 / arraysize;
        System.out.printf ("%10.2f", sum1);
        System.out.printf ("%10.2f", avg);
        System.out.printf ("%10.2f", min1);
        System.out.printf ("%10.2f", max1);
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33990043_33990105_1_17
33990043_33990129_1_13
Title: while loop is prompting one more word than asked in 
----------------------------------------

public void sentenceArray () {
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    int size = input.nextInt ();
    String [] sentence = new String [size];
    int i = 0;
    while (i < size) {
        System.out.println ("please enter a word.");
        String word = input.next ();
        sentence [i] = word;
        i ++;
    }
    displayArray (sentence);
}
----------------------------------------

private void sentenceArray () {
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    int size = input.nextInt ();
    String [] sentence = new String [size];
    int i = 0;
    do {
        System.out.println ("Please enter a word.");
        sentence [i] = input.next ();
        i ++;
    } while (i < size);
    displayArray (sentence);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33990043_33990105_1_17
33990043_33990158_7_24
Title: while loop is prompting one more word than asked in 
----------------------------------------

public void sentenceArray () {
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    int size = input.nextInt ();
    String [] sentence = new String [size];
    int i = 0;
    while (i < size) {
        System.out.println ("please enter a word.");
        String word = input.next ();
        sentence [i] = word;
        i ++;
    }
    displayArray (sentence);
}
----------------------------------------

private void sentenceArray () {
    int size = 0;
    int i = 0;
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    size = input.nextInt ();
    String [] sentence = new String [size];
    while (i < size) {
        System.out.println ("Please enter a word.");
        sentence [i] = input.next ();
        i ++;
    }
    displayArray (sentence);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33990043_33990129_1_13
33990043_33990158_7_24
Title: while loop is prompting one more word than asked in 
----------------------------------------

private void sentenceArray () {
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    int size = input.nextInt ();
    String [] sentence = new String [size];
    int i = 0;
    do {
        System.out.println ("Please enter a word.");
        sentence [i] = input.next ();
        i ++;
    } while (i < size);
    displayArray (sentence);
}
----------------------------------------

private void sentenceArray () {
    int size = 0;
    int i = 0;
    Scanner input = new Scanner (System.in);
    System.out.println ("How many words would you like to enter?");
    size = input.nextInt ();
    String [] sentence = new String [size];
    while (i < size) {
        System.out.println ("Please enter a word.");
        sentence [i] = input.next ();
        i ++;
    }
    displayArray (sentence);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33993772_33993883_1_17
33993772_33994113_1_20
Title: Java void into an int array 
----------------------------------------

public static int count (String text) {
    int count;
    for (char letter = (char) 65;
    letter <= 90; letter ++) {
        count = 0;
        for (int i = 0;
        i < text.length (); i ++) {
            if (letter == text.charAt (i) || (letter + 32) == text.charAt (i)) {
                count ++;
            }
        }
        if (count > 0) {
            System.out.println (letter + " = " + count);
        }
    }
    return count;
}
----------------------------------------

public static int [] count (String text) {
    int [] counts = new int [26];
    for (char letter = 'A';
    letter <= 'Z'; letter ++) {
        int currentIndex = (int) letter - 'A';
        for (int i = 0;
        i < text.length (); i ++) {
            if (letter == text.charAt (i) || (letter + 32) == text.charAt (i)) {
                counts [currentIndex] ++;
            }
        }
        if (counts [currentIndex] > 0) {
            System.out.println (letter + " = " + counts [currentIndex]);
        }
    }
    return counts;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33993772_33993883_1_17
33993772_33994708_1_10
Title: Java void into an int array 
----------------------------------------

public static int count (String text) {
    int count;
    for (char letter = (char) 65;
    letter <= 90; letter ++) {
        count = 0;
        for (int i = 0;
        i < text.length (); i ++) {
            if (letter == text.charAt (i) || (letter + 32) == text.charAt (i)) {
                count ++;
            }
        }
        if (count > 0) {
            System.out.println (letter + " = " + count);
        }
    }
    return count;
}
----------------------------------------

public static int [] count (String text) {
    int [] totals = new int [26];
    for (char c : text.toUpperCase ().toCharArray ()) {
        int idx = (int) c - (int) 'A';
        if ((idx >= 0) && (idx <= 26)) {
            totals [idx] ++;
        }
    }
    return totals;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33993772_33994113_1_20
33993772_33994708_1_10
Title: Java void into an int array 
----------------------------------------

public static int [] count (String text) {
    int [] counts = new int [26];
    for (char letter = 'A';
    letter <= 'Z'; letter ++) {
        int currentIndex = (int) letter - 'A';
        for (int i = 0;
        i < text.length (); i ++) {
            if (letter == text.charAt (i) || (letter + 32) == text.charAt (i)) {
                counts [currentIndex] ++;
            }
        }
        if (counts [currentIndex] > 0) {
            System.out.println (letter + " = " + counts [currentIndex]);
        }
    }
    return counts;
}
----------------------------------------

public static int [] count (String text) {
    int [] totals = new int [26];
    for (char c : text.toUpperCase ().toCharArray ()) {
        int idx = (int) c - (int) 'A';
        if ((idx >= 0) && (idx <= 26)) {
            totals [idx] ++;
        }
    }
    return totals;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33999566_33999718_1_18
33999566_33999727_1_19
Title: How to type a string to end a integer Scanning process in Java 
----------------------------------------

public static int scanaverage () {
    System.out.println ("Enter any number, type 'END' to exit");
    Scanner input = new Scanner (System.in);
    int total = 0;
    int count = 0;
    while (! (input.nextLine ().equals ("END"))) {
        try {
            total += input.nextInt ();
            count += 1;
        } catch (InputMismatchException e) {
        }
    }
    return total / count;
}
----------------------------------------

public static int scanaverage () {
    System.out.println ("Enter any number, type 'END' to exit");
    Scanner input = new Scanner (System.in);
    int total = 0;
    int count = 0;
    String line;
    do {
        line = input.nextLine ();
        try {
            total += Integer.parseInt (line);
            count += 1;
        } catch (NumberFormatException e) {
            if (! line.equalsIgnoreCase ("end")) {
                System.out.println ("Wrong input, input another number or end");
            }
        }
    } while (! line.equalsIgnoreCase ("end"));
    return total / count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34003772_34004084_2_23
34003772_34004086_12_32
Title: "Java : Writing console output to file Not working" 
----------------------------------------

public static void main (String [] args) throws IOException, InterruptedException {
    PrintStream printStream = new PrintStream (new FileOutputStream ("ports.txt"));
    System.setOut (printStream);
    List < PortTester > testers = new LinkedList < > ();
    for (int i = 5935;
    i < 10000; i ++) {
        testers.add (new PortTester (i));
    }
    for (PortTester t : testers) {
        t.y.join ();
    }
    printStream.flush ();
    printStream.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    try (PrintStream printStream = new PrintStream (new FileOutputStream ("E:\\ports.txt"))) {
        System.setOut (printStream);
        ExecutorService pool = Executors.newCachedThreadPool ();
        for (int i = 5935;
        i < 10000; i ++) {
            final int port = i;
            pool.execute (() -> {
                try (Socket socket = new Socket ("localhost", port)) {
                    System.out.println ("Port is alive - " + port);
                } catch (IOException e) {
                    System.out.println ("Port is dead... - " + port);
                }
            });
        }
        pool.awaitTermination (100, TimeUnit.SECONDS);
        printStream.flush ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34007349_34007562_13_27
34007349_34008671_23_36
Title: Why my selection sort code doesn't work? 
----------------------------------------

public static void selectionSort (int [] n) {
    for (int start = 0;
    start < n.length - 1; start ++) {
        int smallest = start;
        for (int i = start + 1;
        i < n.length; i ++) {
            if (n [i] < n [smallest]) smallest = i;

        }
        int tmp = n [start];
        n [start] = n [smallest];
        n [smallest] = tmp;
    }
}
----------------------------------------

private static void selectionSort (int [] array) {
    for (int j = 0;
    j < array.length; j ++) {
        for (int i = 0;
        i < array.length - 1 - j; i ++) {
            if (array [i] > array [i + 1]) {
                int tmp = array [i];
                array [i] = array [i + 1];
                array [i + 1] = tmp;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34007349_34007562_1_11
34007349_34008671_1_13
Title: Why my selection sort code doesn't work? 
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int n = 10;
    int [] a = new int [n];
    for (int i = 0;
    i < n; i ++) a [i] = ran.nextInt (1000);

    selectionSort (a);
    for (int i : a) {
        System.out.print (i + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    Random ran = new Random ();
    int n = 10;
    int [] array = new int [n];
    for (int i = 0;
    i < n; i ++) {
        array [i] = ran.nextInt (1000);
    }
    printArray (array);
    selectionSort (array);
    printArray (array);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34007766_34007819_1_10
34007766_34007910_1_10
Title: Prime Factorization Program in Java Using Loops 
----------------------------------------

public static List < Integer > primeFactorization (int a) {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 2;
    i <= a; i ++) {
        while (a % i == 0) {
            list.add (i);
            a /= i;
        }
    }
    return list;
}
----------------------------------------

public static String primeFactorization (int a) {
    String factors = "";
    for (int i = 2;
    i <= a; i ++) {
        while (a % i == 0) {
            factors += i + " ";
            a /= i;
        }
    }
    return factors;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34025379_34025836_8_21
34025379_34027061_9_21
Title: Joining both hashsets together 
----------------------------------------

public static void main (String args []) {
    populateDB ();
    Scanner scanner = new Scanner (System.in);
    String planetName = scanner.nextLine ();
    if (planetMap.get (planetName) != null) {
        System.out.println ("The planet " + planetName + " was found in " + planetMap.get (planetName));
    } else {
        System.out.println ("Invalid Planet Name");
    }
}
----------------------------------------

public static void main (String args []) {
    populateDB ();
    Scanner scanner = new Scanner (System.in);
    String planetName = scanner.nextLine ();
    Planet planet = planetMap.get (planetName);
    if (planet != null) System.out.println ("The planet " + planet.name + " was found in " + planet.date + " and is currently located " + planet.location + ".");
    else System.out.println ("Invalid Planet Name");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34027296_34027404_5_24
34027296_34028673_3_31
Title: reading in delimited line from txt file in java 
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader br = new BufferedReader (new FileReader ("data.txt"));
    String line = null;
    while ((line = br.readLine ()) != null) {
        String [] values = line.split ("\\|");
        if (values.length < 4) continue;

        String age = values [0];
        String fname = values [1];
        String lname = values [2];
        String city = values [3];
        System.out.println (age + "\t" + fname + "\t" + lname + "\t" + city);
    }
    br.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BufferedReader br = new BufferedReader (new FileReader ("C:/inputPiped.txt"));
    ArrayList < Person > list = new ArrayList < Person > ();
    Person p = null;
    String readLine = br.readLine ();
    while (readLine != null) {
        String [] person = readLine.split ("\\|");
        System.out.println (person.length);
        p = new Person ();
        p.setAge (Integer.parseInt (person [0]));
        p.setFname (person [1]);
        p.setLname (person [2]);
        p.setCity (person [3]);
        list.add (p);
        readLine = br.readLine ();
    }
    Collections.sort (list);
    FileOutputStream fout = new FileOutputStream ("C:/ooo.txt");
    for (Person prsn : list) {
        fout.write (prsn.toString ().getBytes ());
        fout.write ('\n');
    }
    System.out.println ("DONE");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34029652_34029739_1_16
34029652_34031716_1_12
Title: Java Case Switcher 
----------------------------------------

public static String altCase (String text) {
    if (text == null || text.isEmpty ()) {
        return text;
    }
    StringBuilder sb = new StringBuilder (text.length ());
    for (char ch : text.toCharArray ()) {
        if (Character.isUpperCase (ch)) {
            sb.append (Character.toLowerCase (ch));
        } else if (Character.isLowerCase (ch)) {
            sb.append (Character.toUpperCase (ch));
        } else {
            sb.append (ch);
        }

    }
    return sb.toString ();
}
----------------------------------------

public static String altCase (String text) {
    String str = "";
    str += Character.toUpperCase (text.charAt (0));
    for (int i = 1;
    i <= text.length () - 1; i ++) {
        char ch = text.charAt (i);
        boolean lastUp = flipFlop (i);
        char temp = switcher (ch, lastUp);
        str += temp;
    }
    return str;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3403226_3403259_5_18
3403226_42931100_4_27
Title: How to run linux commands in java code? 
----------------------------------------

public static void main (String args []) {
    String s;
    Process p;
    try {
        p = Runtime.getRuntime ().exec ("ls -aF");
        BufferedReader br = new BufferedReader (new InputStreamReader (p.getInputStream ()));
        while ((s = br.readLine ()) != null) System.out.println ("line: " + s);

        p.waitFor ();
        System.out.println ("exit: " + p.exitValue ());
        p.destroy ();
    } catch (Exception e) {
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        Process process = Runtime.getRuntime ().exec ("pwd");
        process.waitFor ();
        BufferedReader reader = new BufferedReader (new InputStreamReader (process.getInputStream ()));
        String line;
        while ((line = reader.readLine ()) != null) {
            System.out.println (line);
        }
    } catch (Exception e) {
        System.out.println (e);
    } finally {
        process.destroy ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3403375_20839916_7_20
3403375_41356457_6_24
Title: Print Palindrome in Java 
----------------------------------------

public static void main (String [] args) {
    String original, reverse = "";
    System.out.println ("Enter the text!");
    original = c.next ();
    int length = original.length ();
    for (int i = length - 1;
    i >= 0; i --) reverse = reverse + original.charAt (i);

    if (original.equals (reverse)) System.out.println ("entered strig is a palindrome");
    else System.out.println ("the text is not a palindrome");

}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String A = sc.next ();
    int len = A.length ();
    String B = "";
    for (int i = len - 1;
    i >= 0; i --) {
        B = B + A.charAt (i);
    }
    if (A.equals (B)) System.out.println ("Yes");
    else System.out.println ("No");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34037909_34038926_19_47
34037909_46070930_30_91
Title: Creating video player using Java 
----------------------------------------

public void start (Stage stage) {
    stage.setTitle ("Media Player");
    Media media = new Media ((arg1 != null) ? arg1 : MEDIA_URL);
    javafx.scene.media.MediaPlayer mediaPlayer = new javafx.scene.media.MediaPlayer (media);
    mediaPlayer.setAutoPlay (true);
    mediaPlayer.setCycleCount (javafx.scene.media.MediaPlayer.INDEFINITE);
    media.getTracks ().addListener (new ListChangeListener < Track > () {
        public void onChanged (Change < ? extends Track > change) {
            System.out.println ("Track> " + change.getList ());
        }}

    );
    media.getMetadata ().addListener (new MapChangeListener < String, Object > () {
        public void onChanged (MapChangeListener.Change < ? extends String, ? extends Object > change) {
            System.out.println ("Metadata> " + change.getKey () + " -> " + change.getValueAdded ());
        }}

    );
    MediaView mediaView = new MediaView (mediaPlayer);
    Group root = new Group ();
    Scene scene = new Scene (root, 800, 600);
    root.getChildren ().add (mediaView);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage stage) {
    URL mediaUrl = getClass ().getResource ("Test.mp4");
    String mediaStringUrl = mediaUrl.toExternalForm ();
    Media media = new Media (mediaStringUrl);
    final MediaPlayer player = new MediaPlayer (media);
    player.setAutoPlay (true);
    MediaView mediaView = new MediaView (player);
    mediaView.setFitWidth (400);
    mediaView.setFitHeight (300);
    mediaView.setSmooth (true);
    mediaView.setLayoutX (200);
    mediaView.setLayoutY (200);
    DropShadow dropshadow = new DropShadow ();
    dropshadow.setOffsetY (5.0);
    dropshadow.setOffsetX (5.0);
    dropshadow.setColor (Color.RED);
    mediaView.setEffect (dropshadow);
    Rectangle rect4 = new Rectangle (35, 55, 95, 25);
    rect4.setFill (Color.RED);
    rect4.setStroke (Color.BLACK);
    rect4.setStrokeWidth (1);
    VBox root = new VBox (1, mediaView);
    GridPane gridpane = new GridPane ();
    gridpane.setPadding (new Insets (95));
    gridpane.setHgap (1);
    gridpane.setVgap (10);
    GridPane.setHalignment (rect4, HPos.CENTER);
    Group grp = new Group ();
    gridpane.add (root, 1, 1);
    grp.getChildren ().add (gridpane);
    Scene scene = new Scene (grp);
    stage.setScene (scene);
    stage.setTitle ("A simple Media Example");
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3403826_3403879_1_12
3403826_3404103_1_19
Title: How to dynamically compute a list of colors? 
----------------------------------------

List < Integer > getUniqueColors (int amount) {
    final int lowerLimit = 0x101010;
    final int upperLimit = 0xE0E0E0;
    final int colorStep = (upperLimit - lowerLimit) / amount;
    final List < Integer > colors = new ArrayList < Integer > (amount);
    for (int i = 0;
    i < amount; i ++) {
        int color = lowerLimit + colorStep * i;
        colors.add (color);
    }
    return colors;
}
----------------------------------------

List < int > getUniqueColors (int amount) {
    final int lowerLimit = 0x10;
    final int upperLimit = 0xE0;
    final int colorStep = (upperLimit - lowerLimit) / Math.pow (amount, 1f / 3);
    final List < int > colors = new ArrayList < int > (amount);
    for (int R = lowerLimit;
    R < upperLimit; R += colorStep) for (int G = lowerLimit;
    G < upperLimit; G += colorStep) for (int B = lowerLimit;
    B < upperLimit; B += colorStep) {
        if (colors.size () >= amount) {
            return colors;
        } else {
            int color = (R << 16) + (G << 8) + (B);
            colors.add (color);
        }
    }

    return colors;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34041773_34053665_11_43
34041773_34053665_8_45
Title: Coding a CONNECT method in Java 
----------------------------------------

public void run () {
    try {
        byte [] buffer = new byte [tamBuffer];
        int len = in.read (buffer);
        while (len != - 1 && ! inSocket.isOutputShutdown ()) {
            out.write (buffer, 0, len);
            out.flush ();
            len = in.read (buffer);
        }
        if (len == - 1 || inSocket.isOutputShutdown ()) {
            if (! isThread1Closed) isThread1Closed = true;
            else isThread2Closed = true;

            inSocket.shutdownInput ();
            outSocket.shutdownOutput ();
        }
    } catch (IOException e) {
        onLogReceived ("<#> Thread inject: erro na transfêrencia de dados. " + e.getMessage (), LOG_LEVEL_CRITICAL);
    } finally {
        if (isThread2Closed) {
            try {
                onLogReceived ("<_> Thread inject: fechando comunicação.", LOG_LEVEL_DEBUG);
                destino.close ();
                cliente.close ();
            } catch (IOException e) {
                onLogReceived ("<#> Thread inject: erro ao fechar comunicação. " + e.getMessage (), LOG_LEVEL_CRITICAL);
            }
        }
    }
}
----------------------------------------

private void run (final InputStream in, final OutputStream out, final Socket inSocket, final Socket outSocket, final int tamBuffer) {
    new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                byte [] buffer = new byte [tamBuffer];
                int len = in.read (buffer);
                while (len != - 1 && ! inSocket.isOutputShutdown ()) {
                    out.write (buffer, 0, len);
                    out.flush ();
                    len = in.read (buffer);
                }
                if (len == - 1 || inSocket.isOutputShutdown ()) {
                    if (! isThread1Closed) isThread1Closed = true;
                    else isThread2Closed = true;

                    inSocket.shutdownInput ();
                    outSocket.shutdownOutput ();
                }
            } catch (IOException e) {
                onLogReceived ("<#> Thread inject: erro na transfêrencia de dados. " + e.getMessage (), LOG_LEVEL_CRITICAL);
            } finally {
                if (isThread2Closed) {
                    try {
                        onLogReceived ("<_> Thread inject: fechando comunicação.", LOG_LEVEL_DEBUG);
                        destino.close ();
                        cliente.close ();
                    } catch (IOException e) {
                        onLogReceived ("<#> Thread inject: erro ao fechar comunicação. " + e.getMessage (), LOG_LEVEL_CRITICAL);
                    }
                }
            }
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34057306_34057696_5_50
34057306_34058015_5_47
Title: "Java: Why does this code work? For loop if/else statement" 
----------------------------------------

public static void main (String [] args) {
    String validateBinary = "  ";
    Scanner scan = new Scanner (System.in);
    while (validateBinary.length () > 0) {
        System.out.print ("Enter a binary number or enter to finish > ");
        validateBinary = scan.nextLine ();
        int ones = 0;
        for (int i = 0;
        i <= validateBinary.length () - 1; i ++) {
            if (validateBinary.length () >= 8) {
                System.out.println ("Rejected.");
                break;
            }
            char binary = validateBinary.charAt (i);
            if (binary == '1') ones ++;

            if (ones > 2) {
                System.out.println ("Rejected.");
                break;
            }
            if (binary != '1' && binary != '0') {
                System.out.println ("Invalid number.");
                break;
            } else {
                if (i == validateBinary.length () - 1) {
                    System.out.println ("Accepted. ");
                    break;
                }
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String validateBinary;
    int i, countOne;
    boolean insertAnotherValue = true;
    char binary;
    Scanner scan = new Scanner (System.in);
    while (insertAnotherValue == true) {
        System.out.print ("Enter a binary number > ");
        validateBinary = scan.nextLine ();
        countOne = 0;
        for (i = 0; i < validateBinary.length (); i ++) {
            binary = validateBinary.charAt (i);
            if (binary == '1') {
                countOne ++;
            }
            if ((binary != '1' && binary != '0') || countOne > 2) {
                break;
            }
        }
        if (i == validateBinary.length ()) {
            System.out.println ("Accepted. ");
        } else {
            System.out.println ("Rejected. ");
        }
        System.out.println ("\ninsert another value? (y/n)");
        if (scan.nextLine ().equalsIgnoreCase ("y")) {
            insertAnotherValue = true;
        } else {
            insertAnotherValue = false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34057524_34057635_1_16
34057524_39132233_1_26
Title: Output of generating new string array does n't come as expected 
----------------------------------------

static String [] generate (int start, int stop) {
    String strnew [] = new String [stop - start + 1];
    for (int i = 0;
    i < strnew.length; i ++) {
        int value = start + i;
        if (value % 15 == 0) {
            strnew [i] = "FizzBuzz";
        } else if (value % 3 == 0) {
            strnew [i] = "Fizz";
        } else if (value % 5 == 0) {
            strnew [i] = "Buzz";
        } else {
            strnew [i] = String.valueOf (value);
        }

    }
    return strnew;
}
----------------------------------------

public String [] generate (int start, int stop) {
    String ar [] = new String [stop - start + 1];
    int num = start;
    String s1 = "Fizz";
    String s2 = "Buzz";
    String s3 = "FizzBuzz";
    for (int i = 0;
    i < ar.length; i ++) {
        if ((num % 3 == 0) && (num % 5 != 0)) {
            ar [i] = s1;
        } else if ((num % 5 == 0) && (num % 3 != 0)) {
            ar [i] = s2;
        } else if ((num % 3 == 0) && (num % 5 == 0)) {
            ar [i] = s3;
        } else {
            String str = "";
            str = str + num;
            ar [i] = str;
        }

        num = num + 1;
    }
    return ar;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34059407_34059585_1_16
34059407_34060451_1_23
Title: Re-prompt after an exception in Java 
----------------------------------------

private static float baseLength () {
    float baseLength = 0;
    Scanner user_input = new Scanner (System.in);
    while (baseLength <= 0) {
        try {
            System.out.print ("Enter the base length of the triangle: ");
            baseLength = user_input.nextFloat ();
            if (baseLength <= 0) {
                System.out.println ("Error. Plase enter a number higher than 0.");
            }
        } catch (InputMismatchException badChar) {
            System.err.println ("You have entered a bad value. Please try again");
        }
    }
    return baseLength;
}
----------------------------------------

private static float baseLength () {
    float baseLength = 0;
    while (true) {
        try {
            System.out.print ("Enter the base length of the triangle: ");
            Scanner user_input = new Scanner (System.in);
            baseLength = user_input.nextFloat ();
            if (baseLength > 0) return baseLength;

            if (baseLength <= 0) System.err.println ("Error. Plase enter a number higher than 0.");

        } catch (InputMismatchException badChar) {
            System.err.println ("You have entered a bad value. Please try again");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34067538_34067572_1_11
34067538_34067605_2_14
Title: Java HashMap containsKey strange behavior 
----------------------------------------

@Override
public boolean equals (Object other) {
    if (other instanceof User) {
        User u = (User) other;
        return this.login.equals (u.login);
    } else if (other instanceof String) {
        String u = (String) other;
        return this.login.equals (u);
    }

    return false;
}
----------------------------------------

public boolean equals (Object other) {
    if (other == this) {
        return true;
    }
    if (other instanceof User) {
        return login.equals (other.login);
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34088216_34088845_1_20
34088216_34089803_1_12
Title: Weighted mean of a column in csv file in Java 
----------------------------------------

public static void main (String [] args) throws Exception {
    final String splitBy = ";";
    int totalValue = 0;
    int columnCount = 0;
    final BufferedReader br = new BufferedReader (new FileReader ("C:/test/bank-full.csv"));
    String line;
    line = br.readLine ();
    while ((line = br.readLine ()) != null) {
        String [] splitCSV = line.split (splitBy);
        if (! splitCSV [9].equals ("")) {
            totalValue += Integer.parseInt (splitCSV [9]);
            columnCount ++;
        }
    }
    br.close ();
    System.out.println ("Average is " + totalValue / columnCount);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String splitBy = ";";
    int x;
    BufferedReader br = new BufferedReader (new FileReader ("bank.csv"));
    String line;
    while ((line = br.readLine ()) != null) {
        String [] b = line.split (splitBy);
        x = b.length;
        System.out.println ("length " + x);
    }
    br.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34089088_34089300_1_19
34089088_34089302_1_14
Title: Java code to encrypt a given sting 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String s1 = "qwertyuiopasdfghjklzxcvbnm";
    String s2 = "mnbvcxzasdfghjklpoiuytrewq";
    String input, out = "";
    System.out.println ("enter input string");
    input = sc.nextLine ();
    for (int i = 0;
    i < input.length (); i ++) {
        for (int j = 0;
        j < s2.length (); j ++) {
            if (input.charAt (i) == s2.charAt (j)) {
                out += s1.charAt ((j + 3) % 26);
            }
        }
    }
    System.out.println (out);
    sc.close ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    Scanner sc = new Scanner (System.in);
    String s1 = "qwertyuiopasdfghjklzxcvbnm";
    String s2 = "mnbvcxzasdfghjklpoiuytrewq";
    String input, out = "";
    System.out.println ("enter input string");
    input = sc.nextLine ();
    for (int i = 0;
    i < input.length (); i ++) {
        int position = s2.indexOf (input.charAt (i));
        position = (position + 3) % 26;
        out = out + s1.charAt (position);
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34094193_34094303_19_33
34094193_34094441_1_15
Title: onBackPressed() crashes my webview app 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    view = (WebView) findViewById (R.id.webView);
    view.getSettings ().setJavaScriptEnabled (true);
    view.setWebViewClient (new MyCustomWebViewClient ());
    view.setScrollBarStyle (View.SCROLLBARS_INSIDE_OVERLAY);
    view.loadUrl ("http://url");
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    view = (WebView) findViewById (R.id.webView);
    view.getSettings ().setJavaScriptEnabled (true);
    view.setWebViewClient (new MyCustomWebViewClient ());
    view.setScrollBarStyle (View.SCROLLBARS_INSIDE_OVERLAY);
    view.loadUrl ("http://url");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34100081_34100151_5_14
34100081_34100153_1_11
Title: Recursively searching an array 
----------------------------------------

public static boolean linearSearch (int [] a, int x, int start, int end) {
    if ((a.length == 0) || (end == 0)) {
        return false;
    }
    if (start <= 0) {
        int head = a [0];
        if (head == x) {
            return true;
        }
    }
    int [] tail = Arrays.copyOfRange (a, 1, (a.length));
    return linearSearch (tail, x, start - 1, end - 1);
}
----------------------------------------

boolean linearSearch (int [] a, int x, int start, int end) {
    boolean result = false;
    if (start == a.length - 1) return false;

    if (a [start] == x) {
        result = true;
    } else {
        linearSearch (a, x, ++ start, end - 1);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34100363_34385647_1_11
34100363_47901681_1_21
Title: Dynamic Programming (Codility Q: NumberSolitaire) 
----------------------------------------

public int solution (int [] A) {
    int lens = A.length;
    int dp [] = new int [6];
    for (int i = 0;
    i < 6; i ++) {
        dp [i] = A [0];
    }
    for (int i = 1;
    i < lens; i ++) {
        dp [i % 6] = getMax6 (dp) + A [i];
    }
    return dp [(lens - 1) % 6];
}
----------------------------------------

private static int solution (int A []) {
    int N = A.length;
    int [] bestResult = new int [N];
    Arrays.fill (bestResult, Integer.MIN_VALUE);
    bestResult [0] = A [0];
    for (int i = 0;
    i < A.length; i ++) {
        for (int j = i + 1;
        (j < A.length) && (i < A.length) && j < (i + 1) + 6; j ++) {
            int preMaxResult = bestResult [j];
            int nowMaxResult = bestResult [i] + A [j];
            bestResult [j] = Math.max (preMaxResult, nowMaxResult);
        }
    }
    return bestResult [bestResult.length - 1];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34104381_34104454_1_24
34104381_34104914_1_17
Title: Output of Removing 3s does not come as expected 
----------------------------------------

public static int [] remove (int [] arr) {
    int [] ret = new int [arr.length];
    int count = 0;
    OUTER : for (int i : arr) {
        if (i % 3 == 0) continue;

        int j = i;
        while (j > 0) {
            if (j % 10 == 3) continue OUTER;

            j /= 10;
        }
        ret [count ++] = i;
    }
    if (ret.length > count) {
        int [] ret2 = new int [count];
        for (int i = 0;
        i < count; i ++) ret2 [i] = ret [i];

        return ret2;
    }
    return ret;
}
----------------------------------------

public int [] remove (int [] arr) {
    int p [] = new int [arr.length];
    int count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (! isMultipleOf3 (arr [i]) && ! containsDigit3 (arr [i])) {
            p [count] = arr [i];
            ++ count;
        }
    }
    int [] q = new int [count];
    for (int i = 0;
    i < q.length; ++ i) {
        q [i] = p [i];
    }
    return q;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34107980_34109549_27_58
34107980_34114391_16_33
Title: Java socket server not responding 
----------------------------------------

public void run () {
    while (true) {
        if (clients.isEmpty ()) break;

        String str = null;
        for (int i = 0;
        i < clients.size (); i ++) {
            Socket socket = clients.get (i);
            if (socket.isClosed ()) {
                clients.remove (socket);
                continue;
            }
            try {
                in = new BufferedReader (new InputStreamReader (socket.getInputStream ()));
            } catch (IOException e2) {
                e2.printStackTrace ();
            }
            try {
                out = new PrintWriter (socket.getOutputStream (), true);
            } catch (IOException e1) {
                e1.printStackTrace ();
            }
            try {
                str = in.readLine ();
            } catch (IOException e) {
                e.printStackTrace ();
            }
            out.println (str.toUpperCase ());
        }
    }
}
----------------------------------------

public void run () {
    try (PrintWriter pw = new PrintWriter (s.getOutputStream (), true); BufferedReader stream = new BufferedReader (new InputStreamReader (s.getInputStream ())); BufferedReader write = new BufferedReader (new InputStreamReader (System.in))) {
        System.out.println ("In Server");
        String in, out;
        while ((in = stream.readLine ()) != null) {
            System.out.println ("Msg 4m client: " + in);
            if (in.equals ("bye")) break;

            out = write.readLine ();
            pw.println (out);
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34113722_34113785_3_35
34113722_34113939_6_36
Title: Simple Error(While Loop) Help In my Java Palindrome Program 
----------------------------------------

public static void main (String args []) {
    try {
        String reverse = "";
        System.out.print ("Enter the name of the input file: ");
        Scanner keyboard = new Scanner (System.in);
        String a = keyboard.nextLine ();
        File inFile = new File (a);
        Scanner fin = new Scanner (inFile);
        System.out.print ("Enter name of the output file: ");
        String outFileName = keyboard.nextLine ();
        File outFile = new File (outFileName);
        PrintWriter fout = new PrintWriter (outFile);
        while (fin.hasNext ()) {
            String temp = fin.nextLine ();
            int length = temp.length ();
            for (int i = length - 1;
            i >= 0; i --) reverse = reverse + a.charAt (i);

            if (a.equals (reverse)) fout.println ("Entered string is a palindrome.");
            else fout.println ("Entered string is not a palindrome.");

        }
        keyboard.close ();
        fin.close ();
        fout.close ();
        System.out.print ("Done. See '" + outFileName + "'.");
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        String reverse = "";
        System.out.print ("Enter the name of the input file: ");
        Scanner keyboard = new Scanner (System.in);
        String a = keyboard.nextLine ();
        int length = a.length ();
        File inFile = new File (a);
        Scanner fin = new Scanner (inFile);
        System.out.print ("Enter name of the output file: ");
        String outFileName = keyboard.nextLine ();
        File outFile = new File (outFileName);
        PrintWriter fout = new PrintWriter (outFile);
        while (fin.hasNext ()) {
            String s = fin.nextLine ();
            for (int i = length - 1;
            i >= 0; i --) reverse = reverse + s.charAt (i);

            if (s.equals (reverse)) fout.println ("Entered string is a palindrome.");
            else fout.println ("Entered string is not a palindrome.");

        }
        fin.close ();
        fout.close ();
        System.out.print ("Done. See '" + outFileName + "'.");
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34116032_34116299_23_32
34116032_34116309_33_42
Title: How to compile a GUI in Java using Eclipse with the given code 
----------------------------------------

public void drawFlower (Graphics g, int x, int y, int s) {
    g.setColor (Color.PINK);
    g.fillOval (x, y, s, s);
    g.fillOval (x - s, y - s, s, s);
    g.fillOval (x, y - s, s, s);
    g.fillOval (x - s, y, s, s);
    g.setColor (Color.YELLOW);
    g.fillOval (x - s / 2, y - s / 2, s, s);
}
----------------------------------------

public void drawFlower (Graphics g, int x, int y, int s) {
    g.setColor (Color.PINK);
    g.fillOval (x, y, s, s);
    g.fillOval (x - s, y - s, s, s);
    g.fillOval (x, y - s, s, s);
    g.fillOval (x - s, y, s, s);
    g.setColor (Color.YELLOW);
    g.fillOval (x - s / 2, y - s / 2, s, s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34116758_34116796_4_33
34116758_34116811_1_25
Title: Program doesn't read but the 0 in array 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Please input your numbers:");
    int num;
    Map < Integer, Integer > list = new HashMap < Integer, Integer > ();
    num = input.nextInt ();
    while (input.hasNextInt ()) {
        while (num != 0) {
            if (! list.containsKey (num)) {
                list.put (num, 1);
            } else {
                int value = list.get (num);
                list.put (num, ++ value);
            }
            num = input.nextInt ();
        }
        for (Map.Entry < Integer, Integer > entry : list.entrySet ()) {
            Integer key = entry.getKey ();
            Integer value = entry.getValue ();
            System.out.println (key + " occurs " + value + " times");
        }
        System.out.println ("Array has been filled completly");
        System.exit (0);
    }
    System.out.println ("Sorry! You entered a non-Integer value! Try again.");
    input.close ();
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > myList = new ArrayList < Integer > ();
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Please input your numbers:");
    int sentinel = - 1;
    int x;
    while ((x = scanner.nextInt ()) != sentinel) myList.add (x);

    scanner.close ();
    Set < Integer > uniqueInput = new HashSet < Integer > (myList);
    for (Integer i : uniqueInput) {
        int occurrences = Collections.frequency (myList, i);
        System.out.println (i + " occurs " + occurrences + " times");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34117562_34117691_1_11
34117562_34130217_1_19
Title: Mirroring a binary tree 
----------------------------------------

public MirrorTree mirrorSymmetricTree (BinaryTree < String > t) {
    if (root == null) {
        return null;
    }
    final MirrorTree left = (MirrorTree) root.left;
    right = root.right;
    root.left = mirrorSymmetricTree (right);
    root.right = mirrorSymmetricTree (left);
    return (MirrorTree) root;
}
----------------------------------------

private void mirrorSymmetricTree (MirrorTreeNode < T > m, BinaryTreeNode < T > n) {
    if (n == null) {
        return;
    }
    if (n.left != null) {
        m.left = new MirrorTreeNode < T > (n.left.value);
        mirrorSymmetricTree (m.left, n.left);
    }
    if (n.right != null) {
        m.right = new MirrorTreeNode < T > (n.right.value);
        mirrorSymmetricTree (m.right, n.right);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34117562_34117691_1_11
34117562_34130217_21_35
Title: Mirroring a binary tree 
----------------------------------------

public MirrorTree mirrorSymmetricTree (BinaryTree < String > t) {
    if (root == null) {
        return null;
    }
    final MirrorTree left = (MirrorTree) root.left;
    right = root.right;
    root.left = mirrorSymmetricTree (right);
    root.right = mirrorSymmetricTree (left);
    return (MirrorTree) root;
}
----------------------------------------

public static MirrorTree mirrorSymmetricTree (BinaryTree < T > t) {
    if (t == null) {
        return null;
    }
    if (t.root != null) {
        this.root = new MirrorTreeNode < T > (t.root.value);
        mirrorSymmetricTree (this.root, t.root);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34117562_34130217_1_19
34117562_34130217_21_35
Title: Mirroring a binary tree 
----------------------------------------

private void mirrorSymmetricTree (MirrorTreeNode < T > m, BinaryTreeNode < T > n) {
    if (n == null) {
        return;
    }
    if (n.left != null) {
        m.left = new MirrorTreeNode < T > (n.left.value);
        mirrorSymmetricTree (m.left, n.left);
    }
    if (n.right != null) {
        m.right = new MirrorTreeNode < T > (n.right.value);
        mirrorSymmetricTree (m.right, n.right);
    }
}
----------------------------------------

public static MirrorTree mirrorSymmetricTree (BinaryTree < T > t) {
    if (t == null) {
        return null;
    }
    if (t.root != null) {
        this.root = new MirrorTreeNode < T > (t.root.value);
        mirrorSymmetricTree (this.root, t.root);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34123336_34123979_11_26
34123336_34123979_28_40
Title: My Java Program only Loops Once 
----------------------------------------

static List < Integer > crack (List < Integer > left, List < Integer > choosen, int depth) {
    if (left.isEmpty () || depth == 0) {
        return choosen.equals (secret) ? choosen : null;
    }
    for (int i = 0;
    i < left.size (); i ++) {
        int choice = left.get (i);
        left.remove (i);
        choosen.add (choice);
        List < Integer > res = crack (left, choosen, depth - 1);
        left.add (i, choice);
        if (res != null) return res;

        choosen.remove (choosen.size () - 1);
    }
    return null;
}
----------------------------------------

public static List < Integer > crack () {
    for (int i = MIN_DIGITS;
    i <= MAX_DIGITS; i ++) {
        List < Integer > left = new ArrayList < Integer > () {

            {
                add (1);
                add (2);
                add (3);
                add (4);
                add (5);
                add (6);
                add (7);
                add (8);
                add (9);
            }

        }

        ;
        List < Integer > choosen = new ArrayList < Integer > ();
        List < Integer > res = crack (left, choosen, i);
        if (res != null) return res;

    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3412352_3412732_12_47
3412352_3412732_17_31
Title: How to interrupt another thread from a monitor Thread 
----------------------------------------

public void run () {
    final CountDownLatch latch = new CountDownLatch (1);
    final AtomicReference < Thread > pointer = new AtomicReference < Thread > ();
    Thread C = new Thread () {
        @Override
        public void run () {
            try {
                latch.await ();
                Thread.sleep (2000);
                System.out.println ("C is about to interrupt B");
                pointer.get ().interrupt ();
                Thread.sleep (2000);
                System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
            } catch (InterruptedException e) {
                System.out.println ("C interrupted");
                return;
            }
        }}

    ;
    C.start ();
    latch.countDown ();
    pointer.set (Thread.currentThread ());
    try {
        Thread.sleep (5000);
    } catch (InterruptedException e) {
        System.out.println ("B is interrupted");
        return;
    }
    System.out.println ("B survived");
}
----------------------------------------

public void run () {
    try {
        latch.await ();
        Thread.sleep (2000);
        System.out.println ("C is about to interrupt B");
        pointer.get ().interrupt ();
        Thread.sleep (2000);
        System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
    } catch (InterruptedException e) {
        System.out.println ("C interrupted");
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3412352_3412732_12_47
3412352_3412732_9_50
Title: How to interrupt another thread from a monitor Thread 
----------------------------------------

public void run () {
    final CountDownLatch latch = new CountDownLatch (1);
    final AtomicReference < Thread > pointer = new AtomicReference < Thread > ();
    Thread C = new Thread () {
        @Override
        public void run () {
            try {
                latch.await ();
                Thread.sleep (2000);
                System.out.println ("C is about to interrupt B");
                pointer.get ().interrupt ();
                Thread.sleep (2000);
                System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
            } catch (InterruptedException e) {
                System.out.println ("C interrupted");
                return;
            }
        }}

    ;
    C.start ();
    latch.countDown ();
    pointer.set (Thread.currentThread ());
    try {
        Thread.sleep (5000);
    } catch (InterruptedException e) {
        System.out.println ("B is interrupted");
        return;
    }
    System.out.println ("B survived");
}
----------------------------------------

public void run () {
    Thread B = new Thread () {
        @Override
        public void run () {
            final CountDownLatch latch = new CountDownLatch (1);
            final AtomicReference < Thread > pointer = new AtomicReference < Thread > ();
            Thread C = new Thread () {
                @Override
                public void run () {
                    try {
                        latch.await ();
                        Thread.sleep (2000);
                        System.out.println ("C is about to interrupt B");
                        pointer.get ().interrupt ();
                        Thread.sleep (2000);
                        System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
                    } catch (InterruptedException e) {
                        System.out.println ("C interrupted");
                        return;
                    }
                }}

            ;
            C.start ();
            latch.countDown ();
            pointer.set (Thread.currentThread ());
            try {
                Thread.sleep (5000);
            } catch (InterruptedException e) {
                System.out.println ("B is interrupted");
                return;
            }
            System.out.println ("B survived");
        }}

    ;
    B.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3412352_3412732_17_31
3412352_3412732_9_50
Title: How to interrupt another thread from a monitor Thread 
----------------------------------------

public void run () {
    try {
        latch.await ();
        Thread.sleep (2000);
        System.out.println ("C is about to interrupt B");
        pointer.get ().interrupt ();
        Thread.sleep (2000);
        System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
    } catch (InterruptedException e) {
        System.out.println ("C interrupted");
        return;
    }
}
----------------------------------------

public void run () {
    Thread B = new Thread () {
        @Override
        public void run () {
            final CountDownLatch latch = new CountDownLatch (1);
            final AtomicReference < Thread > pointer = new AtomicReference < Thread > ();
            Thread C = new Thread () {
                @Override
                public void run () {
                    try {
                        latch.await ();
                        Thread.sleep (2000);
                        System.out.println ("C is about to interrupt B");
                        pointer.get ().interrupt ();
                        Thread.sleep (2000);
                        System.out.println ("C is still alive... is B alive yet? " + pointer.get ().isAlive ());
                    } catch (InterruptedException e) {
                        System.out.println ("C interrupted");
                        return;
                    }
                }}

            ;
            C.start ();
            latch.countDown ();
            pointer.set (Thread.currentThread ());
            try {
                Thread.sleep (5000);
            } catch (InterruptedException e) {
                System.out.println ("B is interrupted");
                return;
            }
            System.out.println ("B survived");
        }}

    ;
    B.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34124278_34124894_1_24
34124278_34125342_59_120
Title: bouncing counter not giving proper results 
----------------------------------------

protected void moveBall () {
    boolean changedHorizontal = false;
    if (x < radius || x > getWidth () - radius) {
        dx *= - 1;
        changedHorizontal = true;
    }
    if (y < radius || y > getHeight () - radius) {
        dy *= - 1;
        if (changedHorizontal) {
            i ++;
            System.out.println (i);
        }
    }
    x += dx;
    y += dy;
    ellipse.setCenterX (x);
    ellipse.setCenterY (y);
}
----------------------------------------

protected void moveBall () {
    String change = "";
    if (x < radius || x > getWidth () - radius) {
        dx *= - 1;
    }
    if (y < radius || y > getHeight () - radius) {
        dy *= - 1;
    }
    if (! change.isEmpty ()) {
        debugStats (change);
    }
    x += dx;
    y += dy;
    ellipse.setCenterX (x);
    ellipse.setCenterY (y);
    String hitType = null;
    if (x - radius == 0 && y - radius == 0) {
        hitType = "A";
    } else if (x - radius == 0 && y + radius == getHeight ()) {
        hitType = "B";
    } else if (x + radius == getWidth () && y + radius == getHeight ()) {
        hitType = "C";
    } else if (x - radius == getWidth () && y - radius == 0) {
        hitType = "D";
    }

    if (hitType != null) {
        i ++;
        if (0 == (i % 20)) {
            debugHeaders ();
        }
        debugStats (hitType);
    }
    lasti = i;
    lastx = x;
    lastdx = dx;
    lasty = y;
    lastdy = dy;
    moveBallCnt ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34127744_34128209_96_106
34127744_34131475_79_91
Title: Creating a method that accepts an array of interface objects 
----------------------------------------

private static double sumCalculate (Calculatable [] perimetersums) {
    double sum = 0.0;
    for (int i = 0;
    i < perimetersums.length; i ++) {
        Calculatable cal = perimetersums [i];
        if (cal != null) sum = sum + cal.getPerimeter ();

    }
    return sum;
}
----------------------------------------

private static double sumCalculate (Calculatable [] perimetersums) {
    double sum = 0.0;
    for (int i = 0;
    i < perimetersums.length; i ++) {
        Calculatable cal = perimetersums [i];
        if (cal != null) {
            sum = sum + cal.calculate ();
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34129972_34130089_20_31
34129972_34130089_44_55
Title: "Exception in thread ""Thread-0"" java.util.NoSuchElementException?" 
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 1000; i ++) {
            queue.add (i);
            Thread.sleep (1);
        }
        queue.add (End);
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    boolean ended = false;
    while (! ended) {
        try {
            Integer i = queue.take ();
            ended = i == End;
            System.out.println (i);
        } catch (InterruptedException ex) {
            ended = true;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34130697_34131244_18_27
34130697_34131319_7_16
Title: Find element matching in 2 lists using java 8 stream 
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    }
    if (obj == null || getClass () != obj.getClass ()) {
        return false;
    }
    PersonWrapper other = (PersonWrapper) obj;
    return person.name.equals (other.person.name) && person.age.equals (other.person.age);
}
----------------------------------------

public boolean equals (Object o) {
    if (this == o) return true;

    if (o == null || getClass () != o.getClass ()) return false;

    Person sample = (Person) o;
    if (! name.equals (sample.name)) return false;

    return age.equals (sample.age);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34145732_34145783_1_26
34145732_34145956_1_20
Title: Trying to count number of occurrences in an array 
----------------------------------------

public static void main (String args []) {
    HashMap < Integer, Integer > numbers = new HashMap < Integer, Integer > ();
    Scanner scan = new Scanner (System.in);
    boolean loop = true;
    while (loop) {
        System.out.println ("Number: ");
        int current = scan.nextInt ();
        if (current > 0 && current < 51) {
            if (numbers.containsKey (current)) {
                numbers.put (current, numbers.get (current) + 1);
            } else {
                numbers.put (current, 1);
            }
        } else {
            if (numbers.isEmpty ()) {
                System.out.println ("Nothing inputted");
                loop = false;
            } else {
                for (Entry < Integer, Integer > e : numbers.entrySet ()) {
                    System.out.println (e.getKey () + " was entered " + e.getValue () + " times");
                }
                loop = false;
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    int [] occurrrences = new int [51];
    while (true) {
        int value = scanner.nextInt ();
        if (value >= 0 && value < occurrrences.length) {
            occurrrences [value] ++;
        } else {
            scanner.close ();
            break;
        }
    }
    for (int i = 0;
    i < occurrrences.length; i ++) {
        if (occurrrences [i] > 0) {
            System.out.println (i + " occured " + occurrrences [i] + " times.");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34150685_34156322_1_24
34150685_34159302_1_24
Title: "Binary Search tree inorder method iterative not working" 
----------------------------------------

public void inOrder () {
    Stack < BSTNode > myStack = new Stack < BSTNode > ();
    Set < BSTNode > visited = new HashSet < BSTNode > ();
    BSTNode current = m_root;
    if (current != null) myStack.push (current);

    while (! myStack.isEmpty ()) {
        current = myStack.peek ();
        if (current.getLeft () != null && ! visited.contains (current.getLeft ())) myStack.push (current.getLeft ());
        else {
            System.out.print (current.getInfo () + " ");
            visited.add (current);
            myStack.pop ();
            if (current.getRight () != null && ! visited.contains (current.getRight)) myStack.push (current.getRight ());

        }
    }
}
----------------------------------------

public void inOrder () {
    if (m_root == null) {
        return;
    }
    Stack < BSTNode > myStack = new Stack < BSTNode > ();
    BSTNode current = m_root;
    while (current != null) {
        myStack.push (current);
        current = current.getLeft ();
    }
    while (! myStack.isEmpty ()) {
        current = (BSTNode) myStack.pop ();
        System.out.print (current.getInfo () + " ");
        if (current.getRight () != null) {
            current = current.getRight ();
            while (current != null) {
                myStack.push (current);
                current = current.getLeft ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34153240_34153300_1_11
34153240_34153856_10_20
Title: Array index printing wrong value 
----------------------------------------

public static void getMaxValue (int [] num) {
    int maxValue = num [0];
    int getMaxIndex = 0;
    for (int i = 1;
    i < num.length; i ++) {
        if (num [i] > maxValue) {
            maxValue = num [i];
            getMaxIndex = i;
        }
    }
    System.out.println (getMaxIndex + " and " + maxValue);
}
----------------------------------------

public static void getMaxValue (Integer [] num) {
    int maxValue = Arrays.asList (num).get (0);
    int getMaxIndex = 0;
    for (int i = 1;
    i < num.length; i ++) {
        if (Arrays.asList (num).get (i) > maxValue) {
            maxValue = Arrays.asList (num).get (i);
        }
    }
    getMaxIndex = Arrays.asList (num).indexOf (maxValue);
    System.out.println (getMaxIndex + " and " + maxValue);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34167564_34167790_1_18
34167564_34167807_1_18
Title: How to replace odd/even chars in string with spaces in Java? 
----------------------------------------

public static void main (String [] args) {
    String s = "go to med!";
    int realindex = 0;
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        char currChar = s.charAt (i);
        if ((currChar != ' ')) {
            if (realindex % 2 == 1) {
                currChar = '*';
            }
            realindex ++;
        }
        sb.append (currChar);
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String s = "go to med!! goodbye cruel world";
    String alphabetS = "abcdefghijklmnopqrstuvwxyz";
    StringBuilder sb = new StringBuilder (s);
    for (int i = 0, relativePosition = 0;
    i < s.length (); i ++, relativePosition ++) {
        char currChar = s.charAt (i);
        if (currChar == ' ') {
            relativePosition = - 1;
            continue;
        }
        int idx = alphabetS.indexOf (currChar);
        if (idx != - 1) if (relativePosition % 2 == 1) sb.setCharAt (i, '*');

    }
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34169131_34169171_1_15
34169131_34169172_1_15
Title: Need a return Statement? - new to coding 
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    Lot resultLot = null;
    while (index < lots.size ()) {
        Lot selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            resultLot = selectedLot;
        } else {
            index ++;
        }
    }
    return resultLot;
}
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    while (index < lots.size ()) {
        Lot selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            return selectedLot;
        } else {
            index ++;
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34169131_34169171_1_15
34169131_34169183_1_16
Title: Need a return Statement? - new to coding 
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    Lot resultLot = null;
    while (index < lots.size ()) {
        Lot selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            resultLot = selectedLot;
        } else {
            index ++;
        }
    }
    return resultLot;
}
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    boolean found = false;
    Lot selectedLot = null;
    while (index < lots.size () && ! found) {
        selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            found = true;
        } else {
            index ++;
        }
    }
    return selectedLot;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34169131_34169172_1_15
34169131_34169183_1_16
Title: Need a return Statement? - new to coding 
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    while (index < lots.size ()) {
        Lot selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            return selectedLot;
        } else {
            index ++;
        }
    }
    return null;
}
----------------------------------------

public Lot getLot (int lotNumber) {
    int index = 0;
    boolean found = false;
    Lot selectedLot = null;
    while (index < lots.size () && ! found) {
        selectedLot = lots.get (index);
        if (selectedLot.getNumber () == lotNumber) {
            found = true;
        } else {
            index ++;
        }
    }
    return selectedLot;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34169324_34169523_3_21
34169324_34169686_1_10
Title: Horizontal Bar Chart Using Asterisk 
----------------------------------------

static void printChars (final int [] counters) {
    float MAX_BAR_LENGTH = 20.0;
    int maxScore = 0;
    for (int i = 0;
    i < 26; i ++) {
        if (counters [i] > maxScore) {
            maxScore = counters [i];
        }
    }
    float multiplier = maxScore > 0 ? MAX_BAR_LENGTH / maxScore : 0;
    for (int i = 0;
    i < 26; i ++) {
        System.out.print ("%c%7d\n", i + 'A', counters [i]);
        for (int j = 0;
        j < (multiplier * counters [i]); j ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

static void printChars (final int [] counters) {
    for (int i = 0;
    i < 26; i ++) {
        System.out.printf ("%c %7d     ", i + 'A', counters [i]);
        for (int bar = 0;
        bar < counters [i]; bar ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34170376_34170402_1_11
34170376_34170415_1_11
Title: Error when returning from a method using loops and if statements 
----------------------------------------

public static int findValue (int [] z, int y) {
    for (int x = 0;
    x < z.length; x ++) {
        if (z [x] == y) {
            return x;
        }
    }
    return - 1;
}
----------------------------------------

public static int findValue (int [] z, int y) {
    for (int x = 0;
    x < z.length; x ++) {
        if (z [x] == y) {
            return x;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34171250_34171277_1_10
34171250_34171638_1_13
Title: How to get the nth word in a string 
----------------------------------------

public static void main (String [] args) {
    boolean allCorrect = true;
    allCorrect &= testNthWord ("I love to walk to the park", 3, "to");
    allCorrect &= testNthWord ("The theater is in the theater district.", 5, "the");
    allCorrect &= testNthWord ("I am so happy I am getting this right!", 6, "am");
    allCorrect &= testNthWord ("The quick brown fox jumped over the fence", 15, "");
    allCorrect &= testNthWord ("1 is a lonely number but it also always returns 0 when used before the % operator.", 1, "1");
    result (allCorrect, "getNthWord");
}
----------------------------------------

public static void main (String [] args) {
    int nth = 5;
    String s = "This is a sample sentence example to test nth numer, lets say 5th.";
    String [] words = s.split ("\\s+");
    for (int i = 0;
    i < words.length; i ++) {
        words [i] = words [i].replaceAll ("[^\\w]", "");
    }
    System.out.println (words.length);
    if (nth >= 1 && nth <= words.length) System.out.println ("Nth word is: " + words [nth - 1]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34171716_34172616_8_34
34171716_34173072_1_35
Title: 2D String search in Java 
----------------------------------------

public static void main (String [] args) {
    int refNumber = - 1;
    String phoneList [] [] = {{"Harrison, Rose: ", "James, Jean: ", "Smith, William: ", "Smith, Brad: "}, {"415-555-2234", "415-555-9098", "415-555-1785", "415-555-9224"}};
    Scanner scanner = new Scanner (System.in);
    System.out.print ("Enter String to be searched ->");
    String input = scanner.nextLine ();
    for (int i = 0;
    i < phoneList [0].length; i ++) {
        if (phoneList [0] [i].contains (input)) {
            refNumber = i;
        }
    }
    System.out.println ("Name ->" + phoneList [0] [refNumber]);
    System.out.println ("Phone No ->" + phoneList [1] [refNumber]);
}
----------------------------------------

public static void main (String [] args) {
    String phoneList [] [] = {{"Harrison, Rose: ", "James, Jean: ", "Smith, William: ", "Smith, Brad: "}, {"415-555-2234", "415-555-9098", "415-555-1785", "415-555-9224"}};
    Map < String, String > mss = new HashMap < String, String > ();
    for (int i = 0;
    i < phoneList.length; i ++) mss.put (phoneList [0] [i], phoneList [1] [i]);

    String input;
    System.out.print ("Enter the first few letters of a last name to search for: ");
    Scanner scan = new Scanner (System.in);
    input = scan.nextLine ();
    String match = "";
    for (String name : mss.keySet ()) if (name.startsWith (input)) {
        System.out.println ("NAME:" + name + " PHONE:" + mss.get (name));
        match = name;
        break;
    }

    if (match.equals ("")) System.out.println ("There is no match.");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34178727_34178980_1_10
34178727_34179017_1_14
Title: String to ArrayList via org.json 
----------------------------------------

public static void main (String [] args) {
    String json = "[\"a,rt\", \"der\", \"a_rt5%\"]";
    JSONArray jsonArray = new JSONArray (json);
    List < String > list = new ArrayList < String > ();
    for (int i = 0;
    i < jsonArray.length (); i ++) {
        list.add (jsonArray.getString (i));
    }
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    String s = "[\"a,rt\", \"der\", \"a_rt5%\"]";
    s = s.replace ("[\"", "");
    s = s.replace ("\"]", "");
    String [] s1 = s.split ("\", \"");
    List < String > sArrayList = new ArrayList < > ();
    sArrayList = Arrays.asList (s1);
    for (String e : sArrayList) {
        System.out.println (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34181482_34181692_5_13
34181482_34181740_1_13
Title: Calling a formatting method 
----------------------------------------

public static double inputBoatPrice (String messagePassed, double limitPassed) {
    Scanner keyboard = new Scanner (System.in);
    int userInput;
    do {
        System.out.printf ("%1s %1.1f :\n", messagePassed, limitPassed);
        userInput = keyboard.nextInt ();
    } while (userInput < limitPassed);
    return userInput;
}
----------------------------------------

public static double inputBoatPrice (String messagePassed, double limitPassed) {
    Scanner keyboard = new Scanner (System.in);
    double userInput;
    do {
        System.out.printf ("%1s %1.1f\n", messagePassed, limitPassed);
        userInput = keyboard.nextDouble ();
    } while (userInput < limitPassed);
    return userInput;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34182678_34184001_48_66
34182678_34184001_88_107
Title: parent dialog state is changed to invisible but child dialog still stays visible 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (dialog1 == null) {
        dialog1 = new JDialog (dialog1, ModalityType.APPLICATION_MODAL);
        dialog1.setTitle ("1st. JDialog");
        dialog1.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
        button1.setAction (updateCol1 ());
        button01.setAction (updateCol01 ());
        dialog1.add (button1, BorderLayout.SOUTH);
        dialog1.add (button01, BorderLayout.NORTH);
        dialog1.pack ();
        dialog1.setSize (400, 300);
        dialog1.setLocation (250, 250);
        dialog1.setVisible (true);
    } else {
        EventQueue.invokeLater (() -> {
            dialog1.setVisible (true);
        });
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (dialog2 == null) {
        dialog1.setTitle ("2nd. JDialog");
        dialog2 = new JDialog (frame, ModalityType.APPLICATION_MODAL);
        dialog2.setDefaultCloseOperation (JDialog.DISPOSE_ON_CLOSE);
        button02.setAction (updateCol02 ());
        dialog2.add (button02, BorderLayout.SOUTH);
        dialog2.pack ();
        dialog2.setSize (400, 300);
        dialog2.setLocation (350, 350);
        dialog2.setVisible (true);
    } else {
        EventQueue.invokeLater (() -> {
            dialog2.setVisible (true);
            if (! frame.isVisible ()) {
                frame.setVisible (true);
            }
        });
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34190746_34190804_5_25
34190746_34190850_3_23
Title: How to find the average in a do-while loop 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    int count = 0;
    int sum = 0;
    String answer = "";
    do {
        System.out.print ("Enter any number : ");
        int num = scan.nextInt ();
        boolean isEven = (num % 2 == 0);
        System.out.println (num + " is an " + (isEven ? "even" : "odd") + " number.");
        sum += num;
        System.out.println ("do you want to continue?");
        answer = scan.next ();
        count ++;
    } while (answer.toLowerCase ().equals ("y"));
    System.out.println ("Average: " + (sum / count));
}
----------------------------------------

public static void main (String [] args) {
    String answer = "";
    int avr = 0;
    int num, count = 0;
    do {
        Scanner scan = new Scanner (System.in);
        System.out.print ("Enter any number : ");
        num = scan.nextInt ();
        if ((num % 2) == 0) System.out.println (num + " is an even number.");
        else System.out.println (num + " is an odd number");

        System.out.println ("do you want to continue?");
        avr += num;
        answer = scan.next ();
        count ++;
    } while (answer.equals ("y"));
    avr = avr / count;
    System.out.println ("The avreage of value is:" + avr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34191131_34191196_1_15
34191131_34191206_1_13
Title: Java - Finding the element of an array given the value? 
----------------------------------------

public static int findBayOfCar (int carNumber, Car [] cars) {
    int index = - 1;
    boolean found = false;
    while (! found && index < cars.length - 1) {
        index ++;
        if (cars [index].getNumber () == carNumber) {
            found = true;
        }
    }
    return found ? index : - 1;
}
----------------------------------------

public int findBayOfCar (int carNumber) {
    int foundAtBay = - 1;
    for (int i = 0;
    i < cars.length; i ++) {
        if (cars [i].number == carNumber) {
            foundAtBay = i;
            break;
        }
    }
    return foundAtBay;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34192715_34193509_19_65
34192715_34193509_1_17
Title: How can I keep track of the prior node in a binary search tree in-order method? 
----------------------------------------

private boolean helper (TreeNode currentNode, TreeNode previousNode) {
    if (currentNode == previousNode.getLeftNode ()) {
        if (currentNode.getData () > previousNode.getData ()) return false;
        else {
            if (currentNode.getLeftNode () == null) {
                if (currentNode.getRightNode () == null) return true;
                else return helper (currentNode.getRightNode (), currentNode);

            } else if (helper (currentNode.getLeftNode (), currentNode)) {
                if (currentNode.getRightNode () != null) return helper (currentNode.getRightNode (), currentNode);
                else return true;

            } else return false;

        }
    } else {
        if (currentNode.getData () < previousNode.getData ()) return false;
        else {
            if (currentNode.getLeftNode () == null) {
                if (currentNode.getRightNode () == null) return true;
                else return helper (currentNode.getRightNode (), currentNode);

            } else if (helper (currentNode.getLeftNode (), currentNode)) {
                if (currentNode.getRightNode () != null) return helper (currentNode.getRightNode (), currentNode);
                else return true;

            } else return false;

        }
    }
}
----------------------------------------

public boolean helper (TreeNode root) {
    if (root.getLeftNode () == null) {
        if (root.getRightNode () == null) return true;
        else return helper (root.getRightNode (), root);

    } else if (helper (root.getLeftNode (), root)) {
        if (root.getRightNode () != null) return helper (root.getRightNode (), root);
        else return true;

    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34193506_34193665_1_12
34193506_34193752_1_16
Title: How do I transfer the underscore to the left side? 
----------------------------------------

public static void main (String [] args) {
    for (int height = 2;
    height >= 0; height --) {
        for (int _under = 0;
        (_under + height) != 3; _under ++) {
            System.out.print ("-");
        }
        for (int width = 0;
        width < (2 * height + 1); width ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int pyramidHeight = 3;
    for (int height = 0;
    height < pyramidHeight; height ++) {
        for (int width = height + 1;
        width > 0; width --) {
            System.out.print ("-");
        }
        for (int width = 1 + (((pyramidHeight - 1) - height) * 2);
        width > 0; width --) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34193506_34193665_1_12
34193506_34193755_1_14
Title: How do I transfer the underscore to the left side? 
----------------------------------------

public static void main (String [] args) {
    for (int height = 2;
    height >= 0; height --) {
        for (int _under = 0;
        (_under + height) != 3; _under ++) {
            System.out.print ("-");
        }
        for (int width = 0;
        width < (2 * height + 1); width ++) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int height = 0;
    height < 5; height += 2) {
        for (int curHeight = height + 1;
        curHeight > 0; curHeight -= 2) {
            System.out.print ("-");
        }
        for (int width = 5;
        width - height > 0; width --) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
34193506_34193752_1_16
34193506_34193755_1_14
Title: How do I transfer the underscore to the left side? 
----------------------------------------

public static void main (String [] args) {
    int pyramidHeight = 3;
    for (int height = 0;
    height < pyramidHeight; height ++) {
        for (int width = height + 1;
        width > 0; width --) {
            System.out.print ("-");
        }
        for (int width = 1 + (((pyramidHeight - 1) - height) * 2);
        width > 0; width --) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int height = 0;
    height < 5; height += 2) {
        for (int curHeight = height + 1;
        curHeight > 0; curHeight -= 2) {
            System.out.print ("-");
        }
        for (int width = 5;
        width - height > 0; width --) {
            System.out.print ("*");
        }
        System.out.println ();
    }
}
----------------------------------------
