$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41755798_41764613_15_25
41755798_41766459_1_22
Title: "JAVA javaFX menuBar multiple items one method (scene Builder)" 
----------------------------------------

private void openWindow (String resource) {
    try {
        FXMLLoader loader = new FXMLLoader (getClass ().getResource (resource));
        Scene scene = new Scene (loader.load ());
        Stage newWindow = new Stage ();
        newWindow.setScene (scene);
        newWindow.show ();
    } catch (Exception exc) {
    }
}
----------------------------------------

@FXML
void openWindow (ActionEvent event) {
    try {
        MenuItem tempMenuItem = (MenuItem) event.getSource ();
        System.out.println (tempMenuItem.getId ());
        switch (tempMenuItem.getId ()) {
            case "yourFirstID" :
                break;
            case "yourSecondID" :
                break;
        }
    } catch (IOException ex) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41762278_41762295_16_35
41762278_41762295_38_49
Title: Increasing java GUI grid size 
----------------------------------------

public Grid (int height, int width, double cheese) {
    rnd = Parameters.rnd;
    this.width = width;
    this.height = height;
    this.cheeseFraction = cheese;
    points = new ArrayList < Coordinate > ();
    grid = new char [height] [width];
    int buff = Parameters.wallBuff;
    countCheese = 0;
    for (int i = buff;
    i < height - buff; i ++) for (int j = buff;
    j < width - buff; j ++) if (rnd.nextDouble () < Parameters.cheeseFraction) {
        grid [i] [j] = '*';
        points.add (new Coordinate (i, j));
        countCheese ++;
    } else grid [i] [j] = '-';

}
----------------------------------------

public Grid (Grid other) {
    rnd = other.rnd;
    this.width = other.width;
    this.height = other.height;
    this.cheeseFraction = other.cheeseFraction;
    grid = new char [height] [width];
    countCheese = other.countCheese;
    for (int i = 0;
    i < height; i ++) for (int j = 0;
    j < width; j ++) grid [i] [j] = other.grid [i] [j];

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41769133_41769224_6_13
41769133_41769342_6_14
Title: Allowing only one negative in arrayList 
----------------------------------------

public boolean add (Integer x) {
    if (x < - 1) throw IllegalArgumentException ();

    if (negativeAdded) return;

    if (! negativeAdded && x < 0) {
        negativeAdded = true;
    }
    super.add (x);
}
----------------------------------------

public boolean add (T t) {
    if (t != null && t.floatValue () < 0) {
        if (hasNegative) {
            throw new IllegalArgumentException ("Negative element are not allowed anymore !");
        }
        hasNegative = true;
    }
    return super.add (t);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41775670_41775864_1_13
41775670_41776094_1_13
Title: How can I add elements into ArrayList using Scanner 
----------------------------------------

public static void addNum (final ArrayList < Double > myAList, final Scanner kb) {
    if (! (kb == null || myAList == null)) {
        System.out.println ("Please enter a number between (0 - 100): ");
        double number = kb.nextDouble ();
        while (number < 0d || number > 100d) {
            System.out.println ("That was not a qualified number, try again");
            number = kb.nextDouble ();
        }
        myAList.add (number);
        myAList.trimToSize ();
        System.out.println (Arrays.asList (myAList.toArray ()));
    }
}
----------------------------------------

public void addNum (final List < Double > myAList, final Scanner kb) {
    double number;
    if (! (myAList == null && kb == null)) {
        System.out.println ("Please enter a number between (0 - 100): ");
        number = kb.nextDouble ();
        while (number < 0d || number > 100d) {
            System.out.println ("please enter double and number must be betwen  0 to 100");
            number = kb.nextDouble ();
        }
        myAList.add (number);
        System.out.println (myAList);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41783988_41784227_1_28
41783988_41784374_5_28
Title: How to end a while loop 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int number = 0;
    while (number != - 99) {
        try {
            System.out.print ("Enter a positive integer value: ");
            number = input.nextInt ();
            if (number == - 99) continue;

            if (isEven (number)) System.out.println ("Your number is Even!");
            else System.out.println ("Your number is Odd!");

        } catch (Exception notNumber) {
            System.out.println ("Input not a number, try again.");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    boolean shouldContinue = true;
    int tries = 0;
    while (shouldContinue && tries < 10) {
        try {
            System.out.print ("Enter a positive integer value: ");
            int number = input.nextInt ();
            if (isEven (number)) {
                System.out.println ("Your number is Even!");
            } else {
                System.out.println ("Your number is Odd!");
            }
            shouldContinue = number != - 99 ? true : false;
        } catch (Exception notNumber) {
            System.out.println ("Input not a number, try again.");
        }
        tries --;
    }
    System.out.println ("Game over.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41804540_41804683_1_72
41804540_41804995_1_12
Title: How to get notification on Button Click? 
----------------------------------------

@Override
public void onClick (View v) {
    Intent intent = new Intent (getApplicationContext (), PushNotificationDemo.class);
    final PendingIntent pending = PendingIntent.getActivity (getApplicationContext (), 0, intent, 0);
    NotificationManager notificationManager = (NotificationManager) getSystemService (NOTIFICATION_SERVICE);
    Notification n;
    switch (v.getId ()) {
        case R.id.nd_smallnotification :
            if (heading.getText ().length () <= 0) {
                heading.setError ("Please provide push notification title");
            } else {
                heading.setError (null);
                heading_text = heading.getText ().toString ();
                n = new NotificationCompat.Builder (this).setContentTitle (heading_text).setContentText (message.getText ().toString ()).setSmallIcon (R.mipmap.ic_launcher).setContentIntent (pending).setDefaults (Notification.DEFAULT_SOUND).setAutoCancel (true).setWhen (System.currentTimeMillis ()).addAction (android.R.drawable.ic_menu_manage, "Close", pending).build ();
                n.flags |= Notification.FLAG_AUTO_CANCEL | Intent.FLAG_ACTIVITY_SINGLE_TOP;
                notificationManager.notify (0, n);
            }
            break;
        case R.id.nd_bignotification :
            if (heading.getText ().length () <= 0) {
                heading.setError ("Please provide push notification title");
            } else {
                heading.setError (null);
                heading_text = heading.getText ().toString ();
                NotificationCompat.InboxStyle nc = new NotificationCompat.InboxStyle ();
                nc.setBigContentTitle (heading_text);
                String [] text = new String [5];
                for (int i = 0;
                i < 5; i ++) {
                    text [i] = i + ". say hello...";
                    nc.addLine (text [i]);
                }
                n = new NotificationCompat.Builder (this).setStyle (nc).setSmallIcon (R.mipmap.ic_launcher).setContentIntent (pending).setDefaults (Notification.DEFAULT_SOUND).setAutoCancel (true).setWhen (System.currentTimeMillis ()).build ();
                n.flags |= Notification.FLAG_AUTO_CANCEL | Intent.FLAG_ACTIVITY_SINGLE_TOP;
                notificationManager.notify (100, n);
            }
            break;
    }
}
----------------------------------------

public void onClick (View view) {
    if (view == taskadd) {
        fromDatePickerDialog.show ();
        addtask = taskname.getText ().toString ();
        adddetail = taskdetail.getText ().toString ();
        adddate = taskdate.getText ().toString ();
        InsertData ();
        Notification ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41818808_1_17
41818731_41818949_1_18
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    int num = 0;
    Map < Integer, Integer > countMap = new HashMap < Integer, Integer > ();
    for (Integer i : items) {
        if (countMap.containsKey (i)) {
            countMap.put (i, countMap.get (i) + 1);
        } else {
            countMap.put (i, 1);
        }
    }
    for (Integer item : countMap.values ()) {
        if (item > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------

public static int countRepeats (int [] items) {
    int l = items.length;
    int num = 0;
    int max = 0;
    for (int i = 0;
    i < l; i ++) {
        if (items [i] > max) max = items [i];

    }
    int [] count = new int [max + 1];
    for (int i = 0;
    i < l; i ++) {
        count [items [i]] ++;
    }
    for (int i = 0;
    i <= max; i ++) {
        if (count [i] > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41818808_1_17
41818731_41819003_1_11
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    int num = 0;
    Map < Integer, Integer > countMap = new HashMap < Integer, Integer > ();
    for (Integer i : items) {
        if (countMap.containsKey (i)) {
            countMap.put (i, countMap.get (i) + 1);
        } else {
            countMap.put (i, 1);
        }
    }
    for (Integer item : countMap.values ()) {
        if (item > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------

public static int countRepeats (int [] items) {
    Set < Integer > distinct = new HashSet < > ();
    Set < Integer > duplicate = new HashSet < > ();
    for (int item : items) {
        if (! distinct.add (item)) {
            duplicate.add (item);
        }
    }
    return duplicate.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41818808_1_17
41818731_41819041_1_14
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    int num = 0;
    Map < Integer, Integer > countMap = new HashMap < Integer, Integer > ();
    for (Integer i : items) {
        if (countMap.containsKey (i)) {
            countMap.put (i, countMap.get (i) + 1);
        } else {
            countMap.put (i, 1);
        }
    }
    for (Integer item : countMap.values ()) {
        if (item > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------

public static int countRepeats (int [] items) {
    int res = 0;
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i : items) {
        map.put (i, map.get (i) == null ? 0 : map.get (i) + 1);
    }
    for (Integer key : map.keySet ()) {
        if (map.get (key) > 0) {
            res ++;
        }
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41818949_1_18
41818731_41819003_1_11
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    int l = items.length;
    int num = 0;
    int max = 0;
    for (int i = 0;
    i < l; i ++) {
        if (items [i] > max) max = items [i];

    }
    int [] count = new int [max + 1];
    for (int i = 0;
    i < l; i ++) {
        count [items [i]] ++;
    }
    for (int i = 0;
    i <= max; i ++) {
        if (count [i] > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------

public static int countRepeats (int [] items) {
    Set < Integer > distinct = new HashSet < > ();
    Set < Integer > duplicate = new HashSet < > ();
    for (int item : items) {
        if (! distinct.add (item)) {
            duplicate.add (item);
        }
    }
    return duplicate.size ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41818949_1_18
41818731_41819041_1_14
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    int l = items.length;
    int num = 0;
    int max = 0;
    for (int i = 0;
    i < l; i ++) {
        if (items [i] > max) max = items [i];

    }
    int [] count = new int [max + 1];
    for (int i = 0;
    i < l; i ++) {
        count [items [i]] ++;
    }
    for (int i = 0;
    i <= max; i ++) {
        if (count [i] > 1) {
            num ++;
        }
    }
    return num;
}
----------------------------------------

public static int countRepeats (int [] items) {
    int res = 0;
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i : items) {
        map.put (i, map.get (i) == null ? 0 : map.get (i) + 1);
    }
    for (Integer key : map.keySet ()) {
        if (map.get (key) > 0) {
            res ++;
        }
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41818731_41819003_1_11
41818731_41819041_1_14
Title: how to avoid repeated counts in counting repeated numbers if the number appeared three times? 
----------------------------------------

public static int countRepeats (int [] items) {
    Set < Integer > distinct = new HashSet < > ();
    Set < Integer > duplicate = new HashSet < > ();
    for (int item : items) {
        if (! distinct.add (item)) {
            duplicate.add (item);
        }
    }
    return duplicate.size ();
}
----------------------------------------

public static int countRepeats (int [] items) {
    int res = 0;
    Map < Integer, Integer > map = new HashMap < > ();
    for (int i : items) {
        map.put (i, map.get (i) == null ? 0 : map.get (i) + 1);
    }
    for (Integer key : map.keySet ()) {
        if (map.get (key) > 0) {
            res ++;
        }
    }
    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41823996_41824239_1_13
41823996_41824248_1_15
Title: Getting Next Available ID 
----------------------------------------

public int findId () {
    if (getAreas ().isEmpty ()) return 1;

    List < Area > areas = new ArrayList < > (getAreas ());
    areas.sort (Comparator.comparingInt (AutoPayArea :: getId));
    for (int i = 0;
    i < areas.size (); i ++) {
        if (areas.get (i).getId > (i + 1)) {
            return i + 1;
        }
    }
    return areas.size () + 1;
}
----------------------------------------

public int findId () {
    if (getAreas ().isEmpty ()) return 1;

    List < Area > areas = new ArrayList < > (getAreas ());
    areas.sort (Comparator.comparingInt (AutoPayArea :: getId));
    for (int i = 1;
    i <= areas.size (); i ++) {
        if (i < areas.get (i - 1).getId ()) {
            return i;
        }
    }
    return areas.size () + 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41824593_41824784_4_24
41824593_41824992_1_23
Title: Sort ArrayList alphabetically by value after a comma in each String 
----------------------------------------

public static void main (String...args) {
    List < String > list = new ArrayList < > ();
    list.add ("zzz, abc");
    list.add ("yy, ghi");
    list.add ("x, def");
    Collections.sort (list, new Comparator < String > () {
        @Override
        public int compare (String lhs, String rhs) {
            return filter (lhs).compareTo (filter (rhs));
        } private String filter (String s) {
            return s.replaceFirst ("^.*?, ", "");
        }}

    );
    for (String s : list) System.out.println (s);

}
----------------------------------------

public static void main (String [] args) throws IOException {
    Set < String > lines = new TreeSet < > (Comparator.comparing (o -> o.substring (o.indexOf (','))));
    BufferedReader reader = new BufferedReader (new FileReader ("sample.txt"));
    while (true) {
        String line = reader.readLine ();
        if (line == null) {
            break;
        }
        lines.add (line);
    }
    reader.close ();
    for (String line : lines) {
        System.out.println (line);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41828833_41829111_1_18
41828833_41829141_5_29
Title: How to Java Triangle pattern printing with height 
----------------------------------------

public static void main (String [] args) {
    int height;
    String A = "AA";
    String B = "BB";
    String res = "";
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter your height: ");
    height = sc.nextInt ();
    for (int i = 1;
    i <= height; i ++) {
        if (i % 2 == 0) {
            res = B + res;
        } else {
            res = A + res;
        }
        System.out.println (res);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Hello World!");
    int height;
    String A = "AA";
    String B = "BB";
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter your height: ");
    height = sc.nextInt ();
    for (int i = 1;
    i <= height; i ++) {
        for (int j = 1;
        j <= i; j ++) {
            if ((j % 2) == 1) {
                System.out.print ((i % 2 == 1) ? A : B);
            } else {
                System.out.print ((i % 2 == 1) ? B : A);
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41835892_41836097_5_35
41835892_41836712_1_22
Title: Number sorter program with cannot find symbol compilation error 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    Number [] numbers = new Number [10];
    Number [] oddList = new Number [10];
    Number [] evenList = new Number [10];
    int oddListIndex = 0;
    int evenListIndex = 0;
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.println ("Enter an integer: ");
        numbers [i] = reader.nextDouble ();
        if (numbers [i].intValue () % 2 == 0) {
            evenList [evenListIndex] = numbers [i];
            evenListIndex ++;
        } else {
            oddList [oddListIndex] = numbers [i];
            oddListIndex ++;
        }
    }
    System.out.println ("evenlist:");
    for (int i = 0;
    i < evenListIndex; i ++) {
        System.out.println (evenList [i]);
    }
    System.out.println ("oddlist:");
    for (int i = 0;
    i < oddListIndex; i ++) {
        System.out.println (oddList [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    List < Double > negative = new ArrayList < > ();
    List < Double > odd = new ArrayList < > ();
    List < Double > even = new ArrayList < > ();
    for (int i = 0;
    i < 10; i ++) {
        System.out.println ("Enter an integer: ");
        Double x = reader.nextDouble ();
        if (Math.signum (x) == - 1) {
            negative.add (x);
        } else if (x % 2 == 0) {
            even.add (x);
        } else if (x % 2 != 0) {
            odd.add (x);
        }

    }
    System.out.println (negative);
    System.out.println (even);
    System.out.println (odd);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4183853_4183909_1_21
4183853_4184058_7_17
Title: Encryption message in java 
----------------------------------------

public static byte [] encrypt (byte encrypt [], byte en_key []) {
    if (encrypt.length % 8 != 0) {
        byte [] padded = new byte [encrypt.length + 8 - (encrypt.length % 8)];
        System.arraycopy (encrypt, 0, padded, 0, encrypt.length);
        encrypt = padded;
    }
    try {
        SecretKeySpec key = new SecretKeySpec (en_key, "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish/ECB/NoPadding");
        cipher.init (Cipher.ENCRYPT_MODE, key);
        return cipher.doFinal (encrypt);
    } catch (Exception e) {
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------

public byte [] encrypt (byte encrypt [], byte en_key []) {
    try {
        SecretKeySpec key = new SecretKeySpec (en_key, "Blowfish");
        Cipher cipher = Cipher.getInstance ("Blowfish/ECB/NoPadding");
        cipher.init (Cipher.ENCRYPT_MODE, en_key);
        return cipher.doFinal (encrypt);
    } catch (Exception e) {
        e.printStackTrace ();
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41843490_41843649_3_13
41843490_41844049_1_20
Title: why we should not use synchronized with run method? 
----------------------------------------

public static void main (String [] args) {
    ChildThread th1 = new ChildThread ();
    Thread t1 = new Thread (th1);
    Thread t2 = new Thread (th1);
    Thread t3 = new Thread (th1);
    Thread t4 = new Thread (th1);
    t1.start ();
    t2.start ();
    t3.start ();
    t4.start ();
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    ChildThread th1 = new ChildThread ();
    ChildThread th2 = new ChildThread ();
    ChildThread th3 = new ChildThread ();
    ChildThread th4 = new ChildThread ();
    th1.setName ("A");
    th2.setName ("B");
    th3.setName ("C");
    th4.setName ("D");
    th1.start ();
    th1.join ();
    th2.start ();
    th2.join ();
    th3.start ();
    th3.join ();
    th4.start ();
    th4.join ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41844054_41847034_25_47
41844054_41847034_28_45
Title: How to retry the request every hour for 5 attempts in rxjava and retrofit 
----------------------------------------

public Observable < ? > call (Observable < ? extends Throwable > attempts) {
    return attempts.flatMap (new Func1 < Throwable, Observable < ? > > () {
        @Override
        public Observable < ? > call (Throwable throwable) {
            if (throwable instanceof HttpException) {
                LOGD (TAG, "Caught http exception.");
            }
            if (throwable instanceof IOException) {
                LOGD (TAG, "Network error");
            }
            if (++ retryCount < maxRetries) {
                return Observable.timer (retryDelayMillis, TimeUnit.MILLISECONDS);
            }
            return Observable.error (throwable);
        }}

    );
}
----------------------------------------

public Observable < ? > call (Throwable throwable) {
    if (throwable instanceof HttpException) {
        LOGD (TAG, "Caught http exception.");
    }
    if (throwable instanceof IOException) {
        LOGD (TAG, "Network error");
    }
    if (++ retryCount < maxRetries) {
        return Observable.timer (retryDelayMillis, TimeUnit.MILLISECONDS);
    }
    return Observable.error (throwable);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41850105_41850506_24_40
41850105_41850506_67_78
Title: Java Swing GUI -how to have a thread to be sleeping all time and be awaken by a click? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    Thread t = new Thread (new Runner ());
    t.start ();
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new TestPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    while (true && ! Thread.currentThread ().isInterrupted ()) {
        synchronized (LOCK) {
            try {
                System.out.println ("Nothing to see here, just waiting");
                LOCK.wait ();
            } catch (InterruptedException ex) {
            }
        }
        System.out.println ("Look at me, I'm busy");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4185242_16128631_5_40
4185242_36808442_5_24
Title: Communication between python client and java server 
----------------------------------------

public static void main (String args []) throws Exception {
    String fromClient;
    String toClient;
    ServerSocket server = new ServerSocket (8080);
    System.out.println ("wait for connection on port 8080");
    boolean run = true;
    while (run) {
        Socket client = server.accept ();
        System.out.println ("got connection on port 8080");
        BufferedReader in = new BufferedReader (new InputStreamReader (client.getInputStream ()));
        PrintWriter out = new PrintWriter (client.getOutputStream (), true);
        fromClient = in.readLine ();
        System.out.println ("received: " + fromClient);
        if (fromClient.equals ("Hello")) {
            toClient = "olleH";
            System.out.println ("send olleH");
            out.println (toClient);
            fromClient = in.readLine ();
            System.out.println ("received: " + fromClient);
            if (fromClient.equals ("Bye")) {
                toClient = "eyB";
                System.out.println ("send eyB");
                out.println (toClient);
                client.close ();
                run = false;
                System.out.println ("socket closed");
            }
        }
    }
    System.exit (0);
}
----------------------------------------

public static void main (String args []) throws IOException {
    ServerSocket s = new ServerSocket (5000);
    try {
        Socket ss = s.accept ();
        PrintWriter pw = new PrintWriter (ss.getOutputStream (), true);
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        BufferedReader br1 = new BufferedReader (new InputStreamReader (ss.getInputStream ()));
        System.out.println ("Client connected..");
        while (true) {
            System.out.println ("Enter command:");
            pw.println (br.readLine ());
        }
    } finally {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41855012_41855133_1_16
41855012_41855280_1_20
Title: Java: Program will stop in a certain condition then press any key to continue... it will continue to loop 
----------------------------------------

public static void main (String a []) {
    int count = 0;
    for (int i = 0;
    i <= 255; i ++) {
        if (count == 10) {
            System.out.println ("Press \"ENTER\" to continue...");
            Scanner scanner = new Scanner (System.in);
            scanner.nextLine ();
            count = 0;
        } else {
            System.out.printf ("%d\t%c\n", i, i);
            count ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    {
        int count = 0;
        Scanner scanner = new Scanner (System.in);
        try {
            for (int i = 0;
            i <= 255; i ++) {
                System.out.printf ("%d\t%c\n", i, i);
                count ++;
                if ((count % 10) == 0) {
                    System.out.println ("Click to continue...");
                    scanner.nextLine ();
                }
            }
        } finally {
            scanner.close ();
        }
    }}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41855012_41855280_1_20
41855012_41855574_7_21
Title: Java: Program will stop in a certain condition then press any key to continue... it will continue to loop 
----------------------------------------

public static void main (String [] args) {
    {
        int count = 0;
        Scanner scanner = new Scanner (System.in);
        try {
            for (int i = 0;
            i <= 255; i ++) {
                System.out.printf ("%d\t%c\n", i, i);
                count ++;
                if ((count % 10) == 0) {
                    System.out.println ("Click to continue...");
                    scanner.nextLine ();
                }
            }
        } finally {
            scanner.close ();
        }
    }}
----------------------------------------

public static void main (String a []) {
    int count = 0;
    for (int i = 0;
    i <= 255; i ++) {
        count ++;
        if (count % 10 == 0) {
            System.out.printf ("%d\t%c\n", i, i);
            System.out.println ("Press \"ENTER\" to continue...");
            SCANNER.nextLine ();
            count = 0;
        } else {
            System.out.printf ("%d\t%c\n", i, i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41863680_42015539_25_40
41863680_42982167_10_25
Title: OneSignal Android NotificationOpenedHandler - start activity 
----------------------------------------

public void notificationOpened (OSNotificationOpenResult result) {
    OSNotificationAction.ActionType actionType = result.action.type;
    JSONObject data = result.notification.payload.additionalData;
    String stationName = data.optString ("stationName");
    String timestamp = data.optString ("timestamp");
    String filename = data.optString ("filename");
    String url = getString (R.string.callResourceUrl) + filename;
    Intent intent = new Intent (getApplicationContext (), CallActivity.class);
    intent.putExtra ("stationName", stationName);
    intent.putExtra ("time", timestamp);
    intent.putExtra ("url", url);
    startActivity (intent);
}
----------------------------------------

public void notificationOpened (OSNotificationOpenResult result) {
    JSONObject data = result.notification.payload.additionalData;
    if (data != null) {
        String myCustomData = data.optString ("key", null);
    }
    OSNotificationAction.ActionType actionType = result.action.type;
    if (actionType == OSNotificationAction.ActionType.ActionTaken) Log.i ("OneSignalExample", "Button pressed with id: " + result.action.actionID);

    startApp ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41865415_41865582_4_32
41865415_41866632_5_31
Title: Find the average of numbers in an array and find the numbers greater than the average 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    Number [] numbers = new Number [10];
    Number [] greaterList = new Number [10];
    int sum = 0;
    int greaterListIndex = 0;
    int a;
    double average;
    for (int i = 0;
    i < numbers.length; i ++) {
        System.out.println ("Enter a number: ");
        a = reader.nextInt ();
        sum += a;
    }
    average = sum / (double) numbers.length;
    for (int j = 0;
    j < numbers.length; j ++) {
        if (numbers [j] > average) greaterList [greaterListIndex] = numbers [j];

        greaterListIndex ++;
    }
    System.out.println ("The average is: " + average);
    System.out.println ("Numbers greater than the average are: ");
    for (int k = 0;
    k < greaterListIndex; k ++) {
        System.out.println (greaterList [k]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    System.out.print ("How many numbers will be in your array? ");
    int n = s.nextInt ();
    int arr [] = new int [n];
    int sum = 0;
    System.out.println ("Enter the elements of the array:");
    for (int i = 0;
    i < n; i ++) {
        arr [i] = s.nextInt ();
        sum = sum + arr [i];
    }
    System.out.println ("You entered the array: " + Arrays.toString (arr));
    double average = sum / arr.length;
    System.out.println ("The average of the array is: " + average);
    System.out.println ("The numbers in the array that are greater than the average are: ");
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] > average) {
            System.out.println (arr [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41871900_41871985_3_14
41871900_41872053_3_10
Title: Exceptions and Output in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        System.out.println ("1");
        throw new Exception ();
    } catch (Exception e) {
        System.out.println ("2");
    } finally {
        System.out.println ("3");
        doStuff ();
        System.out.println ("4");
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        s += "1";
        throw new Exception ();
    } catch (Exception e) {
        s += "2";
    } finally {
        s += "3";
        System.out.println (s);
        doStuff ();
        s += "4";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41871900_41871985_3_14
41871900_41872076_3_16
Title: Exceptions and Output in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        System.out.println ("1");
        throw new Exception ();
    } catch (Exception e) {
        System.out.println ("2");
    } finally {
        System.out.println ("3");
        doStuff ();
        System.out.println ("4");
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        s += "1";
        throw new Exception ();
    } catch (Exception e) {
        s += "2";
    } finally {
        try {
            s += "3";
            doStuff ();
            s += "4";
        } catch (ArithmeticException e) {
            e.printStackTrace ();
        }
    }
    System.out.println (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41871900_41872053_3_10
41871900_41872076_3_16
Title: Exceptions and Output in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        s += "1";
        throw new Exception ();
    } catch (Exception e) {
        s += "2";
    } finally {
        s += "3";
        System.out.println (s);
        doStuff ();
        s += "4";
    }
}
----------------------------------------

public static void main (String [] args) {
    try {
        s += "1";
        throw new Exception ();
    } catch (Exception e) {
        s += "2";
    } finally {
        try {
            s += "3";
            doStuff ();
            s += "4";
        } catch (ArithmeticException e) {
            e.printStackTrace ();
        }
    }
    System.out.println (s);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41897084_41897404_15_26
41897084_41897690_28_41
Title: Java7: What is some equivalent to specifing method references in a function call 
----------------------------------------

public static void main () {
    Method m;
    ArrayList < A > listA = new ArrayList < A > ();
    listA.add (new A ());
    m = new A ().getClass ().getMethod ("aToString", new Class [] {});
    ServiceClass.genericToStringOutput (listA, m);
    ArrayList < B > listB = new ArrayList < B > ();
    listB.add (new B ());
    m = new B ().getClass ().getMethod ("bToString", new Class [] {});
    ServiceClass.genericToStringOutput (listB, m);
}
----------------------------------------

public static void main () {
    List < A > listA = new ArrayList < > ();
    listA.add (new A ());
    ServiceClass.genericToString (listA, new Function < A, String > () {
        @Override
        public String apply (final A input) {
            return input.aToString ();
        }}

    );
    List < B > listB = new ArrayList < > ();
    listB.add (new B ());
    ServiceClass.genericToString (listB, B :: bToString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41904743_41904777_1_11
41904743_41904878_1_16
Title: Nested if statement with multiple condition returns 
----------------------------------------

public String getValue (int n) {
    if (n % fizzNumber == 0) {
        if (n % buzzNumber == 0) {
            return "fizzbuzz";
        }
        return "fizz";
    }
    return Integer.toString (n);
}
----------------------------------------

public String getValue (int n) {
    String ret = "";
    if (n % fizzNumber == 0) {
        ret += "fizz";
    }
    if (n % buzzNumber == 0) {
        ret += "buzz";
    }
    if (ret.equals ("")) {
        ret = Integer.toString (n);
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41905922_41906059_26_36
41905922_41906145_1_22
Title: How to print out a toString for this class? 
----------------------------------------

public void Evaluate (double value) {
    for (int i = 0;
    i <= degree; i ++) {
        System.out.println ("Enter coefficent for position " + i);
        this.coefficient [i] = key.nextInt ();
        evaluation = Math.pow (value, i) * this.coefficient [0];
        this.sum += evaluation;
    }
}
----------------------------------------

public void Evaluate (double value) {
    for (int i = 0;
    i <= degree; i ++) {
        System.out.println ("Enter coefficent for position " + i);
        this.coefficient = key.nextInt ();
        evaluation = Math.pow (value, i) * coefficient;
        this.sum += evaluation;
        this.poly = "";
        if (coefficient != 0) {
            if (i > 0) {
                this.poly += " + " + Integer.toString (coefficient) + "x^" + Integer.toString (i);
            } else {
                this.poly = Integer.toString (coefficient)
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41905922_41906059_41_60
41905922_41908522_40_59
Title: How to print out a toString for this class? 
----------------------------------------

public String toString () {
    String s = "";
    for (int i = 0;
    i <= degree; i ++) {
        s += coefficient [i];
        switch (i) {
            case 0 :
                s += " + ";
                break;
            case 1 :
                s += "x + ";
                break;
            default :
                s += "x^" + i + ((i == degree) ? "" : " + ");
        }
    }
    return s;
}
----------------------------------------

public String toString (char variable) {
    boolean anythingAppendedYet = false;
    StringBuilder toReturn = new StringBuilder ();
    for (int exponent = coefficients.length - 1;
    exponent >= 0; exponent --) {
        if (coefficients [exponent] != 0.0) {
            appendSign (toReturn, exponent, anythingAppendedYet);
            appendNumberPart (toReturn, exponent);
            appendLetterAndExponent (toReturn, exponent, variable);
            anythingAppendedYet = true;
        }
    }
    if (anythingAppendedYet) {
        return toReturn.toString ();
    } else {
        return "0";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4191381_4191589_1_14
4191381_4211445_2_12
Title: Java algorithm to make a straight pyramid 
----------------------------------------

public static void main (String [] args) {
    List < String > list = new LinkedList < String > ();
    for (int i = 5;
    i > 0; i --) {
        wrapWithNumber (list, i);
    }
    for (String string : editListToBeInTriangleShape (list)) {
        System.out.println (string);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("                 1                 ");
    System.out.println ("               1 2 1               ");
    System.out.println ("             1 2 3 2 1             ");
    System.out.println ("           1 2 3 4 3 2 1           ");
    System.out.println ("         1 2 3 4 5 4 3 2 1         ");
    System.out.println ("       1 2 3 4 4 4 4 4 3 2 1       ");
    System.out.println ("     1 2 3 3 3 3 3 3 3 3 3 2 1     ");
    System.out.println ("   1 2 2 2 2 2 2 2 2 2 2 2 2 2 1   ");
    System.out.println (" 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41920882_41920904_1_10
41920882_41920936_1_10
Title: Compile problems -- must return a String 
----------------------------------------

public String missingChar (String str, int n) {
    if (str.length () < n) {
        int idx = str.indexOf (n);
        String a = str.substring (0, idx);
        String b = str.substring (idx + 1, str.length ());
        return a + b;
    }
    return str;
}
----------------------------------------

public String missingChar (String str, int n) {
    if (str.length () < n) {
        int idx = str.indexOf (n);
        String a = str.substring (0, idx);
        String b = str.substring (idx + 1, str.length ());
        return a + b;
    } else {
        return something;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41926264_41926489_27_45
41926264_41926615_22_34
Title: remove an object from an ArrayList 
----------------------------------------

public boolean remove (String license) {
    if (person.remove (person.equals (add))) {
        remove = true;
    }
    return remove;
    for (int i = 0;
    i < person.size (); ++ i) {
        if (person.get (i).getLicenseNumber ().equals (license)) {
            return person.remove (i);
        }
    }
    return person.remove (new Person (license));
}
----------------------------------------

public boolean remove (Person removal) {
    boolean wasRemoved = false;
    for (ListIterator < Person > iterator = persons.listIterator (persons.size ());
    iterator.hasPrevious ();) {
        final Person person = iterator.previous ();
        if (removal.equals (person)) {
            iterator.remove ();
            wasRemoved = true;
        }
    }
    return wasRemoved;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41927806_41927897_1_23
41927806_41927950_1_10
Title: Add a new integer before a target integer? 
----------------------------------------

public static IntNode addBefore (IntNode front, int target, int newItem) {
    IntNode prev = null;
    IntNode ptr = front;
    while (ptr != null) {
        if (ptr.data == target) {
            if (prev == null) {
                front = new IntNode (newItem, front);
            } else {
                prev.next = new IntNode (newItem, ptr);
            }
            break;
        }
        prev = ptr;
        ptr = ptr.next;
    }
    return front;
}
----------------------------------------

public static IntNode addBefore (IntNode front, int target, int newItem) {
    if (front.data == target) {
        IntNode currentFront = new IntNode (front.data, front.next);
        front.data = newItem;
        front.next = currentFront;
    } else {
        return addBefore (front.next, target, newItem);
    }
    return front;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41931103_41932108_7_20
41931103_41933147_1_11
Title: Read the values from nested string 
----------------------------------------

public static void main (String [] args) {
    String html = "{1 2 3 {4 5 6 {7 8 9}10 11}12 13 14}";
    html = html.replaceAll ("\\{", "<div>").replaceAll ("\\}", "</div>");
    System.out.println (html);
    Document doc = Jsoup.parse (html);
    Elements es = doc.select ("div");
    StringBuilder sb = new StringBuilder ();
    for (Element e : es) {
        sb.append (e.ownText ());
        sb.append (" ");
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    String str = "{1 2 3{4 5 6{7 8 9}10 11}12 13 14}";
    String [] splited = str.replaceFirst ("\\{", "").split ("\\{|\\}");
    System.out.println (Arrays.toString (splited));
    StringBuilder sb = new StringBuilder ();
    for (int i = 0, j = splited.length - 1;
    i < j; i ++, j --) {
        sb.append (splited [i]).append (" ").append (splited [j]).append (" ");
    }
    sb.append (splited [splited.length / 2]);
    System.out.println (sb.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41931175_41952167_1_17
41931175_41961483_1_38
Title: RxJava - SwitchMap alike with multiple limited active streams 
----------------------------------------

public static void main (String [] args) {
    Observable.create (subscriber -> {
        for (int i = 0;
        i < 5; i ++) {
            Observable.timer (i, TimeUnit.SECONDS).toBlocking ().subscribe ();
            subscriber.onNext (i);
        }
    }).switchMap (n -> {
        System.out.println ("Main task emitted event - " + n);
        return Observable.interval (1, TimeUnit.SECONDS).take ((int) n * 3).doOnUnsubscribe (() -> System.out.println ("Unsubscribed for main task event - " + n));
    }).subscribe (n2 -> System.out.println ("\t" + n2));
    Observable.timer (20, TimeUnit.SECONDS).toBlocking ().subscribe ();
}
----------------------------------------

public static void main (String [] args) {
    PublishSubject < Integer > ps = PublishSubject.create ();
    @SuppressWarnings ("unchecked")
    PublishSubject < Integer > [] pss = new PublishSubject [3];
    for (int i = 0;
    i < pss.length; i ++) {
        pss [i] = PublishSubject.create ();
    }
    AssertableSubscriber < Integer > ts = ps.compose (switchFlatMap (2, v -> pss [v])).test ();
    ps.onNext (0);
    ps.onNext (1);
    pss [0].onNext (1);
    pss [0].onNext (2);
    pss [0].onNext (3);
    pss [1].onNext (10);
    pss [1].onNext (11);
    pss [1].onNext (12);
    ps.onNext (2);
    pss [0].onNext (4);
    pss [2].onNext (20);
    pss [2].onNext (21);
    pss [2].onNext (22);
    pss [1].onCompleted ();
    pss [2].onCompleted ();
    ps.onCompleted ();
    ts.assertResult (1, 2, 3, 10, 11, 12, 20, 21, 22);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41939840_41939961_1_21
41939840_41940272_1_15
Title: java.lang.IndexOutOfBoundsException: Invalid index 
----------------------------------------

@Override
public void onBindViewHolder (MyViewHolder holder, int position) {
    final ExRow expense = expenseList.get (position);
    holder.title.setText (expense.getTitle ());
    holder.amount.setText (expense.getAmount ());
    mRemoveButton.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            int pos = expenseList.indexOf (expense);
            if (pos == - 1) return;

            expenseList.remove (pos);
            notifyItemRemoved (pos);
            notifyItemRangeChanged (pos, expenseList.size ());
        }}

    );
}
----------------------------------------

@Override
public void onBindViewHolder (final MyViewHolder holder, int position) {
    ExRow expense = expenseList.get (holder.getAdapterPosition ());
    holder.title.setText (expense.getTitle ());
    holder.amount.setText (expense.getAmount ());
    mRemoveButton.setOnClickListener (new View.OnClickListener () {
        public void onClick (View view) {
            int adapterPosition = holder.getAdapterPosition ();
            expenseList.remove (adapterPosition);
            notifyItemRemoved (adapterPosition);
            notifyDatasetChanged ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41946340_41946442_5_23
41946340_41946472_5_25
Title: Java Program that lets user guess 3 letters in order to guess a name? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String name = "carson";
    int namelength = name.length ();
    int l = 3;
    String letter;
    System.out.println ("The name is " + namelength + " charecters long");
    while (l -- > 0) {
        System.out.println ("Please enter a letter to guess?");
        letter = scan.nextLine ();
        if (name.indexOf (letter) != - 1) {
            System.out.println ("Letter found at position " + (name.indexOf (letter) + 1));
        } else {
            System.out.println ("Letter not found");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String name = "carson";
    int namelength = name.length ();
    System.out.println ("The name is " + namelength + " charecters long");
    System.out.println ("Please enter a letter to guess?");
    char letter = scan.nextLine ().charAt (0);
    checkLetter (name, letter);
    System.out.println ("Please enter a letter to guess?");
    letter = scan.nextLine ().charAt (0);
    checkLetter (name, letter);
    System.out.println ("Please enter a letter to guess?");
    letter = scan.nextLine ().charAt (0);
    checkLetter (name, letter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4195395_4197119_10_23
4195395_5753357_25_34
Title: "Create an inspecting properties window button driven as a JDialog" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (theWindow.isVisible ()) {
        theWindow.setVisible (false);
        getParent ().remove (theWindow);
    } else {
        JButton btn = (JButton) e.getSource ();
        getParent ().add (theWindow);
        theWindow.setBounds (btn.getX (), btn.getY () + btn.getHeight (), 100, 100);
        theWindow.setVisible (true);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    boolean alsoDeactivated = Math.abs (deactivateEventTime - mouseDownTime) < 100;
    if (theWindow.isVisible ()) {
        theWindow.setVisible (false);
    } else if (! alsoDeactivated) {
        theWindow.setVisible (true);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4195395_4197119_5_26
4195395_5753357_7_37
Title: "Create an inspecting properties window button driven as a JDialog" 
----------------------------------------

public PropertiesButton () {
    theWindow = new JPanel ();
    theWindow.add (new JMenuCheckBoxItem ("Something"));
    this.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            if (theWindow.isVisible ()) {
                theWindow.setVisible (false);
                getParent ().remove (theWindow);
            } else {
                JButton btn = (JButton) e.getSource ();
                getParent ().add (theWindow);
                theWindow.setBounds (btn.getX (), btn.getY () + btn.getHeight (), 100, 100);
                theWindow.setVisible (true);
            }
        }}

    );
    theWindow.setVisible (false);
}
----------------------------------------

public PropertiesButton (String text, final Frame launcher) {
    super (text);
    theWindow = new JDialog ();
    theWindow.getContentPane ().add (new JLabel ("Properties"));
    theWindow.pack ();
    theWindow.setDefaultCloseOperation (WindowConstants.DISPOSE_ON_CLOSE);
    theWindow.addWindowListener (new WindowAdapter () {
        @Override
        public void windowDeactivated (WindowEvent e) {
            deactivateEventTime = EventQueue.getMostRecentEventTime ();
            theWindow.setVisible (false);
        }}

    );
    this.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            boolean alsoDeactivated = Math.abs (deactivateEventTime - mouseDownTime) < 100;
            if (theWindow.isVisible ()) {
                theWindow.setVisible (false);
            } else if (! alsoDeactivated) {
                theWindow.setVisible (true);
            }

        }}

    );
    theWindow.setVisible (false);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4195460_4195523_1_32
4195460_4195662_1_22
Title: How can I handle this exception within this method? 
----------------------------------------

public static void viewTable (Connection con) throws SQLException {
    Statement stmt = null;
    ResultSet rs = null;
    String query = "select COF_NAME, SUP_ID, PRICE, SALES, TOTAL from " + dbName + ".COFFEES";
    try {
        stmt = con.createStatement ();
        rs = stmt.executeQuery (query);
        while (rs.next ()) {
            String coffeeName = rs.getString ("COF_NAME");
            int supplierID = rs.getInt ("SUP_ID");
            float price = rs.getFloat ("PRICE");
            int sales = rs.getInt ("SALES");
            int total = rs.getInt ("TOTAL");
            System.out.println (coffeeName + "\t" + supplierID + "\t" + price + "\t" + sales + "\t" + total);
        }
        rs.close ();
        rs = null;
        stmt.close ();
        stmt = null;
    } catch (SQLException e) {
        JDBCTutorialUtilities.printSQLException (e);
    } finally {
        rs = Utils.silentClose (rs);
        stmt = Utils.silentClose (stmt);
    }
}
----------------------------------------

public static void viewTable (Connection con) throws SQLException {
    Statement stmt = null;
    String query = "select COF_NAME, SUP_ID, PRICE, SALES, TOTAL from " + dbName + ".COFFEES";
    try {
        stmt = con.createStatement ();
        ResultSet rs = stmt.executeQuery (query);
        while (rs.next ()) {
            String coffeeName = rs.getString ("COF_NAME");
            int supplierID = rs.getInt ("SUP_ID");
            float price = rs.getFloat ("PRICE");
            int sales = rs.getInt ("SALES");
            int total = rs.getInt ("TOTAL");
            System.out.println (coffeeName + "\t" + supplierID + "\t" + price + "\t" + sales + "\t" + total);
        }
    } catch (SQLException e) {
        JDBCTutorialUtilities.printSQLException (e);
    } finally {
        try {
            stmt.close ();
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41955874_41956673_3_65
41955874_41960927_51_65
Title: JavaFX: Disable all components while a process is running and show progress indicator 
----------------------------------------

public void start (Stage primaryStage) {
    BorderPane root = new BorderPane ();
    Scene scene = new Scene (root, 400, 400);
    scene.getStylesheets ().add (getClass ().getResource ("application.css").toExternalForm ());
    Service < Void > serv = new Service < Void > () {
        @Override
        protected Task < Void > createTask () {
            return new Task < Void > () {
                @Override
                protected Void call () throws Exception {
                    int maxWork = 10;
                    for (int i = 0;
                    i < maxWork; i ++) {
                        Thread.sleep (1000);
                        updateProgress (i + 1, maxWork);
                    }
                    return null;
                }@Override
                protected void succeeded () {
                    super.succeeded ();
                    updateProgress (1, 1);
                }@Override
                protected void cancelled () {
                    super.cancelled ();
                    updateProgress (1, 1);
                }@Override
                protected void failed () {
                    super.failed ();
                    updateProgress (1, 1);
                }}

            ;
        }}

    ;
    ProgressIndicator pi = new ProgressIndicator ();
    pi.progressProperty ().bind (serv.progressProperty ());
    Button bStart = new Button ("Start");
    bStart.setOnAction (e -> {
        serv.reset ();
        serv.start ();
    });
    root.setCenter (bStart);
    root.setBottom (pi);
    primaryStage.setScene (scene);
    primaryStage.show ();
    pi.getScene ().getRoot ().disableProperty ().bind (serv.runningProperty ());
}
----------------------------------------

public void start (Stage stage) throws Exception {
    main = createMainPane ();
    layout = new StackPane ();
    layout.getChildren ().add (main);
    Scene scene = new Scene (layout, 900, 550);
    stage.setScene (scene);
    stage.setTitle ("Progress Example");
    stage.setOnCloseRequest (e -> {
        Platform.exit ();
        System.exit (0);
    });
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41958459_41958686_4_23
41958459_41959916_2_9
Title: Drawing exercise in java 
----------------------------------------

public static void main (String [] arg) {
    Scanner sc = new Scanner (System.in);
    int param = sc.nextInt () - 1;
    for (int i = 0;
    i < param; i ++) {
        for (int j = 0;
        j < i; j ++) {
            System.out.print (" ");
        }
        System.out.print ("*");
        for (int j = 0;
        j < 2 * param - 2 * i - 1; j ++) {
            System.out.print (" ");
        }
        System.out.print ("*");
        System.out.println ();
    }
    for (int i = 0;
    i < param; i ++) {
        System.out.print (" ");
    }
    System.out.print ("*");
    System.out.println ();
}
----------------------------------------

public static void main (String...args) {
    for (int x = - 2, y = 8;
    x <= 3; ++ x) {
        String before = (x >= 0) ? String.format ("%" + (x + 1) + "s", "*") : "";
        String after = (y > 0) ? String.format ("%" + (y + 1) + "s", "*") : "";
        System.out.println (before + after);
        y -= (x >= - 1) ? 2 : 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41963057_41964350_38_46
41963057_41964350_72_80
Title: Why doesn't my consumer consume Integer values? (Producer-Consumer with wait and notify) 
----------------------------------------

public void run () {
    while (true) {
        try {
            deliver ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            produce ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41987798_41987885_1_14
41987798_41987983_1_21
Title: only checks first and last character 
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ().toLowerCase ();
    String reversed = new StringBuffer (word).reverse ().toString ();
    int len = word.length ();
    for (int x = 0;
    x < len; x ++) {
        if (word.charAt (x) != reversed.charAt (x)) {
            System.out.println ("False");
            return;
        }
    }
    System.out.println ("True");
}
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ().toLowerCase ();
    int len = (int) (word.length () / 2);
    boolean isPalindrom = true;
    for (int x = 0;
    x < len; x ++) {
        if (word.charAt (x) != word.charAt (word.length () - 1 - x)) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) System.out.println ("True");
    else System.out.println ("False");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41987798_41987885_1_14
41987798_41988585_1_17
Title: only checks first and last character 
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ().toLowerCase ();
    String reversed = new StringBuffer (word).reverse ().toString ();
    int len = word.length ();
    for (int x = 0;
    x < len; x ++) {
        if (word.charAt (x) != reversed.charAt (x)) {
            System.out.println ("False");
            return;
        }
    }
    System.out.println ("True");
}
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ();
    String reversed = input.next ();
    char c [] = word.toLowerCase ().toCharArray ();
    char d [] = reversed.toLowerCase ().toCharArray ();
    if (word.length () != reversed.length ()) System.out.print ("False ");

    Arrays.sort (c);
    Arrays.sort (d);
    if (Arrays.equals (c, d)) System.out.print ("True ");
    else System.out.print ("False ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41987798_41987983_1_21
41987798_41988585_1_17
Title: only checks first and last character 
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ().toLowerCase ();
    int len = (int) (word.length () / 2);
    boolean isPalindrom = true;
    for (int x = 0;
    x < len; x ++) {
        if (word.charAt (x) != word.charAt (word.length () - 1 - x)) {
            isPalindrom = false;
            break;
        }
    }
    if (isPalindrom) System.out.println ("True");
    else System.out.println ("False");

}
----------------------------------------

public static void isPalindromeWord () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a word to check: ");
    String word = input.next ();
    String reversed = input.next ();
    char c [] = word.toLowerCase ().toCharArray ();
    char d [] = reversed.toLowerCase ().toCharArray ();
    if (word.length () != reversed.length ()) System.out.print ("False ");

    Arrays.sort (c);
    Arrays.sort (d);
    if (Arrays.equals (c, d)) System.out.print ("True ");
    else System.out.print ("False ");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_41999872_1_19
41999782_41999876_1_15
Title: Short form for Java If Else statement 
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null && two == null) {
        return 1;
    }
    if (one == null) {
        return 2;
    }
    if (two == null) {
        return 3;
    }
    if (isMatch (one, two)) {
        return 4;
    }
    return 5;
}
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null) {
        if (two == null) {
            return 1;
        } else {
            return 2;
        }
    } else {
        if (two == null) {
            return 3;
        } else {
            return isMatch (one, two) ? 4 : 5;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_41999872_1_19
41999782_42001921_1_10
Title: Short form for Java If Else statement 
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null && two == null) {
        return 1;
    }
    if (one == null) {
        return 2;
    }
    if (two == null) {
        return 3;
    }
    if (isMatch (one, two)) {
        return 4;
    }
    return 5;
}
----------------------------------------

private boolean similarityCount (String a, String b) {
    if (a == null) {
        throw new IllegalArgumentException ("a");
    }
    if (b == null) {
        throw new IllegalArgumentException ("b");
    }
    return isMatch (a, b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_41999872_1_19
41999782_42008083_1_16
Title: Short form for Java If Else statement 
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null && two == null) {
        return 1;
    }
    if (one == null) {
        return 2;
    }
    if (two == null) {
        return 3;
    }
    if (isMatch (one, two)) {
        return 4;
    }
    return 5;
}
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null || two == null) {
        if (two != null) {
            return 2;
        }
        if (one != null) {
            return 3;
        }
        return 1;
    }
    return isMatch (one, two) ? 4 : 5;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_41999876_1_15
41999782_42001921_1_10
Title: Short form for Java If Else statement 
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null) {
        if (two == null) {
            return 1;
        } else {
            return 2;
        }
    } else {
        if (two == null) {
            return 3;
        } else {
            return isMatch (one, two) ? 4 : 5;
        }
    }
}
----------------------------------------

private boolean similarityCount (String a, String b) {
    if (a == null) {
        throw new IllegalArgumentException ("a");
    }
    if (b == null) {
        throw new IllegalArgumentException ("b");
    }
    return isMatch (a, b);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_41999876_1_15
41999782_42008083_1_16
Title: Short form for Java If Else statement 
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null) {
        if (two == null) {
            return 1;
        } else {
            return 2;
        }
    } else {
        if (two == null) {
            return 3;
        } else {
            return isMatch (one, two) ? 4 : 5;
        }
    }
}
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null || two == null) {
        if (two != null) {
            return 2;
        }
        if (one != null) {
            return 3;
        }
        return 1;
    }
    return isMatch (one, two) ? 4 : 5;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
41999782_42001921_1_10
41999782_42008083_1_16
Title: Short form for Java If Else statement 
----------------------------------------

private boolean similarityCount (String a, String b) {
    if (a == null) {
        throw new IllegalArgumentException ("a");
    }
    if (b == null) {
        throw new IllegalArgumentException ("b");
    }
    return isMatch (a, b);
}
----------------------------------------

private int similarityCount (String one, String two) {
    if (one == null || two == null) {
        if (two != null) {
            return 2;
        }
        if (one != null) {
            return 3;
        }
        return 1;
    }
    return isMatch (one, two) ? 4 : 5;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42011685_42022827_15_20
42011685_42022827_28_33
Title: Lambda accessibility to private methods 
----------------------------------------

public Object call () throws Exception {
    try {
        return (Void) method.invokeExact ();
    } catch (Exception | Error e) {
        throw e;
    } catch (Throwable t) {
        throw new AssertionError (t);
    }
}
----------------------------------------

public Object call () throws Exception {
    try {
        return (Void) method.invokeExact ();
    } catch (Exception | Error e) {
        throw e;
    } catch (Throwable t) {
        throw new AssertionError (t);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42022406_42022904_1_20
42022406_42024361_1_21
Title: Java: Find multiple min/max attribute values in a stream using lambda 
----------------------------------------

< S, T > T performOnIntersections (Function < S, T > function, S [] [] inputArray, Dimensions...dimensions) {
    Supplier < int [] > supplier = () -> new int [] {Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE};
    BiConsumer < int [], Dimensions > accumulator = (array, dim) -> {
        array [0] = dim.startX > array [0] ? dim.startX : array [0];
        array [1] = dim.startY > array [1] ? dim.startY : array [1];
        array [2] = dim.endX < array [2] ? dim.endX : array [2];
        array [3] = dim.endY < array [3] ? dim.endY : array [3];
    };
    BiConsumer < int [], int [] > combiner = (array1, array2) -> {
        array1 [0] = array1 [0] > array2 [0] ? array1 [0] : array2 [0];
        array1 [1] = array1 [1] > array2 [1] ? array1 [1] : array2 [1];
        array1 [2] = array1 [2] < array2 [2] ? array1 [2] : array2 [2];
        array1 [3] = array1 [3] < array2 [3] ? array1 [3] : array2 [3];
    };
    int [] searchDimensions = Arrays.stream (dimensions).collect (supplier, accumulator, combiner);
    return applyInBetween (inputArray, function, searchDimensions [0], searchDimensions [1], searchDimensions [2], searchDimensions [3]);
}
----------------------------------------

< S, T > T performOnIntersections (Function < S, T > function, S [] [] inputArray, Dimensions...dimensions) {
    BiConsumer < Dimensions, Dimensions > join = (d1, d2) -> {
        d1.startX = Math.max (d1.startX, d2.startX);
        d1.startY = Math.max (d1.startY, d2.startY);
        d1.endX = Math.min (d1.endX, d2.endX);
        d1.endY = Math.min (d1.endY, d2.endY);
    };
    Dimensions d = Arrays.stream (dimensions).collect (() -> new Dimensions (Integer.MIN_VALUE, Integer.MIN_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE), join, join);
    int maxStartX = d.startX;
    int maxStartY = d.startY;
    int minEndX = d.endX;
    int minEndY = d.endY;
    return applyInBetween (inputArray, function, maxStartX, maxStartY, minEndX, minEndY);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42023533_42024355_12_39
42023533_42025018_13_66
Title: How to give file as input and work in multiple threads? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    String [] hostList = {"http://example.com", "http://example2.com", "http://example3.com"};
    int nbThreadToUse = Runtime.getRuntime ().availableProcessors () - 1;
    ExecutorService executorService = Executors.newFixedThreadPool (nbThreadToUse);
    Set < Callable < String > > callables = new HashSet < Callable < String > > ();
    for (String host : hostList) {
        callables.add (new UrlCall (host));
    }
    List < Future < String > > futures = executorService.invokeAll (callables);
    for (Future < String > future : futures) {
        try {
            String result = future.get ();
            String [] keyValueToken = result.split ("\\|\\|");
            String url = keyValueToken [0];
            String response = keyValueToken [1];
            System.out.println ("url=" + url + ", response=" + response);
        } catch (ExecutionException e) {
            e.printStackTrace ();
        }
    }
    executorService.shutdown ();
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int numberOfThreads = 10;
    String sourceFileName = "c://lines.txt";
    String targetFileName = "c://output.txt";
    ArrayList < String > urls = new ArrayList < > ();
    try (Stream < String > stream = Files.lines (Paths.get (sourceFileName))) {
        stream.forEach ((string) -> {
            urls.add (string);
        });
    } catch (IOException e) {
        e.printStackTrace ();
    }
    ThreadPoolExecutor executor = (ThreadPoolExecutor) Executors.newFixedThreadPool (numberOfThreads);
    List < Future < String > > resultList = new ArrayList < > ();
    for (String url : urls) {
        StatusThread statusGetter = new StatusThread (url);
        Future < String > result = executor.submit (statusGetter);
        resultList.add (result);
    }
    FileWriter writer;
    writer = new FileWriter (targetFileName);
    for (Future < String > future : resultList) {
        try {
            String oneResult = future.get ().split ("\\|") [0] + " -> " + future.get ().split ("\\|") [1];
            System.out.println (oneResult);
            writer.write (oneResult + System.lineSeparator ());
        } catch (InterruptedException | ExecutionException e) {
            e.printStackTrace ();
        }
    }
    writer.close ();
    executor.shutdown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42024442_42025869_47_91
42024442_42025904_18_42
Title: JavaFX: Adding CTRL-click functionality to checkboxes of nested CheckBoxTreeItem[s] 
----------------------------------------

public void updateItem (T item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        TreeItem < T > treeItem = getTreeItem ();
        setText ((treeItem == null ? "" : treeItem.getValue ().toString ()));
        checkBox.setGraphic (treeItem == null ? null : treeItem.getGraphic ());
        setGraphic (checkBox);
        if (booleanProperty != null) {
            checkBox.selectedProperty ().unbindBidirectional ((BooleanProperty) booleanProperty);
        }
        if (indeterminateProperty != null) {
            checkBox.indeterminateProperty ().unbindBidirectional (indeterminateProperty);
        }
        if (treeItem instanceof CheckBoxTreeItem) {
            CheckBoxTreeItem < T > cbti = (CheckBoxTreeItem < T >) treeItem;
            booleanProperty = cbti.selectedProperty ();
            checkBox.selectedProperty ().bindBidirectional ((BooleanProperty) booleanProperty);
            indeterminateProperty = cbti.indeterminateProperty ();
            checkBox.indeterminateProperty ().bindBidirectional (indeterminateProperty);
        } else {
            Callback < TreeItem < T >, ObservableValue < Boolean > > callback = getSelectedStateCallback ();
            if (callback == null) {
                throw new NullPointerException ("The CheckBoxTreeCell selectedStateCallbackProperty can not be null");
            }
            booleanProperty = callback.call (treeItem);
            if (booleanProperty != null) {
                checkBox.selectedProperty ().bindBidirectional ((BooleanProperty) booleanProperty);
            }
        }
    }
}
----------------------------------------

protected void updateItem (String item, boolean empty) {
    super.updateItem (item, empty);
    if (empty) {
        setText (null);
        setGraphic (null);
    } else {
        setText (item);
        setGraphic (checkBox);
        if (currentSelectedBinding != null) {
            checkBox.selectedProperty ().unbindBidirectional (currentSelectedBinding);
        }
        if (currentIndeterminateBinding != null) {
            checkBox.indeterminateProperty ().unbindBidirectional (currentIndeterminateBinding);
        }
        if (getTreeItem () instanceof CheckBoxTreeItem) {
            CheckBoxTreeItem cbti = (CheckBoxTreeItem < ? >) getTreeItem ();
            currentSelectedBinding = cbti.selectedProperty ();
            checkBox.selectedProperty ().bindBidirectional (currentSelectedBinding);
            currentIndeterminateBinding = cbti.indeterminateProperty ();
            checkBox.indeterminateProperty ().bindBidirectional (currentIndeterminateBinding);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42036124_42041831_9_27
42036124_47183799_13_34
Title: Android DataBinding 
----------------------------------------

public void onClick (View v) {
    String text = binding.editText.getText ().toString ();
    Call < APIResultModel > call = apiService.getSearchResult (text, apiKey);
    call.enqueue (new Callback < APIResultModel > () {
        @Override
        public void onResponse (Call < APIResultModel > call, Response < APIResultModel > response) {
            if (response.body ().results != null) {
                List < ProductModel > productModelList = response.body ().results;
                if (productModelList != null && productModelList.size () > 0) {
                    binding.setProduct (productModelList.get (0));
                }
            }
        }@Override
        public void onFailure (Call < APIResultModel > call, Throwable t) {
        }}

    );
}
----------------------------------------

public void onClick (View v) {
    Log.d ("Result", "Inside onclick");
    String text = editText.getText ().toString ();
    Call < APIResultModel > call = apiService.getSearchResult (text, apiKey);
    Log.d ("Result", "Before enqueue");
    call.enqueue (new Callback < APIResultModel > () {
        @Override
        public void onResponse (Call < APIResultModel > call, Response < APIResultModel > response) {
            if (response.body ().results != null) {
                List < ProductModel > productModelList = response.body ().results;
                if (productModelList != null && productModelList.size () > 0) {
                    final ProductModel productModel = productModelList.get (0);
                    binding.setProduct (productModel);
                }
            }
        }@Override
        public void onFailure (Call < APIResultModel > call, Throwable t) {
        }}

    );
    Log.d ("Result", "After enqueue")
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42036512_42036537_7_20
42036512_42036694_4_14
Title: How to write a JAVA method to find the Maximum of users input? 
----------------------------------------

public static void main (String [] arg) {
    Scanner scan = new Scanner (System.in);
    double score = 0;
    double max = 0;
    do {
        System.out.print ("Enter the scores (-1 to end input) > ");
        score = scan.nextDouble ();
        max = Max (score, max);
    } while (score >= 0);
    System.out.println ("Highest score: " + Max (score));
}
----------------------------------------

public static void main (String [] args) {
    Scanner t = new Scanner (System.in);
    List < Double > scores = new ArrayList < > ();
    double value = 0;
    while (true) {
        value = t.nextDouble ();
        if (value <= 0) break;
        else scores.add (value);

    }
    System.out.println (Max (scores));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42036512_42036545_15_27
42036512_42036694_4_14
Title: How to write a JAVA method to find the Maximum of users input? 
----------------------------------------

public static void main (String [] arg) {
    Scanner scan = new Scanner (System.in);
    List < Double > scores = new ArrayList < > ();
    Double score;
    do {
        System.out.print ("Enter the scores (-1 to end input) > ");
        score = scan.nextDouble ();
        scores.add (score);
    } while (score >= 0);
    System.out.println ("Highest score: " + max (scores));
}
----------------------------------------

public static void main (String [] args) {
    Scanner t = new Scanner (System.in);
    List < Double > scores = new ArrayList < > ();
    double value = 0;
    while (true) {
        value = t.nextDouble ();
        if (value <= 0) break;
        else scores.add (value);

    }
    System.out.println (Max (scores));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42038195_42038308_1_21
42038195_42038395_10_27
Title: Iterate through a 2D array as if it were a 1D array using Iterator 
----------------------------------------

public int next () throws NoSuchElementException {
    int result = - 1;
    if (current != null && current.hasNext ()) {
        result = current.next ();
    } else if (values != null && values.hasNext ()) {
        current = values.next ();
        if (current.hasNext ()) {
            result = current.next ();
        }
    } else {
        throw new NoSuchElementException ("Reached end");
    }

    return result;
}
----------------------------------------

public int next () throws NoSuchElementException {
    if (current != null && current.hasNext ()) {
        Integer val = current.next ();
        return val;
    }
    if (values != null && values.hasNext ()) {
        current = values.next ();
        if (current != null && current.hasNext ()) {
            Integer val = current.next ();
            return val;
        }
    }
    throw new NoSuchElementException ("Reached end");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42047791_42047857_7_17
42047791_42048102_4_52
Title: Trying to understand for() and while() loops 
----------------------------------------

public static void main (String [] args) {
    Scanner myInput = new Scanner (System.in);
    int userChoice = - 1, exitChoice = 3;
    while (userChoice != exitChoice) {
        printMyInstructions ();
        userChoice = myInput.nextInt ();
        analyzeChoice (userChoice);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    for (;;) {
        System.out.println ("\nMain: Enter 1 to execute loop one, 2 to execute loop two or 3 to exit");
        switch (input.nextInt ()) {
            case 1 :
                for (boolean loopExit = false;
                ! loopExit;) {
                    System.out.println ("Loop 1: Please enter 1 to confirm the loop or 0 to exit");
                    switch (input.nextInt ()) {
                        case 0 :
                            loopExit = true;
                            break;
                        case 1 :
                            System.out.println ("Loop 1: Confirmed!");
                            break;
                        default :
                            System.out.println ("Loop 1: ?Unrecognized input");
                            break;
                    }
                }
                System.out.println ("Exited loop 1");
                break;
            case 2 :
                for (boolean loopExit = false;
                ! loopExit;) {
                    System.out.println ("Loop 2: Please enter 1 to confirm the loop or 0 to exit");
                    switch (input.nextInt ()) {
                        case 0 :
                            loopExit = true;
                            break;
                        case 1 :
                            System.out.println ("Loop 2: Confirmed!");
                            break;
                        default :
                            System.out.println ("Loop 2: ?Unrecognized input");
                            break;
                    }
                }
                System.out.println ("Exited loop 2");
                break;
            case 3 :
                input.close ();
                System.exit (- 1);
                break;
            default :
                System.out.println ("?Unrecognized input");
                break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42056618_42204653_24_38
42056618_42267457_96_113
Title: How to implement retry policies while sending data to another application? 
----------------------------------------

public void run () {
    for (Map.Entry < Long, RetryMessage > entry : retryQueue.asMap ().entrySet ()) {
        RetryMessage retryMessage = entry.getValue ();
        if (retryMessage.getRetryPolicy ().allowRetry ()) {
            retryMessage.getRetryPolicy ().decreaseRetryCount ();
            entry.setValue (retryMessage);
            sendTo (entry.getKey (), retryMessage.getMessage (), retryMessage);
        } else {
            retryQueue.asMap ().remove (entry.getKey ());
        }
    }
}
----------------------------------------

public void run () {
    while (! Thread.currentThread ().isInterrupted ()) {
        try {
            Thread.sleep (1000);
        } catch (InterruptedException ex) {
            Thread.currentThread ().interrupt ();
        }
        long addr = getVerifiedAddr ();
        if (addr == 0) {
            continue;
        }
        System.err.println ("Verified message (to be cancelled) " + addr);
        Retrier retrier = pending.remove (addr);
        if (retrier != null) {
            retrier.cancel ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42057798_42057872_1_13
42057798_42057881_18_28
Title: How to test a string returned in a method Java 
----------------------------------------

public static String flip () {
    int rand = (int) (Math.random () * 2);
    String result = null;
    if (rand == 1) {
        System.out.println ("Heads");
        result = "Heads";
    }
    if (rand != 1) {
        System.out.println ("tails");
        result = "tails";
    }
    return result;
}
----------------------------------------

public static boolean flip () {
    int rand = (int) (Math.random () * 2);
    if (rand == 1) {
        System.out.println ("Heads");
        return true;
    }
    if (rand != 1) {
        System.out.println ("tails");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42072770_42072831_1_17
42072770_42072911_1_24
Title: StartActivity once user click Allow on Permission Screen 
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode,@NonNull
String [] permissions,@NonNull
int [] grantResults) {
    if (requestCode == PERMISSION_ALL) {
        if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
            new Thread (new Runnable () {
                @Override
                public void run () {
                    Intent intent = new Intent (StartActivity.this, Details.class);
                    startActivity (intent);
                }}

            ).start ();
        } else {
            Toast.makeText (MainActivity.this, "Access Denied ! Cannot proceed further ", Toast.LENGTH_SHORT).show ();
        }
    }
}
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    switch (requestCode) {
        case MY_PERMISSIONS_REQUEST_READ_CONTACTS :
            {
                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                } else {
                }
                return;
            }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42078850_42078927_1_14
42078850_42078939_1_12
Title: Java returns woes 
----------------------------------------

private int findIndex (String id) {
    for (int i = 0;
    i < ids.length; i ++) {
        if (ids [i].equalsIgnoreCase (id)) {
            System.out.println ("The index of this student is " + i);
            return i;
        }
    }
    return - 1;
}
----------------------------------------

private int findIndex (String id) {
    OptionalInt index = IntStream.rangeClosed (0, ids.length - 1).filter (i -> ids [i].equalsIgnoreCase (id)).findFirst ();
    if (index.isPresent ()) {
        int i = index.getAsInt ();
        System.out.println ("The index of this student is " + i);
        return i;
    }
    System.out.println (- 1);
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42087550_42087745_1_16
42087550_42087783_1_15
Title: Fibonacci sequence pruning using java 
----------------------------------------

public static int fibonacci (int n) {
    if (n == 0) {
        return 0;
    } else {
        int npp = 0;
        int np = 1;
        int r = 1;
        for (int i = 2;
        i <= n; i ++) {
            r = np + npp;
            npp = np;
            np = r;
        }
        return r;
    }
}
----------------------------------------

public static int fibonacci (int n) {
    int f [] = new int [n + 1];
    for (int i = 0;
    i <= n; i ++) {
        if (i == 0 || i == 1) {
            f [i] = i;
        } else {
            f [i] = f [i - 1] + f [i - 2];
        }
    }
    return f [n];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42102316_42102363_28_42
42102316_42102482_27_41
Title: Eclipse Java Compiler Errors 
----------------------------------------

public static void main (String [] args) {
    Card card = new Card (1, 4);
    System.out.print (card.getfaceValue ());
    if (card.getSuit () == 1) {
        System.out.println (" of Hearts");
    } else if (card.getSuit () == 2) {
        System.out.println (" of Spades");
    } else if (card.getSuit () == 3) {
        System.out.println (" of Clubs");
    } else if (card.getSuit () == 4) {
        System.out.println (" of Diamonds");
    }

}
----------------------------------------

public static void main (String [] args) {
    Card card = new Card (1, 4);
    System.out.print (card.getFaceValue ());
    if (card.getSuit () == 1) {
        System.out.println (" of Hearts");
    } else if (card.getSuit () == 2) {
        System.out.println (" of Spades");
    } else if (card.getSuit () == 3) {
        System.out.println (" of Clubs");
    } else if (card.getSuit () == 4) {
        System.out.println (" of Diamonds");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42103710_42103875_1_23
42103710_42103916_5_32
Title: Trying to make a AddBefore Method in Array in Java. Not using ArrayList 
----------------------------------------

public static int [] addBefore (int [] array, int input, int before) {
    int [] newArray = new int [array.length + 1];
    for (int x = 0;
    x < before; x ++) {
        newArray [x] = array [x];
    }
    newArray [before] = input;
    for (int x = before + 1;
    x < newArray.length; x ++) {
        newArray [x] = array [x - 1];
    }
    return newArray;
}
----------------------------------------

public void addBefore (int input, int before) {
    int [] temp = new int [vals.length * 2];
    int position = 0;
    boolean check = false;
    for (int i = 0;
    i < vals.length; i ++) {
        check = false;
        if (vals [i] == (before)) {
            check = true;
            temp [i] = input;
            position = i;
            break;
        }
        temp [i] = vals [i];
    }
    int previous = input;
    int current = 0;
    for (int i = position;
    i < vals.length; i ++) {
        current = vals [i];
        vals [i] = previous;
        previous = current;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42105030_42105880_12_40
42105030_42106208_26_50
Title: Beginner Java : Coding a method to display mode of an array returns default value 
----------------------------------------

public static int modeMethod (int [] x) {
    int [] y = new int [9];
    int [] d = new int [9];
    int logSize = 0;
    for (int i = 0;
    i < x.length; i ++) {
        int z = search (y, x [i]);
        if (z == - 1) {
            int b = x [logSize];
            y [logSize] = b;
            d [i] += 1;
            logSize ++;
        } else {
            d [i] ++;
        }
    }
    int max = 0;
    for (int i = 1;
    i < d.length; i ++) {
        if (d [i] > d [i - 1]) {
            max = d [i];
        } else {
            max = d [i - 1];
        }
    }
    return max;
}
----------------------------------------

public static int modeMethod (int [] x) {
    int [] y = new int [9];
    int [] d = new int [9];
    int logSize = 0;
    for (int i = 0;
    i < x.length; i ++) {
        int z = search (y, x [i]);
        if (z == - 1) {
            int b = x [i];
            y [logSize] = b;
            d [logSize] = 1;
            logSize ++;
        } else {
            d [z] ++;
        }
    }
    int max = 0;
    for (int i = 1;
    i < d.length; i ++) {
        if (d [i] > d [max]) {
            max = i;
        }
    }
    return y [max];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42105030_42105880_1_10
42105030_42106208_15_24
Title: Beginner Java : Coding a method to display mode of an array returns default value 
----------------------------------------

public static int search (int [] x, int y) {
    int z = 0;
    for (int i = 0;
    i < x.length; i ++) {
        z = x [i];
        if (z == y) {
            return z;
        }
    }
    return - 1;
}
----------------------------------------

public static int search (int [] x, int y) {
    int z = 0;
    for (int i = 0;
    i < x.length; i ++) {
        if (x [i] == y) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4211143_4211309_1_19
4211143_4221664_1_16
Title: How to implement a function to convert a generic typed array to a generic typed 2-dimensional array in java? 
----------------------------------------

@SuppressWarnings ("unchecked")
public static < T > T [] [] toTwoDim (T [] array) {
    int halflen = array.length / 2;
    T [] [] foo = (T [] []) new Object [2] [];
    foo [0] = (T []) new Object [halflen];
    foo [1] = (T []) new Object [halflen];
    for (int i = 0;
    i < halflen; i ++) {
        foo [0] [i] = array [i];
        foo [1] [i] = array [i + halflen];
    }
    System.out.println (Arrays.asList (foo [0]));
    System.out.println (Arrays.asList (foo [1]));
    return foo;
}
----------------------------------------

@SuppressWarnings ("unchecked")
public static < T > T [] [] toTwoDim (T [] array) {
    Class < T > ctype = (Class < T >) array.getClass ().getComponentType ();
    int halfLength = array.length / 2;
    T [] [] ret = (T [] []) Array.newInstance (ctype, 2, 1);
    T [] r1 = (T []) Array.newInstance (ctype, halfLength);
    T [] r2 = (T []) Array.newInstance (ctype, array.length - halfLength);
    ret [0] = r1;
    ret [1] = r2;
    for (int i = 0;
    i < halfLength; i ++) r1 [i] = array [i];

    for (int i = 0;
    i < array.length - halfLength; i ++) {
        r2 [i] = array [i + halfLength];
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42111913_42112141_12_41
42111913_42112457_1_25
Title: Why Volley is returning null value? 
----------------------------------------

public void getimageurl (String id) {
    String url = "http://www.mytre.com/wp-json/wp/v2/media/" + id;
    RequestQueue requestqueue = Volley.newRequestQueue (context);
    StringRequest stringrequest = new StringRequest (Request.Method.GET, url, new Response.Listener < String > () {
        @Override
        public void onResponse (String response) {
            try {
                imageurl = response;
                JSONObject jsonObject = new JSONObject (response);
                String j = jsonObject.getString ("guid");
                jsonObject = new JSONObject (j);
                imageurl = jsonObject.getString ("rendered");
                callback.onImageResponse (imageurl);
            } catch (JSONException e) {
                e.printStackTrace ();
            }
        }}

    , new Response.ErrorListener () {
        @Override
        public void onErrorResponse (VolleyError error) {
        }}

    );
    requestqueue.add (stringrequest);
}
----------------------------------------

public String getimageurl (String id) {
    String url = "http://www.mytre.com/wp-json/wp/v2/media/" + id;
    RequestFuture < String > future = RequestFuture.newFuture ();
    RequestQueue requestqueue = Volley.newRequestQueue (context);
    StringRequest stringrequest = new StringRequest (Request.Method.GET, url, future, future);
    requestqueue.add (stringrequest);
    try {
        String response = future.get (10, TimeUnit.SECONDS);
        imageurl = response;
        JSONObject jsonObject = new JSONObject (response);
        String j = jsonObject.getString ("guid");
        jsonObject = new JSONObject (j);
        imageurl = jsonObject.getString ("rendered");
        return imageurl;
    } catch (InterruptedException e) {
    } catch (ExecutionException e) {
    } catch (TimeoutException e) {
        e.printStackTrace ();
    }
    Log.i ("imageurl", "" + imageurl);
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42113653_42113902_14_23
42113653_42114244_1_10
Title: Return inside a loop: wrong in Java? 
----------------------------------------

protected Node getTrueParent () {
    if (getEdges () != null && ! getEdges ().isEmpty ()) {
        for (Edge e : getEdges ()) {
            if (e != null && e.getNode2 () == this && ! e.isPseudo ()) {
                return e.getNode1 ();
            }
        }
    }
    return null;
}
----------------------------------------

protected Node getTrueParent () {
    Node parent = null;
    for (Edge e : this.edges) {
        if (e.getNode2 () == this && (! e.isPseudo ())) {
            Node parent = e.getNode1 ();
            return parent;
        }
    }
    return parent;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42127605_1_11
42127510_42127779_1_12
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        String comma = "";
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (comma + M [i] [j]);
            comma = ",";
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        final type [] row = M [i];
        if (row.length != 0) {
            System.out.print (row [0]);
        }
        for (int j = 1;
        j < row.length; j ++) {
            System.out.print ("," + row [j]);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42127605_1_11
42127510_42128003_1_11
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        String comma = "";
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (comma + M [i] [j]);
            comma = ",";
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (M [i] [j]);
            if (i < M.length - 1 || j < M [i].length - 1) {
                System.out.print (",")
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42127605_1_11
42127510_42231268_1_13
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        String comma = "";
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (comma + M [i] [j]);
            comma = ",";
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    int [] [] M = {{1, 3}, {2, 3, 4}, {5, 6}, {5, 2}};
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            if (j == 0) System.out.print (M [i] [j]);
            else System.out.print ("," + M [i] [j]);

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42127779_1_12
42127510_42128003_1_11
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        final type [] row = M [i];
        if (row.length != 0) {
            System.out.print (row [0]);
        }
        for (int j = 1;
        j < row.length; j ++) {
            System.out.print ("," + row [j]);
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (M [i] [j]);
            if (i < M.length - 1 || j < M [i].length - 1) {
                System.out.print (",")
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42127779_1_12
42127510_42231268_1_13
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        final type [] row = M [i];
        if (row.length != 0) {
            System.out.print (row [0]);
        }
        for (int j = 1;
        j < row.length; j ++) {
            System.out.print ("," + row [j]);
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    int [] [] M = {{1, 3}, {2, 3, 4}, {5, 6}, {5, 2}};
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            if (j == 0) System.out.print (M [i] [j]);
            else System.out.print ("," + M [i] [j]);

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42127510_42128003_1_11
42127510_42231268_1_13
Title: Removing the last comma 
----------------------------------------

public void print () {
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            System.out.print (M [i] [j]);
            if (i < M.length - 1 || j < M [i].length - 1) {
                System.out.print (",")
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public void print () {
    int [] [] M = {{1, 3}, {2, 3, 4}, {5, 6}, {5, 2}};
    for (int i = 0;
    i < M.length; i ++) {
        for (int j = 0;
        j < M [i].length; j ++) {
            if (j == 0) System.out.print (M [i] [j]);
            else System.out.print ("," + M [i] [j]);

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42130303_42130467_1_11
42130303_42131146_126_170
Title: Android Studio get location from Google Maps api 
----------------------------------------

@Override
public void onMapReady (GoogleMap googleMap) {
    mMap = googleMap;
    googleMap.setOnCameraMoveListener (new GoogleMap.OnCameraMoveListener () {
        @Override
        public void onCameraMove () {
            System.out.println (mMap.getCameraPosition ().target.latitude);
            System.out.println (mMap.getCameraPosition ().target.longitude);
        }}

    );
}
----------------------------------------

public void onMapReady (GoogleMap googleMap) {
    Log.d (TAG, "OnMapReady");
    mMap = googleMap;
    mMap.setOnCameraChangeListener (new GoogleMap.OnCameraChangeListener () {
        @Override
        public void onCameraChange (CameraPosition cameraPosition) {
            Log.d ("Camera postion change" + "", cameraPosition + "");
            mCenterLatLong = cameraPosition.target;
            mMap.clear ();
            try {
                Location mLocation = new Location ("");
                mLocation.setLatitude (mCenterLatLong.latitude);
                mLocation.setLongitude (mCenterLatLong.longitude);
                startIntentService (mLocation);
                mLocationMarkerText.setText ("Lat : " + mCenterLatLong.latitude + "," + "Long : " + mCenterLatLong.longitude);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    );
    if (ActivityCompat.checkSelfPermission (this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission (this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4214859_28007223_1_18
4214859_4222702_1_18
Title: Binary Tree hasPathSum() Implementation 
----------------------------------------

public static boolean hasPathSum (Node root, int sum, int val, ArrayList < Integer > nums) {
    if (root == null) {
        return (sum == 0);
    }
    val = val + root.data;
    if (root.right == null && root.left == null) {
        nums.add (val);
        return (val == sum);
    }
    boolean left = hasPathSum (root.left, sum, val, nums);
    boolean right = hasPathSum (root.right, sum, val, nums);
    return left || right;
}
----------------------------------------

public static boolean hasPathSum (TNode root, int sum) {
    if (root == null) return false;

    int subsum = sum - root.data;
    if (root.left == null && root.right == null) return (subsum == 0);

    if (root.left == null) return hasPathSum (root.right, subsum);

    if (root.right == null) return hasPathSum (root.left, subsum);

    return (hasPathSum (root.left, subsum) || hasPathSum (root.right, subsum));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4214859_28007223_1_18
4214859_5102075_1_24
Title: Binary Tree hasPathSum() Implementation 
----------------------------------------

public static boolean hasPathSum (Node root, int sum, int val, ArrayList < Integer > nums) {
    if (root == null) {
        return (sum == 0);
    }
    val = val + root.data;
    if (root.right == null && root.left == null) {
        nums.add (val);
        return (val == sum);
    }
    boolean left = hasPathSum (root.left, sum, val, nums);
    boolean right = hasPathSum (root.right, sum, val, nums);
    return left || right;
}
----------------------------------------

boolean hasPathSum (Node node, int sum) {
    if (node == NULL) {
        return sum == 0;
    }
    int subSum = sum - node.data;
    if (node.left == null && node.right == null) {
        return subSum == 0;
    } else {
        if (node.left != null && hasPathSum (node.left, subSum)) {
            return true;
        }
        if (node.right != null && hasPathSum (node.right, subSum)) {
            return true;
        }
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
4214859_4222702_1_18
4214859_5102075_1_24
Title: Binary Tree hasPathSum() Implementation 
----------------------------------------

public static boolean hasPathSum (TNode root, int sum) {
    if (root == null) return false;

    int subsum = sum - root.data;
    if (root.left == null && root.right == null) return (subsum == 0);

    if (root.left == null) return hasPathSum (root.right, subsum);

    if (root.right == null) return hasPathSum (root.left, subsum);

    return (hasPathSum (root.left, subsum) || hasPathSum (root.right, subsum));
}
----------------------------------------

boolean hasPathSum (Node node, int sum) {
    if (node == NULL) {
        return sum == 0;
    }
    int subSum = sum - node.data;
    if (node.left == null && node.right == null) {
        return subSum == 0;
    } else {
        if (node.left != null && hasPathSum (node.left, subSum)) {
            return true;
        }
        if (node.right != null && hasPathSum (node.right, subSum)) {
            return true;
        }
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42148971_42149050_1_21
42148971_42315949_1_17
Title: How I can reverse multi words in a String by Stack keeping in order 
----------------------------------------

public static String solution (String s) {
    String [] tab = s.split (" ");
    Deque < Character > stack = new ArrayDeque < > ();
    String output = "";
    for (String word : tab) {
        for (int i = 0;
        i < word.length (); i ++) {
            char chr = word.charAt (i);
            stack.push (chr);
        }
        while (! stack.isEmpty ()) {
            char chr = stack.pop ();
            output += chr;
        }
        output += " ";
    }
    return output;
}
----------------------------------------

public static String solution (String s) {
    String [] input1array = s.split (" ");
    StringBuilder result = new StringBuilder ();
    for (int i = 0;
    i < input1array.length; i ++) {
        StringBuilder rev = new StringBuilder (input1array [i]);
        result.append (rev.reverse ());
        if (i != input1array.length - 1) {
            result.append (" ");
        }
    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42158919_42159051_5_17
42158919_42159294_1_24
Title: Copying a file from one folder to another (with error handler) using Java Eclipse 
----------------------------------------

public static void main (String [] args) {
    FileSystem system = FileSystems.getDefault ();
    Path original = system.getPath ("C:\\programs\\mystery.txt");
    Path target = system.getPath ("C:\\programs\\mystery-2.txt");
    try {
        Files.copy (original, target);
    } catch (IOException ex) {
        System.out.println ("ERROR");
    }
}
----------------------------------------

public static void main (String [] args) {
    Path source = Paths.get ("C:\\Downloads\\fileinput\\fileinput.csv");
    Path destination = Paths.get ("C:\\Downloads\\landingzone\\fileinput.csv");
    try {
        if (Files.exists (destination)) {
            System.out.println ("File exists already.");
        } else {
            Files.copy (source, destination);
            System.out.println ("File copied successfully");
        }
    } catch (IOException e) {
        System.out.println ("File move unsuccessful!");
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42174023_42174366_1_23
42174023_42174514_1_14
Title: Finding the longest absolute file path using java 
----------------------------------------

public static int lengthLongestPath (String input) {
    if (input.length () == 0) return 0;

    Map < Integer, Integer > map = new HashMap < > ();
    int maxLength = 0;
    String [] paths = input.split ("\n");
    for (String path : paths) {
        String dirOrFile = path.replaceFirst ("\\t*", "");
        int level = path.lastIndexOf ("\t") + 1;
        int prefixLength = 0;
        if (level > 0) {
            prefixLength = map.get (level - 1);
        }
        int pathLength = prefixLength + dirOrFile.length ();
        if (dirOrFile.contains (".")) {
            maxLength = Math.max (pathLength + level, maxLength);
        }
        map.put (level, pathLength);
    }
    return maxLength;
}
----------------------------------------

public static int lengthLongestPath (String input) {
    int maxLen = 0;
    List < String > currPath = new LinkedList < > ();
    String [] parts = input.split ("\n");
    for (String part : parts) {
        int numTabs = Math.max (0, part.lastIndexOf ('\t'));
        part = part.substring (numTabs + 1);
        currPath = currPath.subList (0, numTabs);
        currPath.add (part);
        int curLen = currPath.stream ().mapToInt (String :: length).sum ();
        maxLen = Math.max (maxLen, curLen);
    }
    return maxLen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42180947_42181086_1_26
42180947_42181154_1_25
Title: Convert String to Integer without using parse or other methods 
----------------------------------------

public static int parseInt (String s, int radix) {
    int result = 0;
    boolean negative = false;
    int i = 0, len = s.length ();
    int limit = - Integer.MAX_VALUE;
    int multmin;
    int digit;
    if (len > 0) {
        char firstChar = s.charAt (0);
        if (firstChar < '0') {
            if (firstChar == '-') {
                negative = true;
                limit = Integer.MIN_VALUE;
            }
            i ++;
        }
        multmin = limit / radix;
        while (i < len) {
            digit = Character.digit (s.charAt (i ++), radix);
            result *= radix;
            result -= digit;
        }
    }
    return negative ? result : - result;
}
----------------------------------------

public static String parseInt (int integer) {
    boolean ifNegative = integer < 0;
    boolean ifMin = integer == Integer.MIN_VALUE;
    StringBuilder builder = new StringBuilder ();
    integer = ifNegative ? (ifMin ? Integer.MAX_VALUE : - integer) : integer;
    List < Integer > list = new LinkedList < Integer > ();
    int remaining = integer;
    int currentDigit = 0;
    while (true) {
        currentDigit = remaining % 10;
        list.add (currentDigit);
        remaining /= 10;
        if (remaining == 0) break;

    }
    currentDigit = list.remove (0);
    builder.append (ifMin ? currentDigit + 1 : currentDigit);
    for (int c : list) builder.append (c);

    builder.reverse ().insert (0, ifNegative ? '-' : '+');
    return builder.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42192269_42192315_1_12
42192269_42192353_4_17
Title: Java sum from 1 to n with output showing work 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    int n = sc.nextInt ();
    for (int i = 1;
    i <= n; i ++) {
        if (i != n) {
            System.out.print (i + "+");
        } else {
            System.out.print (i + "=");
        }
    }
    System.out.print (n * (n + 1) / 2);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Print the sum of all integers from 1 to n program");
    System.out.println ("=================================================");
    System.out.print ("Please enter n: ");
    int n = scanner.nextInt ();
    int sum = 0;
    for (int i = 1;
    i < n; i ++) {
        System.out.print (i + "+");
        sum += i;
    }
    sum += n;
    System.out.print (n + "=" + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42193698_42193939_5_15
42193698_42194106_1_13
Title: "New to Java having trouble making a Luhn algorithm" 
----------------------------------------

private static int sumLuhnDigits (long number, boolean odd, int count) {
    if (number <= 0) return count;

    if (! odd) {
        count += number % 10;
    } else {
        count += (number % 10) * 2;
    }
    number = number / 10;
    odd = ! odd;
    return sumLuhnDigits (number, odd, count);
}
----------------------------------------

public static long sumLuhnDigits (long number, boolean odd) {
    if (number == 0) {
        return 0;
    }
    long count;
    if (! odd) {
        count = number % 10;
    } else {
        count = (number % 10) * 2;
    }
    return sumLuhnDigits (number / 10, ! odd) + count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42193992_42194799_1_60
42193992_42428594_12_67
Title: Java Guessing Game infinite loop 
----------------------------------------

public static void main (String [] args) {
    int N;
    int randomNumber;
    int guess;
    int tries, maxTries;
    boolean lose;
    boolean playing = true;
    int playAgain;
    tries = 0;
    while (playing) {
        Scanner input = new Scanner (System.in);
        System.out.println ("This is a guessing game.");
        System.out.println ("What is the max number of tries: ");
        maxTries = input.nextInt ();
        System.out.println ("Enter a value between 1 and 1000: ");
        N = input.nextInt ();
        randomNumber = (int) (N * Math.random ()) + 1;
        lose = true;
        while (lose) {
            System.out.println ("Enter your guess: ");
            guess = input.nextInt ();
            tries ++;
            if (guess == randomNumber) {
                System.out.println ("Congratulations! The number of guesses it took you was " + tries);
                lose = false;
                System.out.println ("Would you like to play again? \n (1)Yes or (2)No: ");
                playAgain = input.nextInt ();
                if (playAgain == 1) {
                    playing = true;
                } else if (playAgain == 2) {
                    playing = false;
                }

                tries = 0;
            } else if (tries == maxTries) {
                System.out.println ("You have exceeded the max number of tries. \nYou lose.");
                System.out.println ("\nWould you like to play again?\n (1)Yes or (2)No: ");
                playAgain = input.nextInt ();
                if (playAgain == 1) {
                    playing = true;
                } else if (playAgain == 2) {
                    playing = false;
                }

                lose = false;
                tries = 0;
            } else if (guess < randomNumber) {
                System.out.println ("Too low, guess again.");
            } else if (guess > randomNumber) {
                System.out.println ("Too high, guess again.");
            }

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int N;
    int guess;
    int playAgain;
    int tries;
    int maxTries;
    playAgain = 1;
    tries = 0;
    Scanner input = new Scanner (System.in);
    while (playAgain == 1) {
        boolean win = false;
        System.out.println ("This is a guessing game.");
        System.out.println ("How many guesses would you like?");
        maxTries = input.nextInt ();
        System.out.println ("Enter a value between 1 and 1000: ");
        N = input.nextInt ();
        int randomNumber = (int) (N * Math.random ()) + 1;
        while (win == false) {
            System.out.println ("Enter your guess: ");
            guess = input.nextInt ();
            tries ++;
            if (guess == randomNumber) {
                System.out.println ("Congratulations! The number of guesses it took you was \t" + tries);
                win = true;
                System.out.println ("Would you like to play again(1 or 2):");
                playAgain = input.nextInt ();
                tries = 0;
            } else if (guess < randomNumber) System.out.println ("Too low, guess again.");
            else if (guess > randomNumber) System.out.println ("Too high, guess again.");

            if (tries == maxTries) {
                System.out.println ("You have exceeded the max number of tries. \n You lose.");
                System.out.println ("Would you like to play again(1 or 2):");
                playAgain = input.nextInt ();
                tries = 0;
                win = true;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42199830_1_12
42199723_42200409_1_11
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDE";
    StringBuilder sb = new StringBuilder (string);
    if (string.length () % 2 != 0) sb.deleteCharAt (string.length () / 2);
    else {
        int middle = string.length () / 2 - 1;
        sb.deleteCharAt (middle);
        sb.deleteCharAt (middle);
    }
    string = sb.toString ();
}
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDEFGHIJKLM";
    StringBuffer sb = new StringBuffer (string);
    if (string.length () % 2 != 0) {
        sb.deleteCharAt (string.length () / 2);
    }
    string = sb.toString ();
    System.out.println ("ans==" + string);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42199830_1_12
42199723_42200514_1_12
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDE";
    StringBuilder sb = new StringBuilder (string);
    if (string.length () % 2 != 0) sb.deleteCharAt (string.length () / 2);
    else {
        int middle = string.length () / 2 - 1;
        sb.deleteCharAt (middle);
        sb.deleteCharAt (middle);
    }
    string = sb.toString ();
}
----------------------------------------

public static void main (String...args) {
    String s = "ABCDEFGHIJKL";
    StringBuilder sb = new StringBuilder (s);
    int length = s.length ();
    if (length % 2 == 0) {
        sb.deleteCharAt (length / 2);
        sb.deleteCharAt (sb.length () / 2);
    } else {
        sb.deleteCharAt (length / 2);
    }
    s = sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42199830_1_12
42199723_42200557_1_18
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDE";
    StringBuilder sb = new StringBuilder (string);
    if (string.length () % 2 != 0) sb.deleteCharAt (string.length () / 2);
    else {
        int middle = string.length () / 2 - 1;
        sb.deleteCharAt (middle);
        sb.deleteCharAt (middle);
    }
    string = sb.toString ();
}
----------------------------------------

public static void main (String args []) {
    String str = "ABCDEF";
    System.out.println ("string : " + str);
    StringBuilder sb = new StringBuilder (str);
    int length = sb.length ();
    if (length % 2 != 0) {
        sb.deleteCharAt (length / 2);
    } else {
        sb.deleteCharAt ((length / 2) - 1);
        sb.deleteCharAt ((length / 2) - 1);
    }
    str = sb.toString ();
    System.out.println ("string : " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42200409_1_11
42199723_42200514_1_12
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDEFGHIJKLM";
    StringBuffer sb = new StringBuffer (string);
    if (string.length () % 2 != 0) {
        sb.deleteCharAt (string.length () / 2);
    }
    string = sb.toString ();
    System.out.println ("ans==" + string);
}
----------------------------------------

public static void main (String...args) {
    String s = "ABCDEFGHIJKL";
    StringBuilder sb = new StringBuilder (s);
    int length = s.length ();
    if (length % 2 == 0) {
        sb.deleteCharAt (length / 2);
        sb.deleteCharAt (sb.length () / 2);
    } else {
        sb.deleteCharAt (length / 2);
    }
    s = sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42200409_1_11
42199723_42200557_1_18
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String [] args) {
    String string = "ABCDEFGHIJKLM";
    StringBuffer sb = new StringBuffer (string);
    if (string.length () % 2 != 0) {
        sb.deleteCharAt (string.length () / 2);
    }
    string = sb.toString ();
    System.out.println ("ans==" + string);
}
----------------------------------------

public static void main (String args []) {
    String str = "ABCDEF";
    System.out.println ("string : " + str);
    StringBuilder sb = new StringBuilder (str);
    int length = sb.length ();
    if (length % 2 != 0) {
        sb.deleteCharAt (length / 2);
    } else {
        sb.deleteCharAt ((length / 2) - 1);
        sb.deleteCharAt ((length / 2) - 1);
    }
    str = sb.toString ();
    System.out.println ("string : " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
42199723_42200514_1_12
42199723_42200557_1_18
Title: How to middle two characters in a string in java is even 
----------------------------------------

public static void main (String...args) {
    String s = "ABCDEFGHIJKL";
    StringBuilder sb = new StringBuilder (s);
    int length = s.length ();
    if (length % 2 == 0) {
        sb.deleteCharAt (length / 2);
        sb.deleteCharAt (sb.length () / 2);
    } else {
        sb.deleteCharAt (length / 2);
    }
    s = sb.toString ();
}
----------------------------------------

public static void main (String args []) {
    String str = "ABCDEF";
    System.out.println ("string : " + str);
    StringBuilder sb = new StringBuilder (str);
    int length = sb.length ();
    if (length % 2 != 0) {
        sb.deleteCharAt (length / 2);
    } else {
        sb.deleteCharAt ((length / 2) - 1);
        sb.deleteCharAt ((length / 2) - 1);
    }
    str = sb.toString ();
    System.out.println ("string : " + str);
}
----------------------------------------
