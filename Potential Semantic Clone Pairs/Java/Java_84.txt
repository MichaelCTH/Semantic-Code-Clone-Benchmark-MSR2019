$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35147544_35147764_1_21
35147544_35148055_1_30
Title: How to read a txt file into a 2d Array Java 
----------------------------------------

public P4_Icel_Murad_Life (String fileName) {
    Scanner in;
    try {
        Scanner s = new Scanner (new File ("C:/Users/muro0/Desktop/life100.txt"));
        int matrix [] [] = new int [size] [size];
        for (int i = 0;
        i < matrix.length && s.hasNextLine (); i ++) {
            for (int col = 0;
            col < matrix.length && s.hasNextInt (); col ++) {
                matrix [i] [col] = s.nextInt ();
            }
            s.nextLine ();
        }
        s.close ();
    } catch (IOException i) {
        System.out.println ("Problems..");
    }
}
----------------------------------------

public int [] [] P4_Icel_Murad_Life (String fileName) {
    try {
        BufferedReader reader = new BufferedReader (new FileReader (new File (fileName)));
        int array [] [] = new int [n] [m];
        String line = reader.readLine ();
        int i = 0, j = 0;
        while (line != null) {
            String strArray [] = line.split (" ");
            if (! line.trim ().isEmpty ()) {
                for (String s : strArray) {
                    if (! s.trim ().isEmpty ()) {
                        array [i] [j ++] = Integer.parseInt (s);
                    }
                }
                line = reader.readLine ();
                i ++;
                j = 0;
            }
        }
        reader.close ();
        return array;
    } catch (IOException ex) {
        System.out.println ("Problems..");
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35147544_35147764_1_21
35147544_35148448_1_19
Title: How to read a txt file into a 2d Array Java 
----------------------------------------

public P4_Icel_Murad_Life (String fileName) {
    Scanner in;
    try {
        Scanner s = new Scanner (new File ("C:/Users/muro0/Desktop/life100.txt"));
        int matrix [] [] = new int [size] [size];
        for (int i = 0;
        i < matrix.length && s.hasNextLine (); i ++) {
            for (int col = 0;
            col < matrix.length && s.hasNextInt (); col ++) {
                matrix [i] [col] = s.nextInt ();
            }
            s.nextLine ();
        }
        s.close ();
    } catch (IOException i) {
        System.out.println ("Problems..");
    }
}
----------------------------------------

public P4_Icel_Murad_Life (String fileName) {
    Scanner in;
    try {
        Scanner s = new Scanner (new File ("C:/Users/muro0/Desktop/life100.txt"));
        int rows = s.nextInt ();
        int columns = s.nextInt ();
        int matrix [] [] = new int [rows] [columns];
        while (s.hasNextInt ()) {
            int row = s.nextInt ();
            int col = s.nextInt ();
            matrix [row] [col] = 1;
        }
        s.close ();
    } catch (IOException i) {
        System.out.println ("Problems..");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35147544_35148055_1_30
35147544_35148448_1_19
Title: How to read a txt file into a 2d Array Java 
----------------------------------------

public int [] [] P4_Icel_Murad_Life (String fileName) {
    try {
        BufferedReader reader = new BufferedReader (new FileReader (new File (fileName)));
        int array [] [] = new int [n] [m];
        String line = reader.readLine ();
        int i = 0, j = 0;
        while (line != null) {
            String strArray [] = line.split (" ");
            if (! line.trim ().isEmpty ()) {
                for (String s : strArray) {
                    if (! s.trim ().isEmpty ()) {
                        array [i] [j ++] = Integer.parseInt (s);
                    }
                }
                line = reader.readLine ();
                i ++;
                j = 0;
            }
        }
        reader.close ();
        return array;
    } catch (IOException ex) {
        System.out.println ("Problems..");
    }
    return null;
}
----------------------------------------

public P4_Icel_Murad_Life (String fileName) {
    Scanner in;
    try {
        Scanner s = new Scanner (new File ("C:/Users/muro0/Desktop/life100.txt"));
        int rows = s.nextInt ();
        int columns = s.nextInt ();
        int matrix [] [] = new int [rows] [columns];
        while (s.hasNextInt ()) {
            int row = s.nextInt ();
            int col = s.nextInt ();
            matrix [row] [col] = 1;
        }
        s.close ();
    } catch (IOException i) {
        System.out.println ("Problems..");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_35151695_1_15
35151126_35153756_6_26
Title: Find the first non repeating character in a string 
----------------------------------------

public static Character getFirstNotRepeatedChar (String input) {
    byte [] flags = new byte [256];
    for (int i = 0;
    i < input.length (); i ++) {
        flags [(int) input.charAt (i)] ++;
    }
    for (int i = 0;
    i < input.length (); i ++) {
        if (flags [(int) input.charAt (i)] == 1) return input.charAt (i);

    }
    return null;
}
----------------------------------------

public static char getFirstNotRepeatedChar (String input) {
    boolean [] charsExist = new boolean [26];
    boolean [] charsNonUnique = new boolean [26];
    for (int i = 0;
    i < input.length (); i ++) {
        int index = 'z' - input.charAt (i);
        if (! charsExist [index]) {
            charsExist [index] = true;
        } else {
            charsNonUnique [index] = true;
        }
    }
    for (int i = 0;
    i < input.length (); i ++) {
        if (! charsNonUnique ['z' - input.charAt (i)]) return input.charAt (i);

    }
    return '?';
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_35152679_5_29
35151126_40062199_5_39
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String [] args) {
    String yourString = "Hi this is javateasers";
    Map < Character, Integer > characterMap = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        if (null != characterMap.get (character)) {
            characterMap.put (character, characterMap.get (character) + 1);
        } else characterMap.put (character, 1);

    }
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        int count = characterMap.get (character);
        if (count == 1) {
            System.out.println ("character is:" + character);
            break;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    String str;
    char non_repeat = 0;
    int len, i, j, count = 0;
    Scanner s = new Scanner (System.in);
    str = s.nextLine ();
    len = str.length ();
    for (i = 0; i < len; i ++) {
        non_repeat = str.charAt (i);
        count = 1;
        for (j = 0; j < len; j ++) {
            if (i != j) {
                if (str.charAt (i) == str.charAt (j)) {
                    count = 0;
                    break;
                }
            }
        }
        if (count == 1) break;

    }
    if (count == 1) System.out.print ("The non repeated character is  : " + non_repeat);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_35152679_5_29
35151126_45426142_5_37
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String [] args) {
    String yourString = "Hi this is javateasers";
    Map < Character, Integer > characterMap = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        if (null != characterMap.get (character)) {
            characterMap.put (character, characterMap.get (character) + 1);
        } else characterMap.put (character, 1);

    }
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        int count = characterMap.get (character);
        if (count == 1) {
            System.out.println ("character is:" + character);
            break;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    String st = "234123nljnsdfsdf41l";
    String strOrig = st;
    int i = 0;
    int j = 0;
    String st1 = "";
    Character ch = ' ';
    boolean fnd = false;
    for (i = 0; i < strOrig.length (); i ++) {
        ch = strOrig.charAt (i);
        st1 = ch.toString ();
        if (i == 0) st = strOrig.substring (1, strOrig.length ());
        else if (i == strOrig.length () - 1) st = strOrig.substring (0, strOrig.length () - 1);
        else st = strOrig.substring (0, i) + strOrig.substring (i + 1, strOrig.length ());

        if (st.indexOf (st1) == - 1) {
            fnd = true;
            j = i;
            break;
        }
    }
    if (! fnd) System.out.println ("The first no non repeated character");
    else System.out.println ("The first non repeated character is " + strOrig.charAt (j));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_35152679_5_29
35151126_47408563_5_22
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String [] args) {
    String yourString = "Hi this is javateasers";
    Map < Character, Integer > characterMap = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        if (null != characterMap.get (character)) {
            characterMap.put (character, characterMap.get (character) + 1);
        } else characterMap.put (character, 1);

    }
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        int count = characterMap.get (character);
        if (count == 1) {
            System.out.println ("character is:" + character);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    char [] charArr = string.toCharArray ();
    for (int i = 0;
    charArr.length > i; i ++) {
        int count = 0;
        for (int j = 0;
        charArr.length > j; j ++) {
            if (charArr [i] == charArr [j]) {
                count ++;
            }
        }
        if (count == 1) {
            System.out.println ("First Non Repeating Character is: " + charArr [i]);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_35152679_5_29
35151126_52320178_3_12
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String [] args) {
    String yourString = "Hi this is javateasers";
    Map < Character, Integer > characterMap = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        if (null != characterMap.get (character)) {
            characterMap.put (character, characterMap.get (character) + 1);
        } else characterMap.put (character, 1);

    }
    for (int i = 0;
    i < yourString.length (); i ++) {
        Character character = yourString.charAt (i);
        int count = characterMap.get (character);
        if (count == 1) {
            System.out.println ("character is:" + character);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "java";
    for (Character ch : s.toCharArray ()) {
        if (s.indexOf (ch) == s.lastIndexOf (ch)) {
            System.out.println ("First non repeat character = " + ch);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_40062199_5_39
35151126_45426142_5_37
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String args []) {
    String str;
    char non_repeat = 0;
    int len, i, j, count = 0;
    Scanner s = new Scanner (System.in);
    str = s.nextLine ();
    len = str.length ();
    for (i = 0; i < len; i ++) {
        non_repeat = str.charAt (i);
        count = 1;
        for (j = 0; j < len; j ++) {
            if (i != j) {
                if (str.charAt (i) == str.charAt (j)) {
                    count = 0;
                    break;
                }
            }
        }
        if (count == 1) break;

    }
    if (count == 1) System.out.print ("The non repeated character is  : " + non_repeat);

}
----------------------------------------

public static void main (String args []) {
    String st = "234123nljnsdfsdf41l";
    String strOrig = st;
    int i = 0;
    int j = 0;
    String st1 = "";
    Character ch = ' ';
    boolean fnd = false;
    for (i = 0; i < strOrig.length (); i ++) {
        ch = strOrig.charAt (i);
        st1 = ch.toString ();
        if (i == 0) st = strOrig.substring (1, strOrig.length ());
        else if (i == strOrig.length () - 1) st = strOrig.substring (0, strOrig.length () - 1);
        else st = strOrig.substring (0, i) + strOrig.substring (i + 1, strOrig.length ());

        if (st.indexOf (st1) == - 1) {
            fnd = true;
            j = i;
            break;
        }
    }
    if (! fnd) System.out.println ("The first no non repeated character");
    else System.out.println ("The first non repeated character is " + strOrig.charAt (j));

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_40062199_5_39
35151126_47408563_5_22
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String args []) {
    String str;
    char non_repeat = 0;
    int len, i, j, count = 0;
    Scanner s = new Scanner (System.in);
    str = s.nextLine ();
    len = str.length ();
    for (i = 0; i < len; i ++) {
        non_repeat = str.charAt (i);
        count = 1;
        for (j = 0; j < len; j ++) {
            if (i != j) {
                if (str.charAt (i) == str.charAt (j)) {
                    count = 0;
                    break;
                }
            }
        }
        if (count == 1) break;

    }
    if (count == 1) System.out.print ("The non repeated character is  : " + non_repeat);

}
----------------------------------------

public static void main (String [] args) {
    char [] charArr = string.toCharArray ();
    for (int i = 0;
    charArr.length > i; i ++) {
        int count = 0;
        for (int j = 0;
        charArr.length > j; j ++) {
            if (charArr [i] == charArr [j]) {
                count ++;
            }
        }
        if (count == 1) {
            System.out.println ("First Non Repeating Character is: " + charArr [i]);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_40062199_5_39
35151126_52320178_3_12
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String args []) {
    String str;
    char non_repeat = 0;
    int len, i, j, count = 0;
    Scanner s = new Scanner (System.in);
    str = s.nextLine ();
    len = str.length ();
    for (i = 0; i < len; i ++) {
        non_repeat = str.charAt (i);
        count = 1;
        for (j = 0; j < len; j ++) {
            if (i != j) {
                if (str.charAt (i) == str.charAt (j)) {
                    count = 0;
                    break;
                }
            }
        }
        if (count == 1) break;

    }
    if (count == 1) System.out.print ("The non repeated character is  : " + non_repeat);

}
----------------------------------------

public static void main (String [] args) {
    String s = "java";
    for (Character ch : s.toCharArray ()) {
        if (s.indexOf (ch) == s.lastIndexOf (ch)) {
            System.out.println ("First non repeat character = " + ch);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_45426142_5_37
35151126_47408563_5_22
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String args []) {
    String st = "234123nljnsdfsdf41l";
    String strOrig = st;
    int i = 0;
    int j = 0;
    String st1 = "";
    Character ch = ' ';
    boolean fnd = false;
    for (i = 0; i < strOrig.length (); i ++) {
        ch = strOrig.charAt (i);
        st1 = ch.toString ();
        if (i == 0) st = strOrig.substring (1, strOrig.length ());
        else if (i == strOrig.length () - 1) st = strOrig.substring (0, strOrig.length () - 1);
        else st = strOrig.substring (0, i) + strOrig.substring (i + 1, strOrig.length ());

        if (st.indexOf (st1) == - 1) {
            fnd = true;
            j = i;
            break;
        }
    }
    if (! fnd) System.out.println ("The first no non repeated character");
    else System.out.println ("The first non repeated character is " + strOrig.charAt (j));

}
----------------------------------------

public static void main (String [] args) {
    char [] charArr = string.toCharArray ();
    for (int i = 0;
    charArr.length > i; i ++) {
        int count = 0;
        for (int j = 0;
        charArr.length > j; j ++) {
            if (charArr [i] == charArr [j]) {
                count ++;
            }
        }
        if (count == 1) {
            System.out.println ("First Non Repeating Character is: " + charArr [i]);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_45426142_5_37
35151126_52320178_3_12
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String args []) {
    String st = "234123nljnsdfsdf41l";
    String strOrig = st;
    int i = 0;
    int j = 0;
    String st1 = "";
    Character ch = ' ';
    boolean fnd = false;
    for (i = 0; i < strOrig.length (); i ++) {
        ch = strOrig.charAt (i);
        st1 = ch.toString ();
        if (i == 0) st = strOrig.substring (1, strOrig.length ());
        else if (i == strOrig.length () - 1) st = strOrig.substring (0, strOrig.length () - 1);
        else st = strOrig.substring (0, i) + strOrig.substring (i + 1, strOrig.length ());

        if (st.indexOf (st1) == - 1) {
            fnd = true;
            j = i;
            break;
        }
    }
    if (! fnd) System.out.println ("The first no non repeated character");
    else System.out.println ("The first non repeated character is " + strOrig.charAt (j));

}
----------------------------------------

public static void main (String [] args) {
    String s = "java";
    for (Character ch : s.toCharArray ()) {
        if (s.indexOf (ch) == s.lastIndexOf (ch)) {
            System.out.println ("First non repeat character = " + ch);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35151126_47408563_5_22
35151126_52320178_3_12
Title: Find the first non repeating character in a string 
----------------------------------------

public static void main (String [] args) {
    char [] charArr = string.toCharArray ();
    for (int i = 0;
    charArr.length > i; i ++) {
        int count = 0;
        for (int j = 0;
        charArr.length > j; j ++) {
            if (charArr [i] == charArr [j]) {
                count ++;
            }
        }
        if (count == 1) {
            System.out.println ("First Non Repeating Character is: " + charArr [i]);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String s = "java";
    for (Character ch : s.toCharArray ()) {
        if (s.indexOf (ch) == s.lastIndexOf (ch)) {
            System.out.println ("First non repeat character = " + ch);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35169692_35169794_1_15
35169692_35171217_1_20
Title: How to rotate an array right 
----------------------------------------

public void makeRight (int x) {
    int [] anArray = {0, 1, 2, 3, 4, 5};
    int counter = 0;
    while (counter < x) {
        int temp = anArray [anArray.length - 1];
        for (int i = anArray.length - 1;
        i > 0; i --) {
            anArray [i] = anArray [i - 1];
        }
        anArray [0] = temp;
        counter ++;
    }
    for (int i = 0;
    i < anArray.length; i ++) System.out.print (anArray [i] + " ");

}
----------------------------------------

public void makeRight (int x) {
    int [] anArray = {0, 1, 2, 3, 4, 5};
    int counter = 0;
    while (counter < x) {
        int temp = anArray [anArray.length - 1];
        for (int i = anArray.length - 1;
        i > 0; i --) {
            anArray [i] = anArray [i - 1];
        }
        anArray [0] = temp;
        counter ++;
    }
    for (int i = 0;
    i < anArray.length; i ++) {
        System.out.print (anArray [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35172630_35172753_1_21
35172630_35172932_1_20
Title: How to remove an String array value from within a hashmap in java? 
----------------------------------------

public void removeWinner (String nameOfWinnerToRemove) {
    final Map < String, List < String > > winnerMapping = new HashMap < > ();
    final Iterator < Map.Entry < String, List < String > > > iterator = winnerMapping.entrySet ().iterator ();
    while (iterator.hasNext ()) {
        final List < String > winners = iterator.next ().getValue ();
        final List < String > matchingWinners = new ArrayList < > ();
        for (final String winner : winners) {
            if (winner.equalsIgnoreCase (nameOfWinnerToRemove)) {
                matchingWinners.add (winner);
            }
        }
        winners.removeAll (matchingWinners);
        if (winners.size () == 1) {
            iterator.remove ();
        }
    }
}
----------------------------------------

public void removeWinner (String nameOfWinnerToRemove) {
    Iterator < HashMap.Entry < Integer, String [] > > it = winners.entrySet ().iterator ();
    while (it.hasNext ()) {
        HashMap.Entry < Integer, String [] > entry = it.next ();
        Iterator < String > listIt = entry.getValue ().iterator ();
        while (listIt.hasNext ()) {
            String value = listIt.next ();
            if (value.equalsIgnoreCase (nameOfWinnerToRemove)) {
                listIt.remove ();
            }
        }
        if (entry.getValue ().isEmpty ()) {
            it.remove ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35178375_35185223_5_15
35178375_35204327_5_15
Title: Showing java.lang.NullPointerException at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:150) in Testng 
----------------------------------------

public Object [] [] readcredentials () throws Exception {
    CSVReader readunamepass = new CSVReader (new FileReader ("hello.csv"));
    List < String [] > list = readunamepass.readAll ();
    String [] [] array = new String [list.size ()] [];
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
    return array;
}
----------------------------------------

public Object [] [] readcredentials () throws Exception {
    CSVReader readunamepass = new CSVReader (new FileReader ("D:/My Projects New/DSP/Aut/Credentials.csv"));
    List < String [] > list = readunamepass.readAll ();
    String [] [] array = new String [list.size ()] [];
    for (int i = 0;
    i < list.size (); i ++) {
        array [i] = list.get (i);
    }
    return array;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35182263_35183884_6_23
35182263_35207617_13_42
Title: Spring unittest - rollback on exception 
----------------------------------------

public void testPersitMySubmissionOnlyIfNoExceptionsArePresent () throws Exception {
    Submission submission = createSubmission ();
    submissionService.persistSubmission (submission);
    Long submissionId = submission.getId ();
    System.out.println ("");
    System.out.println ("#" + submissionId + " submission created.");
    System.out.println ("");
    throw new Exception ("I'm a problem!!!!!!!!!!!!!!");
    TestTransaction.flagForCommit ();
    TestTransaction.end ();
}
----------------------------------------

public void testPersitMySubmissionOnlyIfNoExceptionsArePresent () throws Exception {
    DefaultTransactionDefinition definition = new DefaultTransactionDefinition ();
    TransactionStatus transaction = transactionManager.getTransaction (definition);
    try {
        Submission submission = createSubmission ();
        submissionService.persistSubmission (submission);
        Long submissionId = submission.getId ();
        System.out.println ("");
        System.out.println ("#" + submissionId + " submission created.");
        System.out.println ("");
        raiseException ()
    } catch (Exception e) {
        transactionManager.rollback (transaction);
        return;
    }
    transactionManager.commit (transaction);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35192654_35192906_1_18
35192654_35193018_5_15
Title: Getting text between ** in Java 
----------------------------------------

public static String emphasize (Scanner bold) {
    String emphasizedSentence = "";
    while (bold.hasNext ()) {
        String str = bold.nextLine ();
        if (str.contains ("*")) {
            String [] splitted = str.split ("\\*");
            for (int i = 0;
            i < splitted.length; i ++) {
                if (i % 2 == 1) {
                    str = str.replace ("*" + splitted [i] + "*", splitted [i].toUpperCase ());
                }
            }
            emphasizedSentence = str;
        }
    }
    return emphasizedSentence;
}
----------------------------------------

public static String emphasize (Scanner bold) {
    String input = bold.nextLine ();
    Pattern p = Pattern.compile ("(\\*)(.*?)(\\*)");
    Matcher m = p.matcher (input);
    while (m.find ()) {
        String matchedString = m.group ().toString ();
        input = input.replace (matchedString, matchedString.substring (1, matchedString.length () - 1).toUpperCase ());
    }
    return input;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35202329_35202548_20_31
35202329_35202548_44_55
Title: Java: How to put thread back to sleep INDEFINITELY after interrupt? 
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 1000; i ++) {
            queue.add (i);
            Thread.sleep (1);
        }
        queue.add (End);
    } catch (InterruptedException ex) {
    }
}
----------------------------------------

public void run () {
    boolean ended = false;
    while (! ended) {
        try {
            Integer i = queue.take ();
            ended = i == End;
            System.out.println (i);
        } catch (InterruptedException ex) {
            ended = true;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35208555_35208724_1_13
35208555_35209612_1_11
Title: Java PokerHand method 
----------------------------------------

public boolean isFlush () {
    boolean condition = true;
    for (int i = 0;
    (i < 4) && condition; i ++) {
        if (! (cards.get (i).getSuit () == cards.get (i + 1).getSuit ())) {
            condition = false;
        }
    }
    return condition;
}
----------------------------------------

public boolean isFlush () {
    for (int i = 0;
    i < 4; i ++) {
        if (! cards.get (i).getSuit ().equals (cards.get (i + 1).getSuit ())) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35216477_35216982_1_13
35216477_35217593_6_29
Title: How do i get characters in a file into a 2D array in Java? 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner scan = new Scanner (new File ("maze0.txt"));
    String b;
    char maze [] [] = new char [5] [7];
    for (int row = 0;
    row < 5; row ++) {
        while (scan.hasNextLine ()) {
            b = scan.nextLine ();
            maze [row] = b.toCharArray ();
            System.out.println (maze [row]);
        }
    }
    scan.close ();
}
----------------------------------------

public static void main (String...aaadf) throws FileNotFoundException {
    Scanner sc = new Scanner (new File ("D://maze.txt"));
    char maze [] [] = new char [5] [7];
    String line = null;
    for (int i = 0;
    i < 5; i ++) {
        line = sc.nextLine ();
        for (int j = 0;
        j < 7; j ++) {
            maze [i] [j] = line.charAt (j);
        }
    }
    for (int i = 0;
    i < 5; i ++) {
        for (int j = 0;
        j < 7; j ++) {
            System.out.print (maze [i] [j]);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35218917_36206529_1_28
35218917_36273995_11_38
Title: Setting predicate for FilteredList in ComboBox affects input 
----------------------------------------

@Override
public void changed (ObservableValue < ? extends String > observable, String oldValue, String newValue) {
    String value = newValue;
    String selected = box.getSelectionModel ().getSelectedItem () != null ? box.getSelectionModel ().getSelectedItem ().getText () : null;
    box.getEditor ().textProperty ().removeListener (this);
    if (selected != null && value.equals (selected)) {
        items.setPredicate (item -> {
            return true;
        });
    } else {
        items.setPredicate (item -> {
            if (item.getText ().toUpperCase ().startsWith (value.toUpperCase ())) {
                return true;
            } else {
                return false;
            }
        });
        box.getEditor ().setText (newValue);
    }
    box.getEditor ().textProperty ().addListener (this);
}
----------------------------------------

public void changed (ObservableValue < ? extends String > observable, String oldValue, String newValue) {
    String value = newValue;
    String selected = box.getSelectionModel ().getSelectedItem () != null ? box.getSelectionModel ().getSelectedItem ().getText () : null;
    if (selected != null && value.equals (selected)) {
        items.setPredicate (item -> {
            return true;
        });
    } else {
        items.setPredicate (item -> {
            if (item.getText ().toUpperCase ().startsWith (value.toUpperCase ())) {
                return true;
            } else {
                return false;
            }
        });
        box.getEditor ().setText (value);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3522427_3523121_22_33
3522427_3524442_6_19
Title: Waiting for a cancelled future to actually finish 
----------------------------------------

protected Object doInBackground () throws Exception {
    for (int i = 0;
    i < 1000000000; i ++) {
        double d = Math.sqrt (i);
    }
    System.err.println ("finished");
    publish ("finished");
    setProgress (100);
    return null;
}
----------------------------------------

protected Void doInBackground () throws Exception {
    try {
        System.out.println ("Long Task Started");
        for (int i = 0;
        i < 1000000000; i ++) {
            double d = Math.sqrt (i);
        }
        return null;
    } finally {
        actuallyFinishedLatch.countDown ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3522454_18503585_104_118
3522454_31449858_40_52
Title: Java tree data-structure? 
----------------------------------------

public static void main (String [] args) {
    BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();
    ls.insert (1);
    ls.insert (2);
    ls.insert (3);
    ls.insert (4);
    ls.insert (5);
    ls.insert (6);
    ls.insert (7);
    ls.inOrderPrint ();
}
----------------------------------------

public static void main (String [] args) throws Exception {
    NestedMap < String, Integer > test = new NestedMap < > ();
    test.put ("a").put ("b").put ("c", 12);
    Map.Entry < String, Integer > foo = test.put ("a").put ("b").put ("d", 12);
    test.put ("b", 14);
    ObjectMapper mapper = new ObjectMapper ();
    System.out.println (mapper.writeValueAsString (test));
    foo.setValue (99);
    System.out.println (mapper.writeValueAsString (test));
    System.out.println (test.get ("a").get ("b").getValue ("d"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3522454_18503585_104_118
3522454_46213426_38_56
Title: Java tree data-structure? 
----------------------------------------

public static void main (String [] args) {
    BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();
    ls.insert (1);
    ls.insert (2);
    ls.insert (3);
    ls.insert (4);
    ls.insert (5);
    ls.insert (6);
    ls.insert (7);
    ls.inOrderPrint ();
}
----------------------------------------

public static final void main (String...args) {
    Node tree = new Node ();
    tree.value = "root";
    Node [] n = {new Node (), new Node ()};
    tree.nodes = n;
    tree.nodes [0].value = "leftish";
    tree.nodes [1].value = "rightish-leafy";
    Node [] nn = {new Node ()};
    tree.nodes [0].nodes = nn;
    tree.nodes [0].nodes [0].value = "off-leftish-leaf";
    System.out.println (Arrays.toString (list (tree, args [0]).toArray ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3522454_31449858_40_52
3522454_46213426_38_56
Title: Java tree data-structure? 
----------------------------------------

public static void main (String [] args) throws Exception {
    NestedMap < String, Integer > test = new NestedMap < > ();
    test.put ("a").put ("b").put ("c", 12);
    Map.Entry < String, Integer > foo = test.put ("a").put ("b").put ("d", 12);
    test.put ("b", 14);
    ObjectMapper mapper = new ObjectMapper ();
    System.out.println (mapper.writeValueAsString (test));
    foo.setValue (99);
    System.out.println (mapper.writeValueAsString (test));
    System.out.println (test.get ("a").get ("b").getValue ("d"));
}
----------------------------------------

public static final void main (String...args) {
    Node tree = new Node ();
    tree.value = "root";
    Node [] n = {new Node (), new Node ()};
    tree.nodes = n;
    tree.nodes [0].value = "leftish";
    tree.nodes [1].value = "rightish-leafy";
    Node [] nn = {new Node ()};
    tree.nodes [0].nodes = nn;
    tree.nodes [0].nodes [0].value = "off-leftish-leaf";
    System.out.println (Arrays.toString (list (tree, args [0]).toArray ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35227369_35227675_1_18
35227369_35239076_5_24
Title: Random element generation without duplicates Java 
----------------------------------------

public static void main (String [] args) {
    String [] fruit = {"orange", "apple", "pear", "bannana", "strawberry", "mango"};
    Random numberGenerator = new Random ();
    int nextRandom = numberGenerator.nextInt (6);
    Set < Integer > validate = new HashSet < > ();
    validate.add (nextRandom);
    for (int i = 0;
    i < 5; i ++) {
        while (validate.contains (nextRandom)) {
            nextRandom = numberGenerator.nextInt (6);
        }
        validate.add (nextRandom);
        System.out.println (fruit [nextRandom]);
    }
}
----------------------------------------

public static void main (String [] args) {
    List < String > fruits = new ArrayList < > ();
    fruits.add ("orange");
    fruits.add ("apple");
    fruits.add ("pear");
    fruits.add ("bannana");
    fruits.add ("strawberry");
    fruits.add ("mango");
    Random numberGenerator = new Random ();
    int nextRandom;
    for (int i = 0;
    i < 6; i ++) {
        nextRandom = numberGenerator.nextInt (6 - i);
        System.out.println (fruits.get (nextRandom));
        fruits.remove (nextRandom);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35229867_35229981_1_14
35229867_35230254_7_32
Title: Writing Fibonacci sequence in Java starting from certain term 
----------------------------------------

public static void generateFibonacci (long limit, long startPoint) {
    long first = 0;
    long second = 1;
    long endPoint = startPoint + limit;
    long next = first + second;
    for (long i = 1;
    i < endPoint; i ++) {
        if (next > startPoint) {
            System.out.print (next + ", ");
        }
        first = second;
        second = next;
        next = first + second;
    }
}
----------------------------------------

public static List < Long > generateFibonacci (long limit, long startPoint) {
    List < Long > list = new ArrayList < > ();
    long first = 0;
    long second = 1;
    long endPoint = startPoint + limit - 1;
    if (startPoint == 0) {
        list.add (0);
        list.add (1);
    } else if (startPoint == 1) {
        list.add (1);
    }

    for (long i = 2;
    i < endPoint; i ++) {
        long next = first + second;
        if (i > startPoint) {
            list.add (next);
        }
        first = second;
        second = next;
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35235729_35236774_1_11
35235729_35243775_60_76
Title: Why does order of testing change testing results? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < Double > test1 = generateRandomData (100000);
    double t1 = System.currentTimeMillis ();
    mergeSort (test1);
    double t2 = System.currentTimeMillis ();
    ArrayList < Double > test2 = generateRandomData (100000);
    double t3 = System.currentTimeMillis ();
    bubbleSort (test2);
    double t4 = System.currentTimeMillis ();
    System.out.println ("Merge sort " + (t2 - t1) + " Bubble Sort " + (t4 - t3));
}
----------------------------------------

public static void main (String [] args) {
    double [] a = new double [1000000];
    Random r = new Random ();
    for (int i = 0;
    i < a.length; i ++) a [i] = r.nextDouble ();

    long bgn, end;
    bgn = System.currentTimeMillis ();
    MergeSort (a);
    end = System.currentTimeMillis ();
    for (int i = 1;
    i < a.length; i ++) {
        if (a [i - 1] > a [i]) {
            System.out.println ("failed");
            break;
        }
    }
    System.out.println ("milliseconds " + (end - bgn));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35239034_35239675_138_180
35239034_35239675_150_163
Title: Why won't my undo button work in android java? 
----------------------------------------

public void onClick (View v) {
    switch (v.getId ()) {
        case R.id.buttonchoose :
            final ColorPicker cp = new ColorPicker (edit.this, 0, 0, 0);
            cp.show ();
            Button okColor = (Button) cp.findViewById (R.id.okColorButton);
            okColor.setOnClickListener (new View.OnClickListener () {
                @Override
                public void onClick (View v) {
                    int selectedColorR = cp.getRed ();
                    int selectedColorG = cp.getGreen ();
                    int selectedColorB = cp.getBlue ();
                    int selectedColorRGB = cp.getColor ();
                    Button buttonchoose = (Button) findViewById (R.id.buttonchoose);
                    buttonchoose.setText ("");
                    buttonchoose.setBackgroundColor (selectedColorRGB);
                    cp.dismiss ();
                }}

            );
            break;
        case R.id.imageButton2 :
            int newImage = undos.size ();
            Log.e ("Lenght of Array", "" + newImage);
            if (newImage >= 1) {
                Bitmap newImage2 = undos.get (newImage - 2);
                image1.setImageBitmap (newImage2);
                undos.remove (newImage - 1);
            }
            break;
    }
}
----------------------------------------

public void onClick (View v) {
    int selectedColorR = cp.getRed ();
    int selectedColorG = cp.getGreen ();
    int selectedColorB = cp.getBlue ();
    int selectedColorRGB = cp.getColor ();
    Button buttonchoose = (Button) findViewById (R.id.buttonchoose);
    buttonchoose.setText ("");
    buttonchoose.setBackgroundColor (selectedColorRGB);
    cp.dismiss ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35242258_35242408_1_16
35242258_35242423_1_17
Title: Removing item from ArrayList using remove(<index>) or remove(<objectRef>) 
----------------------------------------

public static long searchForPayrollNumber (ArrayList < Personnel > staffList, long searchQuery) {
    int index = - 1;
    for (int i = 0;
    i < staffList.size (); i ++) {
        if (staffList.get (i).getPayNum () == searchQuery) {
            index = i;
            System.out.print ("\n------------- Found Staff member at position " + index + " in the list");
            break;
        }
    }
    if (index != - 1) {
        staffList.remove (index);
        System.out.print ("\n------------- Removed the staff member");
    }
    return index;
}
----------------------------------------

public static long searchForPayrollNumber (ArrayList < Personnel > staffList, long searchQuery) {
    for (int i = 0;
    i < staffList.size (); i ++) {
        if (staffList.get (i).getPayNum () == searchQuery) {
            System.out.print ("\n------------- Staff member found and removed! -------------");
            System.out.println ("\n\nFirst Name(s): " + staffList.get (i).getFirstNames ());
            System.out.println ("\nSurname: " + staffList.get (i).getSurname ());
            System.out.print ("\n-----------------------------------------------");
            return i;
        }
    }
    System.out.print ("\n------------- No staff members found. Program terminated -------------");
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35242376_35243420_78_87
35242376_35687001_26_49
Title: java caesar cipher code 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the String for Encryption: ");
    String message = new String ();
    message = sc.nextLine ();
    System.out.println (encrypt (message, 3));
    System.out.println (decrypt (encrypt (message, 3), 3));
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    String password;
    int key;
    System.out.print ("Please enter a password: ");
    password = keyboard.nextLine ();
    do {
        System.out.print ("Please enter a key between 1-25: ");
        key = keyboard.nextInt ();
        if (key < 1 || key > 25) {
            System.out.printf (" The key must be between 1 and 25, you entered %d.\n", key);
        }
    } while (key < 1 || key > 25);
    System.out.println ("Password:\t" + password);
    String encryption = cipher (password, key);
    System.out.println ("Encrypted:\t" + encryption);
    System.out.println ("Decrypted:\t" + cipher (encryption, - key));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35245857_35246184_7_23
35245857_35246264_10_30
Title: Scan Objects for Null Properites 
----------------------------------------

public static void main (String [] args) {
    try {
        Testing testing = new Testing ();
        Field [] fs = testing.getClass ().getDeclaredFields ();
        for (Field field : fs) {
            field.setAccessible (true);
            if (field.get (testing) == null && field.getName ().equals ("y")) {
                field.set (testing, 2);
            }
        }
        System.out.println (testing.x);
        System.out.println (testing.y);
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IllegalArgumentException, IllegalAccessException, InstantiationException {
    User user = new User ("Islam", null);
    Field [] fields = user.getClass ().getDeclaredFields ();
    for (Field f : fields) {
        f.setAccessible (true);
        if (f.get (user) == null) {
            Object val = null;
            if (Number.class.isAssignableFrom (f.getType ())) {
                val = 0;
            } else if (Boolean.class.isAssignableFrom (f.getType ())) {
                val = false;
            }

            f.set (user, val);
        }
    }
    System.out.println ("user name : " + user.getName ());
    System.out.println ("user age : " + user.getAge ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35246177_35246311_1_20
35246177_35246408_1_15
Title: Find the max difference pair in the array 
----------------------------------------

public static int maxDifference (int [] a) {
    long bounds = 1_000_000;
    int biggestDifference = - 1;
    if (a.length > bounds) {
        return - 1;
    }
    for (int i = 0;
    i < a.length - 1; i ++) {
        if (Math.abs (a [i]) > bounds) {
            return - 1;
        }
        for (int j = i + 1;
        j < a.length; j ++) {
            int difference = a [j] - a [i];
            if (difference > biggestDifference) {
                biggestDifference = difference;
            }
        }
    }
    return biggestDifference;
}
----------------------------------------

static int maxDifference (int [] a) {
    int minimum, diff = - 1;
    if (a.length == 0) {
        return - 1;
    }
    minimum = a [0];
    for (int i = 1;
    i < a.length; i ++) {
        diff = Math.max (diff, a [i] - minimum);
        minimum = Math.min (minimum, a [i]);
    }
    return diff;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35246177_35246311_1_20
35246177_35246909_15_68
Title: Find the max difference pair in the array 
----------------------------------------

public static int maxDifference (int [] a) {
    long bounds = 1_000_000;
    int biggestDifference = - 1;
    if (a.length > bounds) {
        return - 1;
    }
    for (int i = 0;
    i < a.length - 1; i ++) {
        if (Math.abs (a [i]) > bounds) {
            return - 1;
        }
        for (int j = i + 1;
        j < a.length; j ++) {
            int difference = a [j] - a [i];
            if (difference > biggestDifference) {
                biggestDifference = difference;
            }
        }
    }
    return biggestDifference;
}
----------------------------------------

public static int [] maxDifference (final int [] array) {
    if (array == null || array.length < 2) return null;

    int minimaPos = 0;
    int minimaValue = array [0];
    int minimaPosForMaxDifference = 0;
    int maximaPosForMaxDifference = - 1;
    long maxDifference = - 1;
    int pos = 0;
    while (pos < array.length - 1) {
        while (pos < array.length - 1 && array [pos] > array [pos + 1]) {
            pos ++;
        }
        if (array [pos] < minimaValue) {
            minimaPos = pos;
            minimaValue = array [pos];
        }
        while (pos < array.length - 1 && array [pos] <= array [pos + 1]) {
            pos ++;
        }
        if (pos > minimaPos) {
            long diff = difference (array, minimaPos, pos);
            if (diff > maxDifference) {
                minimaPosForMaxDifference = minimaPos;
                maximaPosForMaxDifference = pos;
                maxDifference = diff;
            }
        }
    }
    if (maximaPosForMaxDifference == - 1) return null;

    return new int [] {minimaPosForMaxDifference, maximaPosForMaxDifference};
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35246177_35246408_1_15
35246177_35246909_15_68
Title: Find the max difference pair in the array 
----------------------------------------

static int maxDifference (int [] a) {
    int minimum, diff = - 1;
    if (a.length == 0) {
        return - 1;
    }
    minimum = a [0];
    for (int i = 1;
    i < a.length; i ++) {
        diff = Math.max (diff, a [i] - minimum);
        minimum = Math.min (minimum, a [i]);
    }
    return diff;
}
----------------------------------------

public static int [] maxDifference (final int [] array) {
    if (array == null || array.length < 2) return null;

    int minimaPos = 0;
    int minimaValue = array [0];
    int minimaPosForMaxDifference = 0;
    int maximaPosForMaxDifference = - 1;
    long maxDifference = - 1;
    int pos = 0;
    while (pos < array.length - 1) {
        while (pos < array.length - 1 && array [pos] > array [pos + 1]) {
            pos ++;
        }
        if (array [pos] < minimaValue) {
            minimaPos = pos;
            minimaValue = array [pos];
        }
        while (pos < array.length - 1 && array [pos] <= array [pos + 1]) {
            pos ++;
        }
        if (pos > minimaPos) {
            long diff = difference (array, minimaPos, pos);
            if (diff > maxDifference) {
                minimaPosForMaxDifference = minimaPos;
                maximaPosForMaxDifference = pos;
                maxDifference = diff;
            }
        }
    }
    if (maximaPosForMaxDifference == - 1) return null;

    return new int [] {minimaPosForMaxDifference, maximaPosForMaxDifference};
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35246874_37108847_100_111
35246874_37108847_64_76
Title: Java- disable buttons on one jpanel with another. 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    enableChk1 = false;
    enableChk2 = false;
    panel_1.revalidate ();
    frame.repaint ();
    panel_1.repaint ();
    frame.repaint ();
    panel.setVisible (false);
    panel_1.setVisible (true);
    comboBox.setEnabled (false);
    comboBox_1.setEnabled (false);
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    enableChk1 = true;
    enableChk2 = true;
    panel_1.revalidate ();
    frame.repaint ();
    panel_1.repaint ();
    frame.repaint ();
    panel.setVisible (false);
    panel_1.setVisible (true);
    comboBox.setEnabled (true);
    comboBox_1.setEnabled (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35246874_37108847_100_111
35246874_37108847_83_93
Title: Java- disable buttons on one jpanel with another. 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    enableChk1 = false;
    enableChk2 = false;
    panel_1.revalidate ();
    frame.repaint ();
    panel_1.repaint ();
    frame.repaint ();
    panel.setVisible (false);
    panel_1.setVisible (true);
    comboBox.setEnabled (false);
    comboBox_1.setEnabled (false);
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    enableChk1 = true;
    panel_1.revalidate ();
    frame.repaint ();
    panel_1.repaint ();
    frame.repaint ();
    panel.setVisible (false);
    panel_1.setVisible (true);
    comboBox.setEnabled (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35249635_35249835_1_15
35249635_35250024_7_31
Title: Access external files 
----------------------------------------

public static void main (String [] args) {
    try {
        File file = new File ("C:\\Users\\User\\Desktop\\FirstFolder\\first.txt");
        FileReader fr = new FileReader (file);
        BufferedReader bfr = new BufferedReader (fr);
        System.out.println (bfr.readLine ());
        bfr.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    BufferedReader br = null;
    try {
        String sCurrentLine;
        br = new BufferedReader (new FileReader ("C:\\Users\\User\\Desktop\\FirstFolder\\first.txt"));
        while ((sCurrentLine = br.readLine ()) != null) {
            System.out.println (sCurrentLine);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            if (br != null) br.close ();

        } catch (IOException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35250036_35250323_8_42
35250036_35250892_7_28
Title: Java: How to input time as string and calculate difference 
----------------------------------------

public static void main (String args []) throws ParseException {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter first time (hh:mm aa): ");
    String time = input.nextLine ();
    System.out.println ();
    System.out.print ("Enter second time (hh:mm aa): ");
    String time2 = input.nextLine ();
    System.out.println ();
    DateFormat sdf = new SimpleDateFormat ("hh:mm aa");
    Date d1 = sdf.parse (time);
    Date d2 = sdf.parse (time2);
    System.out.println ("Time: " + sdf.format (d1));
    System.out.println ("Time: " + sdf.format (d2));
    if (d1.after (d2)) {
        long diffMs = d1.getTime () - d2.getTime ();
        long diffSec = diffMs / 1000;
        long min = diffSec / 60;
        long sec = diffSec % 60;
        System.out.println ("The difference is " + min + " minutes and " + sec + " seconds.");
    }
    if (d1.before (d2)) {
        long diffMs = d2.getTime () - d1.getTime ();
        long diffSec = diffMs / 1000;
        long min = diffSec / 60;
        long sec = diffSec % 60;
        System.out.println ("The difference is " + min + " minutes and " + sec + " seconds.");
    }
    if (d1.equals (d2)) {
        System.out.println ("The difference is 0 minutes and 0 seconds.");
    }
}
----------------------------------------

public static void main (String [] args) {
    String ip = "";
    String pattern = "^([01]?\\d|2[0-3]):([0-5]?\\d):([0-5]?\\d)$";
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter the time");
    ip = sc.nextLine ();
    Pattern r = Pattern.compile (pattern);
    Matcher m = r.matcher (ip);
    if (m.find ()) {
        System.out.println ("Time" + m.group (0));
        System.out.println ("hh " + m.group (1));
        System.out.println ("mm " + m.group (2));
        System.out.println ("ss " + m.group (3));
    } else {
        System.out.println ("NO MATCH! format mismatch");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35255659_35255781_1_15
35255659_35255866_1_19
Title: Eliminating Char from String 
----------------------------------------

public static void main (String [] args) {
    String cleaned = "abcXabcXabc";
    char remove = 'X';
    int loc;
    while ((loc = cleaned.indexOf (remove)) != 1) {
        String part1 = cleaned.substring (0, loc);
        String part2 = cleaned.substring (loc + 1);
        cleaned = part1 + part2;
    }
    System.out.println ("after: " + cleaned);
}
----------------------------------------

public static void main (String [] args) {
    String cleaned = "abcXabcXabc";
    char remove = 'X';
    int loc = cleaned.indexOf (remove);
    int currentPos = 0;
    String result = "";
    System.out.println ("before: " + cleaned);
    while (loc != - 1) {
        result = result + cleaned.substring (currentPos, loc);
        currentPos = loc + 1;
        loc = cleaned.indexOf (remove, currentPos);
    }
    System.out.println ("after: " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35257155_35257308_4_22
35257155_35257320_4_20
Title: how to assign a different name in while loops? 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("3 random numbers are being generated!");
    int max = 10;
    int min = 1;
    int number1 = (int) (Math.random () * max + min);
    int number2 = (int) (Math.random () * max + min);
    int number3 = (int) (Math.random () * max + min);
    System.out.println ("what is the sum?");
    Scanner kb = new Scanner (System.in);
    int sum = number1 + number2 + number3;
    int entered = kb.nextInt ();
    int i = 1;
    while (sum != entered) {
        i ++;
        System.out.println ("please try again");
        entered = kb.nextInt ();
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("3 random numbers are being generated!");
    int max = 10;
    int min = 1;
    int number1 = (int) (Math.random () * max + min);
    int number2 = (int) (Math.random () * max + min);
    int number3 = (int) (Math.random () * max + min);
    System.out.println ("what is the sum?");
    Scanner kb = new Scanner (System.in);
    int sum = number1 + number2 + number3;
    int entered = kb.nextInt ();
    while (sum != entered) {
        System.out.println ("please try again");
        entered = kb.nextInt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35259118_35259298_23_30
35259118_35260098_15_25
Title: How to implement MouseWheelListener for JPanel without breaking its default implementation? 
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Example ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35259118_35259298_57_67
35259118_35260052_1_13
Title: How to implement MouseWheelListener for JPanel without breaking its default implementation? 
----------------------------------------

public void mouseWheelMoved (MouseWheelEvent e) {
    if (e.isControlDown ()) {
        if (e.getWheelRotation () < 0) {
            infoLabel.setText ("Mouse Wheel Up");
        } else {
            infoLabel.setText ("Mouse Wheel Down");
        }
    } else {
        scrollPane.getListeners (MouseWheelListener.class) [0].mouseWheelMoved (e);
    }
}
----------------------------------------

@Override
public void mouseWheelMoved (MouseWheelEvent e) {
    if (e.isControlDown ()) {
        if (e.getWheelRotation () < 0) {
            System.out.println ("mouse wheel Up");
        } else {
            System.out.println ("mouse wheel Down");
        }
    } else {
        getParent ().dispatchEvent (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35264895_35265154_1_46
35264895_35265241_1_35
Title: Formatting user input in Java to date 
----------------------------------------

public static void main (String [] args) throws ParseException {
    Date date;
    int mmdd;
    DateFormat dateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    DateFormat mmDDFormat = new SimpleDateFormat ("MMdd");
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Please enter your date of birth(dd/MM/yyyy):");
    String stringDate = scanner.next ();
    date = dateFormat.parse (stringDate);
    System.out.println ("This is your date of birth: " + dateFormat.format (date));
    mmdd = Integer.parseInt (mmDDFormat.format (date));
    System.out.println ("This is the mmdd value: " + mmdd);
    System.out.println ("The zodiac sign of your date of birth is: ");
    if (mmdd >= 321 && mmdd <= 419) {
        System.out.println ("ARIES");
    } else if (mmdd >= 420 && mmdd <= 520) {
        System.out.println ("TAURUS");
    } else if (mmdd >= 521 && mmdd <= 620) {
        System.out.println ("GEMINI");
    } else if (mmdd >= 621 && mmdd <= 722) {
        System.out.println ("CANCER");
    } else if (mmdd >= 723 && mmdd <= 822) {
        System.out.println ("LEO");
    } else if (mmdd >= 823 && mmdd <= 922) {
        System.out.println ("VIRGO");
    } else if (mmdd >= 923 && mmdd <= 1022) {
        System.out.println ("LIBRA");
    } else if (mmdd >= 1023 && mmdd <= 1121) {
        System.out.println ("SCORPIO");
    } else if (mmdd >= 1122 && mmdd <= 1221) {
        System.out.println ("SAGITTARIUS");
    } else if ((mmdd >= 1222 && mmdd <= 1231) || (mmdd >= 11 && mmdd <= 119)) {
        System.out.println ("CAPRICORN");
    } else if (mmdd >= 120 && mmdd <= 218) {
        System.out.println ("AQUARIUS");
    } else if (mmdd >= 219 && mmdd <= 320) {
        System.out.println ("PISCES");
    }

}
----------------------------------------

public static void main (String [] args) throws ParseException {
    Scanner userInput = new Scanner (System.in);
    System.out.println ("Hello you, Lets get to know each other");
    String userName;
    System.out.println ("What is your name ?");
    userName = userInput.nextLine ();
    System.out.println (userName + " please enter you DoB (DD/MM/YYY)");
    String dateOB = userInput.next ();
    Date date = new SimpleDateFormat ("dd/MM/yyyy").parse (dateOB);
    System.out.println (dateOB);
    System.out.println ("So your date of birth is " + dateOB);
    Calendar c = Calendar.getInstance ();
    c.setTime (date);
    int day = c.get (Calendar.DAY_OF_YEAR);
    if (day >= 20 && day <= 49) {
        System.out.println ("Aquarius");
    } else if (day >= 50 && day <= 79) {
        System.out.println ("Pisces");
    }

    userInput.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35264895_35265154_1_46
35264895_35296730_7_55
Title: Formatting user input in Java to date 
----------------------------------------

public static void main (String [] args) throws ParseException {
    Date date;
    int mmdd;
    DateFormat dateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    DateFormat mmDDFormat = new SimpleDateFormat ("MMdd");
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Please enter your date of birth(dd/MM/yyyy):");
    String stringDate = scanner.next ();
    date = dateFormat.parse (stringDate);
    System.out.println ("This is your date of birth: " + dateFormat.format (date));
    mmdd = Integer.parseInt (mmDDFormat.format (date));
    System.out.println ("This is the mmdd value: " + mmdd);
    System.out.println ("The zodiac sign of your date of birth is: ");
    if (mmdd >= 321 && mmdd <= 419) {
        System.out.println ("ARIES");
    } else if (mmdd >= 420 && mmdd <= 520) {
        System.out.println ("TAURUS");
    } else if (mmdd >= 521 && mmdd <= 620) {
        System.out.println ("GEMINI");
    } else if (mmdd >= 621 && mmdd <= 722) {
        System.out.println ("CANCER");
    } else if (mmdd >= 723 && mmdd <= 822) {
        System.out.println ("LEO");
    } else if (mmdd >= 823 && mmdd <= 922) {
        System.out.println ("VIRGO");
    } else if (mmdd >= 923 && mmdd <= 1022) {
        System.out.println ("LIBRA");
    } else if (mmdd >= 1023 && mmdd <= 1121) {
        System.out.println ("SCORPIO");
    } else if (mmdd >= 1122 && mmdd <= 1221) {
        System.out.println ("SAGITTARIUS");
    } else if ((mmdd >= 1222 && mmdd <= 1231) || (mmdd >= 11 && mmdd <= 119)) {
        System.out.println ("CAPRICORN");
    } else if (mmdd >= 120 && mmdd <= 218) {
        System.out.println ("AQUARIUS");
    } else if (mmdd >= 219 && mmdd <= 320) {
        System.out.println ("PISCES");
    }

}
----------------------------------------

public static void main (String [] args) throws ParseException {
    Scanner userInput = new Scanner (System.in);
    System.out.println ("Hello you, Lets get to know each other");
    String userName;
    System.out.println ("What is your name ?");
    userName = userInput.nextLine ();
    Date date = new Date ();
    String dateOB = "";
    boolean correctFormat = false;
    do {
        System.out.println (" please enter you DoB (dd/MM/yyyy)");
        dateOB = userInput.next ();
        try {
            date = new SimpleDateFormat ("dd/MM/yyyy").parse (dateOB);
            System.out.println ("day and month " + dateOB);
            correctFormat = true;
        } catch (ParseException e) {
            correctFormat = false;
        }
    } while (! correctFormat);
    Calendar cal = Calendar.getInstance ();
    cal.setTime (date);
    int day = cal.get (Calendar.DAY_OF_MONTH);
    int month = cal.get (Calendar.MONTH) + 1;
    int zodiacNum = day * 100 + month;
    System.out.println (" zodiac number is " + zodiacNum);
    userInput.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35264895_35265241_1_35
35264895_35296730_7_55
Title: Formatting user input in Java to date 
----------------------------------------

public static void main (String [] args) throws ParseException {
    Scanner userInput = new Scanner (System.in);
    System.out.println ("Hello you, Lets get to know each other");
    String userName;
    System.out.println ("What is your name ?");
    userName = userInput.nextLine ();
    System.out.println (userName + " please enter you DoB (DD/MM/YYY)");
    String dateOB = userInput.next ();
    Date date = new SimpleDateFormat ("dd/MM/yyyy").parse (dateOB);
    System.out.println (dateOB);
    System.out.println ("So your date of birth is " + dateOB);
    Calendar c = Calendar.getInstance ();
    c.setTime (date);
    int day = c.get (Calendar.DAY_OF_YEAR);
    if (day >= 20 && day <= 49) {
        System.out.println ("Aquarius");
    } else if (day >= 50 && day <= 79) {
        System.out.println ("Pisces");
    }

    userInput.close ();
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    Scanner userInput = new Scanner (System.in);
    System.out.println ("Hello you, Lets get to know each other");
    String userName;
    System.out.println ("What is your name ?");
    userName = userInput.nextLine ();
    Date date = new Date ();
    String dateOB = "";
    boolean correctFormat = false;
    do {
        System.out.println (" please enter you DoB (dd/MM/yyyy)");
        dateOB = userInput.next ();
        try {
            date = new SimpleDateFormat ("dd/MM/yyyy").parse (dateOB);
            System.out.println ("day and month " + dateOB);
            correctFormat = true;
        } catch (ParseException e) {
            correctFormat = false;
        }
    } while (! correctFormat);
    Calendar cal = Calendar.getInstance ();
    cal.setTime (date);
    int day = cal.get (Calendar.DAY_OF_MONTH);
    int month = cal.get (Calendar.MONTH) + 1;
    int zodiacNum = day * 100 + month;
    System.out.println (" zodiac number is " + zodiacNum);
    userInput.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35273381_35313748_13_30
35273381_47480383_17_30
Title: Generate Lucene segments_N file 
----------------------------------------

public static void main (String [] args) throws IOException {
    Codec codec = Codec.getDefault ();
    Path myPath = Paths.get ("/tmp/index");
    Directory directory = new SimpleFSDirectory (myPath);
    byte [] segmentID = {88, 55, 58, 78, - 21, - 55, 102, 99, 123, 34, 85, - 38, - 70, - 120, 102, - 67};
    SegmentInfo info = codec.segmentInfoFormat ().read (directory, "_1rpt", segmentID, IOContext.READ);
    info.setCodec (codec);
    SegmentInfos infos = new SegmentInfos ();
    SegmentCommitInfo commit = new SegmentCommitInfo (info, 1, - 1, - 1, - 1);
    infos.add (commit);
    infos.commit (directory);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    if (args.length < 2) {
        help ();
        System.exit (1);
    }
    Codec codec = Codec.getDefault ();
    Directory directory = new SimpleFSDirectory (Paths.get (args [0]));
    SegmentInfos infos = new SegmentInfos ();
    for (int i = 1;
    i < args.length; i ++) {
        infos.add (getSegmentCommitInfo6 (codec, directory, args [i]));
    }
    infos.commit (directory);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35292954_35293388_1_16
35292954_35293582_5_13
Title: IndexOutOfBoundsException in ArrayList Java 
----------------------------------------

public static ArrayList < String > markLength4 (ArrayList < String > list) {
    int i = 0;
    boolean found = false;
    int pos = 0;
    while (i < list.size () && ! found) {
        if (list.get (i).length () == 4) {
            found = true;
            pos = i;
        }
        i ++;
    }
    list.add (pos, "****");
    return list;
}
----------------------------------------

public static ArrayList < String > markLength4 (ArrayList < String > list) {
    int sum = 0;
    for (int i = 0;
    i < list.size (); i ++) {
        if (list.get (i).length () == 4) {
            list.add (i ++, "****");
        }
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299314_43_58
35299006_35299411_24_39
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < String > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    System.out.println (clump (list));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    System.out.println (clump (list));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299314_43_58
35299006_35299809_18_34
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < String > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    System.out.println (clump (list));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    list.add ("10");
    list.add ("11");
    list.add ("12");
    list.add ("13");
    System.out.println (clump (list));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299314_6_41
35299006_35299411_4_22
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    String temp = null;
    int size = list.size ();
    if ((size % 2) != 0) {
        temp = list.remove (size - 1);
    }
    for (int i = 0;
    i < list.size (); i ++) {
        if ((list.size () + i) % 2 == 0) {
            System.out.println (list);
            System.out.println ("list size is " + list.size ());
            String newElement = list.get (i) + list.get (i + 1);
            list.remove (i);
            list.remove (i);
            list.add (i, newElement);
        } else {
            continue;
        }
    }
    if (temp != null) {
        list.add (temp);
    }
    return list;
}
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    for (int i = 0;
    i < list.size () - 1; i ++) {
        System.out.println (list);
        System.out.println ("list size is " + list.size ());
        String newElement = list.get (i) + list.get (i + 1);
        list.remove (i);
        list.remove (i);
        list.add (i, newElement);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299314_6_41
35299006_35299809_5_16
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    String temp = null;
    int size = list.size ();
    if ((size % 2) != 0) {
        temp = list.remove (size - 1);
    }
    for (int i = 0;
    i < list.size (); i ++) {
        if ((list.size () + i) % 2 == 0) {
            System.out.println (list);
            System.out.println ("list size is " + list.size ());
            String newElement = list.get (i) + list.get (i + 1);
            list.remove (i);
            list.remove (i);
            list.add (i, newElement);
        } else {
            continue;
        }
    }
    if (temp != null) {
        list.add (temp);
    }
    return list;
}
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    int halfSize = list.size () / 2;
    for (int i = 0;
    i < halfSize; i ++) {
        System.out.println (list);
        String newElement = list.get (i) + list.get (i + 1);
        list.remove (i);
        list.remove (i);
        list.add (i, newElement);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299411_24_39
35299006_35299809_18_34
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    System.out.println (clump (list));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > list = new ArrayList < > ();
    list.add ("1");
    list.add ("2");
    list.add ("3");
    list.add ("4");
    list.add ("5");
    list.add ("6");
    list.add ("7");
    list.add ("8");
    list.add ("9");
    list.add ("10");
    list.add ("11");
    list.add ("12");
    list.add ("13");
    System.out.println (clump (list));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299006_35299411_4_22
35299006_35299809_5_16
Title: IF condition and LOOP'ing throuh an ArrayList 
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    for (int i = 0;
    i < list.size () - 1; i ++) {
        System.out.println (list);
        System.out.println ("list size is " + list.size ());
        String newElement = list.get (i) + list.get (i + 1);
        list.remove (i);
        list.remove (i);
        list.add (i, newElement);
    }
    return list;
}
----------------------------------------

public static ArrayList < String > clump (ArrayList < String > list) {
    int halfSize = list.size () / 2;
    for (int i = 0;
    i < halfSize; i ++) {
        System.out.println (list);
        String newElement = list.get (i) + list.get (i + 1);
        list.remove (i);
        list.remove (i);
        list.add (i, newElement);
    }
    return list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35299786_35302057_30_46
35299786_35302057_48_59
Title: Draw circle on JPanel after mouse click 
----------------------------------------

protected Polygon createPolygon (float x, float y, float side, boolean invert) {
    float xOff = side / 2f;
    float yOff = (float) (xOff * Math.sqrt (3));
    float r1 = 1f / 3f;
    float r2 = 2f / 3f;
    if (invert) {
        yOff *= - 1;
    }
    return createPolygon (new Point2D.Float [] {new Point2D.Float (x, y - (yOff * r2)), new Point2D.Float (x - xOff, y + (yOff * r1)), new Point2D.Float (x + xOff, y + (yOff * r1))});
}
----------------------------------------

protected Polygon createPolygon (Point2D.Float [] points) {
    int nPoints = points.length + 1;
    int xCoords [] = new int [nPoints];
    int yCoords [] = new int [nPoints];
    for (int i = 0;
    i < nPoints; i ++) {
        xCoords [i] = (int) points [i % points.length].x;
        yCoords [i] = (int) points [i % points.length].y;
    }
    return new Polygon (xCoords, yCoords, nPoints);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35305938_35306023_9_19
35305938_35306031_1_13
Title: Two get methods that return same variable 
----------------------------------------

public String getCategory () {
    if (bmi >= 30) {
        return "OBESE";
    } else if (bmi >= 25) {
        return "OVERWEIGHT";
    } else if (bmi >= 18.5) {
        return "NORMAL";
    } else {
        return "UNDERWEIGHT";
    }

}
----------------------------------------

public String getCategory () {
    if (this.bmi <= 18.5) {
        category = "UNDERWEIGHT";
    } else if ((this.bmi > 18.5) && (this.bmi <= 25)) {
        category = "NORMAL WEIGHT";
    } else if ((this.bmi > 25) && (this.bmi <= 30)) {
        category = "OVERWEIGHT";
    } else if (this.bmi > 30) {
        category = "OBESE";
    }

    return category;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35307522_35307862_5_76
35307522_35308235_1_98
Title: Simple java if-else compilation error 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Child (<12)");
    System.out.println ("Adult (12-65)");
    System.out.println ("Senior (>65)");
    System.out.print ("Choose your age category: ");
    String age = input.nextLine ();
    System.out.println ("\n\nA - popcorn and pop");
    System.out.println ("B - chocolate bar and pop");
    System.out.println ("C - popcorn and candy and pop");
    System.out.print ("What is your snack bar option(enter a letter): ");
    String snackOption = input.nextLine ();
    double movieFee = 0.0, snackFee = 0.0;
    if (age.equalsIgnoreCase ("child")) {
        movieFee = 5.50;
    } else if (age.equalsIgnoreCase ("adult")) {
        movieFee = 8.50;
    } else if (age.equalsIgnoreCase ("senior")) {
        movieFee = 6.00;
    } else {
        System.out.println ("\nYou did not enter a correct age group.");
        System.out.println ("Please try again using one of: child, adult, senior");
    }

    if (snackOption.equalsIgnoreCase ("a")) {
        snackFee = 7.90;
    } else if (snackOption.equalsIgnoreCase ("b")) {
        snackFee = 6.30;
    } else if (snackOption.equalsIgnoreCase ("c")) {
        snackFee = 8.90;
    } else {
        System.out.println ("\nYou did not enter a correct option");
        System.out.println ("Please try again using either A, B or C");
    }

    double couponFee = 0.0;
    System.out.print ("\nDo you have a coupon? Type yes or no: ");
    String coupon = input.nextLine ();
    if (coupon == "yes") {
        couponFee = 2.0;
    } else if (coupon == "no") {
        couponFee = 0;
    }

    double result = movieFee + snackFee + couponFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------

public static void main (String [] args) {
    String age;
    String snackOption;
    String coupon;
    Scanner input = new Scanner (System.in);
    double couponFee = 0;
    System.out.print ("\nDo you have a coupon? Type yes or no: ");
    coupon = input.nextLine ();
    if (coupon.equals ("yes")) {
        couponFee = 2.0;
        System.out.println ("your saved" + couponFee);
    } else if (coupon.equals ("no")) {
        couponFee = 0;
        System.out.println ("your saved" + couponFee);
    }

    System.out.println ("Child (<12)");
    System.out.println ("Adult (12-65)");
    System.out.println ("Senior (>65)");
    System.out.print ("Choose your age category: ");
    age = input.nextLine ();
    System.out.println ("============" + age);
    double movieFee = 0, snackFee = 0;
    if (age.equals ("child") || age.equals ("Child")) {
        movieFee = 5.50;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else if (age.equals ("adult") || age.equals ("Adult")) {
        movieFee = 8.50;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else if (age.equals ("senior") || age.equals ("Senior")) {
        movieFee = 6.00;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else {
        System.out.println ("\nYou did not enter a correct age group.");
        System.out.println ("Please try again using one of: child, adult, senior");
    }

    System.out.println ("\n\nA - popcorn and pop");
    System.out.println ("B - chocolate bar and pop");
    System.out.println ("C - popcorn and candy and pop");
    System.out.print ("What is your snack bar option(enter a letter): ");
    snackOption = input.nextLine ();
    if (snackOption.equals ("A") || snackOption.equals ("a")) {
        snackFee = 7.90;
        System.out.println ("your snack Fee is" + snackFee);
    } else if (snackOption.equals ("B") || snackOption.equals ("b")) {
        snackFee = 6.30;
        System.out.println ("your snack Fee is" + snackFee);
    } else if (snackOption.equals ("C") || snackOption.equals ("c")) {
        snackFee = 8.90;
        System.out.println ("your snack Fee is" + snackFee);
    } else {
        System.out.println ("\nYou did not enter a correct option");
        System.out.println ("Please try again using either A, B or C");
    }

    double result = movieFee + snackFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35307522_35307862_5_76
35307522_35308608_3_86
Title: Simple java if-else compilation error 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Child (<12)");
    System.out.println ("Adult (12-65)");
    System.out.println ("Senior (>65)");
    System.out.print ("Choose your age category: ");
    String age = input.nextLine ();
    System.out.println ("\n\nA - popcorn and pop");
    System.out.println ("B - chocolate bar and pop");
    System.out.println ("C - popcorn and candy and pop");
    System.out.print ("What is your snack bar option(enter a letter): ");
    String snackOption = input.nextLine ();
    double movieFee = 0.0, snackFee = 0.0;
    if (age.equalsIgnoreCase ("child")) {
        movieFee = 5.50;
    } else if (age.equalsIgnoreCase ("adult")) {
        movieFee = 8.50;
    } else if (age.equalsIgnoreCase ("senior")) {
        movieFee = 6.00;
    } else {
        System.out.println ("\nYou did not enter a correct age group.");
        System.out.println ("Please try again using one of: child, adult, senior");
    }

    if (snackOption.equalsIgnoreCase ("a")) {
        snackFee = 7.90;
    } else if (snackOption.equalsIgnoreCase ("b")) {
        snackFee = 6.30;
    } else if (snackOption.equalsIgnoreCase ("c")) {
        snackFee = 8.90;
    } else {
        System.out.println ("\nYou did not enter a correct option");
        System.out.println ("Please try again using either A, B or C");
    }

    double couponFee = 0.0;
    System.out.print ("\nDo you have a coupon? Type yes or no: ");
    String coupon = input.nextLine ();
    if (coupon == "yes") {
        couponFee = 2.0;
    } else if (coupon == "no") {
        couponFee = 0;
    }

    double result = movieFee + snackFee + couponFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double movieFee = 0.0;
    double snackFee = 0.0;
    double couponFee = 0.0;
    do {
        System.out.println ("Child (<12)");
        System.out.println ("Adult (12-65)");
        System.out.println ("Senior (>65)");
        System.out.print ("Choose your age category: ");
        String age = input.nextLine ();
        if (age.equalsIgnoreCase ("child")) {
            movieFee = 5.50;
        } else if (age.equalsIgnoreCase ("adult")) {
            movieFee = 8.50;
        } else if (age.equalsIgnoreCase ("senior")) {
            movieFee = 6.00;
        } else {
            System.out.println ("\nYou did not enter a correct age group.");
            System.out.println ("Please try again using one of: child, adult, senior\n");
        }

    } while (movieFee == 0.0);
    do {
        System.out.println ("\nA - popcorn and pop");
        System.out.println ("B - chocolate bar and pop");
        System.out.println ("C - popcorn and candy and pop");
        System.out.print ("What is your snack bar option(enter a letter): ");
        String snackOption = input.nextLine ();
        if (snackOption.equalsIgnoreCase ("a")) {
            snackFee = 7.90;
        } else if (snackOption.equalsIgnoreCase ("b")) {
            snackFee = 6.30;
        } else if (snackOption.equalsIgnoreCase ("c")) {
            snackFee = 8.90;
        } else {
            System.out.println ("\nYou did not enter a correct option");
            System.out.println ("Please try again using either A, B or C");
        }

    } while (snackFee == 0.0);
    String coupon = "";
    do {
        System.out.print ("\nDo you have a coupon? Type yes or no: ");
        coupon = input.nextLine ();
        if (coupon.equalsIgnoreCase ("yes")) {
            couponFee = 2.0;
        } else if (coupon.equalsIgnoreCase ("no")) {
            couponFee = 0;
        }

    } while (! coupon.equalsIgnoreCase ("yes") && ! coupon.equalsIgnoreCase ("no"));
    double result = movieFee + snackFee + couponFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35307522_35308235_1_98
35307522_35308608_3_86
Title: Simple java if-else compilation error 
----------------------------------------

public static void main (String [] args) {
    String age;
    String snackOption;
    String coupon;
    Scanner input = new Scanner (System.in);
    double couponFee = 0;
    System.out.print ("\nDo you have a coupon? Type yes or no: ");
    coupon = input.nextLine ();
    if (coupon.equals ("yes")) {
        couponFee = 2.0;
        System.out.println ("your saved" + couponFee);
    } else if (coupon.equals ("no")) {
        couponFee = 0;
        System.out.println ("your saved" + couponFee);
    }

    System.out.println ("Child (<12)");
    System.out.println ("Adult (12-65)");
    System.out.println ("Senior (>65)");
    System.out.print ("Choose your age category: ");
    age = input.nextLine ();
    System.out.println ("============" + age);
    double movieFee = 0, snackFee = 0;
    if (age.equals ("child") || age.equals ("Child")) {
        movieFee = 5.50;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else if (age.equals ("adult") || age.equals ("Adult")) {
        movieFee = 8.50;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else if (age.equals ("senior") || age.equals ("Senior")) {
        movieFee = 6.00;
        movieFee = movieFee - couponFee;
        System.out.println ("your movie Fee is" + movieFee);
    } else {
        System.out.println ("\nYou did not enter a correct age group.");
        System.out.println ("Please try again using one of: child, adult, senior");
    }

    System.out.println ("\n\nA - popcorn and pop");
    System.out.println ("B - chocolate bar and pop");
    System.out.println ("C - popcorn and candy and pop");
    System.out.print ("What is your snack bar option(enter a letter): ");
    snackOption = input.nextLine ();
    if (snackOption.equals ("A") || snackOption.equals ("a")) {
        snackFee = 7.90;
        System.out.println ("your snack Fee is" + snackFee);
    } else if (snackOption.equals ("B") || snackOption.equals ("b")) {
        snackFee = 6.30;
        System.out.println ("your snack Fee is" + snackFee);
    } else if (snackOption.equals ("C") || snackOption.equals ("c")) {
        snackFee = 8.90;
        System.out.println ("your snack Fee is" + snackFee);
    } else {
        System.out.println ("\nYou did not enter a correct option");
        System.out.println ("Please try again using either A, B or C");
    }

    double result = movieFee + snackFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double movieFee = 0.0;
    double snackFee = 0.0;
    double couponFee = 0.0;
    do {
        System.out.println ("Child (<12)");
        System.out.println ("Adult (12-65)");
        System.out.println ("Senior (>65)");
        System.out.print ("Choose your age category: ");
        String age = input.nextLine ();
        if (age.equalsIgnoreCase ("child")) {
            movieFee = 5.50;
        } else if (age.equalsIgnoreCase ("adult")) {
            movieFee = 8.50;
        } else if (age.equalsIgnoreCase ("senior")) {
            movieFee = 6.00;
        } else {
            System.out.println ("\nYou did not enter a correct age group.");
            System.out.println ("Please try again using one of: child, adult, senior\n");
        }

    } while (movieFee == 0.0);
    do {
        System.out.println ("\nA - popcorn and pop");
        System.out.println ("B - chocolate bar and pop");
        System.out.println ("C - popcorn and candy and pop");
        System.out.print ("What is your snack bar option(enter a letter): ");
        String snackOption = input.nextLine ();
        if (snackOption.equalsIgnoreCase ("a")) {
            snackFee = 7.90;
        } else if (snackOption.equalsIgnoreCase ("b")) {
            snackFee = 6.30;
        } else if (snackOption.equalsIgnoreCase ("c")) {
            snackFee = 8.90;
        } else {
            System.out.println ("\nYou did not enter a correct option");
            System.out.println ("Please try again using either A, B or C");
        }

    } while (snackFee == 0.0);
    String coupon = "";
    do {
        System.out.print ("\nDo you have a coupon? Type yes or no: ");
        coupon = input.nextLine ();
        if (coupon.equalsIgnoreCase ("yes")) {
            couponFee = 2.0;
        } else if (coupon.equalsIgnoreCase ("no")) {
            couponFee = 0;
        }

    } while (! coupon.equalsIgnoreCase ("yes") && ! coupon.equalsIgnoreCase ("no"));
    double result = movieFee + snackFee + couponFee;
    System.out.println ("Final price is " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35308963_35309397_1_37
35308963_35309485_7_43
Title: "Decimal to binary prints wrong answers" 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Program that converts decimal to binary!");
    System.out.println ("Please type in a decimal number:");
    Scanner input = new Scanner (System.in);
    Stack < Character > todec = new Stack < Character > ();
    int dec = input.nextInt ();
    if (dec < 0) {
        System.out.println ("Error: Please enter a positive number!");
        System.exit (0);
    }
    int counter = 0;
    System.out.println (dec + " To binary is: ");
    while (dec > 0) {
        int stackv = dec % 2;
        dec /= 2;
        todec.push ((char) (stackv + '0'));
        counter ++;
        if (counter % 4 == 0) {
            todec.push (' ');
        }
    }
    while (counter % 4 != 0) {
        counter ++;
        todec.push ('0');
    }
    while (! (todec.isEmpty ())) {
        String val = todec.pop ().toString ();
        System.out.print (val);
    }
}
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Program that converts decimal to binary!");
    int dec;
    System.out.println ("Please type in a decimal number:");
    Scanner input = new Scanner (System.in);
    Stack < Integer > todec = new Stack < Integer > ();
    dec = input.nextInt ();
    if (dec < 0) {
        System.out.println ("Error: Please enter a positive number!");
        System.exit (0);
    }
    int size = 0;
    while (dec != 0) {
        int stackv = dec % 2;
        todec.push (stackv);
        dec /= 2;
        size ++;
    }
    if (size % 4 > 0) {
        for (int i = 0;
        i < 4 - (size % 4); i ++) {
            todec.push (0);
        }
    }
    System.out.println (dec + " To binary is: ");
    int counter = 0;
    while (! (todec.isEmpty ())) {
        String val = todec.pop ().toString ();
        System.out.print (val);
        counter = counter + 1;
        if (counter >= 4) {
            counter = 0;
            System.out.print (" ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35313685_35438918_4_19
35313685_35438918_55_69
Title: Select an Eclipse 4 RCP Part in Unit Test. 
----------------------------------------

public void showView () {
    Display display = PlatformUI.getWorkbench ().getDisplay ();
    Shell shell = display.getActiveShell ();
    Thread thread = new Thread (() -> {
        runUICode (display);
    });
    thread.start ();
    while (! shell.isDisposed () && thread.isAlive ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
}
----------------------------------------

private void showView (Display display, String viewId) {
    display.syncExec (new Runnable () {
        @Override
        public void run () {
            try {
                IWorkbenchPage activePage = PlatformUI.getWorkbench ().getActiveWorkbenchWindow ().getActivePage ();
                activePage.showView (viewId);
            } catch (WorkbenchException e) {
                throw new IllegalStateException (e);
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35314563_35315164_1_14
35314563_35319852_6_22
Title: Combining Java 8 Lambda with annotations 
----------------------------------------

public static void main (String [] args) {
    Person person = new Person ("Michal", "Lefler");
    MyTest myTest = new MyTest ();
    List < Supplier < String > > suppliers = new ArrayList < > ();
    Method [] methods = Person.class.getMethods ();
    for (Method method : methods) {
        if (! method.isAnnotationPresent (NameMethod.class)) continue;

        suppliers.add (new NameSupplier (method, person));
    }
    suppliers.forEach (myTest :: sayHello);
}
----------------------------------------

public static void main (String [] args) throws NoSuchMethodException, IllegalAccessException {
    Person person = new Person ("Michal", "Lefler");
    MyTest myTest = new MyTest ();
    List < Supplier < String > > suppliers = new ArrayList < > ();
    Method [] methods = Person.class.getMethods ();
    for (Method method : methods) {
        if (! method.isAnnotationPresent (NameMethod.class)) continue;

        MethodType desc = MethodType.methodType (String.class);
        MethodHandle methodHandle = MethodHandles.lookup ().findVirtual (Person.class, method.getName (), desc);
        suppliers.add (new NameSupplier < > (methodHandle, person));
    }
    suppliers.forEach (myTest :: sayHello);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35315913_35316369_1_13
35315913_35316555_1_32
Title: How can I get time period in years-months format? 
----------------------------------------

public static void main (String [] args) {
    String startStr = "March 2012";
    String endStr = "April 2013";
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern ("MMMM yyyy", Locale.ENGLISH);
    YearMonth start = YearMonth.parse (startStr, formatter);
    YearMonth end = YearMonth.parse (endStr, formatter);
    Period period = Period.between (start.atDay (1), end.atDay (1));
    System.out.println (period.getYears () + " years and " + period.getMonths () + " months.");
}
----------------------------------------

public static void main (String [] a) throws Exception {
    Date d1 = new Date (), d2 = new Date ();
    d1.setYear (d1.getYear () - 1);
    d1.setMonth (d1.getMonth () + 5);
    Calendar calendar1 = Calendar.getInstance ();
    calendar1.setTime (d1);
    int year1 = calendar1.get (Calendar.YEAR);
    int month1 = calendar1.get (Calendar.MONTH) + 1;
    Calendar calendar2 = Calendar.getInstance ();
    calendar2.setTime (d2);
    int year2 = calendar2.get (Calendar.YEAR);
    int month2 = calendar2.get (Calendar.MONTH) + 1;
    int yearDiff = year2 - year1;
    int monthDiff = month2 - month1;
    if (monthDiff < 0) {
        yearDiff = yearDiff - 1;
        monthDiff = monthDiff + 12;
    }
    System.out.println (" " + d1);
    System.out.println (" " + d2);
    System.out.println ("yearDiff " + yearDiff + "     " + "monthsDiff " + monthDiff);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35318560_35319915_18_28
35318560_35339376_1_12
Title: How to print a child tag attribute inside a selected parent tag in xml using Java 
----------------------------------------

public static void main (String [] args) throws IOException, ParserConfigurationException, SAXException {
    File xmlFile = new File ("C:\\test\\testDocXml.xml");
    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder dBuilder;
    dBuilder = dbFactory.newDocumentBuilder ();
    Document doc = dBuilder.parse (xmlFile);
    doc.getDocumentElement ().normalize ();
    walkNode (doc);
}
----------------------------------------

public static void main (String [] args) throws IOException, ParserConfigurationException, SAXException {
    String filePath = "/Users/myXml/SampleXml.xml";
    File xmlFile = new File (filePath);
    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance ();
    DocumentBuilder dBuilder;
    dBuilder = dbFactory.newDocumentBuilder ();
    Document doc = dBuilder.parse (xmlFile);
    doc.getDocumentElement ().normalize ();
    printElement (doc);
    System.out.println ("XML file updated successfully");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35318560_35319915_53_61
35318560_35339376_39_47
Title: How to print a child tag attribute inside a selected parent tag in xml using Java 
----------------------------------------

private static void printAttributes (NamedNodeMap attributes) {
    for (int i = 0;
    i < attributes.getLength (); i ++) {
        Node attribute = attributes.item (i);
        if (attribute.getNodeName () == "id") {
            System.out.println ("Attribute found: " + attribute.getNodeName () + " : " + attribute.getNodeValue ());
        }
    }
}
----------------------------------------

private static void printAttributes (NamedNodeMap attributes) {
    for (int i = 0;
    i < attributes.getLength (); i ++) {
        Node attribute = attributes.item (i);
        if (attribute.getNodeName () == "id") {
            System.out.println ("Attribute found: " + attribute.getNodeName () + " : " + attribute.getNodeValue ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35326224_35326370_3_20
35326224_35326552_3_16
Title: How delay and loop while flag is false? 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    boolean delay = true;
    int counter = 0;
    while (true) {
        if (delay == true) {
            Thread.sleep (1000);
            counter ++;
            System.out.println ("counter is now: " + counter);
        }
        if (delay == false) {
            break;
        }
        if (counter == 10) {
            delay = false;
        }
    }
    System.out.println ("Done");
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    boolean delay = true;
    int counter = 0;
    while (delay) {
        Thread.sleep (1000);
        counter ++;
        System.out.println ("counter is now: " + counter);
        if (counter == 10) {
            delay = false;
        }
    }
    System.out.println ("Done");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35327539_35327606_14_26
35327539_35327694_1_10
Title: How to print an object several times in Java? 
----------------------------------------

public void run () {
    setSize (800, 400);
    int x = 100;
    int y = 380;
    for (int i = 0;
    i < 14; i ++) {
        GRect rec = new GRect (x, y, BRICK_WIDTH, BRICK_HEIGHT);
        x += BRICK_WIDTH;
        add (rec);
    }
}
----------------------------------------

public void run () {
    setSize (800, 400);
    int x = 100, y = 380;
    GRect rec;
    for (int i = 0;
    i < BRICK_IN_BASE; i ++) {
        rec = new GRect (x, y, BRICK_WIDTH, BRICK_HEIGHT);
        add (rec);
        x += BRICK_WIDTH;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35329780_35329965_124_133
35329780_35329965_135_143
Title: "How to avoid duplicates in List<Map<String String>>?" 
----------------------------------------

public Person (String year, String standard, String age, String gender, String cls, String marks, String score) {
    this.year = year;
    this.standard = standard;
    this.age = age;
    this.gender = gender;
    this.cls = cls;
    this.marks = marks;
    this.score = score;
}
----------------------------------------

public Person (Map < String, String > map) {
    this.year = map.get ("year");
    this.standard = map.get ("standrad");
    this.age = map.get ("age");
    this.gender = map.get ("gender");
    this.cls = map.get ("class");
    this.marks = map.get ("marks");
    this.score = map.get ("score");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35330367_35330528_3_16
35330367_35330841_1_16
Title: Convert string to int and get sum of numbers 
----------------------------------------

public int sumOfDigits (String s) {
    int sum = 0;
    for (int i = 0;
    i < s.length (); i ++) {
        char cur = (char) (s.charAt (i) - '0');
        if (cur >= 0 && cur <= 9) {
            sum += cur;
        }
    }
    return sum;
}
----------------------------------------

public int sumOfDigits (String s) {
    int sum = - 1;
    try {
        int n = Integer.parseInt (s);
        sum = 0;
        while (n != 0) {
            sum = sum + n % 10;
            n = n / 10;
        }
    } catch (NumberFormatException nfe) {
        System.out.println (nfe);
        System.out.println ("Given string is not a number!");
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35332124_35332420_1_59
35332124_35332552_24_39
Title: I am getting all the sentences continously after sorting the words of sentences but i want one sorted sentence than next below it 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("enter the value of n");
    int n = Integer.parseInt (scan.nextLine ());
    ArrayList < String > lines = new ArrayList < String > ();
    boolean once_entered = true;
    for (int i = 0;
    i < n; i ++) {
        lines.add (i, scan.nextLine () + " ");
        ArrayList < String > words = new ArrayList < String > ();
        ArrayList < String > words_2 = new ArrayList < String > ();
        String word = "";
        for (int j = 0;
        j < lines.get (i).length (); j ++) {
            char char_0 = lines.get (i).toLowerCase ().charAt (j);
            if (char_0 >= 'a' && char_0 <= 'z') {
                word += char_0;
                once_entered = false;
            } else if (! once_entered) {
                words.add (word);
                word = "";
                once_entered = true;
            }

        }
        for (int t = 0;
        t < words.size (); t ++) {
            boolean contains = false;
            for (int j = 0;
            j < words_2.size (); j ++) {
                if (words_2.get (j).contentEquals (words.get (t))) contains = true;

                break;
            }
            if (! contains) words_2.add (words.get (t));

        }
        Collections.sort (words_2);
        for (int t = 0;
        t < words_2.size (); t ++) {
            System.out.print (" " + words_2.get (t));
        }
        System.out.println ("");
    }
    scan.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("enter the value of n");
    int n = Integer.parseInt (scan.nextLine ());
    for (int i = 0;
    i < n; i ++) {
        System.out.print ("><![CDATA[> ");
        String line = scan.nextLine ();
        rearrangeLine (line);
    }
    scan.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35332682_35332907_1_12
35332682_43335848_1_16
Title: Stuck with recursive method for Java? 
----------------------------------------

public static void num (int n) {
    String [] numbers = {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};
    if (n < 10) {
        System.out.println (numbers [n]);
        return;
    } else {
        num (n / 10);
        System.out.println (numbers [n % 10]);
    }
}
----------------------------------------

public static void num (int n) {
    String [] numbers = {"zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"};
    String digitString = "";
    if (n < 10) {
        digitString += numbers [n] + " ";
    } else {
        int digit = n % 10;
        digitString = numbers [digit] + " " + digitString;
        num (n / 10);
    }
    System.out.print (digitString);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35345325_35345532_3_26
35345325_35345572_8_26
Title: Triangle of for loops 
----------------------------------------

public static void main (String [] args) {
    int size = 10;
    System.out.println (size);
    for (int i = 0;
    i < size - 1; i ++) {
        for (int f = 0;
        f < i; f ++) {
            System.out.print ("*");
        }
        System.out.println ("*");
    }
    for (int i = size - 1;
    i >= 0; i --) {
        for (int f = i;
        f > 0; f --) {
            System.out.print ("*");
        }
        System.out.println ("*");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner key = new Scanner (System.in);
    int size = 3;
    do {
        System.out.println ("Enter Triangle size (1-50)");
        size = key.nextInt ();
    } while (size < 1 || size > 50);
    for (int stars = 1;
    stars < size; stars ++) {
        printStarLine (stars);
    }
    printStarLine (size);
    for (int stars = size - 1;
    stars > 0; stars --) {
        printStarLine (stars);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35350949_35351808_19_48
35350949_35351808_5_58
Title: Multithreaded Server receives data from just one client JAVA 
----------------------------------------

public void run () {
    try {
        DataInputStream dis = new DataInputStream (s.getInputStream ());
        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
        while (true) {
            String test = dis.readUTF ();
            dos.writeUTF (test);
            System.out.println (test);
            dos.flush ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            s.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        ServerSocket ss = new ServerSocket (7000);
        while (true) {
            System.out.println ("Server is listening");
            final Socket s = ss.accept ();
            System.out.println ("Client Accepted");
            Thread t2 = new Thread (new Runnable () {
                public void run () {
                    try {
                        DataInputStream dis = new DataInputStream (s.getInputStream ());
                        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
                        while (true) {
                            String test = dis.readUTF ();
                            dos.writeUTF (test);
                            System.out.println (test);
                            dos.flush ();
                        }
                    } catch (IOException e) {
                        e.printStackTrace ();
                    } finally {
                        try {
                            s.close ();
                        } catch (IOException e) {
                            e.printStackTrace ();
                        }
                    }
                }}

            );
            t2.start ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35350949_35351808_19_48
35350949_35351808_69_86
Title: Multithreaded Server receives data from just one client JAVA 
----------------------------------------

public void run () {
    try {
        DataInputStream dis = new DataInputStream (s.getInputStream ());
        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
        while (true) {
            String test = dis.readUTF ();
            dos.writeUTF (test);
            System.out.println (test);
            dos.flush ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    } finally {
        try {
            s.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    try (Socket s = new Socket ("localhost", 7000)) {
        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
        DataInputStream dis = new DataInputStream (s.getInputStream ());
        for (int i = 0;
        i < 10; i ++) {
            dos.writeUTF ("Hello from " + Thread.currentThread ().getName ());
            String reply = dis.readUTF ();
            Thread.sleep (10 * 1000);
        }
    } catch (IOException | InterruptedException exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35350949_35351808_5_58
35350949_35351808_69_86
Title: Multithreaded Server receives data from just one client JAVA 
----------------------------------------

public void run () {
    try {
        ServerSocket ss = new ServerSocket (7000);
        while (true) {
            System.out.println ("Server is listening");
            final Socket s = ss.accept ();
            System.out.println ("Client Accepted");
            Thread t2 = new Thread (new Runnable () {
                public void run () {
                    try {
                        DataInputStream dis = new DataInputStream (s.getInputStream ());
                        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
                        while (true) {
                            String test = dis.readUTF ();
                            dos.writeUTF (test);
                            System.out.println (test);
                            dos.flush ();
                        }
                    } catch (IOException e) {
                        e.printStackTrace ();
                    } finally {
                        try {
                            s.close ();
                        } catch (IOException e) {
                            e.printStackTrace ();
                        }
                    }
                }}

            );
            t2.start ();
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    try (Socket s = new Socket ("localhost", 7000)) {
        DataOutputStream dos = new DataOutputStream (s.getOutputStream ());
        DataInputStream dis = new DataInputStream (s.getInputStream ());
        for (int i = 0;
        i < 10; i ++) {
            dos.writeUTF ("Hello from " + Thread.currentThread ().getName ());
            String reply = dis.readUTF ();
            Thread.sleep (10 * 1000);
        }
    } catch (IOException | InterruptedException exc) {
        exc.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35368391_35375766_162_176
35368391_35375766_69_77
Title: can't get panel added to jtabbed pane after calling setComponentAt() 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int i = pane.indexOfTabComponent (ButtonTabComponent.this);
    if (i != - 1) {
        Component comp = pane.getComponentAt (i);
        if (comp instanceof JLabel) {
            JLabel label = (JLabel) comp;
            System.out.println ("Label text = " + label.getText ());
            switch (JOptionPane.showConfirmDialog (this, "Are you sure you want to close the \"" + pane.getTitleAt (i) + "\" tab?", "Close", JOptionPane.OK_CANCEL_OPTION)) {
                case JOptionPane.OK_OPTION :
                    pane.remove (i);
                    break;
            }
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    for (int i = 0;
    i < pane.getTabCount (); i ++) {
        if (tabComponentsItem.isSelected ()) {
            initTabComponent (i);
        } else {
            pane.setTabComponentAt (i, null);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35369923_35371473_113_148
35369923_35371473_44_60
Title: JList Swing adding description to List Item 
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    if (arrowButton.isSelected ()) {
        Object value = list.getSelectedValue ();
        if (value != null) {
            JLabel titleLabel = new JLabel (value.toString ());
            titleLabel.setBackground (Color.WHITE);
            titleLabel.setFont (new Font (Font.SANS_SERIF, Font.BOLD, 14));
            titleLabel.setHorizontalAlignment (JLabel.LEFT);
            JPanel titlePanel = new JPanel (new FlowLayout (FlowLayout.LEFT));
            titlePanel.setBackground (Color.WHITE);
            titlePanel.add (titleLabel);
            JTextPane textPane = new JTextPane ();
            textPane.setEditable (false);
            textPane.setText (texts.get (list.getSelectedIndex ()));
            JPanel contentPanel = new JPanel (new BorderLayout ());
            contentPanel.setBorder (BorderFactory.createLineBorder (Color.BLACK));
            contentPanel.add (titlePanel, BorderLayout.NORTH);
            contentPanel.add (textPane);
            popup.setLocation (arrowButton.getLocationOnScreen ().x + arrowButton.getWidth (), arrowButton.getLocationOnScreen ().y);
            popup.setContentPane (contentPanel);
            popup.revalidate ();
            popup.pack ();
            popup.setVisible (true);
        }
    } else {
        if (popup.isVisible ()) {
            popup.setVisible (false);
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent arg0) {
    JTextField elementField = new JTextField (5);
    JTextArea textArea = new JTextArea (5, 10);
    JPanel panel = new JPanel ();
    panel.add (new JLabel ("Element:"));
    panel.add (elementField);
    panel.add (Box.createHorizontalStrut (15));
    panel.add (new JLabel ("Text:"));
    panel.add (new JScrollPane (textArea));
    int result = JOptionPane.showConfirmDialog (frame, panel, "Element & Text", JOptionPane.OK_CANCEL_OPTION);
    if (result == JOptionPane.OK_OPTION) {
        listPanel.addElementToList (elementField.getText (), textArea.getText ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35370723_35381341_30_37
35370723_35381512_28_35
Title: Cast doesn't work in java using Class<T> and < T extends A> 
----------------------------------------

I getOrCreate (Class < ? > cls) {
    if (ClassA.class.isAssignableFrom (cls)) {
        return getOrCreateTypeA ();
    } else if (ClassB.class.isAssignableFrom (cls)) {
        return getOrCreateTypeB ();
    }

    return null;
}
----------------------------------------

public < C extends IdentifiedEntity > C getOrCreate (Class < C > classT, String id) {
    if (IdentifiedBusinessDSEntity.class.isAssignableFrom (classT)) {
        return getOrCreateDSEntity (classT.asSubclass (IdentifiedBusinessDSEntity.class), classT, id);
    } else if (IdentifiedBusinessTransversalEntity.class.isAssignableFrom (classT)) {
        return getOrCreateTransversalEntity (classT.asSubclass (IdentifiedBusinessTransversalEntity.class), classT, id);
    }

    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35372753_35373512_1_31
35372753_37626290_1_28
Title: CodingBat sameEnds dealing with Strings 
----------------------------------------

public String sameEnds (String string) {
    int e = string.length () - 1;
    int b = string.length () / 2;
    while (-- b >= 0) {
        for (; b >= 0; -- b) {
            if (string.charAt (e) == string.charAt (b)) break;

        }
        for (int ee = e, bb = b;
        bb >= 0; -- bb, -- ee) {
            if (string.charAt (bb) != string.charAt (ee)) break;

            if (bb == 0) return string.substring (0, b + 1);

        }
    }
    return new String ("");
}
----------------------------------------

public String sameEnds (String string) {
    int mid = string.length () / 2;
    String ls = string.substring (mid);
    String result = "";
    int index = - 1;
    int i = 0;
    if (string.length () < 2) {
        return "";
    }
    if (string.length () % 2 == 1) {
        i = 1;
    }
    for (; i < ls.length (); i ++) {
        index = string.indexOf (ls.substring (i));
        if (index == 0) {
            result += ls.substring (i);
            break;
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35376318_35376530_35_56
35376318_35377087_1_20
Title: Not storing value to a variable 
----------------------------------------

public void userInput () {
    System.out.println ("What is your social security number?");
    this.ssn = entry.nextLine ();
    System.out.println ("What is your last name?");
    this.lastName = entry.nextLine ();
    System.out.println ("What is your first name?");
    this.firstName = entry.nextLine ();
    System.out.println ("What is your street address?");
    this.streetAddress = entry.nextLine ();
    System.out.println ("What city do you live in?");
    this.city = entry.nextLine ();
    System.out.println ("What state do you live in?");
    this.state = entry.nextLine ();
    System.out.println ("What's your zip code?");
    this.zip = entry.nextLine ();
    System.out.println ("What's your marital status?");
    this.maritalStatus = entry.nextLine ();
    System.out.println ("How much is your annual income?");
    this.annualIncome = entry.nextDouble ();
}
----------------------------------------

public double userInput () {
    System.out.println ("What is your social security number?");
    ssn = entry.nextLine ();
    System.out.println ("What is your last name?");
    lastName = entry.nextLine ();
    System.out.println ("What is your first name?");
    firstName = entry.nextLine ();
    System.out.println ("What is your street address?");
    streetAddress = entry.nextLine ();
    System.out.println ("What city do you live in?");
    city = entry.nextLine ();
    System.out.println ("What state do you live in?");
    state = entry.nextLine ();
    System.out.println ("What's your zip code?");
    zip = entry.nextLine ();
    System.out.println ("What's your marital status?");
    maritalStatus = entry.nextLine ();
    System.out.println ("How much is your annual income?");
    this.annualIncome = entry.nextDouble ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35376823_35376898_1_16
35376823_35376911_1_12
Title: Issue with Simple Date format Java 
----------------------------------------

public static boolean checkformat (String dateString) {
    boolean flag = false;
    Date d1 = null;
    SimpleDateFormat format = new SimpleDateFormat ("yyyy/MM/dd");
    format.setLenient (false);
    try {
        if (dateString.matches ("([0-9]{4})/([0-9]{2})/([0-9]{2})")) {
            d1 = format.parse (dateString);
            flag = true;
        }
    } catch (ParseException ex) {
        ex.printStackTrace ();
        return false;
    }
    return flag;
}
----------------------------------------

public static boolean checkformat (String dateString) {
    boolean flag = false;
    try {
        TemporalAccessor ta = DateTimeFormatter.ofPattern ("yyyyMMdd").parse (strDate);
        flag = true;
    } catch (DateTimeParseException ex) {
        ex.printStackTrace ();
        return false;
    }
    return flag;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35380702_35381275_2_72
35380702_35381667_2_20
Title: "How to move each ""i"" in a string to the next position in java" 
----------------------------------------

public static void main (String [] args) {
    String input = "Chit Nyein Oo is nothing.";
    char o = 'i';
    int indexes = 0;
    if (input.charAt (input.length () - 1) != 'i') {
        for (int i = 0;
        i < input.length (); i ++) {
            if (input.charAt (i) == o) {
                indexes ++;
            }
        }
        int [] positions = new int [indexes];
        for (int i = 0;
        i < input.length (); i ++) {
            if (input.charAt (i) == o) {
                positions [indexes - 1] = i;
                indexes --;
            }
        }
        char [] characters = input.toCharArray ();
        for (int i = 0;
        i < positions.length; i ++) {
            if (characters [input.length () - 1] != 'i') {
                char temp = characters [positions [i]];
                characters [positions [i]] = characters [positions [i] + 1];
                characters [positions [i] + 1] = temp;
            } else {
                continue;
            }
        }
        String swappedString = new String (characters);
        System.out.println (input);
        System.out.println (swappedString);
    } else {
        char t = input.charAt (input.length () - 1);
        String ha = input.substring (0, input.length () - 1);
        input = ha;
        for (int i = 0;
        i < input.length (); i ++) {
            if (input.charAt (i) == o) {
                indexes ++;
            }
        }
        int [] positions = new int [indexes];
        for (int i = 0;
        i < input.length (); i ++) {
            if (input.charAt (i) == o) {
                positions [indexes - 1] = i;
                indexes --;
            }
        }
        char [] characters = input.toCharArray ();
        for (int i = 0;
        i < positions.length; i ++) {
            if (characters [input.length () - 1] != 'i') {
                char temp = characters [positions [i]];
                characters [positions [i]] = characters [positions [i] + 1];
                characters [positions [i] + 1] = temp;
            } else {
                continue;
            }
        }
        String swappedString = new String (characters);
        swappedString = swappedString + Character.toString (t);
        System.out.println (input);
        System.out.println (swappedString);
    }
}
----------------------------------------

public static void main (String [] args) {
    String input = "Chit Nyein Oo is nothingi";
    int len = input.length ();
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < len; i ++) {
        char charAti = input.charAt (i);
        if (charAti == 'i' && i < len - 1) {
            sb.append (input.charAt (i + 1));
            sb.append (charAti);
            i ++;
        } else {
            sb.append (charAti);
        }
    }
    System.out.println (sb);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35382570_35382675_5_28
35382570_35382695_1_14
Title: Display weekdays using ifelse 
----------------------------------------

public static String weekday_name (int weekday) {
    String result = "";
    if (weekday == 1) {
        result = "Sunday";
    } else if (weekday == 2) {
        result = "Monday";
    } else if (weekday == 3) {
        result = "Tuesday";
    } else if (weekday == 4) {
        result = "Wednesday";
    } else if (weekday == 5) {
        result = "Thursday";
    } else if (weekday == 6) {
        result = "Friday";
    } else if (weekday == 7) {
        result = "Saturday";
    } else if (weekday == 0) {
        result = "Sunday";
    } else {
        result = "ERROR";
    }

    return result;
}
----------------------------------------

public static String weekday_name (int weekday) {
    switch (weekday) {
        case 1 :
            return "Sunday";
        case 2 :
            return "Monday";
        case 3 :
            return "Tuesday";
        case 4 :
            return "Wednesday";
        case 5 :
            return "Thursday";
        case 6 :
            return "Friday";
        case 7 :
            return "Saturday";
        case 0 :
            return "Sunday";
        default :
            return "ERROR";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35382570_35382687_6_49
35382570_35382695_1_14
Title: Display weekdays using ifelse 
----------------------------------------

public static String weekday_name (int weekday) {
    String result = "";
    if (weekday == 1) {
        result = "Sunday";
    } else if (weekday == 2) {
        result = "Monday";
    } else if (weekday == 3) {
        result = "Tuesday";
    } else if (weekday == 4) {
        result = "Wednesday";
    } else if (weekday == 5) {
        result = "Thursday";
    } else if (weekday == 6) {
        result = "Friday";
    } else if (weekday == 7) {
        result = "Saturday";
    } else if (weekday == 0) {
        result = "Sunday";
    } else {
        result = "ERROR";
    }

    return result;
}
----------------------------------------

public static String weekday_name (int weekday) {
    switch (weekday) {
        case 1 :
            return "Sunday";
        case 2 :
            return "Monday";
        case 3 :
            return "Tuesday";
        case 4 :
            return "Wednesday";
        case 5 :
            return "Thursday";
        case 6 :
            return "Friday";
        case 7 :
            return "Saturday";
        case 0 :
            return "Sunday";
        default :
            return "ERROR";
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35382694_35382765_31_67
35382694_35383133_12_61
Title: How to interlock shapes in Java 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g.create ();
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    int x = X_START;
    int y = Y_START;
    myDrawOval (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.BLUE, OVAL_WIDTH);
    x += DELTA_X;
    y += DELTA_Y;
    myDrawOval (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, COLOR_GOLD, OVAL_WIDTH);
    x += DELTA_X;
    y -= DELTA_Y;
    myDrawOval (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.BLACK, OVAL_WIDTH);
    x += DELTA_X;
    y += DELTA_Y;
    myDrawOval (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.GREEN.darker (), OVAL_WIDTH);
    x += DELTA_X;
    y -= DELTA_Y;
    myDrawOval (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.RED, OVAL_WIDTH);
    x = X_START;
    y = Y_START;
    int angle = CIRCLE_DEGREES - ARC_LENGTH;
    myDrawArc (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.BLUE, OVAL_WIDTH, angle, ARC_LENGTH);
    x += DELTA_X;
    y += DELTA_Y;
    myDrawArc (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, COLOR_GOLD, OVAL_WIDTH, 0, ARC_LENGTH);
    x += DELTA_X;
    y -= DELTA_Y;
    myDrawArc (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.BLACK, OVAL_WIDTH, angle, ARC_LENGTH);
    x += DELTA_X;
    y += DELTA_Y;
    myDrawArc (g2, INNER_STROKE, OUTER_STROKE, x, y, BG, Color.GREEN.darker (), OVAL_WIDTH, 0, ARC_LENGTH);
    g2.dispose ();
}
----------------------------------------

public void paintComponent (Graphics g) {
    Graphics2D g2d = (Graphics2D) g;
    RenderingHints rh = new RenderingHints (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    rh.put (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2d.setRenderingHints (rh);
    double w = getWidth ();
    double m = w / 12;
    double dx = w / 7;
    double dy = w / 8;
    double x = m;
    double y = .7 * m;
    double r = w / 4;
    int fwdStart = - 30;
    int topStart = 90 - 30;
    float rw = (float) w / 40;
    BasicStroke bs = new BasicStroke (rw * 1.5f);
    BasicStroke fs = new BasicStroke (rw);
    Color blue = new Color (0, 133, 199);
    Color gold = new Color (244, 195, 0);
    Color black = Color.black;
    Color green = new Color (0, 159, 61);
    Color red = new Color (223, 0, 36);
    paintRing (g2d, fs, bs, x, y, r, rw, blue, 0, 360);
    paintRing (g2d, fs, bs, x + dx, y + dy, r, rw, gold, 0, 360);
    paintRing (g2d, fs, bs, x + 2 * dx, y, r, rw, black, 0, 360);
    paintRing (g2d, fs, bs, x + dx, y + dy, r, rw, gold, topStart, 60);
    paintRing (g2d, fs, bs, x, y, r, rw, blue, fwdStart, 60);
    paintRing (g2d, fs, bs, x + 3 * dx, y + dy, r, rw, green, 0, 360);
    paintRing (g2d, fs, bs, x + 4 * dx, y, r, rw, red, 0, 360);
    paintRing (g2d, fs, bs, x + 3 * dx, y + dy, r, rw, green, topStart, 60);
    paintRing (g2d, fs, bs, x + 2 * dx, y, r, rw, black, fwdStart, 60);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35401238_35401293_5_29
35401238_35401308_1_26
Title: String index out of range error in java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    int length = aString.length ();
    if (length == 7) {
        char first = aString.charAt (0);
        char second = aString.charAt (1);
        char third = aString.charAt (2);
        char fourth = aString.charAt (3);
        char fifth = aString.charAt (4);
        char sixth = aString.charAt (5);
        char seventh = aString.charAt (6);
        System.out.println (String.format ("Line 1: %s %s %s %s ", first, third, fifth, sixth));
        System.out.println (String.format ("Line 2: %s %s %s ", second, fourth, sixth));
        System.out.println (String.format ("Line 3: %s %s %s %s ", seventh, fifth, third, first));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    int length = aString.length ();
    if (length == 7) {
        char first = aString.charAt (0);
        char second = aString.charAt (1);
        char third = aString.charAt (2);
        char fourth = aString.charAt (3);
        char fifth = aString.charAt (4);
        char sixth = aString.charAt (5);
        char seventh = aString.charAt (6);
        System.out.println (String.format ("Line 1: %s %s %s %s ", first, third, fifth, sixth));
        System.out.println (String.format ("Line 2: %s %s %s ", second, fourth, sixth));
        System.out.println (String.format ("Line 3: %s %s %s %s ", seventh, fifth, third, first));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35401238_35401293_5_29
35401238_35401404_5_25
Title: String index out of range error in java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    int length = aString.length ();
    if (length == 7) {
        char first = aString.charAt (0);
        char second = aString.charAt (1);
        char third = aString.charAt (2);
        char fourth = aString.charAt (3);
        char fifth = aString.charAt (4);
        char sixth = aString.charAt (5);
        char seventh = aString.charAt (6);
        System.out.println (String.format ("Line 1: %s %s %s %s ", first, third, fifth, sixth));
        System.out.println (String.format ("Line 2: %s %s %s ", second, fourth, sixth));
        System.out.println (String.format ("Line 3: %s %s %s %s ", seventh, fifth, third, first));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    char [] charArr = new char [10];
    int length = aString.length ();
    for (int i = 0;
    i < length; i ++) {
        charArr [i] = aString.charAt (i);
    }
    if (length == 7) {
        System.out.println (String.format ("Line 1: %s %s %s %s ", charArr [0], charArr [2], charArr [4], charArr [5]));
        System.out.println (String.format ("Line 2: %s %s %s ", charArr [1], charArr [3], charArr [5]));
        System.out.println (String.format ("Line 3: %s %s %s %s ", charArr [6], charArr [4], charArr [2], charArr [0]));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35401238_35401308_1_26
35401238_35401404_5_25
Title: String index out of range error in java 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    int length = aString.length ();
    if (length == 7) {
        char first = aString.charAt (0);
        char second = aString.charAt (1);
        char third = aString.charAt (2);
        char fourth = aString.charAt (3);
        char fifth = aString.charAt (4);
        char sixth = aString.charAt (5);
        char seventh = aString.charAt (6);
        System.out.println (String.format ("Line 1: %s %s %s %s ", first, third, fifth, sixth));
        System.out.println (String.format ("Line 2: %s %s %s ", second, fourth, sixth));
        System.out.println (String.format ("Line 3: %s %s %s %s ", seventh, fifth, third, first));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.printf ("Enter a string: ");
    String aString = in.next ();
    char [] charArr = new char [10];
    int length = aString.length ();
    for (int i = 0;
    i < length; i ++) {
        charArr [i] = aString.charAt (i);
    }
    if (length == 7) {
        System.out.println (String.format ("Line 1: %s %s %s %s ", charArr [0], charArr [2], charArr [4], charArr [5]));
        System.out.println (String.format ("Line 2: %s %s %s ", charArr [1], charArr [3], charArr [5]));
        System.out.println (String.format ("Line 3: %s %s %s %s ", charArr [6], charArr [4], charArr [2], charArr [0]));
    } else {
        if (length < 7) {
            System.out.println ("the length is less than 7");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35413039_35413210_15_29
35413039_35413212_1_16
Title: Recursive palindrome returns statement over and over 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = "";
    while (str1 != "q") {
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
        if (str1.equals ("q")) {
            break;
        }
        if (recursivePalindromeTester (str1)) {
            System.out.println (str1 + " is a palindrome");
        } else {
            System.out.println (str1 + " is not palindrome");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = in.nextLine ();
    str1 = str1.toLowerCase ();
    while (! str1.equals ("q")) {
        if (recursivePalindromeTester (str1)) {
            System.out.println (str1 + " is a palindrome");
        } else {
            System.out.println (str1 + " is not palindrome");
        }
        System.out.println ("Enter the next string.(q to quit)");
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35413039_35413210_15_29
35413039_35413416_6_17
Title: Recursive palindrome returns statement over and over 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = "";
    while (str1 != "q") {
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
        if (str1.equals ("q")) {
            break;
        }
        if (recursivePalindromeTester (str1)) {
            System.out.println (str1 + " is a palindrome");
        } else {
            System.out.println (str1 + " is not palindrome");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = in.nextLine ();
    str1 = str1.toLowerCase ();
    while (! str1.equals ("q")) {
        System.out.println (str1 + (isPalindrome (str1) ? " is a palindrome" : " is not palindrome"));
        System.out.println ("Enter the next string.(q to quit)");
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35413039_35413212_1_16
35413039_35413416_6_17
Title: Recursive palindrome returns statement over and over 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = in.nextLine ();
    str1 = str1.toLowerCase ();
    while (! str1.equals ("q")) {
        if (recursivePalindromeTester (str1)) {
            System.out.println (str1 + " is a palindrome");
        } else {
            System.out.println (str1 + " is not palindrome");
        }
        System.out.println ("Enter the next string.(q to quit)");
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a word, phrase, or string of words.(q to quit)");
    String str1 = in.nextLine ();
    str1 = str1.toLowerCase ();
    while (! str1.equals ("q")) {
        System.out.println (str1 + (isPalindrome (str1) ? " is a palindrome" : " is not palindrome"));
        System.out.println ("Enter the next string.(q to quit)");
        str1 = in.nextLine ();
        str1 = str1.toLowerCase ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35418111_35418264_1_13
35418111_35419959_150_167
Title: How to move Polygon Object with KeyListener in Java 
----------------------------------------

@Override
public void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2 = (Graphics2D) g;
    frog = new Frog ();
    g2.setColor (Color.BLACK);
    g2.drawPolygon (frog);
    g2.setColor (new Color (0, 150, 15));
    g2.fillPolygon (frog);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g.create ();
    Point location = frog.getLocation ();
    Rectangle bounds = frog.getBounds ();
    int width = bounds.x + bounds.width;
    int height = bounds.y + bounds.height;
    AffineTransform at = AffineTransform.getTranslateInstance (location.x, location.y);
    at.rotate (Math.toRadians (angle), width / 2, height / 2);
    g2d.transform (at);
    g2d.setColor (new Color (0, 150, 15));
    g2d.fill (frog);
    g2d.setColor (Color.BLACK);
    g2d.draw (frog);
    g2d.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35418288_35418354_16_30
35418288_35418768_16_57
Title: HTTP request returns illegal state exception android 
----------------------------------------

protected String doInBackground (String...params) {
    InputStream in = null;
    String queryResult = "";
    URL url = new URL ("http://www.android.com/");
    HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection ();
    try {
        InputStream in = new BufferedInputStream (urlConnection.getInputStream ());
        queryResult = readStream (in);
    } finally {
        urlConnection.disconnect ();
    }
    return queryResult;
}
----------------------------------------

protected String doInBackground (String...uri) {
    URL url = null;
    try {
        url = new URL (uri [0]);
    } catch (MalformedURLException e) {
        e.printStackTrace ();
    }
    String responseString = null;
    try {
        HttpURLConnection httpclient = (HttpURLConnection) url.openConnection ();
        int lResponseCode = httpclient.getResponseCode ();
        if (lResponseCode != HttpURLConnection.HTTP_OK) {
            httpclient.disconnect ();
            throw new IOException ("RESPONSE REJECTED WITH ERROR CODE: " + lResponseCode);
        }
        BufferedReader in = new BufferedReader (new InputStreamReader (httpclient.getInputStream ()));
        StringBuffer lStringBuffer = new StringBuffer ();
        String inputLine;
        while ((inputLine = in.readLine ()) != null) {
            lStringBuffer.append (inputLine);
        }
        httpclient.disconnect ();
        in.close ();
        responseString = lStringBuffer.toString ();
    } catch (IOException e) {
        e.printStackTrace ();
        return responseString;
    }
    theHTTPString = responseString;
    return responseString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35435577_35435734_1_15
35435577_35435781_1_12
Title: Printing from a loop 
----------------------------------------

private static void printFactor (int number) {
    StringBuilder output = new StringBuilder ();
    int factor = 1;
    while (factor < number) {
        if (number % factor == 0) output.append (factor + " + ");

        factor ++;
    }
    output.deleteCharAt (output.length () - 1);
    System.out.print (output.toString ());
}
----------------------------------------

private static void printFactor (int number) {
    if (number > 0) {
        System.out.print (1);
    }
    int factor = 2;
    while (factor < number) {
        if (number % factor == 0) {
            System.out.print (" + " + factor);
        }
        factor ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35436383_35437080_7_18
35436383_35437232_6_19
Title: Timeout parallel executed thread 
----------------------------------------

public void run () {
    synchronized (this) {
        try {
            System.out.println ("Calc sleeping");
            Thread.sleep (10000);
            System.out.println ("not supposed to be shown");
        } catch (InterruptedException ex) {
            Thread.currentThread ().interrupt ();
        }
        notify ();
    }
}
----------------------------------------

public void run () {
    try {
        System.out.println ("Calculator: Started!");
        Thread.sleep (10000);
        System.out.println ("Calculator: I'm done!");
    } catch (InterruptedException e) {
        throw new RuntimeException (e);
    }
    synchronized (this) {
        completed = true;
        notify ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3544351_3544623_5_21
3544351_3544891_16_27
Title: Create a zero value of a generic Number subclass 
----------------------------------------

public static < T extends Number > T zeroIfNull (T number, Class < T > clazz) throws IllegalArgumentException {
    if (clazz == Integer.class) {
        return zeroIfNull (number, clazz, 0);
    } else if (clazz == Double.class) {
        return zeroIfNull (number, clazz, 0);
    } else if (clazz == BigInteger.class) {
        return zeroIfNull (number, clazz, BigInteger.ZERO);
    }

    throw new IllegalArgumentException ("Unexpected Number Class " + clazz.getName () + " with possibly undefined zero value.");
}
----------------------------------------

public static < T extends Number > T zeroIfNull (T number, Class < T > clazz) throws IllegalArgumentException {
    if (number == null) {
        if (zeroes.containsKey (clazz)) {
            return (clazz.cast (zeroes.get (clazz)));
        }
        throw new IllegalArgumentException ("Unexpected Number Class " + clazz.getName () + " with undefined zero value.");
    }
    return number;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
35468807_35469439_1_13
35468807_36077167_1_24
Title: I want to write a function which is remove multiple consecutive spaces from the array in java 
----------------------------------------

public static void trim (char [] input) {
    int j = 0;
    for (int i = 1;
    i < input.length; i ++) {
        if (input [j] != ' ' || input [i] != ' ') {
            j ++;
        }
        input [j] = input [i];
    }
    input = Arrays.copyOf (input, j + 1);
}
----------------------------------------

public static char [] trim (char [] input) {
    char [] output = new char [input.length];
    int i = 0;
    int count = 0;
    for (int j = 0;
    j < input.length; j ++) {
        if (input [j] != ' ') {
            count = 0;
            output [i] = input [j];
            i ++;
        } else {
            count ++;
        }
        if (count == 1) {
            output [i] = ' ';
            i ++;
        }
    }
    return output;
}
----------------------------------------
