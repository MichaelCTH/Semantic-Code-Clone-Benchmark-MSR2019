$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16627910_32912668_4_24
16627910_40858252_5_34
Title: How to code a very simple login system with java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    String username;
    String password;
    System.out.println ("Log in:");
    System.out.println ("username: ");
    username = input.next ();
    System.out.println ("password: ");
    password = input.next ();
    if (username.equals (username) && password.equals (password)) System.out.println ("You are logged in");

}
----------------------------------------

public static void main (String [] args) {
    String Username;
    String Password;
    Password = "123";
    Username = "wisdom";
    Scanner input1 = new Scanner (System.in);
    System.out.println ("Enter Username : ");
    String username = input1.next ();
    Scanner input2 = new Scanner (System.in);
    System.out.println ("Enter Password : ");
    String password = input2.next ();
    if (username.equals (Username) && password.equals (Password)) {
        System.out.println ("Access Granted! Welcome!");
    } else if (username.equals (Username)) {
        System.out.println ("Invalid Password!");
    } else if (password.equals (Password)) {
        System.out.println ("Invalid Username!");
    } else {
        System.out.println ("Invalid Username & Password!");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16630455_16630564_114_142
16630455_16641288_47_103
Title: Why my JTable isn't showing? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String cmd = e.getActionCommand ();
    if ("Adicionar".equalsIgnoreCase (cmd)) {
        boolean adicionado = false;
        if (adicionado == true) {
            txtIdLivro.setText ("");
            txtTombo.setText ("");
            txtTitulo.setText ("");
            txtTituloInternacional.setText ("");
            txtEdicao.setText ("");
            txtEditora.setText ("");
            txtAutor.setText ("");
            txtIdLivro.requestFocus ();
        }
    } else if ("Excluir".equalsIgnoreCase (cmd)) {
        txtTombo.setText ("");
    } else if ("Pesquisar".equalsIgnoreCase (cmd)) {
        if (! txtTombo.getText ().equals ("")) {
        } else if (! txtAutor.getText ().equals ("")) {
        }

    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String cmd = e.getActionCommand ();
    LivroControl control = new LivroControl ();
    if ("Adicionar".equalsIgnoreCase (cmd)) {
    } else if ("Excluir".equalsIgnoreCase (cmd)) {
    } else if ("Pesquisar".equalsIgnoreCase (cmd)) {
        if (! txtTombo.getText ().equals ("")) {
            Livro l = control.pesquisarLivroPorTombo (txtTombo.getText ());
            if (l != null) {
                txtIdLivro.setText (String.valueOf (l.getIdLivro ()));
                txtTombo.setText (l.getTombo ());
                txtTitulo.setText (l.getTitulo ());
                txtTituloInternacional.setText (l.getTituloInternacional ());
                txtEdicao.setText (l.getEdicao ());
                txtEditora.setText (l.getEditora ());
                txtAutor.setText (l.getAutor ());
            }
        } else if (! txtAutor.getText ().equals ("")) {
            encontrados = control.pesquisarLivroPorAutor (txtAutor.getText ());
            if (encontrados != null) {
                for (Livro dados : encontrados) {
                    Object [] row = new Object [6];
                    row [0] = dados.getTombo ();
                    row [1] = dados.getTitulo ();
                    row [2] = dados.getTituloInternacional ();
                    row [3] = dados.getEdicao ();
                    row [4] = dados.getAutor ();
                    row [5] = dados.getEditora ();
                    modeloTabela.addRow (row);
                }
                painelTabela.setVisible (true);
                painelPrincipal.repaint ();
                this.pack ();
            }
        } else {
        }

    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16630455_16630564_26_110
16630455_16641288_7_42
Title: Why my JTable isn't showing? 
----------------------------------------

public LivroView () {
    super ("Manutenção de Livros");
    lblIdLivro = new JLabel ("Código do livro:");
    lblLombada = new JLabel ("Tombo:");
    lblTitulo = new JLabel ("Título:");
    lblTituloInternacional = new JLabel ("Título Internacional:");
    lblEdicao = new JLabel ("Edição:");
    lblEditora = new JLabel ("Editora:");
    lblAutor = new JLabel ("Autor:");
    txtIdLivro = new JTextField (20);
    txtTombo = new JTextField ("Tombo");
    txtTitulo = new JTextField (20);
    txtTituloInternacional = new JTextField (20);
    txtEdicao = new JTextField (20);
    txtEditora = new JTextField (20);
    txtAutor = new JTextField ("Autor");
    txtIdLivro.setText ("");
    txtTombo.setText ("");
    txtTitulo.setText ("");
    txtTituloInternacional.setText ("");
    txtEdicao.setText ("");
    txtEditora.setText ("");
    txtAutor.setText ("");
    btnAdicionar = new JButton ("Adicionar");
    btnExcluir = new JButton ("Excluir");
    btnPesquisar = new JButton ("Pesquisar");
    btnAdicionar.addActionListener (this);
    btnPesquisar.addActionListener (this);
    btnExcluir.addActionListener (this);
    painelPrincipal = new JPanel ();
    painelGeral = new JPanel ();
    painelBotoes = new JPanel ();
    painelJPanel = new JPanel ();
    painelPrincipal.setLayout (new BorderLayout ());
    painelGeral.setLayout (new GridLayout (7, 2));
    painelBotoes.setLayout (new GridLayout (2, 1));
    painelGeral.add (lblIdLivro);
    painelGeral.add (txtIdLivro);
    painelGeral.add (lblLombada);
    painelGeral.add (txtTombo);
    painelGeral.add (lblTitulo);
    painelGeral.add (txtTitulo);
    painelGeral.add (lblTituloInternacional);
    painelGeral.add (txtTituloInternacional);
    painelGeral.add (lblEdicao);
    painelGeral.add (txtEdicao);
    painelGeral.add (lblEditora);
    painelGeral.add (txtEditora);
    painelGeral.add (lblAutor);
    painelGeral.add (txtAutor);
    painelBotoes.add (btnAdicionar);
    painelBotoes.add (btnPesquisar);
    painelBotoes.add (btnExcluir);
    tblLivros = new JTable ();
    tblLivros.setModel (new DefaultTableModel (new Object [] [] {}, new String [] {"Tombo", "T\u00EDtulo", "T\u00EDtulo Internacional", "Edi\u00E7\u00E3o", "Autor", "Editora"}));
    JScrollPane scrollPane = new JScrollPane (tblLivros);
    painelPrincipal.add (painelGeral, BorderLayout.NORTH);
    painelPrincipal.add (painelBotoes, BorderLayout.CENTER);
    painelPrincipal.add (scrollPane, BorderLayout.SOUTH);
    this.setContentPane (painelPrincipal);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.pack ();
    this.setVisible (true);
}
----------------------------------------

public LivroView () {
    super ("Manutenção de Livros");
    encontrados = new ArrayList < Livro > ();
    modeloTabela = new DefaultTableModel (new String [] {"Tombo", "Título", "Título Internacional", "Edição", "Autor", "Editora"}, 0);
    tblLivros = new JTable (modeloTabela);
    tblLivros.getColumnModel ().getColumn (0).setPreferredWidth (54);
    tblLivros.getColumnModel ().getColumn (1).setPreferredWidth (104);
    tblLivros.getColumnModel ().getColumn (2).setPreferredWidth (136);
    tblLivros.getColumnModel ().getColumn (4).setPreferredWidth (102);
    painelTabela = new JScrollPane (tblLivros);
    painelTabela.setVisible (false);
    painelPrincipal.add (painelGeral, BorderLayout.NORTH);
    painelPrincipal.add (painelBotoes, BorderLayout.CENTER);
    painelPrincipal.add (painelTabela, BorderLayout.SOUTH);
    this.setContentPane (painelPrincipal);
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.pack ();
    this.setLocationRelativeTo (null);
    this.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16634960_16656579_17_35
16634960_16656579_21_30
Title: shaking Stage in javaFX 
----------------------------------------

public void handle (ActionEvent actionEvent) {
    TimelineBuilder.create ().keyFrames (new KeyFrame (Duration.seconds (0.2), new EventHandler < ActionEvent > () {
        @Override
        public void handle (ActionEvent actionEvent) {
            if (xyState) {
                primaryStage.setX (primaryStage.getX () + 10);
                primaryStage.setY (primaryStage.getY () + 10);
            } else {
                primaryStage.setX (primaryStage.getX () - 10);
                primaryStage.setY (primaryStage.getY () - 10);
            }
            xyState = ! xyState;
        }}

    )).autoReverse (true).cycleCount (Timeline.INDEFINITE).build ().play ();
}
----------------------------------------

public void handle (ActionEvent actionEvent) {
    if (xyState) {
        primaryStage.setX (primaryStage.getX () + 10);
        primaryStage.setY (primaryStage.getY () + 10);
    } else {
        primaryStage.setX (primaryStage.getX () - 10);
        primaryStage.setY (primaryStage.getY () - 10);
    }
    xyState = ! xyState;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16639529_16639901_1_27
16639529_16640339_1_27
Title: Java JDBC: MySQL write Out of Memory 
----------------------------------------

public static void saveCall (Call call) {
    conn = getInstance ();
    if (conn != null) {
        try {
            calendar.setTime (call.getDate ());
            String sql = "INSERT INTO Calls(id, datetime, duration, customer_phone_id, partner_phone_id) " + "VALUES(null, ?, ?, ?, ?)";
            PreparedStatement preparedStatement = conn.prepareStatement (sql);
            preparedStatement.setString (1, dateFormat.format (calendar.getTime ()));
            preparedStatement.setLong (2, call.getDuration ());
            preparedStatement.setLong (3, call.getPhone ().getPhoneNumber ());
            preparedStatement.setLong (4, call.getPhonePartner ().getPhoneNumber ());
            preparedStatement.executeUpdate ();
        } catch (SQLException e) {
            e.printStackTrace ();
        } finally {
            if (! conn.isClosed ()) conn.close ();

        }
    }
}
----------------------------------------

public static void saveCall (Call call) {
    conn = getInstance ();
    if (conn != null) {
        calendar.setTime (call.getDate ());
        String sql = "INSERT INTO Calls(id, datetime, duration, customer_phone_id, partner_phone_id) " + "VALUES(null, ?, ?, ?, ?)";
        PreparedStatement preparedStatement = null;
        try {
            conn.prepareStatement (sql);
            preparedStatement.setString (1, dateFormat.format (calendar.getTime ()));
            preparedStatement.setLong (2, call.getDuration ());
            preparedStatement.setLong (3, call.getPhone ().getPhoneNumber ());
            preparedStatement.setLong (4, call.getPhonePartner ().getPhoneNumber ());
            preparedStatement.executeUpdate ();
        } catch (SQLException e) {
            e.printStackTrace ();
        } finally {
            if (preparedStatement != null) {
                preparedStatement.close ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16639642_16640103_3_30
16639642_32833512_3_30
Title: Draw a line in JAVA with Pattern - Beginner 
----------------------------------------

public static void main (String [] args) {
    int size = 50;
    String [] [] matrix = new String [size] [size];
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            if (i != j) matrix [i] [j] = "*";
            else matrix [i] [j] = "1";

        }
    }
    for (int i = 0;
    i < size; i ++) {
        for (int j = 0;
        j < size; j ++) {
            System.out.print (matrix [i] [j]);
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] [] grid = new String [5] [5];
    for (int row = 0;
    row < grid.length - 1; row ++) {
        for (int column = 0;
        column < grid [row].length; column ++) {
            if (row == column) {
                grid [row] [column] = "1";
            } else {
                grid [row] [column] = "*";
            }
        }
    }
    for (int row = 0;
    row < grid.length - 1; row ++) for (int column = 0;
    column < grid [row].length; column ++) {
        if (column != 4) {
            System.out.print (grid [row] [column]);
        } else {
            System.out.print ("\n");
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16651639_16651801_1_18
16651639_16651993_1_12
Title: return non duplicates numbers in array from method 
----------------------------------------

public static int [] removeDuplicates (int a []) {
    int n = a.length;
    for (int i = 0;
    i < n; i ++) {
        for (int j = i + 1;
        j < n;) {
            if (a [j] == a [i]) {
                for (int k = j;
                k < n - 1; k ++) a [k] = a [k + 1];

                n --;
            } else j ++;

        }
    }
    int [] newArray = new int [n];
    System.arraycopy (a, 0, newArray, 0, n);
    return newArray;
}
----------------------------------------

public static int [] removeDuplicates (int [] a) {
    Set < Integer > unique = new TreeSet < Integer > ();
    List < Integer > results = new ArrayList < Integer > ();
    for (int i = 0;
    i < a.length; i ++) {
        if (! unique.add (a [i])) results.add (a [i]);

    }
    int [] ret = new int [results.size ()];
    for (int i = 0;
    i < results.size (); i ++) ret [i] = results.get (i);

    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16652757_16652886_1_14
16652757_16652898_1_11
Title: deleting first node from singly linked list Java 
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (info == outInfo) {
        if (nextList () == null) {
            return this;
        }
        lList link = nextList ().deleteInfo (outInfo);
        info = link.info;
        nextList = link.nextList ();
    } else if (nextList () != null) nextList ().deleteInfo (outInfo);

    return this;
}
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (nextList () != null && nextList ().info == outInfo) {
        lList link = nextList ();
        nextList = link.nextList ();
    } else if (nextList () != null) {
        nextList ().deleteInfo (outInfo);
    }

    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16652757_16652886_1_14
16652757_16656034_4_17
Title: deleting first node from singly linked list Java 
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (info == outInfo) {
        if (nextList () == null) {
            return this;
        }
        lList link = nextList ().deleteInfo (outInfo);
        info = link.info;
        nextList = link.nextList ();
    } else if (nextList () != null) nextList ().deleteInfo (outInfo);

    return this;
}
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (nextList () != null) {
        lList link = nextList ().deleteInfo (outInfo);
        if (nextList ().info == outInfo) {
            nextList = link.nextList ();
        } else if (info == outInfo) {
            info = link.info;
            nextList = link.nextList ();
        } else nextList ().deleteInfo (outInfo);

    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16652757_16652898_1_11
16652757_16656034_4_17
Title: deleting first node from singly linked list Java 
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (nextList () != null && nextList ().info == outInfo) {
        lList link = nextList ();
        nextList = link.nextList ();
    } else if (nextList () != null) {
        nextList ().deleteInfo (outInfo);
    }

    return this;
}
----------------------------------------

public lList deleteInfo (String outInfo) {
    if (nextList () != null) {
        lList link = nextList ().deleteInfo (outInfo);
        if (nextList ().info == outInfo) {
            nextList = link.nextList ();
        } else if (info == outInfo) {
            info = link.info;
            nextList = link.nextList ();
        } else nextList ().deleteInfo (outInfo);

    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16657996_16658107_15_27
16657996_16658212_1_12
Title: java method returning a modified string 
----------------------------------------

public static String dashedHelp (String phrase1, String phrase2) {
    StringBuilder newPhrase = new StringBuilder (phrase1);
    for (int i = 0;
    i < phrase1.length () && i < phrase2.length (); i ++) {
        if (phrase1.charAt (i) == phrase2.charAt (i)) {
            newPhrase.setCharAt (i, '_');
        }
    }
    System.out.print (newPhrase);
    return newPhrase.toString ();
}
----------------------------------------

public static String dashedHelp (String phrase1, String phrase2) {
    String ans = "";
    String subChar = "_";
    int i;
    for (i = 0; i < phrase2.length (); i ++) {
        if (i < phrase1.length () && phrase1.charAt (i) == phrase2.charAt (i)) ans += subChar;
        else ans += phrase2.charAt (i);

    }
    return ans;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16661998_16664124_132_143
16661998_16664124_93_101
Title: Sorting Table is wrong when the sort button be pressed more than once? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    TableRowSorter rowSorter = (TableRowSorter) table.getRowSorter ();
    List < SortKey > sortKeys = new ArrayList < SortKey > ();
    SortKey sortKey = new SortKey (2, SortOrder.DESCENDING);
    sortKeys.add (sortKey);
    SortKey sortKey1 = new SortKey (1, SortOrder.ASCENDING);
    sortKeys.add (sortKey1);
    SortKey sortKey2 = new SortKey (0, SortOrder.UNSORTED);
    sortKeys.add (sortKey2);
    rowSorter.setSortKeys (sortKeys);
    rowSorter.sort ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int rowToDelete = 0;
    int rowToModel = 0;
    if (table.getSelectedRow () > - 1) {
        rowToDelete = table.getSelectedRow ();
        rowToModel = table.convertRowIndexToModel (rowToDelete);
        model.removeRow (rowToModel);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16670393_16715101_23_69
16670393_16764503_120_129
Title: Java Draw Arc Between 2 Points 
----------------------------------------

public static void main (String [] args) throws IOException {
    PointF pFrom = new PointF (- 10f, 30.0f);
    PointF pTo = new PointF (- 100f, 0.0f);
    List < PointF > points = generateCurve (pFrom, pTo, 100f, 7f, true, true);
    System.out.println (points);
    Rectangle2D.Float bounds = new Rectangle2D.Float (points.get (0).x, points.get (0).y, 0, 0);
    for (int i = 1;
    i < points.size (); ++ i) {
        bounds.add (points.get (i).x, points.get (i).y);
    }
    bounds.add (pFrom.x, pFrom.y);
    bounds.add (pTo.x, pTo.y);
    BufferedImage img = new BufferedImage ((int) (bounds.width - bounds.x + 50), (int) (bounds.height - bounds.y + 50), BufferedImage.TYPE_4BYTE_ABGR_PRE);
    Graphics2D g = img.createGraphics ();
    g.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g.translate (25.0f - bounds.getX (), 25.0f - bounds.getY ());
    g.setStroke (new BasicStroke (1.0f));
    g.setColor (Color.DARK_GRAY);
    g.drawLine (- 1000, 0, 1000, 0);
    g.drawLine (0, - 1000, 0, 1000);
    g.setColor (Color.RED);
    for (int i = 0;
    i < points.size (); ++ i) {
        if (i > 0) {
            Line2D.Float f = new Line2D.Float (points.get (i - 1).x, points.get (i - 1).y, points.get (i).x, points.get (i).y);
            System.out.println ("Dist : " + f.getP1 ().distance (f.getP2 ()));
        }
        g.fill (new Ellipse2D.Float (points.get (i).x - 0.8f, points.get (i).y - 0.8f, 1.6f, 1.6f));
    }
    g.setColor (Color.BLUE);
    g.fill (new Ellipse2D.Float (pFrom.x - 1, pFrom.y - 1, 3, 3));
    g.fill (new Ellipse2D.Float (pTo.x - 1, pTo.y - 1, 3, 3));
    g.dispose ();
    ImageIO.write (img, "PNG", new File ("result.png"));
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Test ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1667278_16651918_1_14
1667278_5093734_1_15
Title: Parsing query strings on Android 
----------------------------------------

Multimap < String, String > parseQueryString (String queryString, String encoding) {
    LinkedListMultimap < String, String > result = LinkedListMultimap.create ();
    for (String entry : Splitter.on ("&").omitEmptyStrings ().split (queryString)) {
        String pair [] = entry.split ("=", 2);
        try {
            result.put (URLDecoder.decode (pair [0], encoding), pair.length == 2 ? URLDecoder.decode (pair [1], encoding) : null);
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException (e);
        }
    }
    return result;
}
----------------------------------------

public static Map < String, String > parseQueryString (final URL url) throws UnsupportedEncodingException {
    final Map < String, String > qps = new TreeMap < String, String > ();
    final StringTokenizer pairs = new StringTokenizer (url.getQuery (), "&");
    while (pairs.hasMoreTokens ()) {
        final String pair = pairs.nextToken ();
        final StringTokenizer parts = new StringTokenizer (pair, "=");
        final String name = URLDecoder.decode (parts.nextToken (), "ISO-8859-1");
        final String value = URLDecoder.decode (parts.nextToken (), "ISO-8859-1");
        qps.put (name, value);
    }
    return qps;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1667278_2969715_1_23
1667278_9249147_1_14
Title: Parsing query strings on Android 
----------------------------------------

public static Map < String, List < String > > getUrlParameters (String url) throws UnsupportedEncodingException {
    Map < String, List < String > > params = new HashMap < String, List < String > > ();
    String [] urlParts = url.split ("\\?");
    if (urlParts.length > 1) {
        String query = urlParts [1];
        for (String param : query.split ("&")) {
            String pair [] = param.split ("=");
            String key = URLDecoder.decode (pair [0], "UTF-8");
            String value = "";
            if (pair.length > 1) {
                value = URLDecoder.decode (pair [1], "UTF-8");
            }
            List < String > values = params.get (key);
            if (values == null) {
                values = new ArrayList < String > ();
                params.put (key, values);
            }
            values.add (value);
        }
    }
    return params;
}
----------------------------------------

public static Map < String, String > getUrlParameters (URI uri) throws UnsupportedEncodingException {
    Map < String, String > params = new HashMap < String, String > ();
    for (String param : uri.getQuery ().split ("&")) {
        String pair [] = param.split ("=");
        String key = URLDecoder.decode (pair [0], "UTF-8");
        String value = "";
        if (pair.length > 1) {
            value = URLDecoder.decode (pair [1], "UTF-8");
        }
        params.put (new String (key), new String (value));
    }
    return params;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1667278_2969715_1_23
1667278_9773975_1_11
Title: Parsing query strings on Android 
----------------------------------------

public static Map < String, List < String > > getUrlParameters (String url) throws UnsupportedEncodingException {
    Map < String, List < String > > params = new HashMap < String, List < String > > ();
    String [] urlParts = url.split ("\\?");
    if (urlParts.length > 1) {
        String query = urlParts [1];
        for (String param : query.split ("&")) {
            String pair [] = param.split ("=");
            String key = URLDecoder.decode (pair [0], "UTF-8");
            String value = "";
            if (pair.length > 1) {
                value = URLDecoder.decode (pair [1], "UTF-8");
            }
            List < String > values = params.get (key);
            if (values == null) {
                values = new ArrayList < String > ();
                params.put (key, values);
            }
            values.add (value);
        }
    }
    return params;
}
----------------------------------------

Multimap < String, String > getUrlParameters (String url) {
    try {
        Multimap < String, String > ret = ArrayListMultimap.create ();
        for (NameValuePair param : URLEncodedUtils.parse (new URI (url), "UTF-8")) {
            ret.put (param.getName (), param.getValue ());
        }
        return ret;
    } catch (URISyntaxException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1667278_9249147_1_14
1667278_9773975_1_11
Title: Parsing query strings on Android 
----------------------------------------

public static Map < String, String > getUrlParameters (URI uri) throws UnsupportedEncodingException {
    Map < String, String > params = new HashMap < String, String > ();
    for (String param : uri.getQuery ().split ("&")) {
        String pair [] = param.split ("=");
        String key = URLDecoder.decode (pair [0], "UTF-8");
        String value = "";
        if (pair.length > 1) {
            value = URLDecoder.decode (pair [1], "UTF-8");
        }
        params.put (new String (key), new String (value));
    }
    return params;
}
----------------------------------------

Multimap < String, String > getUrlParameters (String url) {
    try {
        Multimap < String, String > ret = ArrayListMultimap.create ();
        for (NameValuePair param : URLEncodedUtils.parse (new URI (url), "UTF-8")) {
            ret.put (param.getName (), param.getValue ());
        }
        return ret;
    } catch (URISyntaxException e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16678704_16807915_20_46
16678704_16843911_96_141
Title: Inertial movement of drag and drop 
----------------------------------------

public boolean onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
    boolean result = false;
    try {
        float diffY = e2.getY () - e1.getY ();
        float diffX = e2.getX () - e1.getX ();
        if (Math.abs (diffX) > Math.abs (diffY)) {
            if (Math.abs (diffX) > SWIPE_THRESHOLD && Math.abs (velocityX) > SWIPE_VELOCITY_THRESHOLD) {
                if (diffX > 0) {
                    onSwipeRight ();
                } else {
                    onSwipeLeft ();
                }
            }
        } else {
            if (Math.abs (diffY) > SWIPE_THRESHOLD && Math.abs (velocityY) > SWIPE_VELOCITY_THRESHOLD) {
                if (diffY > 0) {
                    onSwipeBottom ();
                } else {
                    onSwipeTop ();
                }
            }
        }
    } catch (Exception exception) {
        exception.printStackTrace ();
    }
    return result;
}
----------------------------------------

public boolean onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
    try {
        pp.setColor (Color.RED);
        if (e1.getX () - e2.getX () > SWIPE_MIN_DISTANCE && Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY) {
            cv.drawLine (e1.getX (), e1.getY (), e2.getX (), e1.getY (), pp);
            Toast.makeText (FlipActivity.this, "jj", Toast.LENGTH_SHORT).show ();
            return true;
        } else if (e2.getX () - e1.getX () > SWIPE_MIN_DISTANCE && Math.abs (velocityX) > SWIPE_THRESHOLD_VELOCITY) {
            cv.drawLine (e1.getX (), e1.getY (), e2.getX (), e1.getY (), pp);
            return true;
        }

    } catch (Exception e) {
        e.printStackTrace ();
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_16683112_1_8
16682939_16683440_1_25
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) {
    boolean b;
    for (int i = 2;
    i < 100; i ++) {
        b = checkPrime (i);
        if (b) System.out.println (i);

    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 100;
    boolean [] sieve = new boolean [n + 1];
    for (int i = 2;
    i <= n; i ++) {
        sieve [i] = true;
    }
    for (int i = 2;
    i <= n; i ++) {
        if (sieve [i] != false) {
            for (int j = i;
            j * i <= n; j ++) {
                sieve [i * j] = false;
            }
        }
    }
    for (int i = 0;
    i <= n; i ++) {
        if (sieve [i]) {
            System.out.println (i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_16683112_1_8
16682939_19566075_1_21
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) {
    boolean b;
    for (int i = 2;
    i < 100; i ++) {
        b = checkPrime (i);
        if (b) System.out.println (i);

    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int [] prime = new int [50];
    int i = 1;
    int j = 1;
    int k = 1;
    prime [0] = 2;
    int flag = 1;
    for (i = 3; i <= 100; i += 2) {
        for (k = 0; prime [k] != 0; k ++) {
            if (i % prime [k] == 0) flag ++;

        }
        if (flag < 2) {
            prime [j ++] = i;
        }
        flag = 1;
    }
    System.out.println (Arrays.toString (prime));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_16683112_1_8
16682939_21560636_1_25
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) {
    boolean b;
    for (int i = 2;
    i < 100; i ++) {
        b = checkPrime (i);
        if (b) System.out.println (i);

    }
}
----------------------------------------

public static void main (String [] args) {
    boolean isPrime = true;
    for (int i = 2;
    i < 100; i ++) {
        for (int j = 2;
        j < i; j ++) {
            if ((i % j) == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            System.out.println (i + " is Prime");
        }
        isPrime = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_16683440_1_25
16682939_19566075_1_21
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) {
    int n = 100;
    boolean [] sieve = new boolean [n + 1];
    for (int i = 2;
    i <= n; i ++) {
        sieve [i] = true;
    }
    for (int i = 2;
    i <= n; i ++) {
        if (sieve [i] != false) {
            for (int j = i;
            j * i <= n; j ++) {
                sieve [i * j] = false;
            }
        }
    }
    for (int i = 0;
    i <= n; i ++) {
        if (sieve [i]) {
            System.out.println (i);
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int [] prime = new int [50];
    int i = 1;
    int j = 1;
    int k = 1;
    prime [0] = 2;
    int flag = 1;
    for (i = 3; i <= 100; i += 2) {
        for (k = 0; prime [k] != 0; k ++) {
            if (i % prime [k] == 0) flag ++;

        }
        if (flag < 2) {
            prime [j ++] = i;
        }
        flag = 1;
    }
    System.out.println (Arrays.toString (prime));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_16683440_1_25
16682939_21560636_1_25
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) {
    int n = 100;
    boolean [] sieve = new boolean [n + 1];
    for (int i = 2;
    i <= n; i ++) {
        sieve [i] = true;
    }
    for (int i = 2;
    i <= n; i ++) {
        if (sieve [i] != false) {
            for (int j = i;
            j * i <= n; j ++) {
                sieve [i * j] = false;
            }
        }
    }
    for (int i = 0;
    i <= n; i ++) {
        if (sieve [i]) {
            System.out.println (i);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean isPrime = true;
    for (int i = 2;
    i < 100; i ++) {
        for (int j = 2;
        j < i; j ++) {
            if ((i % j) == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            System.out.println (i + " is Prime");
        }
        isPrime = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16682939_19566075_1_21
16682939_21560636_1_25
Title: Writing a method to find prime numbers 
----------------------------------------

public static void main (String [] args) throws IOException {
    int [] prime = new int [50];
    int i = 1;
    int j = 1;
    int k = 1;
    prime [0] = 2;
    int flag = 1;
    for (i = 3; i <= 100; i += 2) {
        for (k = 0; prime [k] != 0; k ++) {
            if (i % prime [k] == 0) flag ++;

        }
        if (flag < 2) {
            prime [j ++] = i;
        }
        flag = 1;
    }
    System.out.println (Arrays.toString (prime));
}
----------------------------------------

public static void main (String [] args) {
    boolean isPrime = true;
    for (int i = 2;
    i < 100; i ++) {
        for (int j = 2;
        j < i; j ++) {
            if ((i % j) == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            System.out.println (i + " is Prime");
        }
        isPrime = true;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16685366_16685721_8_46
16685366_16686623_6_34
Title: customised listview using arrayadapter class in android 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    mainListView = (ListView) findViewById (R.id.mainListView);
    mainListView.setOnItemClickListener (new AdapterView.OnItemClickListener () {
        @Override
        public void onItemClick (AdapterView < ? > parent, View item, int position, long id) {
            Planet planet = listAdapter.getItem (position);
            planet.toggleChecked ();
            PlanetViewHolder viewHolder = (PlanetViewHolder) item.getTag ();
            viewHolder.getCheckBox ().setChecked (planet.isChecked ());
        }}

    );
    planets = (Planet []) getLastNonConfigurationInstance ();
    if (planets == null) {
        planets = new Planet [] {new Planet ("Mercury"), new Planet ("Venus"), new Planet ("Earth"), new Planet ("Mars"), new Planet ("Jupiter"), new Planet ("Saturn"), new Planet ("Uranus"), new Planet ("Neptune"), new Planet ("Ceres"), new Planet ("Pluto"), new Planet ("Haumea"), new Planet ("Makemake"), new Planet ("Eris")};
    }
    ArrayList < Planet > planetList = new ArrayList < Planet > ();
    planetList.addAll (Arrays.asList (planets));
    listAdapter = new PlanetArrayAdapter (this, planetList);
    mainListView.setAdapter (listAdapter);
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    final ListView listView = (ListView) findViewById (R.id.lv);
    listView.setItemsCanFocus (false);
    listView.setTextFilterEnabled (true);
    listView.setOnItemClickListener (this);
    mCheckBoxAdapter = new CheckBoxAdapter (this, GENRES);
    listView.setAdapter (mCheckBoxAdapter);
    Button b = (Button) findViewById (R.id.button1);
    b.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            StringBuilder result = new StringBuilder ();
            for (int i = 0;
            i < GENRES.length; i ++) {
                if (mCheckBoxAdapter.mCheckStates.get (i) == true) {
                    result.append (GENRES [i]);
                    result.append ("\n");
                }
            }
            Toast.makeText (MainActivity.this, result, 1000).show ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16687143_16687509_1_17
16687143_16687888_6_36
Title: "Java-Buffered Reader How do you read a line using br.readLine(System.in) and convert it to char?" 
----------------------------------------

public static void encodeDecode () throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Input a string");
    char [] chars = br.readLine ().toCharArray ();
    System.out.println ("input a number");
    int increment = Integer.parseInt (br.readLine ());
    for (char c : chars) {
        System.out.println ((char) ((c + increment > 90) ? ((90 - c) + 65) : c + increment));
    }
}
----------------------------------------

public void encodeDecode () throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    System.out.println ("Input a string");
    str = br.readLine ();
    str.toUpperCase ();
    System.out.println ("input a number");
    num = Integer.parseInt (br.readLine ());
    char ch;
    int sum;
    for (int i = 0;
    i < str.length (); i ++) {
        ch = str.charAt (i);
        if ((ch + num) > 90) {
            sum = ((ch + num) % 90 % 26);
            if (sum > 0) ch = (char) (sum + 64);

        } else {
            ch = (char) (ch + num);
        }
        newStr = newStr + ch;
    }
    System.out.println ("entered str : " + str + " num : " + num + " newstr : " + newStr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1670862_14511595_1_31
1670862_1670871_1_18
Title: Obtaining a powerset of a set in Java 
----------------------------------------

public static < T > List < List < T > > powerSet (List < T > originalSet) {
    int resultSize = (int) Math.pow (2, originalSet.size ());
    List < List < T > > resultPowerSet = new ArrayList < List < T > > (resultSize);
    resultPowerSet.add (new ArrayList < T > (0));
    for (T itemFromOriginalSet : originalSet) {
        int startingResultSize = resultPowerSet.size ();
        for (int i = 0;
        i < startingResultSize; i ++) {
            List < T > oldSubset = resultPowerSet.get (i);
            List < T > newSubset = new ArrayList < T > (oldSubset);
            newSubset.add (itemFromOriginalSet);
            resultPowerSet.add (newSubset);
        }
    }
    return resultPowerSet;
}
----------------------------------------

public static < T > Set < Set < T > > powerSet (Set < T > originalSet) {
    Set < Set < T > > sets = new HashSet < Set < T > > ();
    if (originalSet.isEmpty ()) {
        sets.add (new HashSet < T > ());
        return sets;
    }
    List < T > list = new ArrayList < T > (originalSet);
    T head = list.get (0);
    Set < T > rest = new HashSet < T > (list.subList (1, list.size ()));
    for (Set < T > set : powerSet (rest)) {
        Set < T > newSet = new HashSet < T > ();
        newSet.add (head);
        newSet.addAll (set);
        sets.add (newSet);
        sets.add (set);
    }
    return sets;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1670862_14511595_1_31
1670862_27715094_23_42
Title: Obtaining a powerset of a set in Java 
----------------------------------------

public static < T > List < List < T > > powerSet (List < T > originalSet) {
    int resultSize = (int) Math.pow (2, originalSet.size ());
    List < List < T > > resultPowerSet = new ArrayList < List < T > > (resultSize);
    resultPowerSet.add (new ArrayList < T > (0));
    for (T itemFromOriginalSet : originalSet) {
        int startingResultSize = resultPowerSet.size ();
        for (int i = 0;
        i < startingResultSize; i ++) {
            List < T > oldSubset = resultPowerSet.get (i);
            List < T > newSubset = new ArrayList < T > (oldSubset);
            newSubset.add (itemFromOriginalSet);
            resultPowerSet.add (newSubset);
        }
    }
    return resultPowerSet;
}
----------------------------------------

public static < T > Set < Set < T > > powerSet (T [] input) {
    if (input.length == 0) {
        Set < Set < T > > emptySet = new LinkedHashSet < > ();
        emptySet.add (new LinkedHashSet < T > ());
        return emptySet;
    }
    T head = input [0];
    T [] newInputSet = (T []) new Object [input.length - 1];
    for (int i = 1;
    i < input.length; ++ i) {
        newInputSet [i - 1] = input [i];
    }
    Set < Set < T > > all = combine (head, powerSet (newInputSet));
    return all;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1670862_1670871_1_18
1670862_27715094_23_42
Title: Obtaining a powerset of a set in Java 
----------------------------------------

public static < T > Set < Set < T > > powerSet (Set < T > originalSet) {
    Set < Set < T > > sets = new HashSet < Set < T > > ();
    if (originalSet.isEmpty ()) {
        sets.add (new HashSet < T > ());
        return sets;
    }
    List < T > list = new ArrayList < T > (originalSet);
    T head = list.get (0);
    Set < T > rest = new HashSet < T > (list.subList (1, list.size ()));
    for (Set < T > set : powerSet (rest)) {
        Set < T > newSet = new HashSet < T > ();
        newSet.add (head);
        newSet.addAll (set);
        sets.add (newSet);
        sets.add (set);
    }
    return sets;
}
----------------------------------------

public static < T > Set < Set < T > > powerSet (T [] input) {
    if (input.length == 0) {
        Set < Set < T > > emptySet = new LinkedHashSet < > ();
        emptySet.add (new LinkedHashSet < T > ());
        return emptySet;
    }
    T head = input [0];
    T [] newInputSet = (T []) new Object [input.length - 1];
    for (int i = 1;
    i < input.length; ++ i) {
        newInputSet [i - 1] = input [i];
    }
    Set < Set < T > > all = combine (head, powerSet (newInputSet));
    return all;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1670862_31735519_19_34
1670862_44320942_1_9
Title: Obtaining a powerset of a set in Java 
----------------------------------------

private static String [] getPowerSet (String [] s) {
    if (s.length == 1) {
        return new String [] {"", s [0]};
    } else {
        String [] subP1 = getPowerSet (Arrays.copyOfRange (s, 1, s.length));
        String [] subP2 = new String [subP1.length];
        for (int i = 0;
        i < subP1.length; i ++) {
            subP2 [i] = s [0] + subP1 [i];
        }
        String [] P = new String [subP1.length + subP2.length];
        System.arraycopy (subP1, 0, P, 0, subP1.length);
        System.arraycopy (subP2, 0, P, subP1.length, subP2.length);
        return P;
    }
}
----------------------------------------

public List < List < Integer > > getPowerSet (List < Integer > set) {
    List < List < Integer > > powerSet = new ArrayList < List < Integer > > ();
    int max = 1 << set.size ();
    for (int i = 0;
    i < max; i ++) {
        List < Integer > subSet = getSubSet (i, set);
        powerSet.add (subSet);
    }
    return powerSet;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1670862_31735519_6_17
1670862_35125892_1_17
Title: Obtaining a powerset of a set in Java 
----------------------------------------

public static void main (String [] args) {
    String input = args [0];
    String [] S = input.split (",");
    String [] P = getPowerSet (S);
    if (P.length == Math.pow (2, S.length)) {
        for (String s : P) {
            System.out.print ("[" + s + "],");
        }
    } else {
        System.out.println ("Results are incorrect");
    }
}
----------------------------------------

public static void main (String args []) {
    int [] arr = new int [] {1, 2, 3, 4};
    int totalSets = (int) Math.pow (2, arr.length);
    for (int i = 0;
    i < totalSets; i ++) {
        String binaryRep = Integer.toBinaryString (i);
        for (int j = 0;
        j < binaryRep.length (); j ++) {
            int index = binaryRep.length () - 1 - j;
            if (binaryRep.charAt (index) == '1') System.out.print (arr [j] + " ");

        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16721917_16722558_49_66
16721917_16722558_95_103
Title: Display RTP MJPEG 
----------------------------------------

public void handle (ActionEvent event) {
    try {
        int len = vs.getnextframe (buf);
        if (len == - 1) {
            timeline.stop ();
            return;
        }
        viewer.setImage (new Image (new ByteArrayInputStream (Arrays.copyOf (buf, len))));
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void handle (ActionEvent event) {
    try {
        timeline.stop ();
        vs = new VideoStream (MOVIE_FILE);
        timeline.playFromStart ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16734954_16735004_1_19
16734954_16735196_1_22
Title: "Returning a string array containing string forms of integers replacing multiples of certain numbers with strings of text" 
----------------------------------------

public static String [] function (int start, int end) {
    int size = end - start;
    String [] array = new String [size];
    int counter = 0;
    for (int i = start;
    i < end; i ++) {
        if (i % 3 == 0 && i % 5 == 0) array [counter] = "FullName";
        else if (i % 3 == 0) array [counter] = "FirstName";
        else if (i % 5 == 0) array [counter] = "LastName";
        else array [counter] = Integer.toString (i);

        if (i < end - 1) array [counter] += " ";

        counter ++;
    }
    return array;
}
----------------------------------------

public static String [] function (int start, int end) {
    int size = end - start;
    String [] result = new String [size];
    System.out.println ("Name - ");
    for (int i = start;
    i <= end; i ++) {
        if (i % 3 == 0 && i % 5 == 0) {
            result [i - start] = "FullName ";
        } else if (i % 3 == 0) {
            result [i - start] = "FirstName ";
        } else if (i % 5 == 0) {
            result [i - start] = "LastName ";
        } else {
            result [i - start] = Integer.toString (i) + " ";
        }

    }
    System.out.println (Arrays.toString (result));
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16746419_16746464_1_12
16746419_16746467_6_17
Title: Need some guidance with while expression 
----------------------------------------

public static void main (String [] args) {
    String start;
    System.out.print ("Welcome to Hangman!");
    System.out.println ("Type start to begin!");
    Scanner myScanner = new Scanner (System.in);
    start = myScanner.nextLine ();
    if (start.equals ("start")) {
        System.out.println ("User said 'start'");
    } else {
        System.out.println ("This isn't 'start' :-(");
    }
}
----------------------------------------

public static void main (String [] args) {
    String start;
    System.out.print ("Welcome to Hangman!");
    System.out.println ("Type start to begin!");
    Scanner myScanner = new Scanner (System.in);
    start = myScanner.next ();
    while (! "start".equals (start)) {
        System.out.println ("You must type start to begin!");
        start = myScanner.next ();
    }
    System.out.println ("Thanks for typing start!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16747485_16747551_13_28
16747485_16747654_8_21
Title: C/C++ struct analogy in Java? 
----------------------------------------

public static main (String [] args) {
    People [] p = new People [10];
    for (int i = 0;
    i < 10; i ++) {
        p [i] = new People ();
    }
    people [0].age = 15;
    people [0].height = 1.60;
    people [0].weight = 65;
}
----------------------------------------

public static void main (String [] args) {
    java.util.Random r = new java.util.Random ();
    for (int i = 0;
    i < 10; ++ i) {
        people [i] = new Person ();
        people [i].height = r.nextInt (7);
        people [i].weight = r.nextInt (80);
        people [i].age = r.nextInt (100);
    }
    for (int i = 0;
    i < 10; ++ i) {
        System.out.printf (" %f %f %d\n", people [i].height, people [i].weight, people [i].age);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16747951_16802688_118_129
16747951_16802688_88_96
Title: Stretching Polygon to other Polygon with Java 
----------------------------------------

public void changed (ObservableValue < ? extends Boolean > observable, Boolean wasSelected, Boolean selected) {
    if (! perspectiveToggle.isSelected ()) {
        perspectiveToggle.fire ();
    }
    if (selected) {
        distorter.setRate (1);
        distorter.play ();
    } else {
        distorter.setRate (- 1);
        distorter.play ();
    }
}
----------------------------------------

public void changed (ObservableValue < ? extends Boolean > observable, Boolean wasSelected, Boolean selected) {
    if (selected) {
        perspectiveTransform.setUry (URY);
        perspectiveTransform.setLry (LRY);
        group.setEffect (perspectiveTransform);
    } else {
        group.setEffect (null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16749841_16749881_1_20
16749841_16750878_1_25
Title: String tokenizer to array java 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    String line;
    int x = 0;
    String [] cName = new String [100];
    String [] cMascot = new String [100];
    String [] cAlias = new String [100];
    try (BufferedReader input = new BufferedReader (new FileStreamReader ("test.txt"))) {
        while ((line = input.readLine ()) != null) {
            cName [x] = line.split (",") [0];
            cMascot [x] = line.split (",") [1];
            cAlias [x] = line.split (",") [2];
            x ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner input;
    String line;
    String cMascot = null;
    String cAlias = null;
    String cName = null;
    input = new Scanner (new File ("test.txt"));
    while (input.hasNextLine ()) {
        line = input.nextLine ();
        StringTokenizer strings = new StringTokenizer (line, ",");
        while (strings.hasMoreElements ()) {
            cName = strings.nextToken ();
            cMascot = strings.nextToken ();
            cAlias = strings.nextToken ();
            System.out.println ("cName :" + cName);
            System.out.println ("cMascot :" + cMascot);
            System.out.println ("cAlias :" + cAlias);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16755830_16755933_35_84
16755830_16755933_94_124
Title: How to terminate program upon pressing ESCAPE? 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
    }
    JPanel buttons = new JPanel ();
    final JButton type = new JButton ("Start");
    type.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            textArea.requestFocusInWindow ();
            if (keyTask == null) {
                type.setText ("Stop");
                keyTask = new KeyTask ();
                new Thread (keyTask).start ();
            } else {
                keyTask.stop ();
                keyTask = null;
                type.setText ("Start");
            }
        }}

    );
    JButton close = new JButton (new CloseAction ());
    InputMap im = close.getInputMap (JButton.WHEN_IN_FOCUSED_WINDOW);
    ActionMap am = close.getActionMap ();
    im.put (KeyStroke.getKeyStroke (KeyEvent.VK_ESCAPE, 0), "escape");
    am.put ("escape", new CloseAction ());
    buttons.add (type);
    buttons.add (close);
    textArea = new JTextArea (10, 20);
    textArea.setWrapStyleWord (true);
    textArea.setLineWrap (true);
    JFrame frame = new JFrame ("Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLayout (new BorderLayout ());
    frame.add (new JScrollPane (textArea));
    frame.add (buttons, BorderLayout.SOUTH);
    frame.getRootPane ().setDefaultButton (close);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    try {
        Robot bot = new Robot ();
        bot.setAutoDelay (40);
        while (keepRuning) {
            bot.keyPress (KeyEvent.VK_SHIFT);
            type (bot, KeyEvent.VK_S);
            bot.keyRelease (KeyEvent.VK_SHIFT);
            type (bot, KeyEvent.VK_W);
            type (bot, KeyEvent.VK_I);
            type (bot, KeyEvent.VK_N);
            type (bot, KeyEvent.VK_G);
            type (bot, KeyEvent.VK_SPACE);
            type (bot, KeyEvent.VK_I);
            type (bot, KeyEvent.VK_S);
            type (bot, KeyEvent.VK_SPACE);
            type (bot, KeyEvent.VK_A);
            type (bot, KeyEvent.VK_W);
            type (bot, KeyEvent.VK_E);
            type (bot, KeyEvent.VK_S);
            type (bot, KeyEvent.VK_O);
            type (bot, KeyEvent.VK_M);
            type (bot, KeyEvent.VK_E);
            type (bot, KeyEvent.VK_PERIOD);
            type (bot, KeyEvent.VK_PERIOD);
            type (bot, KeyEvent.VK_PERIOD);
        }
    } catch (AWTException exp) {
        exp.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16756915_16757242_1_15
16756915_16758416_1_13
Title: Can we execute the AsyncTask in onPostExecute()? 
----------------------------------------

@Override
protected String doInBackground (URL...url) {
    String docString = downloadHTML (url [0].toString ());
    if (docString.equals ("error")) {
        docString = downloadHTML ("http://stackoverflow.com");
    }
    if (docString.equals ("error")) {
        docString = downloadHTML ("http://google.com");
    }
    return docString;
}
----------------------------------------

protected String doInBackground (URL...urls) {
    int count = urls.length;
    for (int i = 0;
    i < count; i ++) {
        try {
            Document d = Jsoup.connect (urls [i].toString ()).timeout (0).get ();
            String docString = d.toString ();
            return docString;
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    return "error";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1676187_1676829_25_38
1676187_1676829_69_78
Title: Why is paint()/paintComponent() never called? 
----------------------------------------

public List < Image > doInBackground () throws InterruptedException {
    Thread.sleep (1000);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            frame.setTitle ("Loading images");
        }}

    );
    Thread.sleep (1000);
    return loadImages ();
}
----------------------------------------

public List < Image > doInBackground () throws InterruptedException {
    Thread.sleep (1000);
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            frame.setTitle ("Setting background");
        }}

    );
    Thread.sleep (1000);
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16762124_16763315_15_25
16762124_16763315_27_64
Title: Java: How to implement Tree structure similar to eclipse package explorer Tree 
----------------------------------------

public void print (String [] strings) {
    int maxDepth = 0;
    for (String string : strings) {
        int currentDepth = string.split ("\\.").length;
        if (currentDepth > maxDepth) {
            maxDepth = currentDepth;
        }
    }
    this.print (strings, "", 0, maxDepth);
}
----------------------------------------

public void print (String [] strings, String start, int currentDepth, int maxDepth) {
    if (currentDepth == maxDepth - 1) {
        return;
    }
    String currentPrint = null;
    ArrayList < String > candidates = new ArrayList < String > ();
    for (String s : strings) {
        if (! s.startsWith (start)) {
            continue;
        }
        String [] split = s.split ("\\.");
        if (split.length - 1 < currentDepth) {
            continue;
        }
        if (currentPrint == null) {
            currentPrint = split [currentDepth];
            candidates.add (currentPrint);
            continue;
        }
        if (! currentPrint.equals (split [currentDepth])) {
            currentPrint = split [currentDepth];
            candidates.add (currentPrint);
        }
    }
    currentDepth ++;
    for (String c : candidates) {
        this.printSpaces (currentDepth - 1);
        System.out.println (c);
        this.print (strings, start + c + ".", currentDepth, maxDepth);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16772698_16813456_54_63
16772698_16813456_90_99
Title: Dynamic Time Series Stacked Area Chart in Java 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String cmd = e.getActionCommand ();
    if (STOP.equals (cmd)) {
        timer.stop ();
        run.setText (START);
    } else {
        timer.start ();
        run.setText (STOP);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    TimePeriod period = new Second ();
    dataset.add (period, randomValue (), SERIES1);
    dataset.add (period, randomValue (), SERIES2);
    if (dataset.getItemCount () > COUNT) {
        TimePeriod firstItemTime = dataset.getTimePeriod (0);
        dataset.remove (firstItemTime, SERIES1);
        dataset.remove (firstItemTime, SERIES2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16775443_16775752_1_12
16775443_16775888_30_42
Title: JTextField not working as it should 
----------------------------------------

public static void main (String...args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            Calculator calcFrame = new Calculator ();
            calcFrame.setSize (330, 400);
            calcFrame.setVisible (true);
            calcFrame.setResizable (false);
            calcFrame.createCalcGUI ();
        }}

    );
}
----------------------------------------

public static void main (String...args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            Calculator calcFrame = new Calculator ();
            calcFrame.createCalcGUI ();
            calcFrame.setResizable (false);
            calcFrame.pack ();
            calcFrame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16777869_30557053_162_171
16777869_34818620_206_225
Title: Java 7 WatchService - Ignoring multiple occurrences of the same event 
----------------------------------------

public static void main (String [] args) throws IOException, InterruptedException {
    FileWatcher watcher = new FileWatcher ();
    if (watcher.registerPath (Paths.get ("filename"), false, ENTRY_MODIFY, ENTRY_CREATE, ENTRY_DELETE)) {
        watcher.addFileListener ((path, eventKind) -> System.out.println (path + " -> " + eventKind.name ()));
        new Thread (watcher).start ();
        System.in.read ();
    }
    watcher.close ();
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    if (args == null || args.length == 0) {
        System.err.println ("You need to provide a path to watch!");
        System.exit (- 1);
    }
    Path p = Paths.get (args [0]);
    if (! Files.isDirectory (p)) {
        System.err.println (p + " is not a directory!");
        System.exit (- 1);
    }
    DirectoryWatcherService watcherService;
    try {
        watcherService = new DirectoryWatcherService (p, true);
        watcherService.start ();
    } catch (IOException e) {
        System.err.println (e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16777869_30557053_27_54
16777869_34818620_147_189
Title: Java 7 WatchService - Ignoring multiple occurrences of the same event 
----------------------------------------

public void run () {
    if (running.compareAndSet (false, true)) {
        while (running.get ()) {
            WatchKey key;
            try {
                key = service.take ();
            } catch (Throwable e) {
                break;
            }
            if (key.isValid ()) {
                r.lock ();
                try {
                    key.pollEvents ().stream ().filter (e -> e.kind () != OVERFLOW).forEach (e -> watchTargets.values ().stream ().filter (t -> t.isInterested (e)).forEach (t -> fireOnEvent (t.path, e.kind ())));
                } finally {
                    r.unlock ();
                }
                if (! key.reset ()) {
                    break;
                }
            }
        }
        running.set (false);
    }
}
----------------------------------------

public void run () {
    Thread thisThread = Thread.currentThread ();
    while (server == thisThread) {
        try {
            WatchKey key;
            try {
                key = watcher.take ();
            } catch (InterruptedException x) {
                return;
            }
            Path dir = keys.get (key);
            if (dir == null) {
                continue;
            }
            for (WatchEvent < ? > event : key.pollEvents ()) {
                WatchEvent.Kind < ? > kind = event.kind ();
                if (kind == OVERFLOW) {
                    continue;
                }
                if (kind == ENTRY_MODIFY) {
                    WatchEvent < Path > ev = (WatchEvent < Path >) event;
                    Path name = ev.context ();
                    Path child = dir.resolve (name);
                    String filename = child.toAbsolutePath ().toString ();
                    addFileToProcess (filename);
                }
            }
            key.reset ();
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16777869_34818620_109_122
16777869_40642145_28_50
Title: Java 7 WatchService - Ignoring multiple occurrences of the same event 
----------------------------------------

private void register (Path dir) throws IOException {
    WatchKey key = dir.register (watcher, ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY);
    if (trace) {
        Path prev = keys.get (key);
        if (prev == null) {
            System.out.format ("register: %s\n", dir);
        } else {
            if (! dir.equals (prev)) {
                System.out.format ("update: %s -> %s\n", prev, dir);
            }
        }
    }
    keys.put (key, dir);
}
----------------------------------------

private void register (Path directory) throws IOException {
    WatchKey watchKey = directory.register (watcher, ENTRY_MODIFY, ENTRY_CREATE, ENTRY_DELETE);
    addFileTimeStamps (directory);
    if (trace) {
        Path existingFilePath = keys.get (watchKey);
        if (existingFilePath == null) {
            System.out.format ("register: %s\n", directory);
        } else {
            if (! directory.equals (existingFilePath)) {
                System.out.format ("update: %s -> %s\n", existingFilePath, directory);
            }
        }
    }
    keys.put (watchKey, directory);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16777869_34818620_128_143
16777869_40642145_71_83
Title: Java 7 WatchService - Ignoring multiple occurrences of the same event 
----------------------------------------

private void registerAll (final Path start) throws IOException {
    Files.walkFileTree (start, new SimpleFileVisitor < Path > () {
        @Override
        public FileVisitResult preVisitDirectory (Path dir, BasicFileAttributes attrs) throws IOException {
            if (dir.getFileName ().toString ().startsWith (".")) {
                return FileVisitResult.SKIP_SUBTREE;
            }
            register (dir);
            return FileVisitResult.CONTINUE;
        }}

    );
}
----------------------------------------

private void registerAll (Path directory) throws IOException {
    Files.walkFileTree (directory, new SimpleFileVisitor < Path > () {
        @Override
        public FileVisitResult preVisitDirectory (Path currentDirectory, BasicFileAttributes attrs) throws IOException {
            register (currentDirectory);
            return FileVisitResult.CONTINUE;
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1678690_1678699_1_15
1678690_1678715_1_15
Title: What is a good way to implement choose notation in Java? 
----------------------------------------

public static BigInteger choose (int x, int y) {
    if (y < 0 || y > x) return BigInteger.ZERO;

    if (y == 0 || y == x) return BigInteger.ONE;

    BigInteger answer = BigInteger.ONE;
    for (int i = x - y + 1;
    i <= x; i ++) {
        answer = answer.multiply (BigInteger.valueOf (i));
    }
    for (int j = 1;
    j <= y; j ++) {
        answer = answer.divide (BigInteger.valueOf (j));
    }
    return answer;
}
----------------------------------------

public static double choose (int x, int y) {
    if (y < 0 || y > x) return 0;

    if (y > x / 2) {
        y = x - y;
    }
    double denominator = 1.0, numerator = 1.0;
    for (int i = 1;
    i <= y; i ++) {
        denominator *= i;
        numerator *= (x + 1 - i);
    }
    return numerator / denominator;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1679976_1680066_1_32
1679976_1680142_1_13
Title: How to interleave a String with a character sequence 
----------------------------------------

public static String interleave (String string, int interval, String separator, boolean fromRight) {
    char [] src = string.toCharArray ();
    char [] sep = separator.toCharArray ();
    int count = (src.length - 1) / interval;
    char [] dst = new char [src.length + count * sep.length];
    int srcpos = 0, dstpos = 0;
    if (fromRight) {
        srcpos = dstpos = src.length - count * interval;
        if (srcpos > 0) System.arraycopy (src, 0, dst, 0, srcpos);

        if (count > 0) {
            System.arraycopy (sep, 0, dst, dstpos, sep.length);
            dstpos += sep.length;
            count --;
        }
    }
    for (int i = 0;
    i < count; i ++) {
        System.arraycopy (src, srcpos, dst, dstpos, interval);
        srcpos += interval;
        dstpos += interval;
        System.arraycopy (sep, 0, dst, dstpos, sep.length);
        dstpos += sep.length;
    }
    if (dstpos < dst.length) {
        System.arraycopy (src, srcpos, dst, dstpos, dst.length - dstpos);
    }
    return String.valueOf (dst);
}
----------------------------------------

public static String interleave (String input, int interval, String sep) {
    StringBuilder sb = new StringBuilder (input.length () + (((input.length () - 1) / interval) * sep.length ()));
    char [] array = input.toCharArray ();
    for (int i = 0;
    i < array.length; i += interval) {
        int span = i + interval;
        for (int j = i;
        j < Math.min (span, array.length); j ++) {
            sb.append (array [j]);
        }
        if (span < array.length) sb.append (sep);

    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1679976_1680066_1_32
1679976_1680145_1_16
Title: How to interleave a String with a character sequence 
----------------------------------------

public static String interleave (String string, int interval, String separator, boolean fromRight) {
    char [] src = string.toCharArray ();
    char [] sep = separator.toCharArray ();
    int count = (src.length - 1) / interval;
    char [] dst = new char [src.length + count * sep.length];
    int srcpos = 0, dstpos = 0;
    if (fromRight) {
        srcpos = dstpos = src.length - count * interval;
        if (srcpos > 0) System.arraycopy (src, 0, dst, 0, srcpos);

        if (count > 0) {
            System.arraycopy (sep, 0, dst, dstpos, sep.length);
            dstpos += sep.length;
            count --;
        }
    }
    for (int i = 0;
    i < count; i ++) {
        System.arraycopy (src, srcpos, dst, dstpos, interval);
        srcpos += interval;
        dstpos += interval;
        System.arraycopy (sep, 0, dst, dstpos, sep.length);
        dstpos += sep.length;
    }
    if (dstpos < dst.length) {
        System.arraycopy (src, srcpos, dst, dstpos, dst.length - dstpos);
    }
    return String.valueOf (dst);
}
----------------------------------------

public static String interleave (String s, int interval, String separator) {
    StringBuffer b = new StringBuffer ();
    int length = s.length ();
    for (int start = 0;
    start < length - 1; start += interval) {
        int end = Math.min (length, start + interval);
        b.append (s.substring (start, end));
        b.append (separator);
    }
    if (length % interval > 0) {
        b.append (s.substring (length - (length % interval)));
    }
    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1679976_1680142_1_13
1679976_1680145_1_16
Title: How to interleave a String with a character sequence 
----------------------------------------

public static String interleave (String input, int interval, String sep) {
    StringBuilder sb = new StringBuilder (input.length () + (((input.length () - 1) / interval) * sep.length ()));
    char [] array = input.toCharArray ();
    for (int i = 0;
    i < array.length; i += interval) {
        int span = i + interval;
        for (int j = i;
        j < Math.min (span, array.length); j ++) {
            sb.append (array [j]);
        }
        if (span < array.length) sb.append (sep);

    }
    return sb.toString ();
}
----------------------------------------

public static String interleave (String s, int interval, String separator) {
    StringBuffer b = new StringBuffer ();
    int length = s.length ();
    for (int start = 0;
    start < length - 1; start += interval) {
        int end = Math.min (length, start + interval);
        b.append (s.substring (start, end));
        b.append (separator);
    }
    if (length % interval > 0) {
        b.append (s.substring (length - (length % interval)));
    }
    return b.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16802794_16802875_5_20
16802794_16805461_3_34
Title: Java Scanner Read from File 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner s = null;
    try {
        s = new Scanner (new BufferedReader (new FileReader ("xanadu.txt")));
        while (s.hasNext ()) {
            System.out.println (s.next ());
        }
    } finally {
        if (s != null) {
            s.close ();
        }
    }
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    System.out.println ("##### Starting main method...");
    String [] strArr = new String [100];
    int size = 0;
    try {
        Scanner scFile = new Scanner (new File ("Names1.txt"));
        while (scFile.hasNext ()) {
            strArr [size] = scFile.next ();
            size ++;
        }
        System.out.println ("##### Finished scan.  Found %d tokens.", size);
    } catch (FileNotFoundException e) {
        System.err.println ("FileNotFoundException: " + e.getMessage ());
    } catch (Exception e) {
        System.err.println ("Exception: " + e.getMessage ());
        e.printStackTrace ();
    } finally {
        if (scFile != null) {
            scFile.close ();
            System.out.println ("##### Closed scanner.");
        }
    }
    System.out.println ("##### Printing tokens...");
    for (int i = 0;
    i < size; i ++) {
        System.out.print (strArr [i] + " ");
    }
    System.out.println ("");
    System.out.println ("##### Exiting main.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1682784_1683075_1_11
1682784_1683177_3_26
Title: How can I compare null values using Comparator? 
----------------------------------------

public int compare (Object o1, Object o2) throws ClassNotFoundException {
    String [] supportedClasses = {"String", "Double", "Integer"};
    String j = "java.lang.";
    for (String s : supportedClasses) {
        if (Class.forName (j + s).isInstance (o1) && Class.forName (j + s).isInstance (o1)) {
            return ((Comparable) o1).compareTo ((Comparable) o2);
        }
    }
    throw new ClassNotFoundException ("Not a supported Class");
}
----------------------------------------

public int compare (String s1, String s2) {
    final Double i1;
    final Double i2;
    if (s1 == null) {
        throw new NullPointerException ("s1 is null");
    }
    try {
        i1 = Double.parseDouble (s1)
    } catch (NumberFormatException e) {
        throw new ClassCastException ("s1 incorrect format");
    }
    if (s2 == null) {
        throw new NullPointerException ("s2 is null");
    }
    try {
        i2 = Double.parseDouble (s1)
    } catch (NumberFormatException e) {
        throw new ClassCastException ("s2 incorrect format");
    }
    return i1.compareTo (i2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16833767_16935454_3_51
16833767_47673106_3_26
Title: Edit Microsoft-office .doc file in java using Apache POI 
----------------------------------------

public static void main (String [] args) {
    XWPFDocument document = new XWPFDocument ();
    XWPFParagraph paragraphOne = document.createParagraph ();
    paragraphOne.setAlignment (ParagraphAlignment.CENTER);
    paragraphOne.setBorderBottom (Borders.SINGLE);
    paragraphOne.setBorderTop (Borders.SINGLE);
    paragraphOne.setBorderRight (Borders.SINGLE);
    paragraphOne.setBorderLeft (Borders.SINGLE);
    paragraphOne.setBorderBetween (Borders.SINGLE);
    XWPFRun paragraphOneRunOne = paragraphOne.createRun ();
    paragraphOneRunOne.setBold (true);
    paragraphOneRunOne.setItalic (true);
    paragraphOneRunOne.setText ("Hello world! This is paragraph one!");
    paragraphOneRunOne.addBreak ();
    XWPFRun paragraphOneRunTwo = paragraphOne.createRun ();
    paragraphOneRunTwo.setText ("Run two!");
    paragraphOneRunTwo.setTextPosition (100);
    XWPFRun paragraphOneRunThree = paragraphOne.createRun ();
    paragraphOneRunThree.setStrike (true);
    paragraphOneRunThree.setFontSize (20);
    paragraphOneRunThree.setSubscript (VerticalAlign.SUBSCRIPT);
    paragraphOneRunThree.setText (" More text in paragraph one...");
    XWPFParagraph paragraphTwo = document.createParagraph ();
    paragraphTwo.setAlignment (ParagraphAlignment.DISTRIBUTE);
    paragraphTwo.setIndentationRight (200);
    XWPFRun paragraphTwoRunOne = paragraphTwo.createRun ();
    paragraphTwoRunOne.setText ("And this is paragraph two.");
    FileOutputStream outStream = null;
    try {
        outStream = new FileOutputStream (args [0]);
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    }
    try {
        document.write (outStream);
        outStream.close ();
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String filename = "path to input file/file_input_name";
    List < String > paraList = new ArrayList < String > ();
    try {
        XWPFDocument doc = new XWPFDocument (OPCPackage.open (new FileInputStream (filename)));
        List < XWPFParagraph > paragraphList = doc.getParagraphs ();
        for (XWPFParagraph para : paragraphList) {
            if ((para.getStyle () != null) && (para.getNumFmt () != null)) {
                for (XWPFRun run : para.getRuns ()) {
                    String text = run.text ();
                    text = text.replaceAll (text, "replacement" + text);
                    run.setText (text, 0);
                }
            }
        }
        doc.write (new FileOutputStream ("path to your file/output_File_name"));
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16849813_16849885_1_17
16849813_47116824_1_19
Title: Count Character Consecutively in Java 
----------------------------------------

public int countRun (String s, char c) {
    int counter = 0;
    boolean foundOne = false;
    for (int i = 0;
    i < s.length (); i ++) {
        if (s.charAt (i) == c) {
            counter += 1;
            foundOne = true;
        } else {
            if (foundOne) break;

        }
    }
    return counter;
}
----------------------------------------

public static int countRun (String s, char c) {
    int [] counts = new int [256];
    int count = 0;
    char currChar;
    for (int i = 0;
    i < s.length (); i ++) {
        currChar = s.charAt (i);
        if (currChar == c) {
            counts [c] ++;
        } else if (Character.isSpaceChar (currChar)) {
            counts [c] = 0;
        } else {
            if (counts [c] > 0) {
                count = counts [c];
                return count;
            }
        }

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16850327_16850408_1_17
16850327_16850449_1_10
Title: Unable to catch the exception 
----------------------------------------

public void updateProduct (Product product) throws ProductNotFoundException {
    Iterator < Product > it = allProducts.iterator ();
    Product p = null;
    if (! allProducts.isEmpty ()) {
        while (it.hasNext ()) {
            p = it.next ();
            if (p.getId () == product.getId ()) {
                p.setPrice (product.getPrice ());
                System.out.println ("Successfully updated the product " + product.getId ());
                return;
            }
        }
    }
    throw new ProductNotFoundException (product.getName ());
}
----------------------------------------

public void updateProduct (Product product) throws ProductNotFoundException {
    for (Product existing : allProducts) {
        if (existing.getId () == product.getId ()) {
            existing.setPrice (product.getPrice ());
            return;
        }
    }
    System.out.println ("No such product " + product.getId ());
    throw new ProductNotFoundException (product.getName ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16850327_16850449_1_10
16850327_16850493_1_20
Title: Unable to catch the exception 
----------------------------------------

public void updateProduct (Product product) throws ProductNotFoundException {
    for (Product existing : allProducts) {
        if (existing.getId () == product.getId ()) {
            existing.setPrice (product.getPrice ());
            return;
        }
    }
    System.out.println ("No such product " + product.getId ());
    throw new ProductNotFoundException (product.getName ());
}
----------------------------------------

public void updateProduct (Product product) throws ProductNotFoundException {
    Iterator < Product > it = allProducts.iterator ();
    Product p = null;
    if (! allProducts.isEmpty ()) {
        while (it.hasNext ()) {
            p = it.next ();
            if (p.getId () == product.getId ()) {
                p.setPrice (product.getPrice ());
                System.out.println ("Successfully updated the product " + product.getId ());
            }
        }
    }
    if (p == null) {
        System.out.println ("No such product " + product.getId ());
        throw new ProductNotFoundException (product.getName ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16869622_16869639_1_18
16869622_16869680_1_15
Title: how to accept string array in java using bufferedreader 
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    r = new int [40];
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        try {
            name [i] = ab.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        try {
            name [i] = ab.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16869622_16869639_1_18
16869622_16869738_1_14
Title: how to accept string array in java using bufferedreader 
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    r = new int [40];
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        try {
            name [i] = ab.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public static void accept_name (String [] name, int [] r) throws IOException {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    r = new int [40];
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        name [i] = ab.readLine ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16869622_16869680_1_15
16869622_16869738_1_14
Title: how to accept string array in java using bufferedreader 
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        try {
            name [i] = ab.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public static void accept_name (String [] name, int [] r) throws IOException {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    r = new int [40];
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        name [i] = ab.readLine ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16869622_16869680_1_15
16869622_16869766_1_17
Title: how to accept string array in java using bufferedreader 
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        try {
            name [i] = ab.readLine ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        try {
            InputStreamReader isr = new InputStreamReader (System.in);
            BufferedReader ab = new BufferedReader (isr);
            System.out.println ("Enter the name of students");
            name [i] = ab.readLine ();
            ab.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16869622_16869738_1_14
16869622_16869766_1_17
Title: how to accept string array in java using bufferedreader 
----------------------------------------

public static void accept_name (String [] name, int [] r) throws IOException {
    InputStreamReader isr = new InputStreamReader (System.in);
    BufferedReader ab = new BufferedReader (isr);
    r = new int [40];
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        System.out.println ("Enter the name of students");
        name [i] = ab.readLine ();
    }
}
----------------------------------------

public static void accept_name (String [] name, int [] r) {
    name = new String [40];
    for (int i = 0;
    i < 40; i ++) {
        try {
            InputStreamReader isr = new InputStreamReader (System.in);
            BufferedReader ab = new BufferedReader (isr);
            System.out.println ("Enter the name of students");
            name [i] = ab.readLine ();
            ab.close ();
        } catch (IOException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16885043_16885187_6_25
16885043_16886375_3_37
Title: Sorting a 2D array in java (Sorting all letters) 
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    List < String > list = new ArrayList < String > ();
    for (String [] row : rows) {
        for (String s : row) {
            list.add (s);
        }
    }
    Collections.sort (list);
}
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    Map < Character, Integer > cnts = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < rows.length; i ++) {
        for (int j = 0;
        j < rows [i].length; j ++) {
            Character c = rows [i] [j].charAt (0);
            Integer cnt = cnts.get (c);
            int cc = 0;
            if (cnt != null) {
                cc = cnt;
            }
            cc ++;
            cnts.put (c, cc);
        }
    }
    Set < Character > st = cnts.keySet ();
    prnt (rows);
    int sz = st.size ();
    Iterator < Character > it = st.iterator ();
    System.out.println ("------\nCounts\n");
    while (it.hasNext ()) {
        Character c = it.next ();
        System.out.println (c + " " + cnts.get (c));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16885043_16885187_6_25
16885043_16886576_3_46
Title: Sorting a 2D array in java (Sorting all letters) 
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    List < String > list = new ArrayList < String > ();
    for (String [] row : rows) {
        for (String s : row) {
            list.add (s);
        }
    }
    Collections.sort (list);
}
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    prnt (rows);
    List < ArrayDatum > dat = new ArrayList < ArrayDatum > ();
    for (int i = 0;
    i < rows.length; i ++) {
        for (int j = 0;
        j < rows [i].length; j ++) {
            ArrayDatum < String > dt = new ArrayDatum < String > (rows [i] [j], i, j);
            dat.add (dt);
        }
    }
    Cmpr cmpr = new Cmpr ();
    Collections.sort (dat, cmpr);
    int sz = dat.size ();
    System.out.println ("------\nsort\n");
    for (int i = 0;
    i < sz; i ++) {
        System.out.print (dat.get (i).getData () + " ");
    }
    int loc = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16885043_16886375_3_37
16885043_16886576_3_46
Title: Sorting a 2D array in java (Sorting all letters) 
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    Map < Character, Integer > cnts = new HashMap < Character, Integer > ();
    for (int i = 0;
    i < rows.length; i ++) {
        for (int j = 0;
        j < rows [i].length; j ++) {
            Character c = rows [i] [j].charAt (0);
            Integer cnt = cnts.get (c);
            int cc = 0;
            if (cnt != null) {
                cc = cnt;
            }
            cc ++;
            cnts.put (c, cc);
        }
    }
    Set < Character > st = cnts.keySet ();
    prnt (rows);
    int sz = st.size ();
    Iterator < Character > it = st.iterator ();
    System.out.println ("------\nCounts\n");
    while (it.hasNext ()) {
        Character c = it.next ();
        System.out.println (c + " " + cnts.get (c));
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] [] rows = {{"M", "O", "N", "K", "E", "Y"}, {"D", "O", "N", "K", "E", "Y"}, {"M", "A", "K", "E"}, {"M", "U", "C", "K", "Y"}, {"C", "O", "O", "K", "Y"},};
    prnt (rows);
    List < ArrayDatum > dat = new ArrayList < ArrayDatum > ();
    for (int i = 0;
    i < rows.length; i ++) {
        for (int j = 0;
        j < rows [i].length; j ++) {
            ArrayDatum < String > dt = new ArrayDatum < String > (rows [i] [j], i, j);
            dat.add (dt);
        }
    }
    Cmpr cmpr = new Cmpr ();
    Collections.sort (dat, cmpr);
    int sz = dat.size ();
    System.out.println ("------\nsort\n");
    for (int i = 0;
    i < sz; i ++) {
        System.out.print (dat.get (i).getData () + " ");
    }
    int loc = 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16889566_16889620_1_16
16889566_16889622_1_17
Title: Linked Lists does not print in Java 
----------------------------------------

public String toString () {
    if (head == null) {
        System.out.println ("The list is empty");
    }
    Node newTemp = head;
    String result = newTemp.toString ();
    newTemp = newTemp.getNextNode ();
    while (newTemp != head) {
        result += newTemp.toString ();
        newTemp = newTemp.getNextNode ();
    }
    return result;
}
----------------------------------------

public String toString () {
    if (head == null) {
        return "";
    }
    String result = "";
    Node temp = head;
    do {
        result += temp.toString ();
        temp = temp.getNextNode ();
    } while (head != tail && temp != head);
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16891792_16891873_7_28
16891792_16891978_7_29
Title: How to read pdf file and write it to outputStream 
----------------------------------------

public static void main (String [] args) {
    PDDocument pd;
    BufferedWriter wr;
    try {
        File input = new File ("C:\\Invoice.pdf");
        File output = new File ("C:\\SampleText.txt");
        pd = PDDocument.load (input);
        System.out.println (pd.getNumberOfPages ());
        System.out.println (pd.isEncrypted ());
        pd.save ("CopyOfInvoice.pdf");
        PDFTextStripper stripper = new PDFTextStripper ();
        wr = new BufferedWriter (new OutputStreamWriter (new FileOutputStream (output)));
        stripper.writeText (pd, wr);
        if (pd != null) {
            pd.close ();
        }
        wr.close ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File f = new File ("C:\\Documents and Settings\\abc\\Desktop\\abc.pdf");
    OutputStream oos = new FileOutputStream ("test.pdf");
    byte [] buf = new byte [8192];
    InputStream is = new FileInputStream (f);
    int c = 0;
    while ((c = is.read (buf, 0, buf.length)) > 0) {
        oos.write (buf, 0, c);
        oos.flush ();
    }
    oos.close ();
    System.out.println ("stop");
    is.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16894389_16894538_3_20
16894389_16894671_1_18
Title: Write to different file instead of overwriting file 
----------------------------------------

public static void main (String [] _) throws Exception {
    FileInputStream inFile = new FileInputStream ("test1.txt");
    FileOutputStream outFile = new FileOutputStream ("test2.txt");
    byte [] buffer = new byte [128];
    int count;
    while (- 1 != (count = inFile.read (buffer))) {
        for (int i = 0;
        i < count; ++ i) {
            buffer [i] = (byte) Character.toUpperCase (buffer [i]);
        }
        outFile.write (buffer, 0, count);
    }
    inFile.close ();
    outFile.close ();
}
----------------------------------------

public static void main (String args []) throws IOException {
    String source = "C:/sample.txt";
    String target = "C:/Test/";
    File sourceFile = new File (source);
    String name = sourceFile.getName ();
    File targetFile = new File (target + name);
    System.out.println ("Copying file : " + sourceFile.getName () + " from Java Program");
    FileUtils.copyFile (sourceFile, targetFile);
    System.out.println ("copying of file from Java program is completed");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16900567_16900722_1_17
16900567_16900773_1_16
Title: smallest to biggest number Difference - Java Arrays 
----------------------------------------

public static void main (String [] args) {
    int [] value = {5, 16, 3, 32};
    int lowest = 2147483647;
    int highest = 0;
    int diff = 0;
    for (int i = 0;
    i < value.length; i ++) {
        if (value [i] < lowest) {
            lowest = value [i];
        }
        if (value [i] > highest) {
            highest = value [i];
        }
    }
    diff = highest - lowest;
    system.out.println ("The difference is " + diff);
}
----------------------------------------

public static void main (String [] args) {
    int [] value = {5, 16, 3, 32};
    int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
    for (final int val : value) {
        if (val < min) min = val;

        if (val > max) max = val;

    }
    System.out.println ("diff is " + (max - min));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16912056_16912389_1_13
16912056_16912424_1_12
Title: Can I make this function more efficient (Project Euler Number 9)? 
----------------------------------------

public static int specPyth (int num) {
    double a;
    for (int b = 1;
    b < num / 2; b ++) {
        a = (num * num / 2 - num * b) / (num - b);
        if (a % 1 == 0) return (int) (a * b * (num - a - b));

    }
    return - 1;
}
----------------------------------------

int specPyth (int num) {
    for (int a = 1;
    a < num / 3; a ++) for (int b = a + 1;
    b < num / 2; b ++) {
        int c = num - a - b;
        if (a * a + b * b == c * c) return a * b * c;

    }

    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1691664_1691743_5_23
1691664_1692042_16_30
Title: Table like java data structure 
----------------------------------------

public static void main (String args []) {
    Object [] data = new Object [4];
    data [0] = new Integer [] {45, 5, 7};
    data [1] = new Integer [] {33, 1, 6};
    data [2] = new Integer [] {31, 0, 9};
    data [3] = new Integer [] {12, 8, 2};
    ColumnComparator cc = new ColumnComparator (0);
    Arrays.sort (data, cc);
    for (Object row : data) {
        Integer [] theRow = (Integer []) row;
        System.out.println (Arrays.asList (theRow));
    }
}
----------------------------------------

public static void main (String [] args) {
    Row r1 = new Row (45, 5, 7);
    Row r2 = new Row (33, 1, 6);
    Row r3 = new Row (31, 0, 9);
    Row r4 = new Row (12, 8, 2);
    Map < Integer, Row > map = new TreeMap < Integer, Row > ();
    map.put (r1.sij, r1);
    map.put (r2.sij, r2);
    map.put (r3.sij, r3);
    map.put (r4.sij, r4);
    for (Row row : map.values ()) {
        System.out.println ("sij: " + row.sij + " i: " + row.i + " j: " + row.j);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16921646_16921765_1_16
16921646_23216347_76_91
Title: How to find the differences from 2 ArrayLists of Strings? 
----------------------------------------

public static void main (String [] args) {
    String [] A1 = {"Rettangolo", "Quadrilatero", "Rombo", "Quadrato"};
    ArrayList < String > a1 = new ArrayList (Arrays.asList (A1));
    String [] A2 = {"Rettangolo", "Rettangolo", "Rombo", "Quadrato"};
    ArrayList < String > a2 = new ArrayList (Arrays.asList (A2));
    System.out.println ("a1 = " + a1);
    System.out.println ("a2 = " + a2);
    for (String s : a1) a2.remove (s);

    System.out.println ("a1 = " + a1);
    System.out.println ("a2 = " + a2);
}
----------------------------------------

public static void main (String args []) {
    String [] arr1 = {"london", "newyork", "delhi", "singapore", "tokyo", "amsterdam"};
    String [] arr2 = {"london", "newyork", "delhi", "singapore", "seoul", "bangalore", "oslo"};
    ListDiff < String > ld = ListUtil.diff (Arrays.asList (arr1), Arrays.asList (arr2));
    System.out.println (ld.getRemoved ());
    System.out.println (ld.getAdded ());
    ld = ListUtil.diff (Arrays.asList (arr1), Arrays.asList (arr2), new Comparator < String > () {
        public int compare (String o1, String o2) {
            return o1.compareTo (o2);
        }}

    );
    System.out.println (ld.getRemoved ());
    System.out.println (ld.getAdded ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16921646_23216347_32_74
16921646_23216347_8_30
Title: How to find the differences from 2 ArrayLists of Strings? 
----------------------------------------

public static < T > ListDiff < T > diff (List < T > one, List < T > two, Comparator < T > comparator) {
    List < T > removed = new ArrayList < T > ();
    List < T > added = new ArrayList < T > ();
    for (int i = 0;
    i < one.size (); i ++) {
        T elementOne = one.get (i);
        boolean found = false;
        for (int j = 0;
        j < two.size (); j ++) {
            T elementTwo = two.get (j);
            if (comparator.compare (elementOne, elementTwo) == 0) {
                found = true;
                break;
            }
        }
        if (found == false) {
            removed.add (elementOne);
        }
    }
    for (int i = 0;
    i < two.size (); i ++) {
        T elementTwo = two.get (i);
        boolean found = false;
        for (int j = 0;
        j < one.size (); j ++) {
            T elementOne = one.get (j);
            if (comparator.compare (elementTwo, elementOne) == 0) {
                found = true;
                break;
            }
        }
        if (found == false) {
            added.add (elementTwo);
        }
    }
    return new ListDiff < T > (removed, added);
}
----------------------------------------

public static < T > ListDiff < T > diff (List < T > one, List < T > two) {
    List < T > removed = new ArrayList < T > ();
    List < T > added = new ArrayList < T > ();
    for (int i = 0;
    i < one.size (); i ++) {
        T elementOne = one.get (i);
        if (! two.contains (elementOne)) {
            removed.add (elementOne);
        }
    }
    for (int i = 0;
    i < two.size (); i ++) {
        T elementTwo = two.get (i);
        if (! one.contains (elementTwo)) {
            added.add (elementTwo);
        }
    }
    return new ListDiff < T > (removed, added);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16927103_16927193_1_11
16927103_16950943_1_15
Title: OnClickListener in Android Studio 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Button button = (Button) findViewById (R.id.standingsButton);
    button.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            startActivity (new Intent (MainActivity.this, StandingsActivity.class));
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_newarea);
    btnSave = (Button) findViewById (R.id.btnSave);
    OnClickListener btnListener = new OnClickListener () {
        @Override
        public void onClick (android.view.View view) {
            finish ();
        }}

    ;
    btnSave.setOnClickListener (btnListener);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16933619_16934137_54_77
16933619_16934137_83_97
Title: One logger for Android and for regular Java 
----------------------------------------

public static void error (String logString, Exception e) {
    error (logString);
    if (e != null) {
        StackTraceElement [] elements = null;
        elements = e.getStackTrace ();
        if (elements != null) {
            StringBuffer strBuffer = new StringBuffer ("");
            for (int i = 0;
            i < elements.length; i ++) {
                strBuffer.append (elements [i]).append ("\n");
            }
            error ("Stack Trace :: \n" + strBuffer.toString ());
            strBuffer = null;
        }
        elements = null;
    }
}
----------------------------------------

public static void error (String logString, Object [] messages) {
    error (logString);
    if (messages != null) {
        StringBuffer strBuffer = new StringBuffer ("");
        for (int i = 0;
        i < messages.length; i ++) {
            strBuffer.append (messages [i]).append ("\n");
        }
        error (strBuffer.toString ());
        strBuffer = null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16946017_16946233_8_32
16946017_16946401_1_28
Title: Simple 2D array throwing exception 
----------------------------------------

public static void main (String [] arg) {
    int arr [] [] = new int [2] [3];
    int sums [] = new int [3];
    arr [0] [0] = 4;
    arr [0] [1] = 2;
    arr [0] [2] = 5;
    arr [1] [0] = 5;
    arr [1] [1] = 2;
    arr [1] [2] = 6;
    for (int i = 0;
    i < 2; i ++) {
        int sum = 0;
        for (int j = 0;
        j < 3; j ++) {
            System.out.print (arr [i] [j] + " ");
            sum += arr [i] [j];
        }
        System.out.println ();
        sums [i] = sum;
    }
    for (int i = 0;
    i < 3; i ++) {
        System.out.print (sums [i] + " ");
    }
}
----------------------------------------

public static void main (String [] args) {
    int arr [] [] = new int [2] [3];
    arr [0] [0] = 4;
    arr [0] [1] = 2;
    arr [0] [2] = 5;
    arr [1] [0] = 5;
    arr [1] [1] = 2;
    arr [1] [2] = 6;
    for (int i = 0;
    i < 2; i ++) {
        int sum = 0;
        System.out.println ("><![CDATA[>> i = " + i);
        for (int j = 0;
        j < 3; j ++) {
            System.out.println ("><![CDATA[>> j = " + j + "\n");
            System.out.print (arr [i] [j] + "\n");
            if (i < 1) {
                sum += arr [i] [j] + arr [i + 1] [j];
                System.out.print ("sum >> " + sum + "\n");
            }
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16948799_16948848_10_22
16948799_16949263_1_17
Title: Time difference in Java 
----------------------------------------

public static void main (String [] args) {
    SimpleDateFormat sdf = new SimpleDateFormat ("HH:mm:ss");
    try {
        Date start = sdf.parse ("00:44:16");
        Date end = sdf.parse ("04:02:39");
        long duration = end.getTime () - start.getTime ();
        Calendar cal = Calendar.getInstance ();
        cal.setTimeInMillis (duration);
        System.out.println (new SimpleDateFormat ("yyyy MM dd HH:mm:ss").format (cal.getTime ()));
    } catch (ParseException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) throws ParseException {
    SimpleDateFormat sdf = new SimpleDateFormat ("HH:mm:ss");
    Date start = sdf.parse ("00:44:16");
    Date end = sdf.parse ("04:02:39");
    long durationMs = end.getTime () - start.getTime ();
    final int oneHourMs = 3600000;
    final int oneMinuteMs = 60000;
    final int oneSecondMs = 1000;
    long hours = durationMs / oneHourMs;
    long minutes = (durationMs % oneHourMs) / oneMinuteMs;
    long seconds = (durationMs % oneMinuteMs) / oneSecondMs;
    System.out.format ("%02d:%02d:%02d", hours, minutes, seconds);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16949246_16949544_14_35
16949246_16949599_1_26
Title: How to split the values from multihashmap? 
----------------------------------------

public static void main (String [] args) {
    MultiHashMap mp = new MultiHashMap ();
    mp.put ("a", "10");
    mp.put ("a", "12");
    mp.put ("a", "11");
    mp.put ("b", "1");
    mp.put ("c", "14");
    mp.put ("e", "");
    mp.put ("b", "1");
    mp.put ("b", "2");
    mp.put ("b", "3");
    for (Object aSet : getSortedSet (mp)) {
        Map.Entry me = (Map.Entry) aSet;
        for (Object o : (List) me.getValue ()) {
            System.out.print (me.getKey ());
            System.out.print (": ");
            System.out.println (o);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    MultiHashMap mp = new MultiHashMap ();
    mp.put ("a", "10");
    mp.put ("a", "12");
    mp.put ("a", "11");
    mp.put ("b", "1");
    mp.put ("c", "14");
    mp.put ("e", "");
    mp.put ("b", "1");
    mp.put ("b", "2");
    mp.put ("b", "3");
    List list = null;
    Set set = mp.entrySet ();
    Iterator i = set.iterator ();
    while (i.hasNext ()) {
        Map.Entry < String, List < String > > me = (Map.Entry) i.next ();
        for (int j = 0;
        j < me.getValue ().size (); j ++) {
            System.out.println (me.getKey () + " : " + me.getValue ().get (j));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16959148_17973802_1_18
16959148_50131645_1_13
Title: Opensaml KeyInfo Configuration 
----------------------------------------

private KeyInfo getKeyInfo (final Credential c, final String keyName) {
    final SecurityConfiguration secConfiguration = Configuration.getGlobalSecurityConfiguration ();
    final NamedKeyInfoGeneratorManager namedKeyInfoGeneratorManager = secConfiguration.getKeyInfoGeneratorManager ();
    final KeyInfoGeneratorManager keyInfoGeneratorManager = namedKeyInfoGeneratorManager.getDefaultManager ();
    final KeyInfoGeneratorFactory keyInfoGeneratorFactory = keyInfoGeneratorManager.getFactory (c);
    final KeyInfoGenerator keyInfoGenerator = keyInfoGeneratorFactory.newInstance ();
    KeyInfo keyInfo;
    keyInfo = keyInfoGenerator.generate (c);
    KeyInfoHelper.addKeyName (keyInfo, keyName);
    return keyInfo;
}
----------------------------------------

private KeyInfo getKeyInfo (Credential c, String keyNameValue) {
    KeyName keyName = new KeyNameBuilder ().buildObject ();
    keyName.setValue (keyNameValue);
    EncryptionConfiguration secConfiguration = SecurityConfigurationSupport.getGlobalEncryptionConfiguration ();
    NamedKeyInfoGeneratorManager namedKeyInfoGeneratorManager = secConfiguration.getDataKeyInfoGeneratorManager ();
    KeyInfoGeneratorManager keyInfoGeneratorManager = namedKeyInfoGeneratorManager.getDefaultManager ();
    KeyInfoGeneratorFactory keyInfoGeneratorFactory = keyInfoGeneratorManager.getFactory (credential);
    KeyInfoGenerator keyInfoGenerator = keyInfoGeneratorFactory.newInstance ();
    KeyInfo keyInfo = keyInfoGenerator.generate (credential);
    keyInfo.getKeyNames ().add (keyName);
    keyInfo.getX509Datas ().clear ();
    return keyInfo;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16960608_16962037_10_63
16960608_16962037_29_39
Title: Stage is hidden when dialog is shown 
----------------------------------------

public void handle (final WindowEvent event) {
    event.consume ();
    final Stage dialog = new Stage ();
    final Button okBtn = new Button ("Yes");
    okBtn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (final ActionEvent event) {
            dialog.close ();
            primaryStage.close ();
        }}

    );
    final Button cancelBtn = new Button ("No");
    cancelBtn.setOnAction (new EventHandler < ActionEvent > () {
        @Override
        public void handle (final ActionEvent event) {
            dialog.close ();
            Platform.runLater (new Runnable () {
                @Override
                public void run () {
                    primaryStage.show ();
                }}

            );
        }}

    );
    final HBox hbox = new HBox ();
    hbox.setSpacing (10);
    hbox.setAlignment (Pos.CENTER);
    hbox.getChildren ().add (okBtn);
    hbox.getChildren ().add (cancelBtn);
    final VBox vbox = new VBox ();
    vbox.setAlignment (Pos.CENTER);
    vbox.setSpacing (10);
    vbox.getChildren ().add (new Label ("Do your really want to exit?"));
    vbox.getChildren ().add (hbox);
    final Scene scene = new Scene (vbox);
    dialog.setScene (scene);
    dialog.initOwner (primaryStage);
    dialog.initModality (Modality.NONE);
    dialog.showAndWait ();
}
----------------------------------------

public void handle (final ActionEvent event) {
    dialog.close ();
    Platform.runLater (new Runnable () {
        @Override
        public void run () {
            primaryStage.show ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963396_16963751_1_14
16963396_16964448_21_45
Title: Using join() vs. wait() thread java 
----------------------------------------

@Override
public void run () {
    System.out.println ("Hello I'm thread " + getName ());
    if (otherThread != null) {
        while (otherThread.isAlive ()) {
            try {
                otherThread.join ();
            } catch (InterruptedException e) {
            }
        }
    }
    System.out.println ("I'm finished " + getName ());
}
----------------------------------------

public void run () {
    System.out.println ("Hello I'm thread ".concat (getName ()));
    while (true) {
        synchronized (this) {
            try {
                wait ();
                break;
            } catch (InterruptedException e) {
            }
        }
    }
    System.out.println ("I'm finished ".concat (getName ()));
    if (previousThread != null) {
        synchronized (previousThread) {
            previousThread.notify ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963396_16963751_1_14
16963396_16964491_13_33
Title: Using join() vs. wait() thread java 
----------------------------------------

@Override
public void run () {
    System.out.println ("Hello I'm thread " + getName ());
    if (otherThread != null) {
        while (otherThread.isAlive ()) {
            try {
                otherThread.join ();
            } catch (InterruptedException e) {
            }
        }
    }
    System.out.println ("I'm finished " + getName ());
}
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            while (i != n) {
                lock.wait ();
            }
            System.out.println (name + " started");
            n ++;
            lock.notifyAll ();
        }
        synchronized (lock) {
            while (i != n - 4) {
                lock.wait ();
            }
            System.out.println (name + " finished");
            n ++;
            lock.notifyAll ();
        }
    } catch (InterruptedException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963396_16964448_21_45
16963396_16964491_13_33
Title: Using join() vs. wait() thread java 
----------------------------------------

public void run () {
    System.out.println ("Hello I'm thread ".concat (getName ()));
    while (true) {
        synchronized (this) {
            try {
                wait ();
                break;
            } catch (InterruptedException e) {
            }
        }
    }
    System.out.println ("I'm finished ".concat (getName ()));
    if (previousThread != null) {
        synchronized (previousThread) {
            previousThread.notify ();
        }
    }
}
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            while (i != n) {
                lock.wait ();
            }
            System.out.println (name + " started");
            n ++;
            lock.notifyAll ();
        }
        synchronized (lock) {
            while (i != n - 4) {
                lock.wait ();
            }
            System.out.println (name + " finished");
            n ++;
            lock.notifyAll ();
        }
    } catch (InterruptedException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963405_16964055_30_36
16963405_16964065_27_39
Title: "Printing ""Hello"" and ""world"" multiple times using two threads in java" 
----------------------------------------

public void run () {
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (! saidHello.get ()) {
        }
        System.out.println ("World!");
        saidHello.set (false);
    }
}
----------------------------------------

public void run () {
    try {
        for (int i = 0;
        i < 5; i ++) {
            world.acquire ();
            System.out.println ("  World!");
            hello.release ();
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963405_16964055_4_16
16963405_16964065_8_20
Title: "Printing ""Hello"" and ""world"" multiple times using two threads in java" 
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    MyThread mt = new MyThread ();
    mt.hello = hello;
    mt.world = world;
    mt.start ();
    for (int i = 0;
    i < 5; i ++) {
        hello.acquire ();
        System.out.println ("Hello");
        world.release ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963405_16964055_4_16
16963405_27650365_7_31
Title: "Printing ""Hello"" and ""world"" multiple times using two threads in java" 
----------------------------------------

public static void main (String [] args) {
    int sayThisManyTimes = 5;
    AtomicBoolean saidHello = new AtomicBoolean (false);
    MyThread mt = new MyThread (sayThisManyTimes, saidHello);
    mt.start ();
    for (int i = 0;
    i < sayThisManyTimes; i ++) {
        while (saidHello.get ()) {
        }
        System.out.println ("Hello ");
        saidHello.set (true);
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    for (int i = 0;
    i < 6; i ++) {
        Runnable helloTask = new Runnable () {
            @Override
            public void run () {
                new ThreadSeq ().printHello ();
            }}

        ;
        Runnable worldTask = new Runnable () {
            @Override
            public void run () {
                new ThreadSeq ().printWorld ();
            }}

        ;
        Thread t1 = new Thread (helloTask);
        Thread t2 = new Thread (worldTask);
        t1.start ();
        t1.join ();
        t2.start ();
        t2.join ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16963405_16964065_8_20
16963405_27650365_7_31
Title: "Printing ""Hello"" and ""world"" multiple times using two threads in java" 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    MyThread mt = new MyThread ();
    mt.hello = hello;
    mt.world = world;
    mt.start ();
    for (int i = 0;
    i < 5; i ++) {
        hello.acquire ();
        System.out.println ("Hello");
        world.release ();
    }
}
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    for (int i = 0;
    i < 6; i ++) {
        Runnable helloTask = new Runnable () {
            @Override
            public void run () {
                new ThreadSeq ().printHello ();
            }}

        ;
        Runnable worldTask = new Runnable () {
            @Override
            public void run () {
                new ThreadSeq ().printWorld ();
            }}

        ;
        Thread t1 = new Thread (helloTask);
        Thread t2 = new Thread (worldTask);
        t1.start ();
        t1.join ();
        t2.start ();
        t2.join ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1696791_1696849_1_13
1696791_1696852_12_19
Title: From arrayList to long[] 
----------------------------------------

public long [] parseString (String input) {
    int nLength = input.Split (new char [] {','}).Length;
    long [] arList = new long [nLength];
    for (int i = 0;
    i < nLength; i ++) {
        arList [i] = long.Parse (input.Split (new char [] {','}) [i].ToString ());
    }
    return arList;
}
----------------------------------------

public long [] parseString (String input) {
    String [] split = input.split (Pattern.quote (","));
    long [] arr = new long [split.length];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = Long.parseLong (split [i]);
    }
    return arr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1696791_1696849_1_13
1696791_1696880_1_11
Title: From arrayList to long[] 
----------------------------------------

public long [] parseString (String input) {
    int nLength = input.Split (new char [] {','}).Length;
    long [] arList = new long [nLength];
    for (int i = 0;
    i < nLength; i ++) {
        arList [i] = long.Parse (input.Split (new char [] {','}) [i].ToString ());
    }
    return arList;
}
----------------------------------------

public long [] parseString (String input) {
    final String [] parsed = input.split (",\\s?");
    final long [] values = new long [parsed.length];
    for (int i = 0;
    i < parsed.length; i ++) {
        values [i] = Long.parseLong (parsed [i]);
    }
    return values;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1696791_1696852_12_19
1696791_1696880_1_11
Title: From arrayList to long[] 
----------------------------------------

public long [] parseString (String input) {
    String [] split = input.split (Pattern.quote (","));
    long [] arr = new long [split.length];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = Long.parseLong (split [i]);
    }
    return arr;
}
----------------------------------------

public long [] parseString (String input) {
    final String [] parsed = input.split (",\\s?");
    final long [] values = new long [parsed.length];
    for (int i = 0;
    i < parsed.length; i ++) {
        values [i] = Long.parseLong (parsed [i]);
    }
    return values;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16970694_16970922_7_19
16970694_16970975_11_31
Title: How to detect if a timestamp lies between two other timestamps? 
----------------------------------------

public static void main (String [] args) throws ParseException {
    TreeMap < Long, String > orderedDates = new TreeMap < Long, String > ();
    orderedDates.put (parseToDate ("16:04:00.476"), "A");
    orderedDates.put (parseToDate ("16:09:58.228"), "B");
    orderedDates.put (parseToDate ("16:17:58.227"), "C");
    System.out.println (orderedDates.floorEntry (parseToDate ("16:04:00.500")).getValue ());
    System.out.println (orderedDates.floorEntry (parseToDate ("16:09:58.100")).getValue ());
    System.out.println (orderedDates.floorEntry (parseToDate ("16:09:58.300")).getValue ());
    System.out.println (orderedDates.floorEntry (parseToDate ("16:17:58.300")).getValue ());
}
----------------------------------------

public static void main (String [] args) {
    List < DateTime > dateTimes = new ArrayList < DateTime > ();
    dateTimes.add (new DateTime (100000));
    dateTimes.add (new DateTime (105000));
    dateTimes.add (new DateTime (110000));
    dateTimes.add (new DateTime (115000));
    dateTimes.add (new DateTime (120000));
    List < Interval > intervals = new ArrayList < Interval > ();
    for (int i = 0;
    i < dateTimes.size () - 1; i ++) {
        DateTime start = dateTimes.get (i);
        DateTime end = dateTimes.get (i + 1);
        intervals.add (new Interval (start, end));
    }
    assert 0 == findIndex (100000L, intervals);
    assert 0 == findIndex (100001L, intervals);
    assert 3 == findIndex (115000L, intervals);
    assert 3 == findIndex (115001L, intervals);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16972106_16972190_16_27
16972106_16972235_22_29
Title: Create ArrayList from permutations Java 
----------------------------------------

private static void permutation (String prefix, String str, List < String > container) {
    int n = str.length ();
    if (n == 0) {
        container.add (prefix);
    } else {
        for (int i = 0;
        i < n; i ++) permutation (prefix + str.charAt (i), str.substring (0, i) + str.substring (i + 1, n), container);

    }
}
----------------------------------------

private static void permutation (String prefix, String str) {
    int n = str.length ();
    if (n == 0) inputList.add (prefix);
    else {
        for (int i = 0;
        i < n; i ++) permutation (prefix + str.charAt (i), str.substring (0, i) + str.substring (i + 1, n));

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16972549_16985298_5_18
16972549_16988322_5_18
Title: Is there a way to specify that JAXB should only print an attribute if it doesn't have a specific value? 
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Tag.class);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    Tag tag = new Tag ();
    tag.setAttribute1 (Tag.Foo.A);
    System.out.println (tag.getAttribute1 ());
    marshaller.marshal (tag, System.out);
    tag.setAttribute1 (Tag.Foo.B);
    System.out.println (tag.getAttribute1 ());
    marshaller.marshal (tag, System.out);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    JAXBContext jc = JAXBContext.newInstance (Tag.class);
    Marshaller marshaller = jc.createMarshaller ();
    marshaller.setProperty (Marshaller.JAXB_FORMATTED_OUTPUT, true);
    Tag tag = new Tag ();
    tag.setAttribute1 (Tag.Foo.A);
    System.out.println (tag.getAttribute1 ());
    marshaller.marshal (tag, System.out);
    tag.setAttribute1 (Tag.Foo.B);
    System.out.println (tag.getAttribute1 ());
    marshaller.marshal (tag, System.out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1697303_1697362_1_10
1697303_35652140_1_10
Title: Is there a Java utility which will convert a String path to use the correct File separator char? 
----------------------------------------

public static String separatorsToSystem (String path) {
    if (path == null) {
        return null;
    }
    if (isSystemWindows ()) {
        return separatorsToWindows (path);
    } else {
        return separatorsToUnix (path);
    }
}
----------------------------------------

String separatorsToSystem (String res) {
    if (res == null) return null;

    if (File.separatorChar == '\\') {
        return res.replace ('/', File.separatorChar);
    } else {
        return res.replace ('\\', File.separatorChar);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16978134_16978162_1_16
16978134_16978284_1_23
Title: Check first two digit number lies between 00 && 99 
----------------------------------------

public static boolean isValid (String name) {
    boolean isValid = true;
    if (name.length () > 2) {
        name = name.substring (0, 2);
    }
    try {
        int number = Integer.parseInt (name);
        if (number > - 1 || number < 100) {
            isValid = false;
        }
    } catch (Exception e) {
        isValid = false;
    }
    return isValid;
}
----------------------------------------

private boolean isValid (String str) {
    if (str == null) return false;

    String tempStr = null;
    try {
        if (str.length () > 2) {
            tempStr = str.substring (0, 2);
        } else {
            tempStr = str;
        }
        int number = Integer.parseInt (tempStr);
        if (number >= 0 && number <= 99) {
            return false;
        } else {
            return true;
        }
    } catch (NumberFormatException e) {
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16982635_16983789_23_38
16982635_16983789_40_60
Title: Generate all possible combinations of items 
----------------------------------------

public static List < List < ITEM > > getItemCombinations (List < ITEM > inventory) {
    List < ITEM > prefix = new ArrayList < > ();
    List < List < ITEM > > container = new ArrayList < > ();
    List < ITEM > remainder;
    if (inventory == null) {
        System.out.println ("Printing all item combinations, no inventory");
        remainder = new ArrayList < > (Arrays.asList (ITEM.values ()));
    } else {
        remainder = new ArrayList < > (inventory);
    }
    getItemCombinations (prefix, remainder, container);
    return container;
}
----------------------------------------

private static void getItemCombinations (List < ITEM > prefix, List < ITEM > remainder, List < List < ITEM > > container) {
    int n = remainder.size ();
    if (remainder.isEmpty ()) {
        container.add (prefix);
    } else {
        for (int i = 0;
        i < n; i ++) {
            List < ITEM > r = new ArrayList < > ();
            List < ITEM > p = new ArrayList < > (prefix);
            p.add (remainder.get (i));
            for (int j = 0;
            j < remainder.size (); j ++) {
                if (j == i) continue;

                r.add (remainder.get (j));
            }
            getItemCombinations (p, r, container);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16995422_16995444_1_10
16995422_16995461_1_17
Title: Java boolean method needs extra return statement? 
----------------------------------------

public static boolean checkPrime (int n) {
    int x = 2;
    while (((n % x) != 0) && (n > x)) {
        x = x + 1;
    }
    if (((n % x) == 0) && (n == x)) {
        return ! (PrimeOrNot);
    }
    return (PrimeOrNot);
}
----------------------------------------

public static boolean checkPrime (int n) {
    boolean PrimeOrNot = false;
    int x = 2;
    while (((n % x) != 0) && (n > x)) {
        x = x + 1;
    }
    if (((n % x) == 0) && (n == x)) {
        return ! (PrimeOrNot);
    } else if (((n % x) == 0) && (n > x)) {
        return (PrimeOrNot);
    }

    return PrimeOrNot;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
16995422_16995461_1_17
16995422_16995470_1_12
Title: Java boolean method needs extra return statement? 
----------------------------------------

public static boolean checkPrime (int n) {
    boolean PrimeOrNot = false;
    int x = 2;
    while (((n % x) != 0) && (n > x)) {
        x = x + 1;
    }
    if (((n % x) == 0) && (n == x)) {
        return ! (PrimeOrNot);
    } else if (((n % x) == 0) && (n > x)) {
        return (PrimeOrNot);
    }

    return PrimeOrNot;
}
----------------------------------------

public static boolean checkPrime (int n) {
    int x = 2;
    while (((n % x) != 0) && (n > x)) {
        x = x + 1;
    }
    if (((n % x) == 0) && (n == x)) {
        return ! (PrimeOrNot);
    }
    return (PrimeOrNot);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
17000311_17000775_10_28
17000311_20046461_20_35
Title: Java Multi threading 
----------------------------------------

public void run () {
    try {
        synchronized (lock) {
            for (;;) {
                while ((n & 1) != even) {
                    lock.wait ();
                }
                n ++;
                lock.notify ();
                if (n > 10) {
                    break;
                }
                System.out.println (n);
            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    do {
        synchronized (counter) {
            if (counter.get () % 2 == 0) {
                System.out.println ("Thread is " + name + ", Counter is = " + counter.getAndAdd (1));
                counter.notifyAll ();
            } else {
                try {
                    counter.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }
        }
    } while (counter.get () <= 10);
}
----------------------------------------
