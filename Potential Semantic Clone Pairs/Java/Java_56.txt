$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26430630_26430977_3_23
26430630_46184041_5_34
Title: How to use goto statement correctly 
----------------------------------------

public static void main (String args []) {
    int [] numbers = new int [] {100, 18, 21, 30};
    OUTER : for (int i = 0;
    i < numbers.length; i ++) {
        if (i % 2 == 0) {
            System.out.println ("Odd number: " + i + ", continue from OUTER label");
            continue OUTER;
        }
        INNER : for (int j = 0;
        j < numbers.length; j ++) {
            System.out.println ("Even number: " + i + ", break  from INNER label");
            break INNER;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = 1;
    int factValue = 1;
    Scanner userInput = new Scanner (System.in);
    restart : while (true) {
        System.out.println ("Please enter a nonzero, nonnegative value to be factorialized.");
        int factInput = userInput.nextInt ();
        while (factInput <= 0) {
            System.out.println ("Enter a nonzero, nonnegative value to be factorialized.");
            factInput = userInput.nextInt ();
        }
        if (x < 1) {
            System.out.println ("The number you entered is not valid. Please try again.");
            continue restart;
        }
        while (x <= factInput) {
            factValue *= x;
            x ++;
        }
        System.out.println (factInput + "! = " + factValue);
        userInput.close ();
        break restart;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26431238_26431884_37_64
26431238_26434081_1_19
Title: Finding the right place and storing in LinkedList 
----------------------------------------

public void insertBefore (Object key, Object item) {
    if (head == null) {
        return null;
    }
    if (head.data.equals (key)) {
        addFirst (item);
        return;
    }
    Node < Object > previous = null;
    Node < Object > current = head;
    while (current != null && ! current.data.equals (key)) {
        previous = current;
        current = current.next;
    }
    if (current != null) {
        previous.next = new Node < Object > (item, current);
    }
}
----------------------------------------

public void insertBefore (String later, String name) {
    if (head == null) {
        head = new LinkedListNode (name, null);
    } else if (head.getName () == later) {
        LinkedListNode newNode = makeNode (name);
        newNode.setNext (head);
        head = newNode;
    } else {
        LinkedListNode current = head;
        while (current.getNext ().getName () != later) {
            current = current.getNext ();
        }
        LinkedListNode newNode = makeNode (name);
        newNode.setNext (current.getNext ());
        current.setNext (newNode);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26436276_26436424_19_36
26436276_26436484_1_10
Title: Count vowels in a list of strings and print the counts 
----------------------------------------

public static void averageVowels (ArrayList < String > vowels) {
    System.out.println (vowels);
    int [] chars = new int [256];
    int number = 0;
    for (int i = 0;
    i < vowels.size (); i ++) {
        for (char c : vowels.get (i).toCharArray ()) {
            chars [c] ++;
        }
    }
    System.out.println ("a count: " + chars ['a']);
    System.out.println ("e count: " + chars ['e']);
    System.out.println ("i count: " + chars ['i']);
    System.out.println ("o count: " + chars ['o']);
    System.out.println ("u count: " + chars ['u']);
}
----------------------------------------

public static void averageVowels (ArrayList < String > vowels) {
    System.out.println (vowels);
    String arrayToString = vowels.toString ();
    int length = arrayToString.length ();
    System.out.println ("a count: " + (length - arrayToString.replace ("a", "").length ()));
    System.out.println ("e count: " + (length - arrayToString.replace ("e", "").length ()));
    System.out.println ("i count: " + (length - arrayToString.replace ("i", "").length ()));
    System.out.println ("o count: " + (length - arrayToString.replace ("o", "").length ()));
    System.out.println ("u count: " + (length - arrayToString.replace ("u", "").length ()));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26438213_26438280_1_13
26438213_26438359_2_16
Title: Java exception in the thread error 
----------------------------------------

public void Srch (String path) {
    File root = new File (path);
    if (root.exist () && root.isDirectory ()) {
        File [] list = root.listFiles ();
        for (File x : list) {
            Srch (x.getAbsolutePath ());
            System.out.println (x.getAbsolutePath ());
        }
    } else {
        System.out.println (x.getAbsolutePath ());
    }
}
----------------------------------------

public void Srch (String path) {
    File root = new File (path);
    File [] list = root.listFiles ();
    if (list == null) {
        return;
    }
    for (File x : list) {
        if (x.isDirectory ()) {
            Srch (x.getAbsolutePath ());
            System.out.println (x.getAbsolutePath ());
        } else {
            System.out.println (x.getAbsolutePath ());
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26440460_26440508_1_14
26440460_26440908_3_20
Title: "How to read a file Split the contents and print it?" 
----------------------------------------

public static void main (String args []) {
    try {
        Scanner sc = new Scanner (new File ("number.txt"));
        sc.useDelimiter (",");
        while (sc.hasNextInt ()) {
            System.out.println (sc.nextInt ());
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] str) throws Exception {
    File f = new File ("C:\\prince\\temp\\test.txt");
    FileInputStream fis = new FileInputStream (f);
    BufferedReader br = new BufferedReader (new InputStreamReader (fis));
    String line = null;
    while ((line = br.readLine ()) != null) {
        String [] splitedTokens = line.split ("[,]");
        for (String splitedToke : splitedTokens) {
            System.out.println (splitedToke);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26440729_31426460_31_67
26440729_31426460_35_51
Title: Login using Google+ on Parse 
----------------------------------------

public void done (Object returnObj, ParseException e) {
    if (e == null) {
        Log.e ("AccessToken", returnObj.toString ());
        ParseUser.becomeInBackground (returnObj.toString (), new LogInCallback () {
            public void done (final ParseUser user, ParseException e) {
                if (user != null && e == null) {
                    showToast ("The Google user validated");
                    if (user.isNew ()) {
                    } else {
                        loginSuccess ();
                    }
                } else if (e != null) {
                    showToast ("There was a problem creating your account.");
                    e.printStackTrace ();
                    mGoogleApiClient.disconnect ();
                } else showToast ("The Google token could not be validated");

            }}

        );
    } else {
        if (e != null) {
            try {
                JSONObject jsonObject = new JSONObject (e.getMessage ());
                showToast (jsonObject.getString ("message"));
            } catch (JSONException e1) {
                e1.printStackTrace ();
            }
            e.printStackTrace ();
            mGoogleApiClient.disconnect ();
        }
    }
}
----------------------------------------

public void done (final ParseUser user, ParseException e) {
    if (user != null && e == null) {
        showToast ("The Google user validated");
        if (user.isNew ()) {
        } else {
            loginSuccess ();
        }
    } else if (e != null) {
        showToast ("There was a problem creating your account.");
        e.printStackTrace ();
        mGoogleApiClient.disconnect ();
    } else showToast ("The Google token could not be validated");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26441812_26441938_1_22
26441812_26441994_1_13
Title: "How do I remove all occurrences of """" and ""["" from the output in java?" 
----------------------------------------

public static void write (ArrayList < String > input) throws IOException {
    try {
        File file = new File ("Animeout.txt");
        FileWriter fw = new FileWriter (file);
        for (int i = 0;
        i < input.size (); i ++) {
            fw.append (input.get (i) + "\n");
        }
    } finally {
        try {
            if (fw != null) fw.close ();

        } catch (Exception e) {
        }
    }
}
----------------------------------------

public static void write (ArrayList < String > lines) throws IOException {
    File file = new File ("Animeout.txt");
    PrintStream ps = null;
    try {
        ps = new PrintStream (file);
        for (final String line : lines) {
            ps.println (line);
        }
    } finally {
        if (ps != null) {
            ps.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26454149_26454506_19_45
26454149_26477294_15_28
Title: Make JavaFX wait and continue with code 
----------------------------------------

public void start (Stage primaryStage) {
    primaryStage.setTitle ("Hello World!");
    label = new Label ();
    label.setText ("Waiting...");
    StackPane root = new StackPane ();
    root.getChildren ().add (label);
    primaryStage.setScene (new Scene (root, 300, 250));
    primaryStage.show ();
    Task < Void > sleeper = new Task < Void > () {
        @Override
        protected Void call () throws Exception {
            try {
                Thread.sleep (5000);
            } catch (InterruptedException e) {
            }
            return null;
        }}

    ;
    sleeper.setOnSucceeded (new EventHandler < WorkerStateEvent > () {
        @Override
        public void handle (WorkerStateEvent event) {
            label.setText ("Hello World");
        }}

    );
    new Thread (sleeper).start ();
}
----------------------------------------

public void start (Stage stage) {
    ImageView heart = new ImageView (HEART_IMAGE_LOC);
    animateUsingTimeline (heart);
    StackPane layout = new StackPane (heart);
    layout.setPrefWidth (heart.getImage ().getWidth () * 2);
    layout.setPrefHeight (heart.getImage ().getHeight () * 2);
    Scene scene = new Scene (layout);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26455850_26455943_28_49
26455850_26472540_14_23
Title: How to using Scanner to take out odd number lines and place them in order? 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException, IOException {
    String mycase = "caseNumber :", case_cont = "case content :";
    BufferedReader reader = new BufferedReader (new FileReader ("test.txt"));
    String line = null;
    while ((line = reader.readLine ()) != null) {
        if (line.contains ("case")) {
            mycase = mycase + line.replace ("case", "").replace (":", "");
        } else if (isNumeric (line) == true) {
            case_cont = case_cont + line.replaceAll ("\\s+", "");
        }

    }
    System.out.println (mycase);
    System.out.println (case_cont);
}
----------------------------------------

public static void main (String [] args) {
    FileScanner fs = new FileScanner ();
    fs.readfile ();
    for (int i = 0;
    i < fs.getCases ().size (); i ++) {
        System.out.println ("case number  is : " + fs.getCase (i));
        System.out.println ("case content is : " + fs.getContent (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26455850_26456648_19_69
26455850_26472540_25_75
Title: How to using Scanner to take out odd number lines and place them in order? 
----------------------------------------

public void readfile () {
    try {
        Scanner scanner = new Scanner (f);
        StringBuilder builder = new StringBuilder ();
        List < String > strings = new ArrayList < String > ();
        StringTokenizer st;
        int lineCount = 0;
        while (scanner.hasNextLine ()) {
            lineCount ++;
            String line = scanner.nextLine ();
            line = line.trim ();
            builder.append (line + " ");
        }
        scanner.close ();
        st = new StringTokenizer (builder.toString (), " ");
        builder = new StringBuilder ();
        while (st.hasMoreElements ()) {
            String s = st.nextElement ().toString ();
            if (s.contains ("a") && s.contains (":") && ! s.contains ("case")) {
                continue;
            } else if (s.contains ("case")) {
                builder.append (":" + s);
            } else {
                builder.append (s);
            }

        }
        st = new StringTokenizer (builder.toString (), ":");
        while (st.hasMoreElements ()) {
            strings.add (st.nextElement ().toString ());
        }
        for (int i = 0;
        i < strings.size () - 1; i ++) {
            if (strings.get (i).contains ("case")) {
                System.out.println ("Case Number: " + strings.get (i));
                if (i + 1 < strings.size ()) {
                    System.out.println ("Case Contents: " + strings.get (i + 1));
                }
            }
        }
        System.out.println ("line count : " + lineCount);
    } catch (FileNotFoundException e) {
    }
}
----------------------------------------

public void readfile () {
    try {
        Scanner scanner = new Scanner (f);
        StringBuilder builder = new StringBuilder ();
        StringTokenizer st;
        int lineCount = 0;
        while (scanner.hasNextLine ()) {
            lineCount ++;
            String line = scanner.nextLine ();
            line = line.trim ();
            builder.append (line + " ");
        }
        scanner.close ();
        st = new StringTokenizer (builder.toString (), " ");
        builder = new StringBuilder ();
        while (st.hasMoreElements ()) {
            String s = st.nextElement ().toString ();
            if (s.contains ("a") && s.contains (":") && ! s.contains ("case")) {
                continue;
            } else if (s.contains ("case")) {
                builder.append (":" + s);
            } else {
                builder.append (s);
            }

        }
        st = new StringTokenizer (builder.toString (), ":");
        while (st.hasMoreElements ()) {
            strings.add (st.nextElement ().toString ());
        }
        for (int i = 0;
        i < strings.size (); i ++) {
            if (strings.get (i).contains ("case")) {
                cases.add (strings.get (i));
            } else {
                contents.add (strings.get (i));
            }
        }
        System.out.println ("line count : " + lineCount);
    } catch (FileNotFoundException e) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26469017_26469357_37_50
26469017_26473654_1_23
Title: How can I make a grid of 50 by 50 labels? 
----------------------------------------

public void createCells () {
    int i;
    cells = new JLabel [50] [50];
    for (i = 0; i < 50; i ++) {
        for (int j = 0;
        j < cells.length; j ++) {
            cells [i] [j] = new JLabel (i + "");
            cells [i] [j].setOpaque (true);
            cells [i] [j].setBackground (Color.white);
            cells [i] [j].setBorder (BorderFactory.createLineBorder (Color.BLUE, 1));
            panel.add (cells [i] [j]);
        }
    }
}
----------------------------------------

public void createCells () {
    int a = 0;
    int i;
    cells = new JLabel [50] [50];
    for (i = 0; i < 50; i ++) {
        if (i < 50) {
            cells [i] [a] = new JLabel ("");
            cells [i] [a].setOpaque (true);
            cells [i] [a].setBackground (Color.white);
            cells [i] [a].setBorder (BorderFactory.createLineBorder (Color.BLUE, 1));
            cells [i] [a].setPreferredSize (new Dimension (10, 10));
            frame.add (cells [i] [a]);
        }
        if (i == 49) {
            i = - 1;
            a ++;
        }
        if (a == 50) {
            return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26470240_26470254_1_17
26470240_26470277_1_12
Title: Why does this code not return a string? 
----------------------------------------

public String toString () {
    StringBuilder result = new StringBuilder ("Name: ").append (lastName).append (", ").append (firstName).append (". Phone Number: ").append (phoneNumber).append (". Relationship: ");
    if (relationship == 'F') result.append (" Friend");
    else if (relationship == 'M') result.append (" Family Member");
    else if (relationship == 'B') result.append (" Business Associate");
    else result.append (" Not Specified");

    return result.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder output = new StringBuilder (lastName + ", " + firstName);
    output.append (phoneNumber);
    if (relationship == 'F') return output.append ("Friend").toString ();
    else if (relationship == 'M') return output.append ("Family Member").toString ();
    else if (relationship == 'B') return output.append ("Buisness Associate").toString ();
    else return output.append ("Not Specified").toString ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26470240_26470254_1_17
26470240_26470347_1_14
Title: Why does this code not return a string? 
----------------------------------------

public String toString () {
    StringBuilder result = new StringBuilder ("Name: ").append (lastName).append (", ").append (firstName).append (". Phone Number: ").append (phoneNumber).append (". Relationship: ");
    if (relationship == 'F') result.append (" Friend");
    else if (relationship == 'M') result.append (" Family Member");
    else if (relationship == 'B') result.append (" Business Associate");
    else result.append (" Not Specified");

    return result.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder s = new StringBuilder ();
    s.append (lastName).append (", ").append (firstName);
    s.append (phoneNumber);
    if (relationship == 'F') s.append ("Friend");
    else if (relationship == 'M') s.append ("Family Member");
    else if (relationship == 'B') s.append ("Buisness Associate");
    else s.append ("Not Specified");

    return s.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26470240_26470277_1_12
26470240_26470347_1_14
Title: Why does this code not return a string? 
----------------------------------------

public String toString () {
    StringBuilder output = new StringBuilder (lastName + ", " + firstName);
    output.append (phoneNumber);
    if (relationship == 'F') return output.append ("Friend").toString ();
    else if (relationship == 'M') return output.append ("Family Member").toString ();
    else if (relationship == 'B') return output.append ("Buisness Associate").toString ();
    else return output.append ("Not Specified").toString ();

}
----------------------------------------

public String toString () {
    StringBuilder s = new StringBuilder ();
    s.append (lastName).append (", ").append (firstName);
    s.append (phoneNumber);
    if (relationship == 'F') s.append ("Friend");
    else if (relationship == 'M') s.append ("Family Member");
    else if (relationship == 'B') s.append ("Buisness Associate");
    else s.append ("Not Specified");

    return s.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26471588_26471751_1_16
26471588_26471815_1_17
Title: Create a new array containing the index of every occurrance of a target value 
----------------------------------------

public int [] findAll (int f [], int target) {
    int count = 0;
    for (int i = 0;
    i < f.length; ++ i) {
        if (f [i] == target) count ++;

    }
    if (count == 0) return null;

    int result [] = new int [count];
    for (int i = 0, curr = 0;
    i < f.length; ++ i) {
        if (f [i] == target) result [curr ++] = i;

    }
    return result;
}
----------------------------------------

public int [] findAll (int f [], int target) {
    int count = 0;
    for (int i = 0;
    i < f.length; ++ i) {
        if (f [i] == target) count ++;

    }
    int result [] = new int [count];
    for (int i = 0;
    i < f.length; ++ i) {
        if (f [i] == target) result [i] = f [i];

    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26473229_26473340_5_32
26473229_26473341_1_38
Title: Newbie looking for help on a password code 
----------------------------------------

static private String generateValidPassword () {
    String pswd = "";
    Random r = new Random ();
    String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    int n = loweralphabet.length ();
    String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int N = upperalphabet.length ();
    int num = 0;
    for (int i = 0;
    i < 3; i ++) {
        num = r.nextInt (9);
        pswd += String.valueOf (num = r.nextInt (9));
    }
    for (int i = 0;
    i < 3; i ++) {
        pswd += String.valueOf (loweralphabet.charAt (r.nextInt (n)));
    }
    for (int i = 0;
    i < 3; i ++) {
        pswd += String.valueOf (upperalphabet.charAt (r.nextInt (N)));
    }
    return pswd;
}
----------------------------------------

static private String generateValidPassword () {
    String numcase = "";
    String lowcase = "";
    String upcase = "";
    String halfpass = "";
    String returnString = "";
    System.out.print (returnString);
    Random r = new Random ();
    String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    int n = loweralphabet.length ();
    String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int N = upperalphabet.length ();
    int num = 0;
    for (int i = 0;
    i < 3; i ++) {
        num = r.nextInt (9);
        numcase = String.valueOf (num);
        returnString += numcase;
    }
    for (int i = 0;
    i < 3; i ++) {
        lowcase = String.valueOf (loweralphabet.charAt (r.nextInt (n)));
        returnString += lowcase;
    }
    for (int i = 0;
    i < 3; i ++) {
        upcase = String.valueOf (upperalphabet.charAt (r.nextInt (N)));
        returnString += upcase;
    }
    return returnString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26473229_26473340_5_32
26473229_26473498_10_33
Title: Newbie looking for help on a password code 
----------------------------------------

static private String generateValidPassword () {
    String pswd = "";
    Random r = new Random ();
    String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    int n = loweralphabet.length ();
    String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int N = upperalphabet.length ();
    int num = 0;
    for (int i = 0;
    i < 3; i ++) {
        num = r.nextInt (9);
        pswd += String.valueOf (num = r.nextInt (9));
    }
    for (int i = 0;
    i < 3; i ++) {
        pswd += String.valueOf (loweralphabet.charAt (r.nextInt (n)));
    }
    for (int i = 0;
    i < 3; i ++) {
        pswd += String.valueOf (upperalphabet.charAt (r.nextInt (N)));
    }
    return pswd;
}
----------------------------------------

static private String generateValidPassword () {
    StringBuilder password = new StringBuilder ();
    Random r = new Random ();
    final String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    final String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for (int i = 0;
    i < 3; i ++) {
        password.append (String.valueOf (r.nextInt (10)));
    }
    for (int i = 0;
    i < 3; i ++) {
        password.append (loweralphabet.charAt (r.nextInt (loweralphabet.length ())));
    }
    for (int i = 0;
    i < 3; i ++) {
        password.append (upperalphabet.charAt (r.nextInt (upperalphabet.length ())));
    }
    return password.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26473229_26473341_1_38
26473229_26473498_10_33
Title: Newbie looking for help on a password code 
----------------------------------------

static private String generateValidPassword () {
    String numcase = "";
    String lowcase = "";
    String upcase = "";
    String halfpass = "";
    String returnString = "";
    System.out.print (returnString);
    Random r = new Random ();
    String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    int n = loweralphabet.length ();
    String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int N = upperalphabet.length ();
    int num = 0;
    for (int i = 0;
    i < 3; i ++) {
        num = r.nextInt (9);
        numcase = String.valueOf (num);
        returnString += numcase;
    }
    for (int i = 0;
    i < 3; i ++) {
        lowcase = String.valueOf (loweralphabet.charAt (r.nextInt (n)));
        returnString += lowcase;
    }
    for (int i = 0;
    i < 3; i ++) {
        upcase = String.valueOf (upperalphabet.charAt (r.nextInt (N)));
        returnString += upcase;
    }
    return returnString;
}
----------------------------------------

static private String generateValidPassword () {
    StringBuilder password = new StringBuilder ();
    Random r = new Random ();
    final String loweralphabet = "abcdefghijklmnopqrstuvwxyz";
    final String upperalphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for (int i = 0;
    i < 3; i ++) {
        password.append (String.valueOf (r.nextInt (10)));
    }
    for (int i = 0;
    i < 3; i ++) {
        password.append (loweralphabet.charAt (r.nextInt (loweralphabet.length ())));
    }
    for (int i = 0;
    i < 3; i ++) {
        password.append (upperalphabet.charAt (r.nextInt (upperalphabet.length ())));
    }
    return password.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26476982_26477155_26_39
26476982_26477159_1_17
Title: Find a string and display the line number and the line itself? 
----------------------------------------

public static List < String > recursiveSearch (String currentLineText, String key, LineNumberReader lnr) throws Exception {
    List < String > results = new ArrayList < String > (25);
    if (currentLineText != null) {
        String lCase = currentLineText.toLowerCase ();
        if (lCase.contains (key.toLowerCase ())) {
            results.add ("Line " + lnr.getLineNumber () + ": " + currentLineText);
        }
        results.addAll (recursiveSearch (lnr.readLine (), key, lnr));
    }
    return results;
}
----------------------------------------

public List < String > recursiveSearch (String currentLineText, String key, LineNumberReader lnr) throws Exception {
    List < String > resultList = new ArrayList < String > ();
    if (currentLineText != null) {
        String lCase = currentLineText.toLowerCase ();
        if (lCase.contains (key.toLowerCase ())) {
            String result = "Line " + lnr.getLineNumber () + ": " + currentLineText + "\n";
            resultList.add (result);
        }
    }
    String nextLine = lnr.readLine ();
    if (nextLine != null) {
        resultList.addALL (recursiveSearch (nextLine, key, lnr));
    }
    return resultList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477244_1_14
26477170_26477285_1_23
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int A []) {
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = 1;
        (j < e - 1) && (i != j); j ++) {
            for (int k = 2;
            (k < e - 2) && (j != k); k ++) {
                if (A [i] + A [j] + A [k] == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int ints []) {
    int count = 0;
    for (int i = 0;
    i < ints.length; i ++) {
        for (int j = 0;
        j < ints.length; j ++) {
            if (i == j) {
                continue;
            }
            for (int k = 0;
            k < ints.length; k ++) {
                if (k == j) {
                    continue;
                }
                if ((ints [i] + ints [j] + ints [k]) == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477244_1_14
26477170_26477499_1_14
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int A []) {
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = 1;
        (j < e - 1) && (i != j); j ++) {
            for (int k = 2;
            (k < e - 2) && (j != k); k ++) {
                if (A [i] + A [j] + A [k] == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (binarySearch (A, sum)) {
                count ++;
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477244_1_14
26477170_26477967_1_37
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int A []) {
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = 1;
        (j < e - 1) && (i != j); j ++) {
            for (int k = 2;
            (k < e - 2) && (j != k); k ++) {
                if (A [i] + A [j] + A [k] == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    List < int [] > elements = new ArrayList < > ();
    boolean mark = false;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (- sum == binarySearch (A, sum)) {
                int [] sort = {A [i], A [j], - sum};
                if (- sum == A [i] || - sum == A [j]) {
                    continue;
                } else {
                    Arrays.sort (sort);
                    for (int [] element : elements) {
                        if ((element [0] == sort [0] && element [1] == sort [1]) && element [2] == sort [2]) mark = true;

                    }
                    if (mark) {
                        mark = false;
                        continue;
                    } else {
                        count ++;
                        elements.add (sort);
                    }
                }
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477285_1_23
26477170_26477499_1_14
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int ints []) {
    int count = 0;
    for (int i = 0;
    i < ints.length; i ++) {
        for (int j = 0;
        j < ints.length; j ++) {
            if (i == j) {
                continue;
            }
            for (int k = 0;
            k < ints.length; k ++) {
                if (k == j) {
                    continue;
                }
                if ((ints [i] + ints [j] + ints [k]) == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (binarySearch (A, sum)) {
                count ++;
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477285_1_23
26477170_26477967_1_37
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int ints []) {
    int count = 0;
    for (int i = 0;
    i < ints.length; i ++) {
        for (int j = 0;
        j < ints.length; j ++) {
            if (i == j) {
                continue;
            }
            for (int k = 0;
            k < ints.length; k ++) {
                if (k == j) {
                    continue;
                }
                if ((ints [i] + ints [j] + ints [k]) == 0) {
                    count ++;
                }
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    List < int [] > elements = new ArrayList < > ();
    boolean mark = false;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (- sum == binarySearch (A, sum)) {
                int [] sort = {A [i], A [j], - sum};
                if (- sum == A [i] || - sum == A [j]) {
                    continue;
                } else {
                    Arrays.sort (sort);
                    for (int [] element : elements) {
                        if ((element [0] == sort [0] && element [1] == sort [1]) && element [2] == sort [2]) mark = true;

                    }
                    if (mark) {
                        mark = false;
                        continue;
                    } else {
                        count ++;
                        elements.add (sort);
                    }
                }
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26477170_26477499_1_14
26477170_26477967_1_37
Title: Searching for a sum in an array 
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (binarySearch (A, sum)) {
                count ++;
            }
        }
    }
    return count;
}
----------------------------------------

private static int counter (int A []) {
    int sum;
    int e = A.length;
    int count = 0;
    List < int [] > elements = new ArrayList < > ();
    boolean mark = false;
    for (int i = 0;
    i < e; i ++) {
        for (int j = i + 1;
        j < e; j ++) {
            sum = A [i] + A [j];
            if (- sum == binarySearch (A, sum)) {
                int [] sort = {A [i], A [j], - sum};
                if (- sum == A [i] || - sum == A [j]) {
                    continue;
                } else {
                    Arrays.sort (sort);
                    for (int [] element : elements) {
                        if ((element [0] == sort [0] && element [1] == sort [1]) && element [2] == sort [2]) mark = true;

                    }
                    if (mark) {
                        mark = false;
                        continue;
                    } else {
                        count ++;
                        elements.add (sort);
                    }
                }
            }
        }
    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26478385_26478414_1_12
26478385_26478482_1_12
Title: iterating through arraylists with recursion 
----------------------------------------

public static < T > boolean isEqual (List < T > arrlist1, List < T > arrlist2) {
    if (arrlist1.size () == arrlist2.size ()) {
        if (arrlist1.get (0).equals (arrlist2.get (0))) {
            if (arrlist1.size () == 1) {
                return true;
            }
            return isEqual (arrlist1.subList (1, arrlist1.size ()), arrlist2.subList (1, arrlist2.size ()));
        }
    }
    return false;
}
----------------------------------------

public static boolean isEqual (ArrayList < O > arrlist1, ArrayList < O > arrlist2, int n) {
    if (arrlist1.size () == n && arrlist1.size () == arrlist2.size ()) {
        return true;
    } else {
        if (arrlist1.get (n).equals (arrlist2.get (n))) {
            return isEqual (arrlist1, arrlist2, n + 1);
        } else {
            return false;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2648242_14852798_1_11
2648242_2648452_1_12
Title: Is this the best way to convert String hex to bytes? 
----------------------------------------

@Test
public void hexToBytes () {
    assertArrayEquals (new byte [] {0x00, 0x01, 0x02}, Convert.hexToBytes ("000102"));
    assertArrayEquals (new byte [] {(byte) 0xFF, (byte) 0xFE, (byte) 0xFD}, Convert.hexToBytes ("FFFEFD"));
    assertArrayEquals (new byte [] {(byte) 0xFF}, Convert.hexToBytes ("FF"));
    assertArrayEquals (new byte [] {(byte) 0x00}, Convert.hexToBytes ("00"));
    assertArrayEquals (new byte [] {(byte) 0x01}, Convert.hexToBytes ("01"));
    assertArrayEquals (new byte [] {(byte) 0x7F}, Convert.hexToBytes ("7F"));
    assertArrayEquals (new byte [] {(byte) 0x80}, Convert.hexToBytes ("80"));
}
----------------------------------------

private static byte [] hexToBytes (char [] hex) {
    byte [] raw = new byte [hex.length / 2];
    for (int src = 0, dst = 0;
    dst < raw.length; ++ dst) {
        int hi = Character.digit (hex [src ++], 16);
        int lo = Character.digit (hex [src ++], 16);
        if ((hi < 0) || (lo < 0)) throw new IllegalArgumentException ();

        raw [dst] = (byte) (hi << 4 | lo);
    }
    return raw;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26483837_26561819_1_20
26483837_28129943_1_12
Title: Landscape and portrait pages in the same word document using Apache POI XWPF in Java 
----------------------------------------

private void changeOrientation (XWPFDocument document, String orientation) {
    CTDocument1 doc = document.getDocument ();
    CTBody body = doc.getBody ();
    CTSectPr section = body.addNewSectPr ();
    XWPFParagraph para = document.createParagraph ();
    CTP ctp = para.getCTP ();
    CTPPr br = ctp.addNewPPr ();
    br.setSectPr (section);
    CTPageSz pageSize = section.getPgSz ();
    if (orientation.equals ("landscape")) {
        pageSize.setOrient (STPageOrientation.LANDSCAPE);
        pageSize.setW (BigInteger.valueOf (842 * 20));
        pageSize.setH (BigInteger.valueOf (595 * 20));
    } else {
        pageSize.setOrient (STPageOrientation.PORTRAIT);
        pageSize.setH (BigInteger.valueOf (842 * 20));
        pageSize.setW (BigInteger.valueOf (595 * 20));
    }
}
----------------------------------------

private void changeOrientation (CTSectPr section, String orientation) {
    CTPageSz pageSize = section.isSetPgSz ? section.getPgSz () : section.addNewPgSz ();
    if (orientation.equals ("landscape")) {
        pageSize.setOrient (STPageOrientation.LANDSCAPE);
        pageSize.setW (BigInteger.valueOf (842 * 20));
        pageSize.setH (BigInteger.valueOf (595 * 20));
    } else {
        pageSize.setOrient (STPageOrientation.PORTRAIT);
        pageSize.setH (BigInteger.valueOf (842 * 20));
        pageSize.setW (BigInteger.valueOf (595 * 20));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26485957_26485998_19_38
26485957_26488247_18_29
Title: Java: drawImage cannot find my BufferedImage 
----------------------------------------

public void init () {
    setLayout (null);
    mt = new MediaTracker (this);
    url = getDocumentBase ();
    img = ImageIO.read (url);
    scary = getImage (url, "scary.gif");
    trumpet = getImage (url, "trumpet.gif");
    walking = getImage (url, "walking.gif");
    mt.addImage (img, 1);
    mt.addImage (scary, 1);
    mt.addImage (trumpet, 1);
    mt.addImage (walking, 1);
    try {
        mt.waitForAll ();
    } catch (InterruptedException e) {
    }
    spoopy = getAudioClip (getDocumentBase (), "spoopy.wav");
    spoopy.loop ();
}
----------------------------------------

public void init () {
    setLayout (null);
    mt = new MediaTracker (this);
    mt.addImage (scary, 1);
    mt.addImage (trumpet, 1);
    mt.addImage (walking, 1);
    spoopy = getAudioClip (getDocumentBase (), "spoopy.wav");
    spoopy.loop ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26491574_26491625_9_17
26491574_26491650_13_23
Title: I'm having trouble writing static methods 
----------------------------------------

public static double getSquares (double b) {
    double sqrtNum = Math.sqrt (b);
    int i = 0;
    while (i < sqrtNum) {
        sqrtNum = Math.pow (i, 2);
        System.out.print (sqrtNum + " ");
        i ++;
    }
}
----------------------------------------

public static double getSquares (double b) {
    double sqrtNum = Math.sqrt (b);
    int i = 0;
    while (i < sqrtNum) {
        sqrtNum = Math.pow (i, 2);
        System.out.print (sqrtNum + " ");
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26491931_26491980_1_21
26491931_26491987_1_23
Title: Syntax error in Java with else 
----------------------------------------

public static Cuadrante obtenerCuadrante (Punto p) {
    Cuadrante res = Cuadrante.EJE;
    if (p.getX () > 0 && p.getY () > 0) {
        res = Cuadrante.PRIMER_CUADRANTE;
    } else {
        if (p.getX () > 0 && p.getY () < 0) {
            res = Cuadrante.CUARTO_CUADRANTE;
        } else {
            if (p.getX () < 0 && p.getY () > 0) {
                res = Cuadrante.SEGUNDO_CUADRANTE;
            } else {
                if (p.getX () < 0 && p.getY () < 0) {
                    res = Cuadrante.TERCER_CUADRANTE;
                } else {
                    res = Cuadrante.EJE;
                }
            }
        }
    }
    return res;
}
----------------------------------------

public static Cuadrante obtenerCuadrante (Punto p) {
    Cuadrante res = Cuadrante.EJE;
    if (p.getX () > 0 && p.getY () > 0) {
        res = Cuadrante.PRIMER_CUADRANTE;
    } else if (p.getX () > 0 && p.getY () < 0) {
        res = Cuadrante.CUARTO_CUADRANTE;
    } else if (p.getX () < 0 && p.getY () > 0) {
        res = Cuadrante.SEGUNDO_CUADRANTE;
    } else if (p.getX () < 0 && p.getY () < 0) {
        res = Cuadrante.TERCER_CUADRANTE;
    } else {
        res = Cuadrante.EJE;
    }

    return res;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26491937_26491954_154_167
26491937_26491954_87_108
Title: Java JApplet: Why aren't my components appearing on screen? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int x1 = pts [imageIndex].x;
    int y1 = pts [imageIndex].y;
    int x2 = pts [imageIndex + 1].x;
    int y2 = pts [imageIndex + 1].y;
    g2.drawLine (x1, y1, x2, y2);
    repaint ();
    imageIndex ++;
    if (imageIndex == totalPoints - 1) {
        ((Timer) e.getSource ()).stop ();
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    imageIndex = 0;
    if (timer != null && timer.isRunning ()) {
        timer.stop ();
    }
    if (g2 != null) {
        g2.dispose ();
    }
    pts = new Point [0];
    bufImg = new BufferedImage (PREF_W, PREF_H, BufferedImage.TYPE_INT_ARGB);
    g2 = bufImg.createGraphics ();
    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setColor (DRAW_COLOR);
    int totalPoints = 0;
    totalPoints = ((Integer) pointCountSpinner.getValue ()).intValue ();
    timer = new Timer (ANIMATION_DELAY, new TimerListener (totalPoints));
    calcWorker = new CalcWorker (totalPoints);
    calcWorker.addPropertyChangeListener (new CalcWorkerListener ());
    calcWorker.execute ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26492210_26492319_1_11
26492210_26492344_1_13
Title: "how do i prompt a user to re enter their input value if the value is invalid?" 
----------------------------------------

public int inputNumber () {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter the number of cookies you'd like to make ");
    int number = input.nextInt ();
    while (number <= 0) {
        System.out.println (" please enter a valid number");
        number = input.nextInt ();
    }
    input.close ();
    return number;
}
----------------------------------------

public int inputNumber () {
    Scanner input = new Scanner (System.in);
    int number = 0;
    do {
        System.out.print ("Enter the number of cookies you'd like to make ");
        number = input.nextInt ();
    } while (number <= 0);
    input.close ();
    return number;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26494865_26494945_12_33
26494865_43179228_11_19
Title: JavaFX 8: Changing title of primary stage 
----------------------------------------

public void start (Stage primaryStage) {
    try {
        FXMLLoader loader = new FXMLLoader (getClass ().getResource ("TitleSetter.fxml"));
        loader.setControllerFactory ((Class < ? > type) -> {
            try {
                Object controller = type.newInstance ();
                if (controller instanceof PrimaryStageAware) {
                    ((PrimaryStageAware) controller).setPrimaryStage (primaryStage);
                }
                return controller;
            } catch (Exception e) {
                throw new RuntimeException (e);
            }
        });
        HBox root = loader.load ();
        Scene scene = new Scene (root, 400, 400);
        primaryStage.setScene (scene);
        primaryStage.show ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    instance = this;
    this.primaryStage = primaryStage;
    Parent root = FXMLLoader.load (getClass ().getResource ("main.fxml"));
    this.primaryStage.setTitle ("Init title");
    this.primaryStage.setScene (new Scene (root, 900, 650));
    this.primaryStage.show ();
    FlatterFX.style ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26497547_26497780_8_21
26497547_26498099_1_15
Title: Integers from strings 
----------------------------------------

public static void main (String agrs []) {
    Tie tie = new Tie ();
    String fr = "4544FF";
    char [] strings = fr.toCharArray ();
    List < Integer > integers = new ArrayList < Integer > ();
    for (int i = 0;
    i < strings.length; i ++) {
        if (tie.validationNumber (strings [i] + "")) {
            integers.add (Integer.parseInt (strings [i] + ""));
        }
    }
    for (Integer i : integers) {
        System.out.println (i);
    }
}
----------------------------------------

public static void main (String agrs []) {
    String fr = "4544FF";
    String numbers = fr.substring (0, 4);
    String letters = fr.substring (4);
    System.out.println ("It will shows 4544" + numbers);
    System.out.println ("It will shows FF" + letters);
    int convertNumber = Integer.parseInt (numbers);
    System.out.println ("" + convertNumber);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26499910_26500388_1_18
26499910_26500820_1_11
Title: Using Arrays instead of Lists Java 
----------------------------------------

public Animal [] removeDuplicateAnimals (Animal [] animals, int fromIndex, int toIndex) {
    int modifiedAnimalsSize = animals.length;
    for (int i = fromIndex;
    i < toIndex; i ++) {
        for (int j = i + 1;
        j < toIndex; j ++) {
            int k = modifiedAnimalsSize - 1;
            if (animals [i].equals (animals [j])) {
                animals [j] = animals [k];
                animals [k] = null;
                modifiedAnimalsSize --;
                j --;
            }
        }
    }
    return Arrays.copyOf (animals, modifiedAnimalsSize);
}
----------------------------------------

public Animal [] removeDuplicateAnimals (Animal [] animals, int fromIndex, int toIndex) {
    for (int i = fromIndex;
    i ++; i < toIndex) {
        for (int j = i + 1;
        j ++; j <= toIndex) {
            if (animals [i].equals (animals [j])) {
                animals [i] == null;
                break;
            }
        }
    }
    return animals;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26501127_26501256_1_30
26501127_30413131_9_33
Title: My logical program is not giving the correct output? 
----------------------------------------

public static void main (String [] args) {
    int [] array = new int [100];
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter the number of Questions: ");
    int n_Elements = in.nextInt ();
    System.out.println ("Enter the values now: ");
    for (int i = 1;
    i <= n_Elements; i ++) {
        array [i] = in.nextInt ();
    }
    for (int i = 1;
    i <= n_Elements; i ++) {
        int num = 1;
        if (array [i] == 0) {
            System.out.println ("\n1");
        } else {
            for (int j = 1;
            j <= array [i]; j ++) {
                if (j % 2 != 0) {
                    num = num * 2;
                } else {
                    num = num + 1;
                }
            }
            System.out.println (num);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int T = in.nextInt ();
    int [] N = new int [T];
    for (int i = 0;
    i < T; i ++) {
        N [i] = in.nextInt ();
    }
    int height = 1;
    for (int i = 0;
    i < N.length; i ++) {
        height = 1;
        for (int j = 1;
        j <= N [i]; j ++) {
            if ((j % 2) == 1) height = height * 2;
            else height ++;

        }
        System.out.println (height);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26501328_26501382_13_26
26501328_26501407_7_17
Title: Return statement not working when calling another method 
----------------------------------------

private static boolean EvenOrOdd (int a) {
    if (a % 2 == 0) {
        System.out.println ("The output is true.");
        return true;
    } else {
        System.out.println ("The output is false.");
        return false;
    }
}
----------------------------------------

private static boolean EvenOrOdd (int a) {
    if (a % 2 == 0) {
        System.out.println ("The output is true.");
        return true;
    } else {
        System.out.println ("The output is false.");
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26501447_26501477_1_13
26501447_26501502_1_10
Title: MEthod not returning the correct result when inputting an array 
----------------------------------------

public static double Larger (double [] scoresRecived) {
    int c;
    double largestScore = 0.0;
    if (scoresRecived != null) {
        for (c = 0; c < scoredRecived.length; c ++) {
            if (scoresRecived [c] > largestScore) largestScore = scoresRecived [c];

        }
    }
    return largestScore;
}
----------------------------------------

public static double Larger (double [] scoresRecived) {
    double largestScore = 0;
    for (int i = 0;
    i < 8; i ++) {
        if (scoresRecived [i] > largestScore) largestScore = scoresRecived [i];

    }
    return largestScore;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26501447_26501477_1_13
26501447_26501532_8_16
Title: MEthod not returning the correct result when inputting an array 
----------------------------------------

public static double Larger (double [] scoresRecived) {
    int c;
    double largestScore = 0.0;
    if (scoresRecived != null) {
        for (c = 0; c < scoredRecived.length; c ++) {
            if (scoresRecived [c] > largestScore) largestScore = scoresRecived [c];

        }
    }
    return largestScore;
}
----------------------------------------

public static double Larger (double [] scoresRecived) {
    int c;
    double largestScore = 0;
    for (c = 0; c < 8; c ++) {
        if (scoresRecived [c] > largestScore) largestScore = scoresRecived [c];

    }
    return largestScore;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26501447_26501502_1_10
26501447_26501532_8_16
Title: MEthod not returning the correct result when inputting an array 
----------------------------------------

public static double Larger (double [] scoresRecived) {
    double largestScore = 0;
    for (int i = 0;
    i < 8; i ++) {
        if (scoresRecived [i] > largestScore) largestScore = scoresRecived [i];

    }
    return largestScore;
}
----------------------------------------

public static double Larger (double [] scoresRecived) {
    int c;
    double largestScore = 0;
    for (c = 0; c < 8; c ++) {
        if (scoresRecived [c] > largestScore) largestScore = scoresRecived [c];

    }
    return largestScore;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26506223_26506267_1_14
26506223_26506420_1_10
Title: Why does Eclipse tell me that this is dead code? 
----------------------------------------

public static boolean searchForPhone (String phone) {
    CharSequence phoneN = phone;
    for (int i = 0;
    i < myMessages.size (); i ++) {
        if (myMessages.get (i).contains (phone)) {
            return true;
        } else {
            continue;
        }
    }
    return false;
}
----------------------------------------

public static boolean searchForPhone (String phone) {
    for (int i = 0;
    i < myMessages.size (); i ++) {
        if (myMessages.get (i).contains (phone)) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26507594_26507644_1_14
26507594_26507867_1_14
Title: NullPointerException while implementing Queue using Linked List 
----------------------------------------

public void enqueue (String item) {
    Node oldLast = last;
    Node newNode = new Node ();
    newNode.item = item;
    newNode.next = null;
    if (isEmpty ()) {
        last = newNode;
        first = last;
    } else {
        last = newNode;
        oldLast.next = last;
    }
}
----------------------------------------

public void enqueue (String item) {
    Node oldLast = last;
    last = new Node ();
    last.item = item;
    last.next = null;
    if (oldLast != null) {
        oldLast.next = last;
    } else {
        first = last;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26513627_26513768_1_14
26513627_26513871_1_13
Title: Puting files on array in java 
----------------------------------------

public List < File > findFiles (String path) {
    List < File > list = new ArrayList < File > ();
    File [] files = new File (path).listFiles ();
    for (File objects : files) {
        if (objects.isFile ()) {
            list.add (objects);
        } else if (objects.isDirectory ()) {
            list.addAll (findFiles (objects.getAbsolutePath ()));
        }

    }
    return list;
}
----------------------------------------

public void findFiles (String path, List < File > listToFill) {
    File [] files = new File (path).listFiles ();
    for (File objects : files) {
        if (objects.isFile ()) {
            listToFill.add (objects);
        } else if (objects.isDirectory ()) {
            findFiles (objects.getAbsolutePath (), listToFill);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26517696_39083896_5_18
26517696_52241463_15_31
Title: Eliminate duplicates from arrays in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int [] arr = {1, 2, 3, 3, 4, 5, 6, 1};
    int [] ne = new int [arr.length];
    ArrayList < Integer > already = new ArrayList ();
    int i = 0;
    while (i < arr.length) {
        if (! already.contains (arr [i])) already.add (arr [i]);

        i ++;
    }
    System.out.println (already.toString ());
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > tenNumbers = new ArrayList < Integer > ();
    tenNumbers.add (14);
    tenNumbers.add (24);
    tenNumbers.add (14);
    tenNumbers.add (42);
    tenNumbers.add (25);
    tenNumbers.add (24);
    tenNumbers.add (14);
    tenNumbers.add (42);
    tenNumbers.add (25);
    tenNumbers.add (24);
    ArrayList < Integer > newList = eliminateDuplicates (tenNumbers);
    System.out.print ("The distinct numbers are: " + newList);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26518345_26518479_1_16
26518345_26520426_1_12
Title: How to Check if a String Contains a Second String with its Characters in Order? 
----------------------------------------

public static boolean containsSubsequence (final String sequence, final String subsequence) {
    if (subsequence.isEmpty ()) {
        return true;
    }
    int subsequenceIndex = 0;
    for (int i = 0;
    i < sequence.length (); ++ i) {
        if (sequence.charAt (i) == subsequence.charAt (subsequenceIndex)) {
            ++ subsequenceIndex;
            if (subsequenceIndex == subsequence.length ()) {
                return true;
            }
        }
    }
    return false;
}
----------------------------------------

public static boolean containsSubsequence (final String sequence, final String subsequence) {
    if (Objects.requireNonNull (sequence).isEmpty () || Objects.requireNonNull (subsequence).isEmpty () || subsequence.length () > sequence.length ()) {
        return false;
    }
    int index = 0;
    for (int i = 0;
    i < sequence.length (); i ++) {
        if (sequence.charAt (i) == subsequence.charAt (index) && ++ index == subsequence.length ()) {
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520777_1_11
26520696_26520787_1_12
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    int count = 1;
    for (int i = ch1;
    i <= ch2; i ++) {
        if (count == numberPerLine) {
            System.out.println ((char) i);
            count = 0;
        } else {
            System.out.print ((char) i + " ");
            count ++;
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        if (i % numberPerLine == 0) {
            System.out.println (i);
        } else {
            System.out.print (i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520777_1_11
26520696_26520817_1_8
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    int count = 1;
    for (int i = ch1;
    i <= ch2; i ++) {
        if (count == numberPerLine) {
            System.out.println ((char) i);
            count = 0;
        } else {
            System.out.print ((char) i + " ");
            count ++;
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        System.out.printf ("%c ", i);
        if ((1 + i - ch1) % numberPerLine == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520777_1_11
26520696_26520833_1_10
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    int count = 1;
    for (int i = ch1;
    i <= ch2; i ++) {
        if (count == numberPerLine) {
            System.out.println ((char) i);
            count = 0;
        } else {
            System.out.print ((char) i + " ");
            count ++;
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (int i = ch1;
    i <= (int) ch2; i ++) {
        if ((i - ch1 + 1) % numberPerLine == 0) {
            System.out.println ((char) i);
        } else {
            System.out.print ((char) i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520787_1_12
26520696_26520817_1_8
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        if (i % numberPerLine == 0) {
            System.out.println (i);
        } else {
            System.out.print (i + " ");
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        System.out.printf ("%c ", i);
        if ((1 + i - ch1) % numberPerLine == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520787_1_12
26520696_26520833_1_10
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        if (i % numberPerLine == 0) {
            System.out.println (i);
        } else {
            System.out.print (i + " ");
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (int i = ch1;
    i <= (int) ch2; i ++) {
        if ((i - ch1 + 1) % numberPerLine == 0) {
            System.out.println ((char) i);
        } else {
            System.out.print ((char) i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26520696_26520817_1_8
26520696_26520833_1_10
Title: Passing arguments to a method 
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (char i = ch1;
    i <= ch2; i ++) {
        System.out.printf ("%c ", i);
        if ((1 + i - ch1) % numberPerLine == 0) {
            System.out.println ();
        }
    }
}
----------------------------------------

public static void printChars (char ch1, char ch2, int numberPerLine) {
    for (int i = ch1;
    i <= (int) ch2; i ++) {
        if ((i - ch1 + 1) % numberPerLine == 0) {
            System.out.println ((char) i);
        } else {
            System.out.print ((char) i + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26529089_26529228_21_33
26529089_26529747_1_12
Title: Standard function for checking sorted-ness 
----------------------------------------

public static < T extends Comparable < T > > boolean isSorted (Iterable < T > a) {
    T prev = null;
    for (T it : a) {
        if (prev != null && it.compareTo (prev) < 0) {
            return false;
        }
        prev = it;
    }
    return true;
}
----------------------------------------

private static < T extends Double > boolean isSorted (T [] x) {
    if (x != null) {
        for (int n = 1;
        n < x.length; ++ n) {
            if (x [n - 1] >= x [n]) {
                return false;
            }
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2653040_2653109_1_13
2653040_2653113_1_12
Title: How do I implement a remove by index method for a singly linked list in Java? 
----------------------------------------

public void removeByIndex (int index) throws Exception {
    if (index == 0) {
        chain = chain.next;
    } else if (index > 0 && index < size ()) {
        Link priorToRemove = nthLink_aux (index - 1);
        priorToRemove.next = priorToRemove.next.next;
    } else {
        throw IndexOutOfBoundsException;
    }

}
----------------------------------------

public void removeByIndex (int index) throws Exception {
    if (index == 0) {
        chain = chain.next;
    } else if (index > 0) {
        Link target = nthLink (index - 1);
        target.next = target.next.next;
    }

    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26532081_31637945_4_17
26532081_48950182_1_21
Title: What is wrong with my Java solution to Codility MissingInteger? 
----------------------------------------

public int solution (int [] A) {
    int num = 1;
    HashSet < Integer > hset = new HashSet < Integer > ();
    for (int i = 0;
    i < A.length; i ++) {
        hset.add (A [i]);
    }
    while (hset.contains (num)) {
        num ++;
    }
    return num;
}
----------------------------------------

public int solution (int [] A) {
    int i = 0, count = 0, N = A.length;
    int [] B = new int [100001];
    for (i = 0; i < N; i ++) if (A [i] > 0 && A [i] < 100001) {
        B [A [i]] = A [i];
        count ++;
    }

    for (i = 1; i < count + 1; i ++) if (B [i] == 0) return i;

    return count + 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26532972_26533041_1_11
26532972_26533200_4_14
Title: Why is my method repeating when I run 
----------------------------------------

public static void main (String [] args) {
    int value = userInt ();
    System.out.println ("The palindromic primes less than " + value + " are:");
    for (int i = 0;
    i <= value; i ++) {
        if (isPrime () && isPalindrome ()) {
            System.out.println (i);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int x = userInt ();
    System.out.println ("The palindromic primes less than " + x + " are:");
    for (int i = 0;
    i <= x; i ++) {
        if (isPrime (i) && isPalindrome (i)) {
            System.out.println (i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26540028_26540085_1_10
26540028_26540135_1_12
Title: Finding item with the lowest cost in an ArrayList 
----------------------------------------

public InventoryItem itemWithLowestCost () {
    int size = (inventoryList == null || inventoryList.isEmpty ()) ? 0 : inventoryList.size ();
    InventoryItem min = (size > 0) ? inventoryList.get (0) : null;
    for (int i = 1;
    i < size; i ++) {
        InventoryItem ii = inventoryList.get (i);
        if (ii.getCost () < min.getCost ()) min = ii;

    }
    return min;
}
----------------------------------------

public InventoryItem itemWithLowestCost (Collection < InventoryItem > inventory) {
    if (inventory != null && ! inventory.isEmpty ()) {
        Collections.sort (inventory, new Comparator < InventoryItem > () {
            @Override
            public int compare (InventoryItem i1, InventoryItem i2) {
                return i1.getCost () - i2.getCost ();
            }}

        );
        return inventory.get (0);
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26546246_26550242_66_130
26546246_26561111_1_44
Title: Find path of FIXED length through a 2D array which gives maximum sum 
----------------------------------------

static int findMax (Stack < Coord > s, int sum) {
    if (s.lastElement ().i > 0 && (s.search (new Coord (s.lastElement ().i - 1, s.lastElement ().j)) == - 1)) {
        Stack < Coord > nstack = (Stack < Coord >) s.clone ();
        nstack.push (new Coord (s.lastElement ().i - 1, s.lastElement ().j));
        int nsum = sum + matrix [nstack.lastElement ().i] [nstack.lastElement ().j];
        if (nstack.size () < 11) {
            nsum = findMax (nstack, nsum);
        } else {
            if (nsum > currMax) {
                currMax = nsum;
                currStack = nstack;
            }
        }
    }
    if (s.lastElement ().i + 1 < matrix.length && (s.search (new Coord (s.lastElement ().i + 1, s.lastElement ().j)) == - 1)) {
        Stack < Coord > nstack = (Stack < Coord >) s.clone ();
        nstack.push (new Coord (s.lastElement ().i + 1, s.lastElement ().j));
        int nsum = sum + matrix [nstack.lastElement ().i] [nstack.lastElement ().j];
        if (nstack.size () < 11) {
            nsum = findMax (nstack, nsum);
        } else {
            if (nsum > currMax) {
                currMax = nsum;
                currStack = nstack;
            }
        }
    }
    if (s.lastElement ().j > 0 && (s.search (new Coord (s.lastElement ().i, s.lastElement ().j - 1)) == - 1)) {
        Stack < Coord > nstack = (Stack < Coord >) s.clone ();
        nstack.push (new Coord (s.lastElement ().i, s.lastElement ().j - 1));
        int nsum = sum + matrix [nstack.lastElement ().i] [nstack.lastElement ().j];
        if (nstack.size () < 11) {
            nsum = findMax (nstack, nsum);
        } else {
            if (nsum > currMax) {
                currMax = nsum;
                currStack = nstack;
            }
        }
    }
    if (s.lastElement ().j + 1 < matrix [0].length && (s.search (new Coord (s.lastElement ().i, s.lastElement ().j + 1)) == - 1)) {
        Stack < Coord > nstack = (Stack < Coord >) s.clone ();
        nstack.push (new Coord (s.lastElement ().i, s.lastElement ().j + 1));
        int nsum = sum + matrix [nstack.lastElement ().i] [nstack.lastElement ().j];
        if (nstack.size () < 11) {
            nsum = findMax (nstack, nsum);
        } else {
            if (nsum > currMax) {
                currMax = nsum;
                currStack = nstack;
            }
        }
    }
    return currMax;
}
----------------------------------------

private static Integer findMax (Coord currPosition, int currDepth, int currSum) {
    if (currDepth == MAX_DEPTH) {
        return currSum;
    }
    Integer currMax = null;
    for (Coord direction : directions) {
        Coord newPos = currPosition.newPosition (direction);
        if (isLegalPosition (newPos)) {
            int matrixValue = matrix [newPos.row] [newPos.col];
            matrix [newPos.row] [newPos.col] = null;
            Integer newMax = findMax (newPos, currDepth + 1, currSum + matrixValue);
            matrix [newPos.row] [newPos.col] = matrixValue;
            if (newMax != null) {
                currMax = (currMax == null) ? newMax : (newMax > currMax ? newMax : currMax);
            }
        }
    }
    return currMax;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26551945_26552280_6_16
26551945_26552414_46_58
Title: Writing to a .java file in java and running the script 
----------------------------------------

public void evaluate (String toEval) throws FileNotFoundException, UnsupportedEncodingException {
    PrintWriter writer = new PrintWriter ("Auto.java", "UTF-8");
    writer.println ("public class Auto");
    writer.println ("{");
    writer.println ("    Auto(){");
    writer.println ("        " + toEval);
    writer.println ("    }");
    writer.println ("}");
    writer.close ();
}
----------------------------------------

public void evaluate (String toEval) throws FileNotFoundException, UnsupportedEncodingException {
    PrintWriter writer = new PrintWriter ("Auto.java", "UTF-8");
    writer.println ("public class Auto");
    writer.println ("{");
    writer.println ("    public static void main(String[] args)");
    writer.println ("    {");
    writer.println ("        " + toEval + ";");
    writer.println ("    }");
    writer.println ("}");
    writer.close ();
    System.out.println ("Auto.java created..");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26555485_26555688_4_11
26555485_26555695_1_12
Title: Setting elapsed time and using toString 
----------------------------------------

public static void main (String [] args) {
    Date date;
    for (long i = 1000l;
    i <= 100000000000l; i *= 10) {
        System.out.println ("Time elapsed since epoch: " + i + " milliseconds");
        date = new Date (i);
        System.out.println ("Corresponding date: " + date);
    }
}
----------------------------------------

public static void main (String [] args) {
    long i = 0;
    Date d = new Date (i);
    for (i = 1000; i < 100000000000L; i *= 10) {
        System.out.println ("Time elapsed: " + i + " milliseconds");
        d.setTime (i);
        System.out.println ("Date and time: " + d.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26559145_26559344_6_28
26559145_26559693_3_31
Title: Why a Runtime Error reading File 
----------------------------------------

public static void main (String args []) throws IOException {
    Scanner reader = new Scanner (new File ("C:\\Users\\Madhawa.se\\Desktop\\workingfox\\m2.txt"));
    Scanner input = new Scanner (System.in);
    int CountWord = 0;
    System.out.println ("\nThis program will read a text file with 50 random   words" + "\nWhat word would you like to look up that may be repeated: ");
    String text = input.next ();
    while (reader.hasNext ()) {
        String [] words = reader.nextLine ().split ("\\s+");
        for (String word : words) {
            if (text.equals (word)) {
                CountWord ++;
            }
        }
    }
    if (CountWord != 0) {
        System.out.println ("\nI have found your word " + CountWord + " times.");
    } else if (CountWord == 0) {
        System.out.println ("\nNo word found in the text file.");
    }

}
----------------------------------------

public static void main (String args []) throws IOException {
    System.out.print ("Enter words to search separated by spaces: ");
    Scanner input = new Scanner (System.in);
    String in = input.nextLine ();
    if (in.length () > 0) {
        int count = 0;
        String [] words = in.split ("\\s");
        for (String word : words) {
            Scanner reader = new Scanner (new File ("README.TXT"));
            while (reader.hasNext ()) {
                String line = reader.next ();
                if (word.equalsIgnoreCase (line)) {
                    count ++;
                }
            }
            System.out.println ("I have found the word \'" + word + "\' " + count + ((count == 1) ? " time." : " times."));
            count = 0;
            reader.close ();
        }
    }
    input.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26564077_26564222_24_32
26564077_44452260_73_82
Title: Spring Boot use SystemTray Icons 
----------------------------------------

protected static Image createImage (String path, String description) {
    URL imageURL = MyTrayIcon.class.getResource (path);
    if (imageURL == null) {
        System.err.println ("Failed Creating Image. Resource not found: " + path);
        return null;
    } else {
        return new ImageIcon (imageURL, description).getImage ();
    }
}
----------------------------------------

protected static Image createImage (String path, String description) {
    URL imageURL = MyTrayIcon.class.getResource (path);
    if (imageURL == null) {
        System.err.println ("Failed Creating Image. Resource not found: " + path);
        return null;
    } else {
        return new ImageIcon (imageURL, description).getImage ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26566597_26566717_1_31
26566597_26566945_1_19
Title: Counting occurences of integers in an array 
----------------------------------------

public static void countArray (int [] n) {
    int count = 0;
    int i, j, t;
    for (i = 0; i < n.length - 1; i ++) {
        for (j = i + 1; j < n.length; j ++) {
            if (n [i] > n [j]) {
                t = n [i];
                n [i] = n [j];
                n [j] = t;
            }
        }
    }
    for (i = 0; i < n.length;) {
        for (j = i; j < n.length; j ++) {
            if (n [i] == n [j]) {
                count ++;
            } else break;

        }
        System.out.println (n [i] + " occurs " + count);
        count = 0;
        i = j;
    }
}
----------------------------------------

public static void countArray (int [] n) {
    boolean [] alreadyCounted = new boolean [n.length];
    for (int i = 0;
    i < n.length; i ++) {
        int count = 0;
        if (alreadyCounted [i]) {
            continue;
        }
        for (int j = 0;
        j < n.length; j ++) {
            if (n [i] == n [j]) {
                alreadyCounted [j] = true;
                count ++;
            }
        }
        System.out.println (n [i] + " occurs = " + count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26566597_26566717_1_31
26566597_26567041_10_39
Title: Counting occurences of integers in an array 
----------------------------------------

public static void countArray (int [] n) {
    int count = 0;
    int i, j, t;
    for (i = 0; i < n.length - 1; i ++) {
        for (j = i + 1; j < n.length; j ++) {
            if (n [i] > n [j]) {
                t = n [i];
                n [i] = n [j];
                n [j] = t;
            }
        }
    }
    for (i = 0; i < n.length;) {
        for (j = i; j < n.length; j ++) {
            if (n [i] == n [j]) {
                count ++;
            } else break;

        }
        System.out.println (n [i] + " occurs " + count);
        count = 0;
        i = j;
    }
}
----------------------------------------

public static void countArray (int [] input) {
    final int LOWEST = 10;
    final int HIGHEST = 20;
    int [] count = new int [HIGHEST + 1];
    for (int i = 0;
    i < input.length; i ++) {
        if (input [i] < LOWEST || HIGHEST < input [i]) {
            throw new IllegalArgumentException ("All integers must be between " + LOWEST + " and " + HIGHEST + ", inclusive");
        }
        int numberFound = input [i];
        count [numberFound] += 1;
    }
    for (int i = LOWEST;
    i <= HIGHEST; i ++) {
        if (count [i] != 0) {
            System.out.println (i + " occurs = " + count [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26566597_26566945_1_19
26566597_26567041_10_39
Title: Counting occurences of integers in an array 
----------------------------------------

public static void countArray (int [] n) {
    boolean [] alreadyCounted = new boolean [n.length];
    for (int i = 0;
    i < n.length; i ++) {
        int count = 0;
        if (alreadyCounted [i]) {
            continue;
        }
        for (int j = 0;
        j < n.length; j ++) {
            if (n [i] == n [j]) {
                alreadyCounted [j] = true;
                count ++;
            }
        }
        System.out.println (n [i] + " occurs = " + count);
    }
}
----------------------------------------

public static void countArray (int [] input) {
    final int LOWEST = 10;
    final int HIGHEST = 20;
    int [] count = new int [HIGHEST + 1];
    for (int i = 0;
    i < input.length; i ++) {
        if (input [i] < LOWEST || HIGHEST < input [i]) {
            throw new IllegalArgumentException ("All integers must be between " + LOWEST + " and " + HIGHEST + ", inclusive");
        }
        int numberFound = input [i];
        count [numberFound] += 1;
    }
    for (int i = LOWEST;
    i <= HIGHEST; i ++) {
        if (count [i] != 0) {
            System.out.println (i + " occurs = " + count [i]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26568109_26568216_6_74
26568109_26568521_1_28
Title: Removing duplicates from an array (without sets or sorting) 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("How many numbers are you going to enter? ");
    int num = scan.nextInt ();
    int [] arr = new int [num];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = scan.nextInt ();
    }
    double [] unique = new double [arr.length];
    for (int z = 0;
    z < unique.length; z ++) {
        unique [z] = - 0.5;
    }
    for (int i = 0;
    i < arr.length; i ++) {
        boolean b = true;
        for (int j = i + 1;
        j < arr.length; j ++) {
            if (arr [i] == arr [j]) {
                b = false;
            }
        }
        if (b) {
            unique [i] = arr [i];
        }
    }
    for (int i = 0;
    i < unique.length; i ++) {
        if (! (unique [i] == - 0.5)) {
            System.out.println ((int) (unique [i]));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.print ("How many numbers are you going to enter? ");
    int num = scan.nextInt ();
    int [] arr = new int [num];
    int [] arrflag = new int [num];
    for (int i = 0;
    i < arr.length; i ++) {
        System.out.print ("Enter number: ");
        arr [i] = scan.nextInt ();
        arrflag [i] = 0;
    }
    int [] unique = new int [arr.length];
    int n = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (arrflag [i] == 0) {
            unique [n ++] = arr [i];
            for (int j = i + 1;
            j < arr.length; j ++) {
                if (arr [i] == arr [j]) {
                    arrflag [j] = - 1;
                }
            }
        }
    }
    for (int i = 0;
    i < n; i ++) {
        System.out.println (unique [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26569526_26569628_1_14
26569526_26569759_1_39
Title: Reading from a text file with spaces and then putting into arrayList 
----------------------------------------

public static void main (String [] args) {
    File file = new File ("C:\\Users\\Jocelynn\\Desktop\\input.txt");
    List < Integer > list = new ArrayList < > ();
    try (Scanner scanner = new Scanner (file)) {
        while (scanner.hasNextInt ()) {
            list.add (scanner.nextInt ());
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
    System.out.println (list);
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > list = new ArrayList < Integer > ();
    File file = new File ("C:\\Users\\Jocelynn\\Desktop\\input.txt");
    BufferedReader reader = null;
    try {
        reader = new BufferedReader (new FileReader (file));
        String text = null;
        while ((text = reader.readLine ()) != null) {
            for (String value : text.split (" ")) {
                if (! value.equals ("")) list.add (Integer.parseInt (value));

            }
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    try {
        reader.close ();
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println (list);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26569731_26569812_1_20
26569731_26569861_1_36
Title: Error trying to sum two different length arrays 
----------------------------------------

public static int [] AddArray (int [] listA, int [] listB) {
    int smallList [], bigList [], sums [];
    int pos;
    if (listA.length >= listB.length) {
        smallList = listB;
        bigList = listA;
    } else {
        smallList = listA;
        bigList = listB;
    }
    sums = new int [bigList.length];
    for (pos = 0; pos < smallList.length; ++ pos) {
        sums [pos] = smallList [pos] + bigList [pos];
    }
    for (; pos < bigList.length; ++ pos) {
        sums [pos] = bigList [pos];
    }
    return sums;
}
----------------------------------------

public static int [] AddArray (int [] listA, int [] listB) {
    int aLen = listA.length;
    int bLen = listB.length;
    int [] pickedList = null;
    int i, j;
    if (aLen >= bLen) {
        pickedList = new int [aLen];
        for (i = 0; i < bLen; i ++) {
            pickedList [i] = listA [i] + listB [i];
        }
        for (j = i; j < aLen; j ++) {
            pickedList [j] = listA [j];
        }
    } else {
        pickedList = new int [bLen];
        for (i = 0; i < aLen; i ++) {
            pickedList [i] = listA [i] + listB [i];
        }
        for (j = i; j < bLen; j ++) {
            pickedList [j] = listB [j];
        }
    }
    return pickedList;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26577329_26577604_4_29
26577329_26577789_5_21
Title: Identify three increasing adjacent numbers in Java program. Gives wrong output and an indexoutofbound exception error 
----------------------------------------

public static void main (String [] args) {
    final Scanner s = new Scanner (System.in);
    int [] anArray = new int [5];
    for (int i = 0;
    i < 5; i ++) {
        anArray [i] = s.nextInt ();
    }
    int count = 0;
    for (int j = 0;
    j < anArray.length - 1; j ++) {
        if (anArray [j] + 1 == anArray [j + 1]) {
            count ++;
        } else {
            count = 0;
        }
        if (count == 3) {
            System.out.println ("true");
        } else {
            System.out.println ("false");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int [] anArray = new int [5];
    Scanner s = new Scanner (System.in);
    for (int i = 0;
    i < anArray.length; i ++) {
        anArray [i] = s.nextInt ();
    }
    boolean containsThreeAdjacentNumbers = false;
    for (int j = 0;
    j + 2 < anArray.length; j ++) {
        if (anArray [j] + 1 == anArray [j + 1] && anArray [j + 2] == anArray [j + 2]) {
            containsThreeAdjacentNumbers = true;
        }
    }
    System.out.println (containsThreeAdjacentNumbers);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26579729_26579730_156_174
26579729_26579730_181_193
Title: How to serialize Java 2D Shape objects as XML? 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int codepoint = faceStart + rand.nextInt (diff);
    String text = new String (Character.toChars (codepoint));
    Font font = (Font) fontModel.getSelectedItem ();
    Area area = new Area (font.deriveFont (80f).createGlyphVector (fontRenderContext, text).getOutline ());
    Rectangle bounds = area.getBounds ();
    float x = rand.nextInt (shapeCanvas.getWidth () - bounds.width) - bounds.x;
    float y = rand.nextInt (shapeCanvas.getHeight () - bounds.height) - bounds.y;
    AffineTransform move = AffineTransform.getTranslateInstance (x, y);
    area.transform (move);
    addShape (area);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int idx = shapeSelectionModel.getMinSelectionIndex ();
    if (idx < 0) {
        JOptionPane.showMessageDialog (ui, "Select a shape to delete", "Select a Shape", JOptionPane.ERROR_MESSAGE);
    } else {
        allShapesModel.removeElementAt (idx);
        shapeCanvas.repaint ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26586630_26586679_1_17
26586630_26586827_2_19
Title: Java - How to parse large int as command line argument? 
----------------------------------------

public static void main (String [] args) {
    final BigInteger TWO = new BigInteger ("2");
    BigInteger k = BigInteger.ONE;
    BigInteger n = new BigInteger (args [0]);
    if (n.compareTo (BigInteger.ZERO) < 0) {
        System.out.println ("< 0");
    } else {
        while (k.compareTo (n) <= 0) {
            k = k.multiply (TWO);
            if (k.compareTo (n) <= 0) {
                System.out.println (k);
            } else {
                System.out.println ();
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    long k = 1;
    long n = Long.parseLong ("20000000000");
    BigDecimal bigDec = new BigDecimal (n);
    if (n < 0) {
        System.out.println ("");
    } else {
        for (long i = 1;
        k <= bigDec.longValue (); i ++) {
            k *= 2;
            if (k <= n) {
                System.out.println (k);
            } else {
                System.out.println ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26586630_26586679_1_17
26586630_26587429_2_27
Title: Java - How to parse large int as command line argument? 
----------------------------------------

public static void main (String [] args) {
    final BigInteger TWO = new BigInteger ("2");
    BigInteger k = BigInteger.ONE;
    BigInteger n = new BigInteger (args [0]);
    if (n.compareTo (BigInteger.ZERO) < 0) {
        System.out.println ("< 0");
    } else {
        while (k.compareTo (n) <= 0) {
            k = k.multiply (TWO);
            if (k.compareTo (n) <= 0) {
                System.out.println (k);
            } else {
                System.out.println ();
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String number = args [0];
    if (number == null) {
        throw new IllegalArgumentException ();
    }
    System.out.println ("The number: " + number);
    char [] tmp = number.toCharArray ();
    int result = 0;
    int index = 1;
    for (int t = tmp.length - 1;
    t >= 0; t --) {
        int n = Integer.parseInt (tmp [t] + "");
        int toAdd = (int) (n == 0 ? (Math.pow (10, index - 1)) : (n * (Math.pow (10, index - 1))));
        if (toAdd > Integer.MAX_VALUE - result) {
            throw new IllegalArgumentException ("Number to large");
        }
        result += toAdd;
        index ++;
    }
    System.out.println ("Entered integer: " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26586630_26586827_2_19
26586630_26587429_2_27
Title: Java - How to parse large int as command line argument? 
----------------------------------------

public static void main (String [] args) {
    long k = 1;
    long n = Long.parseLong ("20000000000");
    BigDecimal bigDec = new BigDecimal (n);
    if (n < 0) {
        System.out.println ("");
    } else {
        for (long i = 1;
        k <= bigDec.longValue (); i ++) {
            k *= 2;
            if (k <= n) {
                System.out.println (k);
            } else {
                System.out.println ();
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String number = args [0];
    if (number == null) {
        throw new IllegalArgumentException ();
    }
    System.out.println ("The number: " + number);
    char [] tmp = number.toCharArray ();
    int result = 0;
    int index = 1;
    for (int t = tmp.length - 1;
    t >= 0; t --) {
        int n = Integer.parseInt (tmp [t] + "");
        int toAdd = (int) (n == 0 ? (Math.pow (10, index - 1)) : (n * (Math.pow (10, index - 1))));
        if (toAdd > Integer.MAX_VALUE - result) {
            throw new IllegalArgumentException ("Number to large");
        }
        result += toAdd;
        index ++;
    }
    System.out.println ("Entered integer: " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588520_1_16
26588315_26588522_1_17
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String s) {
    String str = s.toLowerCase ();
    int oCount = 0;
    if (s.contains ("boo")) {
        for (int i = 0;
        i < s.length (); i ++) {
            if (s.charAt (i) == 'o' && ++ oCount == 3) return false;

        }
        return true;
    } else return false;

}
----------------------------------------

public static boolean ghostHunters (String word) {
    if (word == null) return false;

    word = word.toLowerCase ();
    if (word.length () < 3) return false;

    if (! word.contains ("boo")) return false;
    else if (word.length () == 3) return true;

    int index = word.indexOf ("boo");
    if (word.charAt (index + 1) != 'o') return true;

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588520_1_16
26588315_26588591_1_11
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String s) {
    String str = s.toLowerCase ();
    int oCount = 0;
    if (s.contains ("boo")) {
        for (int i = 0;
        i < s.length (); i ++) {
            if (s.charAt (i) == 'o' && ++ oCount == 3) return false;

        }
        return true;
    } else return false;

}
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + "";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.contains ("booo")) return false;
        else return true;

    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588520_1_16
26588315_26588691_1_14
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String s) {
    String str = s.toLowerCase ();
    int oCount = 0;
    if (s.contains ("boo")) {
        for (int i = 0;
        i < s.length (); i ++) {
            if (s.charAt (i) == 'o' && ++ oCount == 3) return false;

        }
        return true;
    } else return false;

}
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + " ";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.charAt (word.indexOf ("boo") + 3) == 'o') {
            return false;
        } else {
            return true;
        }
    } else if (word.contains ("boo")) {
        return true;
    }

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588522_1_17
26588315_26588591_1_11
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String word) {
    if (word == null) return false;

    word = word.toLowerCase ();
    if (word.length () < 3) return false;

    if (! word.contains ("boo")) return false;
    else if (word.length () == 3) return true;

    int index = word.indexOf ("boo");
    if (word.charAt (index + 1) != 'o') return true;

    return false;
}
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + "";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.contains ("booo")) return false;
        else return true;

    } else return false;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588522_1_17
26588315_26588691_1_14
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String word) {
    if (word == null) return false;

    word = word.toLowerCase ();
    if (word.length () < 3) return false;

    if (! word.contains ("boo")) return false;
    else if (word.length () == 3) return true;

    int index = word.indexOf ("boo");
    if (word.charAt (index + 1) != 'o') return true;

    return false;
}
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + " ";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.charAt (word.indexOf ("boo") + 3) == 'o') {
            return false;
        } else {
            return true;
        }
    } else if (word.contains ("boo")) {
        return true;
    }

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26588315_26588591_1_11
26588315_26588691_1_14
Title: Checking string content returns unexpected results 
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + "";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.contains ("booo")) return false;
        else return true;

    } else return false;

}
----------------------------------------

public static boolean ghostHunters (String word) {
    word = word.toLowerCase () + " ";
    if (word.contains ("boo") && word.length () > 3) {
        if (word.charAt (word.indexOf ("boo") + 3) == 'o') {
            return false;
        } else {
            return true;
        }
    } else if (word.contains ("boo")) {
        return true;
    }

    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26604957_26604995_1_14
26604957_26605101_1_17
Title: Using enhanced for-loop to retrieve data from two ArrayLists 
----------------------------------------

public List < String > allAccounts () {
    ArrayList < String > accounts = new ArrayList < String > ();
    for (Customer customer : clients) {
        String clientInfo = "";
        clientInfo = clientInfo + customer.getCust () + "\n\n";
        for (Account account : customer.accounts) {
            clientInfo = clientInfo + account.getAccinfo () + "\n";
        }
        accounts.add (clientInfo);
        continue;
    }
    accounts.add ("Not in use");
    return accounts;
}
----------------------------------------

public String allAccounts () {
    String clientInfo = "";
    for (Customer customer : clients) {
        clientInfo = clientInfo + customer.getCust () + "\n\n";
        for (Account account : customer.accounts) {
            clientInfo = clientInfo + account.getAccinfo () + "\n";
        }
    }
    if ("".equals (clientInfo)) {
        return "Not in use";
    }
    return clientInfo;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26613879_26613993_1_29
26613879_26615085_56_64
Title: Java Swing: Get text value from JOptionPane 
----------------------------------------

public static void main (String [] argv) throws Exception {
    int cost = 100;
    JLabel l = new JLabel ("The exchange money is");
    JPanel p = new JPanel (new GridLayout (1, 2, 10, 10));
    p.setPreferredSize (new Dimension (400, 50));
    JTextField t = new JTextField ("Enter the amount of money");
    t.addKeyListener (new java.awt.event.KeyAdapter () {
        public void keyReleased (java.awt.event.KeyEvent evt) {
            try {
                int amount = Integer.parseInt (t.getText ());
                l.setText ("The exchange money is: \n" + (amount - cost));
            } catch (Exception ex) {
            }
        }}

    );
    p.add (t);
    p.add (l);
    int option = JOptionPane.showConfirmDialog (null, p, "JOptionPane Example : ", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
    if (option == 0) {
        System.out.println ("ok clicked");
    } else {
        System.out.println ("cancel clicked");
    }
}
----------------------------------------

public static void main (String [] args) {
    Runnable runnable = new Runnable () {
        @Override
        public void run () {
            new JOptionPaneExample ().displayGUI ();
        }}

    ;
    EventQueue.invokeLater (runnable);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26616891_26617145_1_19
26616891_26617317_4_23
Title: Replacing a char value in a string (Java) 
----------------------------------------

public static void main (String [] args) {
    String word = "";
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter a word: " + word);
    word = keyboard.nextLine ();
    String readChar = null;
    System.out.print ("What letter do you want to replace?: ");
    readChar = keyboard.next ();
    String changeChar;
    System.out.print ("With what letter do you wish to replace it? ");
    changeChar = keyboard.next ();
    keyboard.close ();
    System.out.println (word.replace (readChar, changeChar));
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter a word: ");
    String word = keyboard.nextLine ();
    System.out.print ("What letter do you want to replace?: ");
    char letter = keyboard.next ().charAt (0);
    StringBuffer out = new StringBuffer (word);
    System.out.print ("With what letter do you wish to replace it? ");
    char changeChar = keyboard.next ().charAt (0);
    for (int i = 0;
    i < word.length (); ++ i) if (word.charAt (i) == changeChar) out.setCharAt (i, changeChar);

    System.out.println ("The new word is " + out);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26616891_26617317_4_23
26616891_26617826_1_27
Title: Replacing a char value in a string (Java) 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter a word: ");
    String word = keyboard.nextLine ();
    System.out.print ("What letter do you want to replace?: ");
    char letter = keyboard.next ().charAt (0);
    StringBuffer out = new StringBuffer (word);
    System.out.print ("With what letter do you wish to replace it? ");
    char changeChar = keyboard.next ().charAt (0);
    for (int i = 0;
    i < word.length (); ++ i) if (word.charAt (i) == changeChar) out.setCharAt (i, changeChar);

    System.out.println ("The new word is " + out);
}
----------------------------------------

public static void main (String [] args) {
    String word = "";
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Enter a word: " + word);
    word = keyboard.nextLine ();
    boolean done = false;
    do {
        String readChar = null;
        System.out.print ("What letter do you want to replace?: ");
        readChar = keyboard.next ();
        if (word.contains (readChar)) {
            String changeChar;
            System.out.print ("With what letter do you wish to replace it? ");
            changeChar = keyboard.next ();
            done = true;
            keyboard.close ();
            System.out.println (word.replace (readChar, changeChar));
        }
    } while (! done);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26620515_26620562_60_82
26620515_26620566_1_23
Title: Else-if statement 
----------------------------------------

public static void getGrade (double score) {
    if (average > 90) {
        System.out.println ("You have an A");
    } else if (average >= 80) {
        System.out.println ("You have a B");
    } else if (average >= 70) {
        System.out.println ("You have a C");
    } else if (average >= 60) {
        System.out.println ("You have a D");
    } else if (average < 60) {
        System.out.println ("You have a F");
    }

}
----------------------------------------

public static String getGrade (double average) {
    if (average > 90) {
        return "A";
    } else if (average >= 80) {
        return "B";
    } else if (average >= 70) {
        return "C";
    } else if (average >= 60) {
        return "D";
    } else {
        return "F";
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26621060_26622554_1_24
26621060_31096444_6_35
Title: Display a RecyclerView in Fragment 
----------------------------------------

@Override
public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    final View view = inflater.inflate (R.layout.fragment_artist_tracks, container, false);
    final FragmentActivity c = getActivity ();
    final RecyclerView recyclerView = (RecyclerView) view.findViewById (R.id.recyclerView);
    LinearLayoutManager layoutManager = new LinearLayoutManager (c);
    recyclerView.setLayoutManager (layoutManager);
    new Thread (new Runnable () {
        @Override
        public void run () {
            final RecyclerAdapter adapter = new RecyclerAdapter (c);
            c.runOnUiThread (new Runnable () {
                @Override
                public void run () {
                    recyclerView.setAdapter (adapter);
                }}

            );
        }}

    ).start ();
    return view;
}
----------------------------------------

public View onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View rootView = inflater.inflate (R.layout.fragment_colors, container, false);
    RecyclerView recyclerView = (RecyclerView) rootView.findViewById (R.id.list);
    recyclerView.setLayoutManager (new LinearLayoutManager (getActivity ()));
    ItemData itemsData [] = {new ItemData ("Indigo", R.drawable.circle), new ItemData ("Red", R.drawable.color_ic_launcher), new ItemData ("Blue", R.drawable.indigo), new ItemData ("Green", R.drawable.circle), new ItemData ("Amber", R.drawable.color_ic_launcher), new ItemData ("Deep Orange", R.drawable.indigo)};
    MyAdapter mAdapter = new MyAdapter (itemsData);
    recyclerView.setAdapter (mAdapter);
    recyclerView.setItemAnimator (new DefaultItemAnimator ());
    return rootView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2662172_2744638_26_36
2662172_2744638_51_74
Title: Blackberry - Custom EditField Cursor 
----------------------------------------

public void sublayout (int width, int height) {
    if (managerWidth == 0) {
        managerWidth = searchEdit.getPreferredWidth ();
    }
    if (managerHeight == 0) {
        managerHeight = searchEdit.getPreferredHeight ();
    }
    super.sublayout (managerWidth, managerHeight);
    setExtent (managerWidth, managerHeight);
}
----------------------------------------

protected void sublayout (int maxWidth, int maxHeight) {
    int currX = 0;
    int currY = 0;
    Field currField;
    currField = this.getField (0);
    switch (ScreenConfig.getInstance ().getScreen ()) {
        case ScreenConfig.SCREEN_320_240 :
            currX = 5;
            currY = 3;
            break;
        case ScreenConfig.SCREEN_480_360 :
        case ScreenConfig.SCREEN_480_320 :
            currX = 5;
            currY = 1;
            break;
    }
    this.setPositionChild (currField, currX, currY);
    this.layoutChild (currField, currField.getPreferredWidth (), currField.getPreferredHeight ());
    setExtent (this.getPreferredWidth (), this.getPreferredHeight ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26624561_26627434_1_13
26624561_26627473_1_17
Title: Display List of Date Selected in Vaadin? 
----------------------------------------

public List < Date > getDatesBetween (final Date date1, final Date date2) {
    List < Date > dates = new ArrayList < Date > ();
    Calendar c = Calendar.getInstance ();
    c.setTime (date1);
    while (c.getTime ().compareTo (date2) < 0) {
        c.add (Calendar.DATE, 1);
        dates.add (c.getTime ());
    }
    return dates;
}
----------------------------------------

public static List < Date > getDatesBetween (final Date date1, final Date date2) {
    List < Date > dates = new ArrayList < Date > ();
    Calendar cal1 = new GregorianCalendar ();
    cal1.setTime (date1);
    Calendar cal2 = new GregorianCalendar ();
    cal2.setTime (date2);
    while (cal1.get (Calendar.YEAR) != cal2.get (Calendar.YEAR) || cal1.get (Calendar.MONTH) != cal2.get (Calendar.MONTH) || cal1.get (Calendar.DATE) != cal2.get (Calendar.DATE)) {
        cal1.add (Calendar.DATE, 1);
        dates.add (cal1.getTime ());
    }
    return dates;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26629763_26630711_25_41
26629763_26630711_46_61
Title: JXTable not refreshed upon button click 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Random random = new Random (System.currentTimeMillis ());
    DefaultTableModel model = new DefaultTableModel (0, 6);
    for (int i = 0;
    i < model.getColumnCount (); i ++) {
        model.addRow (new Object [] {random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt ()});
    }
    table.setModel (model);
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Random random = new Random (System.currentTimeMillis ());
    DefaultTableModel model = (DefaultTableModel) table.getModel ();
    model.setRowCount (0);
    for (int i = 0;
    i < model.getColumnCount (); i ++) {
        model.addRow (new Object [] {random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt (), random.nextInt ()});
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26631396_27880100_17_33
26631396_34980329_15_28
Title: Insert document in mongodb with autoincrement field from java 
----------------------------------------

public static void main (String [] args) {
    try {
        MongoClient mongoClient = new MongoClient ();
        DB database = mongoClient.getDB (DB_NAME);
        testCollection = database.getCollection (TEST_COLLECTION);
        countersCollection = database.getCollection (COUNTERS_COLLECTION);
    } catch (UnknownHostException e) {
        e.printStackTrace ();
    }
    if (countersCollection.count () == 0) {
        createCountersCollection ();
    }
    createTestCollection ();
}
----------------------------------------

public static void main (String [] args) {
    MongoClient mongoClient = new MongoClient ();
    MongoDatabase database = mongoClient.getDatabase (DB_NAME);
    testCollection = database.getCollection (TEST_COLLECTION);
    countersCollection = database.getCollection (COUNTERS_COLLECTION);
    if (countersCollection.count () == 0) {
        createCountersCollection ();
    }
    createTestCollection ();
    mongoClient.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26631396_27880100_54_70
26631396_34980329_48_64
Title: Insert document in mongodb with autoincrement field from java 
----------------------------------------

public static void createTestCollection () {
    BasicDBObject document = new BasicDBObject ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Sarah");
    testCollection.insert (document);
    document = new BasicDBObject ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Bob");
    testCollection.insert (document);
    document = new BasicDBObject ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Alex");
    testCollection.insert (document);
}
----------------------------------------

public static void createTestCollection () {
    Document document = new Document ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Dinah");
    testCollection.insertOne (document);
    document = new Document ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Jonny");
    testCollection.insertOne (document);
    document = new Document ();
    document.append ("_id", getNextSequence ("userid"));
    document.append ("name", "Brody");
    testCollection.insertOne (document);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26640781_26641023_6_42
26640781_26642012_4_25
Title: Hollow NxN square using loops 
----------------------------------------

public static void main (String [] args) {
    int n, counter1 = 1, counter2 = 1;
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Please enter a number between 1 and 9: ");
    n = kbd.nextInt ();
    if (n <= 9) {
        while (counter1 <= n) {
            if (counter1 == 1 || counter1 == n) {
                counter2 = 1;
                while (counter2 <= n) {
                    System.out.print (n);
                    counter2 = counter2 + 1;
                }
            } else {
                counter2 = 1;
                while (counter2 <= n) {
                    if (counter2 == 1 || counter2 == n) {
                        System.out.print (n);
                    } else {
                        System.out.print (" ");
                    }
                    counter2 = counter2 + 1;
                }
            }
            System.out.println ();
            counter1 = counter1 + 1;
        }
    } else {
        System.out.print ("Error: The number you have entered is not between 1 and 9");
    }
}
----------------------------------------

public static void main (String [] args) {
    int n;
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Please enter a number between 1 and 9: ");
    n = kbd.nextInt ();
    if (n > 9) {
        System.out.println ("Error: The number you have entered is not between 1 and 9");
        return;
    }
    String nS = String.valueOf (n);
    String eS = " ";
    for (int x = 1;
    x <= n; x ++) {
        for (int y = 1;
        y <= n; y ++) {
            String toPrint = (x == 1 || x == n || y == 1 || y == n) ? nS : eS;
            System.out.print (toPrint);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26645310_26645471_5_30
26645310_26650276_14_34
Title: java-recursive binary search tree 
----------------------------------------

public boolean insert (int value, Node explore) {
    if (explore != null) {
        if (value < explore.data) {
            if (explore.left != null) {
                return insert (value, explore.left);
            } else {
                explore.left = new Node (value);
                return true;
            }
        } else if (value > explore.data) {
            if (explore.right != null) {
                return insert (value, explore.right);
            } else {
                explore.right = new Node (value);
                return true;
            }
        } else {
            return false;
        }

    } else {
        explore = new Node (value);
    }
    return true;
}
----------------------------------------

private boolean insert (Node node, int value) {
    if (value < node.value) {
        if (node.left != null) {
            return insert (node.left, value);
        } else {
            node.left = new Node (value);
            return true;
        }
    } else if (value > node.value) {
        if (node.right != null) {
            return insert (node.right, value);
        } else {
            node.right = new Node (value);
            return true;
        }
    } else {
        return false;
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26646031_26646161_1_13
26646031_26646236_20_39
Title: isItPrime using a boolean method? So Close 
----------------------------------------

public static boolean isPrime (int [] numbers) {
    boolean prime [] = new boolean [numbers.length];
    for (int i = 0;
    i < numbers.length; i ++) {
        for (int j = 2;
        j <= sqrt (numbers [i]); j ++) {
            if (numbers [j] % i == 0) {
                prime [i] = false;
                continue;
            }
        }
        prime [i] = true
    }
    return prime;
}
----------------------------------------

public static boolean isPrime (int numbers) {
    boolean Prime = true;
    if (numbers == 1 || numbers == 0) {
        Prime = false;
        return Prime;
    }
    for (int i = 2;
    i < numbers; i ++) {
        if (numbers % i == 0) {
            Prime = false;
            return Prime;
        } else {
            Prime = true;
        }
    }
    return Prime;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26646031_26646161_1_13
26646031_26647238_1_15
Title: isItPrime using a boolean method? So Close 
----------------------------------------

public static boolean isPrime (int [] numbers) {
    boolean prime [] = new boolean [numbers.length];
    for (int i = 0;
    i < numbers.length; i ++) {
        for (int j = 2;
        j <= sqrt (numbers [i]); j ++) {
            if (numbers [j] % i == 0) {
                prime [i] = false;
                continue;
            }
        }
        prime [i] = true
    }
    return prime;
}
----------------------------------------

public static String isPrime (int numbers) {
    if (numbers == 1 || numbers == 0) {
        return "Not Prime";
    }
    for (int i = 2;
    i < numbers; i ++) {
        if (numbers % i == 0) {
            return "Not Prime";
        }
    }
    return "Prime";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26646031_26646236_20_39
26646031_26647238_1_15
Title: isItPrime using a boolean method? So Close 
----------------------------------------

public static boolean isPrime (int numbers) {
    boolean Prime = true;
    if (numbers == 1 || numbers == 0) {
        Prime = false;
        return Prime;
    }
    for (int i = 2;
    i < numbers; i ++) {
        if (numbers % i == 0) {
            Prime = false;
            return Prime;
        } else {
            Prime = true;
        }
    }
    return Prime;
}
----------------------------------------

public static String isPrime (int numbers) {
    if (numbers == 1 || numbers == 0) {
        return "Not Prime";
    }
    for (int i = 2;
    i < numbers; i ++) {
        if (numbers % i == 0) {
            return "Not Prime";
        }
    }
    return "Prime";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26647814_26648609_12_19
26647814_33856056_16_21
Title: "JMockit: Singleton class Order of test" 
----------------------------------------

public void testOne (final@Mocked
SomeClass someClass) {
    instance.methodOne ();
    new Verifications () {

        {
            SomeClass.fillListOne ();
        }

    }

    ;
}
----------------------------------------

public void testOne () {
    Singleton.getInstance ().methodOne ();
    new Verifications () {

        {
            SomeClass.fillListOne ();
        }

    }

    ;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26651047_26668227_59_72
26651047_26668227_84_93
Title: Perform action upon completion of barcode scanning to JTextField 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (count == 0) {
        ((Timer) e.getSource ()).stop ();
    } else {
        Document doc = field.getDocument ();
        int length = doc.getLength ();
        try {
            doc.insertString (length, Integer.toString (count), null);
        } catch (BadLocationException ex) {
            Logger.getLogger (TimerDemo.class.getName ()).log (Level.SEVERE, null, ex);
        }
        count --;
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (doc != null) {
        try {
            String text = doc.getText (0, doc.getLength ());
            statusLabel.setText (text);
        } catch (BadLocationException ex) {
            Logger.getLogger (TimerDemo.class.getName ()).log (Level.SEVERE, null, ex);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26654096_26654450_1_16
26654096_26654541_1_17
Title: recursion method in binary search tree-java 
----------------------------------------

private Node insert (int value, Node current) {
    if (current.data == value) {
        return current;
    } else if (current.left != null && current.left.data > value) {
        return insert (value, current.left);
    } else if (current.right != null && current.right.data < value) {
        return insert (value, current.right);
    } else {
        if (current.data > value) {
            current.left = new Node (value);
        } else {
            current.right = new Node (value);
        }
        return null;
    }

}
----------------------------------------

public boolean insert (int value, Node currentNode, Node parentNode) {
    if (currentNode == null) {
        Node valueNode = new Node (value);
        if (parentNode != null && parentNode.value > value) {
            parentNode.left = valueNode;
        } else if (parentNode != null && parentNode.value < value) {
            parentNode.right = valueNode;
        }

        return true;
    } else if (currentNode.value = value) {
        return false;
    } else if (value > currentNode.value) {
        return insert (value, currentNode.right, currentNode);
    } else if (value < currentNode.value) {
        return insert (value, currentNode.left, currentNode);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
26659363_26857778_56_71
26659363_26868280_6_54
Title: Geo chart for java 
----------------------------------------

public static void main (String [] args) throws IOException {
    Set < String > countries = new TreeSet < String > ();
    for (String country : args) {
        countries.add (country);
    }
    FileOutputStream fileOutputStream = new FileOutputStream ("out.svg");
    OutputStreamWriter out = new OutputStreamWriter (fileOutputStream, StandardCharsets.UTF_8);
    out.append (prefix);
    for (String country : worldMap.keySet ()) {
        out.append (MessageFormat.format (pathFormat, country, worldMap.get (country), countries.contains (country) ? "tomato" : "grey"));
    }
    out.append (postfix);
    out.flush ();
    out.close ();
}
----------------------------------------

public static void main (String...args) {
    try {
        String parser = XMLResourceDescriptor.getXMLParserClassName ();
        SAXSVGDocumentFactory f = new SAXSVGDocumentFactory (parser);
        Document doc = f.createDocument ("http://example.com/stuff", MapMaker.class.getClassLoader ().getResourceAsStream (MAP_ROUND));
        SVGDocument sdoc = (SVGDocument) doc;
        Element svgRoot = sdoc.getDocumentElement ();
        PNGTranscoder t = new PNGTranscoder ();
        TranscoderInput input = new TranscoderInput (doc);
        NodeList stylesList = doc.getElementsByTagName ("style");
        Node styleNode = stylesList.item (0);
        SVGStyleElement style = (SVGStyleElement) doc.createElementNS (SVG_NAMESPACE_URI, "style");
        style.setAttributeNS (null, "type", "text/css");
        style.appendChild (doc.createCDATASection (".us {fill: blue;}"));
        styleNode.getParentNode ().appendChild (style);
        OutputStream ostream = new FileOutputStream ("outblue.jpg");
        TranscoderOutput output = new TranscoderOutput (ostream);
        t.transcode (input, output);
        ostream.close ();
        SVGStyleElement oldStyle = style;
        style = (SVGStyleElement) doc.createElementNS (SVG_NAMESPACE_URI, "style");
        style.setAttributeNS (null, "type", "text/css");
        style.appendChild (doc.createCDATASection (".us {fill: green;}"));
        styleNode.getParentNode ().replaceChild (style, oldStyle);
        File outFile = new File (System.getProperty ("java.io.tmpdir"), "outgreen.png");
        ostream = new FileOutputStream (outFile);
        output = new TranscoderOutput (ostream);
        t.transcode (input, output);
        ostream.close ();
        System.out.println ("Out File: " + outFile);
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
