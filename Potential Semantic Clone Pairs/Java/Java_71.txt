$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31028964_31034371_1_71
31028964_48711880_51_62
Title: How to find a missing number from a string of digits without spaces between them? 
----------------------------------------

public static void main (String [] args) {
    String pattern = "(\\d{%s})(\\d{0,%s})";
    String toVerify = "9979989991000100110021004";
    String toVerifyCopy = toVerify;
    List < Integer > items = new LinkedList < > ();
    Integer found = null;
    for (int i = 1;
    i < toVerifyCopy.length (); i ++) {
        int first = 0;
        Integer second = 0;
        int secondSize = i;
        boolean isSize = false;
        for (int j = 1;
        j < i + 2; j ++) {
            Pattern patron = Pattern.compile (String.format (pattern, i, j));
            Matcher matcher = patron.matcher (toVerifyCopy);
            if (matcher.find ()) {
                first = Integer.parseInt (matcher.group (1));
                second = Integer.parseInt (matcher.group (2));
                if (second == first + 1) {
                    secondSize = j;
                    isSize = true;
                    j ++;
                } else if (second == first + 2) {
                    found = first + 1;
                    secondSize = j;
                    isSize = true;
                    j ++;
                } else {
                    isSize = false;
                }

            }
        }
        if (isSize) {
            toVerifyCopy = toVerifyCopy.substring (i);
            i = i - 1;
            if (items.size () < 2 || toVerifyCopy.length () == i + secondSize) {
                items.add (first);
            }
            items.add (second);
        } else {
            if (items.size () > 0) {
                if (first == items.get (items.size () - 1)) {
                    items.clear ();
                    toVerifyCopy = toVerify;
                }
            }
        }
    }
    for (Integer item : items) {
        System.out.println (item);
    }
    if (found != null) {
        System.out.println ("Found: " + found);
    }
}
----------------------------------------

public static void main (String [] args) {
    findGap ("012346789");
    findGap ("1234678910");
    findGap ("26272829313233");
    findGap ("26272829313333");
    findGap ("9293949596979899101");
    findGap ("99101102103104105106107108109110111112");
    findGap ("596597598600601602");
    findGap ("989999009901990299049905");
    findGap ("98999901990299039904990599069907");
    findGap ("9998999910000100011000210004");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31032471_31032539_3_32
31032471_31032624_3_27
Title: Thousand Digit String 
----------------------------------------

public static void main (String [] args) {
    String num = "73167176531";
    int product = 0;
    int product2 = 0;
    int i1 = 0;
    int i2 = 0;
    int i3 = 0;
    int i4 = 0;
    int i5 = 0;
    for (int i = 0;
    i < num.length () - 4; i ++) {
        product2 = Character.getNumericValue (num.charAt (i)) * Character.getNumericValue (num.charAt (i + 1)) * Character.getNumericValue (num.charAt (i + 2)) * Character.getNumericValue (num.charAt (i + 3)) * Character.getNumericValue (num.charAt (i + 4));
        if (product2 > product) {
            int i1 = num.charAt (i);
            int i2 = num.charAt (i + 1);
            int i3 = num.charAt (i + 2);
            int i4 = num.charAt (i + 3);
            int i5 = num.charAt (i + 4);
        }
    }
    System.out.println (product);
    System.out.println (i1);
    System.out.println (i2);
    System.out.println (i3);
    System.out.println (i4);
    System.out.println (i5);
}
----------------------------------------

public static void main (String [] args) {
    String num = "73167176531";
    int product = 0;
    int product2 = 0;
    int index = 0;
    int [] numbers = new int [5];
    for (int i = 0;
    i < num.length () - 4; i ++) {
        product2 = Character.getNumericValue (num.charAt (i)) * Character.getNumericValue (num.charAt (i + 1)) * Character.getNumericValue (num.charAt (i + 2)) * Character.getNumericValue (num.charAt (i + 3)) * Character.getNumericValue (num.charAt (i + 4));
        if (product2 > product) {
            product = product2;
            index = i;
        }
    }
    numbers [0] = Character.getNumericValue (num.charAt (index));
    numbers [1] = Character.getNumericValue (num.charAt (index + 1));
    numbers [2] = Character.getNumericValue (num.charAt (index + 2));
    numbers [3] = Character.getNumericValue (num.charAt (index + 3));
    numbers [4] = Character.getNumericValue (num.charAt (index + 4));
    System.out.println (Arrays.toString (numbers));
    System.out.println (product);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31035348_31035765_109_127
31035348_31035765_80_92
Title: Creating objects from dynamic JPanels 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    for (int n = 0;
    n < content.getComponentCount (); n ++) {
        if (content.getComponent (n) instanceof SplitSnakeCreationPane) {
            SplitSnakeCreationPane com = (SplitSnakeCreationPane) content.getComponent (n);
            System.out.println ("Sname Name is : " + com.getSnakeName ());
            System.out.println ("ChannelCount is : " + com.getChannelCount ());
            System.out.println ("ArtistSupplied  is : " + com.getArtistSupplied ());
        }
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    SplitSnakeCreationPane pane = new SplitSnakeCreationPane ();
    int insertAt = Math.max (0, content.getComponentCount () - 1);
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.gridwidth = GridBagConstraints.REMAINDER;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.weightx = 1;
    content.add (pane, gbc, insertAt);
    System.out.println (insertAt);
    content.revalidate ();
    content.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31045165_31045581_2_14
31045165_31045617_7_27
Title: How to check duplicate from Strings given by user 
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    Set < String > words = new HashSet < String > ();
    while (true) {
        System.out.println ("Type a word: ");
        String word = reader.nextLine ();
        if (! words.add (word));

        {
            System.out.println ("You gave the word " + word + " twice");
            break;
        }}
}
----------------------------------------

public static void main (String [] args) {
    Scanner reader = new Scanner (System.in);
    Map < String, Integer > countMap = new HashMap < String, Integer > ();
    System.out.println ("Type a word: ");
    String word = reader.nextLine ();
    String [] words = word.split (" ");
    for (int i = 0;
    i < words.length; i ++) {
        if (countMap.containsKey (words [i])) {
            countMap.put (words [i], countMap.get (words [i]) + 1);
        } else {
            countMap.put (words [i], 1);
        }
    }
    for (Map.Entry < String, Integer > entry : countMap.entrySet ()) {
        if (entry.getValue () > 1) {
            System.out.println ("You gave the word " + entry.getKey () + " : " + entry.getValue () + " many times");
        }
    }
    reader.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31054303_31054530_1_34
31054303_31054682_1_34
Title: I need this calculator to redirect the user for input incase he enters the wrong one 
----------------------------------------

public static void main (String [] args) {
    String s1 = getInput ("Enter a number: ");
    String s2 = getInput ("Enter a number: ");
    int opInt = 0;
    double result = 0;
    while (opInt < 1 || opInt > 4) {
        String op = getInput ("Enter: 1 = Add, 2 = Subtract, 3 = Multiply, 4    = Divide ");
        opInt = Integer.parseInt (op);
        switch (opInt) {
            case 1 :
                result = addValues (s1, s2);
                break;
            case 2 :
                result = subtractValues (s1, s2);
                break;
            case 3 :
                result = multiplyValues (s1, s2);
                break;
            case 4 :
                result = divideValue (s1, s2);
                break;
            default :
                System.out.println ("the value doesn't exist.");
                break;
        }
    }
    System.out.println (result);
}
----------------------------------------

public static void main (String [] args) {
    String s1 = getInput ("Enter a number: ");
    String s2 = getInput ("Enter a number: ");
    double result = 0;
    boolean repeat;
    do {
        String op = getInput ("Enter > 1 = Add, 2 = Subtract, 3 = Multiply, 4 = Divide :");
        repeat = false;
        switch (Integer.parseInt (op)) {
            case 1 :
                result = addValues (s1, s2);
                break;
            case 2 :
                result = subtractValues (s1, s2);
                break;
            case 3 :
                result = multiplyValues (s1, s2);
                break;
            case 4 :
                result = divideValue (s1, s2);
                break;
            default :
                System.out.println ("the value doesn't exist.");
                repeat = true;
                break;
        }
    } while (repeat);
    System.out.println (result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31058209_31058315_6_41
31058209_31058322_3_48
Title: RandomInt and If Else issue 
----------------------------------------

public static void main (String [] args) {
    String name = JOptionPane.showInputDialog ("Rock, Paper, or Scissors?");
    System.out.println (name + "!");
    Random random = new Random ();
    int randomInt = random.nextInt (10 - 1 + 1) + 1;
    if (name.equalsIgnoreCase ("Rock")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Paper! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Rock! We Tied!");
        } else {
            System.out.println ("Scissors! You Win!");
        }

    }
    if (name.equalsIgnoreCase ("Paper")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Scissors! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Paper! We Tied!");
        } else {
            System.out.println ("Rock! You Win!");
        }

    }
    if (name.equalsIgnoreCase ("Scissors")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Rock! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Scissors! We Tied!");
        } else {
            System.out.println ("Paper! You Win!");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    String name = JOptionPane.showInputDialog ("Rock, Paper, or Scissors?");
    System.out.println (name + "!");
    Random rn = new Random ();
    int randomInt = rn.nextInt (10) + 1;
    if (name.equalsIgnoreCase ("Rock")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Paper! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Rock! We Tied!");
        } else {
            System.out.println ("Scissors! You Win!");
        }

    }
    if (name.equalsIgnoreCase ("Paper")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Scissors! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Paper! We Tied!");
        } else {
            System.out.println ("Rock! You Win!");
        }

    }
    if (name.equalsIgnoreCase ("Scissors")) {
        if (0 < randomInt && randomInt < 4) {
            System.out.println ("Rock! You Lose!");
        } else if (4 <= randomInt && randomInt <= 6) {
            System.out.println ("Scissors! We Tied!");
        } else {
            System.out.println ("Paper! You Win!");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31067224_31067446_1_15
31067224_31067548_1_17
Title: equals method - how to override 
----------------------------------------

@Override
public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Currency other = (Currency) obj;
    if (cents != other.cents) return false;

    if (dollars != other.dollars) return false;

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) {
        return true;
    } else if (obj == null) {
        return false;
    } else if (getClass () != obj.getClass ()) {
        return false;
    }

    if (this.someField.equals (castObject.someField) && this.otherField.equals (castObject.otherField)) {
        return true;
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31073179_31074243_3_45
31073179_31074288_6_21
Title: Adding JLabel dynamically in a pattern but last one is not working correctly 
----------------------------------------

public static void main (String [] args) {
    JFrame jf = new JFrame ();
    jf.setVisible (true);
    jf.setDefaultCloseOperation (jf.EXIT_ON_CLOSE);
    jf.setLayout (null);
    jf.setSize (700, 400);
    int c1 = 40;
    int count = 0, count2 = 0, count3 = 0, count4 = 0, x;
    JLabel [] jl = new JLabel [c1];
    for (int i = 0;
    i <= c1 - 1; i ++) {
        jl [i] = new JLabel ();
        if (i <= 9) {
            x = 25 * count;
            jl [i].setBounds (x, 50, 20, 20);
            count ++;
        }
        if (i >= 10 && i <= 19) {
            x = 25 * count2;
            jl [i].setBounds (x, 80, 20, 20);
            count2 ++;
        }
        if (i >= 20 && i <= 29) {
            x = 25 * count3;
            jl [i].setBounds (x, 110, 20, 20);
            count3 ++;
        }
        if (i >= 30 && i <= 39) {
            x = 25 * count4;
            jl [i].setBounds (x, 130, 20, 20);
            count4 ++;
        }
        jl [i].setText ("O");
        jf.add (jl [i]);
    }
    jf.revalidate ();
    jf.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JFrame jf = new JFrame ();
    jf.setVisible (true);
    jf.setDefaultCloseOperation (jf.EXIT_ON_CLOSE);
    jf.setLayout (new GridLayout (4, 10));
    jf.setSize (700, 400);
    jf.setLocationRelativeTo (null);
    int c1 = 40;
    JLabel [] jl = new JLabel [c1];
    for (int i = c1 - 1;
    i >= 0; i --) {
        jl [i] = new JLabel ();
        jl [i].setText ("O");
        jf.add (jl [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31090227_31090469_1_14
31090227_31090480_10_28
Title: Can't get more than one random number to match my five guesses 
----------------------------------------

public static void main (String [] args) {
    final int MIN_NUM = 1;
    final int MAX_NUM = 5;
    int count = 0;
    int randomNum = getRandomNum (MIN_NUM, MAX_NUM);
    int guess = getUserGuess ();
    boolean determineMatch = isGuessCorrect (randomNum, guess);
    if (determineMatch == true) {
        count ++;
    }
    displayResult (count);
}
----------------------------------------

public static void main (String [] args) {
    final int MIN_NUM = 1;
    final int MAX_NUM = 5;
    int count = 0;
    int [] guesses = getUserGuess ();
    List < Integer > randomNums = getRandomNum (MIN_NUM, MAX_NUM);
    for (int i = 0;
    i < guesses.length; i ++) {
        boolean determineMatch = isGuessCorrect (randomNums, guesses [i]);
        if (determineMatch == true) {
            count ++;
        }
    }
    displayResult (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31090617_31091280_19_30
31090617_31091280_72_88
Title: window crash in java game development 
----------------------------------------

public void run () {
    JFrame frame = new JFrame ("Hello Word Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    DrawingPanel drawingPanel = new DrawingPanel ();
    frame.add (drawingPanel);
    frame.pack ();
    frame.setVisible (true);
    new Thread (new Delay (drawingPanel)).start ();
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (5000L);
    } catch (InterruptedException e) {
    }
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            drawingPanel.setColor (Color.WHITE);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31096718_44580193_100_129
31096718_44580193_139_169
Title: Read and write excel in Selenium WebDriver 
----------------------------------------

public String getCellData (String sheetName, int rowNumber, int columnNumber) {
    String celldata = "";
    if (columnNumber >= 0 || rowNumber >= 0) {
        try {
            sheet = getSheet (sheetName);
            Row row = sheet.getRow (rowNumber);
            Cell cell = row.getCell (columnNumber);
            celldata = getCellContentAsString (cell);
        } catch (NullPointerException e) {
            TALogger.logError ("Geting NullPointerException while reading cell => Sheet_Name=" + sheetName + " column=" + columnNumber + "  rownumber=" + rowNumber);
            return "";
        } catch (Exception ex) {
            TALogger.logError ("Geting exception while reading cell => Sheet_Name=" + sheetName + " column=" + columnNumber + "  rownumber=" + rowNumber, ex);
            return "";
        }
    } else {
        throw new TARuntimeException ("Invalid index..!! rowIndex= " + rowNumber + "  columnIndex=" + columnNumber);
    }
    return celldata;
}
----------------------------------------

public String getCellData (String sheetName, int rowNumber, String columnName) {
    String celldata = "";
    sheet = getSheet (sheetName);
    int columnNumber = getColumnNumber (0, columnName);
    if (columnNumber >= 0 || rowNumber >= 0) {
        try {
            Row row = sheet.getRow (rowNumber);
            Cell cell = row.getCell (columnNumber);
            celldata = getCellContentAsString (cell);
        } catch (NullPointerException e) {
            TALogger.logError ("Geting NullPointerException while reading cell => Sheet_Name=" + sheetName + " column=" + columnNumber + "  rownumber=" + rowNumber);
            return "";
        } catch (Exception ex) {
            TALogger.logError ("Geting exception while reading cell => Sheet_Name=" + sheetName + " column=" + columnNumber + "  rownumber=" + rowNumber, ex);
            return "";
        }
    } else {
        throw new TARuntimeException ("Invalid index..!! rowIndex= " + rowNumber + "  columnIndex=" + columnNumber);
    }
    return celldata;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31099213_31099380_1_32
31099213_31101645_83_138
Title: Changing labels with resource bundle 
----------------------------------------

@Override
public void actionPerformed (ActionEvent e) {
    Object input = e.getSource ();
    if (input == UKLang) {
        currentLocale = new Locale ("en");
        labels = ResourceBundle.getBundle ("LabelsBundle", currentLocale);
    } else if (input == DELang) {
        currentLocale = new Locale ("de");
        labels = ResourceBundle.getBundle ("LabelsBundle", currentLocale);
    } else if (input == FRLang) {
        currentLocale = new Locale ("fr");
        labels = ResourceBundle.getBundle ("LabelsBundle_fr", currentLocale);
    } else if (input == POLLang) {
        currentLocale = new Locale ("pl");
        labels = ResourceBundle.getBundle ("LabelsBundle_pol", currentLocale);
    }

    resultWaveLabel.setText (labels.getString ("blabla"));
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    Object input = e.getSource ();
    if (input == UKLang) {
        currentLocale = new Locale ("en");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_en", currentLocale);
        setLanguage ();
    } else if (input == DELang) {
        currentLocale = new Locale ("de");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_de", currentLocale);
        setLanguage ();
    } else if (input == FRLang) {
        currentLocale = new Locale ("fr");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_fr", currentLocale);
        setLanguage ();
    } else if (input == POLLang) {
        currentLocale = new Locale ("pl");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_pl", currentLocale);
        setLanguage ();
    } else if (input == ESPLang) {
        currentLocale = new Locale ("esp");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_esp", currentLocale);
        setLanguage ();
    } else if (input == RUSLang) {
        currentLocale = new Locale ("rus");
        labels = ResourceBundle.getBundle ("GuitarPro.LabelsBundle_rus", currentLocale);
        setLanguage ();
    } else if (input == about) JOptionPane.showMessageDialog (null, aboutApplication);
    else if (input == exit) dispose ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31106094_31106177_4_23
31106094_31106258_1_16
Title: ArrayList remove element with index 0 and 1 
----------------------------------------

public static void main (String [] args) {
    ArrayList c = new ArrayList ();
    c.add ("A");
    c.add ("B");
    c.add ("C");
    for (Iterator i = c.iterator ();
    i.hasNext ();) System.out.println (i.next ());

    System.out.println ("");
    c.remove (1);
    c.remove (0);
    for (Iterator i = c.iterator ();
    i.hasNext ();) System.out.println (i.next ());

}
----------------------------------------

public static void main (final String [] args) {
    Collection < String > c = new ArrayList < > (Arrays.asList ("A", "B", "C"));
    for (String str : c) System.out.println (str);

    System.out.println ();
    Iterator < String > it = c.iterator ();
    it.next ();
    it.remove ();
    it.next ();
    it.remove ();
    for (String str : c) System.out.println (str);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31106094_31106258_1_16
31106094_31108518_3_19
Title: ArrayList remove element with index 0 and 1 
----------------------------------------

public static void main (final String [] args) {
    Collection < String > c = new ArrayList < > (Arrays.asList ("A", "B", "C"));
    for (String str : c) System.out.println (str);

    System.out.println ();
    Iterator < String > it = c.iterator ();
    it.next ();
    it.remove ();
    it.next ();
    it.remove ();
    for (String str : c) System.out.println (str);

}
----------------------------------------

public static void main (String [] args) {
    ArrayList c = new ArrayList ();
    c.add ("A");
    c.add ("B");
    c.add ("C");
    for (Iterator i = c.iterator ();
    i.hasNext ();) System.out.println (i.next ());

    System.out.println ("");
    c.remove (1);
    c.remove (0);
    for (Iterator i = c.iterator ();
    i.hasNext ();) System.out.println (i.next ());

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31126793_38667595_11_36
31126793_38667595_14_34
Title: Download and write a file with Retrofit and RxJava 
----------------------------------------

public Observable < File > call (final Response < ResponseBody > responseBodyResponse) {
    return Observable.create (new Observable.OnSubscribe < File > () {
        @Override
        public void call (Subscriber < ? super File > subscriber) {
            try {
                String header = responseBodyResponse.headers ().get ("Content-Disposition");
                String fileName = header.replace ("attachment; filename=", "");
                File file = new File (Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_DOWNLOADS).getAbsoluteFile (), fileName);
                BufferedSink sink = Okio.buffer (Okio.sink (file));
                sink.writeAll (responseBodyResponse.body ().source ());
                sink.close ();
                subscriber.onNext (file);
                subscriber.onCompleted ();
            } catch (IOException e) {
                e.printStackTrace ();
                subscriber.onError (e);
            }
        }}

    );
}
----------------------------------------

public void call (Subscriber < ? super File > subscriber) {
    try {
        String header = responseBodyResponse.headers ().get ("Content-Disposition");
        String fileName = header.replace ("attachment; filename=", "");
        File file = new File (Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_DOWNLOADS).getAbsoluteFile (), fileName);
        BufferedSink sink = Okio.buffer (Okio.sink (file));
        sink.writeAll (responseBodyResponse.body ().source ());
        sink.close ();
        subscriber.onNext (file);
        subscriber.onCompleted ();
    } catch (IOException e) {
        e.printStackTrace ();
        subscriber.onError (e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31127684_31128273_3_23
31127684_31153721_3_23
Title: Factorial Issue 
----------------------------------------

public static void main (String [] args) {
    int n, i = 1;
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Enter n: ");
    n = kbd.nextInt ();
    while (n <= 0) {
        System.out.print ("Enter n: ");
        n = kbd.nextInt ();
    }
    int fact = 1;
    for (i = 1; i <= n; i ++) {
        System.out.print (i + "*");
        fact = fact * i;
    }
    System.out.print (" is " + fact);
}
----------------------------------------

public static void main (String [] args) {
    int n, i = 1;
    Scanner kbd = new Scanner (System.in);
    System.out.print ("Enter n: ");
    n = kbd.nextInt ();
    while (n <= 0) {
        System.out.print ("Enter n: ");
        n = kbd.nextInt ();
    }
    int result = 1;
    for (i = 1; i <= n; i ++) {
        System.out.print (i + "*");
        result *= i;
    }
    System.out.print (" is " + result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31129585_31129619_1_11
31129585_31129642_1_14
Title: Returns the nth short word in an array in Java 
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;

        if (nthShortWord == n) return words [i];

    }
    return "";
}
----------------------------------------

public String nthShortWord (String [] words, int n) {
    int nthShortWord = 0;
    String shortWord = "notFound";
    for (int i = 0;
    i < words.length; i ++) {
        if (words [i].length () <= 3) nthShortWord ++;

        if (nthShortWord == n) {
            shortWord = nthShortWord [i];
            break;
        }
    }
    return shortWord;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31135058_31135298_1_23
31135058_31135583_1_28
Title: Sort a nxn matrix (2D Array) 
----------------------------------------

public static void sortMatrix (final int [] [] matrix) {
    final int n = matrix.length;
    final int m = matrix [0].length;
    List < Integer > list = new AbstractList < Integer > () {
        @Override
        public Integer set (int index, Integer element) {
            return matrix [index / m] [index % m] = element;
        }@Override
        public Integer get (int index) {
            return matrix [index / m] [index % m];
        }@Override
        public int size () {
            return n * m;
        }}

    ;
    Collections.sort (list);
}
----------------------------------------

public int [] [] sortMatrix (int matrix [] [], int r, int c) {
    for (int k = 0;
    k < r * c; k ++) {
        Integer current = null;
        Integer previous = null;
        Integer currentI = null;
        Integer currentJ = null;
        Integer previousI = null;
        Integer previousJ = null;
        for (int i = 0;
        i < r; i ++) {
            for (int j = 0;
            j < c; j ++) {
                current = matrix [i] [j];
                currentI = i;
                currentJ = j;
                if (previous != null) {
                    if (current < previous) {
                        matrix [currentI] [currentJ] = previous;
                        matrix [previousI] [previousJ] = current;
                    }
                }
                previous = matrix [i] [j];
                previousI = i;
                previousJ = j;
            }
        }
    }
    return matrix;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31139260_31141165_23_49
31139260_31147209_28_67
Title: Add a button to a cells in a TableView (JAVAFX) 
----------------------------------------

public void start (Stage primaryStage) {
    ObservableList < EditableFileRow > data = FXCollections.observableArrayList (new EditableFileRow ("A File"), new EditableFileRow ("A Big File"), new EditableFileRow ("A Lost File"));
    TableColumn editColumn = new TableColumn ("Edit");
    editColumn.setCellValueFactory (new PropertyValueFactory < > ("editButton"));
    TableColumn fileNameColumn = new TableColumn ("File Name");
    fileNameColumn.setCellValueFactory (new PropertyValueFactory < > ("fileName"));
    TableView table = new TableView ();
    table.getColumns ().addAll (editColumn, fileNameColumn);
    table.setItems (data);
    StackPane root = new StackPane ();
    root.getChildren ().add (table);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Button Column Demo");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    TableView < Person > table = new TableView < > ();
    table.getColumns ().add (column ("First Name", Person :: firstNameProperty, 150));
    table.getColumns ().add (column ("Last Name", Person :: lastNameProperty, 150));
    table.getColumns ().add (column ("Email", Person :: emailProperty, 200));
    TableColumn < Person, Person > editColumn = column ("Edit", ReadOnlyObjectWrapper < Person > :: new, 60);
    table.getColumns ().add (editColumn);
    editColumn.setCellFactory (col -> {
        Button editButton = new Button ("Edit");
        TableCell < Person, Person > cell = new TableCell < Person, Person > () {
            @Override
            public void updateItem (Person person, boolean empty) {
                super.updateItem (person, empty);
                if (empty) {
                    setGraphic (null);
                } else {
                    setGraphic (editButton);
                }
            }}

        ;
        editButton.setOnAction (e -> edit (cell.getItem (), primaryStage));
        return cell;
    });
    table.getItems ().addAll (new Person ("Jacob", "Smith", "jacob.smith@example.com"), new Person ("Isabella", "Johnson", "isabella.johnson@example.com"), new Person ("Ethan", "Williams", "ethan.williams@example.com"), new Person ("Emma", "Jones", "emma.jones@example.com"), new Person ("Michael", "Brown", "michael.brown@example.com"));
    primaryStage.setScene (new Scene (new BorderPane (table)));
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3114162_3114289_78_90
3114162_3114297_1_13
Title: How to close a JFrame based window with a JButton click event 
----------------------------------------

public static void createGUI (Object obj) {
    JFrame frame = new JFrame ("PopUp Dialog");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    UpgradePopupWindow popUpContentPane = new UpgradePopupWindow (frame, obj);
    popUpContentPane.setOpaque (true);
    frame.setContentPane (popUpContentPane);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------

public static void createGUI (Object obj) {
    JFrame frame = new JFrame ("PopUp Dialog");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    UpgradePopupWindow popUpContentPane = new UpgradePopupWindow (obj);
    popUpContentPane.setOpaque (true);
    frame.setContentPane (popUpContentPane);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3114162_3114289_92_101
3114162_3114297_15_25
Title: How to close a JFrame based window with a JButton click event 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        frame.dispose ();
        SwingUtilities.getWindowAncestor (this).dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        frame.dispose ();
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        SwingUtilities.getWindowAncestor (this).dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        SwingUtilities.getWindowAncestor (this).dispose ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3114162_3114289_92_101
3114162_3115247_21_29
Title: How to close a JFrame based window with a JButton click event 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        frame.dispose ();
        SwingUtilities.getWindowAncestor (this).dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        frame.dispose ();
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        dispose ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3114162_3114297_15_25
3114162_3115247_21_29
Title: How to close a JFrame based window with a JButton click event 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        SwingUtilities.getWindowAncestor (this).dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        SwingUtilities.getWindowAncestor (this).dispose ();
    }

}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if ("restore".equals (e.getActionCommand ())) {
        System.out.println ("restore button selected");
        dispose ();
    } else if ("upgrade".equals (e.getActionCommand ())) {
        System.out.println ("upgrade button selected");
        dispose ();
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31143277_31143370_1_12
31143277_31143557_1_11
Title: Static Method that takes integer array as parmeter and Return string 
----------------------------------------

public static String displayArray (int [] array) {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < array.length; i ++) {
        sb.append (array [i] + ",");
    }
    String result = sb.toString () + ",";
    result = result.replace (",,", "");
    return "{" + result + "}";
}
----------------------------------------

public static String displayArray (int [] array) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("{");
    for (int i = 0;
    i < array.length; i ++) {
        sb.append (array [i]);
        if (i != array.length - 1) sb.append (",");

    }
    sb.append ("}");
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31151248_31151429_1_19
31151248_31152030_7_32
Title: Java multidimensional list 
----------------------------------------

public static void main (String [] args) throws Exception {
    String data = "1 2 3\n" + "3 2 1 5 7\n" + "4 5 6\n" + "5 4 3 2";
    List < List < Integer > > ms = new ArrayList ();
    Scanner input = new Scanner (data);
    while (input.hasNext ()) {
        ms.add (new ArrayList ());
        Scanner lineInput = new Scanner (input.nextLine ());
        while (lineInput.hasNext ()) {
            ms.get (ms.size () - 1).add (lineInput.nextInt ());
        }
    }
    System.out.println (ms);
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    ArrayList < ArrayList < Integer > > array = new ArrayList < ArrayList < Integer > > ();
    ArrayList < Integer > subArray = null;
    for (int i = 0;
    i < 3; ++ i) {
        subArray = new ArrayList < Integer > ();
        for (int j = 0;
        j < 3; ++ j) {
            subArray.add (sc.nextInt ());
        }
        array.add (subArray);
    }
    for (int i = 0;
    i < array.size (); ++ i) {
        subArray = array.get (i);
        for (int j = 0;
        j < array.size (); ++ j) {
            System.out.print (subArray.get (j) + "  ");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31151587_31151613_7_25
31151587_31151636_1_13
Title: Java foreach and hasNext 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > test = new ArrayList < String > (Arrays.asList ("Adam", "Bob", "Catherine", "Dylan"));
    StringBuilder sb = new StringBuilder ();
    Iterator < String > stringIterator = test.iterator ();
    while (stringIterator.hasNext ()) {
        sb.append (stringIterator.next ());
        if (stringIterator.hasNext ()) {
            sb.append (", ");
        }
    }
    System.out.println (sb.toString ());
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > test = new ArrayList < String > (Arrays.asList ("Adam", "Bob", "Catherine", "Dylan"));
    int size = test.size ();
    String output = new String ();
    for (String str : test) {
        output += str.toString ();
        output += test.lastIndexOf (str) < size - 1 ? ", " : "";
    }
    System.out.println (output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31153753_31154098_6_47
31153753_31158596_1_35
Title: Split string into key-value pairs 
----------------------------------------

public static void main (String ar []) {
    StringBuilder s = new StringBuilder ("pet:cat::car:honda::location:Japan::food:sushi");
    boolean isKey = true;
    String key = "", value = "";
    HashMap < String, String > hm = new HashMap ();
    for (int i = 0;
    i < s.length (); i ++) {
        char ch = s.charAt (i);
        char nextChar = s.charAt (i + 1);
        if (ch == ':' && nextChar != ':') {
            isKey = false;
            continue;
        } else if (ch == ':' && nextChar == ':') {
            hm.put (key, value);
            isKey = true;
            key = "";
            value = "";
            i += 1;
            continue;
        }

        if (isKey) {
            key += ch;
        } else {
            value += ch;
        }
        if (i == s.length () - 1) {
            hm.put (key, value);
        }
    }
    for (String x : hm.keySet ()) {
        System.out.println (x + " is " + hm.get (x));
    }
}
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    String test = "pet:cat::car:honda::location:Japan::food:sushi";
    boolean stateiskey = true;
    Map < String, String > map = new HashMap < > ();
    int keystart = 0;
    int keyend = 0;
    int valuestart = 0;
    int valueend = 0;
    for (int i = 0;
    i < test.length (); i ++) {
        char nextchar = test.charAt (i);
        if (stateiskey) {
            if (nextchar == ':') {
                keyend = i;
                stateiskey = false;
                valuestart = i + 1;
            }
        } else {
            if (i == test.length () - 1 || (nextchar == ':' && test.charAt (i + 1) == ':')) {
                valueend = i;
                if (i + 1 == test.length ()) valueend += 1;

                String key = test.substring (keystart, keyend);
                String value = test.substring (valuestart, valueend);
                keystart = i + 2;
                map.put (key, value);
                i ++;
                stateiskey = true;
            }
        }
    }
    System.out.println (map);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31167752_39074911_6_21
31167752_47922919_7_23
Title: spring data mongodb Cannot perform cascade save on child object without id set 
----------------------------------------

public void doWith (Field field) throws IllegalArgumentException, IllegalAccessException {
    ReflectionUtils.makeAccessible (field);
    if (field.isAnnotationPresent (DBRef.class) && field.isAnnotationPresent (CascadeSave.class)) {
        final Object fieldValue = field.get (source);
        if (fieldValue instanceof List < ? >) {
            for (Object item : (List < ? >) fieldValue) {
                checkNSave (item);
            }
        } else {
            checkNSave (fieldValue);
        }
    }
}
----------------------------------------

public void doWith (Field field) throws IllegalArgumentException, IllegalAccessException {
    ReflectionUtils.makeAccessible (field);
    if (field.isAnnotationPresent (DBRef.class) && field.isAnnotationPresent (CascadeSave.class)) {
        final Object fieldValue = field.get (source);
        if (fieldValue instanceof List < ? >) {
            for (Object item : (List < ? >) fieldValue) {
                checkNAdd (item);
            }
        } else {
            checkNAdd (fieldValue);
        }
        mongoOperations.insertAll (documents);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31181995_31182586_1_12
31181995_31182633_54_64
Title: java.lang.NullPointerException jdbc big error 
----------------------------------------

public static int checkUser () {
    try {
        statement = conn.createStatement ();
        ResultSet user = statement.executeQuery ("SELECT * FROM tadzio WHERE nick='benas12' AND pass='benas'");
        user.next ();
        int count = user.getRow ();
        return count;
    } catch (Exception e) {
        e.printStackTrace ();
        return - 1;
    }
}
----------------------------------------

public static int checkUser () {
    try {
        ResultSet user = statement.executeQuery ("SELECT * FROM tadzio WHERE nick='benas12' AND pass='benas'");
        user.next ();
        int count = user.getRow ();
        return count;
    } catch (Exception e) {
        e.printStackTrace ();
        return - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31183638_31184630_4_23
31183638_31190320_1_41
Title: I need to add few things in my Java code 
----------------------------------------

public static void main (String [] arg) {
    String radius = JOptionPane.showInputDialog ("Input Radius");
    String height = JOptionPane.showInputDialog ("Input Height");
    int rad = Integer.parseInt (radius);
    int hei = Integer.parseInt (height);
    double volume = Math.PI * Math.pow (rad, 2) * hei;
    NumberFormat r = NumberFormat.getInstance ();
    r.setMaximumFractionDigits (2);
    r.setMinimumFractionDigits (2);
    JOptionPane.showMessageDialog (null, "The volume of the cylinder is approximately " + r.format (volume) + "CM^3");
    int ag = JOptionPane.showConfirmDialog (null, "Would you like to find the volume of a cylinder once more?", "", JOptionPane.YES_NO_OPTION);
    if (ag == JOptionPane.YES_OPTION) {
        main (arg);
    }
}
----------------------------------------

public static void main (String [] arg) {
    String radius = JOptionPane.showInputDialog ("Input Radius");
    String height = JOptionPane.showInputDialog ("Input Height");
    if (radius >= 1 && height >= 1) {
        int rad = Integer.parseInt (radius);
        int hei = Integer.parseInt (height);
        double volume = Math.PI * Math.pow (rad, 2) * hei;
        NumberFormat r = NumberFormat.getInstance ();
        r.setMaximumFractionDigits (2);
        r.setMinimumFractionDigits (2);
        JOptionPane.showMessageDialog (null, "The volume of the cylinder is approximately " + r.format (volume) + "CM^3");
        int yes = JOptionPane.showConfirmDialog (null, "Would you like to find the volume of a cylinder once more?", "", JOptionPane.YES_NO_OPTION);
        if (yes == JOptionPane.YES_OPTION) {
            main (arg);
        } else {
            JOptionPane.showMessageDialog (null, "You'r welcome! \n \n Click 'OK' to exit", "Cylinder.", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog (null, "Sorry but you have to enter radius and height to complete the task.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31187345_31187726_3_21
31187345_31188263_12_19
Title: Java MultiThreading Stop Method 
----------------------------------------

public static void main (String [] args) {
    Thread t = new Thread () {
        public void run () {
            while (true) {
                try {
                    Thread.sleep (1000);
                } catch (Exception e) {
                }
            }
        }}

    ;
    t.start ();
    System.out.println (t.getName ());
    System.out.println (t.getState ());
    t.stop ();
    try {
        Thread.sleep (1000);
    } catch (Exception e) {
    }
    System.out.println (t.getState ());
}
----------------------------------------

public static void main (String args []) {
    IntThread t1 = new IntThread ();
    t1.start ();
    try {
        t1.interrupt ();
    } catch (Exception e) {
        System.out.println ("Exception handled " + e);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31214666_31215111_1_15
31214666_31215118_1_27
Title: Omit elements in array based on the first word 
----------------------------------------

private void readFile (File file) {
    List < String > lines = new ArrayList < String > ();
    List < String > firstWord = new ArrayList < String > ();
    try (BufferedReader br = new BufferedReader (new FileReader (file))) {
        String sCurrentLine;
        while ((sCurrentLine = br.readLine ()) != null) {
            lines.add (sCurrentLine);
            firstWord.add (sCurrentLine.split (" ") [0]);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

private void readFile (File file) throws FileNotFoundException, IOException {
    String [] lines = new String [getLineCount (file)];
    Long unixTime = time.getUnixLastRun ();
    String [] removedTime = new String [getLineCount (file)];
    try (BufferedReader br = new BufferedReader (new FileReader (file))) {
        int i = 0;
        for (String line;
        (line = br.readLine ()) != null; i ++) {
            lines [i] = line;
        }
    }
    ArrayList < String > logsToBeUsed = new ArrayList < String > ();
    for (String arr : lines) {
        try {
            if (Long.parseLong (getFirstWord (arr)) >= unixTime) {
                logsToBeUsed.add (arr);
            }
        } catch (NumberFormatException nfe) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31218748_31218821_1_14
31218748_31218869_1_12
Title: Boolean loop combined with JOptionPane Java 
----------------------------------------

public static String readin () {
    boolean error = false;
    do {
        string stringin;
        stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                error = true;
                break;
            case 1 :
                return stringin;
        }
    } while (error);
    return null;
}
----------------------------------------

public static String readin () {
    while (true) {
        String stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                break;
            case 1 :
                return stringin;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31218748_31218821_1_14
31218748_31218897_1_17
Title: Boolean loop combined with JOptionPane Java 
----------------------------------------

public static String readin () {
    boolean error = false;
    do {
        string stringin;
        stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                error = true;
                break;
            case 1 :
                return stringin;
        }
    } while (error);
    return null;
}
----------------------------------------

public static String readin () {
    boolean error = false;
    do {
        String stringin;
        stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                error = true;
                break;
            case 1 :
                return stringin;
        }
    } while (error == true);
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31218748_31218869_1_12
31218748_31218897_1_17
Title: Boolean loop combined with JOptionPane Java 
----------------------------------------

public static String readin () {
    while (true) {
        String stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                break;
            case 1 :
                return stringin;
        }
    }
}
----------------------------------------

public static String readin () {
    boolean error = false;
    do {
        String stringin;
        stringin = JOptionPane.showInputDialog (null, "Please enter a number");
        switch (stringin.length ()) {
            case 0 :
                JOptionPane.showMessageDialog (null, "Error Please repeat");
                error = true;
                break;
            case 1 :
                return stringin;
        }
    } while (error == true);
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31225435_31225480_1_10
31225435_31225830_3_19
Title: how to have a new local array at each level of recursive function 
----------------------------------------

void fun (int a [], int j) {
    if (j == 5) {
        return;
    }
    int tmp = a [j];
    a [j] = j;
    fun (a, j + 1);
    a [j] = tmp;
}
----------------------------------------

int fun (int a [], int j) {
    static int i = 0;
    if (j < 5) {
        a [j] = j;
        i ++;
        fun (a, j + 1);
    }
    i --;
    a [i] = 0;
    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31227089_31227143_5_28
31227089_31227159_8_21
Title: Find the average of three random numbers 
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int randomNum = 0, total = 0;
    int count = 3;
    for (int i = 0;
    i < count; i ++) {
        randomNum = rand.nextInt (50);
        System.out.println (randomNum);
        total += randomNum;
    }
    int average = total / count;
    System.out.printf ("Average (Integer division): %d%n", average);
    double averageDouble = total / ((double) count);
    System.out.printf ("Average (Double division): %7.3f%n", averageDouble);
}
----------------------------------------

public static void main (String [] args) {
    Random rand = new Random ();
    int randCount = 3, randNum = 0, total = 0;
    for (int i = 0;
    i < randCount; i ++) {
        randNum = rand.nextInt (50);
        System.out.println (randNum);
        total = total + randNum;
    }
    int average = total / randCount;
    System.out.println (average);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31227232_41816327_4_20
31227232_45026461_3_21
Title: Java-toggle alphabet case in string 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Enter a Word with toggled alphabets");
    Scanner sc = new Scanner (System.in);
    String line = sc.nextLine ();
    char [] arr = line.toCharArray ();
    for (char ch : arr) {
        if (Character.isUpperCase (ch)) {
            ch = Character.toLowerCase (ch);
        } else if (Character.isLowerCase (ch)) {
            ch = Character.toUpperCase (ch);
        }

        System.out.print (ch);
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    Scanner scan = new Scanner (System.in);
    String S = scan.next ();
    char [] a = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    char [] b = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
    char [] ch = S.toCharArray ();
    for (int i = 0;
    i < ch.length; i ++) {
        for (int j = 0;
        j < a.length; j ++) {
            if (ch [i] == a [j]) {
                ch [i] = b [j];
            } else if (ch [i] == b [j]) {
                ch [i] = a [j];
            }

        }
    }
    String text = new String (ch);
    System.out.println (text);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_31236294_4_32
31236166_36505987_4_25
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t, tc, a, b, c, n, i;
    tc = in.nextInt ();
    for (t = 0; t < tc; ++ t) {
        a = in.nextInt ();
        b = in.nextInt ();
        c = 0;
        n = in.nextInt ();
        for (i = 0; i < n; ++ i) {
            System.out.print (a + c + b);
            c += b;
            b *= 2;
            if (i < n - 1) {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int a, b, n, t, i = 0;
    Scanner sc = new Scanner (System.in);
    t = sc.nextInt ();
    while (i < t) {
        int sum = 0;
        a = sc.nextInt ();
        b = sc.nextInt ();
        n = sc.nextInt ();
        for (int k = 0;
        k < n; k ++) {
            if (k < 1) sum += a + ((int) Math.pow (2, k) * b);
            else sum += ((int) Math.pow (2, k) * b);

            System.out.printf ("%s ", sum);
        }
        System.out.println ();
        i ++;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_31236294_4_32
31236166_40556894_4_21
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t, tc, a, b, c, n, i;
    tc = in.nextInt ();
    for (t = 0; t < tc; ++ t) {
        a = in.nextInt ();
        b = in.nextInt ();
        c = 0;
        n = in.nextInt ();
        for (i = 0; i < n; ++ i) {
            System.out.print (a + c + b);
            c += b;
            b *= 2;
            if (i < n - 1) {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int j = 0;
    j < t; j ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int x = 1;
        int temp = a;
        for (int i = 1;
        i <= n; i ++) {
            temp += (x * b);
            System.out.print (temp + " ");
            x *= 2;
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_31236294_4_32
31236166_42876736_6_26
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t, tc, a, b, c, n, i;
    tc = in.nextInt ();
    for (t = 0; t < tc; ++ t) {
        a = in.nextInt ();
        b = in.nextInt ();
        c = 0;
        n = in.nextInt ();
        for (i = 0; i < n; ++ i) {
            System.out.print (a + c + b);
            c += b;
            b *= 2;
            if (i < n - 1) {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int p = a + b;
        int x = 1;
        System.out.print (p + " ");
        for (int j = 2;
        j <= n; j ++) {
            x = x * 2;
            p = p + x * b;
            System.out.print (p + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_31236294_4_32
31236166_42959360_13_27
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t, tc, a, b, c, n, i;
    tc = in.nextInt ();
    for (t = 0; t < tc; ++ t) {
        a = in.nextInt ();
        b = in.nextInt ();
        c = 0;
        n = in.nextInt ();
        for (i = 0; i < n; ++ i) {
            System.out.print (a + c + b);
            c += b;
            b *= 2;
            if (i < n - 1) {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        series (a, b, n);
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_31236294_4_32
31236166_43199802_5_25
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t, tc, a, b, c, n, i;
    tc = in.nextInt ();
    for (t = 0; t < tc; ++ t) {
        a = in.nextInt ();
        b = in.nextInt ();
        c = 0;
        n = in.nextInt ();
        for (i = 0; i < n; ++ i) {
            System.out.print (a + c + b);
            c += b;
            b *= 2;
            if (i < n - 1) {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int sum = 0;
        int pow1 = 0;
        for (int j = 0;
        j < n; j ++) {
            pow1 = pow1 + ((int) Math.pow (2, j) * b);
            sum = a + pow1;
            System.out.print (sum + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_36505987_4_25
31236166_40556894_4_21
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    int a, b, n, t, i = 0;
    Scanner sc = new Scanner (System.in);
    t = sc.nextInt ();
    while (i < t) {
        int sum = 0;
        a = sc.nextInt ();
        b = sc.nextInt ();
        n = sc.nextInt ();
        for (int k = 0;
        k < n; k ++) {
            if (k < 1) sum += a + ((int) Math.pow (2, k) * b);
            else sum += ((int) Math.pow (2, k) * b);

            System.out.printf ("%s ", sum);
        }
        System.out.println ();
        i ++;
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int j = 0;
    j < t; j ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int x = 1;
        int temp = a;
        for (int i = 1;
        i <= n; i ++) {
            temp += (x * b);
            System.out.print (temp + " ");
            x *= 2;
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_36505987_4_25
31236166_42876736_6_26
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    int a, b, n, t, i = 0;
    Scanner sc = new Scanner (System.in);
    t = sc.nextInt ();
    while (i < t) {
        int sum = 0;
        a = sc.nextInt ();
        b = sc.nextInt ();
        n = sc.nextInt ();
        for (int k = 0;
        k < n; k ++) {
            if (k < 1) sum += a + ((int) Math.pow (2, k) * b);
            else sum += ((int) Math.pow (2, k) * b);

            System.out.printf ("%s ", sum);
        }
        System.out.println ();
        i ++;
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int p = a + b;
        int x = 1;
        System.out.print (p + " ");
        for (int j = 2;
        j <= n; j ++) {
            x = x * 2;
            p = p + x * b;
            System.out.print (p + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_36505987_4_25
31236166_42959360_13_27
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    int a, b, n, t, i = 0;
    Scanner sc = new Scanner (System.in);
    t = sc.nextInt ();
    while (i < t) {
        int sum = 0;
        a = sc.nextInt ();
        b = sc.nextInt ();
        n = sc.nextInt ();
        for (int k = 0;
        k < n; k ++) {
            if (k < 1) sum += a + ((int) Math.pow (2, k) * b);
            else sum += ((int) Math.pow (2, k) * b);

            System.out.printf ("%s ", sum);
        }
        System.out.println ();
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        series (a, b, n);
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_36505987_4_25
31236166_43199802_5_25
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    int a, b, n, t, i = 0;
    Scanner sc = new Scanner (System.in);
    t = sc.nextInt ();
    while (i < t) {
        int sum = 0;
        a = sc.nextInt ();
        b = sc.nextInt ();
        n = sc.nextInt ();
        for (int k = 0;
        k < n; k ++) {
            if (k < 1) sum += a + ((int) Math.pow (2, k) * b);
            else sum += ((int) Math.pow (2, k) * b);

            System.out.printf ("%s ", sum);
        }
        System.out.println ();
        i ++;
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int sum = 0;
        int pow1 = 0;
        for (int j = 0;
        j < n; j ++) {
            pow1 = pow1 + ((int) Math.pow (2, j) * b);
            sum = a + pow1;
            System.out.print (sum + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_40556894_4_21
31236166_42876736_6_26
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int j = 0;
    j < t; j ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int x = 1;
        int temp = a;
        for (int i = 1;
        i <= n; i ++) {
            temp += (x * b);
            System.out.print (temp + " ");
            x *= 2;
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int p = a + b;
        int x = 1;
        System.out.print (p + " ");
        for (int j = 2;
        j <= n; j ++) {
            x = x * 2;
            p = p + x * b;
            System.out.print (p + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_40556894_4_21
31236166_42959360_13_27
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int j = 0;
    j < t; j ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int x = 1;
        int temp = a;
        for (int i = 1;
        i <= n; i ++) {
            temp += (x * b);
            System.out.print (temp + " ");
            x *= 2;
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        series (a, b, n);
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_42876736_6_26
31236166_42959360_13_27
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int p = a + b;
        int x = 1;
        System.out.print (p + " ");
        for (int j = 2;
        j <= n; j ++) {
            x = x * 2;
            p = p + x * b;
            System.out.print (p + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        series (a, b, n);
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_42876736_6_26
31236166_43199802_5_25
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int p = a + b;
        int x = 1;
        System.out.print (p + " ");
        for (int j = 2;
        j <= n; j ++) {
            x = x * 2;
            p = p + x * b;
            System.out.print (p + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int sum = 0;
        int pow1 = 0;
        for (int j = 0;
        j < n; j ++) {
            pow1 = pow1 + ((int) Math.pow (2, j) * b);
            sum = a + pow1;
            System.out.print (sum + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31236166_42959360_13_27
31236166_43199802_5_25
Title: Java Loops Hacker Ranker 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        series (a, b, n);
        System.out.println ("");
    }
}
----------------------------------------

public static void main (String [] argh) {
    Scanner in = new Scanner (System.in);
    int t = in.nextInt ();
    for (int i = 0;
    i < t; i ++) {
        int a = in.nextInt ();
        int b = in.nextInt ();
        int n = in.nextInt ();
        int sum = 0;
        int pow1 = 0;
        for (int j = 0;
        j < n; j ++) {
            pow1 = pow1 + ((int) Math.pow (2, j) * b);
            sum = a + pow1;
            System.out.print (sum + " ");
        }
        System.out.println ();
    }
    in.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31241669_31268013_16_25
31241669_31268013_30_46
Title: Octave dfdp.m for JAVA 
----------------------------------------

public double [] value (double [] params) {
    double [] values = new double [data.length];
    for (int i = 0;
    i < values.length; ++ i) {
        final double t = data [i] [0];
        values [i] = params [0] * Math.pow (t, params [2]) * Math.exp (- params [1] * t);
    }
    return values;
}
----------------------------------------

public double [] [] value (double [] params) {
    double [] [] jacobian = new double [data.length] [params.length];
    final double a = params [0];
    final double b = params [2];
    final double c = params [1];
    for (int i = 0;
    i < jacobian.length; ++ i) {
        final double t = data [i] [0];
        jacobian [i] [0] = Math.pow (t, b) * Math.exp (- c * t);
        jacobian [i] [2] = a * Math.exp (- c * t) * Math.pow (t, b) * Math.log (t);
        jacobian [i] [1] = a * Math.pow (t, b) * (- t * Math.exp (- c * t));
    }
    return jacobian;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31241669_31268013_16_25
31241669_31268013_53_83
Title: Octave dfdp.m for JAVA 
----------------------------------------

public double [] value (double [] params) {
    double [] values = new double [data.length];
    for (int i = 0;
    i < values.length; ++ i) {
        final double t = data [i] [0];
        values [i] = params [0] * Math.pow (t, params [2]) * Math.exp (- params [1] * t);
    }
    return values;
}
----------------------------------------

public double [] [] value (double [] params) {
    int m = data.length;
    int n = params.length;
    double [] p = params;
    double [] ps = params;
    double [] del = new double [n];
    double [] f = new double [n];
    double [] f1 = new double [n];
    BlockRealMatrix prt = new BlockRealMatrix (m, n);
    f = feval (p);
    for (int j = 0;
    j < n; ++ j) {
        del [j] = dp [j] * p [j];
        if (p [j] == 0) del [j] = dp [j];

        p [j] = ps [j] + del [j];
        if (del [j] != 0) {
            f1 = feval (p);
            if (dp [j] < 0) prt.setColumn (j, (new ArrayRealVector (f1)).subtract (new ArrayRealVector (f)).mapDivideToSelf (del [j]).toArray ());
            else {
                p [j] = ps [j] - del [j];
                prt.setColumn (j, (new ArrayRealVector (f1)).subtract (new ArrayRealVector (feval (p))).mapDivideToSelf (2 * del [j]).toArray ());
            }
        }
        p [j] = ps [j];
    }
    return prt.getData ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31241669_31268013_30_46
31241669_31268013_53_83
Title: Octave dfdp.m for JAVA 
----------------------------------------

public double [] [] value (double [] params) {
    double [] [] jacobian = new double [data.length] [params.length];
    final double a = params [0];
    final double b = params [2];
    final double c = params [1];
    for (int i = 0;
    i < jacobian.length; ++ i) {
        final double t = data [i] [0];
        jacobian [i] [0] = Math.pow (t, b) * Math.exp (- c * t);
        jacobian [i] [2] = a * Math.exp (- c * t) * Math.pow (t, b) * Math.log (t);
        jacobian [i] [1] = a * Math.pow (t, b) * (- t * Math.exp (- c * t));
    }
    return jacobian;
}
----------------------------------------

public double [] [] value (double [] params) {
    int m = data.length;
    int n = params.length;
    double [] p = params;
    double [] ps = params;
    double [] del = new double [n];
    double [] f = new double [n];
    double [] f1 = new double [n];
    BlockRealMatrix prt = new BlockRealMatrix (m, n);
    f = feval (p);
    for (int j = 0;
    j < n; ++ j) {
        del [j] = dp [j] * p [j];
        if (p [j] == 0) del [j] = dp [j];

        p [j] = ps [j] + del [j];
        if (del [j] != 0) {
            f1 = feval (p);
            if (dp [j] < 0) prt.setColumn (j, (new ArrayRealVector (f1)).subtract (new ArrayRealVector (f)).mapDivideToSelf (del [j]).toArray ());
            else {
                p [j] = ps [j] - del [j];
                prt.setColumn (j, (new ArrayRealVector (f1)).subtract (new ArrayRealVector (feval (p))).mapDivideToSelf (2 * del [j]).toArray ());
            }
        }
        p [j] = ps [j];
    }
    return prt.getData ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3124179_3124283_1_11
3124179_3124439_6_17
Title: How to define multiple equals() function for a class 
----------------------------------------

public boolean equals (Object o) {
    if (o != null && o instanceof MyObject) {
        MyObject m = (MyObject) o;
        if (this.name == null) return false;

        return this.name.eqauls (m.name) && this.age == m.age;
    }
    return false;
}
----------------------------------------

public boolean equals (Object o) {
    if (o instanceof MyObject) {
        MyObject otherObject = (MyObject) o;
        if (name == null) {
            return otherObject.name == null && otherObject.age == age;
        } else {
            return name.equals (otherObject.name) && otherObject.age == age;
        }
    } else {
        return false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31243519_31243870_1_18
31243519_31243916_20_33
Title: Depth-first/breadth-first algorithm printing all nodes; how do I get it to only print nodes in the path? 
----------------------------------------

public static void DFS (int [] [] adj, boolean [] visited, ArrayList < int > path, int n, int i, int o) {
    visited [i] = true;
    if (i + 1 != o) {
        for (int j = 0;
        j < n; j ++) {
            if (! (visited [j]) && adj [i] [j] == 1) {
                path.add (j);
                DFS (adj, visited, n, j, o);
                path.remove (path.size () - 1);
            }
        }
    } else {
        for (int i : path) {
            System.out.print (" " + i);
        }
    }
}
----------------------------------------

public static List < Integer > DFS (int [] [] adj, boolean [] visited, int n, int i, int o) {
    visited [i] = true;
    if (i == o) return new LinkedList < Integer > (Arrays.asList (i + 1));

    for (int j = 0;
    j < n; j ++) {
        if (! (visited [j]) && adj [i] [j] == 1) {
            List < Integer > res = DFS (adj, visited, n, j, o);
            if (res != null) {
                res.add (0, i + 1);
                return res;
            }
        }
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31255495_31255591_1_18
31255495_31255647_2_12
Title: Java Programming Code 
----------------------------------------

public static void main (String [] args) {
    int input = 5;
    try {
        input = Integer.valueOf (args [0]);
    } catch (ArrayIndexOutOfBoundsException e) {
        System.out.println ("Missing parameter");
    } catch (Exception e) {
        System.out.println ("First parameter is not an integer");
    }
    for (int i = 0;
    i <= input; i ++) {
        int firstNumber = 120 + 80 * i;
        for (int j = 0;
        j < i; j ++) {
            System.out.print (firstNumber + 2 * i * j);
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    int base_int = 40;
    for (int row = 1;
    row < 10; row ++) {
        for (int col = 0;
        col < row; col ++) {
            int result = base_int + (80 * row) + (2 * (row - 1) * col);
            System.out.print (result);
            System.out.print (" ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258702_1_24
31258430_31258715_7_20
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    int size = nums.length;
    for (int i = 1;
    i < size; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected) {
            addRange (sb, rangeStart, previous);
            rangeStart = current;
        }
        previous = current;
    }
    addRange (sb, rangeStart, nums [size - 1]);
    return sb.toString ();
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();

    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }

    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258702_1_24
31258430_31258817_1_39
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    int size = nums.length;
    for (int i = 1;
    i < size; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected) {
            addRange (sb, rangeStart, previous);
            rangeStart = current;
        }
        previous = current;
    }
    addRange (sb, rangeStart, nums [size - 1]);
    return sb.toString ();
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int current;
    int next;
    boolean inRangeFlag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        current = nums [i];
        if (i < nums.length - 1) {
            next = nums [i + 1];
            if (next - current == 1) {
                if (! inRangeFlag) {
                    sb.append (current + "-");
                }
                inRangeFlag = true;
            } else {
                sb.append (current + ",");
                inRangeFlag = false;
            }
        } else {
            sb.append (current);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258702_1_24
31258430_31259151_23_57
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    int size = nums.length;
    for (int i = 1;
    i < size; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected) {
            addRange (sb, rangeStart, previous);
            rangeStart = current;
        }
        previous = current;
    }
    addRange (sb, rangeStart, nums [size - 1]);
    return sb.toString ();
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    for (int i = 1;
    i < nums.length; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected || i == (nums.length - 1)) {
            if (current == rangeStart) {
                sb.append (previous + ",");
            } else {
                if (rangeStart != previous) {
                    if (i == nums.length - 1) sb.append (rangeStart + "-" + current);
                    else sb.append (rangeStart + "-" + previous + ",");

                } else {
                    if (i == nums.length - 1) sb.append (rangeStart + "," + current);
                    else sb.append (rangeStart + ",");

                }
            }
            rangeStart = current;
        }
        previous = current;
    }
    if (sb.charAt (sb.length () - 1) == ',') {
        sb.deleteCharAt (sb.length () - 1);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258715_7_20
31258430_31258817_1_39
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();

    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }

    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int current;
    int next;
    boolean inRangeFlag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        current = nums [i];
        if (i < nums.length - 1) {
            next = nums [i + 1];
            if (next - current == 1) {
                if (! inRangeFlag) {
                    sb.append (current + "-");
                }
                inRangeFlag = true;
            } else {
                sb.append (current + ",");
                inRangeFlag = false;
            }
        } else {
            sb.append (current);
        }
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258715_7_20
31258430_31259151_23_57
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    if (nums.length == 0) return sb.toString ();

    int begin = nums [0], end = nums [0];
    for (int cur : nums) if (cur - end <= 1) end = cur;
    else {
        appendRange (sb, begin, end);
        begin = end = cur;
    }

    appendRange (sb, begin, end);
    return sb.substring (1);
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    for (int i = 1;
    i < nums.length; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected || i == (nums.length - 1)) {
            if (current == rangeStart) {
                sb.append (previous + ",");
            } else {
                if (rangeStart != previous) {
                    if (i == nums.length - 1) sb.append (rangeStart + "-" + current);
                    else sb.append (rangeStart + "-" + previous + ",");

                } else {
                    if (i == nums.length - 1) sb.append (rangeStart + "," + current);
                    else sb.append (rangeStart + ",");

                }
            }
            rangeStart = current;
        }
        previous = current;
    }
    if (sb.charAt (sb.length () - 1) == ',') {
        sb.deleteCharAt (sb.length () - 1);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31258430_31258817_1_39
31258430_31259151_23_57
Title: Java: Convert int[] to smallest representation as ranges 
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int current;
    int next;
    boolean inRangeFlag = false;
    for (int i = 0;
    i < nums.length; i ++) {
        current = nums [i];
        if (i < nums.length - 1) {
            next = nums [i + 1];
            if (next - current == 1) {
                if (! inRangeFlag) {
                    sb.append (current + "-");
                }
                inRangeFlag = true;
            } else {
                sb.append (current + ",");
                inRangeFlag = false;
            }
        } else {
            sb.append (current);
        }
    }
    return sb.toString ();
}
----------------------------------------

public static String sequenceNums (int [] nums) {
    StringBuilder sb = new StringBuilder ();
    int rangeStart = nums [0];
    int previous = nums [0];
    int current;
    int expected = previous + 1;
    for (int i = 1;
    i < nums.length; i ++) {
        current = nums [i];
        expected = previous + 1;
        if (current != expected || i == (nums.length - 1)) {
            if (current == rangeStart) {
                sb.append (previous + ",");
            } else {
                if (rangeStart != previous) {
                    if (i == nums.length - 1) sb.append (rangeStart + "-" + current);
                    else sb.append (rangeStart + "-" + previous + ",");

                } else {
                    if (i == nums.length - 1) sb.append (rangeStart + "," + current);
                    else sb.append (rangeStart + ",");

                }
            }
            rangeStart = current;
        }
        previous = current;
    }
    if (sb.charAt (sb.length () - 1) == ',') {
        sb.deleteCharAt (sb.length () - 1);
    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31261652_31261779_19_112
31261652_31261779_24_72
Title: How to get the Youtube download link using java? 
----------------------------------------

public void run (String url, File path) {
    try {
        AtomicBoolean stop = new AtomicBoolean (false);
        Runnable notify = new Runnable () {
            @Override
            public void run () {
                VideoInfo i1 = info;
                DownloadInfo i2 = i1.getInfo ();
                switch (i1.getState ()) {
                    case EXTRACTING :
                    case EXTRACTING_DONE :
                    case DONE :
                        if (i1 instanceof YoutubeInfo) {
                            YoutubeInfo i = (YoutubeInfo) i1;
                            System.out.println (i1.getState () + " " + i.getVideoQuality ());
                        } else if (i1 instanceof VimeoInfo) {
                            VimeoInfo i = (VimeoInfo) i1;
                            System.out.println (i1.getState () + " " + i.getVideoQuality ());
                        } else {
                            System.out.println ("downloading unknown quality");
                        }

                        break;
                    case RETRYING :
                        System.out.println (i1.getState () + " " + i1.getDelay ());
                        break;
                    case DOWNLOADING :
                        long now = System.currentTimeMillis ();
                        if (now - 1000 > last) {
                            last = now;
                            String parts = "";
                            List < Part > pp = i2.getParts ();
                            if (pp != null) {
                                for (Part p : pp) {
                                    if (p.getState ().equals (States.DOWNLOADING)) {
                                        parts += String.format ("Part#%d(%.2f) ", p.getNumber (), p.getCount () / (float) p.getLength ());
                                    }
                                }
                            }
                            System.out.println (String.format ("%s %.2f %s", i1.getState (), i2.getCount () / (float) i2.getLength (), parts));
                        }
                        break;
                    default :
                        break;
                }
            }}

        ;
        URL web = new URL (url);
        VGetParser user = null;
        user = VGet.parser (web);
        info = user.info (web);
        VGet v = new VGet (info, path);
        v.extract (user, stop, notify);
        System.out.println ("Title: " + info.getTitle ());
        System.out.println ("Download URL: " + info.getInfo ().getSource ());
        v.download (user, stop, notify);
    } catch (RuntimeException e) {
        throw e;
    } catch (Exception e) {
        throw new RuntimeException (e);
    }
}
----------------------------------------

public void run () {
    VideoInfo i1 = info;
    DownloadInfo i2 = i1.getInfo ();
    switch (i1.getState ()) {
        case EXTRACTING :
        case EXTRACTING_DONE :
        case DONE :
            if (i1 instanceof YoutubeInfo) {
                YoutubeInfo i = (YoutubeInfo) i1;
                System.out.println (i1.getState () + " " + i.getVideoQuality ());
            } else if (i1 instanceof VimeoInfo) {
                VimeoInfo i = (VimeoInfo) i1;
                System.out.println (i1.getState () + " " + i.getVideoQuality ());
            } else {
                System.out.println ("downloading unknown quality");
            }

            break;
        case RETRYING :
            System.out.println (i1.getState () + " " + i1.getDelay ());
            break;
        case DOWNLOADING :
            long now = System.currentTimeMillis ();
            if (now - 1000 > last) {
                last = now;
                String parts = "";
                List < Part > pp = i2.getParts ();
                if (pp != null) {
                    for (Part p : pp) {
                        if (p.getState ().equals (States.DOWNLOADING)) {
                            parts += String.format ("Part#%d(%.2f) ", p.getNumber (), p.getCount () / (float) p.getLength ());
                        }
                    }
                }
                System.out.println (String.format ("%s %.2f %s", i1.getState (), i2.getCount () / (float) i2.getLength (), parts));
            }
            break;
        default :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31275040_31275409_27_50
31275040_31275424_9_24
Title: Java xml Parsing For Two Tags with Same Name 
----------------------------------------

private static String parseXml (String xmlData) throws ParserConfigurationException, SAXException, IOException {
    DocumentBuilder builder = DocumentBuilderFactory.newInstance ().newDocumentBuilder ();
    InputSource src = new InputSource ();
    src.setCharacterStream (new StringReader (xmlData));
    Document doc = builder.parse (src);
    NodeList nodes = doc.getElementsByTagName ("metadata");
    Element line = null;
    String cnt = null;
    for (int i = 0;
    i < nodes.getLength (); i ++) {
        Element element = (Element) nodes.item (i);
        NodeList country = element.getElementsByTagName ("Country");
        for (int j = 0;
        j < country.getLength (); j ++) {
            if (country != null) {
                System.out.println ("Country not null " + country);
                line = (Element) country.item (j);
                System.out.println ("value :: " + line.getFirstChild ().getNodeValue ());
            }
        }
    }
    return cnt;
}
----------------------------------------

private static String [] parseXml (String xmlData) throws SAXException, IOException, ParserConfigurationException {
    ArrayList < String > list = new ArrayList < String > ();
    DocumentBuilder builder = DocumentBuilderFactory.newInstance ().newDocumentBuilder ();
    InputSource src = new InputSource ();
    src.setCharacterStream (new StringReader (xmlData));
    Document doc = builder.parse (src);
    NodeList nodes = doc.getElementsByTagName ("metadata");
    for (int i = 0;
    i < nodes.getLength (); i ++) {
        Element element = (Element) nodes.item (i);
        NodeList country = element.getElementsByTagName ("Country");
        for (int j = 0;
        j < country.getLength (); j ++) {
            list.add (country.item (j).getTextContent ());
        }
    }
    return list.toArray (new String [list.size ()]);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31276295_39540748_34_42
31276295_39540748_7_30
Title: Multiple Classloaders and Singletons 
----------------------------------------

public void run () {
    try {
        Object instance = getClass ("Singleton").getMethod ("getInstance").invoke (null);
        Object result = instance.getClass ().getMethod ("getValue").invoke (instance);
        System.out.println ("RESULT: " + result);
    } catch (ReflectiveOperationException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void run () throws Exception {
    ClassLoader parent = Main.class.getClassLoader ();
    byte [] runnerBytes = Files.readAllBytes (new File ("/path/to/bin/Runner.class").toPath ());
    byte [] singletonBytes = Files.readAllBytes (new File ("/path/to/bin/Singleton.class").toPath ());
    Map < String, byte [] > classes = new HashMap < > ();
    classes.put ("Runner", runnerBytes);
    classes.put ("Singleton", singletonBytes);
    ByteArrayClassLoader classLoader = new ByteArrayClassLoader.ChildFirst (parent, classes, null, ByteArrayClassLoader.PersistenceHandler.MANIFEST, PackageDefinitionStrategy.NoOp.INSTANCE);
    Class < ? > clazz = classLoader.loadClass ("Runner");
    Thread.currentThread ().setContextClassLoader (classLoader);
    Object instance = clazz.newInstance ();
    clazz.getMethod ("run").invoke (instance);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31290542_31290670_1_20
31290542_31290913_1_16
Title: Custom ListView won't show up in the Activity 
----------------------------------------

@Override
public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.list_view);
    Intent intent = getIntent ();
    ListModel listmodel = new ListModel ();
    listmodel.setName ("Hiiiiii");
    list.add (listmodel);
    listView = (ListView) findViewById (R.id.list_view);
    adapter = new CustomListAdapter (this, list);
    listView.setAdapter (adapter);
}
----------------------------------------

@Override
public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.challenges_view);
    Intent intent = getIntent ();
    ListModel listmodel = new ListModel ();
    listmodel.setName ("Hiiiiii");
    list.add (listmodel);
    listView = (ListView) findViewById (R.id.list_view);
    adapter = new CustomListAdapter (this, list);
    listView.setAdapter (adapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31307194_31307275_16_28
31307194_31312456_42_50
Title: Is there a way to set a layout for JOptionsPane.showOptionDialog? 
----------------------------------------

public static void main (String [] args) {
    JPanel panel = new JPanel (new GridLayout (3, 0, 5, 5));
    panel.setBorder (BorderFactory.createEmptyBorder (5, 5, 5, 5));
    for (int i = 0;
    i < BUTTON_COUNT; i ++) {
        panel.add (new JButton (new ButtonAction ("Option " + (i + 1))));
    }
    JDialog dialog = new JDialog (null, "Select One", ModalityType.APPLICATION_MODAL);
    dialog.add (panel);
    dialog.pack ();
    dialog.setLocationRelativeTo (null);
    dialog.setVisible (true);
    System.out.println ("selection: " + selection);
}
----------------------------------------

public static void main (String [] args) {
    Runnable r = new Runnable () {
        @Override
        public void run () {
            ManyOptions o = new ManyOptions ();
        }}

    ;
    SwingUtilities.invokeLater (r);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31310852_31311408_1_12
31310852_31714284_1_11
Title: How to fetch associated entities with Hibernate 
----------------------------------------

@SuppressWarnings ({"unchecked", "rawtypes"})
public List < User > getProfessionById (long id) throws Exception {
    session = sessionFactory.openSession ();
    Criteria cr = session.createCriteria (Profession.class, "pro").setFetchMode ("user", FetchMode.JOIN);
    cr.add (Restrictions.eq ("uid", id));
    Profession pro = cr.uniqueResult ();
    tx = session.getTransaction ();
    session.beginTransaction ();
    tx.commit ();
    return pro.getUsers ();
}
----------------------------------------

@SuppressWarnings ({"unchecked", "rawtypes"})
public List < Profession > getProfessionById (long id) throws Exception {
    session = sessionFactory.openSession ();
    Criteria cr = session.createCriteria (Profession.class);
    cr.add (Restrictions.eq ("uid", id));
    List results = cr.list ();
    tx = session.getTransaction ();
    session.beginTransaction ();
    tx.commit ();
    return results;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31311214_31311266_3_13
31311214_31311582_5_16
Title: Selecting best data structure 
----------------------------------------

public static void main (String [] args) {
    Map < String, String > map = new HashMap < > ();
    map.put ("A", "123");
    for (Map.Entry < String, String > mapEntry : map.entrySet ()) {
        if (mapEntry.getKey ().equals ("A")) {
            final String code = mapEntry.getValue ();
            System.out.println ("Your desired code: " + code);
        }
    }
}
----------------------------------------

public static void main (String a []) {
    HashMap < String, Integer > hm = new HashMap < String, Integer > ();
    hm.put ("A", "1");
    hm.put ("B", "2");
    hm.put ("C", "3");
    System.out.println (hm);
    Set < String > keys = hm.keySet ();
    for (String key : keys) {
        System.out.println ("Value of " + key + " is: " + hm.get (key));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31318397_31327972_8_23
31318397_39317190_26_37
Title: @WebFilter exclude url-pattern 
----------------------------------------

public void doFilter (ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {
    HttpServletRequest request = (HttpServletRequest) req;
    HttpServletResponse response = (HttpServletResponse) res;
    HttpSession session = request.getSession (false);
    String path = request.getRequestURI ().substring (request.getContextPath ().length ()).replaceAll ("[/]+$", "");
    boolean loggedIn = (session != null && session.getAttribute ("Id") != null);
    boolean allowedPath = ALLOWED_PATHS.contains (path);
    if (loggedIn || allowedPath) {
        chain.doFilter (req, res);
    } else {
        response.sendRedirect (request.getContextPath () + "/login");
    }
}
----------------------------------------

public void doFilter (ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    System.out.print ("GzipFilter");
    HttpServletRequest httpRequest = (HttpServletRequest) request;
    HttpServletResponse httpResponse = (HttpServletResponse) response;
    if (isExcluded (httpRequest)) {
        chain.doFilter (request, response);
        return;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31318470_31318725_61_127
31318470_31318908_1_33
Title: When I scroll down or up the check position will be change every time 
----------------------------------------

public View getView (final int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View view = convertView;
    ContactItem contactItem = getItem (position);
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        view = mInflater.inflate (R.layout.contact_list, null);
        holder = new ViewHolder ();
        holder.tv1 = (TextView) view.findViewById (R.id.name);
        holder.tv2 = (TextView) view.findViewById (R.id.number);
        holder.ch = (CheckBox) view.findViewById (R.id.checkbox1);
        view.setTag (holder);
    } else {
        holder = (ViewHolder) view.getTag ();
    }
    holder.tv1.setText (contactItem.getConatct_name ());
    holder.tv2.setText (contactItem.getNumber ());
    if (contactItem.isSelected) {
        holder.ch.isChecked (true);
    } else {
        holder.ch.isChecked (false);
    }
    holder.ch.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            if (contactItem.isSelected) {
                holder.ch.isChecked (false);
                contactItem.setChecked (false);
            } else {
                holder.ch.isChecked (true);
                contactItem.setChecked (true);
            }
            notifyDatasetChanged ();
        }}

    );
    return view;
}
----------------------------------------

@Override
public View getView (final int position, View convertView, ViewGroup parent) {
    ViewHolder holder = null;
    View view = convertView;
    ContactItem contactItem = getItem (position);
    LayoutInflater mInflater = (LayoutInflater) context.getSystemService (Activity.LAYOUT_INFLATER_SERVICE);
    if (convertView == null) {
        view = mInflater.inflate (R.layout.contact_list, null);
        holder = new ViewHolder ();
        holder.tv1 = (TextView) view.findViewById (R.id.name);
        holder.tv2 = (TextView) view.findViewById (R.id.number);
        holder.ch = (CheckBox) view.findViewById (R.id.checkbox1);
        view.setTag (holder);
    } else {
        holder = (ViewHolder) view.getTag ();
    }
    holder.tv1.setText (contactItem.getConatct_name ());
    holder.tv2.setText (contactItem.getNumber ());
    holder.ch.setOnCheckedChangeListener (null);
    holder.ch.setChecked (contactItem.getCheckedStatus ());
    holder.ch.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {
        @Override
        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {
            contactItem.setCheckedStatus (isChecked);
        }}

    );
    return view;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31318587_31319286_58_86
31318587_31319286_96_122
Title: I want to read from a txt file and write to an existing JTable 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    try {
        File file = new File ("C:\\Inne\\PhoneData.txt");
        FileWriter fw = new FileWriter (file.getAbsoluteFile ());
        BufferedWriter bw = new BufferedWriter (fw);
        for (int i = 0;
        i < table.getRowCount (); i ++) {
            for (int j = 0;
            j < table.getColumnCount (); j ++) {
                String value = (String) table.getModel ().getValueAt (i, j);
                if ((value == null || "null".equals (value))) {
                    value = "";
                }
                bw.write (value + ";");
            }
            bw.write ("/");
            bw.newLine ();
        }
        bw.close ();
        fw.close ();
    } catch (IOException e2) {
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String line = null;
    try {
        File file = new File ("C:\\Inne\\PhoneData.txt");
        FileReader fr = new FileReader (file.getAbsoluteFile ());
        BufferedReader br = new BufferedReader (fr);
        StringBuilder builder = new StringBuilder ();
        while ((line = br.readLine ()) != null) {
            builder.append (line);
        }
        String [] lineArray = builder.toString ().split ("/");
        table.setModel (new DefaultTableModel (col, 0));
        for (String currentLine : lineArray) {
            String [] dataArray = currentLine.split (";");
            ((DefaultTableModel) table.getModel ()).addRow (dataArray);
        }
        br.close ();
    } catch (IOException e3) {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31321818_31322016_1_20
31321818_31322095_1_24
Title: Java if condition code optimise 
----------------------------------------

public void helloWorld () {
    List items = new ArrayList ();
    items.add ("1");
    String home = "";
    String bill = null;
    String reg = "";
    if (! items.isEmpty ()) {
        System.out.println ("List is not null");
        System.out.println (home == null ? "home is null" : "home is not null");
        System.out.println (bill == null ? "bill is null" : "bill is not null");
        System.out.println (reg == null ? "reg is null" : "reg is not null");
    } else {
        System.out.println ("List is null");
    }
}
----------------------------------------

public void helloWorld () {
    List items = new ArrayList ();
    items.add ("1");
    String home = "";
    String bill = null;
    String reg = "";
    switch (validateInputString (home)) {
        case 1 :
            break;
        case 2 :
            break;
        case 3 :
            break;
        default :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31330146_31330233_51_85
31330146_31330829_14_37
Title: Selection sort Algorithm in Java 
----------------------------------------

private static void sort (int [] values) {
    int scan;
    int index;
    int minIndex;
    int minValue;
    for (scan = 0; scan < (values.length - 1); scan ++) {
        minIndex = scan;
        minValue = values [scan];
        for (index = scan + 1; index < values.length; index ++) {
            if (values [index] < minValue) {
                minValue = values [index];
                minIndex = index;
            }
        }
        values [minIndex] = values [scan];
        values [scan] = minValue;
    }
    for (int n = 0;
    n < values.length; n ++) {
        System.out.print (values [n] + " ");
    }
}
----------------------------------------

private static void sort (int [] values) {
    int index = 0;
    int index2 = 0;
    int temp = 0;
    for (index = 0; index < values.length; index ++) {
        for (index2 = index + 1; index2 < values.length; index2 ++) {
            if (values [index] > values [index2]) {
                temp = values [index];
                values [index] = values [index2];
                values [index2] = temp;
            }
        }
    }
    for (int n = 0;
    n < values.length; n ++) {
        System.out.print (values [n] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31330146_31330233_5_44
31330146_31330829_3_13
Title: Selection sort Algorithm in Java 
----------------------------------------

public static void main (String [] args) {
    int numValues;
    int [] values;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("How many values do you have?");
    numValues = keyboard.nextInt ();
    values = new int [numValues];
    for (int n = 0;
    n < values.length; n ++) {
        System.out.print ("Enter value " + (n + 1) + ":");
        values [n] = keyboard.nextInt ();
    }
    System.out.println ("Here are the values you've entered");
    for (int n = 0;
    n < values.length; n ++) {
        System.out.print (values [n] + " ");
    }
    System.out.println ("Here are the values you've entered, in ascending order");
    sort (values);
    keyboard.close ();
}
----------------------------------------

public static void main (String [] args) {
    int [] values = {15, 14, 13, 12, 11};
    System.out.println ("Here are the values you've entered");
    for (int n = 0;
    n < values.length; n ++) {
        System.out.print (values [n] + "");
    }
    System.out.println ("\nHere are the values you've entered, in ascending order");
    sort (values);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31331174_31331238_5_32
31331174_31331726_4_21
Title: How do I fix this loop validation? 
----------------------------------------

public static void main (String [] args) {
    double fahrenheit;
    Scanner input = new Scanner (System.in);
    while (true) {
        System.out.print ("What is the temperature in Fahrenheit?: ");
        if (! input.hasNextDouble ()) {
            System.out.println ("Oops! " + "Try entering only numerical characters.\n");
            input.nextLine ();
        } else {
            fahrenheit = input.nextDouble ();
            break;
        }
    }
    input.close ();
    System.out.println ("Temperature in Fahrenheit: " + fahrenheit);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("What is the temperature in Fahrenheit?: ");
    while (! input.hasNextDouble ()) {
        System.out.println ("Oops! Try entering only numerical characters.");
        System.out.println ();
        input.next ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31331725_31333095_7_40
31331725_31335921_2_54
Title: Data Structure for faster contains() operation? 
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int T = Integer.parseInt (br.readLine ());
    if (T <= 10 && T >= 1) {
        for (int i = 0;
        i < T; i ++) {
            int count = 0;
            int numOfPonds = Integer.parseInt (br.readLine ());
            if (numOfPonds <= 100000 && numOfPonds >= 1) {
                String [] str;
                Set m = new HashSet ();
                for (int j = 0;
                j < numOfPonds; j ++) {
                    str = br.readLine ().split (" ");
                    int foodType = Integer.parseInt (str [0]);
                    int PokeType = Integer.parseInt (str [1]);
                    if (foodType <= 1000000 && PokeType <= 1000000 && foodType >= 1 && PokeType >= 1 && foodType != PokeType) {
                        m.add (foodType);
                        if (! (m.contains (PokeType))) count ++;
                        else if (m.contains (PokeType)) {
                            m.remove (PokeType);
                        }

                    }
                }
            }
            System.out.println (count);
        }
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    int T = Integer.parseInt (br.readLine ());
    if (T <= 10 && T >= 1) {
        for (int i = 0;
        i < T; i ++) {
            int count = 0;
            int numOfPonds = Integer.parseInt (br.readLine ());
            if (numOfPonds <= 100000 && numOfPonds >= 1) {
                String [] str;
                Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
                for (int j = 0;
                j < numOfPonds; j ++) {
                    str = br.readLine ().split (" ");
                    int foodType = Integer.parseInt (str [0]);
                    int PokeType = Integer.parseInt (str [1]);
                    if (foodType <= 1000000 && PokeType <= 1000000 && foodType >= 1 && PokeType >= 1 && foodType != PokeType) {
                        if (map.containsKey (foodType)) {
                            int x = map.get (Integer.valueOf (foodType));
                            x ++;
                            map.put (foodType, x);
                        } else {
                            map.put (foodType, 1);
                        }
                        if (! (map.containsKey (PokeType))) count ++;
                        else {
                            int x = map.get (Integer.valueOf (PokeType));
                            x --;
                            if (x == 0) map.remove (PokeType);
                            else map.put (PokeType, x);

                        }
                    }
                }
            }
            System.out.println (count);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31333488_31333712_1_16
31333488_31333849_3_11
Title: "What is the error in the code? It doesn't print the last terms in the first third fifth... lines" 
----------------------------------------

public static void main (String args []) throws Exception {
    int i = 1;
    for (i = 1; i < 5; i ++) {
        int throughLoop = 0;
        int jInitial = i * i / 2 - i / 2 + 1;
        int jCheck = i * i / 2 + i / 2 + 1;
        for (int j = jInitial;
        j < jCheck; j ++) {
            System.out.print (j + "\t");
            throughLoop ++;
        }
        System.out.println ("Expected times through loop is " + (jCheck - jInitial) + " Actual through loop " + throughLoop + " Check was :less than" + jCheck);
        throughLoop = 0;
    }
}
----------------------------------------

public static void main (String args []) {
    float i = 1;
    for (i = 1; i <= 5; i ++) {
        for (float j = ((i * i / 2) - i / 2 + 1);
        j < ((i * i / 2) + i / 2 + 1); j ++) {
            System.out.print ((int) j + "\t");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31340715_31340960_44_59
31340715_51607490_38_53
Title: Android: associate a method to home button of smartphone 
----------------------------------------

public void onReceive (Context context, Intent intent) {
    String action = intent.getAction ();
    if (action.equals (Intent.ACTION_CLOSE_SYSTEM_DIALOGS)) {
        String reason = intent.getStringExtra (SYSTEM_DIALOG_REASON_KEY);
        if (reason != null) {
            Log.e (TAG, "action:" + action + ",reason:" + reason);
            if (mListener != null) {
                if (reason.equals (SYSTEM_DIALOG_REASON_HOME_KEY)) {
                    mListener.onHomePressed ();
                } else if (reason.equals (SYSTEM_DIALOG_REASON_RECENT_APPS)) {
                    mListener.onHomeLongPressed ();
                }

            }
        }
    }
}
----------------------------------------

public void onReceive (Context context, Intent intent) {
    String action = intent.getAction ();
    if (action.equals (Intent.ACTION_CLOSE_SYSTEM_DIALOGS)) {
        String reason = intent.getStringExtra (SYSTEM_DIALOG_REASON_KEY);
        if (reason != null) {
            Log.e (TAG, "action:" + action + ",reason:" + reason);
            if (mListener != null) {
                if (reason.equals (SYSTEM_DIALOG_REASON_HOME_KEY)) {
                    mListener.onHomePressed ();
                } else if (reason.equals (SYSTEM_DIALOG_REASON_RECENT_APPS)) {
                    mListener.onHomeLongPressed ();
                }

            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31347131_31347175_18_27
31347131_31347375_38_49
Title: How do I follow DRY in Java object setter? 
----------------------------------------

public static void main (String args []) {
    Demo d = new Demo ();
    Map < String, String > m = new HashMap < > ();
    m.put ("id", "1");
    m.put ("name", "1name");
    d.copyToChild (m, new child ());
    m.put ("id", "2");
    m.put ("name", "2name");
    d.copyToChild (m, new child ());
}
----------------------------------------

public static void main (String args []) {
    demo d = new demo ();
    Map m = new HashMap ();
    m.put ("id", "1");
    m.put ("name", "1name");
    child1 c1 = new child1 ();
    d.copy (m, c1);
    m.put ("id", "2");
    m.put ("name", "2name");
    parent p = d.copy (m, new child2 ());
    System.out.println (p.getName ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31361973_31362012_1_14
31361973_31362120_1_20
Title: How do I call a method from a class that was not instantiated in Java? 
----------------------------------------

public static void main (String args []) {
    int friends = 0;
    Friend f = new Friend ();
    while (friends < 3) {
        f.talk ("Hello");
        friends ++;
        try {
            Thread.sleep (500);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
    f.goodbye ();
}
----------------------------------------

public static void main (String args []) {
    int count = 0;
    Friend [] friends = new Friend [3];
    while (count < 3) {
        friends [count] = new Friend ();
        count ++;
    }
    friends [0].goodbye ();
    friends [1].goodbye ();
    friends [2].goodbye ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31363162_31363172_5_24
31363162_31363189_3_22
Title: How to end if statement in java? 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("If you would like to convert a temperature from Fahrenheit to Celcius, enter 1.");
    System.out.println ("If you would like to convert a temperature from Celcius to Fahrenheit, enter 2.");
    int mode = scan.nextInt ();
    if (mode == 1) {
        System.out.println ("Enter the temperature in Fahrenheit");
        int Ftemp = scan.nextInt ();
        int Cnewtemp = (Ftemp - 32) * 5 / 9;
        System.out.println ("The temperature in Celcius is " + Cnewtemp + " degrees.");
    }
    if (mode == 2) {
        System.out.println ("Enter the temperature in Celcius");
        int Ctemp = scan.nextInt ();
        int Fnewtemp = Ctemp * 9 / 5 + 32;
        System.out.println ("The temperature in Fahrenheit is " + Fnewtemp + " degrees.");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("If you would like to convert a temperature from Fahrenheit to Celcius, enter 1.");
    System.out.println ("If you would like to convert a temperature from Celcius to Fahrenheit, enter 2.");
    int mode = scan.nextInt ();
    if (mode == 1) {
        System.out.println ("Enter the temperature in Fahrenheit");
        int Ftemp = scan.nextInt ();
        int Cnewtemp = (Ftemp - 32) * 5 / 9;
        System.out.println ("The temperature in Celcius is " + Cnewtemp + " degrees.");
    } else if (mode == 2) {
        System.out.println ("Enter the temperature in Celcius");
        int Ctemp = scan.nextInt ();
        int Fnewtemp = Ctemp * 9 / 5 + 32;
        System.out.println ("The temperature in Fahrenheit is " + Fnewtemp + " degrees.");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31363723_31364096_26_47
31363723_31364096_70_123
Title: Edit Instanced JList in an Instanced JPanel 
----------------------------------------

private void initComponents () {
    someButton = new JButton ("Selected Tabbed Pane");
    tabbedPaneClusters = new JTabbedPane ();
    for (String s : Variables2.focusedHostnames) {
        ClusterTab2 cluster = new ClusterTab2 (s);
        tabbedPaneClusters.addTab (s, cluster);
    }
    add (tabbedPaneClusters);
    add (someButton);
    someButton.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            ClusterTab2 tabbedPane = (ClusterTab2) tabbedPaneClusters.getSelectedComponent ();
            if (tabbedPane != null) {
                System.out.println ("Selected Tab: " + tabbedPane.getName ());
            }
        }}

    );
}
----------------------------------------

private void initComponents () {
    final JScrollPane listScrollPane;
    final JList < String > list1;
    final JButton btnRemoveAll;
    final JButton btnAddAll;
    final JButton btnRemoveFromAll;
    listScrollPane = new JScrollPane ();
    list1 = new JList < > ();
    list1.setPrototypeCellValue ("                            ");
    btnRemoveAll = new JButton ();
    btnAddAll = new JButton ();
    btnRemoveFromAll = new JButton ();
    listItems = new DefaultListModel < > ();
    listItems.addElement ("Test");
    list1.setModel (listItems);
    listScrollPane.setViewportView (list1);
    btnRemoveAll.setText ("Remove all from Cluster");
    btnAddAll.setText ("Add all to Cluster");
    btnAddAll.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            getUsers (e);
        }}

    );
    btnRemoveFromAll.setText ("Remove from All Clusters");
    JPanel btnPanel = new JPanel (new GridLayout (0, 1, 4, 4));
    btnPanel.add (btnRemoveAll);
    btnPanel.add (btnAddAll);
    btnPanel.add (btnRemoveFromAll);
    btnRemoveAll.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            listItems.removeAllElements ();
        }}

    );
    btnAddAll.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            listItems.addElement ("Fubar!");
        }}

    );
    JPanel btnWrapPanel = new JPanel (new GridBagLayout ());
    btnWrapPanel.add (btnPanel);
    add (listScrollPane);
    add (btnWrapPanel);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3136898_3137295_18_37
3136898_3137295_1_16
Title: Using a session with php and Java 
----------------------------------------

public String getCookie (String name) {
    String myCookie = getCookie ();
    String search = name + "=";
    if (myCookie.length () > 0) {
        int offset = myCookie.indexOf (search);
        if (offset != - 1) {
            offset += search.length ();
            int end = myCookie.indexOf (";", offset);
            if (end == - 1) end = myCookie.length ();

            return myCookie.substring (offset, end);
        } else System.out.println ("Did not find cookie: " + name);

    }
    return "";
}
----------------------------------------

public String getCookie () {
    try {
        JSObject myBrowser = (JSObject) JSObject.getWindow (this);
        JSObject myDocument = (JSObject) myBrowser.getMember ("document");
        String myCookie = (String) myDocument.getMember ("cookie");
        if (myCookie.length () > 0) return myCookie;

    } catch (Exception e) {
        e.printStackTrace ();
    }
    return "?";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31374041_31374101_4_25
31374041_37274276_7_24
Title: JAVA Display how many ODD and EVEN numbers using only one counter? 
----------------------------------------

public static void main (String [] args) {
    int i, n, even_ctr = 0;
    String input = " ";
    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
    for (i = 1; i <= 10; i ++) {
        try {
            System.out.print ("Input integer number: ");
            input = in.readLine ();
        } catch (IOException e) {
            System.out.println ("Error!");
        }
        n = Integer.parseInt (input);
        if (n % 2 == 0) even_ctr ++;

    }
    System.out.println ("EVEN: " + even_ctr + "\nODD: " + (10 - even_ctr));
}
----------------------------------------

public static void main (String [] args) {
    int num1 = 0, num2, even = 0, count = 0;
    Scanner scr = new Scanner (System.in);
    System.out.print ("Total Nos:");
    num2 = scr.nextInt ();
    while (count < num2) {
        System.out.println ("Enter no:");
        num1 = scr.nextInt ();
        if (num1 % 2 == 0) {
            even = even + 1;
        }
        count = count + 1;
    }
    System.out.println ("Even nos are:" + even);
    System.out.println ("Odd nos are:" + (count - even));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31376744_31376830_10_26
31376744_31376987_1_20
Title: call a java method that asks the user for the number of employees in the company(no parameter and return as value >= 0) 
----------------------------------------

public static int workers () {
    int number = 0;
    System.out.println ("How many employees do you have?");
    Scanner input = new Scanner (System.in);
    while (true) {
        number = input.nextInt ();
        if (number >= 0) {
            return number;
        } else {
            System.out.println ("Please enter a positive number");
        }
    }
    return 0;
}
----------------------------------------

public static int workers () {
    System.out.println ("How many employees do you have?");
    Scanner input = new Scanner (System.in);
    int number;
    boolean isValid = false;
    int numEmployee = 0;
    while (! isValid) {
        number = input.nextInt ();
        if (number >= 0) {
            numEmployee = number;
            isValid = true;
        } else {
            System.out.println ("Please enter a positive number");
        }
    }
    return numEmployee;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31378447_31379140_107_118
31378447_31379140_139_147
Title: Java form elements not showing up fully until activated i.e. clicked on 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2d = (Graphics2D) g;
    g2d.setFont (new Font ("Bebas Neue", Font.PLAIN, 25));
    g2d.setRenderingHint (RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    g2d.setColor (new Color (168, 168, 168, 200));
    FontMetrics fm = g2d.getFontMetrics ();
    int y = (getHeight () - fm.getHeight ()) + fm.getAscent ();
    g2d.drawString ("Project Zenith", 10, y);
    g2d.setColor (new Color (0xFFA6A6));
    g2d.fill (closeRect);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    RoundRectangle2D loginRect = new RoundRectangle2D.Float (0, 0, getWidth () - 1, getHeight () - 1, 20, 20);
    Graphics2D g2d = (Graphics2D) g;
    g2d.setColor (Color.WHITE);
    g2d.fill (loginRect);
    g2d.setColor (new Color (0xA8A8A8));
    g2d.draw (loginRect);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31381249_31381317_1_16
31381249_31381414_12_21
Title: Sum of int[][] rows as int[] (Java) 
----------------------------------------

public static int [] rowSum (int [] [] matrix) {
    int [] sum = new int [6];
    ARRAY_LENGTH = 6;
    for (int col = 0;
    col < ARRAY_LENGTH; col ++) {
        for (int row = 0;
        row < ARRAY_LENGTH; row ++) {
            sum [col] += matrix [col] [row];
        }
    }
}
----------------------------------------

public static int [] rowSum (int [] [] matrix) {
    int [] sum = new int [matrix.length];
    for (int i = 0;
    i < matrix.length; i ++) {
        for (int j = 0;
        j < matrix [i].length; j ++) {
            sum [i] = sum [i] + matrix [i] [j];
        }
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31383672_31383901_7_14
31383672_31383909_1_24
Title: Convert string to rubbish 
----------------------------------------

private static String rubbish () {
    Random randomGenerator = new Random ();
    StringBuffer sb = new StringBuffer ();
    for (int i = 0;
    i < 1000; i ++) {
        sb.append (Character.valueOf ((char) randomGenerator.nextInt (231)));
    }
    return sb.toString ();
}
----------------------------------------

public String rubbish (String input) {
    String result = "";
    long seed = 0;
    long size = 0;
    for (int i = 0;
    i < input.length (); i ++) {
        seed += input.charAt (i);
    }
    seed %= Long.MAX_VALUE;
    size = seed % 3000;
    Random rand = new Random (seed);
    for (int i = 0;
    i < size; i ++) {
        result += (char) rand.nextInt (256);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31384577_31384644_3_26
31384577_31384660_3_12
Title: Not able to figure out the solution for Java program to check whether string is palindrome 
----------------------------------------

public static void main (String [] args) {
    String original = "madam";
    int len = original.length ();
    System.out.println (len);
    boolean flag = true;
    for (int i = len - 1, j = 0;
    i != j; i --, j ++) {
        if (original.charAt (i) != original.charAt (j)) {
            flag = false;
            break;
        }
    }
    if (flag) System.out.println ("palindrome");
    else System.out.println ("not a polindrom");

}
----------------------------------------

public static void main (String [] args) {
    String original = "madam";
    StringBuilder sb = new StringBuilder (original);
    String reverse = sb.reverse ().toString ();
    if (original.equals (reverse)) {
        System.out.println ("PALINDROME");
    } else {
        System.out.println ("NOT A PALINDROME");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31385570_32558113_1_30
31385570_39237456_1_22
Title: Trying to print top view of a tree using two if statements 
----------------------------------------

public void top_view (Node root) {
    String output = "";
    Node left = root.left;
    Node right = root.right;
    String leftOutput = "";
    while (left != null) {
        leftOutput += left.data + " ";
        left = left.left;
    }
    String left = "";
    for (int i = leftOutput.length - 1;
    i >= 0; i --) {
        left += leftOutput.substring (i, i + 1);
    }
    output += left;
    output += " " + root.data + " ";
    while (right != null) {
        output += right.data + " ";
        right = right.right;
    }
    output = output.substring (1, output.length ());
    System.out.println (output);
}
----------------------------------------

void top_view (Node root) {
    Stack < Node > p = new Stack < Node > ();
    Node current = root;
    while (current != null) {
        p.push (current);
        current = current.left;
    }
    while (p.peek () != root) {
        System.out.print (p.pop ().data + " ");
    }
    current = root;
    while (current != null) {
        System.out.print (current.data + " ");
        current = current.right;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31386565_31386633_1_12
31386565_31386635_20_32
Title: Android app calculation error and crash 
----------------------------------------

public void onClick (View v) {
    String dds = ddtext.getText ().toString ();
    final int dd = Integer.parseInt (dds);
    String mms = mmtext.getText ().toString ();
    final int mm = Integer.parseInt (mms);
    String yyyys = yyyytext.getText ().toString ();
    final int yyyy = Integer.parseInt (yyyys);
    output.setText ("you wrote:" + (dd + mm + yyyy));
}
----------------------------------------

public void onClick (View v) {
    String dds = ddtext.getText ().toString ();
    int dd = Integer.parseInt (dds);
    String mms = mmtext.getText ().toString ();
    int mm = Integer.parseInt (mms);
    String yyyys = yyyytext.getText ().toString ();
    int yyyy = Integer.parseInt (yyyys);
    output.setText ("you wrote:" + (dd + mm + yyyy));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31393438_31393768_47_66
31393438_31393768_78_102
Title: Java Swing BufferedImage poor quality 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g;
    g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    g2draw.setColor (Color.BLACK);
    g2draw.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    g2draw.setColor (Color.YELLOW);
    g2draw.fill (e);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    BufferedImage image = new BufferedImage (getWidth (), getHeight (), BufferedImage.TYPE_INT_RGB);
    Graphics2D ig = image.createGraphics ();
    ig.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    ig.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    ig.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    ig.setColor (Color.BLACK);
    ig.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    ig.setColor (Color.YELLOW);
    ig.fill (e);
    ig.dispose ();
    g.drawImage (image, 0, 0, this);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31393438_31393768_47_66
31393438_31405511_33_50
Title: Java Swing BufferedImage poor quality 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g;
    g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    g2draw.setColor (Color.BLACK);
    g2draw.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    g2draw.setColor (Color.YELLOW);
    g2draw.fill (e);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g.create ();
    System.out.println ("Panel Rendering Hints:");
    printRenderingHints (g2draw);
    try {
        g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
        Ellipse2D.Double e = new Ellipse2D.Double (50, 50, DOT_SIZE, DOT_SIZE);
        g2draw.setColor (Color.YELLOW);
        g2draw.fill (e);
    } finally {
        g2draw.dispose ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31393438_31393768_47_66
31393438_31405511_62_86
Title: Java Swing BufferedImage poor quality 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g;
    g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    g2draw.setColor (Color.BLACK);
    g2draw.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    g2draw.setColor (Color.YELLOW);
    g2draw.fill (e);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Dimension size = getParent ().getSize ();
    BufferedImage image = new BufferedImage (size.width, size.height, BufferedImage.TYPE_INT_ARGB);
    Graphics2D ig = image.createGraphics ();
    System.out.println ("Image Rendering Hints:");
    printRenderingHints (ig);
    ig.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    ig.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    ig.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    Graphics2D g2draw = (Graphics2D) g.create ();
    try {
        Ellipse2D.Double e = new Ellipse2D.Double (50, 50, DOT_SIZE, DOT_SIZE);
        ig.setColor (Color.YELLOW);
        ig.fill (e);
        g2draw.drawImage (image, 0, 0, null);
    } finally {
        ig.dispose ();
        g2draw.dispose ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31393438_31393768_47_66
31393438_31417472_10_36
Title: Java Swing BufferedImage poor quality 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g;
    g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    g2draw.setColor (Color.BLACK);
    g2draw.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    g2draw.setColor (Color.YELLOW);
    g2draw.fill (e);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g.create ();
    double scale = 2;
    BufferedImage image = new BufferedImage ((int) (getWidth () * scale), (int) (getHeight () * scale), BufferedImage.TYPE_INT_RGB);
    Graphics2D ig = image.createGraphics ();
    ig.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    ig.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    ig.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    ig.scale (scale, scale);
    ig.setColor (Color.BLACK);
    ig.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (10, 10, DOT_SIZE, DOT_SIZE);
    ig.setColor (Color.YELLOW);
    ig.fill (e);
    ig.dispose ();
    g2draw.scale (1.0d / scale, 1.0d / scale);
    g2draw.drawImage (image, 0, 0, this);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
31393438_31393768_78_102
31393438_31405511_33_50
Title: Java Swing BufferedImage poor quality 
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    BufferedImage image = new BufferedImage (getWidth (), getHeight (), BufferedImage.TYPE_INT_RGB);
    Graphics2D ig = image.createGraphics ();
    ig.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    ig.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
    ig.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
    ig.setColor (Color.BLACK);
    ig.fillRect (0, 0, getWidth (), getHeight ());
    Ellipse2D.Double e = new Ellipse2D.Double (300D - DOT_SIZE, 200D - DOT_SIZE, DOT_SIZE + DOT_SIZE, DOT_SIZE + DOT_SIZE);
    ig.setColor (Color.YELLOW);
    ig.fill (e);
    ig.dispose ();
    g.drawImage (image, 0, 0, this);
}
----------------------------------------

protected void paintComponent (Graphics g) {
    super.paintComponent (g);
    Graphics2D g2draw = (Graphics2D) g.create ();
    System.out.println ("Panel Rendering Hints:");
    printRenderingHints (g2draw);
    try {
        g2draw.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2draw.setRenderingHint (RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2draw.setRenderingHint (RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);
        Ellipse2D.Double e = new Ellipse2D.Double (50, 50, DOT_SIZE, DOT_SIZE);
        g2draw.setColor (Color.YELLOW);
        g2draw.fill (e);
    } finally {
        g2draw.dispose ();
    }
}
----------------------------------------
