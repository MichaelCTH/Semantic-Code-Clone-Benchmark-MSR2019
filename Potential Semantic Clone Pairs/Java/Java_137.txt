$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9271885_9271902_1_13
9271885_9271942_1_12
Title: Type mismatch: cannot convert from integer to boolean 
----------------------------------------

public boolean clearSelection () {
    boolean flag = false;
    if (! this.m_SelectedComps.isEmpty ()) {
        flag = true;
        Iterator localIterator = this.m_SelectedComps.iterator ();
        while (localIterator.hasNext ()) ((AnnotComponent) localIterator.next ()).remove ();

        this.m_SelectedComps.clear ();
    }
    return flag;
}
----------------------------------------

public boolean clearSelection () {
    int i = 0;
    if (! this.m_SelectedComps.isEmpty ()) {
        i = 1;
        Iterator localIterator = this.m_SelectedComps.iterator ();
        while (localIterator.hasNext ()) ((AnnotComponent) localIterator.next ()).remove ();

        this.m_SelectedComps.clear ();
    }
    return (i != 0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9286929_9287415_20_30
9286929_9287545_7_21
Title: String positional parsing in Java 
----------------------------------------

public static void main (String [] args) throws ParseException {
    long start = System.currentTimeMillis ();
    for (int i = 0;
    i < 1000; i ++) {
        parseString ("4239898 mdj 8746bbbrts675420120214");
    }
    long stop = System.currentTimeMillis ();
    System.out.println ("elapsed time : " + (stop - start));
}
----------------------------------------

public static void main (String [] args) {
    String initial = "4239898 mdj 8746bbbrts675420120214";
    SimpleDateFormat format = new SimpleDateFormat ("yyyyMMdd");
    Date parsed = new Date ();
    try {
        parsed = format.parse (initial.substring (26, 34));
    } catch (ParseException pe) {
        pe.printStackTrace ();
    }
    System.out.println (parsed);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9288682_9289642_5_15
9288682_9289744_6_15
Title: Sum of random numbers 
----------------------------------------

public static void runSimulation (int n) {
    int sum = 0;
    java.util.Random rand = new java.util.Random ();
    for (int i = 1;
    i <= n; i ++) {
        int sim = rand.nextInt (3) + 1;
        sum = sum + sim;
        System.out.print (sim);
    }
    System.out.println ();
    System.out.println ("Total = " + sum);
}
----------------------------------------

private static void runSimulation (int count) {
    int sum = 0;
    Random random = new Random ();
    for (int i = 0;
    i < count; i ++) {
        int number = random.nextInt (3) + 1;
        System.out.print (number);
        sum += number;
    }
    System.out.println ("\nSum: " + sum);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9288966_51491337_1_15
9288966_9289165_1_34
Title: delete table if exists in Microsoft Access 
----------------------------------------

public void testDropTable () throws SQLException, ClassNotFoundException {
    Class.forName ("sun.jdbc.odbc.JdbcOdbcDriver");
    Connection con = DriverManager.getConnection ("jdbc:odbc:MsAccessDSN");
    Statement stmt = con.createStatement ();
    String [] tables = {"data_table"};
    for (String table : tables) {
        try {
            stmt.executeUpdate ("DROP TABLE " + table);
        } catch (SQLException e) {
            System.err.println ("Exception in testDropTable (): \n" + "Drop Table testDropTable threw an exception: " + (e.getMessage ()));
        }
    }
    con.close ();
}
----------------------------------------

public void testDropTable () throws SQLException {
    Class.forName ("sun.jdbc.odbc.JdbcOdbcDriver");
    Connection con = DriverManager.getConnection ("jdbc:odbc:MsAccessDSN");
    Statement stmt = con.createStatement ();
    ResultSet checkTable = con.getMetaData ().getTables (null, null, "POI", null);
    String tableName = null;
    while (checkTable.next ()) {
        System.out.println ("In here");
        tableName = checkTable.getString ("data_table");
        System.out.println (tableName);
    }
    if (tableName != null) {
        try {
            String dropTable = "DROP TABLE ";
            String [] tables = tableName;
            for (int i = 0;
            i < tables.length; i ++) {
                String stringCode = new String ();
                stringCode = stringCode + tables [i];
                System.out.println (dropTable + tables [i]);
                int temp = stmt.executeUpdate (dropTable + tables [i]);
            }
        } catch (Exception e) {
            System.err.println ("Exception in testDropTable (): \n" + "Drop Table testDropTable threw an exception: " + (e.getMessage ()));
        }
    } else {
        con.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9302661_9302839_179_187
9302661_9305741_7_31
Title: JEditorPane focus problems after setText() 
----------------------------------------

public static void main (String args []) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            TextAttributeSTRIKETHROUGH fl = new TextAttributeSTRIKETHROUGH ();
        }}

    );
}
----------------------------------------

public static void main (String...args) throws Exception {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame jFrame = new JFrame ();
            jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            Container container = jFrame.getContentPane ();
            container.setLayout (new BorderLayout ());
            container.add (new JTextField (), BorderLayout.NORTH);
            JEditorPane editorPane = new JEditorPane ();
            editorPane.setEditorKit (new HTMLEditorKit ());
            editorPane.setText ("<html><body>Hello World</body></html>");
            container.add (editorPane, BorderLayout.CENTER);
            jFrame.setSize (new Dimension (400, 400));
            jFrame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9306153_9357879_25_39
9306153_9357879_43_53
Title: Sending data to queue not functioning 
----------------------------------------

public void run () {
    try {
        BufferedReader r = new BufferedReader (new InputStreamReader (receivedSocketConn1.getInputStream ()));
        String message = "";
        while (message == null || ! message.equals ("") || ! message.equalsIgnoreCase ("quit")) {
            message = r.readLine ();
            if (message == null) {
                continue;
            }
            databaseQueue.add (message);
        }
    } catch (Exception ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            String message = "";
            message = databaseQueue.take ();
            System.out.println ("\n\nPICKED AT QUEUE : " + message);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9322474_9322594_1_10
9322474_9349137_15_77
Title: Adding JPanels from other classes to the cardLayout 
----------------------------------------

private static void createAndShowGUI () {
    JFrame frame = new JFrame ("test");
    frame.getContentPane ().setLayout (Window1.cardLayout);
    frame.getContentPane ().add (new Window1 ());
    frame.getContentPane ().add (new Window2 ());
    frame.getContentPane ().add (new Window3 ());
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (550, 450);
    frame.setVisible (true);
}
----------------------------------------

private static void createAndShowGUI () {
    JFrame frame = new JFrame ("Card Layout Test");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLocationRelativeTo (null);
    final JPanel contentPane = new JPanel ();
    contentPane.setLayout (new CardLayout (20, 20));
    Window1 win1 = new Window1 ();
    contentPane.add (win1, CARD_JBUTTON);
    Window2 win2 = new Window2 ();
    contentPane.add (win2, CARD_JTEXTFIELD);
    Window3 win3 = new Window3 ();
    contentPane.add (win3, CARD_JRADIOBUTTON);
    JPanel buttonPanel = new JPanel ();
    final JButton previousButton = new JButton ("PREVIOUS");
    previousButton.setBackground (Color.BLACK);
    previousButton.setForeground (Color.WHITE);
    final JButton nextButton = new JButton ("NEXT");
    nextButton.setBackground (Color.RED);
    nextButton.setForeground (Color.WHITE);
    buttonPanel.add (previousButton);
    buttonPanel.add (nextButton);
    previousButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            CardLayout cardLayout = (CardLayout) contentPane.getLayout ();
            cardLayout.previous (contentPane);
        }}

    );
    nextButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            CardLayout cardLayout = (CardLayout) contentPane.getLayout ();
            cardLayout.next (contentPane);
        }}

    );
    frame.add (contentPane, BorderLayout.CENTER);
    frame.add (buttonPanel, BorderLayout.PAGE_END);
    frame.pack ();
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9322474_9349137_106_133
9322474_9349137_188_221
Title: Adding JPanels from other classes to the cardLayout 
----------------------------------------

private void init () {
    final JButton clickButton = new JButton ("CLICK ME");
    final JButton dontClickButton = new JButton ("DON\'T CLICK ME");
    action = new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (ae.getSource () == clickButton) {
                JOptionPane.showMessageDialog (null, "Hello there dude!", "Right Button", JOptionPane.INFORMATION_MESSAGE);
            } else if (ae.getSource () == dontClickButton) {
                JOptionPane.showMessageDialog (null, "I told you not to click me!", "Wrong Button", JOptionPane.PLAIN_MESSAGE);
            }

        }}

    ;
    clickButton.addActionListener (action);
    dontClickButton.addActionListener (action);
    add (clickButton);
    add (dontClickButton);
}
----------------------------------------

public void init () {
    setLayout (new GridLayout (2, 2));
    JLabel maleLabel = new JLabel ("MALE", JLabel.CENTER);
    final JCheckBox maleBox = new JCheckBox ();
    JLabel femaleLabel = new JLabel ("FEMALE", JLabel.CENTER);
    final JCheckBox femaleBox = new JCheckBox ();
    state = new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (maleBox == (JCheckBox) ae.getSource ()) {
                femaleBox.setSelected (false);
                JOptionPane.showMessageDialog (null, "Congrats you are a Male", "Gender : ", JOptionPane.INFORMATION_MESSAGE);
            } else if (femaleBox == (JCheckBox) ae.getSource ()) {
                maleBox.setSelected (false);
                JOptionPane.showMessageDialog (null, "Congrats you are a Female", "Gender : ", JOptionPane.INFORMATION_MESSAGE);
            }

        }}

    ;
    maleBox.addActionListener (state);
    femaleBox.addActionListener (state);
    add (maleLabel);
    add (maleBox);
    add (femaleLabel);
    add (femaleBox);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9341505_16686031_1_19
9341505_17527487_1_19
Title: How to check if a file is open by another process (Java/Linux)? 
----------------------------------------

public static boolean isFileClosed (File file) {
    try {
        Process plsof = new ProcessBuilder (new String [] {"lsof", "|", "grep", file.getAbsolutePath ()}).start ();
        BufferedReader reader = new BufferedReader (new InputStreamReader (plsof.getInputStream ()));
        String line;
        while ((line = reader.readLine ()) != null) {
            if (line.contains (file.getAbsolutePath ())) {
                reader.close ();
                plsof.destroy ();
                return false;
            }
        }
    } catch (Exception ex) {
    }
    reader.close ();
    plsof.destroy ();
    return true;
}
----------------------------------------

private boolean isFileClosed (File file) {
    boolean closed;
    Channel channel = null;
    try {
        channel = new RandomAccessFile (file, "rw").getChannel ();
        closed = true;
    } catch (Exception ex) {
        closed = false;
    } finally {
        if (channel != null) {
            try {
                channel.close ();
            } catch (IOException ex) {
            }
        }
    }
    return closed;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9348228_9348878_54_100
9348228_9350680_42_62
Title: OpenGL ES : Using Texture: Blank White instead of Texture Image 
----------------------------------------

public void onDrawFrame (GL10 gl) {
    int a = 0;
    try {
        Bitmap bitmap = BitmapFactory.decodeStream (assets.open ("bobrgb888.png"));
        int textureIds [] = new int [1];
        gl.glGenTextures (1, textureIds, 0);
        int textureId = textureIds [0];
        a = textureId;
        gl.glBindTexture (GL10.GL_TEXTURE_2D, textureId);
        GLUtils.texImage2D (GL10.GL_TEXTURE_2D, 0, bitmap, 0);
        gl.glTexParameterf (GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
        gl.glTexParameterf (GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_NEAREST);
        gl.glBindTexture (GL10.GL_TEXTURE_2D, 0);
        bitmap.recycle ();
    } catch (IOException e) {
        Log.d ("", "FAILED LOAD FILE");
        throw new RuntimeException ("Couldn't load asset!");
    }
    gl.glViewport (0, 0, glView.getWidth (), glView.getHeight ());
    gl.glClear (GL10.GL_COLOR_BUFFER_BIT);
    gl.glMatrixMode (GL10.GL_PROJECTION);
    gl.glLoadIdentity ();
    gl.glOrthof (0, 320, 0, 480, 1, - 1);
    gl.glEnable (GL10.GL_TEXTURE_2D);
    gl.glBindTexture (GL10.GL_TEXTURE_2D, a);
    gl.glEnableClientState (GL10.GL_VERTEX_ARRAY);
    gl.glEnableClientState (GL10.GL_TEXTURE_COORD_ARRAY);
    int VERTEX_SIZE = (2 + 2) * 4;
    vertices.position (0);
    gl.glVertexPointer (2, GL10.GL_FLOAT, VERTEX_SIZE, vertices);
    vertices.position (2);
    gl.glTexCoordPointer (2, GL10.GL_FLOAT, VERTEX_SIZE, vertices);
    gl.glDrawArrays (GL10.GL_TRIANGLES, 0, 3);
}
----------------------------------------

public void onDrawFrame (GL10 gl) {
    int VERTEX_SIZE = (2 + 4) * 4;
    gl.glViewport (0, 0, glView.getWidth (), glView.getHeight ());
    gl.glClear (GL10.GL_COLOR_BUFFER_BIT);
    gl.glMatrixMode (GL10.GL_PROJECTION);
    gl.glLoadIdentity ();
    gl.glOrthof (0, 320, 0, 480, 10, - 10);
    gl.glEnableClientState (GL10.GL_VERTEX_ARRAY);
    gl.glEnableClientState (GL10.GL_COLOR_ARRAY);
    vertices.position (0);
    gl.glVertexPointer (2, GL10.GL_FLOAT, VERTEX_SIZE, vertices);
    vertices.position (2);
    gl.glColorPointer (4, GL10.GL_FLOAT, VERTEX_SIZE, vertices);
    gl.glDrawArrays (GL10.GL_TRIANGLES, 0, 3);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9349523_9351702_119_129
9349523_9351702_61_70
Title: "JProgressBar doesn't update  can't find a clue" 
----------------------------------------

public void beginAnnealing () {
    long sleepDelay = 100;
    while (annealedValue < MAX_ANNEALED_VALUE) {
        setAnnealedValue (annealedValue + 1);
        try {
            Thread.sleep (sleepDelay);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void beginAnnealing () {
    beginAnnealingBtn.setEnabled (false);
    setValue (0);
    myAnnealing.reset ();
    new Thread (new Runnable () {
        public void run () {
            myAnnealing.beginAnnealing ();
        }}

    ).start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9360881_9360979_29_44
9360881_9360979_58_73
Title: Java change View from menu not working 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel1.isShowing ()) {
        remove (panel1);
        add (panel2, BorderLayout.CENTER);
    } else if (panel2.isShowing ()) {
        remove (panel2);
        add (panel1, BorderLayout.CENTER);
    }

    revalidate ();
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (panel1.isShowing ()) {
        remove (panel1);
        add (panel2, BorderLayout.CENTER);
    } else if (panel2.isShowing ()) {
        remove (panel2);
        add (panel1, BorderLayout.CENTER);
    }

    revalidate ();
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9365599_9366008_30_41
9365599_9366008_9_20
Title: Java Servlet writing form input to CSV 
----------------------------------------

void saveList (Writer w, List < String [] > list) throws IOException {
    BufferedWriter bw = new BufferedWriter (w);
    for (int i = 0;
    i < list.size (); i ++) {
        String [] dataEntry = list.get (i);
        for (int j = 0;
        j < dataEntry.length; j ++) {
            bw.write ("test1-2");
        }
        bw.newLine ();
    }
    bw.flush ();
}
----------------------------------------

void saveList (File f, List < String [] > list) throws IOException {
    FileWriter fw = null;
    try {
        fw = new FileWriter (f);
        saveList (fw, list);
    } finally {
        if (null != fw) {
            fw.close ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9366174_9366223_1_16
9366174_9366225_1_16
Title: Returning the highest value java 
----------------------------------------

public String top () {
    int highestIndex = 0;
    int highestMark = people.get (0).getMark ();
    for (int k = 1;
    k < people.size (); k ++) {
        int mark = people.get (k).getMark ();
        if (mark > highestMark) {
            highestMark = mark;
            highestIndex = k;
        }
    }
    return people.get (highestIndex).getName ();
}
----------------------------------------

public String top () {
    int highest = 0;
    int k;
    int topPerson;
    for (k = 0; k < people.size (); k ++) {
        if (people.get (k).getMark () > highest) {
            highest = people.get (k).getMark ();
            topPerson = k;
        }
    }
    return people.get (topPerson).getName ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9366174_9366223_1_16
9366174_9366246_1_14
Title: Returning the highest value java 
----------------------------------------

public String top () {
    int highestIndex = 0;
    int highestMark = people.get (0).getMark ();
    for (int k = 1;
    k < people.size (); k ++) {
        int mark = people.get (k).getMark ();
        if (mark > highestMark) {
            highestMark = mark;
            highestIndex = k;
        }
    }
    return people.get (highestIndex).getName ();
}
----------------------------------------

public String top () {
    int highest = 0;
    int k;
    for (k = 1; k < people.size (); k ++) {
        if (people.get (k).getMark () > people.get (highest).getMark ()) {
            highest = k;
        }
    }
    return people.get (highest).getName ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9366174_9366225_1_16
9366174_9366246_1_14
Title: Returning the highest value java 
----------------------------------------

public String top () {
    int highest = 0;
    int k;
    int topPerson;
    for (k = 0; k < people.size (); k ++) {
        if (people.get (k).getMark () > highest) {
            highest = people.get (k).getMark ();
            topPerson = k;
        }
    }
    return people.get (topPerson).getName ();
}
----------------------------------------

public String top () {
    int highest = 0;
    int k;
    for (k = 1; k < people.size (); k ++) {
        if (people.get (k).getMark () > people.get (highest).getMark ()) {
            highest = k;
        }
    }
    return people.get (highest).getName ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_21011603_10_24
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_21011603_29_43
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_21746287_12_24
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_30820065_12_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_44852897_6_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_15204714_7_27
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    while (counter < 50) {
        synchronized (lock) {
            if (turn == 0) {
                System.out.println (counter + " from thread " + Thread.currentThread ().getName ());
                turn = 1;
                try {
                    lock.wait ();
                } catch (InterruptedException e) {
                    Thread.currentThread ().interrupt ();
                }
            } else {
                turn = 0;
                lock.notify ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_10_24
9388838_21746287_12_24
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_10_24
9388838_30820065_12_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_10_24
9388838_44852897_6_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_10_24
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_29_43
9388838_21746287_12_24
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_29_43
9388838_30820065_12_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_29_43
9388838_44852897_6_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_29_43
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < 25; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount ();
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_5_50
9388838_39024802_27_40
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t1 = new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 25; i ++) {
                synchronized (CommonUtil.mLock) {
                    incrementCount ();
                    CommonUtil.mLock.notify ();
                    try {
                        CommonUtil.mLock.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }}

    );
    Thread t2 = new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 25; i ++) {
                synchronized (CommonUtil.mLock) {
                    incrementCount ();
                    CommonUtil.mLock.notify ();
                    try {
                        CommonUtil.mLock.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }}

    );
    t1.start ();
    Thread.sleep (400);
    t2.start ();
    t1.join ();
    t2.join ();
}
----------------------------------------

public static void main (String [] args) {
    program x = new program ();
    Thread t0 = new Thread (x);
    Thread t1 = new Thread (x);
    t0.start ();
    try {
        Thread.sleep (1);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    t1.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21011603_5_50
9388838_44852897_27_35
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public static void main (String [] args) throws InterruptedException {
    Thread t1 = new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 25; i ++) {
                synchronized (CommonUtil.mLock) {
                    incrementCount ();
                    CommonUtil.mLock.notify ();
                    try {
                        CommonUtil.mLock.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }}

    );
    Thread t2 = new Thread (new Runnable () {
        @Override
        public void run () {
            for (int i = 0;
            i < 25; i ++) {
                synchronized (CommonUtil.mLock) {
                    incrementCount ();
                    CommonUtil.mLock.notify ();
                    try {
                        CommonUtil.mLock.wait ();
                    } catch (InterruptedException e) {
                        e.printStackTrace ();
                    }
                }
            }
        }}

    );
    t1.start ();
    Thread.sleep (400);
    t2.start ();
    t1.join ();
    t2.join ();
}
----------------------------------------

public static void main (String [] args) {
    ThreadalternatePrint obj1 = new ThreadalternatePrint ();
    Thread Th1 = new Thread (obj1);
    Thread Th2 = new Thread (obj1);
    Th1.setName ("Thread1");
    Th2.setName ("Thread2");
    Th1.start ();
    Th2.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21746287_12_24
9388838_30820065_12_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21746287_12_24
9388838_44852897_6_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_21746287_12_24
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 1;
    i <= 5; i ++) {
        synchronized (CommonUtil.mLock) {
            incrementCount (t.getName ());
            CommonUtil.mLock.notify ();
            try {
                CommonUtil.mLock.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_30820065_12_25
9388838_44852897_6_25
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_30820065_12_25
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public void run () {
    for (int i = 0;
    i < N; i ++) {
        synchronized (object) {
            System.out.println (i + "--" + thread.getName ());
            object.notify ();
            try {
                object.wait ();
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_39024802_27_40
9388838_44852897_27_35
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public static void main (String [] args) {
    program x = new program ();
    Thread t0 = new Thread (x);
    Thread t1 = new Thread (x);
    t0.start ();
    try {
        Thread.sleep (1);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
    t1.start ();
}
----------------------------------------

public static void main (String [] args) {
    ThreadalternatePrint obj1 = new ThreadalternatePrint ();
    Thread Th1 = new Thread (obj1);
    Thread Th2 = new Thread (obj1);
    Th1.setName ("Thread1");
    Th2.setName ("Thread2");
    Th1.start ();
    Th2.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9388838_44852897_6_25
9388838_45635029_15_42
Title: Writing a program with 2 threads which prints alternatively 
----------------------------------------

public synchronized void run () {
    try {
        Thread.sleep (10);
    } catch (InterruptedException e1) {
        e1.printStackTrace ();
    }
    while (counter < 51) {
        ++ counter;
        notify ();
        System.out.println (Thread.currentThread ().getName ());
        try {
            wait ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (counter <= 100) {
        synchronized (lock) {
            if (counter % 2 == 0) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            } else if (counter % 2 == 1) {
                System.out.println (counter + " Written By Thread-" + Thread.currentThread ().getName ());
                counter ++;
                try {
                    lock.notifyAll ();
                    lock.wait ();
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
            }

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9409541_28562521_5_61
9409541_9409627_3_20
Title: Java Assignment ( Changing string value in if statement) 
----------------------------------------

public static void main (String [] args) {
    String month1 = JOptionPane.showInputDialog ("please enter number of the month");
    String day1 = JOptionPane.showInputDialog ("please enter number of the day");
    int month = Integer.parseInt (month1);
    int day = Integer.parseInt (day1);
    if ((month == 3) && (day >= 21 && day <= 31)) {
        JOptionPane.showMessageDialog (null, "spring");
    } else if ((month == 4) || (month == 5)) {
        JOptionPane.showMessageDialog (null, "spring");
    } else if ((month == 6) && (day < 21)) {
        JOptionPane.showMessageDialog (null, "spring");
    }

    if ((month == 6) && (day >= 21 && day <= 31)) {
        JOptionPane.showMessageDialog (null, "summer");
    } else if ((month == 7) || (month == 8)) {
        JOptionPane.showMessageDialog (null, "summer");
    } else if ((month == 9) && (day < 21)) {
        JOptionPane.showMessageDialog (null, "summer");
    }

    if ((month == 9) && (day >= 21 && day <= 31)) {
        JOptionPane.showMessageDialog (null, "fall");
    } else if ((month == 10) || (month == 11)) {
        JOptionPane.showMessageDialog (null, "fall");
    } else if ((month == 12) && (day < 21)) {
        JOptionPane.showMessageDialog (null, "fall");
    }

    if ((month == 12) && (day >= 21 && day <= 31)) {
        JOptionPane.showMessageDialog (null, "winter");
    } else if ((month == 1) || (month == 2)) {
        JOptionPane.showMessageDialog (null, "winter");
    } else if ((month == 3) && (day < 21)) {
        JOptionPane.showMessageDialog (null, "winter");
    }

}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int month;
    int day;
    String season = null;
    System.out.print ("Please enter month and day: ");
    month = in.nextInt ();
    day = in.nextInt ();
    String [] seasons = {"Winter", "Spring", "Summer", "Fall"};
    if (day >= 21 && month % 3 == 0) {
        season = seasons [((month + 2) / 3) % 4];
    } else {
        season = seasons [((month - 1) / 3)];
    }
    System.out.println ("Season: " + season);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9413656_43063982_15_51
9413656_50510057_1_15
Title: "How to use Timer class to call a method do something reset timer repeat?" 
----------------------------------------

public static void main (String [] args) throws Exception {
    CountDownLatch latch = new CountDownLatch (1);
    JobDetail job = JobBuilder.newJob (SimpleJob.class).withIdentity ("CronQuartzJob", "Group").build ();
    Trigger trigger = newTrigger ().withIdentity ("TriggerName", "Group").withSchedule (CronScheduleBuilder.cronSchedule ("0/1 * * * * ?")).build ();
    final Scheduler scheduler = new StdSchedulerFactory ().getScheduler ();
    scheduler.start ();
    scheduler.scheduleJob (job, trigger);
    latch.await ();
    Runtime.getRuntime ().addShutdownHook (new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                scheduler.shutdown ();
                latch.countDown ();
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    ));
}
----------------------------------------

public static void main (String [] args) {
    Timer timer = new Timer ();
    TimerTask tt = new TimerTask () {
        public void run () {
            Calendar cal = Calendar.getInstance ();
            int hour = cal.get (Calendar.HOUR_OF_DAY);
            int min = cal.get (Calendar.MINUTE);
            if (hour == 18 && min == 20) {
                doSomething ();
            }
        }}

    ;
    timer.schedule (tt, 1000, 5000);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9413656_43063982_15_51
9413656_9413767_7_15
Title: "How to use Timer class to call a method do something reset timer repeat?" 
----------------------------------------

public static void main (String [] args) throws Exception {
    CountDownLatch latch = new CountDownLatch (1);
    JobDetail job = JobBuilder.newJob (SimpleJob.class).withIdentity ("CronQuartzJob", "Group").build ();
    Trigger trigger = newTrigger ().withIdentity ("TriggerName", "Group").withSchedule (CronScheduleBuilder.cronSchedule ("0/1 * * * * ?")).build ();
    final Scheduler scheduler = new StdSchedulerFactory ().getScheduler ();
    scheduler.start ();
    scheduler.scheduleJob (job, trigger);
    latch.await ();
    Runtime.getRuntime ().addShutdownHook (new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                scheduler.shutdown ();
                latch.countDown ();
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }}

    ));
}
----------------------------------------

public static void main (String [] args) {
    final ScheduledExecutorService ses = Executors.newSingleThreadScheduledExecutor ();
    ses.scheduleWithFixedDelay (new Runnable () {
        @Override
        public void run () {
            System.out.println (new Date ());
        }}

    , 0, 1, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9413656_50510057_1_15
9413656_9413767_7_15
Title: "How to use Timer class to call a method do something reset timer repeat?" 
----------------------------------------

public static void main (String [] args) {
    Timer timer = new Timer ();
    TimerTask tt = new TimerTask () {
        public void run () {
            Calendar cal = Calendar.getInstance ();
            int hour = cal.get (Calendar.HOUR_OF_DAY);
            int min = cal.get (Calendar.MINUTE);
            if (hour == 18 && min == 20) {
                doSomething ();
            }
        }}

    ;
    timer.schedule (tt, 1000, 5000);
}
----------------------------------------

public static void main (String [] args) {
    final ScheduledExecutorService ses = Executors.newSingleThreadScheduledExecutor ();
    ses.scheduleWithFixedDelay (new Runnable () {
        @Override
        public void run () {
            System.out.println (new Date ());
        }}

    , 0, 1, TimeUnit.SECONDS);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9425322_9427287_124_135
9425322_9427287_147_159
Title: Detecting user inactivity in a desktop application 
----------------------------------------

public void run () {
    if (trayItem != null) {
        trayItem.setImage (ClientSessionManagement.IMG_CONNECTED);
        trayItem.getToolTip ().setVisible (false);
        trayItem.setToolTip (toolTipConnected);
        trayItem.getToolTip ().setVisible (true);
    }
    updateHoverTooltip ();
}
----------------------------------------

public void run () {
    if (trayItem != null) {
        trayItem.setImage (ClientSessionManagement.IMG_DISCONNECTED);
        trayItem.getToolTip ().setVisible (false);
        trayItem.setToolTip (toolTipDisconnected);
        trayItem.getToolTip ().setVisible (true);
    }
    updateHoverTooltip ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9425322_9427287_124_135
9425322_9427287_328_348
Title: Detecting user inactivity in a desktop application 
----------------------------------------

public void run () {
    if (trayItem != null) {
        trayItem.setImage (ClientSessionManagement.IMG_CONNECTED);
        trayItem.getToolTip ().setVisible (false);
        trayItem.setToolTip (toolTipConnected);
        trayItem.getToolTip ().setVisible (true);
    }
    updateHoverTooltip ();
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (15000);
    } catch (InterruptedException e) {
        LOG.error (e);
    }
    while (true) {
        try {
            Thread.sleep (5000);
        } catch (InterruptedException e) {
            LOG.error (e);
        }
        checkHeartbeatInterval ();
        checkUserInterfaceActivityInterval ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9425322_9427287_147_159
9425322_9427287_328_348
Title: Detecting user inactivity in a desktop application 
----------------------------------------

public void run () {
    if (trayItem != null) {
        trayItem.setImage (ClientSessionManagement.IMG_DISCONNECTED);
        trayItem.getToolTip ().setVisible (false);
        trayItem.setToolTip (toolTipDisconnected);
        trayItem.getToolTip ().setVisible (true);
    }
    updateHoverTooltip ();
}
----------------------------------------

public void run () {
    try {
        Thread.sleep (15000);
    } catch (InterruptedException e) {
        LOG.error (e);
    }
    while (true) {
        try {
            Thread.sleep (5000);
        } catch (InterruptedException e) {
            LOG.error (e);
        }
        checkHeartbeatInterval ();
        checkUserInterfaceActivityInterval ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9440327_9481905_46_53
9440327_9481905_57_66
Title: My Bouncing Ball Does Not Draw 
----------------------------------------

public void run () {
    for (int i = 0;
    i < ballArray.length; i ++) {
        if (ballArray [i] != null) {
            ballArray [i].move ();
        }
    }
    repaint ();
}
----------------------------------------

public void run () {
    while (true) {
        try {
            EventQueue.invokeLater (updateGraphics);
            Thread.sleep (100);
        } catch (InterruptedException e) {
            return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9440368_9440487_82_90
9440368_9441109_41_49
Title: JComboBox returning values 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            ComboBoxListeners comboBoxListeners = new ComboBoxListeners ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            ComboBoxListener cbl = new ComboBoxListener ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9440737_9440801_1_12
9440737_9441130_1_24
Title: Filereader null declarations and appending best practice 
----------------------------------------

public String readFile () throws IOException {
    try (FileReader fr = new FileReader ("c:/test.txt")) {
        BufferedReader br = new BufferedReader (fr);
        StringBuilder content = new StringBuilder ();
        int c;
        while ((c = br.read ()) != - 1) {
            content.append ((char) c);
        }
        return content.toString ();
    }
}
----------------------------------------

public String readFile () {
    File f = new File ("/Users/Guest/Documents/workspace/Project/src/test.txt");
    FileReader fr = null;
    BufferedReader br = null;
    StringBuilder content = new StringBuilder ();
    try {
        fr = new FileReader (f);
        br = new BufferedReader (fr);
        String line = null;
        while ((line = br.readLine ()) != null) {
            content.append (line);
        }
        fr.close ();
        br.close ();
    } catch (Exception e) {
    }
    return content.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9449472_9449514_27_34
9449472_9451752_73_83
Title: Formatted text field and JComboBox together 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            UIManager.put ("swing.boldMetal", Boolean.FALSE);
            createAndShowGUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            UIManager.put ("swing.boldMetal", Boolean.FALSE);
            createAndShowGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9457988_29471137_5_24
9457988_9462757_1_11
Title: Bearing from one coordinate to another 
----------------------------------------

protected static String bearing (double lat1, double lon1, double lat2, double lon2) {
    double longitude1 = lon1;
    double longitude2 = lon2;
    double latitude1 = Math.toRadians (lat1);
    double latitude2 = Math.toRadians (lat2);
    double longDiff = Math.toRadians (longitude2 - longitude1);
    double y = Math.sin (longDiff) * Math.cos (latitude2);
    double x = Math.cos (latitude1) * Math.sin (latitude2) - Math.sin (latitude1) * Math.cos (latitude2) * Math.cos (longDiff);
    double resultDegree = (Math.toDegrees (Math.atan2 (y, x)) + 360) % 360;
    String coordNames [] = {"N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW", "N"};
    double directionid = Math.round (resultDegree / 22.5);
    if (directionid < 0) {
        directionid = directionid + 16;
    }
    String compasLoc = coordNames [(int) directionid];
    return resultDegree + " " + compasLoc;
}
----------------------------------------

protected static double bearing (double lat1, double lon1, double lat2, double lon2) {
    double longitude1 = lon1;
    double longitude2 = lon2;
    double latitude1 = Math.toRadians (lat1);
    double latitude2 = Math.toRadians (lat2);
    double longDiff = Math.toRadians (longitude2 - longitude1);
    double y = Math.sin (longDiff) * Math.cos (latitude2);
    double x = Math.cos (latitude1) * Math.sin (latitude2) - Math.sin (latitude1) * Math.cos (latitude2) * Math.cos (longDiff);
    return (Math.toDegrees (Math.atan2 (y, x)) + 360) % 360;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9458920_9458949_7_17
9458920_9458965_8_20
Title: Is String not considered an object? 
----------------------------------------

public void add (String x) {
    if (count == 0) {
        least = x;
        maximum = x;
    } else if (least.compareTo (x) > 0) {
        least = x;
    } else if (maximum.compareTo (x) < 0) {
        maximum = x;
    }

    count ++;
}
----------------------------------------

public void add (String x) {
    if (count == 0) {
        least = x;
        maximum = x;
    } else if (least.compareTo (x) > 0) least = x;
    else if (maximum.compareTo (x) < 0) maximum = x;

    count ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9464171_9464221_1_17
9464171_9464429_3_18
Title: Printing random numbers in a 2D array only once 
----------------------------------------

public static void main (String...args) throws Exception {
    List < Integer > list = new ArrayList < Integer > ();
    for (int i = 0;
    i < 16; i ++) {
        list.add (i);
    }
    System.out.println (list);
    Collections.shuffle (list);
    System.out.println (list);
    int [] [] a2 = new int [4] [4];
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            a2 [i] [j] = list.get (i * 4 + j);
        }
    }
    System.out.println (Arrays.deepToString (a2));
}
----------------------------------------

public static void main (String [] args) {
    Random r = new Random ();
    int ROWS = 4;
    int COLS = 3;
    String output = "";
    for (int row = 0;
    row < ROWS; row ++) {
        for (int col = 0;
        col < COLS; col ++) {
            output += " " + r.nextInt (16);
        }
        output += "\n";
    }
    System.out.print (output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9473257_9473397_31_39
9473257_9473397_6_17
Title: Controlling the execution of a method via Threads in Java 
----------------------------------------

public void run () {
    ClassA a = new ClassA ();
    Thread t = new Thread (a);
    t.start ();
    if (decideToSwitch ()) {
        a.switchToOther = true;
        t.interrupt ();
    }
}
----------------------------------------

public void run () {
    switchToOther = false;
    try {
        method1 ();
    } catch (InterruptedException e) {
        Thread.currentThread ().interrupt ();
    }
    if (switchToOther) {
        method2 ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9477257_9477321_6_18
9477257_9477920_25_39
Title: Create a read-only file 
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("test.txt");
    if (file.exists ()) {
        file.delete ();
    }
    file.createNewFile ();
    System.out.println ("Before. canWrite?" + file.canWrite ());
    file.setWritable (false);
    System.out.println ("After. canWrite?" + file.canWrite ());
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new ReadOnlyFile ("test.txt");
    if (file.exists ()) {
        file.delete ();
    }
    file.createNewFile ();
    System.out.println ("Before. canWrite? " + file.canWrite ());
    file.setWritable (false);
    System.out.println ("Set writable false. canWrite? " + file.canWrite ());
    file.setWritable (true);
    System.out.println ("Set writable true. canWrite? " + file.canWrite ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9477257_9477323_6_18
9477257_9477920_25_39
Title: Create a read-only file 
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new File ("test.txt");
    if (file.exists ()) {
        file.delete ();
    }
    file.createNewFile ();
    System.out.println ("Before. canWrite?" + file.canWrite ());
    file.setWritable (false);
    System.out.println ("After. canWrite?" + file.canWrite ());
}
----------------------------------------

public static void main (String [] args) throws IOException {
    File file = new ReadOnlyFile ("test.txt");
    if (file.exists ()) {
        file.delete ();
    }
    file.createNewFile ();
    System.out.println ("Before. canWrite? " + file.canWrite ());
    file.setWritable (false);
    System.out.println ("Set writable false. canWrite? " + file.canWrite ());
    file.setWritable (true);
    System.out.println ("Set writable true. canWrite? " + file.canWrite ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9492707_31449908_3_12
9492707_52014201_11_42
Title: How can I split a text into sentences using the Stanford parser? 
----------------------------------------

public static void main (String a []) {
    String str = "This program splits a string based on space";
    String [] words = str.split (" ");
    for (String s : words) {
        System.out.println (s);
    }
    str = "This     program  splits a string based on space";
    words = str.split ("\\s+");
}
----------------------------------------

public static void main (String [] args) throws IOException {
    PrintWriter out;
    out = new PrintWriter ("C:\\Users\\ACER\\Downloads\\stanford-corenlp-full-     
        2018-02-27\\output.txt");
    Properties props = new Properties ();
    props.setProperty ("annotators", "tokenize, ssplit, pos,lemma");
    StanfordCoreNLP pipeline = new StanfordCoreNLP (props);
    Annotation annotation;
    String readString = null;
    PrintWriter pw = null;
    BufferedReader br = null;
    br = new BufferedReader (new FileReader ("C:\\Users\\ACER\\Downloads\\stanford- 
        corenlp-full-2018-02-27\\input.txt"));
    pw = new PrintWriter (new BufferedWriter (new FileWriter ("C:\\Users\\ACER\\Downloads\\stanford-corenlp-full-2018-02-   
        27\\output.txt", false)));
    String x = null;
    while ((readString = br.readLine ()) != null) {
        pw.println (readString);
        String xx = readString;
        x = xx;
        annotation = new Annotation (x);
        pipeline.annotate (annotation);
        pipeline.prettyPrint (annotation, out);
    }
    br.close ();
    pw.close ();
    System.out.println ("Done...");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
949353_2576230_14_49
949353_949858_11_26
Title: Java: Altering UI fonts (Nimbus) doesn't work! 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (new NimbusLookAndFeel () {
            @Override
            public UIDefaults getDefaults () {
                UIDefaults ret = super.getDefaults ();
                ret.put ("defaultFont", new Font (Font.MONOSPACED, Font.BOLD, 16));
                return ret;
            }}

        );
        new JFrame ("Hello") {

            {
                setDefaultCloseOperation (EXIT_ON_CLOSE);
                setLayout (new FlowLayout (FlowLayout.LEFT));
                setSize (500, 500);
                setLocationRelativeTo (null);
                add (new JLabel ("someLabel 1"));
                add (new JButton ("someButton 1"));
                add (new JLabel ("someLabel 2"));
                add (new JButton ("someButton 2"));
                setVisible (true);
            }

        }

        ;
    } catch (Exception ex) {
        throw new Error (ex);
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getCrossPlatformLookAndFeelClassName ());
    } catch (Exception e) {
        e.printStackTrace ();
    }
    UIDefaults defaults = UIManager.getLookAndFeel ().getDefaults ();
    System.out.println (defaults);
    String propertyKey = "defaultFont";
    System.out.println (UIManager.getLookAndFeel ().getName () + (defaults.containsKey (propertyKey) ? " contains " : " doesn't contain ") + "property " + propertyKey);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
949353_2576230_8_52
949353_949858_9_28
Title: Java: Altering UI fonts (Nimbus) doesn't work! 
----------------------------------------

public static void main (String [] args) throws InterruptedException, InvocationTargetException {
    SwingUtilities.invokeAndWait (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (new NimbusLookAndFeel () {
                    @Override
                    public UIDefaults getDefaults () {
                        UIDefaults ret = super.getDefaults ();
                        ret.put ("defaultFont", new Font (Font.MONOSPACED, Font.BOLD, 16));
                        return ret;
                    }}

                );
                new JFrame ("Hello") {

                    {
                        setDefaultCloseOperation (EXIT_ON_CLOSE);
                        setLayout (new FlowLayout (FlowLayout.LEFT));
                        setSize (500, 500);
                        setLocationRelativeTo (null);
                        add (new JLabel ("someLabel 1"));
                        add (new JButton ("someButton 1"));
                        add (new JLabel ("someLabel 2"));
                        add (new JButton ("someButton 2"));
                        setVisible (true);
                    }

                }

                ;
            } catch (Exception ex) {
                throw new Error (ex);
            }
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            try {
                UIManager.setLookAndFeel (UIManager.getCrossPlatformLookAndFeelClassName ());
            } catch (Exception e) {
                e.printStackTrace ();
            }
            UIDefaults defaults = UIManager.getLookAndFeel ().getDefaults ();
            System.out.println (defaults);
            String propertyKey = "defaultFont";
            System.out.println (UIManager.getLookAndFeel ().getName () + (defaults.containsKey (propertyKey) ? " contains " : " doesn't contain ") + "property " + propertyKey);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9504569_9504941_14_29
9504569_9504941_46_58
Title: Applet not painting 
----------------------------------------

public void init () {
    try {
        SwingUtilities.invokeAndWait (new Runnable () {
            public void run () {
                GameAppletPanel panel = new GameAppletPanel (GameApplet2.this);
                getContentPane ().add (panel);
                panel.init (APP_WIDTH, APP_HEIGHT);
                setSize (APP_WIDTH, APP_HEIGHT);
            }}

        );
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (InvocationTargetException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void init (int x, int y) {
    setSize (x, y);
    image = createImage (x, y);
    Graphics2D g = (Graphics2D) image.getGraphics ();
    g.setColor (Color.GREEN);
    g.fillRect (0, 0, x, y);
    g.dispose ();
    System.out.println (g + ", " + (g != null));
    MyMouseAdapter mmAdapter = new MyMouseAdapter ();
    addMouseListener (mmAdapter);
    addMouseMotionListener (mmAdapter);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9524191_29088517_15_28
9524191_37809804_1_36
Title: Converting an CSV file to a JSON object in Java 
----------------------------------------

public CSVtoJSON () {
    FileNameExtensionFilter filter = new FileNameExtensionFilter ("comma separated values", "csv");
    JFileChooser choice = new JFileChooser ();
    choice.setFileFilter (filter);
    int option = choice.showOpenDialog (this);
    if (option == JFileChooser.APPROVE_OPTION) {
        CSVFile = choice.getSelectedFile ();
    } else {
        JOptionPane.showMessageDialog (this, "Did not select file. Program will exit.", "System Dialog", JOptionPane.PLAIN_MESSAGE);
        System.exit (1);
    }
}
----------------------------------------

public String CSVtoJSON (String output) {
    String [] lines = output.split ("\n");
    StringBuilder builder = new StringBuilder ();
    builder.append ('[');
    String [] headers = new String [0];
    for (int i = 0;
    i < lines.length; i ++) {
        String [] values = lines [i].replaceAll ("\"", "").split ("۞");
        if (i == 0) {
            headers = values;
        } else {
            builder.append ('{');
            for (int j = 0;
            j < values.length && j < headers.length; j ++) {
                String jsonvalue = "\"" + headers [j] + "\":\"" + values [j] + "\"";
                if (j != values.length - 1) {
                    jsonvalue += ',';
                }
                builder.append (jsonvalue);
            }
            builder.append ('}');
            if (i != lines.length - 1) {
                builder.append (',');
            }
        }
    }
    builder.append (']');
    output = builder.toString ();
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
952614_952751_1_10
952614_952916_1_23
Title: Help on a better way to parses digits from a String in Java 
----------------------------------------

List < String > digitsAsElements (String str) {
    Pattern p = Pattern.compile ("(\\d+|\\w+)*");
    Matcher m = p.matcher (str);
    List < String > output = new ArrayList < String > ();
    for (int i = 1;
    i <= m.groupCount (); i ++) {
        output.add (m.group (i));
    }
    return output;
}
----------------------------------------

static List < String > digitsAsElements (String str) {
    StringBuilder collector = new StringBuilder ();
    List < String > output = new ArrayList < String > ();
    boolean lastWasDigit = false;
    for (int i = 0;
    i < str.length (); i ++) {
        char cChar = str.charAt (i);
        boolean isDigit = Character.isDigit (cChar);
        if (isDigit != lastWasDigit) {
            if (collector.length () > 0) {
                output.add (collector.toString ());
                collector = new StringBuilder ();
            }
            lastWasDigit = isDigit;
        }
        collector.append (cChar);
    }
    if (collector.length () > 0) output.add (collector.toString ());

    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9532662_9532796_57_65
9532662_9535862_88_96
Title: Java JSpinner.DateEditor working with TimeZone March clock change 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new TimeZoneSpinners ().makeUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new JSpinnerProblem ().setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9550022_9550112_34_47
9550022_9550498_60_106
Title: Java Applet : moving polygon using keylistener 
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (e.getKeyCode () == KeyEvent.VK_DOWN) {
        JOptionPane.showMessageDialog (this, "down");
    }
    if (e.getKeyCode () == KeyEvent.VK_UP) {
        JOptionPane.showMessageDialog (this, "up");
    }
    if (e.getKeyCode () == KeyEvent.VK_LEFT) {
        JOptionPane.showMessageDialog (this, "left");
    }
    if (e.getKeyCode () == KeyEvent.VK_RIGHT) {
        JOptionPane.showMessageDialog (this, "right");
    }
}
----------------------------------------

public void keyPressed (KeyEvent e) {
    if (e.getKeyCode () == KeyEvent.VK_DOWN) {
        body_y += 5;
        frontWS_y1 += 5;
        frontWS_y2 += 5;
        frontWS_y3 += 5;
        frontWS_y4 += 5;
    }
    if (e.getKeyCode () == KeyEvent.VK_UP) {
        body_y -= 5;
        frontWS_y1 -= 5;
        frontWS_y2 -= 5;
        frontWS_y3 -= 5;
        frontWS_y4 -= 5;
    }
    if (e.getKeyCode () == KeyEvent.VK_LEFT) {
        body_x -= 5;
        frontWS_x1 -= 5;
        frontWS_x2 -= 5;
        frontWS_x3 -= 5;
        frontWS_x4 -= 5;
    }
    if (e.getKeyCode () == KeyEvent.VK_RIGHT) {
        body_x += 5;
        frontWS_x1 += 5;
        frontWS_x2 += 5;
        frontWS_x3 += 5;
        frontWS_x4 += 5;
    }
    xPoints1 [0] = frontWS_x1;
    xPoints1 [1] = frontWS_x2;
    xPoints1 [2] = frontWS_x3;
    xPoints1 [3] = frontWS_x4;
    yPoints1 [0] = frontWS_y1;
    yPoints1 [1] = frontWS_y2;
    yPoints1 [2] = frontWS_y3;
    yPoints1 [3] = frontWS_y4;
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9550039_9550120_24_80
9550039_9550136_25_41
Title: "How to make a ""do not ask me again"" dialog pop-up box? Android" 
----------------------------------------

public void onClick (View v) {
    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
    boolean dialog_status = prefs.getBoolean ("dialog_status", false);
    if (! dialog_status) {
        View content = getLayoutInflater ().inflate (R.layout.dialog_content, null);
        final CheckBox userCheck = (CheckBox) content.findViewById (R.id.check_box1);
        new AlertDialog.Builder (DoNotShowDialog.this).setTitle ("Warning").setView (content).setPositiveButton ("Ok", new DialogInterface.OnClickListener () {
            public void onClick (DialogInterface dialog, int which) {
                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
                SharedPreferences.Editor editor = prefs.edit ();
                editor.putBoolean ("dialog_status", userCheck.isChecked ());
                editor.commit ();
                dialog.dismiss ();
            }}

        ).setNegativeButton ("Cancel", new DialogInterface.OnClickListener () {
            public void onClick (DialogInterface dialog, int which) {
                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
                SharedPreferences.Editor editor = prefs.edit ();
                editor.putBoolean ("dialog_status", userCheck.isChecked ());
                editor.commit ();
                dialog.dismiss ();
            }}

        ).show ();
    } else {
        Toast.makeText (DoNotShowDialog.this, "The user checked the checkbox so we don't show the dialog any more!", Toast.LENGTH_LONG).show ();
    }
}
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    String checkBoxResult = "NOT checked";
    if (dontShowAgain.isChecked ()) {
        checkBoxResult = "checked";
    }
    SharedPreferences settings = getSharedPreferences (PREFS_NAME, 0);
    SharedPreferences.Editor editor = settings.edit ();
    editor.putString ("skipMessage", checkBoxResult);
    editor.commit ();
    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9550039_9550120_24_80
9550039_9550136_45_61
Title: "How to make a ""do not ask me again"" dialog pop-up box? Android" 
----------------------------------------

public void onClick (View v) {
    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
    boolean dialog_status = prefs.getBoolean ("dialog_status", false);
    if (! dialog_status) {
        View content = getLayoutInflater ().inflate (R.layout.dialog_content, null);
        final CheckBox userCheck = (CheckBox) content.findViewById (R.id.check_box1);
        new AlertDialog.Builder (DoNotShowDialog.this).setTitle ("Warning").setView (content).setPositiveButton ("Ok", new DialogInterface.OnClickListener () {
            public void onClick (DialogInterface dialog, int which) {
                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
                SharedPreferences.Editor editor = prefs.edit ();
                editor.putBoolean ("dialog_status", userCheck.isChecked ());
                editor.commit ();
                dialog.dismiss ();
            }}

        ).setNegativeButton ("Cancel", new DialogInterface.OnClickListener () {
            public void onClick (DialogInterface dialog, int which) {
                SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences (DoNotShowDialog.this);
                SharedPreferences.Editor editor = prefs.edit ();
                editor.putBoolean ("dialog_status", userCheck.isChecked ());
                editor.commit ();
                dialog.dismiss ();
            }}

        ).show ();
    } else {
        Toast.makeText (DoNotShowDialog.this, "The user checked the checkbox so we don't show the dialog any more!", Toast.LENGTH_LONG).show ();
    }
}
----------------------------------------

public void onClick (DialogInterface dialog, int which) {
    String checkBoxResult = "NOT checked";
    if (dontShowAgain.isChecked ()) {
        checkBoxResult = "checked";
    }
    SharedPreferences settings = getSharedPreferences (PREFS_NAME, 0);
    SharedPreferences.Editor editor = settings.edit ();
    editor.putString ("skipMessage", checkBoxResult);
    editor.commit ();
    return;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9550095_9550746_27_37
9550095_9550746_9_21
Title: How to make the same program act like a server and client (using sockets in java) 
----------------------------------------

public void run () {
    try {
        String word;
        while ((word = q.take ()) != FINISHED) {
            System.out.println (word);
        }
    } catch (InterruptedException ex) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------

public void run () {
    String message = "Now is the time for all good men to come to he aid of the party.";
    try {
        for (String word : message.split (" ")) {
            q.put (word);
        }
        q.put (FINISHED);
    } catch (InterruptedException ex) {
        Thread.currentThread ().interrupt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
955110_16018452_54_69
955110_26440076_53_87
Title: Similarity String Comparison in Java 
----------------------------------------

public static void main (String [] args) {
    printSimilarity ("", "");
    printSimilarity ("1234567890", "1");
    printSimilarity ("1234567890", "123");
    printSimilarity ("1234567890", "1234567");
    printSimilarity ("1234567890", "1234567890");
    printSimilarity ("1234567890", "1234567980");
    printSimilarity ("47/2010", "472010");
    printSimilarity ("47/2010", "472011");
    printSimilarity ("47/2010", "AB.CDEF");
    printSimilarity ("47/2010", "4B.CDEFG");
    printSimilarity ("47/2010", "AB.CDEFG");
    printSimilarity ("The quick fox jumped", "The fox jumped");
    printSimilarity ("The quick fox jumped", "The fox");
    printSimilarity ("kitten", "sitting");
}
----------------------------------------

public static void main (String [] args) {
    printDistance ("", "");
    printDistance ("1234567890", "1");
    printDistance ("1234567890", "12");
    printDistance ("1234567890", "123");
    printDistance ("1234567890", "1234");
    printDistance ("1234567890", "12345");
    printDistance ("1234567890", "123456");
    printDistance ("1234567890", "1234567");
    printDistance ("1234567890", "12345678");
    printDistance ("1234567890", "123456789");
    printDistance ("1234567890", "1234567890");
    printDistance ("1234567890", "1234567980");
    printDistance ("47/2010", "472010");
    printDistance ("47/2010", "472011");
    printDistance ("47/2010", "AB.CDEF");
    printDistance ("47/2010", "4B.CDEFG");
    printDistance ("47/2010", "AB.CDEFG");
    printDistance ("The quick fox jumped", "The fox jumped");
    printDistance ("The quick fox jumped", "The fox");
    printDistance ("The quick fox jumped", "The quick fox jumped off the balcany");
    printDistance ("kitten", "sitting");
    printDistance ("rosettacode", "raisethysword");
    printDistance (new StringBuilder ("rosettacode").reverse ().toString (), new StringBuilder ("raisethysword").reverse ().toString ());
    for (int i = 1;
    i < args.length; i += 2) {
        printDistance (args [i - 1], args [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9575070_27376273_1_60
9575070_29551616_1_22
Title: Completely stumped on a multiple loop Java program 
----------------------------------------

public int [] fix34 (int [] nums) {
    int [] arr = new int [nums.length];
    int index = 0;
    int tempVal = 0, j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            arr [i] = nums [i];
            index = i + 1;
            tempVal = nums [i + 1];
            j = index;
            while (j < nums.length) {
                if (j < nums.length && nums [j] == 4) {
                    nums [j] = tempVal;
                    nums [index] = 4;
                    break;
                }
                j ++;
            }
            tempVal = 0;
            index = 0;
        } else {
            arr [i] = nums [i];
        }
    }
    index = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3 && nums [i + 1] == 4) {
            i += 1;
        } else if (nums [i] == 4) {
            index = i;
            j = index;
            while (j < nums.length) {
                if (nums [j] == 3 && nums [j + 1] != 4) {
                    arr [index] = nums [j + 1];
                    arr [j + 1] = 4;
                }
                j ++;
            }
        }

    }
    return arr;
}
----------------------------------------

public int [] fix34 (int [] nums) {
    int index1 = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only4 = fours (nums);
    int [] misc = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 3) {
            misc [index1] = nums [a + 1];
            index1 ++;
            nums [a + 1] = only4 [index2];
            index2 ++;
        }
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 4 && nums [b - 1] != 3) {
            nums [b] = misc [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9575070_27376273_1_60
9575070_41405297_1_30
Title: Completely stumped on a multiple loop Java program 
----------------------------------------

public int [] fix34 (int [] nums) {
    int [] arr = new int [nums.length];
    int index = 0;
    int tempVal = 0, j = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3) {
            arr [i] = nums [i];
            index = i + 1;
            tempVal = nums [i + 1];
            j = index;
            while (j < nums.length) {
                if (j < nums.length && nums [j] == 4) {
                    nums [j] = tempVal;
                    nums [index] = 4;
                    break;
                }
                j ++;
            }
            tempVal = 0;
            index = 0;
        } else {
            arr [i] = nums [i];
        }
    }
    index = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 3 && nums [i + 1] == 4) {
            i += 1;
        } else if (nums [i] == 4) {
            index = i;
            j = index;
            while (j < nums.length) {
                if (nums [j] == 3 && nums [j + 1] != 4) {
                    arr [index] = nums [j + 1];
                    arr [j + 1] = 4;
                }
                j ++;
            }
        }

    }
    return arr;
}
----------------------------------------

public int [] fix34 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > threePositions = new ArrayList < Integer > ();
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 3) {
            threePositions.add (i);
        }
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
    }
    for (int i = 0;
    i < threePositions.size (); i ++) {
        int temp = ret [threePositions.get (i) + 1];
        ret [threePositions.get (i) + 1] = ret [fourPositions.get (i)];
        ret [fourPositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9575070_29551616_1_22
9575070_41405297_1_30
Title: Completely stumped on a multiple loop Java program 
----------------------------------------

public int [] fix34 (int [] nums) {
    int index1 = 0;
    int index2 = 0;
    int index3 = 0;
    int [] only4 = fours (nums);
    int [] misc = new int [count4 (nums)];
    for (int a = 0;
    a < nums.length - 1; a ++) {
        if (nums [a] == 3) {
            misc [index1] = nums [a + 1];
            index1 ++;
            nums [a + 1] = only4 [index2];
            index2 ++;
        }
    }
    for (int b = 1;
    b < nums.length; b ++) {
        if (nums [b] == 4 && nums [b - 1] != 3) {
            nums [b] = misc [index3];
            index3 ++;
        }
    }
    return nums;
}
----------------------------------------

public int [] fix34 (int [] nums) {
    int [] ret = nums;
    ArrayList < Integer > threePositions = new ArrayList < Integer > ();
    ArrayList < Integer > fourPositions = new ArrayList < Integer > ();
    for (int i = 0;
    i < ret.length; i ++) {
        if (ret [i] == 3) {
            threePositions.add (i);
        }
        if (ret [i] == 4) {
            fourPositions.add (i);
        }
    }
    for (int i = 0;
    i < threePositions.size (); i ++) {
        int temp = ret [threePositions.get (i) + 1];
        ret [threePositions.get (i) + 1] = ret [fourPositions.get (i)];
        ret [fourPositions.get (i)] = temp;
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9595343_15550895_4_40
9595343_35679315_25_53
Title: Simplify the radical in the quadratic formula? 
----------------------------------------

public static void main (String [] args) {
    double a, b, c;
    Scanner takea = new Scanner (System.in);
    System.out.println ("Enter variable a");
    double inputa = takea.nextDouble ();
    Scanner takeb = new Scanner (System.in);
    System.out.println ("Enter variable b");
    double inputb = takeb.nextDouble ();
    Scanner takec = new Scanner (System.in);
    System.out.println ("Enter variable c");
    double inputc = takec.nextDouble ();
    a = inputa;
    b = inputb;
    c = inputc;
    double rootone, roottwo;
    double discriminant;
    double thefirstpart, thesecondpart;
    thefirstpart = Math.pow (b, 2);
    thesecondpart = 4 * a * c;
    discriminant = Math.sqrt (thefirstpart - thesecondpart);
    rootone = (- (b) + discriminant) / (2 * (a));
    roottwo = (- (b) - discriminant) / (2 * (a));
    System.out.println ("The first root (+) is: " + rootone);
    System.out.println ("The second root(-) is: " + roottwo);
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    System.out.println ("a =");
    double a = scan.nextDouble ();
    System.out.println ("b =");
    double b = scan.nextDouble ();
    System.out.println ("c =");
    double c = scan.nextDouble ();
    double d = Math.pow (b, 2) - (4 * a * c);
    if (d < 0) {
        d *= - 1;
        System.out.println ("Your roots are " + - b + " +- " + sqFactor (d) + "i sqrt" + d / sqFactor (d));
    } else {
        double root1 = (- b + Math.sqrt (d)) / (2 * a);
        double root2 = (- b - Math.sqrt (d)) / (2 * a);
        System.out.println ("Your first root value is " + root1);
        System.out.println ("Your second root value is " + root2);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9597324_9597388_64_81
9597324_9597388_95_122
Title: Unable to view LastItem In JscrollPane 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    int index = list.getSelectedIndex ();
    listModel.remove (index);
    int size = listModel.getSize ();
    if (size == 0) {
        fireButton.setEnabled (false);
    } else {
        if (index == listModel.getSize ()) {
            index --;
        }
        list.setSelectedIndex (index);
        list.ensureIndexIsVisible (index);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    String name = employeeName.getText ();
    if (name.equals ("") || alreadyInList (name)) {
        Toolkit.getDefaultToolkit ().beep ();
        employeeName.requestFocusInWindow ();
        employeeName.selectAll ();
        return;
    }
    int index = list.getSelectedIndex ();
    if (index == - 1) {
        index = 0;
    } else {
        index ++;
    }
    listModel.insertElementAt (employeeName.getText (), index);
    employeeName.requestFocusInWindow ();
    employeeName.setText ("");
    list.setSelectedIndex (index);
    list.ensureIndexIsVisible (index);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9599649_9599758_1_10
9599649_9599772_1_12
Title: Finding the maximum out of three doubles from standard input 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double [] entered = new double [3];
    System.out.println ("Enter 3 values to find the maximum:");
    for (int i = 0;
    i < 3; i ++) {
        entered [i] = input.nextDouble ();
    }
    System.out.println ("Maximum is - " + getMaxValue (entered));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    double [] entered = new double [3];
    int counter = 0;
    while (counter != 3) {
        System.out.println ("Enter a double value:");
        entered [counter ++] = input.nextDouble ();
    }
    System.out.println ("Maximum is - " + getMaxValue (entered));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9599664_9600917_121_138
9599664_9600917_49_72
Title: Radio button issue 
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    JButton button = (JButton) ae.getSource ();
    if ((button.getText ()).equals ("X")) {
        randomRowLimit = random.nextInt (size);
        randomColumnLimit = random.nextInt (size);
        System.out.println ("Row : " + randomRowLimit);
        System.out.println ("Column : " + randomColumnLimit);
        button.setText ("");
        this.button [randomRowLimit] [randomColumnLimit].setText ("X");
    } else {
        JOptionPane.showMessageDialog (this, "Please Click on X Mark to follow it.", "Small Game : ", JOptionPane.ERROR_MESSAGE);
    }
}
----------------------------------------

public void actionPerformed (ActionEvent ae) {
    if (ae.getSource () == threeSquareButton) {
        remove (bottomPanel);
        bottomPanel = getCenterPanel (3);
        add (bottomPanel, BorderLayout.CENTER);
    } else if (ae.getSource () == fourSquareButton) {
        remove (bottomPanel);
        bottomPanel = getCenterPanel (4);
        add (bottomPanel, BorderLayout.CENTER);
    } else if (ae.getSource () == fiveSquareButton) {
        remove (bottomPanel);
        bottomPanel = getCenterPanel (5);
        add (bottomPanel, BorderLayout.CENTER);
    }

    revalidate ();
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9608165_9608321_1_27
9608165_9608816_6_30
Title: Checking string formats in Java? 
----------------------------------------

public static void main (String [] args) {
    String name = "";
    boolean ok = false;
    Scanner key = new Scanner (System.in);
    while (! ok) {
        System.out.print ("Enter your name as 'First Middle Last': ");
        name = key.nextLine ();
        try {
            if (name.split (" ").length == 3) ok = true;

        } catch (Exception e) {
        }
    }
    if (ok) {
        String firstName = name.substring (0, name.indexOf (" "));
        String middleName = name.substring (firstName.length () + 1, name.lastIndexOf (" "));
        String surname = name.substring (middleName.length () + firstName.length () + 2, name.length ());
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean found = false;
    do {
        Scanner scanner = new Scanner (System.in);
        System.out.print ("Enter your name as 'First Middle Last': ");
        Pattern p = Pattern.compile ("\\s*(\\w+?)\\s(\\w+?)\\s(\\w+)+\\s*");
        Matcher m = p.matcher (scanner.nextLine ());
        found = m.find ();
        if (found) {
            String first = m.group (1);
            String middle = m.group (2);
            String last = m.group (3);
            String revised = properCase (first) + " " + properCase (middle) + " " + properCase (last);
            System.out.println (revised);
            System.out.printf ("%s %s %s.\n", properCase (last), properCase (first), middle.substring (0, 1).toUpperCase ());
        }
    } while (! found);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9610806_9610845_1_11
9610806_9611048_1_14
Title: DFS tree traversal function modification 
----------------------------------------

protected boolean DFS (String anaphorKey) {
    for (Tree < T > child : leafs) {
        if (child.head.equals (anaphorKey)) return true;

        if (child.DFS (anaphorKey)) return true;

        System.out.println (child.head);
    }
    return false;
}
----------------------------------------

protected boolean DFS (String key) {
    boolean found = false;
    for (int i = 0;
    i < leafs.size () && ! found; i ++) {
        Tree < T > child = leafs.get (i);
        if (child.head.equals (key)) found = true;
        else found = child.DFS (key);

    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9615398_9615546_1_72
9615398_9615886_4_55
Title: Loop Statement Logic 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int attempt = 2;
    int answer = 24;
    long phoneNumber = 0;
    String firstName = "";
    String lastName = "";
    String wordOfTheDay = "";
    System.out.printf ("Enter the word of the day:  ");
    wordOfTheDay = input.nextLine ();
    do {
        if (wordOfTheDay.equals ("tired")) {
            for (attempt = 2; attempt >= 0; -- attempt) {
                System.out.print (" 3 * 8 = ");
                answer = input.nextInt ();
                input.nextLine ();
                if (answer == 24) {
                    System.out.printf ("Please enter your first name, last name, and phone number (no dashes or spaces)\n" + "in a drawing for an all-expenses-paid vacation in the Bahamas: ");
                    firstName = input.next ();
                    lastName = input.next ();
                    phoneNumber = input.nextLong ();
                    System.out.printf ("Thank you %s %s. We'll call you at %d if you're a winner.", firstName, lastName, + phoneNumber);
                } else if (answer != 24) {
                    if (attempt != 0) {
                        System.out.printf ("Invalid! Try Again! %d attempt(s) left!\n ", attempt);
                        continue;
                    } else {
                        System.out.print ("Sorry!  You have no more attempts left!");
                    }
                }

            }
        } else {
            System.out.printf ("Invalid! Try Again! %d attempt(s) left!\n ", attempt);
            System.out.printf ("Enter the word of the day:  ");
            wordOfTheDay = input.nextLine ();
            if (! wordOfTheDay.equals ("tired")) -- attempt;

        }
    } while (attempt >= 1);
    if (attempt == 0) {
        System.out.print ("Sorry!  You have no more attempts left!");
    }
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int answer = 0;
    long phoneNumber = 0;
    String firstName = "";
    String lastName = "";
    String wordOfTheDay = "";
    int mainMenuAttempt = 3;
    do {
        System.out.printf ("Enter the word of the day:  ");
        wordOfTheDay = input.nextLine ();
        if (wordOfTheDay.equals ("tired")) {
            int answerAttempt = 3;
            do {
                System.out.print (" 3 * 8 = ");
                answer = input.nextInt ();
                input.nextLine ();
                answerAttempt --;
                if (answer != 24 && answerAttempt > 0) System.out.printf ("Invalid! Try Again! %d attempt(s) left!\n ", answerAttempt);

            } while (answerAttempt > 0 && answerAttempt < 3 && answer != 24);
            if (answer == 24) {
                System.out.printf ("Please enter your first name, last name, and phone number (no dashes or spaces)\n" + "in a drawing for an all-expenses-paid vacation in the Bahamas: ");
                firstName = input.next ();
                lastName = input.next ();
                phoneNumber = input.nextLong ();
                System.out.printf ("Thank you %s %s. We'll call you at %d if you're a winner.", firstName, lastName, + phoneNumber);
            }
        }
        mainMenuAttempt --;
    } while (mainMenuAttempt > 0 && mainMenuAttempt < 3 && ! wordOfTheDay.equals ("tired") && answer != 24);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9625663_28943952_2_21
9625663_36823959_7_30
Title: Calculating and printing the nth prime number 
----------------------------------------

public static void main (String ar []) {
    int count;
    int no = 0;
    for (int i = 0;
    i < 1000; i ++) {
        count = 0;
        for (int j = 1;
        j <= i; j ++) {
            if (i % j == 0) {
                count ++;
            }
        }
        if (count == 2) {
            no ++;
            if (no == Integer.parseInt (ar [0])) {
                System.out.println (no + "\t" + i + "\t");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int n, i = 2, x = 2;
    System.out.printf ("This program calculates the nth Prime number\n");
    System.out.printf ("Please enter the nth prime number you want to find:");
    n = input.nextInt ();
    for (i = 2, x = 2; n > 0; i ++) {
        for (x = 2; x < i; x ++) {
            if (i % x == 0) {
                break;
            }
        }
        if (x == i) {
            n --;
        }
    }
    System.out.printf ("\n%d is prime", x);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9655753_14781761_3_16
9655753_42273827_1_13
Title: how to count the spaces in a java string? 
----------------------------------------

public static void main (String [] args) {
    String word = "S N PRASAD RAO";
    String data [];
    int k = 0;
    data = word.split ("");
    for (int i = 0;
    i < data.length; i ++) {
        if (data [i].equals (" ")) {
            k ++;
        }
    }
    System.out.println (k);
}
----------------------------------------

public static void main (String [] args) {
    String str = "Honey   dfd    tEch Solution";
    String [] arr = str.split (" ");
    System.out.println (arr.length);
    int count = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (! arr [i].trim ().isEmpty ()) {
            System.out.println (arr [i]);
            count ++;
        }
    }
    System.out.println (count);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9659906_9660937_29_38
9659906_9660937_5_26
Title: CodeSprint 2's Complement challenge running too slowly 
----------------------------------------

public static long totalBits (int a, int b) {
    if (b < a) throw new IllegalArgumentException ("Invalid range");

    if (a == b) return popCount (a);

    if (b == 0) return totalBits (a);

    if (b < 0) return totalBits (a) - totalBits (b + 1);

    if (a == 0) return totalBits (b);

    if (a > 0) return totalBits (b) - totalBits (a - 1);

    return totalBits (a) + totalBits (b);
}
----------------------------------------

public static long totalBits (int n) {
    if (n < 0) {
        long a = - (long) n;
        return (a * 32 - totalBits ((int) (a - 1)));
    }
    if (n < 3) return n;

    int lg = 0, mask = n;
    while (mask > 1) {
        ++ lg;
        mask>>= 1;
    }
    mask = 1 << lg;
    long total = 1L << lg - 1;
    total *= lg;
    total += n + 1 - mask;
    total += totalBits (n - mask);
    return total;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9683293_9683508_10_29
9683293_9683509_6_18
Title: List of subsets of which their elements add up to n using recursion 
----------------------------------------

public static void printSublists (List < Integer > numbers, List < Integer > sublist, int n, boolean walkRight, int level) {
    if (sum (sublist) == n) System.out.println (sublist);

    if (sublist.size () == 1) return;

    if (walkRight) printSublists (numbers, sublist.subList (0, sublist.size () - 1), n, walkRight, level + 1);

    walkRight = false;
    printSublists (numbers, sublist.subList (1, sublist.size ()), n, walkRight, level + 1);
}
----------------------------------------

private void printSublists (Set < Integer > numbers, Set < Integer > subList, int expected) {
    for (Integer element : numbers) {
        subList.add (element);
        if (sum (subList) == expected) {
            System.out.println ("result =" + subList);
        }
        Set < Integer > listWithoutElement = withoutElement (numbers, element);
        printSublists (listWithoutElement, subList, expected);
        subList.remove (element);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9683293_9683508_10_29
9683293_9683893_1_16
Title: List of subsets of which their elements add up to n using recursion 
----------------------------------------

public static void printSublists (List < Integer > numbers, List < Integer > sublist, int n, boolean walkRight, int level) {
    if (sum (sublist) == n) System.out.println (sublist);

    if (sublist.size () == 1) return;

    if (walkRight) printSublists (numbers, sublist.subList (0, sublist.size () - 1), n, walkRight, level + 1);

    walkRight = false;
    printSublists (numbers, sublist.subList (1, sublist.size ()), n, walkRight, level + 1);
}
----------------------------------------

public static void printSublists (ArrayList numbers, ArrayList sublist, int n, int i) {
    if (sublist.sum () == n) {
        System.out.println (sublist.toString ());
        sublist.removeAll (sublist);
    } else {
        while (i < number.size ()) {
            sublist.add (numbers.get (i));
            printSublists (numbers, sublist, n, ++ i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9683293_9683509_6_18
9683293_9683893_1_16
Title: List of subsets of which their elements add up to n using recursion 
----------------------------------------

private void printSublists (Set < Integer > numbers, Set < Integer > subList, int expected) {
    for (Integer element : numbers) {
        subList.add (element);
        if (sum (subList) == expected) {
            System.out.println ("result =" + subList);
        }
        Set < Integer > listWithoutElement = withoutElement (numbers, element);
        printSublists (listWithoutElement, subList, expected);
        subList.remove (element);
    }
}
----------------------------------------

public static void printSublists (ArrayList numbers, ArrayList sublist, int n, int i) {
    if (sublist.sum () == n) {
        System.out.println (sublist.toString ());
        sublist.removeAll (sublist);
    } else {
        while (i < number.size ()) {
            sublist.add (numbers.get (i));
            printSublists (numbers, sublist, n, ++ i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9690120_9690326_1_12
9690120_9697399_1_17
Title: jframe actionperformed jframe 
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    button.setEnabled (false);
    imgFrame.addWindowListener (new WindowAdapter () {
        @Override
        public void windowClosing (WindowEvent evt) {
            button.setEnabled (true);
        }}

    );
    imgFrame.setVisible (true);
}
----------------------------------------

public void actionPerformed (ActionEvent evt) {
    final JButton finalButton = button;
    button.setEnabled (false);
    JFrame frame = new JFrame () {
        protected void processWindowEvent (WindowEvent e) {
            if (e.getID () == WindowEvent.WINDOW_CLOSING) {
                finalButton.setEnabled (true);
            }
            super.processWindowEvent (e);
        }}

    ;
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9695833_9702882_13_44
9695833_9708004_24_58
Title: Java refreshing second form 
----------------------------------------

private void createAndDisplayGUI () {
    ButtonPanel bp = new ButtonPanel ();
    JFrame frame = new JFrame ("JSlider Example : ");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLocationByPlatform (true);
    JPanel contentPane = new JPanel ();
    slider = new JSlider (JSlider.HORIZONTAL, MIN_BUTTONS, MAX_BUTTONS, SOME_BUTTONS);
    slider.addChangeListener (new ChangeListener () {
        public void stateChanged (ChangeEvent ce) {
            int value = (int) slider.getValue ();
            ButtonPanel.panel.removeAll ();
            for (int i = 0;
            i < value; i ++) {
                ButtonPanel.panel.add (new JButton ("JButton " + i));
            }
            ButtonPanel.panel.revalidate ();
            ButtonPanel.panel.repaint ();
        }}

    );
    contentPane.add (slider);
    frame.getContentPane ().add (contentPane);
    frame.pack ();
    frame.setVisible (true);
    frame.requestFocusInWindow ();
}
----------------------------------------

private void createAndDisplayGUI () {
    ButtonPanel bp = new ButtonPanel ();
    JFrame frame = new JFrame ("JSlider Example : ");
    frame.setDefaultCloseOperation (JFrame.HIDE_ON_CLOSE);
    frame.setLocationByPlatform (true);
    JPanel contentPane = new JPanel ();
    slider = new JSlider (JSlider.HORIZONTAL, MIN_BUTTONS, MAX_BUTTONS, SOME_BUTTONS);
    slider.addChangeListener (new ChangeListener () {
        public void stateChanged (ChangeEvent ce) {
            int value = (int) slider.getValue ();
            ButtonPanel.panel.removeAll ();
            buttonArray = new JButton [value];
            for (int i = 0;
            i < value; i ++) {
                buttonArray [i] = new JButton (String.valueOf (i));
                buttonArray [i].addActionListener (actionButton);
                ButtonPanel.panel.add (buttonArray [i]);
            }
            ButtonPanel.panel.revalidate ();
            ButtonPanel.panel.repaint ();
        }}

    );
    contentPane.add (slider);
    frame.getContentPane ().add (contentPane);
    frame.pack ();
    frame.setVisible (true);
    frame.requestFocusInWindow ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9695833_9702882_25_35
9695833_9708004_36_49
Title: Java refreshing second form 
----------------------------------------

public void stateChanged (ChangeEvent ce) {
    int value = (int) slider.getValue ();
    ButtonPanel.panel.removeAll ();
    for (int i = 0;
    i < value; i ++) {
        ButtonPanel.panel.add (new JButton ("JButton " + i));
    }
    ButtonPanel.panel.revalidate ();
    ButtonPanel.panel.repaint ();
}
----------------------------------------

public void stateChanged (ChangeEvent ce) {
    int value = (int) slider.getValue ();
    ButtonPanel.panel.removeAll ();
    buttonArray = new JButton [value];
    for (int i = 0;
    i < value; i ++) {
        buttonArray [i] = new JButton (String.valueOf (i));
        buttonArray [i].addActionListener (actionButton);
        ButtonPanel.panel.add (buttonArray [i]);
    }
    ButtonPanel.panel.revalidate ();
    ButtonPanel.panel.repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9695833_9702882_46_56
9695833_9708004_60_70
Title: Java refreshing second form 
----------------------------------------

public static void main (String...args) {
    Runnable runnable = new Runnable () {
        public void run () {
            new SliderExample ().createAndDisplayGUI ();
        }}

    ;
    SwingUtilities.invokeLater (runnable);
}
----------------------------------------

public static void main (String...args) {
    Runnable runnable = new Runnable () {
        public void run () {
            new SliderExample ().createAndDisplayGUI ();
        }}

    ;
    SwingUtilities.invokeLater (runnable);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9695833_9702882_63_73
9695833_9708004_77_87
Title: Java refreshing second form 
----------------------------------------

public ButtonPanel () {
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setLocationByPlatform (true);
    panel = new JPanel ();
    panel.setLayout (new GridLayout (0, 2));
    getContentPane ().add (panel);
    setSize (300, 300);
    setVisible (true);
}
----------------------------------------

public ButtonPanel () {
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setLocationByPlatform (true);
    panel = new JPanel ();
    panel.setLayout (new GridLayout (0, 2));
    getContentPane ().add (panel);
    setSize (300, 300);
    setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9703165_20756223_7_19
9703165_27987217_1_16
Title: Palindrome product output for Project Euler 4 
----------------------------------------

public static void main (final String [] args) {
    int polindrome = 0;
    for (int i = 999;
    i > 1; i --) {
        for (int j = 999;
        j > 1; j --) {
            polindrome = i * j;
            if (isPolindrome (polindrome)) {
                polindromes.add (polindrome);
            }
        }
    }
    Collections.sort (polindromes);
    System.out.println (polindromes.get (polindromes.size () - 1));
}
----------------------------------------

public static void main (String [] args) {
    long result = 0;
    List < Long > palindrome = new ArrayList < Long > ();
    for (int i = 0;
    i < 1000; i ++) {
        for (int j = 0;
        j < 1000; j ++) {
            result = i * j;
            if (isPallindrome (result)) {
                palindrome.add (result);
            }
        }
    }
    long i = Collections.max (palindrome);
    System.out.println (i);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9725311_9725980_53_75
9725311_9725980_9_34
Title: How to override windowsClosing event in JFrame 
----------------------------------------

public void createAndDisplayGUI () {
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setLocationByPlatform (true);
    JPanel contentPane = new JPanel ();
    tfield = new JTextField (10);
    windowAdapter = new WindowAdapter () {
        public void windowClosing (WindowEvent we) {
            setDefaultCloseOperation (JFrame.HIDE_ON_CLOSE);
        }}

    ;
    addWindowListener (windowAdapter);
    contentPane.add (tfield);
    getContentPane ().add (contentPane);
    setSize (300, 300);
}
----------------------------------------

private void createAndDisplayGUI () {
    JFrame frame = new JFrame ("JFRAME 1");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setLocationByPlatform (true);
    secondFrame = new SecondFrame ();
    secondFrame.createAndDisplayGUI ();
    secondFrame.tfield.setText ("I will be same everytime.");
    JPanel contentPane = new JPanel ();
    JButton showButton = new JButton ("SHOW JFRAME 2");
    showButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            if (! (secondFrame.isShowing ())) secondFrame.setVisible (true);

        }}

    );
    frame.add (contentPane, BorderLayout.CENTER);
    frame.add (showButton, BorderLayout.PAGE_END);
    frame.setSize (200, 200);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9732167_9732324_25_57
9732167_9732408_30_44
Title: How to stop and resume a Thread in a safe way in Java? 
----------------------------------------

public void run () {
    while (running) {
        if (paused) {
            synchronized (lock) {
                try {
                    while (paused) {
                        lock.wait ();
                    }
                } catch (InterruptedException e) {
                }
            }
        } else {
            try {
                Thread.sleep (500);
            } catch (InterruptedException e) {
            }
            System.out.println ("Beat");
        }
    }
}
----------------------------------------

@Override
public void run () {
    while (isKeepHeartBeat ()) {
        System.out.println ("beating");
        try {
            Thread.sleep (this.heartBeatInterval);
            semaphore.acquire ();
            semaphore.release ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9741001_9775026_121_146
9741001_9775026_42_71
Title: CardLayout issue 
----------------------------------------

public void createAndDisplayGUI () {
    topPanel = new JPanel ();
    JLabel userLabel = new JLabel ("USERNAME : ", JLabel.CENTER);
    JTextField userField = new JTextField (20);
    topPanel.add (userLabel);
    topPanel.add (userField);
    middlePanel = new JPanel ();
    JLabel passLabel = new JLabel ("PASSWORD : ", JLabel.CENTER);
    JTextField passField = new JTextField (20);
    middlePanel.add (passLabel);
    middlePanel.add (passField);
    bottomPanel = new JPanel ();
    JButton loginButton = new JButton ("LGOIN");
    bottomPanel.add (loginButton);
    setLayout (new BoxLayout (this, BoxLayout.Y_AXIS));
    add (topPanel);
    add (middlePanel);
    add (bottomPanel);
}
----------------------------------------

private void createAndDisplayGUI () {
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setLocationByPlatform (true);
    centerPanel = new JPanel ();
    centerPanel.setLayout (new CardLayout ());
    lw = new LoginWindow ();
    lw.createAndDisplayGUI ();
    centerPanel.add (lw, cardNames [0]);
    tfc = new TextFieldCreation ();
    tfc.createAndDisplayGUI ();
    centerPanel.add (tfc, cardNames [1]);
    JPanel bottomPanel = new JPanel ();
    removeButton = new JButton ("REMOVE");
    nextButton = new JButton ("NEXT");
    removeButton.addActionListener (actionListener);
    nextButton.addActionListener (actionListener);
    bottomPanel.add (removeButton);
    bottomPanel.add (nextButton);
    add (centerPanel, BorderLayout.CENTER);
    add (bottomPanel, BorderLayout.PAGE_END);
    pack ();
    setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9741001_9775026_121_146
9741001_9775026_90_112
Title: CardLayout issue 
----------------------------------------

public void createAndDisplayGUI () {
    topPanel = new JPanel ();
    JLabel userLabel = new JLabel ("USERNAME : ", JLabel.CENTER);
    JTextField userField = new JTextField (20);
    topPanel.add (userLabel);
    topPanel.add (userField);
    middlePanel = new JPanel ();
    JLabel passLabel = new JLabel ("PASSWORD : ", JLabel.CENTER);
    JTextField passField = new JTextField (20);
    middlePanel.add (passLabel);
    middlePanel.add (passField);
    bottomPanel = new JPanel ();
    JButton loginButton = new JButton ("LGOIN");
    bottomPanel.add (loginButton);
    setLayout (new BoxLayout (this, BoxLayout.Y_AXIS));
    add (topPanel);
    add (middlePanel);
    add (bottomPanel);
}
----------------------------------------

public void createAndDisplayGUI () {
    final JPanel topPanel = new JPanel ();
    topPanel.setLayout (new GridLayout (0, 2));
    createButton = new JButton ("CREATE TEXTFIELD");
    createButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            JTextField tfield = new JTextField ();
            tfield.setActionCommand ("JTextField" + count);
            topPanel.add (tfield);
            topPanel.revalidate ();
            topPanel.repaint ();
        }}

    );
    setLayout (new BorderLayout (5, 5));
    add (topPanel, BorderLayout.CENTER);
    add (createButton, BorderLayout.PAGE_END);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9741001_9775026_42_71
9741001_9775026_90_112
Title: CardLayout issue 
----------------------------------------

private void createAndDisplayGUI () {
    setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    setLocationByPlatform (true);
    centerPanel = new JPanel ();
    centerPanel.setLayout (new CardLayout ());
    lw = new LoginWindow ();
    lw.createAndDisplayGUI ();
    centerPanel.add (lw, cardNames [0]);
    tfc = new TextFieldCreation ();
    tfc.createAndDisplayGUI ();
    centerPanel.add (tfc, cardNames [1]);
    JPanel bottomPanel = new JPanel ();
    removeButton = new JButton ("REMOVE");
    nextButton = new JButton ("NEXT");
    removeButton.addActionListener (actionListener);
    nextButton.addActionListener (actionListener);
    bottomPanel.add (removeButton);
    bottomPanel.add (nextButton);
    add (centerPanel, BorderLayout.CENTER);
    add (bottomPanel, BorderLayout.PAGE_END);
    pack ();
    setVisible (true);
}
----------------------------------------

public void createAndDisplayGUI () {
    final JPanel topPanel = new JPanel ();
    topPanel.setLayout (new GridLayout (0, 2));
    createButton = new JButton ("CREATE TEXTFIELD");
    createButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent ae) {
            JTextField tfield = new JTextField ();
            tfield.setActionCommand ("JTextField" + count);
            topPanel.add (tfield);
            topPanel.revalidate ();
            topPanel.repaint ();
        }}

    );
    setLayout (new BorderLayout (5, 5));
    add (topPanel, BorderLayout.CENTER);
    add (createButton, BorderLayout.PAGE_END);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9747693_43199322_7_22
9747693_9747900_5_22
Title: Capitalizing the first character of a string - Java 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner input = new Scanner (System.in);
    String word = input.next ();
    StringBuilder wordTemp = new StringBuilder (word);
    char firstCharacter = wordTemp.charAt (0);
    if (firstCharacter >= 97 && firstCharacter <= 122) {
        firstCharacter -= 32;
        wordTemp.setCharAt (0, firstCharacter);
    }
    System.out.println (wordTemp.toString ());
}
----------------------------------------

public static void main (String [] args) throws IOException {
    int a1, a2;
    char ch1, ch2;
    String str;
    StringBuilder sb = null;
    DataInputStream in = new DataInputStream (System.in);
    str = in.readLine ();
    ch1 = str.charAt (0);
    sb = new StringBuilder (str);
    a1 = ch1;
    if (a1 >= 97 || a1 <= 122) {
        a2 = a1 - 97;
        ch2 = (char) (65 + a2);
        sb.setCharAt (0, ch2);
        System.out.println (sb.toString ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9748710_27083610_58_71
9748710_9753551_28_36
Title: How to pause/resume all threads in an ExecutorService in Java? 
----------------------------------------

protected void beforeExecute (Thread t, Runnable r) {
    pauseLock.lock ();
    try {
        while (isPaused) unpaused.await ();

    } catch (InterruptedException ie) {
        t.interrupt ();
    } finally {
        pauseLock.unlock ();
    }
    activeTasksLatch.countUp ();
    super.beforeExecute (t, r);
}
----------------------------------------

protected void beforeExecute (Thread t, Runnable r) {
    super.beforeExecute (t, r);
    monitor.enterWhenUninterruptibly (notPaused);
    try {
        monitor.waitForUninterruptibly (notPaused);
    } finally {
        monitor.leave ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9750397_9750433_3_13
9750397_9754440_25_37
Title: "runOnUiThread changing TextView" 
----------------------------------------

public void run () {
    String time = DateUtils.now ("hh:mm:ss'T'a");
    String [] arrValues = time.split ("T");
    if (arrValues.length > 0) {
        String strValue = arrValues [0];
        String [] arrTimeValues = strValue.split (":");
        String strValue1 = arrTimeValues [2];
        setTimertext (strValue1);
    }
}
----------------------------------------

public void run () {
    while (true) {
        updateTime ();
        try {
            Thread.sleep (1000);
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
9756640_9756778_30_43
9756640_9756799_1_16
Title: How would you write a method that takes 2 String array and sort the elements in the array by how long each element is? 
----------------------------------------

private static String [] sort (String [] arr) {
    if (arr.length <= 1) return arr;

    String [] left = Arrays.copyOfRange (arr, 0, arr.length / 2);
    String [] right = Arrays.copyOfRange (arr, arr.length / 2, arr.length);
    left = sort (left);
    right = sort (right);
    String [] combined = merge (left, right);
    return combined;
}
----------------------------------------

public void sort (String [] one, String [] two) {
    String [] merged_array = ArrayUtils.addAll (one, two);
    Comparator < String > ignorCase_comparatore = new Comparator < String > () {
        @Override
        public int compare (String o1, String o2) {
            return o1.compareToIgnoreCase (o2);
        }}

    ;
    Arrays.sort (merged_array, ignorCase_comparatore);
}
----------------------------------------
