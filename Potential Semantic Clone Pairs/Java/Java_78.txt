$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33067801_33067913_1_12
33067801_33067919_1_12
Title: java.lang.NullPointerException form user input 
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    char choice = input.findInLine (".").charAt (0);
    while (choice != 'x' && choice != 'o') {
        System.out.println ("You must enter x or o!");
        choice = input.next ().charAt (0);
    }
    return choice;
}
----------------------------------------

char wf () {
    Scanner input = new Scanner (System.in);
    System.out.println ("What is your choice? (x/o)");
    if (input.findInLine (".") != null) {
        choice = input.findInLine (".").charAt (0);
        while (choice != 'x' && choice != 'o') {
            System.out.println ("You must enter x or o!");
            choice = input.findInLine (".").charAt (0);
        }
    }
    return choice;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33072506_33073547_9_49
33072506_33074185_42_67
Title: JavaFX saving extended class variables 
----------------------------------------

public static void main (String [] args) {
    BaseClass base = new BaseClass ();
    base.var1 = 1;
    base.var2 = 2;
    base.var3 = 3;
    String baseXml = marshal (base);
    Class1 class1 = new Class1 ();
    class1.var1 = 1;
    class1.var2 = 2;
    class1.var3 = 3;
    class1.varX = 10;
    class1.varY = 20;
    String class1Xml = marshal (class1);
    Class2 class2 = new Class2 ();
    class2.var1 = 1;
    class2.var2 = 2;
    class2.var3 = 3;
    class2.varA = 40;
    class2.varB = 50;
    String class2Xml = marshal (class2);
    unmarshal (baseXml);
    unmarshal (class1Xml);
    unmarshal (class2Xml);
    System.exit (0);
}
----------------------------------------

public static void main (String [] args) throws Exception {
    BaseClass base = new BaseClass ();
    base.var1 = 1;
    base.var2 = 2;
    base.var3 = 3;
    log (base);
    Class1 class1 = new Class1 ();
    class1.var1 = 4;
    class1.var2 = 5;
    class1.var3 = 6;
    class1.varX = 10;
    class1.varY = 20;
    log (class1);
    Class2 class2 = new Class2 ();
    class2.var1 = 7;
    class2.var2 = 8;
    class2.var3 = 9;
    class2.varA = 30;
    class2.varB = 40;
    log (class2);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33075208_33075387_1_28
33075208_33083167_1_20
Title: Downloading Multiple Files Parallelly or Asynchronously in Java 
----------------------------------------

public List < Attachment > download (List < Attachment > attachments) {
    ExecutorService executorService = Executors.newCachedThreadPool ();
    for (final Attachment attachment : attachments) {
        executorService.submit (new Runnable () {
            @Override
            public void run () {
                try {
                    String attUrl = attachment.getUrl ();
                    String fileName = attachment.getFileName ();
                    String destLocation = "C:\Users\attachments";
                    URL url = new URL (attUrl);
                    String fileLocation = new File (destLoc, fileName);
                    FileUtils.copyURLToFile (url, fileLocation);
                    if (fileLocation.exists ()) {
                        attachment.setDownStatus ("Completed");
                    }
                } catch (Exception e) {
                    attachment.setDownStatus ("Failed");
                }
            }}

        );
    }
    executorService.shutdown ();
    return attachments;
}
----------------------------------------

public List < Attachment > download (List < Attachment > attachments) {
    ExecutorService executorService = Executors.newCachedThreadPool ();
    List < Future < Attachment > > futures = new ArrayList < Future < Attachment > > ();
    for (final Attachment attachment : attachments) {
        futures.add (executorService.submit (new Callable < Attachment > () {
            @Override
            public Attachment call () throws Exception {
                return doDownload (attachment);
            }}

        ));
    }
    for (Future < Attachment > future : futures) {
        try {
            future.get ();
        } catch (Exception ex) {
        }
    }
    return attachments;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33091901_33091938_1_29
33091901_33092078_3_34
Title: The infamous triangle loop... with a twist 
----------------------------------------

public static void main (String [] args) {
    final int WIDTH = 7;
    for (int row = 1;
    row <= (WIDTH); row ++) {
        for (int col = 1;
        col <= (WIDTH); col ++) {
            if (col == 1) {
                System.out.print ("*");
            } else if (row == WIDTH) {
                System.out.print ("*");
            } else if (row < col) {
                System.out.print ("*");
            } else {
                System.out.print (" ");
            }

        }
        System.out.println ();
    }
    System.out.println ("\n\nGoodbye!");
}
----------------------------------------

public static void main (String [] args) {
    final int WIDTH = 7;
    for (int row = 1;
    row < (WIDTH); row ++) {
        System.out.print ("*");
        for (int col = 1;
        col < (WIDTH); col ++) {
            if (row <= col) {
                System.out.print ("*");
            } else {
                System.out.print (" ");
            }
        }
        System.out.println ("");
    }
    for (int i = 1;
    i <= (WIDTH); i ++) {
        System.out.print ("*");
    }
    System.out.println ("\n\nGoodbye!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33093553_33093632_1_14
33093553_33093644_1_18
Title: Java - Creating an array from user input 
----------------------------------------

public static void ar () {
    double [] grades = new double [10];
    Scanner kb = new Scanner (System.in);
    for (int i = 0;
    i < grades.length; i ++) grades [i] = kb.nextDouble ();

    double sum = 0;
    for (int j = grades.length - 1;
    j >= 0; j --) sum = sum + grades [j];

    double ave = sum / 10;
    System.out.println (ave);
}
----------------------------------------

public static void ar () {
    double [] grades = new double [10];
    Scanner kb = new Scanner (System.in);
    for (int i = 0;
    i < grades.length; i ++) grades [i] = kb.nextDouble ();

    double sum = 0;
    for (int j = 9;
    j >= 0; j --) sum = sum + grades [j];

    double ave = sum / 10.0;
    System.out.println (ave);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33095583_33095905_1_33
33095583_33096418_1_35
Title: How do I find duplicates in an integer array and remove them? 
----------------------------------------

public static void main (String [] args) throws Exception {
    int [] array = new int [10];
    array [0] = 1;
    array [1] = 2;
    array [2] = 3;
    array [3] = 3;
    array [4] = 5;
    array [5] = 6;
    array [6] = 7;
    array [7] = 7;
    array [8] = 9;
    array [9] = 9;
    Arrays.sort (array);
    int [] tempArray = new int [array.length];
    int prev = array [0];
    int count = 0;
    tempArray [count] = array [0];
    for (int i = 1;
    i < array.length; i ++) {
        if (prev != array [i]) {
            count ++;
            tempArray [count] = array [i];
        }
        prev = array [i];
    }
    int [] finalArray = Arrays.copyOf (tempArray, count + 1);
    System.out.println (finalArray);
}
----------------------------------------

public static void main (String [] args) {
    Integer [] array = new Integer [10];
    StringBuffer stringBuffer = new StringBuffer ();
    array [0] = 1;
    array [1] = 2;
    array [2] = 3;
    array [3] = 3;
    array [4] = 5;
    array [5] = 6;
    array [6] = 7;
    array [7] = 7;
    array [8] = 9;
    array [9] = 9;
    String arrayString = Arrays.toString (array);
    for (int index = 0;
    index <= arrayString.length (); index ++) {
        try {
            int number = Integer.parseInt (arrayString.charAt (index) + "");
            if (! stringBuffer.toString ().contains (number + "")) {
                if (stringBuffer.length () != 0) stringBuffer.append (",");

                stringBuffer.append (number);
            }
        } catch (Exception e) {
        }
    }
    String [] stringArray = stringBuffer.toString ().split (",");
    array = new Integer [stringArray.length];
    for (int index = 0;
    index < stringArray.length; index ++) {
        array [index] = Integer.parseInt (stringArray [index]);
    }
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33096167_33096579_11_40
33096167_33096673_1_10
Title: Showing ArrayList in ListView using BaseAdapter 
----------------------------------------

public View getView (int position, View convertView, ViewGroup parent) {
    if (convertView != null) return convertView;

    LayoutInflater inflater = (LayoutInflater) mContext.getSystemService (Context.LAYOUT_INFLATER_SERVICE);
    View rowView = inflater.inflate (R.layout.item_analysis_row, parent, false);
    ItemAnalysis itemDomain = itemAnalysisList.get (position);
    TextView itemNumberTextView = (TextView) rowView.findViewById (R.id.itemNumberTextView);
    itemNumberTextView.setText (itemDomain.getItemNumber ());
    Log.i ("Database Operations", "Evaluation: " + itemNumberTextView);
    TextView correctKeyTextView = (TextView) rowView.findViewById (R.id.correctKeyTextView);
    correctKeyTextView.setText (itemDomain.getCorrectKey ());
    Log.i ("Database Operations", "Evaluation: " + correctKeyTextView);
    TextView itemDifficultyTextView = (TextView) rowView.findViewById (R.id.itemDifficultyTextView);
    itemDifficultyTextView.setText (Double.toString (itemDomain.getItemDifficulty ()));
    Log.i ("Database Operations", "Evaluation: " + itemDifficultyTextView);
    TextView itemEvaluationTextView = (TextView) rowView.findViewById (R.id.itemEvaluationTextView);
    itemEvaluationTextView.setText (itemDomain.getEvaluation ());
    Log.i ("Database Operations", "Evaluation: " + itemEvaluationTextView);
    return rowView;
}
----------------------------------------

@Override
public View getView (int position, View convertView, ViewGroup parent) {
    View rowView = convertView;
    if (rowView == null) {
        LayoutInflater inflater = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);
        rowView = inflater.inflate (R.layout.main, parent, false);
    }
    return rowView;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33102215_33102307_1_28
33102215_33102458_1_28
Title: "Getting data from a given String separated by (-) in java" 
----------------------------------------

public static void main (String [] args) {
    String example = "5006,3030,8080-8083";
    String [] splitString = example.split (",");
    List < Integer > soretedNumbers = new ArrayList < > ();
    for (String str : splitString) {
        String [] split2 = str.split ("-");
        if (split2.length == 1) {
            soretedNumbers.add (Integer.parseInt (str));
        } else {
            int num1 = Integer.parseInt (split2 [0]);
            int num2 = Integer.parseInt (split2 [1]);
            for (int i = num1;
            i <= num2; i ++) {
                soretedNumbers.add (i);
            }
        }
    }
    Collections.sort (soretedNumbers);
    for (int i : soretedNumbers) {
        System.out.println (i);
    }
}
----------------------------------------

public static void main (String [] args) {
    String input = "5006,3030,8080-8083";
    List < Integer > list = new ArrayList < Integer > ();
    String [] numbers = input.split (",");
    for (String s : numbers) {
        if (s.contains ("-")) {
            String [] range = s.split ("-");
            int from = Integer.parseInt (range [0]);
            int to = Integer.parseInt (range [1]);
            for (int i = from;
            i <= to; i ++) {
                list.add (i);
            }
        } else {
            list.add (Integer.parseInt (s));
        }
    }
    System.out.println ("in asc order");
    Collections.sort (list);
    System.out.println (list.toString ());
    System.out.println ("in desc order");
    Collections.reverse (list);
    System.out.println (list.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33104103_33109854_35_49
33104103_33109854_68_84
Title: javafx timeline and mouse event 
----------------------------------------

public void handle (MouseEvent event) {
    if (event.getButton () == MouseButton.PRIMARY) {
        if (! (canvas.getChildren ().isEmpty ())) {
            canvas.getChildren ().remove (0);
        }
    } else {
        int red = (int) (Math.random () * 256);
        int green = (int) (Math.random () * 256);
        int blue = (int) (Math.random () * 256);
        int x = (int) (Math.random () * 801);
        int y = (int) (Math.random () * 601);
        addCircle (x, y, Color.rgb (red, green, blue));
    }
}
----------------------------------------

public void handle (final ActionEvent t) {
    circle.setLayoutX (circle.getLayoutX () + deltaX);
    circle.setLayoutY (circle.getLayoutY () + deltaY);
    final Bounds bounds = canvas.getBoundsInLocal ();
    final boolean atRightBorder = circle.getLayoutX () >= (bounds.getMaxX () - circle.getRadius ());
    final boolean atLeftBorder = circle.getLayoutX () <= (bounds.getMinX () + circle.getRadius ());
    final boolean atBottomBorder = circle.getLayoutY () >= (bounds.getMaxY () - circle.getRadius ());
    final boolean atTopBorder = circle.getLayoutY () <= (bounds.getMinY () + circle.getRadius ());
    if (atRightBorder || atLeftBorder) {
        deltaX *= - 1;
    }
    if (atBottomBorder || atTopBorder) {
        deltaY *= - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33105688_33107352_1_22
33105688_33111736_1_19
Title: Java: Changing a label value while threading 
----------------------------------------

private void ButtonActionPerformed (java.awt.event.ActionEvent evt) {
    ExecutorService executorService = Executors.newFixedThreadPool (1);
    for (int x = 0;
    x <= 10; x ++) {
        final int y = x;
        executorService.execute (new Runnable () {
            public void run () {
                try {
                    Thread.sleep (1000);
                } catch (InterruptedException e) {
                    e.printStackTrace ();
                }
                nummerlabel.setText (String.valueOf (y));
            }}

        );
    }
    executorService.shutdown ();
}
----------------------------------------

private void ButtonActionPerformed (java.awt.event.ActionEvent evt) {
    Thread thread = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                for (int i = 0;
                i <= 10; i ++) {
                    nummerlabel.setText (String.valueOf (i));
                    TimeUnit.SECONDS.sleep (1);
                }
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }}

    );
    thread.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33109402_33117915_28_48
33109402_33117915_53_67
Title: "JavaCV: avformat_open_input() hangs (not network but with custom AVIOContext)" 
----------------------------------------

public int call (Pointer pointer, BytePointer buf, int bufSize) {
    try {
        byte [] data = new byte [bufSize];
        int read = raf.read (data);
        if (read <= 0) {
            return AVERROR_EOF;
        }
        buf.position (0);
        buf.put (data, 0, read);
        return read;
    } catch (Exception ex) {
        ex.printStackTrace ();
        return - 1;
    }
}
----------------------------------------

public long call (Pointer pointer, long offset, int whence) {
    try {
        if (whence == AVSEEK_SIZE) {
            return raf.length ();
        }
        raf.seek (offset);
        return offset;
    } catch (IOException ex) {
        ex.printStackTrace ();
        return - 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33114649_33120044_42_50
33114649_33120044_52_74
Title: How to classify images based on solid color areas and repeating patterns 
----------------------------------------

public static double getComplexity (String url) throws IOException {
    InputStream is = new URL (url).openStream ();
    try {
        BufferedImage img = ImageIO.read (is);
        return getComplexity (img, defaultHorizontalCount, defaultVerticalCount);
    } finally {
        is.close ();
    }
}
----------------------------------------

public static double getComplexity (BufferedImage img, int xCount, int yCount) {
    int w = img.getWidth ();
    int h = img.getHeight ();
    Color [] [] pixels = new Color [h] [w];
    for (int y = 0;
    y < h; y ++) for (int x = 0;
    x < w; x ++) pixels [y] [x] = new Color (img.getRGB (x, y));

    int pw = w / xCount;
    int ph = h / yCount;
    pixels = blur (pixels, pw / 5, ph / 5);
    double sumCompl = 0;
    int denominator = 0;
    for (int i = 0;
    i < xCount; i ++) for (int j = 0;
    j < yCount; j ++) for (int n = i;
    n < xCount; n ++) for (int m = j;
    m < yCount; m ++) {
        if (i == n && j == m) continue;

        sumCompl += compareSubimages (pixels, i * pw, j * ph, n * pw, m * ph, pw, ph);
        denominator ++;
    }

    return sumCompl / denominator;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33115912_33116012_1_38
33115912_33116174_1_11
Title: Using a text file to copy to a new text file 
----------------------------------------

public static void namechange () {
    try {
        String fileorig = "C:\\Users\\danor\\Desktop\\example.txt";
        String asf;
        String line;
        Scanner keyboard = new Scanner (System.in);
        System.out.println ("what do you want the new file to be named.");
        StringBuilder file = new StringBuilder ();
        file.append ("C:\\Users\\danor\\Desktop\\");
        file.append (keyboard.nextLine ());
        file.append (".txt");
        asf = file.toString ();
        try {
            FileWriter fwriter = new FileWriter (asf, true);
            PrintWriter out = new PrintWriter (fwriter);
            Scanner inputfile = new Scanner (fileorig);
            if (inputfile.hasNextLine ()) {
                while (inputfile.hasNextLine ()) {
                    line = (inputfile.nextLine ());
                    out.println (line);
                }
                System.out.println ("line");
            } else {
                System.out.println ("Reached the end of the file");
            }
            out.close ();
        } catch (FileNotFoundException | UnsupportedEncodingException e) {
            System.out.println ("something went wrong with the writing : " + e.getMessage ());
        }
    } catch (Exception e) {
        System.out.println ("there was something wrong witht the reading : " + e.getMessage ());
    }
}
----------------------------------------

public static void namechange () {
    String fileorig = "C:\\Users\\danor\\Desktop\\example.txt";
    File file = new File (fileorig);
    Scanner scanner = new Scanner (System.in);
    StringBuilder sb = new StringBuilder ("C:\\Users\\danor\\Desktop\\");
    sb.append (scanner.nextLine ());
    sb.append (".txt");
    file.renameTo (new File (sb.toString ()));
    scanner.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33120767_33120866_1_17
33120767_33121106_21_36
Title: Android - Retrieve ArrayList from other Activity 
----------------------------------------

public ArrayList getInventory () {
    db = SQLiteDatabase.openDatabase ("/data/data/com.sjhdevelopment.shaunharrison.myejuiceapp/databases/EJuiceData.db", null, 0);
    Cursor c = db.rawQuery ("SELECT * FROM Inventory", null);
    List InventoryList = new ArrayList ();
    if (c.moveToFirst ()) {
        do {
            Double amountLeft = Double.parseDouble (c.getString (4));
            if (amountLeft != 0) {
                InventoryList.add (c.getString (1));
            }
        } while (c.moveToNext ());
    }
    java.util.Collections.sort (InventoryList);
    InventoryList.add (0, "No Selection");
    return InventoryList;
}
----------------------------------------

public void getInventory () {
    db = SQLiteDatabase.openDatabase ("/data/data/com.sjhdevelopment.shaunharrison.myejuiceapp/databases/EJuiceData.db", null, 0);
    Cursor c = db.rawQuery ("SELECT * FROM Inventory", null);
    if (c.moveToFirst ()) {
        do {
            Double amountLeft = Double.parseDouble (c.getString (4));
            if (amountLeft != 0) {
                InventoryList.add (c.getString (1));
            }
        } while (c.moveToNext ());
    }
    java.util.Collections.sort (InventoryList);
    InventoryList.add (0, "No Selection");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33121292_33121524_8_24
33121292_33121549_5_22
Title: Show certain amount of prime numbers 
----------------------------------------

public static void main (String [] args) {
    for (int i = 2;
    count > 0; i ++) {
        for (int j = 2;
        j < i / 2 + 1; j ++) {
            if (i % j == 0) {
                prime = false;
                break;
            } else {
                prime = true;
            }
        }
        if (prime) {
            System.out.println (i + " is a Prime:");
            count --;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 2;
    i < count + 1; i ++) {
        for (int j = 2;
        j < 100; j ++) {
            if (i == j) {
                continue;
            }
            if (i % j == 0) {
                prime = false;
                break;
            } else {
                prime = true;
            }
        }
        if (prime) {
            System.out.println (i + " is a Prime:");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33122123_33126480_70_78
33122123_33126480_80_92
Title: "Get Range of IpAddresses given in the form ""9.1.0.0-10"" in java" 
----------------------------------------

public boolean isInRange (InetAddress adr) {
    byte [] parts = adr.getAddress ();
    for (int i = 0;
    i < 4; i ++) {
        if (min [i] > (parts [i] & 0xff) || max [i] < (parts [i] & 0xff)) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public boolean isInRange (String adr) {
    String [] tokens = adr.split ("\\.");
    if (tokens.length < 4) {
        return false;
    }
    for (int i = 0;
    i < 4; i ++) {
        int part = Integer.parseInt (tokens [i]);
        if (min [i] > part || max [i] < part) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33126452_33141040_29_45
33126452_33161785_29_43
Title: Error Occured while retrieving A Bitmap In AsyncTask process 
----------------------------------------

protected void onPostExecute (Bitmap bitmap) {
    try {
        if (bitmap != null) {
            ImageView imageView = (ImageView) newsAndImages.view.findViewById (R.id.newsListImage);
            imageView.setImageBitmap (bitmap);
            newsAndImages.news.setBitmap (bitmap);
        } else {
            ImageView imageView = (ImageView) newsAndImages.view.findViewById (R.id.newsHeadLineImage);
            imageView.setImageBitmap (bitmap);
            newsAndImages.news.setBitmap (bitmap);
        }
        bitmap.recycle ();
    } catch (Exception e) {
        Log.v ("LOGTAG", e + " post exe");
    }
}
----------------------------------------

protected void onPostExecute (NewsAndImages newsAndImages) {
    try {
        if (newsAndImages.position > 0) {
            ImageView imageView = (ImageView) newsAndImages.view.findViewById (R.id.newsListImage);
            imageView.setImageBitmap (newsAndImages.bitmap);
            imageCache.put (newsAndImages.news.getNews_id (), newsAndImages.bitmap);
        } else {
            ImageView imageView = (ImageView) newsAndImages.view.findViewById (R.id.newsHeadLineImage);
            imageView.setImageBitmap (newsAndImages.bitmap);
            imageCache.put (newsAndImages.news.getNews_id (), newsAndImages.bitmap);
        }
    } catch (Exception e) {
        Log.i (NewsDBOpenHelper.LOGTAG, e + " onPostExecute");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33138581_33138652_15_31
33138581_33139294_1_13
Title: What do I initialize this to? 
----------------------------------------

public static int max (int num1, int num2, int num3) {
    int result = 0;
    if (num1 > num2 || num1 > num3) {
        result = num1;
    } else if (num2 > num1 || num2 > num3) {
        result = num2;
    } else if (num3 > num1 || num3 > num2) {
        result = num3;
    }

    return result;
}
----------------------------------------

public static int max (int num1, int num2, int num3) {
    int max = num1;
    if (num2 > max) {
        max = num2;
    }
    if (num3 > max) {
        max = num3;
    }
    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_16_29
33145717_33146510_30_43
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final String frameId, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameId);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final int frameId, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameId);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_16_29
33145717_33146510_44_57
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final String frameId, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameId);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final WebElement frameReference, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameReference);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_19_27
33145717_33146510_33_41
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameId);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameId);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_19_27
33145717_33146510_47_55
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameId);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameReference);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_30_43
33145717_33146510_44_57
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final int frameId, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameId);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------

private final WebElement frameSafeElement (final WebDriver driver, final WebElement frameReference, final By lookup) {
    return (WebElement) java.lang.reflect.Proxy.newProxyInstance (getClass ().getClassLoader (), new Class < ? > [] {WebElement.class}, new InvocationHandler () {
        @Override
        public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
            try {
                driver.switchTo ().frame (frameReference);
                WebElement element = driver.findElement (lookup);
                return method.invoke (element, args);
            } finally {
                driver.switchTo ().defaultContent ();
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33145717_33146510_33_41
33145717_33146510_47_55
Title: Struggling with Reusable Functions to Handle Frames 
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameId);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------

public Object invoke (Object proxy, Method method, Object [] args) throws Throwable {
    try {
        driver.switchTo ().frame (frameReference);
        WebElement element = driver.findElement (lookup);
        return method.invoke (element, args);
    } finally {
        driver.switchTo ().defaultContent ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33147794_33148011_1_23
33147794_33148498_1_25
Title: insert conditions with variable to select String only if the variable is not null 
----------------------------------------

public String getFilterCondition (Group group) {
    String sendMail = group.getEmail ();
    String phone = group.getPhone ();
    String gender = group.getGender ();
    String concat = "where ";
    String query = "select * from member ";
    if (sendMail != null) {
        query += concat + "sendMail='" + sendMail + "' ";
        concat = "and ";
    }
    if (phone != null) {
        query += concat + "phone='" + phone + "'";
        concat = "and ";
    }
    if (gender != null) {
        query += concat + "gender='" + gender + "'";
    }
    return query;
}
----------------------------------------

public String getFilterCondition (Group group) {
    String sendMail = group.getEmail ();
    String phone = group.getPhone ();
    String gender = group.getGender ();
    String returnValue = "select * from member ";
    boolean needWhereClause = true;
    if ((sendMail != null) && ! sendMail.equals ("")) {
        returnValue = returnValue + (needWhereClause ? "where " : "and ");
        needWhereClause = false;
        returnValue = returnValue + "sendMail = '" + sendMail + "' ";
    }
    if ((phone != null) && ! phone.equals ("")) {
        returnValue = returnValue + (needWhereClause ? "where " : "and ");
        needWhereClause = false;
        returnValue = returnValue + "phone = '" + phone + "' ";
    }
    if ((gender != null) && ! gender.equals ("")) {
        returnValue = returnValue + (needWhereClause ? "where " : "and ");
        needWhereClause = false;
        returnValue = returnValue + "gender = '" + gender + "' ";
    }
    return returnValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33151922_33152197_41_59
33151922_33152412_30_51
Title: What is the best way to compare variables of same class? 
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (! (obj instanceof Person)) return false;

    Person other = (Person) obj;
    if (address == null) {
        if (other.address != null) return false;

    } else if (! address.equals (other.address)) return false;

    if (mobileNumber != other.mobileNumber) return false;

    if (officeId == null) {
        if (other.officeId != null) return false;

    } else if (! officeId.equals (other.officeId)) return false;

    return true;
}
----------------------------------------

public boolean equals (Object obj) {
    if (this == obj) return true;

    if (obj == null) return false;

    if (getClass () != obj.getClass ()) return false;

    Contact other = (Contact) obj;
    if (newAddress == null) {
        if (other.newAddress != null) return false;

    } else if (! newAddress.equals (other.newAddress)) return false;

    if (newMobileNumber != other.newMobileNumber) return false;

    if (newOfficeId == null) {
        if (other.newOfficeId != null) return false;

    } else if (! newOfficeId.equals (other.newOfficeId)) return false;

    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159419_1_22
33159274_33159446_1_17
Title: Java padding a string read from a file 
----------------------------------------

public String pad_num (String line, String operator) {
    String str [] = line.split (Pattern.quote (operator));
    StringBuilder left = new StringBuilder (str [0]);
    StringBuilder right = new StringBuilder (str [1]);
    left = left.reverse ();
    right = right.reverse ();
    int len1 = left.length ();
    int len2 = right.length ();
    if (len1 > len2) {
        while (len1 != len2) {
            right.append ("0");
            len1 --;
        }
    } else {
        while (len1 != len2) {
            left.append ("0");
            len2 --;
        }
    }
    return left.reverse ().toString () + operator + right.reverse ().toString ();
}
----------------------------------------

public static String pad_num (String line) {
    String [] groups = line.split ("-");
    String left = groups [0], right = groups [1];
    if (left.length () < right.length ()) {
        do {
            left = '0' + left;
        } while (left.length () < right.length ());
    } else if (right.length () < left.length ()) {
        do {
            right = '0' + right;
        } while (right.length () < left.length ());
    }

    return left + '-' + right;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159419_1_22
33159274_33159497_1_26
Title: Java padding a string read from a file 
----------------------------------------

public String pad_num (String line, String operator) {
    String str [] = line.split (Pattern.quote (operator));
    StringBuilder left = new StringBuilder (str [0]);
    StringBuilder right = new StringBuilder (str [1]);
    left = left.reverse ();
    right = right.reverse ();
    int len1 = left.length ();
    int len2 = right.length ();
    if (len1 > len2) {
        while (len1 != len2) {
            right.append ("0");
            len1 --;
        }
    } else {
        while (len1 != len2) {
            left.append ("0");
            len2 --;
        }
    }
    return left.reverse ().toString () + operator + right.reverse ().toString ();
}
----------------------------------------

public String pad_num (String line) {
    String [] lines = line.split ("-");
    String s1 = lines [0];
    String s2 = lines [1];
    StringBuilder sb = new StringBuilder ();
    if (s1.length () == s2.length ()) {
        return line;
    } else if (s1.length () > s2.length ()) {
        sb.append (s1);
        sb.append ("-");
        for (int i = 0;
        i < s1.length () - s2.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s2);
    } else {
        for (int i = 0;
        i < s2.length () - s1.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s1);
        sb.append ("-");
        sb.append (s2);
    }

    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159419_1_22
33159274_33159785_1_14
Title: Java padding a string read from a file 
----------------------------------------

public String pad_num (String line, String operator) {
    String str [] = line.split (Pattern.quote (operator));
    StringBuilder left = new StringBuilder (str [0]);
    StringBuilder right = new StringBuilder (str [1]);
    left = left.reverse ();
    right = right.reverse ();
    int len1 = left.length ();
    int len2 = right.length ();
    if (len1 > len2) {
        while (len1 != len2) {
            right.append ("0");
            len1 --;
        }
    } else {
        while (len1 != len2) {
            left.append ("0");
            len2 --;
        }
    }
    return left.reverse ().toString () + operator + right.reverse ().toString ();
}
----------------------------------------

public static String pad_num (String line) {
    String paddedStr = null;
    String [] numbers = StringUtils.split (line, "-");
    if (numbers == null || (numbers [0].length () == numbers [1].length ())) {
        return line;
    }
    if (numbers [0].length () > numbers [1].length ()) {
        paddedStr = numbers [0] + "-" + StringUtils.leftPad (numbers [1], numbers [0].length (), "0");
    } else {
        paddedStr = StringUtils.leftPad (numbers [0], numbers [1].length (), "0") + "-" + numbers [1];
    }
    return paddedStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159446_1_17
33159274_33159497_1_26
Title: Java padding a string read from a file 
----------------------------------------

public static String pad_num (String line) {
    String [] groups = line.split ("-");
    String left = groups [0], right = groups [1];
    if (left.length () < right.length ()) {
        do {
            left = '0' + left;
        } while (left.length () < right.length ());
    } else if (right.length () < left.length ()) {
        do {
            right = '0' + right;
        } while (right.length () < left.length ());
    }

    return left + '-' + right;
}
----------------------------------------

public String pad_num (String line) {
    String [] lines = line.split ("-");
    String s1 = lines [0];
    String s2 = lines [1];
    StringBuilder sb = new StringBuilder ();
    if (s1.length () == s2.length ()) {
        return line;
    } else if (s1.length () > s2.length ()) {
        sb.append (s1);
        sb.append ("-");
        for (int i = 0;
        i < s1.length () - s2.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s2);
    } else {
        for (int i = 0;
        i < s2.length () - s1.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s1);
        sb.append ("-");
        sb.append (s2);
    }

    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159446_1_17
33159274_33159785_1_14
Title: Java padding a string read from a file 
----------------------------------------

public static String pad_num (String line) {
    String [] groups = line.split ("-");
    String left = groups [0], right = groups [1];
    if (left.length () < right.length ()) {
        do {
            left = '0' + left;
        } while (left.length () < right.length ());
    } else if (right.length () < left.length ()) {
        do {
            right = '0' + right;
        } while (right.length () < left.length ());
    }

    return left + '-' + right;
}
----------------------------------------

public static String pad_num (String line) {
    String paddedStr = null;
    String [] numbers = StringUtils.split (line, "-");
    if (numbers == null || (numbers [0].length () == numbers [1].length ())) {
        return line;
    }
    if (numbers [0].length () > numbers [1].length ()) {
        paddedStr = numbers [0] + "-" + StringUtils.leftPad (numbers [1], numbers [0].length (), "0");
    } else {
        paddedStr = StringUtils.leftPad (numbers [0], numbers [1].length (), "0") + "-" + numbers [1];
    }
    return paddedStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33159274_33159497_1_26
33159274_33159785_1_14
Title: Java padding a string read from a file 
----------------------------------------

public String pad_num (String line) {
    String [] lines = line.split ("-");
    String s1 = lines [0];
    String s2 = lines [1];
    StringBuilder sb = new StringBuilder ();
    if (s1.length () == s2.length ()) {
        return line;
    } else if (s1.length () > s2.length ()) {
        sb.append (s1);
        sb.append ("-");
        for (int i = 0;
        i < s1.length () - s2.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s2);
    } else {
        for (int i = 0;
        i < s2.length () - s1.length (); i ++) {
            sb.append ("0");
        }
        sb.append (s1);
        sb.append ("-");
        sb.append (s2);
    }

    return sb.toString ();
}
----------------------------------------

public static String pad_num (String line) {
    String paddedStr = null;
    String [] numbers = StringUtils.split (line, "-");
    if (numbers == null || (numbers [0].length () == numbers [1].length ())) {
        return line;
    }
    if (numbers [0].length () > numbers [1].length ()) {
        paddedStr = numbers [0] + "-" + StringUtils.leftPad (numbers [1], numbers [0].length (), "0");
    } else {
        paddedStr = StringUtils.leftPad (numbers [0], numbers [1].length (), "0") + "-" + numbers [1];
    }
    return paddedStr;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_13887448_1_14
3316674_23537258_1_10
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    double rnd;
    for (char c : string.toCharArray ()) {
        rnd = Math.random ();
        if (rnd < 0.34) sb.append (c);
        else if (rnd < 0.67) sb.insert (sb.length () / 2, c);
        else sb.insert (0, c);

    }
    return sb.toString ();
}
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_13887448_1_14
3316674_3316696_7_18
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    double rnd;
    for (char c : string.toCharArray ()) {
        rnd = Math.random ();
        if (rnd < 0.34) sb.append (c);
        else if (rnd < 0.67) sb.insert (sb.length () / 2, c);
        else sb.insert (0, c);

    }
    return sb.toString ();
}
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_13887448_1_14
3316674_3316743_1_14
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    double rnd;
    for (char c : string.toCharArray ()) {
        rnd = Math.random ();
        if (rnd < 0.34) sb.append (c);
        else if (rnd < 0.67) sb.insert (sb.length () / 2, c);
        else sb.insert (0, c);

    }
    return sb.toString ();
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;

    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_13887448_1_14
3316674_3316795_4_19
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String string) {
    StringBuilder sb = new StringBuilder (string.length ());
    double rnd;
    for (char c : string.toCharArray ()) {
        rnd = Math.random ();
        if (rnd < 0.34) sb.append (c);
        else if (rnd < 0.67) sb.insert (sb.length () / 2, c);
        else sb.insert (0, c);

    }
    return sb.toString ();
}
----------------------------------------

public static String shuffle (String s) {
    String shuffledString = "";
    while (s.length () != 0) {
        int index = (int) Math.floor (Math.random () * s.length ());
        char c = s.charAt (index);
        s = s.substring (0, index) + s.substring (index + 1);
        shuffledString += c;
    }
    return shuffledString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_23537258_1_10
3316674_3316696_7_18
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_23537258_1_10
3316674_3316743_1_14
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;

    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_23537258_1_10
3316674_3316795_4_19
Title: How to shuffle characters in a string 
----------------------------------------

public static String shuffle (String text) {
    char [] characters = text.toCharArray ();
    for (int i = 0;
    i < characters.length; i ++) {
        int randomIndex = (int) (Math.random () * characters.length);
        char temp = characters [i];
        characters [i] = characters [randomIndex];
        characters [randomIndex] = temp;
    }
    return new String (characters);
}
----------------------------------------

public static String shuffle (String s) {
    String shuffledString = "";
    while (s.length () != 0) {
        int index = (int) Math.floor (Math.random () * s.length ());
        char c = s.charAt (index);
        s = s.substring (0, index) + s.substring (index + 1);
        shuffledString += c;
    }
    return shuffledString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_3316696_7_18
3316674_3316743_1_14
Title: How to shuffle characters in a string 
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;

    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_3316696_7_18
3316674_3316795_4_19
Title: How to shuffle characters in a string 
----------------------------------------

public void shuffle (String input) {
    List < Character > characters = new ArrayList < Character > ();
    for (char c : input.toCharArray ()) {
        characters.add (c);
    }
    StringBuilder output = new StringBuilder (input.length ());
    while (characters.size () != 0) {
        int randPicker = (int) (Math.random () * characters.size ());
        output.append (characters.remove (randPicker));
    }
    System.out.println (output.toString ());
}
----------------------------------------

public static String shuffle (String s) {
    String shuffledString = "";
    while (s.length () != 0) {
        int index = (int) Math.floor (Math.random () * s.length ());
        char c = s.charAt (index);
        s = s.substring (0, index) + s.substring (index + 1);
        shuffledString += c;
    }
    return shuffledString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3316674_3316743_1_14
3316674_3316795_4_19
Title: How to shuffle characters in a string 
----------------------------------------

static String shuffle (String text) {
    if (text.length () <= 1) return text;

    int split = text.length () / 2;
    String temp1 = shuffle (text.substring (0, split));
    String temp2 = shuffle (text.substring (split));
    if (Math.random () > 0.5) return temp1 + temp2;
    else return temp2 + temp1;

}
----------------------------------------

public static String shuffle (String s) {
    String shuffledString = "";
    while (s.length () != 0) {
        int index = (int) Math.floor (Math.random () * s.length ());
        char c = s.charAt (index);
        s = s.substring (0, index) + s.substring (index + 1);
        shuffledString += c;
    }
    return shuffledString;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33171003_33171122_1_15
33171003_33171144_1_15
Title: Java Calendar.HOUR_OF_DAY not working for 2.00 PM 
----------------------------------------

public static Date stringToDate (String str) {
    SimpleDateFormat formatter = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
    Date date = null;
    try {
        date = formatter.parse (str);
        Calendar calendar = Calendar.getInstance ();
        calendar.setTime (date);
        calendar.add (Calendar.HOUR_OF_DAY, 2);
        date = calendar.getTime ();
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    return date;
}
----------------------------------------

public static Date stringToDate (String str) {
    SimpleDateFormat formatter = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
    Date date = null;
    try {
        date = formatter.parse (str);
        Calendar calendar = Calendar.getInstance ();
        calendar.setTime (date);
        calendar.add (Calendar.HOUR_OF_DAY, 2);
        date = calendar.getTime ();
    } catch (ParseException e) {
        e.printStackTrace ();
    }
    return date;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33172657_33172803_1_15
33172657_47907543_2_18
Title: Print a Z shape pyramid using * stars 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.print ("Enter a number: ");
    int n = input.nextInt ();
    for (int row = 0;
    row < n; row ++) {
        for (int column = 0;
        column < n; column ++) {
            if (row == 0 || row == n - 1 || column == n - 1 - row) {
                System.out.print ("*");
            } else {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i <= 4; i ++) {
        for (int j = 0;
        j <= 4; j ++) {
            if (i == 4 || (i + j) == 4 || i == 0) {
                System.out.print (" * ");
            } else {
                System.out.print ("    ");
            }
        }
        System.out.println (" ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33192059_33192094_1_13
33192059_33192141_1_12
Title: Comparing each element in of two arrays 
----------------------------------------

public static boolean allLess (int [] a, int [] b) {
    int len1 = a.length;
    int len2 = b.length;
    if (len1 == len2) {
        for (int i = 0;
        i < len1; i ++) if (! (a [i] < b [i])) return false;

    } else if (len1 != len2) return false;

    return true;
}
----------------------------------------

public static boolean allLess (int [] a, int [] b) {
    if (a.length == b.length) {
        for (int i = 0;
        i < a.length; i ++) {
            if (a [i] >= b [i]) {
                return false;
            }
        }
    } else {
        return false;
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33192723_33201270_1_18
33192723_49697855_1_13
Title: Swapping adjacent numbers in arrays 
----------------------------------------

public static void swapPairs (int [] a) {
    int len = a.length;
    if (len % 2 == 0) {
        for (int i = 0;
        i < len; i = i + 2) {
            int c = a [i] + a [i + 1];
            a [i] = c - a [i];
            a [i + 1] = c - a [i + 1];
        }
    }
    if (len % 2 != 0) {
        for (int j = 0;
        j < len - 1; j = j + 2) {
            int c = a [j] + a [j + 1];
            a [j] = c - a [j];
            a [j + 1] = c - a [j + 1];
        }
        a [len - 1] = a [len - 1];
    }
}
----------------------------------------

public static void swapPairs (int [] arr) {
    int length = arr.length % 2 == 0 ? arr.length : arr.length - 1;
    for (int i = 0;
    i < length; i = i + 2) {
        int temp = arr [i];
        arr [i] = arr [i + 1];
        arr [i + 1] = temp;
    }
    for (int i = 0;
    i < arr.length; i ++) {
        System.out.print (arr [i] + " ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33200325_33200610_1_20
33200325_33201647_11_45
Title: Java Array Error 
----------------------------------------

public void addString (String string) {
    if (storedStrings == this.arraySize) {
        this.arraySize += 10;
        String [] newArray = new String [this.arraySize];
        for (int i = 0;
        i < this.storedStrings; i ++) {
            newArray [i] = strings [i];
        }
        this.strings = newArray;
    }
    if (strings [storedStrings] == null) {
        strings [storedStrings ++] = string;
    }
    for (int i = 0;
    i < storedStrings; i ++) {
        System.out.println (strings [i]);
    }
}
----------------------------------------

public void addString (String string) {
    int storedStrings = 0;
    for (String s : this.strings) {
        if (s != null) {
            storedStrings ++;
        } else {
            break;
        }
    }
    if (storedStrings == this.arraySize) {
        String [] newArray = new String [this.arraySize + 10];
        for (int i = 0;
        i < this.strings.length; i ++) {
            newArray [i] = this.strings [i];
        }
        this.strings = newArray;
        newArray [storedStrings] = string;
        this.arraySize += 10;
    } else {
        this.strings [storedStrings] = string;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33202334_33202943_6_18
33202334_33203153_12_26
Title: Printing which coins are used to make a given amount 
----------------------------------------

private static int findMinCoins (int [] currency, int amount, int min) {
    int number, value1, value2;
    int min1 = min;
    for (int i = currency.length - 1;
    i >= 0; i --) {
        if (amount >= currency [i]) {
            amount = amount - currency [i];
            System.out.print (currency [i] + " ");
            min1 = findMinCoins (currency, amount, min1);
            return ++ min1;
        }
    }
    return min1;
}
----------------------------------------

public static int findMinCoins (int [] currency, int amount) {
    int coins = 0;
    int sum = 0;
    int value, n;
    for (int i = currency.length - 1;
    i >= 0; i --) {
        value = currency [i];
        n = (amount - sum) / value;
        if (n > 0) {
            coins += n;
            sum += n * value;
        }
    }
    return coins;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33206299_33206417_31_142
33206299_33248441_23_160
Title: Menu with Password and Simple Order 
----------------------------------------

public TestShop () {
    Scanner keyboard = new Scanner (System.in);
    Map < String, Integer > orders = new HashMap < > (25);
    Map < String, Double > prices = new HashMap < > (25);
    prices.put (MALBORO_LIGHTS_SOFT, 70d);
    prices.put (MALBORO_LIGHTS_FLIP, 80d);
    prices.put (MALBORO_RED_SOFT, 70d);
    prices.put (MALBORO_RED_FLIP, 80d);
    prices.put (DUNHILL_SOFT, 60d);
    prices.put (DUNHILL_FLIP, 70d);
    prices.put (PHILLIP_SOFT, 70d);
    prices.put (PHILLIP_FLIP, 80d);
    Map < String, List < String > > groups = new HashMap < > (25);
    groups.put (MALBORO_LIGHTS, new ArrayList < > (Arrays.asList (new String [] {MALBORO_LIGHTS_SOFT, MALBORO_LIGHTS_FLIP})));
    groups.put (MALBORO_RED, new ArrayList < > (Arrays.asList (new String [] {MALBORO_RED_SOFT, MALBORO_RED_FLIP})));
    groups.put (DUNHILL, new ArrayList < > (Arrays.asList (new String [] {DUNHILL_SOFT, DUNHILL_FLIP})));
    groups.put (PHILLIP, new ArrayList < > (Arrays.asList (new String [] {PHILLIP_SOFT, PHILLIP_FLIP})));
    boolean done = false;
    do {
        System.out.println ("Welcome to my shop");
        List < String > keys = new ArrayList < > (groups.keySet ());
        for (int index = 0;
        index < keys.size (); index ++) {
            System.out.println ("[" + (index + 1) + "] " + keys.get (index));
        }
        System.out.println ("[0] Exit");
        String input = keyboard.nextLine ();
        try {
            int selectedIndex = Integer.parseInt (input);
            if (selectedIndex == 0) {
                done = true;
            } else if (selectedIndex > 0 && selectedIndex <= keys.size ()) {
                String key = keys.get (selectedIndex - 1);
                List < String > items = groups.get (key);
                boolean subDone = false;
                do {
                    System.out.println ("Items for " + key + "....");
                    for (int index = 0;
                    index < items.size (); index ++) {
                        System.out.println ("  [" + (index + 1) + "] " + items.get (index));
                    }
                    System.out.println ("  [0] Return");
                    input = keyboard.nextLine ();
                    try {
                        int index = Integer.parseInt (input);
                        if (index > 0 && index <= items.size ()) {
                            index --;
                            String item = items.get (index);
                            Integer quanity = orders.get (item);
                            if (quanity == null) {
                                quanity = 1;
                            } else {
                                quanity ++;
                            }
                            orders.put (item, quanity);
                        } else if (index == 0) {
                            subDone = true;
                        } else {
                            System.out.println ("Invalid selection, please try again");
                        }

                    } catch (NumberFormatException exp) {
                        System.out.println ("!! " + input + " is not a valid selection");
                    }
                } while (! subDone);
            } else {
                System.out.println ("Invalid selection, please try again");
            }

        } catch (NumberFormatException exp) {
            System.out.println ("!! " + input + " is not a valid selection");
        }
    } while (! done);
    double total = 0;
    for (Map.Entry < String, Integer > entry : orders.entrySet ()) {
        int quanity = entry.getValue ();
        double price = prices.get (entry.getKey ());
        total += quanity * price;
        System.out.println (String.format ("%-20s x %4d @ %7s = %10s", entry.getKey (), quanity, NumberFormat.getCurrencyInstance ().format (price), NumberFormat.getCurrencyInstance ().format (quanity * price)));
    }
    System.out.printf ("%-20s   %4s   %7s   ==========%n", "", "", "");
    System.out.printf ("%-20s   %4s   %7s   %10s%n", "", "", "", NumberFormat.getCurrencyInstance ().format (total));
}
----------------------------------------

public TestShop () {
    Scanner keyboard = new Scanner (System.in);
    Map < String, Integer > orders = new HashMap < > (25);
    Map < String, Double > prices = new HashMap < > (25);
    prices.put (MALBORO_LIGHTS_SOFT, 70d);
    prices.put (MALBORO_LIGHTS_FLIP, 80d);
    prices.put (MALBORO_RED_SOFT, 70d);
    prices.put (MALBORO_RED_FLIP, 80d);
    prices.put (DUNHILL_SOFT, 60d);
    prices.put (DUNHILL_FLIP, 70d);
    prices.put (PHILLIP_SOFT, 70d);
    prices.put (PHILLIP_FLIP, 80d);
    Map < String, List < String > > groups = new HashMap < > (25);
    groups.put (MALBORO_LIGHTS, new ArrayList < > (Arrays.asList (new String [] {MALBORO_LIGHTS_SOFT, MALBORO_LIGHTS_FLIP})));
    groups.put (MALBORO_RED, new ArrayList < > (Arrays.asList (new String [] {MALBORO_RED_SOFT, MALBORO_RED_FLIP})));
    groups.put (DUNHILL, new ArrayList < > (Arrays.asList (new String [] {DUNHILL_SOFT, DUNHILL_FLIP})));
    groups.put (PHILLIP, new ArrayList < > (Arrays.asList (new String [] {PHILLIP_SOFT, PHILLIP_FLIP})));
    int attempts = 0;
    String password = null;
    String CORRECT_PWORD = "1234";
    String Options = null;
    do {
        System.out.print ("Enter Pin Code: ");
        password = keyboard.next ();
        if (! password.equals (CORRECT_PWORD)) {
            System.out.println ("Password is incorrect!");
            attempts ++;
        }
    } while (! password.equals (CORRECT_PWORD) && attempts < 3);
    if (password.equals (CORRECT_PWORD)) {
        System.out.println ("Welcome to Favor Stuff (Party Giveaways)!");
        boolean done = false;
        do {
            List < String > keys = new ArrayList < > (groups.keySet ());
            for (int index = 0;
            index < keys.size (); index ++) {
                System.out.println ("[" + (index + 1) + "] " + keys.get (index));
            }
            System.out.println ("[0] Exit");
            String input = keyboard.nextLine ();
            try {
                int selectedIndex = Integer.parseInt (input);
                if (selectedIndex == 0) {
                    done = true;
                } else if (selectedIndex > 0 && selectedIndex <= keys.size ()) {
                    String key = keys.get (selectedIndex - 1);
                    List < String > items = groups.get (key);
                    boolean subDone = false;
                    do {
                        System.out.println ("Items for " + key + "....");
                        for (int index = 0;
                        index < items.size (); index ++) {
                            System.out.println ("  [" + (index + 1) + "] " + items.get (index));
                        }
                        System.out.println ("  [0] Return");
                        input = keyboard.nextLine ();
                        try {
                            int index = Integer.parseInt (input);
                            if (index > 0 && index <= items.size ()) {
                                index --;
                                String item = items.get (index);
                                Integer quanity = orders.get (item);
                                if (quanity == null) {
                                    quanity = 1;
                                } else {
                                    quanity ++;
                                }
                                orders.put (item, quanity);
                            } else if (index == 0) {
                                subDone = true;
                            } else {
                                System.out.println ("Invalid selection, please try again");
                            }

                        } catch (NumberFormatException exp) {
                            System.out.println ("!! " + input + " is not a valid selection");
                        }
                    } while (! subDone);
                } else {
                    System.out.println ("Invalid selection, please try again");
                }

            } catch (NumberFormatException exp) {
                System.out.println ("!! " + input + " is not a valid selection");
            }
        } while (! done);
        double total = 0;
        for (Map.Entry < String, Integer > entry : orders.entrySet ()) {
            int quanity = entry.getValue ();
            double price = prices.get (entry.getKey ());
            total += quanity * price;
            System.out.println (String.format ("%-20s x %4d @ %7s = %10s", entry.getKey (), quanity, NumberFormat.getCurrencyInstance ().format (price), NumberFormat.getCurrencyInstance ().format (quanity * price)));
        }
        System.out.printf ("%-20s   %4s   %7s   ==========%n", "", "", "");
        System.out.printf ("%-20s   %4s   %7s   %10s%n", "", "", "", NumberFormat.getCurrencyInstance ().format (total));
    } else {
        System.out.println ("Sorry! You have entered the wrong password. Please call our Store 1234-567!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33207080_33207312_1_16
33207080_33207428_30_43
Title: How do I get one of my words to print vertically? 
----------------------------------------

private static void printCross (String w1, int pos1, String w2, int pos2) {
    String spaces = "";
    for (int i = 0;
    i < pos1; ++ i) spaces += " ";

    for (int i = 0;
    i < w2.length (); ++ i) {
        if (i == pos2) {
            System.out.println (w1);
        } else {
            System.out.println (spaces + w2.charAt (i));
        }
    }
}
----------------------------------------

private static void printCross (String w1, int pos, String w2) {
    String spaces = String.format (String.format ("%%0%dd", pos1), 0).replace ("0", " ");
    int lengthToTraverse = (w1.length () > w2.length ()) ? (w1.length ()) : (w2.length ());
    for (int i = 0;
    i < lengthToTraverse; ++ i) {
        if (i == pos) {
            System.out.println (w2);
        } else {
            if (i < w1.length ()) {
                System.out.println (spaces + w1.charAt (i));
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33207367_33207452_1_36
33207367_33207512_1_30
Title: Rejecting Duplicates of Same Number 
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    short numberOfOnes = 0;
    for (int i = 0;
    i <= binary.length () - 1; i ++) {
        if (binary.charAt (i) == '1') {
            numberOfOnes ++;
        } else if (! (binary.charAt (i) == '0' || binary.charAt (i) == '1')) {
            isCorrect = false;
            System.out.println ("Wrong input! Please enter a valid binary number");
            break;
        }

    }
    if (isCorrect && numberOfOnes == 2) System.out.println ("Accepted");
    else System.out.println ("Rejected");

}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    boolean isCountCorrect = true;
    for (int i = 0;
    i < binary.length (); i ++) {
        if (binary.charAt (i) == '1' || binary.charAt (i) == '0') {
            continue;
        } else {
            isCorrect = false;
            break;
        }
    }
    if (isCorrect == true) {
        int count = 0;
        for (int i = 0;
        i < binary.length (); i ++) {
            if (binary.charAt (i) == '1') {
                count ++;
            }
        }
        if (count > 2) {
            isCountCorrect = false;
        }
    }
    if (isCorrect = true && isCountCorrect == true) {
        System.out.println ("Approved");
    } else System.out.println ("Rejected");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33207367_33207452_1_36
33207367_33207919_6_44
Title: Rejecting Duplicates of Same Number 
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    short numberOfOnes = 0;
    for (int i = 0;
    i <= binary.length () - 1; i ++) {
        if (binary.charAt (i) == '1') {
            numberOfOnes ++;
        } else if (! (binary.charAt (i) == '0' || binary.charAt (i) == '1')) {
            isCorrect = false;
            System.out.println ("Wrong input! Please enter a valid binary number");
            break;
        }

    }
    if (isCorrect && numberOfOnes == 2) System.out.println ("Accepted");
    else System.out.println ("Rejected");

}
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    short numberOfOnes = 0;
    for (int i = 0;
    i <= binary.length () - 1; i ++) {
        if (binary.charAt (i) == '1') {
            numberOfOnes ++;
        } else if (binary.charAt (i) != '0' && binary.charAt (i) != '1') {
            isCorrect = false;
            System.out.println ("Wrong input! Please enter a valid binary number");
        }

    }
    if (isCorrect && numberOfOnes == 2) System.out.println ("Accepted");
    else System.out.println ("Rejected");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33207367_33207512_1_30
33207367_33207919_6_44
Title: Rejecting Duplicates of Same Number 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    boolean isCountCorrect = true;
    for (int i = 0;
    i < binary.length (); i ++) {
        if (binary.charAt (i) == '1' || binary.charAt (i) == '0') {
            continue;
        } else {
            isCorrect = false;
            break;
        }
    }
    if (isCorrect == true) {
        int count = 0;
        for (int i = 0;
        i < binary.length (); i ++) {
            if (binary.charAt (i) == '1') {
                count ++;
            }
        }
        if (count > 2) {
            isCountCorrect = false;
        }
    }
    if (isCorrect = true && isCountCorrect == true) {
        System.out.println ("Approved");
    } else System.out.println ("Rejected");

}
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter a binary number: ");
    String binary = input.nextLine ();
    boolean isCorrect = true;
    short numberOfOnes = 0;
    for (int i = 0;
    i <= binary.length () - 1; i ++) {
        if (binary.charAt (i) == '1') {
            numberOfOnes ++;
        } else if (binary.charAt (i) != '0' && binary.charAt (i) != '1') {
            isCorrect = false;
            System.out.println ("Wrong input! Please enter a valid binary number");
        }

    }
    if (isCorrect && numberOfOnes == 2) System.out.println ("Accepted");
    else System.out.println ("Rejected");

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33216326_33216499_1_11
33216326_33216596_1_25
Title: print 2 arrays like matrix for my assignment 
----------------------------------------

public void matrixmutilplication () {
    String thenumberofmatrix = JOptionPane.showInputDialog (null, "Enter the number of column and rows  ");
    int i = Integer.parseInt (thenumberofmatrix);
    for (int a = 0;
    a < i; a ++) {
        for (int b = 0;
        b < i; b ++) {
            System.out.print (a * b + "\t");
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void matrixmutilplication () {
    String thenumberofmatrix = JOptionPane.showInputDialog (null, "Enter the number of column and rows  ");
    int i = Integer.parseInt (thenumberofmatrix);
    for (int a = 0;
    a <= i; a ++) {
        for (int b = 0;
        b <= i; b ++) {
            if (a == 0 && b == 0) System.out.print ("\t");
            else if (a == 0) {
                System.out.print (b + "\t");
                if (b == i) System.out.print ("\n");

            } else if (b == 0) System.out.print (a + "\t");
            else System.out.print (a * b + "\t");

        }
        System.out.print ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33229498_33229552_1_11
33229498_33229611_1_11
Title: + compareTo(wordtoCompare : Word) : Integer Java 
----------------------------------------

@Override
public boolean equals (Object wordtoCompare) {
    boolean flag = false;
    if (wordtoCompare == this) return true;

    if (! (wordtoCompare instanceof Word)) return false;

    Word word = (Word) wordtoCompare;
    int compareResult = this.compareTo (wordtoCompare);
    return flag;
}
----------------------------------------

@Override
public boolean equals (Object wordtoCompare) {
    boolean flag = false;
    if (wordtoCompare == this) return true;

    if (! (wordtoCompare instanceof Word)) return false;

    Word word = (Word) wordtoCompare;
    this.compareTo (word);
    return flag;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33235027_33235810_6_26
33235027_33236000_6_34
Title: Searching duplicates in 2 dimensional array 
----------------------------------------

public static void main (String [] args) {
    int [] [] arr = {{2, 6, 46, 8, 7, 25, 64, 9, 10}, {6, 10, 50, 12, 11, 29, 68, 13, 14}, {46, 50, 90, 52, 51, 69, 108, 53, 54}};
    HashSet < Integer > elements = new HashSet < > ();
    HashSet < Integer > duplicates = new HashSet < > ();
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            if (elements.contains (arr [i] [j])) {
                duplicates.add (arr [i] [j]);
            }
            elements.add (arr [i] [j]);
        }
    }
    System.out.println (duplicates.toString ());
}
----------------------------------------

public static void main (String [] args) {
    Integer [] [] myarray = new Integer [] [] {{10, 20, 30, 40}, {50, 77, 60, 70}, {33, 22, 88, 99}, {21, 66, 65, 21}};
    int i, j;
    for (i = 0; i < myarray.length; i ++) {
        for (j = 0; j < myarray.length; j ++) {
            int temp = myarray [i] [j];
            myarray [i] [j] = 0;
            List < Integer > rowvalues = Arrays.asList (Arrays.asList (myarray).get (i));
            Boolean b = rowvalues.contains (temp);
            if (b == true) {
                System.out.println ("duplicate at [" + i + "][" + j + "] is: " + temp);
            }
            myarray [i] [j] = temp;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33237036_33237178_1_19
33237036_33237181_1_17
Title: How to go Another Activity from Android ListView 
----------------------------------------

@Override
public void onItemClick (AdapterView < ? > arg0, View arg1, int position, long arg3) {
    EntryItem item = (EntryItem) items.get (position);
    Toast.makeText (this, "You clicked " + item.Designation, Toast.LENGTH_SHORT).show ();
    if (position = 0) {
        Intent intent = new Intent (Main_Activity.this, Android.class);
        startActivity (intent);
    } else if (position = 1) {
        Intent intent = new Intent (Main_Activity.this, Windows.class);
        startActivity (intent);
    } else if (position = 2) {
        Intent intent = new Intent (Main_Activity.this, Apple.class);
        startActivity (intent);
    } else if (position = 3) {
        Intent intent = new Intent (Main_Activity.this, Blackberry.class);
        startActivity (intent);
    }

}
----------------------------------------

@Override
public void onItemClick (AdapterView < ? > arg0, View arg1, int position, long arg3) {
    EntryItem item = (EntryItem) items.get (position);
    Toast.makeText (this, "You clicked " + item.Designation, Toast.LENGTH_SHORT).show ();
    if (position == 1) {
        Intent intent = new Intent (Main_Activity.this, Android.class);
        startActivity (intent);
    }
    if (position == 2) {
        Intent intent = new Intent (Main_Activity.this, Apple.class);
        startActivity (intent);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33254745_33255264_28_49
33254745_33295606_52_64
Title: Cannot take picture or choose image from gallery 
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (requestCode == RESULT_LOAD_IMAGE && resultCode == RESULT_OK && null != data) {
        Uri selectedImage = data.getData ();
        String [] filePathColumn = {MediaStore.Images.Media.DATA};
        Cursor cursor = getContentResolver ().query (selectedImage, filePathColumn, null, null, null);
        cursor.moveToFirst ();
        int columnIndex = cursor.getColumnIndex (filePathColumn [0]);
        String picturePath = cursor.getString (columnIndex);
        cursor.close ();
        ImageView imageView = (ImageView) findViewById (R.id.imgView);
        imageView.setImageBitmap (BitmapFactory.decodeFile (picturePath));
    }
}
----------------------------------------

protected void onActivityResult (int requestCode, int resultCode, Intent data) {
    super.onActivityResult (requestCode, resultCode, data);
    if (resultCode == RESULT_OK) {
        if (requestCode == IMAGE_REQUEST_CODE) {
            fileUri = data.getData ();
            Log.i (getClass ().getName (), "fileUri" + fileUri);
        } else {
            Log.i (getClass ().getName (), fileUri);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33254745_33255264_7_24
33254745_33255427_7_37
Title: Cannot take picture or choose image from gallery 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    Button buttonLoadImage = (Button) findViewById (R.id.buttonLoadPicture);
    buttonLoadImage.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View arg0) {
            Intent i = new Intent (Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
            startActivityForResult (i, RESULT_LOAD_IMAGE);
        }}

    );
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    final String dir = Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_PICTURES) + "/picFolder/";
    File newdir = new File (dir);
    newdir.mkdirs ();
    Button capture = (Button) findViewById (R.id.btnCapture);
    capture.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            count ++;
            String file = dir + count + ".jpg";
            File newfile = new File (file);
            try {
                newfile.createNewFile ();
            } catch (IOException e) {
            }
            Uri outputFileUri = Uri.fromFile (newfile);
            Intent cameraIntent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
            cameraIntent.putExtra (MediaStore.EXTRA_OUTPUT, outputFileUri);
            startActivityForResult (cameraIntent, TAKE_PHOTO_CODE);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33254745_33255264_7_24
33254745_33295606_8_27
Title: Cannot take picture or choose image from gallery 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    Button buttonLoadImage = (Button) findViewById (R.id.buttonLoadPicture);
    buttonLoadImage.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View arg0) {
            Intent i = new Intent (Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
            startActivityForResult (i, RESULT_LOAD_IMAGE);
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Intent intent = new Intent ();
    intent.setType ("image/*");
    intent.setAction (Intent.ACTION_GET_CONTENT);
    startActivityForResult (Intent.createChooser (intent, "Select Picture"), IMAGE_REQUEST_CODE);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    fileUri = Uri.fromFile (GetOutputMediaFile ());
    intent.putExtra (MediaStore.EXTRA_OUTPUT, fileUri);
    startActivityForResult (intent, CAMERA_REQUEST_CODE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33254745_33255427_7_37
33254745_33295606_8_27
Title: Cannot take picture or choose image from gallery 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.main);
    final String dir = Environment.getExternalStoragePublicDirectory (Environment.DIRECTORY_PICTURES) + "/picFolder/";
    File newdir = new File (dir);
    newdir.mkdirs ();
    Button capture = (Button) findViewById (R.id.btnCapture);
    capture.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            count ++;
            String file = dir + count + ".jpg";
            File newfile = new File (file);
            try {
                newfile.createNewFile ();
            } catch (IOException e) {
            }
            Uri outputFileUri = Uri.fromFile (newfile);
            Intent cameraIntent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
            cameraIntent.putExtra (MediaStore.EXTRA_OUTPUT, outputFileUri);
            startActivityForResult (cameraIntent, TAKE_PHOTO_CODE);
        }}

    );
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Intent intent = new Intent ();
    intent.setType ("image/*");
    intent.setAction (Intent.ACTION_GET_CONTENT);
    startActivityForResult (Intent.createChooser (intent, "Select Picture"), IMAGE_REQUEST_CODE);
    Intent intent = new Intent (MediaStore.ACTION_IMAGE_CAPTURE);
    fileUri = Uri.fromFile (GetOutputMediaFile ());
    intent.putExtra (MediaStore.EXTRA_OUTPUT, fileUri);
    startActivityForResult (intent, CAMERA_REQUEST_CODE);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33272802_33272877_1_30
33272802_33272929_47_77
Title: Java Fast Food Menu (using methods) 
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    double runningTotal = 0;
    do {
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                runningTotal += itemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                runningTotal += itemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                runningTotal += itemPrice (foodItem);
                break;
            case 4 :
                done (runningTotal);
                break;
            default :
                System.out.println ("Invalid option.");
        }
    } while (ordering);
    System.out.println ("Total amount: " + runningTotal);
}
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    do {
        double runningTotal = 0;
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                itemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                itemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                itemPrice (foodItem);
                break;
            case 4 :
                done ();
                break;
            default :
                System.out.println ("Invalid option.");
        }
    } while (ordering);
    {
    }}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33272802_33272877_1_30
33272802_52336520_10_40
Title: Java Fast Food Menu (using methods) 
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    double runningTotal = 0;
    do {
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                runningTotal += itemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                runningTotal += itemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                runningTotal += itemPrice (foodItem);
                break;
            case 4 :
                done (runningTotal);
                break;
            default :
                System.out.println ("Invalid option.");
        }
    } while (ordering);
    System.out.println ("Total amount: " + runningTotal);
}
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    double runningTotal = 0;
    while (ordering) {
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                runningTotal += ItemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                runningTotal += ItemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                runningTotal += ItemPrice (foodItem);
                break;
            case 4 :
                done (runningTotal);
                break;
            default :
                System.out.println ("Invalid option.");
        }
    }
    System.out.println ("Total amount: $" + runningTotal);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33272802_33272929_47_77
33272802_52336520_10_40
Title: Java Fast Food Menu (using methods) 
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    do {
        double runningTotal = 0;
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                itemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                itemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                itemPrice (foodItem);
                break;
            case 4 :
                done ();
                break;
            default :
                System.out.println ("Invalid option.");
        }
    } while (ordering);
    {
    }}
----------------------------------------

public static void main (String [] args) {
    int menuOption;
    int foodItem = 0;
    input = new Scanner (System.in);
    double runningTotal = 0;
    while (ordering) {
        menu ();
        menuOption = input.nextInt ();
        switch (menuOption) {
            case 1 :
                foodItem = 1;
                runningTotal += ItemPrice (foodItem);
                break;
            case 2 :
                foodItem = 2;
                runningTotal += ItemPrice (foodItem);
                break;
            case 3 :
                foodItem = 3;
                runningTotal += ItemPrice (foodItem);
                break;
            case 4 :
                done (runningTotal);
                break;
            default :
                System.out.println ("Invalid option.");
        }
    }
    System.out.println ("Total amount: $" + runningTotal);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33280805_33281137_5_20
33280805_33281724_1_27
Title: Reading many strings input in Java with scanner 
----------------------------------------

public static void main (String args []) {
    Scanner input = new Scanner (System.in);
    String answer = input.nextLine ();
    switch (answer) {
        case "Mile End" :
            System.out.println (answer + " is in Zone 2");
            break;
        case "Hobbitland" :
            System.out.println (answer + " is in Zone 42");
            break;
        default :
            System.out.println ("That is not a Station, please try again");
            break;
    }
}
----------------------------------------

public static void main (String args []) {
    Map < String, List < String > > zoneMap = createZoneMap ();
    Scanner scan = new Scanner (System.in);
    String input;
    while (true) {
        input = scan.nextLine ();
        if (input.equalsIgnoreCase ("quit")) {
            System.out.println ("Exiting...");
            System.exit (1);
        }
        String zone = findZone (zoneMap, input);
        if (zone != null) {
            System.out.println (input + " is in " + zone);
        } else {
            System.out.println ("That is not a Station, please try again");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33287056_33287203_6_27
33287056_33287292_6_31
Title: "How to check anything in array appears as a substring in the title" 
----------------------------------------

public static void main (String args []) {
    String [] myFirstStringArray = new String [] {"INDIABULLS HOUSING FINANCE LTD.", "INDIABULLS REAL ESTATE LTD.",};
    try {
        List < String > stringList = Arrays.asList (myFirstStringArray);
        String title = "INDIABULLS HOUSING FINANCE LTD. Q2 NET UP 24% AT RS 555 CR";
        String [] titleWords = title.toUpperCase ().split (" ");
        for (String check : stringList) {
            if (title.indexOf (check) >= 0) {
                System.out.println ("Yes");
                break;
            } else {
                System.out.println ("No");
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    String [] myFirstStringArray = new String [] {"INDIABULLS HOUSING FINANCE LTD.", "INDIABULLS REAL ESTATE LTD.",};
    try {
        List < String > wordList = Arrays.asList (myFirstStringArray);
        String title = "INDIABULLS HOUSING FINANCE Q2 NET UP 24% AT RS 555 CR";
        String [] titleWords = title.toUpperCase ().split (" ");
        for (String word : titleWords) {
            boolean found = false;
            for (String list : wordList) {
                if (list.contains (word)) {
                    System.out.println ("Yes");
                    found = true;
                    break;
                } else {
                    System.out.println ("No");
                }
            }
            if (found) {
                break;
            }
        }
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33289212_33289337_1_13
33289212_33290045_1_12
Title: Method to remove from int 
----------------------------------------

public static int evenDigits (int n) {
    int res = 0;
    int mag = 0;
    while (n > 9) {
        int digit = n % 10;
        n /= 10;
        if (digit % 2 == 0) {
            res += Math.pow (10, mag) * digit;
            mag ++;
        }
    }
    return res;
}
----------------------------------------

public static int evenDigits (int n) {
    if ((n & 1) != 0) {
        return evenDigits (n / 10);
    }
    if (n < 10) {
        return n;
    }
    return n % 10 + evenDigits (n / 10) * 10;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33290785_33291050_1_35
33290785_33291143_1_20
Title: Throwing an exception when item not found - java 
----------------------------------------

@Override
public void remove (IBookItem book) throws BookStoreException {
    for (Iterator < BookEntry < String, ArrayList < BookItem > > > it = titleMap.iterator ();
    it.hasNext ();) {
        BookEntry < String, ArrayList < BookItem > > bookEntry = (BookEntry < String, ArrayList < BookItem > >) it.next ();
        if (bookEntry.getValue ().equals (book.getTitle ())) {
            bookEntry.getValue ().remove (book);
            titleMap.remove ();
            System.out.println ("book Removed (via titleMap): " + book);
            return;
        }
    }
    for (Iterator < BookEntry < String, ArrayList < BookItem > > > it = titleMap.iterator ();
    it.hasNext ();) {
        BookEntry < String, ArrayList < BookItem > > bookEntry = (BookEntry < String, ArrayList < BookItem > >) it.next ();
        if (bookEntry.getValue ().equals (book.getSeller ())) {
            bookEntry.getValue ().remove (book);
            sellerMap.remove ();
            System.out.println ("Book Removed (via sellerMap): " + book);
            return;
        }
    }
    for (Iterator < BookEntry < String, ArrayList < BookItem > > > it = titleMap.iterator ();
    it.hasNext ();) {
        BookEntry < String, ArrayList < BookItem > > bookEntry = (BookEntry < String, ArrayList < BookItem > >) it.next ();
        if (bookEntry.getValue ().equals (book.getPrice ())) {
            bookEntry.getValue ().remove (book);
            titleMap.remove ();
            System.out.println ("Book Removed (via priceMap): " + book);
            return;
        }
    }
    throw new BookStoreException ();
}
----------------------------------------

@Override
public void remove (IBookItem book) throws BookStoreException {
    boolean itemFound = false;
    for (Iterator < BookEntry < String, ArrayList < BookItem > > > it = titleMap.iterator ();
    it.hasNext ();) {
        BookEntry < String, ArrayList < BookItem > > bookEntry = (BookEntry < String, ArrayList < BookItem > >) it.next ();
        if (bookEntry.getValue ().equals (book.getTitle ())) {
            itemFound = true;
            bookEntry.getValue ().remove (book);
            titleMap.remove ();
            System.out.println ("book Removed (via titleMap): " + book);
        }
    }
    if (! itemFound) {
        throw new BookStoreException ("Item not found!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33291838_33291963_1_42
33291838_33292451_1_46
Title: Recursive Function not returning from base condition 
----------------------------------------

public static char BackTrace (char [] [] Maze, int x, int y) {
    char direction = 'q';
    if (x + 1 < Maze.length && Maze [x + 1] [y] == '.') {
        direction = 'd';
    } else if (x - 1 >= 0 && Maze [x - 1] [y] == '.') {
        direction = 'u';
    } else if (y + 1 < Maze [x].length && Maze [x] [y + 1] == '.') {
        direction = 'r';
    } else if (y - 1 >= 0 && Maze [x] [y - 1] == '.') {
        direction = 'l';
    } else {
        Maze [x] [y] = '+';
        if (x + 1 < Maze.length && Maze [x + 1] [y] == '#') {
            direction = BackTrace (Maze, x + 1, y);
        } else if (x - 1 >= 0 && Maze [x - 1] [y] == '#') {
            direction = BackTrace (Maze, x - 1, y);
        } else if (y + 1 < Maze [x].length && Maze [x] [y + 1] == '#') {
            direction = BackTrace (Maze, x, y + 1);
        } else if (y - 1 >= 0 && Maze [x] [y - 1] == '#') {
            direction = BackTrace (Maze, x, y - 1);
        }

    }

    return direction;
}
----------------------------------------

public static char BackTrace (char [] [] Maze, int x, int y) {
    char direction = 'q';
    if (Maze [x + 1] [y] == '.') {
        direction = 'd';
    } else if (Maze [x - 1] [y] == '.') {
        direction = 'u';
    } else if (Maze [x] [y + 1] == '.') {
        direction = 'r';
    } else if (Maze [x] [y - 1] == '.') {
        direction = 'l';
    } else {
        Maze [x] [y] = '+';
        if (Maze [x + 1] [y] == 'X') {
            direction = BackTrace (Maze, x + 1, y);
            return direction;
        } else if (Maze [x - 1] [y] == 'X') {
            direction = BackTrace (Maze, x - 1, y);
            return direction;
        } else if (Maze [x] [y + 1] == 'X') {
            direction = BackTrace (Maze, x, y + 1);
            return direction;
        } else if (Maze [x] [y - 1] == 'X') {
            direction = BackTrace (Maze, x, y - 1);
            return direction;
        }

    }

    return direction;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33295483_33351383_14_28
33295483_33351383_1_12
Title: How can i extract image from button icon in PDF using Apache PDFBox? 
----------------------------------------

public void extractAnnotationImages (PDPage page, String pageFormat) throws IOException {
    List < PDAnnotation > annotations = page.getAnnotations ();
    if (annotations == null) return;

    for (int i = 0;
    i < annotations.size (); i ++) {
        PDAnnotation annotation = annotations.get (i);
        String annotationFormat = annotation.getAnnotationName () != null && annotation.getAnnotationName ().length () > 0 ? String.format (pageFormat, "-" + annotation.getAnnotationName () + "%s", "%s") : String.format (pageFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (annotation, annotationFormat);
    }
}
----------------------------------------

public void extractAnnotationImages (PDDocument document, String fileNameFormat) throws IOException {
    List < PDPage > pages = document.getDocumentCatalog ().getAllPages ();
    if (pages == null) return;

    for (int i = 0;
    i < pages.size (); i ++) {
        String pageFormat = String.format (fileNameFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (pages.get (i), pageFormat);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33295483_33351383_14_28
33295483_33351383_50_68
Title: How can i extract image from button icon in PDF using Apache PDFBox? 
----------------------------------------

public void extractAnnotationImages (PDPage page, String pageFormat) throws IOException {
    List < PDAnnotation > annotations = page.getAnnotations ();
    if (annotations == null) return;

    for (int i = 0;
    i < annotations.size (); i ++) {
        PDAnnotation annotation = annotations.get (i);
        String annotationFormat = annotation.getAnnotationName () != null && annotation.getAnnotationName ().length () > 0 ? String.format (pageFormat, "-" + annotation.getAnnotationName () + "%s", "%s") : String.format (pageFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (annotation, annotationFormat);
    }
}
----------------------------------------

public void extractAnnotationImages (PDAppearanceStream appearance, String appearanceFormat) throws IOException {
    PDResources resources = appearance.getResources ();
    if (resources == null) return;

    Map < String, PDXObject > xObjects = resources.getXObjects ();
    if (xObjects == null) return;

    for (Map.Entry < String, PDXObject > entry : xObjects.entrySet ()) {
        PDXObject xObject = entry.getValue ();
        String xObjectFormat = String.format (appearanceFormat, "-" + entry.getKey () + "%s", "%s");
        if (xObject instanceof PDXObjectForm) extractAnnotationImages ((PDXObjectForm) xObject, xObjectFormat);
        else if (xObject instanceof PDXObjectImage) extractAnnotationImages ((PDXObjectImage) xObject, xObjectFormat);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33295483_33351383_14_28
33295483_33351383_70_88
Title: How can i extract image from button icon in PDF using Apache PDFBox? 
----------------------------------------

public void extractAnnotationImages (PDPage page, String pageFormat) throws IOException {
    List < PDAnnotation > annotations = page.getAnnotations ();
    if (annotations == null) return;

    for (int i = 0;
    i < annotations.size (); i ++) {
        PDAnnotation annotation = annotations.get (i);
        String annotationFormat = annotation.getAnnotationName () != null && annotation.getAnnotationName ().length () > 0 ? String.format (pageFormat, "-" + annotation.getAnnotationName () + "%s", "%s") : String.format (pageFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (annotation, annotationFormat);
    }
}
----------------------------------------

public void extractAnnotationImages (PDXObjectForm form, String imageFormat) throws IOException {
    PDResources resources = form.getResources ();
    if (resources == null) return;

    Map < String, PDXObject > xObjects = resources.getXObjects ();
    if (xObjects == null) return;

    for (Map.Entry < String, PDXObject > entry : xObjects.entrySet ()) {
        PDXObject xObject = entry.getValue ();
        String xObjectFormat = String.format (imageFormat, "-" + entry.getKey () + "%s", "%s");
        if (xObject instanceof PDXObjectForm) extractAnnotationImages ((PDXObjectForm) xObject, xObjectFormat);
        else if (xObject instanceof PDXObjectImage) extractAnnotationImages ((PDXObjectImage) xObject, xObjectFormat);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33295483_33351383_1_12
33295483_33351383_50_68
Title: How can i extract image from button icon in PDF using Apache PDFBox? 
----------------------------------------

public void extractAnnotationImages (PDDocument document, String fileNameFormat) throws IOException {
    List < PDPage > pages = document.getDocumentCatalog ().getAllPages ();
    if (pages == null) return;

    for (int i = 0;
    i < pages.size (); i ++) {
        String pageFormat = String.format (fileNameFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (pages.get (i), pageFormat);
    }
}
----------------------------------------

public void extractAnnotationImages (PDAppearanceStream appearance, String appearanceFormat) throws IOException {
    PDResources resources = appearance.getResources ();
    if (resources == null) return;

    Map < String, PDXObject > xObjects = resources.getXObjects ();
    if (xObjects == null) return;

    for (Map.Entry < String, PDXObject > entry : xObjects.entrySet ()) {
        PDXObject xObject = entry.getValue ();
        String xObjectFormat = String.format (appearanceFormat, "-" + entry.getKey () + "%s", "%s");
        if (xObject instanceof PDXObjectForm) extractAnnotationImages ((PDXObjectForm) xObject, xObjectFormat);
        else if (xObject instanceof PDXObjectImage) extractAnnotationImages ((PDXObjectImage) xObject, xObjectFormat);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33295483_33351383_1_12
33295483_33351383_70_88
Title: How can i extract image from button icon in PDF using Apache PDFBox? 
----------------------------------------

public void extractAnnotationImages (PDDocument document, String fileNameFormat) throws IOException {
    List < PDPage > pages = document.getDocumentCatalog ().getAllPages ();
    if (pages == null) return;

    for (int i = 0;
    i < pages.size (); i ++) {
        String pageFormat = String.format (fileNameFormat, "-" + i + "%s", "%s");
        extractAnnotationImages (pages.get (i), pageFormat);
    }
}
----------------------------------------

public void extractAnnotationImages (PDXObjectForm form, String imageFormat) throws IOException {
    PDResources resources = form.getResources ();
    if (resources == null) return;

    Map < String, PDXObject > xObjects = resources.getXObjects ();
    if (xObjects == null) return;

    for (Map.Entry < String, PDXObject > entry : xObjects.entrySet ()) {
        PDXObject xObject = entry.getValue ();
        String xObjectFormat = String.format (imageFormat, "-" + entry.getKey () + "%s", "%s");
        if (xObject instanceof PDXObjectForm) extractAnnotationImages ((PDXObjectForm) xObject, xObjectFormat);
        else if (xObject instanceof PDXObjectImage) extractAnnotationImages ((PDXObjectImage) xObject, xObjectFormat);

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33309808_33311583_113_126
33309808_33311583_24_37
Title: Thread and JLabel in Swing- Not working properly 
----------------------------------------

public void run () {
    this.initialCount = counter.getCount ();
    while (true) {
        if (counter.getCount () != initialCount) {
            try {
                Thread.sleep (1000);
            } catch (InterruptedException ex) {
            }
            initialCount = counter.getCount ();
            counter.setText ("After sleep at -> " + initialCount);
        }
        Thread.yield ();
    }
}
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new CounterPane ());
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312289_1_18
33312176_33312324_1_19
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (final String [] args) {
    System.out.println ("Please enter a sentence to parse.");
    try (final Scanner input = new Scanner (System.in)) {
        final String userString = input.nextLine ();
        final long [] symbols = new long [26];
        for (final char c : userString.toCharArray ()) {
            if ((c >= 'a') && (c <= 'z')) {
                symbols [c - 'a'] ++;
            } else if ((c >= 'A') && (c <= 'Z')) {
                symbols [c - 'A'] ++;
            }

        }
        for (int i = 0;
        i < 26; i ++) {
            System.out.println ((char) ('a' + i) + ": " + symbols [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    char [] array = new char [] {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    System.out.println ("Please enter a sentence to parse.");
    String userString = input.nextLine ();
    HashMap < Character, Integer > charint = new HashMap < > ();
    for (Character c : userString.toCharArray ()) {
        if (charint.containsKey (c)) charint.replace (c, charint.get (c).intValue () + 1);
        else charint.put (c, 1);

    }
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i] + " : " + (charint.get (array [i]) == null ? "0" : charint.get (array [i])));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312289_1_18
33312176_33312729_1_31
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (final String [] args) {
    System.out.println ("Please enter a sentence to parse.");
    try (final Scanner input = new Scanner (System.in)) {
        final String userString = input.nextLine ();
        final long [] symbols = new long [26];
        for (final char c : userString.toCharArray ()) {
            if ((c >= 'a') && (c <= 'z')) {
                symbols [c - 'a'] ++;
            } else if ((c >= 'A') && (c <= 'Z')) {
                symbols [c - 'A'] ++;
            }

        }
        for (int i = 0;
        i < 26; i ++) {
            System.out.println ((char) ('a' + i) + ": " + symbols [i]);
        }
    }
}
----------------------------------------

public static void main (String args []) {
    Map < Character, Integer > countMap = new TreeMap < > ();
    Integer count;
    String inputStr = "Hello WORLD";
    char [] arr = inputStr.toCharArray ();
    for (Character c : arr) {
        count = 0;
        if (c == ' ') continue;

        if (countMap.containsKey (c)) count = countMap.get (c);

        countMap.put (c, count + 1);
    }
    Iterator < Entry < Character, Integer > > it = countMap.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry < Character, Integer > pair = (Map.Entry < Character, Integer >) it.next ();
        System.out.println (pair.getKey () + " = " + pair.getValue ());
        it.remove ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312289_1_18
33312176_48873711_2_29
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (final String [] args) {
    System.out.println ("Please enter a sentence to parse.");
    try (final Scanner input = new Scanner (System.in)) {
        final String userString = input.nextLine ();
        final long [] symbols = new long [26];
        for (final char c : userString.toCharArray ()) {
            if ((c >= 'a') && (c <= 'z')) {
                symbols [c - 'a'] ++;
            } else if ((c >= 'A') && (c <= 'Z')) {
                symbols [c - 'A'] ++;
            }

        }
        for (int i = 0;
        i < 26; i ++) {
            System.out.println ((char) ('a' + i) + ": " + symbols [i]);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String s;
    s = "ASGFDTRRCJFYDCJHGJ";
    char ch [] = s.toCharArray ();
    int i, j, k, c = 1, n;
    for (i = 0; i < s.length (); i ++);

    n = i;
    System.out.println ("number of charaters in string = " + n);
    for (i = 0; i < n; i ++) {
        for (j = i + 1; j < n; j ++) {
            if (ch [j] == ch [i]) {
                c ++;
                for (k = j; k < n - 1; k ++) {
                    ch [k] = ch [k + 1];
                }
                n --;
            }
        }
        System.out.println ("alphabet " + ch [i] + " occured " + c + " times");
        c = 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312324_1_19
33312176_33312729_1_31
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    char [] array = new char [] {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    System.out.println ("Please enter a sentence to parse.");
    String userString = input.nextLine ();
    HashMap < Character, Integer > charint = new HashMap < > ();
    for (Character c : userString.toCharArray ()) {
        if (charint.containsKey (c)) charint.replace (c, charint.get (c).intValue () + 1);
        else charint.put (c, 1);

    }
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i] + " : " + (charint.get (array [i]) == null ? "0" : charint.get (array [i])));
    }
}
----------------------------------------

public static void main (String args []) {
    Map < Character, Integer > countMap = new TreeMap < > ();
    Integer count;
    String inputStr = "Hello WORLD";
    char [] arr = inputStr.toCharArray ();
    for (Character c : arr) {
        count = 0;
        if (c == ' ') continue;

        if (countMap.containsKey (c)) count = countMap.get (c);

        countMap.put (c, count + 1);
    }
    Iterator < Entry < Character, Integer > > it = countMap.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry < Character, Integer > pair = (Map.Entry < Character, Integer >) it.next ();
        System.out.println (pair.getKey () + " = " + pair.getValue ());
        it.remove ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312324_1_19
33312176_48873711_2_29
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    char [] array = new char [] {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    System.out.println ("Please enter a sentence to parse.");
    String userString = input.nextLine ();
    HashMap < Character, Integer > charint = new HashMap < > ();
    for (Character c : userString.toCharArray ()) {
        if (charint.containsKey (c)) charint.replace (c, charint.get (c).intValue () + 1);
        else charint.put (c, 1);

    }
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i] + " : " + (charint.get (array [i]) == null ? "0" : charint.get (array [i])));
    }
}
----------------------------------------

public static void main (String [] args) {
    String s;
    s = "ASGFDTRRCJFYDCJHGJ";
    char ch [] = s.toCharArray ();
    int i, j, k, c = 1, n;
    for (i = 0; i < s.length (); i ++);

    n = i;
    System.out.println ("number of charaters in string = " + n);
    for (i = 0; i < n; i ++) {
        for (j = i + 1; j < n; j ++) {
            if (ch [j] == ch [i]) {
                c ++;
                for (k = j; k < n - 1; k ++) {
                    ch [k] = ch [k + 1];
                }
                n --;
            }
        }
        System.out.println ("alphabet " + ch [i] + " occured " + c + " times");
        c = 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312176_33312729_1_31
33312176_48873711_2_29
Title: Count the occurrence of every alphabet from a string 
----------------------------------------

public static void main (String args []) {
    Map < Character, Integer > countMap = new TreeMap < > ();
    Integer count;
    String inputStr = "Hello WORLD";
    char [] arr = inputStr.toCharArray ();
    for (Character c : arr) {
        count = 0;
        if (c == ' ') continue;

        if (countMap.containsKey (c)) count = countMap.get (c);

        countMap.put (c, count + 1);
    }
    Iterator < Entry < Character, Integer > > it = countMap.entrySet ().iterator ();
    while (it.hasNext ()) {
        Map.Entry < Character, Integer > pair = (Map.Entry < Character, Integer >) it.next ();
        System.out.println (pair.getKey () + " = " + pair.getValue ());
        it.remove ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String s;
    s = "ASGFDTRRCJFYDCJHGJ";
    char ch [] = s.toCharArray ();
    int i, j, k, c = 1, n;
    for (i = 0; i < s.length (); i ++);

    n = i;
    System.out.println ("number of charaters in string = " + n);
    for (i = 0; i < n; i ++) {
        for (j = i + 1; j < n; j ++) {
            if (ch [j] == ch [i]) {
                c ++;
                for (k = j; k < n - 1; k ++) {
                    ch [k] = ch [k + 1];
                }
                n --;
            }
        }
        System.out.println ("alphabet " + ch [i] + " occured " + c + " times");
        c = 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312469_34773825_4_30
33312469_49977094_5_28
Title: find prime number using while loop in java 
----------------------------------------

public static void main (String args []) {
    int no, flag = 0, a, b;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter any no: ");
    no = sc.nextInt ();
    a = 1;
    while (a <= no) {
        flag = 0;
        b = 2;
        while (b <= a>> 1) {
            if (a % b == 0) {
                flag = 1;
                break;
            }
            b ++;
        }
        if (flag == 0) {
            System.out.println ("Prime number" + a);
        } else {
            System.out.println ("Not Prime number" + a);
        }
        a ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    boolean checkPrime = true;
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter any number find prime number in java : ");
    int number = sc.nextInt ();
    int a = 2;
    while (a <= number / 2) {
        if (number % a == 0) {
            checkPrime = false;
            break;
        }
        a ++;
    }
    if (checkPrime) System.out.println (number + " is a prime number.");
    else System.out.println (number + " is not a prime number.");

    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33312889_33312967_1_15
33312889_33312982_2_12
Title: Java Fahrenheit=Celsius Program Issue 
----------------------------------------

public static void main (String [] args) {
    double c = 40;
    double f;
    while (c >= 30) {
        f = c * 9 / 5 + 32;
        System.out.println (c + "|" + f);
        c --;
    }
}
----------------------------------------

public static void main (String [] args) {
    double c = 40;
    double f;
    System.out.println ("Celsius Fahrenheit");
    while (c >= 30) {
        f = c * 9 / 5 + 32;
        System.out.println ((c) + "   " + Math.round (f * 100.0) / 100.0);
        c --;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33316020_33316064_1_13
33316020_33316097_10_20
Title: My .dat file can't display double number 
----------------------------------------

public static void main (String [] args) throws IOException {
    DataOutputStream output = new DataOutputStream (new FileOutputStream ("c:/tmp/sales.dat"));
    output.writeUTF ("San Francisco: ");
    output.writeDouble (1123.456);
    output.close ();
    DataInputStream reader = new DataInputStream (new FileInputStream ("c:/tmp/sales.dat"));
    String test = String.format ("%s%s", reader.readUTF (), reader.readDouble ());
    System.out.println (test);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String name = "C:/Users/hsivakumar/Downloads/sales.dat";
    DataInputStream reader = new DataInputStream (new FileInputStream (name));
    StringBuilder builder = new StringBuilder ();
    builder.append (reader.readUTF ());
    builder.append (reader.readDouble ());
    reader.close ();
    System.out.println (builder);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33319926_33319974_1_25
33319926_33320263_1_25
Title: Need help simplifying a method in my code 
----------------------------------------

static void determineGrade (int exam, int res) {
    String grade = null;
    if (res > 84 && res < 101) {
        grade = "HD";
    } else if (res > 74 && res < 85) {
        grade = "D";
    } else if (res > 64 && res < 75) {
        grade = "C";
    } else if (res > 49 && res < 65) {
        grade = "P";
    } else if (res < 50) {
        grade = "F";
    }

    System.out.printf ("Your grade for exam %d is %s%n", exam, grade);
}
----------------------------------------

static String determineGrade () {
    if (res1 > 100) {
        return null;
    } else if (res1 < 50) {
        return "F";
    } else if (res1 < 65) {
        return "P";
    } else if (res1 < 75) {
        return "C";
    } else if (res1 < 85) {
        return "D";
    } else {
        return "HD";
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33319926_33320024_18_44
33319926_33320263_1_25
Title: Need help simplifying a method in my code 
----------------------------------------

static void determineGrade (int res1) {
    String grade = null;
    if (res1 > 84 && res1 < 101) {
        grade = "HD";
    } else if (res1 > 74 && res1 < 85) {
        grade = "D";
    } else if (res1 > 64 && res1 < 75) {
        grade = "C";
    } else if (res1 > 49 && res1 < 65) {
        grade = "P";
    } else if (res1 < 50) {
        grade = "F";
    }

    System.out.println ("Your grade is " + grade);
}
----------------------------------------

static String determineGrade () {
    if (res1 > 100) {
        return null;
    } else if (res1 < 50) {
        return "F";
    } else if (res1 < 65) {
        return "P";
    } else if (res1 < 75) {
        return "C";
    } else if (res1 < 85) {
        return "D";
    } else {
        return "HD";
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
3332486_14487608_5_17
3332486_5763659_12_50
Title: Program to get all files within a directory in Java 
----------------------------------------

public static void main (String [] args) {
    try {
        Files f = new File ("C:\\");
        String a [];
        a = f.list ();
        for (int i = 0;
        i < a.length; i ++) {
            System.out.println (a [i]);
        }
    } catch (Exception e) {
        System.err.println (e);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    String path = "C:/";
    ArrayList < String > Files = new ArrayList < String > ();
    LinkedList < String > Dir = new LinkedList < String > ();
    File f = new File (path);
    Dir.add (f.getAbsolutePath ());
    while (! Dir.isEmpty ()) {
        f = new File (Dir.pop ());
        if (f.isFile ()) {
            Files.add (f.getAbsolutePath ());
        } else {
            String arr [] = f.list ();
            try {
                for (int i = 0;
                i < arr.length; i ++) {
                    Dir.add (f.getAbsolutePath () + "/" + arr [i]);
                }
            } catch (NullPointerException exp) {
                Dir.remove (f.getAbsoluteFile ());
            }
        }
    }
    for (int i = 0;
    i < Files.size (); i ++) {
        System.out.println (Files.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33326118_33326173_1_12
33326118_33326177_6_15
Title: Reading Character in Java 
----------------------------------------

public static void main (String args []) {
    try {
        InputStreamReader instream = new InputStreamReader (System.in);
        BufferedReader stdin = new BufferedReader (instream);
        char c = (char) stdin.read ();
    } catch (IOException ioe) {
        ioe.printStackTrace ();
    } catch (Exception err) {
        err.printStackTrace ();
    }
}
----------------------------------------

public static void main (String args []) {
    try {
        InputStreamReader instream = new InputStreamReader (System.in);
        BufferedReader stdin = new BufferedReader (instream);
        char c = (char) stdin.read ();
    } catch (IOException ex) {
        System.out.println ("Error : " + ex.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33326538_33326611_1_12
33326538_33326680_9_19
Title: How do I call a function I wrote from the main class? 
----------------------------------------

public boolean remove (int value) {
    Boolean bool = false;
    for (int i = 0;
    i < values.length; i ++) {
        if (values [i] == value) {
            values [i] = - 1;
            if (values [i] == - 1) bool = true;

        }
    }
    return bool;
}
----------------------------------------

public static boolean remove (int value) {
    for (Integer element : col) {
        if (element == value) {
            col.remove (element);
            return true;
        }
    }
    return false;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33326572_33327102_10_31
33326572_35486086_28_36
Title: How do I properly extend Mongo's Document class? 
----------------------------------------

public User decode (BsonReader reader, DecoderContext decoderContext) {
    reader.readStartDocument ();
    String id = reader.readString ("id");
    Boolean isActive = reader.readBoolean ("isActive");
    String location = reader.readString ("location");
    Codec < Document > historyCodec = codecRegistry.get (Document.class);
    List < Document > history = new ArrayList < > ();
    reader.readStartArray ();
    while (reader.readBsonType () != BsonType.END_OF_DOCUMENT) {
        history.add (historyCodec.decode (reader, decoderContext));
    }
    reader.readEndArray ();
    reader.readEndDocument ();
    User user = new User ();
    user.setId (id);
    user.setIsActive (isActive);
    user.setLocation (location);
    user.setHistory (history);
    return user;
}
----------------------------------------

public T decode (BsonReader reader, DecoderContext decoderContext) {
    try {
        Document document = _documentCodec.decode (reader, decoderContext);
        T result = _constructor.newInstance (document);
        return result;
    } catch (Exception ex) {
        throw new MCException (ex);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33329199_39390681_2_16
33329199_50115890_3_20
Title: How to print an inclined pyramid pattern in java using for loop in java? 
----------------------------------------

public static void main (String [] args) {
    int i, j;
    int num = 7;
    for (i = 0; i <= num; i ++) {
        for (j = 0; j <= num; j ++) {
            if (isConditionMatch (num, i, j)) {
                System.out.print ("*");
            } else {
                System.out.print (" ");
            }
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner s = new Scanner (System.in);
    int row = s.nextInt ();
    System.out.println ("pattern is here");
    for (int i = 0;
    i <= row; i ++) {
        for (int j = 0;
        j <= row; j ++) {
            System.out.print (j + "");
        }
        System.out.println ();
    }
    s.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33330513_33330634_2_29
33330513_33330829_41_51
Title: Prime numbers in a given range with less complexity 
----------------------------------------

public static void main (String [] args) {
    int N = Integer.parseInt (args [0]);
    boolean [] isPrime = new boolean [N + 1];
    for (int i = 2;
    i <= N; i ++) {
        isPrime [i] = true;
    }
    for (int i = 2;
    i * i <= N; i ++) {
        if (isPrime [i]) {
            for (int j = i;
            i * j <= N; j ++) {
                isPrime [i * j] = false;
            }
        }
    }
    int primes = 0;
    for (int i = 2;
    i <= N; i ++) {
        if (isPrime [i]) primes ++;

    }
    System.out.println ("The number of primes <= " + N + " is " + primes);
}
----------------------------------------

public static void main (String [] args) {
    PrimeFinder primeFinder = new PrimeFinder (100000);
    final long start = System.currentTimeMillis ();
    primeFinder.find ();
    final long finish = System.currentTimeMillis ();
    System.out.println ("Score after " + (finish - start) + " milis.");
    primeFinder.getPrimes ().stream ().forEach ((prime) -> {
        System.out.println (prime);
    });
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33330513_33330634_2_29
33330513_33330910_1_29
Title: Prime numbers in a given range with less complexity 
----------------------------------------

public static void main (String [] args) {
    int N = Integer.parseInt (args [0]);
    boolean [] isPrime = new boolean [N + 1];
    for (int i = 2;
    i <= N; i ++) {
        isPrime [i] = true;
    }
    for (int i = 2;
    i * i <= N; i ++) {
        if (isPrime [i]) {
            for (int j = i;
            i * j <= N; j ++) {
                isPrime [i * j] = false;
            }
        }
    }
    int primes = 0;
    for (int i = 2;
    i <= N; i ++) {
        if (isPrime [i]) primes ++;

    }
    System.out.println ("The number of primes <= " + N + " is " + primes);
}
----------------------------------------

public static void main (String [] args) {
    int range = 15;
    int num = 1;
    int count = 0;
    boolean prime = true;
    ArrayList < Integer > primes = new ArrayList < > (range);
    while (num < range) {
        num = num + 1;
        prime = true;
        int numSquareRoot = (int) Math.floor (Math.pow (num, 0.5));
        for (Integer smallPrimes : primes) {
            if (numSquareRoot > numSquareRoot) {
                break;
            }
            if (num % smallPrimes == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            System.out.println (num);
            primes.add (num);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33330513_33330829_41_51
33330513_33330910_1_29
Title: Prime numbers in a given range with less complexity 
----------------------------------------

public static void main (String [] args) {
    PrimeFinder primeFinder = new PrimeFinder (100000);
    final long start = System.currentTimeMillis ();
    primeFinder.find ();
    final long finish = System.currentTimeMillis ();
    System.out.println ("Score after " + (finish - start) + " milis.");
    primeFinder.getPrimes ().stream ().forEach ((prime) -> {
        System.out.println (prime);
    });
}
----------------------------------------

public static void main (String [] args) {
    int range = 15;
    int num = 1;
    int count = 0;
    boolean prime = true;
    ArrayList < Integer > primes = new ArrayList < > (range);
    while (num < range) {
        num = num + 1;
        prime = true;
        int numSquareRoot = (int) Math.floor (Math.pow (num, 0.5));
        for (Integer smallPrimes : primes) {
            if (numSquareRoot > numSquareRoot) {
                break;
            }
            if (num % smallPrimes == 0) {
                prime = false;
                break;
            }
        }
        if (prime) {
            System.out.println (num);
            primes.add (num);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33332869_33333397_10_19
33332869_33356032_6_36
Title: Reverse two input array in java 
----------------------------------------

public static void main (String [] args) throws java.lang.Exception {
    Scanner sc = new Scanner (System.in);
    int c [] = new int [5];
    int index = 0;
    while (sc.hasNextLine ()) {
        c [index ++] = Integer.parseInt (sc.nextLine ().trim ());
    }
    System.out.println ("Before Reverse " + Arrays.toString (c));
    System.out.println ("After Reverse " + Arrays.toString (reverseArray (c)));
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    int [] arr = new int [3];
    int [] year = new int [3];
    for (int i = 0;
    i < arr.length; i ++) {
        arr [i] = in.nextInt ();
        year [i] = in.nextInt ();
        for (int j = 0;
        j < arr.length / 2; j ++) {
            int temp = arr [j];
            arr [j] = arr [arr.length - j - 1];
            arr [arr.length - j - 1] = temp;
        }
        for (int j = 0;
        j < year.length / 2; j ++) {
            int temp = year [j];
            year [j] = year [year.length - j - 1];
            year [year.length - j - 1] = temp;
        }
    }
    for (int i = 0;
    i < arr.length; i ++) {
        System.out.println ("ID :" + arr [i] + "(" + year [i] + ")");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33333007_33333114_1_13
33333007_33333358_1_14
Title: Capitalizing the first letter in a string. What am I doing wrong? 
----------------------------------------

private static String capitalize (String str) {
    StringBuilder s = new StringBuilder ();
    char ch;
    for (int i = 0;
    i < str.length (); i ++) {
        ch = str.charAt (i);
        if (i == 0 && Character.isLowerCase (ch)) {
            s.append (Character.toUpperCase (ch));
        } else {
            s.append (Character.toLowerCase (ch));
        }
    }
    return s.toString ();
}
----------------------------------------

private static String capitalize (String str) {
    String s = "";
    char ch;
    for (int i = 0;
    i < str.length (); i ++) {
        ch = str.charAt (i);
        if (i == 0 && Character.isLowerCase (ch)) {
            s += String.valueOf (Character.toUpperCase (ch));
        } else {
            s += String.valueOf (Character.toLowerCase (ch));
        }
    }
    println (s);
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33333007_33333114_1_13
33333007_33368592_1_10
Title: Capitalizing the first letter in a string. What am I doing wrong? 
----------------------------------------

private static String capitalize (String str) {
    StringBuilder s = new StringBuilder ();
    char ch;
    for (int i = 0;
    i < str.length (); i ++) {
        ch = str.charAt (i);
        if (i == 0 && Character.isLowerCase (ch)) {
            s.append (Character.toUpperCase (ch));
        } else {
            s.append (Character.toLowerCase (ch));
        }
    }
    return s.toString ();
}
----------------------------------------

private static String capitalize (String str) {
    char [] chars = str.toCharArray ();
    String caps = chars [0] + "";
    caps = caps.toUpperCase ();
    String output = caps;
    for (int i = 1;
    i < chars.length; i ++) {
        output = output + chars [i];
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33333007_33333358_1_14
33333007_33368592_1_10
Title: Capitalizing the first letter in a string. What am I doing wrong? 
----------------------------------------

private static String capitalize (String str) {
    String s = "";
    char ch;
    for (int i = 0;
    i < str.length (); i ++) {
        ch = str.charAt (i);
        if (i == 0 && Character.isLowerCase (ch)) {
            s += String.valueOf (Character.toUpperCase (ch));
        } else {
            s += String.valueOf (Character.toLowerCase (ch));
        }
    }
    println (s);
    return s;
}
----------------------------------------

private static String capitalize (String str) {
    char [] chars = str.toCharArray ();
    String caps = chars [0] + "";
    caps = caps.toUpperCase ();
    String output = caps;
    for (int i = 1;
    i < chars.length; i ++) {
        output = output + chars [i];
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
33336542_33341177_16_37
33336542_33342752_11_20
Title: JavaFX custom Fonts 
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    String currentFontFile = "English Gothic, 17th c..TTF";
    InputStream fontStream = CustomFontTest.class.getResourceAsStream (currentFontFile);
    if (fontStream != null) {
        Font bgFont = Font.loadFont (fontStream, 36);
        fontStream.close ();
        final Button button = new Button ("Press me");
        button.setFont (bgFont);
        BorderPane root = new BorderPane ();
        root.setCenter (button);
        Scene scene = new Scene (root, 500, 100);
        primaryStage.setTitle ("CustomFontTest");
        primaryStage.setScene (scene);
        primaryStage.show ();
    } else {
        throw new IOException ("Could not create font: " + currentFontFile);
    }
}
----------------------------------------

public void start (Stage primaryStage) throws Exception {
    Label label = new Label ("JavaFX Application");
    Button button = new Button ("My Button");
    VBox box = new VBox (15, label, button);
    box.setAlignment (Pos.CENTER);
    Scene scene = new Scene (box, 500, 300);
    scene.getStylesheets ().add (getClass ().getResource ("/fontstyle.css").toExternalForm ());
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
