$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19001238_19001329_11_23
19001238_42347694_8_20
Title: Remove duplicates from a Json String in Java? 
----------------------------------------

public JSONObject putOnce (String key, Object value) throws JSONException {
    Object storedValue;
    if (key != null && value != null) {
        if ((storedValue = this.opt (key)) != null) {
            if (! storedValue.equals (value)) throw new JSONException ("Duplicate key \"" + key + "\"");
            else return this;

        }
        this.put (key, value);
    }
    return this;
}
----------------------------------------

public JSONObject putOnce (String key, Object value) throws JSONException {
    Object storedValue;
    if (key != null && value != null) {
        if ((storedValue = this.opt (key)) != null) {
            if (! storedValue.toString ().equals (value.toString ())) throw new JSONException ("Duplicate key \"" + key + "\"");
            else return this;

        }
        this.put (key, value);
    }
    return this;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1900197_32584200_98_120
1900197_33191218_52_64
Title: generating Variations without repetitions / Permutations in java 
----------------------------------------

public static void main (String [] argv) {
    TestForPermutationII test = new TestForPermutationII ();
    counter = 0;
    int len = test.testsimple.length;
    int [] work = new int [len];
    test.shuff = new int [test.fact (len)] [];
    test.shuff [counter] = test.testsimple;
    work = test.testsimple;
    test.shuff = new int [test.fact (len)] [];
    counter = 0;
    test.shuff [counter] = test.testsimple;
    test.permutationGenerator (len - 1, 0);
    for (int i = 0;
    i <= counter; i ++) {
        System.out.println (test.printBuff (test.shuff [i]));
    }
    System.out.println ("Counter, cycles: " + counter + ", " + sumsum);
}
----------------------------------------

public static void main (String [] args) {
    Set < Integer > availableNumbers = new HashSet < > (0);
    for (int i = 1;
    i <= MAX_NUMBER; i ++) {
        availableNumbers.add (i);
    }
    List < String > permutations = generatePermutations (availableNumbers);
    for (String permutation : permutations) {
        System.out.println (permutation);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19012677_19012918_1_24
19012677_19012919_5_18
Title: How to use recursion in creating a binary search algorithm 
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
    int lower = 0;
    int upper = sortedArray.length - 1;
    while (lower <= upper) {
        int mid = lower + (upper - lower) / 2;
        if (intToSearch < sortedArray [mid]) upper = mid - 1;
        else if (intToSearch > sortedArray [mid]) lower = mid + 1;
        else return mid;

    }
    return - 1;
}
----------------------------------------

public static int binarySearch (int [] a, int start, int end, int target) {
    int middle = (start + end) / 2;
    if (end < start) {
        return - 1;
    }
    if (target == a [middle]) {
        return middle;
    } else if (target < a [middle]) {
        return binarySearch (a, start, middle - 1, target);
    } else {
        return binarySearch (a, middle + 1, end, target);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19012677_19012918_1_24
19012677_43847052_7_16
Title: How to use recursion in creating a binary search algorithm 
----------------------------------------

public static int binarySearch (int intToSearch, int [] sortedArray) {
    int lower = 0;
    int upper = sortedArray.length - 1;
    while (lower <= upper) {
        int mid = lower + (upper - lower) / 2;
        if (intToSearch < sortedArray [mid]) upper = mid - 1;
        else if (intToSearch > sortedArray [mid]) lower = mid + 1;
        else return mid;

    }
    return - 1;
}
----------------------------------------

private int binarySearch (int [] a, int x, int low, int high) {
    if (low > high) return - 1;

    int mid = (low + high) / 2;
    if (a [mid] == x) return mid;
    else if (a [mid] < x) return binarySearch (a, x, mid + 1, high);
    else return binarySearch (a, x, low, mid - 1);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19012677_19012919_5_18
19012677_43847052_7_16
Title: How to use recursion in creating a binary search algorithm 
----------------------------------------

public static int binarySearch (int [] a, int start, int end, int target) {
    int middle = (start + end) / 2;
    if (end < start) {
        return - 1;
    }
    if (target == a [middle]) {
        return middle;
    } else if (target < a [middle]) {
        return binarySearch (a, start, middle - 1, target);
    } else {
        return binarySearch (a, middle + 1, end, target);
    }

}
----------------------------------------

private int binarySearch (int [] a, int x, int low, int high) {
    if (low > high) return - 1;

    int mid = (low + high) / 2;
    if (a [mid] == x) return mid;
    else if (a [mid] < x) return binarySearch (a, x, mid + 1, high);
    else return binarySearch (a, x, low, mid - 1);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19012677_19751417_7_25
19012677_43046742_3_21
Title: How to use recursion in creating a binary search algorithm 
----------------------------------------

private boolean search (int [] sorted, int value, int leftIndex, int rightIndex) {
    if (leftIndex > rightIndex) {
        return false;
    }
    int middle = (rightIndex + leftIndex) / 2;
    if (sorted [middle] > value) {
        return search (sorted, value, leftIndex, middle - 1);
    } else if (sorted [middle] < value) {
        return search (sorted, value, middle + 1, rightIndex);
    } else {
        return true;
    }

}
----------------------------------------

public int search (int [] data, int target, int low, int high) {
    int retorno = - 1;
    if (low > high) return retorno;

    int middle = (high + low) / 2;
    if (target == data [middle]) {
        retorno = data [middle];
    } else if (target < data [middle] && (middle - 1 != high)) {
        retorno = search (data, target, low, middle - 1);
    } else if (target > data [middle] && (middle - 1 != low)) {
        retorno = search (data, target, middle - 1, high);
    } else if (middle - 1 == low || middle - 1 == high) {
        retorno = - 1;
    }

    return retorno;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19016357_19016435_4_15
19016357_19016570_2_20
Title: How can I improve by optimizing this piece of Java Code 
----------------------------------------

public static void main (String [] args) {
    String [] inputString = {"a1", "a2", "a3", "a4", "a5", "b1", "b2", "b3", "b4", "b5"};
    String [] outputString = new String [inputString.length];
    for (int i = 0;
    i < inputString.length / 2; i ++) {
        outputString [i * 2] = inputString [i];
        outputString [i * 2 + 1] = inputString [i + inputString.length / 2];
    }
    System.out.println (Arrays.toString (inputString));
    System.out.println (Arrays.toString (outputString));
}
----------------------------------------

public static void main (String [] args) {
    String [] inputString = {"a1", "a2", "a3", "a4", "a5", "b1", "b2", "b3", "b4", "b5"};
    Arrays.sort (inputString, new Comparator < String > () {
        private String reverse (String s) {
            return new StringBuilder (s).reverse ().toString ();
        }@Override
        public int compare (String arg0, String arg1) {
            return reverse (arg0).compareTo (reverse (arg1));
        }}

    );
    System.out.println (Arrays.toString (inputString));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19017900_19017997_4_36
19017900_19018781_3_22
Title: Displaying change java 
----------------------------------------

public static void main (String [] args) {
    float amt;
    int cents, quarter, dime, nickle, penny;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Change in Coins\n" + "----------------\n\n");
    System.out.println ("Enter the amount less than $1.00, but\n" + "more than zero.");
    System.out.print ("\nEnter amount: ");
    amt = keyboard.nextFloat ();
    keyboard.close ();
    cents = (int) (amt * 100);
    quarter = cents / 25;
    cents = cents % 25;
    dime = cents / 10;
    cents = cents % 10;
    nickle = cents / 5;
    cents %= 5;
    penny = cents;
    System.out.println ("$" + amt + " = " + quarter + " quarters, " + dime + " dimes, " + nickle + " nickles and " + penny + " pennies");
}
----------------------------------------

public static void main (String [] args) {
    double amt = getValidInputFromUser ();
    int remainingCents = (int) (amt * 100);
    int quarters = remainingCents / 25;
    remainingCents %= 25;
    int dimes = remainingCents / 10;
    remainingCents %= 10;
    int nickles = remainingCents / 5;
    remainingCents %= 5;
    int pennies = remainingCents;
    System.out.println (String.format ("Quarters %d, Dimes %d, Nickles %d, Cents %d", quarters, dimes, nickles, pennies));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19029435_19084729_124_147
19029435_19084729_163_205
Title: Asynctask fatal exception 
----------------------------------------

protected String doInBackground (Void...params) {
    String authUrl;
    String message = null;
    try {
        authUrl = mProvider.retrieveRequestToken (mConsumer, OAUTH_CALLBACK_URL);
        Intent intent = new Intent (Intent.ACTION_VIEW, Uri.parse (authUrl));
        startActivity (intent);
    } catch (OAuthMessageSignerException e) {
        message = "OAuthMessageSignerException";
        e.printStackTrace ();
    } catch (OAuthNotAuthorizedException e) {
        message = "OAuthNotAuthorizedException";
        e.printStackTrace ();
    } catch (OAuthExpectationFailedException e) {
        message = "OAuthExpectationFailedException";
        e.printStackTrace ();
    } catch (OAuthCommunicationException e) {
        message = "OAuthCommunicationException";
        e.printStackTrace ();
    }
    return message;
}
----------------------------------------

protected String doInBackground (String...params) {
    String message = null;
    String verifier = params [0];
    try {
        Log.d (TAG, "mConsumer: " + mConsumer);
        Log.d (TAG, "mProvider: " + mProvider);
        mProvider.retrieveAccessToken (mConsumer, verifier);
        String token = mConsumer.getToken ();
        String tokenSecret = mConsumer.getTokenSecret ();
        mConsumer.setTokenWithSecret (token, tokenSecret);
        Log.d (TAG, String.format ("verifier: %s, token: %s, tokenSecret: %s", verifier, token, tokenSecret));
        prefs.edit ().putString ("token", token).putString ("tokenSecret", tokenSecret).commit ();
        oauthClient = new OAuthSignpostClient (OAUTH_KEY, OAUTH_SECRET, token, tokenSecret);
        twitter = new Twitter ("NameTest", oauthClient);
        Log.d (TAG, "token: " + token);
    } catch (OAuthMessageSignerException e) {
        message = "OAuthMessageSignerException";
        e.printStackTrace ();
    } catch (OAuthNotAuthorizedException e) {
        message = "OAuthNotAuthorizedException";
        e.printStackTrace ();
    } catch (OAuthExpectationFailedException e) {
        message = "OAuthExpectationFailedException";
        e.printStackTrace ();
    } catch (OAuthCommunicationException e) {
        message = "OAuthCommunicationException";
        e.printStackTrace ();
    }
    return message;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1904318_1920519_36_64
1904318_1920519_89_107
Title: Animated Swing effect to display full-resolution image 
----------------------------------------

public void run () {
    frame = new JFrame ();
    frame.setTitle ("Open image with zoom");
    JPanel p = new JPanel (new BorderLayout ());
    p.add (new JLabel ("click on button to display image"), BorderLayout.CENTER);
    JButton button = new JButton ("Display!");
    frame.setContentPane (p);
    button.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            Thread t = new Thread () {
                @Override
                public void run () {
                    displayImaggeWithProgressiveZoom (imagePath);
                }}

            ;
            t.start ();
        }}

    );
    p.add (button, BorderLayout.SOUTH);
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.setSize (300, 100);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

public void run () {
    if (dialog == null) {
        dialog = new JDialog (frame);
        dialog.setUndecorated (true);
        dialog.setModal (false);
        panelZooming = new JPanelZooming (image);
        dialog.setContentPane (panelZooming);
        dialog.setSize (0, 0);
        dialog.setLocationRelativeTo (frame);
        dialog.setVisible (true);
    }
    int w = (i + 1) * image.getWidth () / nbSteps;
    int h = (i + 1) * image.getHeight () / nbSteps;
    panelZooming.setScale ((double) (i + 1) / nbSteps);
    dialog.setSize (w, h);
    dialog.setLocationRelativeTo (null);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19044573_19044626_1_22
19044573_19044720_1_24
Title: Cannot find symbol while loop 
----------------------------------------

void printXBaseY (int x, int y) {
    boolean active = true;
    String first = "";
    String second = "";
    while (x >= y) {
        int a = x % y;
        int b = x / y;
        first = "" + a;
        second = "" + b;
        String answer = "" + first + second;
    }
    String answer = "" + first + second;
    System.out.println (x + " base " + y + " is " + answer);
}
----------------------------------------

void printXBaseY (int x, int y) {
    boolean active = true;
    String first = "";
    String second = "";
    String answer = "";
    while (x >= y) {
        int a = x % y;
        int b = x / y;
        first = "" + a;
        second = "" + b;
    }
    answer = "" + first + second;
    println (x + " base " + y + " is " + answer);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19045103_19045323_1_12
19045103_27331480_5_25
Title: Fibonacci in Java code 
----------------------------------------

public static void main (String [] args) {
    int f = 0;
    int g = 1;
    for (int i = 1;
    i <= 10; i ++) {
        System.out.print (f + " ");
        f = f + g;
        g = f - g;
    }
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    int a;
    try (Scanner sc = new Scanner (System.in)) {
        System.out.print ("Number of Fibonacci numbers to print: ");
        a = sc.nextInt ();
        sc.close ();
    }
    int c = 1;
    int b = 0;
    System.out.println (b);
    System.out.println (c);
    int bb;
    for (int z = 2;
    z < a; z ++) {
        bb = b;
        b = c;
        c = bb + b;
        System.out.println (z);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19045103_19045323_1_12
19045103_42640878_5_16
Title: Fibonacci in Java code 
----------------------------------------

public static void main (String [] args) {
    int f = 0;
    int g = 1;
    for (int i = 1;
    i <= 10; i ++) {
        System.out.print (f + " ");
        f = f + g;
        g = f - g;
    }
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    Integer max = Integer.valueOf (args [0]);
    BigDecimal [] fibs = {new BigDecimal (0), new BigDecimal (1)};
    BigDecimal current;
    System.out.print ("1 ");
    for (int i = 0;
    i < max + 1; i ++) {
        current = fibs [1].add (fibs [0]);
        System.out.print (current + " ");
        fibs [0] = fibs [1];
        fibs [1] = current;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19045103_27331480_5_25
19045103_42640878_5_16
Title: Fibonacci in Java code 
----------------------------------------

public static void main (String [] args) {
    int a;
    try (Scanner sc = new Scanner (System.in)) {
        System.out.print ("Number of Fibonacci numbers to print: ");
        a = sc.nextInt ();
        sc.close ();
    }
    int c = 1;
    int b = 0;
    System.out.println (b);
    System.out.println (c);
    int bb;
    for (int z = 2;
    z < a; z ++) {
        bb = b;
        b = c;
        c = bb + b;
        System.out.println (z);
    }
}
----------------------------------------

public static void main (String [] args) {
    Integer max = Integer.valueOf (args [0]);
    BigDecimal [] fibs = {new BigDecimal (0), new BigDecimal (1)};
    BigDecimal current;
    System.out.print ("1 ");
    for (int i = 0;
    i < max + 1; i ++) {
        current = fibs [1].add (fibs [0]);
        System.out.print (current + " ");
        fibs [0] = fibs [1];
        fibs [1] = current;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19045685_19045879_3_12
19045685_19045895_8_16
Title: nested for loop and i cannot get what i want 
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i <= 10; i += 2) {
        for (int j = 1;
        j < 10; j *= 2) {
            System.out.println (Math.max (i, j));
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 0;
    i <= 10; i += 2) {
        for (int j = 1;
        j < 10; j *= 2) {
            System.out.println (max (i, j));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19049785_19049971_2_17
19049785_46569211_1_39
Title: Merge Two text files line by line using java 
----------------------------------------

public static void main (String [] args) throws IOException {
    String output = "";
    try (Scanner sc1 = new Scanner ((new File ("A.txt"))); Scanner sc2 = new Scanner ((new File ("B.txt")))) {
        while (sc1.hasNext () || sc2.hasNext ()) {
            output += sc1.next () + " " + sc2.next ();
            output += "\n";
        }
    }
    try (PrintWriter pw = new PrintWriter (new File ("C.txt"))) {
        pw.write (output);
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    ArrayList < String > list = new ArrayList < String > ();
    try {
        File folder = new File ("path/inputFolder");
        File [] listOfFiles = folder.listFiles ();
        for (int i = 0;
        i < listOfFiles.length; i ++) {
            File file = listOfFiles [i];
            if (file.isFile () && file.getName ().endsWith (".txt")) {
                BufferedReader t = new BufferedReader (new FileReader (file));
                String s = null;
                while ((s = t.readLine ()) != null) {
                    list.add (s);
                }
                t.close ();
            }
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    BufferedWriter writer = null;
    writer = new BufferedWriter (new FileWriter ("data.output/merged-output.txt"));
    String listWord;
    for (int i = 0;
    i < list.size (); i ++) {
        listWord = list.get (i);
        writer.write (listWord);
        writer.write ("\n");
    }
    System.out.println ("complited");
    writer.flush ();
    writer.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_19065284_1_20
19065228_43160415_2_9
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    int a;
    int b;
    int sum;
    for (a = 1; a <= 12; ++ a) {
        for (b = 1; b <= 12; ++ b) {
            sum = a * b;
            System.out.print (sum);
            if (sum < 10) {
                System.out.print ("    ");
            } else if (sum >= 100) {
                System.out.print ("  ");
            } else if (sum >= 10) {
                System.out.print ("   ");
            }

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 13; i ++) {
        for (int j = 1;
        j <= 12; j ++) {
            System.out.printf ("%d x %d = %d  \n", i, j, (i * j));
            System.out.println ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_19065284_1_20
19065228_49727388_3_27
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    int a;
    int b;
    int sum;
    for (a = 1; a <= 12; ++ a) {
        for (b = 1; b <= 12; ++ b) {
            sum = a * b;
            System.out.print (sum);
            if (sum < 10) {
                System.out.print ("    ");
            } else if (sum >= 100) {
                System.out.print ("  ");
            } else if (sum >= 10) {
                System.out.print ("   ");
            }

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    final int tableNum = 12;
    System.out.print ("   |");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print (addSpace (a) + " ");

    System.out.println ();
    System.out.print ("---+");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print ("----");

    System.out.println ();
    for (int a = 1;
    a <= tableNum; a ++) {
        System.out.print (addSpace (a) + "|");
        for (int b = 1;
        b <= tableNum; b ++) {
            System.out.print (addSpace (a * b) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_19065284_1_20
19065228_51274945_3_12
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    int a;
    int b;
    int sum;
    for (a = 1; a <= 12; ++ a) {
        for (b = 1; b <= 12; ++ b) {
            sum = a * b;
            System.out.print (sum);
            if (sum < 10) {
                System.out.print ("    ");
            } else if (sum >= 100) {
                System.out.print ("  ");
            } else if (sum >= 10) {
                System.out.print ("   ");
            }

        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 1;
        j <= 3; j ++) {
            System.out.printf ("%4d", i * j);
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_43160415_2_9
19065228_49727388_3_27
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 13; i ++) {
        for (int j = 1;
        j <= 12; j ++) {
            System.out.printf ("%d x %d = %d  \n", i, j, (i * j));
            System.out.println ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    final int tableNum = 12;
    System.out.print ("   |");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print (addSpace (a) + " ");

    System.out.println ();
    System.out.print ("---+");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print ("----");

    System.out.println ();
    for (int a = 1;
    a <= tableNum; a ++) {
        System.out.print (addSpace (a) + "|");
        for (int b = 1;
        b <= tableNum; b ++) {
            System.out.print (addSpace (a * b) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_43160415_2_9
19065228_51274945_3_12
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i < 13; i ++) {
        for (int j = 1;
        j <= 12; j ++) {
            System.out.printf ("%d x %d = %d  \n", i, j, (i * j));
            System.out.println ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 1;
        j <= 3; j ++) {
            System.out.printf ("%4d", i * j);
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19065228_49727388_3_27
19065228_51274945_3_12
Title: format 12 by 12 multiplication table 
----------------------------------------

public static void main (String [] args) {
    final int tableNum = 12;
    System.out.print ("   |");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print (addSpace (a) + " ");

    System.out.println ();
    System.out.print ("---+");
    for (int a = 1;
    a <= tableNum; a ++) System.out.print ("----");

    System.out.println ();
    for (int a = 1;
    a <= tableNum; a ++) {
        System.out.print (addSpace (a) + "|");
        for (int b = 1;
        b <= tableNum; b ++) {
            System.out.print (addSpace (a * b) + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    for (int i = 1;
    i <= 3; i ++) {
        for (int j = 1;
        j <= 3; j ++) {
            System.out.printf ("%4d", i * j);
        }
        System.out.println ("\n");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19068537_19068692_1_12
19068537_19070646_1_20
Title: "A charecter array of arbitary length with 'R' 'B' 'W' is need to be sorted in that order" 
----------------------------------------

public static void sort (char [] arr) {
    int r = 0, b = 0, w = 0;
    for (int i = 0;
    i < arr.length; i ++) {
        if (arr [i] == 'R') r ++;
        else if (arr [i] == 'B') b ++;
        else w ++;

    }
    int o = 0;
    for (; r > 0; r --) arr [o ++] = 'R';

    for (; b > 0; b --) arr [o ++] = 'B';

    for (; w > 0; w --) arr [o ++] = 'W';

}
----------------------------------------

public static void sort (char [] arr) {
    int rIndex = 0, wIndex = arr.length - 1;
    for (int i = 0;
    i <= wIndex;) {
        switch (arr [i]) {
            case 'R' :
                swap (arr, i, rIndex ++);
                i ++;
                break;
            case 'W' :
                swap (arr, i, wIndex --);
                break;
            case 'B' :
                i ++;
                break;
            default :
                throw new IllegalArguementException (arr [i] + " is not allowed in the array");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19070264_19070352_1_16
19070264_19070497_1_12
Title: Sorting individual elements in a String Array by their alphabetical order 
----------------------------------------

public static String [] alphabeticalOrder (String [] s) {
    for (int i = 0;
    i < s.length; i ++) {
        String wordSt = s [i];
        if (wordSt == null) continue;

        char [] word = wordSt.toCharArray ();
        Arrays.sort (word);
        s [i] = new String (word);
    }
    return s;
}
----------------------------------------

public static String [] alphabeticalOrder (String [] s) {
    if (s == null || s.length == 0) return s;

    for (int i = 0;
    i < s.length; i ++) {
        if (s [i] != null) {
            char [] word = s [i].toCharArray ();
            Arrays.sort (word);
            s [i] = new String (word);
        }
    }
    return s;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19080114_19099557_117_132
19080114_19099557_96_116
Title: Java multi-layered wrapping/subclassing 
----------------------------------------

public final int peek (Buffer out, int length) {
    if (length == - 1) length = out.availableWrite ();

    int effectiveLen = availableRead ();
    if (length < effectiveLen) effectiveLen = length;

    if (effectiveLen > 0) {
        byte [] backing = impl.mBacking;
        int pos = (int) (impl.mRead & impl.mMask);
        int capacity = capacity ();
        if (pos + effectiveLen > capacity) {
            int p1 = capacity - pos;
            int p2 = effectiveLen - p1;
            out.write (backing, pos, p1);
            out.write (backing, 0, p2);
        } else out.write (backing, pos, effectiveLen);

    }
    return effectiveLen;
}
----------------------------------------

public final int peek (byte [] out, int offset, int length) {
    if (length == - 1) length = out.length - offset;

    int effectiveLen = availableRead ();
    if (length < effectiveLen) effectiveLen = length;

    if (effectiveLen > 0) {
        byte [] backing = impl.mBacking;
        int pos = (int) (impl.mRead & impl.mMask);
        int capacity = capacity ();
        if (pos + effectiveLen > capacity) {
            int left = effectiveLen - (capacity - pos);
            do {
                out [offset ++] = backing [pos ++];
            } while (pos < capacity);
            pos = 0;
            do {
                out [offset ++] = backing [pos ++];
            } while (pos < left);
        } else {
            int lim = pos + effectiveLen;
            do {
                out [offset ++] = backing [pos ++];
            } while (pos < lim);
        }
    }
    return effectiveLen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19083791_24088833_3_14
19083791_25836696_3_15
Title: triangle numbers in java 
----------------------------------------

public static void main (String [] args) {
    int i, n = 9, j;
    for (i = 1; i <= n; i ++) {
        for (j = n; j >= i; j --) {
            System.out.print (i);
        }
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    int n = 6;
    int m = n;
    for (int i = 1;
    i <= n; i ++, m --) {
        for (int j = 1;
        j <= m; j ++) {
            System.out.print (i);
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19098352_19098990_20_31
19098352_19098990_38_60
Title: "return ping result every ping and not only in the end" 
----------------------------------------

public void run () {
    Pinger pinger = new Pinger ();
    JFrame frame = new JFrame ();
    JPanel panel = new JPanel ();
    frame.setSize (300, 400);
    frame.add (panel);
    JTextArea textArea = new JTextArea ();
    panel.add (textArea);
    frame.setVisible (true);
    pinger.executor.execute (pinger.createRunnable ("google.com", textArea));
}
----------------------------------------

public void run () {
    String resposta = "";
    String comando = "ping -t " + ip;
    try {
        Scanner S = new Scanner (Runtime.getRuntime ().exec (comando).getInputStream ());
        while (S.hasNextLine ()) {
            final String newText = S.nextLine ();
            EventQueue.invokeLater (new Runnable () {
                public void run () {
                    area.setText (area.getText () + System.getProperty ("line.separator") + newText);
                }}

            );
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19100342_19101928_10_39
19100342_19101928_46_69
Title: Finishing a executeServices not working 
----------------------------------------

public void run () {
    final Pinger pinger = new Pinger ();
    JFrame frame = new JFrame ();
    JPanel panel = new JPanel ();
    frame.setSize (300, 400);
    frame.add (panel);
    JTextArea textArea = new JTextArea ();
    JButton stop = new JButton ();
    stop.setText ("Stop");
    stop.addMouseListener (new MouseListener () {
        public void mouseClicked (MouseEvent arg0) {
            try {
                pinger.process.destroy ();
            } catch (Exception e) {
            }
        } public void mouseReleased (MouseEvent arg0) {
        } public void mousePressed (MouseEvent arg0) {
        } public void mouseExited (MouseEvent arg0) {
        } public void mouseEntered (MouseEvent arg0) {
        }}

    );
    panel.add (stop);
    panel.add (textArea);
    frame.setVisible (true);
    pinger.executor.execute (pinger.createRunnable ("google.com", textArea));
}
----------------------------------------

public void run () {
    String resposta = "";
    String comando = "ping -t " + ip;
    try {
        process = Runtime.getRuntime ().exec (comando);
        Scanner S = new Scanner (process.getInputStream ());
        while (S.hasNextLine ()) {
            final String newText = S.nextLine ();
            EventQueue.invokeLater (new Runnable () {
                public void run () {
                    area.setText (area.getText () + System.getProperty ("line.separator") + newText);
                }}

            );
        }
    } catch (IOException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1910049_1910129_1_49
1910049_1911225_1_33
Title: Where to close a JDBC Connection while I want to return the ResultSet 
----------------------------------------

public ResultSet executeQuery (String sql, String [] getValue, CallbackObj cbObj) throws SQLException {
    final Connection conn = getConn ();
    try {
        final PreparedStatement pstmt = conn.prepareStatement (sql);
        try {
            if (getValue != null) {
                for (int i = 0;
                i < getValue.length; i ++) {
                    pstmt.setString (i + 1, getValue [i]);
                }
            }
            final ResultSet rs = pstmt.executeQuery ();
            try {
                cbObj.processResultSet (rs);
            } finally {
                rs.close ();
            }
        } finally {
            pstmt.close ();
        }
    } finally {
        conn.close ();
    }
}
----------------------------------------

public List < Map > executeQuery (Connection connection, String sql) throws SQLException {
    List < Map > rows = new ArrayList < Map > ();
    PreparedStatement stmt = null;
    ResultSet rs = null;
    try {
        pstmt = conn.prepareStatement (sql);
        rs = stmt.execute ();
        int numColumns = rs.getMetaData ().getColumnCount ();
        while (rs.next ()) {
            Map < String, Object > row = new LinkedHashMap < String, Object > ();
            for (int i = 0;
            i < numColumns; ++ i) {
                String column = rs.getColumnName (i + 1);
                Object value = rs.getObject (i + 1);
                row.put (column, value);
            }
            rows.add (row);
        }
    } finally {
        close (rs);
        close (stmt);
    }
    return rows;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1910049_1911225_35_48
1910049_1911225_50_63
Title: Where to close a JDBC Connection while I want to return the ResultSet 
----------------------------------------

public static void close (Statement s) {
    try {
        if (s != null) {
            s.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void close (ResultSet rs) {
    try {
        if (rs != null) {
            rs.close ();
        }
    } catch (SQLException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19105913_19107783_16_62
19105913_19108565_12_64
Title: "Syntax error insert "";"" and "")"" cannot find error" 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_station_list);
    getActionBar ().setDisplayHomeAsUpEnabled (true);
    Spinner1 = (Spinner) findViewById (R.id.spinner1);
    Spinner2 = (Spinner) findViewById (R.id.spinner2);
    Red_Line = this.getString (R.string.Red_Line);
    Blue_Line = this.getString (R.string.Blue_Line);
    Green_Line = this.getString (R.string.Green_Line);
    Orange_Line = this.getString (R.string.Orange_Line);
    Brown_Line = this.getString (R.string.Brown_Line);
    Pink_Line = this.getString (R.string.Pink_Line);
    Purple_Line = this.getString (R.string.Purple_Line);
    Yellow_Line = this.getString (R.string.Yellow_Line);
    Spinner1.setOnItemSelectedListener (new OnItemSelectedListener () {
        @Override
        public void onItemSelected (AdapterView < ? > arg0, View arg1, int arg2, long arg3) {
            String selectedValue = arg0.getSelectedItem ().toString ();
            if (selectedValue.equalsIgnoreCase (Red_Line)) {
                ArrayAdapter < String > firstAdapter = new ArrayAdapter < String > (StationList.this, R.array.Red_Line);
                Spinner2.setAdapter (firstAdapter);
            }
            if (selectedValue.equalsIgnoreCase (Blue_Line)) {
                ArrayAdapter < String > firstAdapter = new ArrayAdapter < String > (StationList.this, R.array.Blue_Line);
                Spinner2.setAdapter (firstAdapter);
            }
        }}

    );
}
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    getActionBar ().setDisplayHomeAsUpEnabled (true);
    Spinner1.setOnItemSelectedListener (new OnItemSelectedListener () {
        @Override
        public void onItemSelected (AdapterView < ? > arg0, View arg1, int arg2, long arg3) {
            String selectedValue = arg0.getSelectedItem ().toString ();
            if (selectedValue.equalsIgnoreCase (Red_Line)) {
            }
            if (selectedValue.equalsIgnoreCase (Blue_Line)) {
            }
        } public void sendTest (View a) {
        } public void onBackPressed () {
        }@Override
        public void onNothingSelected (AdapterView < ? > arg0) {
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19108902_19109038_5_31
19108902_19109107_10_30
Title: Java: How to ask user if he/she wants to continue program 
----------------------------------------

public static void main (String args []) {
    int num, count = 0;
    String s = "y";
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter any number : ");
    while (s.equalsIgnoreCase ("y")) {
        num = scan.nextInt ();
        for (int i = 2;
        i <= (num / 2); i ++) {
            if ((num % i) == 0) {
                count ++;
                break;
            }
        }
        if ((count == 0) && (num != 1)) System.out.println (num + " is a prime number.");
        else System.out.println (num + " is not a prime number.");

        System.out.println ("Do you want to enter another no?");
        s = scan.next ();
    }
}
----------------------------------------

public static void main (String args []) {
    checkPrime ();
    while (true) {
        System.out.print ("Are You Want to Continue (Y/N) ?");
        userInput = scan.next ();
        if (userInput.equalsIgnoreCase ("Y")) checkPrime ();
        else if (userInput.equalsIgnoreCase ("N")) {
            System.out.print ("Thank you !!");
            break;
        } else {
            System.out.print ("Try Again With (Y/N) only !");
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19108902_19109038_5_31
19108902_29920321_14_52
Title: Java: How to ask user if he/she wants to continue program 
----------------------------------------

public static void main (String args []) {
    int num, count = 0;
    String s = "y";
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter any number : ");
    while (s.equalsIgnoreCase ("y")) {
        num = scan.nextInt ();
        for (int i = 2;
        i <= (num / 2); i ++) {
            if ((num % i) == 0) {
                count ++;
                break;
            }
        }
        if ((count == 0) && (num != 1)) System.out.println (num + " is a prime number.");
        else System.out.println (num + " is not a prime number.");

        System.out.println ("Do you want to enter another no?");
        s = scan.next ();
    }
}
----------------------------------------

public static void main (String [] args) {
    while (true) {
        System.out.print ("Are You Want to Continue (Y/N) ?\n");
        Scanner ans = new Scanner (System.in);
        answer = ans.nextLine ();
        if (answer.equalsIgnoreCase ("Y")) {
            Scanner input = new Scanner (System.in);
            System.out.println ("Input Price: \n");
            value = input.nextInt ();
            Scanner input2 = new Scanner (System.in);
            System.out.println ("Input Quantity: \n");
            quantity = input2.nextInt ();
            total += value * quantity;
            total_cashier += total;
            if (value > expensier) {
                expensier = value;
            }
            total_sold += quantity;
        } else if (answer.equalsIgnoreCase ("N")) {
            System.out.print ("Thank you !!");
            break;
        } else {
            System.out.print ("Try Again With (Y/N) only !");
        }

        System.out.println ("Total to pay :" + total);
        System.out.println ("Value of the expensiest product: " + expensier);
        System.out.println ("Amount of products sold: " + total_sold);
        System.out.println ("Amount of cash in cashier: " + total_cashier);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19108902_19109107_10_30
19108902_29920321_14_52
Title: Java: How to ask user if he/she wants to continue program 
----------------------------------------

public static void main (String args []) {
    checkPrime ();
    while (true) {
        System.out.print ("Are You Want to Continue (Y/N) ?");
        userInput = scan.next ();
        if (userInput.equalsIgnoreCase ("Y")) checkPrime ();
        else if (userInput.equalsIgnoreCase ("N")) {
            System.out.print ("Thank you !!");
            break;
        } else {
            System.out.print ("Try Again With (Y/N) only !");
        }

    }
}
----------------------------------------

public static void main (String [] args) {
    while (true) {
        System.out.print ("Are You Want to Continue (Y/N) ?\n");
        Scanner ans = new Scanner (System.in);
        answer = ans.nextLine ();
        if (answer.equalsIgnoreCase ("Y")) {
            Scanner input = new Scanner (System.in);
            System.out.println ("Input Price: \n");
            value = input.nextInt ();
            Scanner input2 = new Scanner (System.in);
            System.out.println ("Input Quantity: \n");
            quantity = input2.nextInt ();
            total += value * quantity;
            total_cashier += total;
            if (value > expensier) {
                expensier = value;
            }
            total_sold += quantity;
        } else if (answer.equalsIgnoreCase ("N")) {
            System.out.print ("Thank you !!");
            break;
        } else {
            System.out.print ("Try Again With (Y/N) only !");
        }

        System.out.println ("Total to pay :" + total);
        System.out.println ("Value of the expensiest product: " + expensier);
        System.out.println ("Amount of products sold: " + total_sold);
        System.out.println ("Amount of cash in cashier: " + total_cashier);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19109960_19109999_15_52
19109960_19109999_54_78
Title: How to check if a date is greater than another in Java? 
----------------------------------------

public static void compareDates (String d1, String d2) {
    try {
        SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
        Date date1 = sdf.parse (d1);
        Date date2 = sdf.parse (d2);
        System.out.println ("Date1" + sdf.format (date1));
        System.out.println ("Date2" + sdf.format (date2));
        System.out.println ();
        if (date1.after (date2)) {
            System.out.println ("Date1 is after Date2");
        }
        if (date1.before (date2)) {
            System.out.println ("Date1 is before Date2");
        }
        if (date1.equals (date2)) {
            System.out.println ("Date1 is equal Date2");
        }
        System.out.println ();
    } catch (ParseException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

public static void compareDates (Date date1, Date date2) {
    if (date1.after (date2)) {
        System.out.println ("Date1 is after Date2");
    }
    if (date1.before (date2)) {
        System.out.println ("Date1 is before Date2");
    }
    if (date1.equals (date2)) {
        System.out.println ("Date1 is equal Date2");
    }
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19129509_19140112_20_81
19129509_34257043_5_34
Title: "How can I count the number of odd evens and zeros in a multiple digit number in Java?" 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    String value;
    System.out.print ("Enter an integer: ");
    value = scan.next ();
    String words [] = value.split ("");
    oddEvenZero obj = new oddEvenZero ();
    try {
        int intarray [] = obj.convertStringArraytoIntArray (words);
        int even_number = 0;
        int odd_number = 0;
        int zero_number = 0;
        for (int h : intarray) {
            if (h == 0) {
                zero_number ++;
            } else if (h % 2 == 0) {
                even_number ++;
            } else {
                odd_number ++;
            }

        }
        System.out.println ("even numbers are" + even_number);
        System.out.println ("odd numbers are" + odd_number);
        System.out.println ("Zero numbers are" + zero_number);
    } catch (Exception ex) {
        System.out.println ("Please enter number");
    }
}
----------------------------------------

public static void main (String [] args) {
    String string;
    int zero = 0, odd = 0, even = 0, length, left = 0;
    Scanner scan = new Scanner (System.in);
    System.out.print ("Enter any positive number: ");
    string = scan.next ();
    length = string.length ();
    while (left < length) {
        string.charAt (left);
        if (string.charAt (left) == 0) zero ++;
        else if (string.charAt (left) % 2 == 0) even ++;
        else odd ++;

        left ++;
    }
    System.out.println ("There are: " + zero + " zeros.");
    System.out.println ("There are: " + even + " even numbers.");
    System.out.println ("There are: " + odd + " odd numbers.");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19130217_19130501_1_10
19130217_19130856_1_10
Title: How to loop user input until an integer is inputted? 
----------------------------------------

public int getInt (String prompt) {
    Scanner sc = new Scanner (System.in);
    System.out.print (prompt);
    while (! sc.hasNextInt ()) {
        System.out.println ("Enter a whole number");
        sc.next ();
    }
    return sc.nextInt ();
}
----------------------------------------

int getInt (String prompt) {
    System.out.print (prompt);
    while (true) {
        try {
            return Integer.parseInt (new Scanner (System.in).next ());
        } catch (NumberFormatException ne) {
            System.out.print ("That's not a whole number.\n" + prompt);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19131097_19131883_10_41
19131097_26091655_8_23
Title: Drawing A Rosetta Shape 
----------------------------------------

public void paint (Graphics page) {
    super.paint (page);
    page.setColor (Color.black);
    int width = getWidth ();
    int height = getHeight ();
    int roseWidth = Math.min (width / 2, height / 2);
    int roseHeight = roseWidth;
    int centerX = width / 2;
    int centerY = height / 2;
    int x = (width - roseWidth) / 2;
    int y = (height - roseHeight) / 2;
    page.drawRect (x, y, roseWidth, roseHeight);
    page.drawOval (x, y, roseWidth, roseHeight);
    Graphics2D g2d = (Graphics2D) page;
    float angle = 30f;
    AffineTransform t = g2d.getTransform ();
    g2d.transform (AffineTransform.getRotateInstance (Math.toRadians (angle), centerX, centerY));
    angle = 60f;
    for (int index = 0;
    index < 6; index ++) {
        g2d.transform (AffineTransform.getRotateInstance (Math.toRadians (angle), centerX, centerY));
        g2d.drawArc (x + (roseWidth / 2), y, roseWidth, roseHeight, 360, 360);
    }
    g2d.transform (t);
}
----------------------------------------

public void paint (Graphics page) {
    final int MID = 130;
    final int TOP = 75;
    page.drawArc (MID, TOP - 76, 150, 150, 210, 121);
    page.drawArc (MID, TOP + 76, 150, 150, 30, 120);
    page.drawArc (MID + 65, TOP + 35, 150, 150, 90, 120);
    page.drawArc (MID - 65, TOP + 35, 150, 150, 330, 120);
    page.drawArc (MID - 65, TOP - 35, 150, 150, 270, 120);
    page.drawArc (MID + 65, TOP - 35, 150, 150, 150, 121);
    page.setColor (Color.red);
    page.drawOval (MID - 1, TOP, 151, 151);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19138553_19138662_2_21
19138553_19140540_38_55
Title: Processing asynchronous events and publishing results in order 
----------------------------------------

public static void main (String [] args) {
    Main main = new Main ();
    for (int i = 0;
    i < 1000; i ++) {
        final int finalI = i;
        main.submitTask (new Callable < Long > () {
            @Override
            public Long call () throws Exception {
                long millis = (long) (Math.pow (2000, Math.random ()));
                Thread.sleep (millis);
                return millis;
            }}

        , new ResultHandler < Long > () {
            @Override
            public void onFuture (Future < Long > future) throws ExecutionException, InterruptedException {
                System.out.println (new Date () + ": " + finalI + " - Slept for " + future.get () + " millis");
            }}

        );
    }
    main.shutdown ();
}
----------------------------------------

public static void main (String [] args) {
    POOL.submit (new Callable < Object > () {
        public Object call () throws Exception {
            processResults ();
            return null;
        }}

    );
    for (int id = 0;
    id < 100; id ++) try {
        QUEUE.put (POOL.submit (new Event (id)));
    } catch (InterruptedException ex) {
        break;
    }

    try {
        QUEUE.put (new EndMarker ());
    } catch (InterruptedException ex) {
    }
    POOL.shutdown ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19150171_19150335_1_51
19150171_19150370_1_17
Title: A string blowup method 
----------------------------------------

public String blowUp (String str) {
    StringBuffer buffer = new StringBuffer ();
    if (str.length () == 0) {
        return "no string found";
    } else {
        for (int count = 0;
        count < str.length (); count ++) {
            char c = str.charAt (count);
            if (Character.isDigit (c) && count < str.length () - 1) {
                char next = str.charAt (count + 1);
                if (! Character.isDigit (next)) {
                    int nooftimes = Integer.parseInt (Character.toString (c));
                    for (int j = 0;
                    j < nooftimes; j ++) {
                        buffer.append (next);
                    }
                } else {
                    buffer.append (str.charAt (count + 1));
                }
            } else {
                buffer.append (c);
            }
        }
        return buffer.toString ();
    }
}
----------------------------------------

public static String blowUp (String str) {
    StringBuilder sb = new StringBuilder (128);
    for (int count = 0;
    count < str.length (); count ++) {
        char c = str.charAt (count);
        if (Character.isDigit (c) && count < str.length () - 1) {
            char next = str.charAt (count + 1);
            int nooftimes = Integer.parseInt (Character.toString (c));
            for (int j = 0;
            j < nooftimes; j ++) {
                sb.append (next);
            }
            count ++;
        } else if (! Character.isDigit (c)) {
            sb.append (c);
        }

    }
    return sb.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19150880_19151047_7_31
19150880_19151497_11_36
Title: Scanning is not stopping for hasNextInt() 
----------------------------------------

public static void main (String [] args) {
    String [] keywords = {"auto", "break", "case", "char", "const", "continue", "default", "do", "double", "else", "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "short", "signed", "sizeof", "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while"};
    Scanner sn = new Scanner (System.in);
    String string = sn.next ();
    Integer someInt = null;
    try {
        someInt = Integer.parseInt (string);
    } catch (NumberFormatException e) {
        System.out.println (e);
    }
    if (Arrays.asList (keywords).contains (string)) {
        System.out.println ("This is a KEYWORD");
    } else if (someInt != null) {
        System.out.println ("This is an INTEGER");
    }

}
----------------------------------------

public static void main (String [] args) throws IOException {
    String [] keywords = {"auto", "break", "case", "char", "const", "continue", "default", "do", "double", "else", "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "short", "signed", "sizeof", "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while"};
    String s = "";
    int i = 0;
    while (true) {
        System.out.println ("--------------------");
        System.out.println ("Input a character:  ");
        Scanner sn = new Scanner (System.in);
        s = sn.next ();
        try {
            if (Arrays.asList (keywords).contains (s)) {
                System.out.println ("This is a KEYWORD");
            } else {
                i = Integer.parseInt (s);
                System.out.println ("This is an INTEGER");
            }
        } catch (Exception e) {
            System.out.println ("This is not MATCHING");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19161181_19161736_70_80
19161181_19162138_1_31
Title: Disabling one button by enabling the other and vice versa 
----------------------------------------

public static void main (String [] args) {
    Display display = Display.getDefault ();
    createContents ();
    shell.open ();
    shell.layout ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Display display = new Display ();
    final Shell shell = new Shell (display);
    shell.setLayout (new FillLayout ());
    final Button a = new Button (shell, SWT.TOGGLE);
    a.setText ("a");
    final Button b = new Button (shell, SWT.PUSH);
    b.setText ("b");
    a.addListener (SWT.Selection, new Listener () {
        @Override
        public void handleEvent (Event arg0) {
            b.setEnabled (! a.getSelection ());
        }}

    );
    shell.pack ();
    shell.open ();
    while (! shell.isDisposed ()) {
        if (! display.readAndDispatch ()) {
            display.sleep ();
        }
    }
    display.dispose ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19170306_19170417_4_21
19170306_19170462_5_35
Title: Missing something simple with Java Code 
----------------------------------------

public static void main (String [] args) {
    int num_grades = 0;
    int total_grade = 0;
    int average_grade = 0;
    int student_grade;
    student_grade = Integer.parseInt (JOptionPane.showInputDialog (null, "What is the student's grade?"));
    while (student_grade != 999) {
        if (student_grade < 0) {
            JOptionPane.showMessageDialog (null, "Invalid Entry");
        } else {
            num_grades ++;
            total_grade = total_grade + student_grade;
            average_grade = total_grade / num_grades;
        }
        student_grade = Integer.parseInt (JOptionPane.showInputDialog (null, "What is the student's grade?"));
    }
    JOptionPane.showMessageDialog (null, "Average: " + average_grade);
}
----------------------------------------

public static void main (String [] args) {
    int num_grades = 0;
    int total_grade = 0;
    int average_grade = 0;
    int student_grade = 0;
    while (student_grade != 999) {
        student_grade = Integer.parseInt (JOptionPane.showInputDialog (null, "What is the student's grade?"));
        if (student_grade < 0) {
            JOptionPane.showMessageDialog (null, "Invalid Entry");
        } else {
            if (student_grade != 999) {
                num_grades ++;
                total_grade = total_grade + student_grade;
                average_grade = total_grade / num_grades;
            } else {
                break;
            }
        }
    }
    JOptionPane.showMessageDialog (null, "Average: " + average_grade);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19173345_19173374_23_33
19173345_19173374_45_58
Title: Reason for IllegalMonitorStateException 
----------------------------------------

public void run () {
    System.out.println ("R1 entered run");
    synchronized (monitor) {
        try {
            monitor.wait ();
            System.out.println ("R1 got monitor back");
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    System.out.println ("R2 entered run");
    synchronized (monitor) {
        System.out.println ("R2 will sleep for 1 sec");
        try {
            Thread.sleep (1000);
            System.out.println ("R2 will notify all threads waiting for monitor");
            monitor.notifyAll ();
        } catch (InterruptedException e) {
            e.printStackTrace ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19175002_19177212_1_18
19175002_32399685_7_21
Title: Removing duplicates from array without using Util classes 
----------------------------------------

private static int [] removeDups (int [] a, int maxA) {
    boolean [] present = new boolean [maxA + 1];
    int countUnique = 0;
    for (int i : a) {
        if (! present [i]) {
            countUnique ++;
            present [i] = true;
        }
    }
    int [] result = new int [countUnique];
    int j = 0;
    for (int i = 0;
    i < present.length; i ++) {
        if (present [i]) result [j ++] = i;

    }
    return result;
}
----------------------------------------

private static void removeDups (int [] a) {
    int [] result = new int [a.length];
    int j = 0;
    int count = 0;
    for (int i : a) {
        if (! isExist (result, i)) {
            result [j ++] = i;
            count ++;
        }
    }
    System.out.println (count + "_____________");
    for (int i = 0;
    i < count; i ++) {
        System.out.println (result [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19175002_19177212_1_18
19175002_43736705_7_29
Title: Removing duplicates from array without using Util classes 
----------------------------------------

private static int [] removeDups (int [] a, int maxA) {
    boolean [] present = new boolean [maxA + 1];
    int countUnique = 0;
    for (int i : a) {
        if (! present [i]) {
            countUnique ++;
            present [i] = true;
        }
    }
    int [] result = new int [countUnique];
    int j = 0;
    for (int i = 0;
    i < present.length; i ++) {
        if (present [i]) result [j ++] = i;

    }
    return result;
}
----------------------------------------

private static void removeDups (int [] a) {
    int [] result = new int [a.length];
    int j = 0;
    int count = 0;
    boolean zeroExist = false;
    for (int i : a) {
        if (i == 0 && ! zeroExist) {
            result [j ++] = i;
            zeroExist = true;
            count ++;
        }
        if (! isExist (result, i)) {
            result [j ++] = i;
            count ++;
        }
    }
    System.out.println (count + "_____________");
    for (int i = 0;
    i < count; i ++) {
        System.out.println (result [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19175002_32399685_7_21
19175002_43736705_7_29
Title: Removing duplicates from array without using Util classes 
----------------------------------------

private static void removeDups (int [] a) {
    int [] result = new int [a.length];
    int j = 0;
    int count = 0;
    for (int i : a) {
        if (! isExist (result, i)) {
            result [j ++] = i;
            count ++;
        }
    }
    System.out.println (count + "_____________");
    for (int i = 0;
    i < count; i ++) {
        System.out.println (result [i]);
    }
}
----------------------------------------

private static void removeDups (int [] a) {
    int [] result = new int [a.length];
    int j = 0;
    int count = 0;
    boolean zeroExist = false;
    for (int i : a) {
        if (i == 0 && ! zeroExist) {
            result [j ++] = i;
            zeroExist = true;
            count ++;
        }
        if (! isExist (result, i)) {
            result [j ++] = i;
            count ++;
        }
    }
    System.out.println (count + "_____________");
    for (int i = 0;
    i < count; i ++) {
        System.out.println (result [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19177994_19179193_1_32
19177994_24903576_4_66
Title: Java - Read file and split into multiple files 
----------------------------------------

public static void main (String [] args) throws Exception {
    RandomAccessFile raf = new RandomAccessFile ("test.csv", "r");
    long numSplits = 10;
    long sourceSize = raf.length ();
    long bytesPerSplit = sourceSize / numSplits;
    long remainingBytes = sourceSize % numSplits;
    int maxReadBufferSize = 8 * 1024;
    for (int destIx = 1;
    destIx <= numSplits; destIx ++) {
        BufferedOutputStream bw = new BufferedOutputStream (new FileOutputStream ("split." + destIx));
        if (bytesPerSplit > maxReadBufferSize) {
            long numReads = bytesPerSplit / maxReadBufferSize;
            long numRemainingRead = bytesPerSplit % maxReadBufferSize;
            for (int i = 0;
            i < numReads; i ++) {
                readWrite (raf, bw, maxReadBufferSize);
            }
            if (numRemainingRead > 0) {
                readWrite (raf, bw, numRemainingRead);
            }
        } else {
            readWrite (raf, bw, bytesPerSplit);
        }
        bw.close ();
    }
    if (remainingBytes > 0) {
        BufferedOutputStream bw = new BufferedOutputStream (new FileOutputStream ("split." + (numSplits + 1)));
        readWrite (raf, bw, remainingBytes);
        bw.close ();
    }
    raf.close ();
}
----------------------------------------

public static void main (String args []) {
    try {
        String inputfile = "C:/test.txt";
        double nol = 2000.0;
        File file = new File (inputfile);
        Scanner scanner = new Scanner (file);
        int count = 0;
        while (scanner.hasNextLine ()) {
            scanner.nextLine ();
            count ++;
        }
        System.out.println ("Lines in the file: " + count);
        double temp = (count / nol);
        int temp1 = (int) temp;
        int nof = 0;
        if (temp1 == temp) {
            nof = temp1;
        } else {
            nof = temp1 + 1;
        }
        System.out.println ("No. of files to be generated :" + nof);
        FileInputStream fstream = new FileInputStream (inputfile);
        DataInputStream in = new DataInputStream (fstream);
        BufferedReader br = new BufferedReader (new InputStreamReader (in));
        String strLine;
        for (int j = 1;
        j <= nof; j ++) {
            FileWriter fstream1 = new FileWriter ("C:/New Folder/File" + j + ".txt");
            BufferedWriter out = new BufferedWriter (fstream1);
            for (int i = 1;
            i <= nol; i ++) {
                strLine = br.readLine ();
                if (strLine != null) {
                    out.write (strLine);
                    if (i != nol) {
                        out.newLine ();
                    }
                }
            }
            out.close ();
        }
        in.close ();
    } catch (Exception e) {
        System.err.println ("Error: " + e.getMessage ());
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19181362_19181539_12_33
19181362_19182506_15_47
Title: Stash the Value of edittext into an variable and print it into LogCat 
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.notescreen);
    b1 = (Button) findViewById (R.id.button1);
    tv = (TextView) findViewById (R.id.tv);
    title = (EditText) findViewById (R.id.title);
    b1.setOnClickListener (new View.OnClickListener () {
        public void onClick (View v) {
            value = title.getText ().toString ();
            tv.settext (value);
        }}

    );
}
----------------------------------------

public void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.notescreen);
    final EditText text = (EditText) findViewById (R.id.title);
    final Button clickForTextBt = (Button) findViewById (R.id.clickfortextbt);
    clickForTextBt.setOnClickListener (new OnClickListener () {
        @Override
        public void onClick (View v) {
            Log.d ("notescreen", "This is the text: " + text.getText ());
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19188858_19189134_1_18
19188858_19189363_30_58
Title: Input verifier between textfields and radio buttons 
----------------------------------------

public boolean verify (JComponent input) {
    maleRb.setEnabled (false);
    femaleRb.setEnabled (false);
    String name = input.getName ();
    if (name.equals ("fntf")) {
        String text = ((JTextField) input).getText ().trim ();
        if (text.matches (".*\\d.*")) return false;

    } else if (name.equals ("lntf")) {
        String text = ((JTextField) input).getText ();
        if (text.matches (".*\\d.*")) return false;

    }

    maleRb.setEnabled (true);
    femaleRb.setEnabled (true);
    return true;
}
----------------------------------------

public boolean verify (JComponent input) {
    String name = input.getName ();
    if (name == null) {
        return false;
    } else if (name.equals ("fntf")) {
        String text = ((JTextField) input).getText ().trim ();
        if (text.matches (".*\\d.*")) {
            disableComponents ();
            return false;
        }
    } else if (name.equals ("lntf")) {
        String text = ((JTextField) input).getText ();
        if (text.matches (".*\\d.*")) {
            disableComponents ();
            return false;
        }
    }

    enableComponents ();
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19190297_19192510_12_25
19190297_32417797_1_59
Title: ask the user for three names and print them in alphabetical order 
----------------------------------------

public static void main (final String [] args) {
    final Console console = System.console ();
    if (console != null) {
        final SortNames sortNames = new SortNames (console);
        sortNames.run ();
    } else {
        System.err.println ("Sorry, no console.");
        System.exit (1);
    }
}
----------------------------------------

public static void main (String [] args) {
    String name1;
    String name2;
    String name3;
    Scanner keyboard = new Scanner (System.in);
    System.out.print ("Please Enter First Name ");
    name1 = keyboard.nextLine ();
    System.out.print ("Please Enter Second Name ");
    name2 = keyboard.nextLine ();
    System.out.print ("Please Enter Third Name ");
    name3 = keyboard.nextLine ();
    if ((name1.compareTo (name2) < 0) && (name1.compareTo (name3) < 0)) {
        System.out.println (name1);
        if (name2.compareTo (name3) < 0) {
            System.out.println (name2);
            System.out.println (name3);
        } else {
            System.out.println (name3);
            System.out.println (name2);
        }
    } else if ((name1.compareTo (name2) > 0) && (name2.compareTo (name3) < 0)) {
        System.out.println (name2);
        if (name1.compareTo (name3) < 0) {
            System.out.println (name1);
            System.out.println (name3);
        } else {
            System.out.println (name3);
            System.out.println (name1);
        }
    } else {
        System.out.println (name3);
        if (name1.compareTo (name2) < 0) {
            System.out.println (name1);
            System.out.println (name2);
        } else {
            System.out.println (name2);
            System.out.println (name1);
        }
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1919059_1919067_1_10
1919059_1919074_1_13
Title: "Java: How to ""trim"" a byte array?" 
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);

}
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int bytesRead = raf.read (data);
    if (bytesRead != chunkSize) {
        byte [] smallerData = new byte [bytesRead];
        System.arraycopy (data, 0, smallerData, 0, bytesRead);
        data = smallerData;
    }
    raf.close ();
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1919059_1919067_1_10
1919059_1927398_1_10
Title: "Java: How to ""trim"" a byte array?" 
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int read = raf.read (data);
    raf.close ();
    if (read == data.length) return data;
    else return Arrays.copyOf (data, read);

}
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    int size = (int) Math.min (chunkSize, raf.length () - startByte);
    byte [] data = new byte [size];
    raf.read (data);
    raf.close ();
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1919059_1919074_1_13
1919059_1927398_1_10
Title: "Java: How to ""trim"" a byte array?" 
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    byte [] data = new byte [chunkSize];
    int bytesRead = raf.read (data);
    if (bytesRead != chunkSize) {
        byte [] smallerData = new byte [bytesRead];
        System.arraycopy (data, 0, smallerData, 0, bytesRead);
        data = smallerData;
    }
    raf.close ();
    return data;
}
----------------------------------------

private byte [] readData (File f, int startByte, int chunkSize) throws Exception {
    RandomAccessFile raf = new RandomAccessFile (f, "r");
    raf.seek (startByte);
    int size = (int) Math.min (chunkSize, raf.length () - startByte);
    byte [] data = new byte [size];
    raf.read (data);
    raf.close ();
    return data;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19193322_19193360_6_14
19193322_19193411_5_21
Title: Compile errors in string double conversion 
----------------------------------------

public static void main (String [] args) {
    int a;
    String number;
    number = JOptionPane.showInputDialog ("What is your number");
    a = Integer.parseInt (number);
    if ((a % 2) == 0) System.out.println ("That is an even number");

    System.exit (0);
}
----------------------------------------

public static void main (String [] args) {
    int a;
    String number;
    number = JOptionPane.showInputDialog ("What is your number");
    a = Integer.parseInt (number);
    if ((a % 2) == 0) System.out.println ("That is an even number");
    else {
        System.out.println ("That is an odd number");
    }
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19193996_19194077_1_16
19193996_19194104_1_16
Title: Repeating sequences in an array 
----------------------------------------

public static void stutter (ArrayList < String > thing, int k) {
    if (k <= 0) {
        thing.clear ();
        return;
    }
    ArrayList < String > newList = new ArrayList < > ();
    for (int i = 0;
    i < thing.size (); i ++) {
        String temp = thing.get (i);
        for (int j = 0;
        j < k; j ++) {
            newList.add (temp);
        }
    }
    thing.clear ();
    thing.addAll (newList);
}
----------------------------------------

public static void stutter (ArrayList < String > thing, int k) {
    if (k <= 0) {
        thing.clear ();
        return;
    }
    for (int i = 0;
    i < thing.size (); i += k) {
        String temp = thing.get (i);
        for (int j = 1;
        j < k; j ++) {
            thing.add (i, thing.get (i));
        }
        if (i == thing.size ()) {
            return;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19195074_19195097_9_21
19195074_19195143_7_29
Title: Simple Palindrome Issue 
----------------------------------------

public static void check (String pal) {
    if (pal == null) {
        System.out.println ("Null Value..Exit");
    } else {
        StringBuilder str = new StringBuilder (pal);
        str.reverse ();
        System.out.println (str.reverse ());
    }
}
----------------------------------------

public static void check (String pal) {
    if (pal == null) {
        System.out.println ("Null Value..Exit");
    } else {
        StringBuilder str = new StringBuilder (pal);
        str.reverse ();
        if (pal.equals (str.toString ())) {
            System.out.println ("Palindrome");
        } else {
            System.out.println ("Not a Palindrome");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19195145_19198405_18_59
19195145_19199726_36_58
Title: Indentating of column name 
----------------------------------------

private void initGUI () {
    Object [] columnNames = new Object [] {"Image Name", "Created At", "Status", "Image Id", "Volume Id"};
    DefaultTableModel dtm = new DefaultTableModel (columnNames, 0);
    dtm.addRow (new Object [] {"Some picture's name", "2013-10-05", "Status unknown", "0123456789", "9876543210"});
    TableCellRenderer headerRenderer = new DefaultTableCellHeaderRenderer () {
        @Override
        public Component getTableCellRendererComponent (JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) {
            super.getTableCellRendererComponent (jtable, o, bln, bln1, i, i1);
            setHorizontalAlignment (SwingConstants.LEADING);
            return this;
        }}

    ;
    JTable table = new JTable (dtm);
    table.getTableHeader ().setDefaultRenderer (headerRenderer);
    JScrollPane scrollPane = new JScrollPane (table);
    JPanel content = new JPanel (new BorderLayout ());
    content.setPreferredSize (new Dimension (600, 250));
    content.add (scrollPane);
    JFrame frame = new JFrame ("Demo");
    frame.setContentPane (content);
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
        SwingUtilities.updateComponentTreeUI (frame);
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
}
----------------------------------------

private void initGUI () {
    Object [] columnNames = new Object [] {"Image Name", "Created At", "Status", "Image Id", "Volume Id"};
    DefaultTableModel dtm = new DefaultTableModel (columnNames, 0);
    dtm.addRow (new Object [] {"Some picture's name", "2013-10-05", "Status unknown", "0123456789", "9876543210"});
    JTable table = new JTable (dtm);
    table.getTableHeader ().setDefaultRenderer (new HeaderRenderer (table));
    JScrollPane scrollPane = new JScrollPane (table);
    JPanel content = new JPanel (new BorderLayout ());
    content.setPreferredSize (new Dimension (600, 250));
    content.add (scrollPane);
    JFrame frame = new JFrame ("Demo");
    frame.setContentPane (content);
    frame.setDefaultCloseOperation (JFrame.DISPOSE_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19195145_19198405_61_68
19195145_19199726_60_67
Title: Indentating of column name 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Demo ().initGUI ();
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        @Override
        public void run () {
            new Demo ().initGUI ();
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19195492_40029484_19_28
19195492_40029484_9_17
Title: Extracting Keys from a JSONObject using keySet() 
----------------------------------------

private static Set < String > getAllKeys (JSONObject json, Set < String > keys) {
    for (String key : json.keySet ()) {
        Object obj = json.get (key);
        if (obj instanceof JSONObject) keys.addAll (getAllKeys (json.getJSONObject (key)));

        if (obj instanceof JSONArray) keys.addAll (getAllKeys (json.getJSONArray (key)));

    }
    keys.addAll (json.keySet ());
    return keys;
}
----------------------------------------

private static Set < String > getAllKeys (JSONArray arr, Set < String > keys) {
    for (int i = 0;
    i < arr.length (); i ++) {
        Object obj = arr.get (i);
        if (obj instanceof JSONObject) keys.addAll (getAllKeys (arr.getJSONObject (i)));

        if (obj instanceof JSONArray) keys.addAll (getAllKeys (arr.getJSONArray (i)));

    }
    return keys;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19200056_19200191_28_54
19200056_19200733_55_97
Title: How to display/update images after keystrokes in java in JFrame? 
----------------------------------------

public static void main (final String [] args) throws IOException {
    if (args.length > 0) {
        final Image [] images = new Image [args.length];
        for (int i = 0;
        i < images.length; i ++) {
            images [i] = ImageIO.read (new File (args [i]));
        }
        SwingUtilities.invokeLater (new Runnable () {
            @Override
            public void run () {
                LoadImageApp app = new LoadImageApp ();
                JFrame f = new JFrame ("Load Image Sample");
                f.getContentPane ().setLayout (new BorderLayout ());
                f.getContentPane ().add (app, BorderLayout.CENTER);
                f.addKeyListener (new MyKeyAdapter (app, images));
                f.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
                f.setVisible (true);
            }}

        );
    }
}
----------------------------------------

public static void main (final String [] args) {
    final LinkedList < BufferedImage > images = loadImages (args);
    if (images.size () > 0) {
        final JFrame window = new JFrame ("Image Show");
        window.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        final JImagePanel imagePanel = new JImagePanel (images);
        window.add (imagePanel);
        window.addKeyListener (new KeyAdapter () {
            private void shiftIndex (final int amount) {
                imagePanel.shiftIndex (amount);
                window.pack ();
                window.setLocationRelativeTo (null);
            }@Override
            public void keyReleased (KeyEvent e) {
                switch (e.getKeyCode ()) {
                    case KeyEvent.VK_ESCAPE :
                        window.dispose ();
                        e.consume ();
                        break;
                    case KeyEvent.VK_LEFT :
                    case KeyEvent.VK_NUMPAD4 :
                        shiftIndex (- 1);
                        e.consume ();
                        break;
                    case KeyEvent.VK_RIGHT :
                    case KeyEvent.VK_NUMPAD6 :
                        shiftIndex (+ 1);
                        e.consume ();
                        break;
                }
            }}

        );
        window.pack ();
        window.setLocationRelativeTo (null);
        window.setVisible (true);
    } else {
        System.err.println ("No image could be loaded.\nPlease provide a list of image files as parameters.");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19201097_19233305_285_294
19201097_19233305_318_337
Title: Remove LabelBuilder TextAreaBuilder StackPaneBuilder VBoxBuilder 
----------------------------------------

Parent getContent () {
    yes = new RadioButton ("Yes");
    no = new RadioButton ("No");
    SurveyData.instance.hasComplaints.bind (yes.selectedProperty ());
    VBox vBox = new VBox ();
    vBox.setSpacing (5);
    vBox.getChildren ().addAll (new Label ("Do you have complaints?"), yes, no);
    return vBox;
}
----------------------------------------

Parent getContent () {
    TextArea textArea = new TextArea ();
    textArea.setWrapText (true);
    nextButton.setDisable (true);
    textArea.textProperty ().addListener (new ChangeListener < String > () {
        @Override
        public void changed (ObservableValue < ? extends String > observableValue, String oldValue, String newValue) {
            nextButton.setDisable (newValue.isEmpty ());
        }}

    );
    SurveyData.instance.complaints.bind (textArea.textProperty ());
    VBox vBox = new VBox ();
    vBox.setSpacing (5);
    vBox.getChildren ().addAll (new Label ("Please enter your complaints."), textArea);
    return vBox;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19201097_19233305_77_92
19201097_19233305_98_106
Title: Remove LabelBuilder TextAreaBuilder StackPaneBuilder VBoxBuilder 
----------------------------------------

void navTo (int nextPageIdx, boolean pushHistory) {
    if (nextPageIdx < 0 || nextPageIdx >= pages.size ()) {
        return;
    }
    if (curPageIdx != UNDEFINED) {
        if (pushHistory) {
            history.push (curPageIdx);
        }
    }
    WizardPage nextPage = pages.get (nextPageIdx);
    curPageIdx = nextPageIdx;
    getChildren ().clear ();
    getChildren ().add (nextPage);
    nextPage.manageButtons ();
}
----------------------------------------

void navTo (String id) {
    Node page = lookup ("#" + id);
    if (page != null) {
        int nextPageIdx = pages.indexOf (page);
        if (nextPageIdx != UNDEFINED) {
            navTo (nextPageIdx);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19201609_19201716_4_25
19201609_19201814_5_38
Title: checking if scanner input as positive integer 
----------------------------------------

public static void main (String [] args) {
    long sec, min, hour;
    System.out.println ("Please enter the number of seconds");
    Scanner user_input = new Scanner (System.in);
    sec = - 1;
    while (user_input.hasNextLong () && (sec = user_input.nextLong ()) < 0) {
        System.out.println ("Error: INVALID INPUT, please try again");
        System.out.println ("Please enter the number of seconds");
    }
    if (sec > 0) {
        hour = sec / 3600;
        min = ((sec % 3600) / 60);
        sec = ((sec % 3600) % 60);
        System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
    }
}
----------------------------------------

public static void main (String [] args) {
    int a = 0, sec, min, hour;
    boolean cond = true;
    while (cond) {
        boolean mis = false;
        System.out.println ("Please enter the number of seconds");
        Scanner user_input = new Scanner (System.in);
        try {
            a = user_input.nextInt ();
        } catch (InputMismatchException e) {
            System.out.println ("Error: INVALID INPUT, please try again");
            cond = true;
            mis = true;
        }
        if ((a < 0 || a != (int) a) && mis == false) {
            System.out.println ("Error: INVALID INPUT, please try again");
            cond = true;
        } else if (mis == false) {
            cond = false;
        }

        if (cond == false) {
            break;
        }
    }
    hour = a / 3600;
    min = ((a % 3600) / 60);
    sec = ((a % 3600) % 60);
    System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19201609_19201716_4_25
19201609_19202111_4_45
Title: checking if scanner input as positive integer 
----------------------------------------

public static void main (String [] args) {
    long sec, min, hour;
    System.out.println ("Please enter the number of seconds");
    Scanner user_input = new Scanner (System.in);
    sec = - 1;
    while (user_input.hasNextLong () && (sec = user_input.nextLong ()) < 0) {
        System.out.println ("Error: INVALID INPUT, please try again");
        System.out.println ("Please enter the number of seconds");
    }
    if (sec > 0) {
        hour = sec / 3600;
        min = ((sec % 3600) / 60);
        sec = ((sec % 3600) % 60);
        System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
    }
}
----------------------------------------

public static void main (String [] args) {
    int time, sec, min, hour;
    String inputString;
    System.out.println ("Please enter the number of seconds");
    Scanner user_input = new Scanner (System.in);
    time = - 1;
    inputString = user_input.nextLine ();
    try {
        time = Integer.parseInt (inputString);
    } catch (NumberFormatException e) {
        time = - 1;
    }
    while (time < 0) {
        System.out.println ("Error: INVALID INPUT, please try again");
        System.out.println ("Please enter the number of seconds");
        inputString = user_input.next ();
        try {
            time = Integer.parseInt (inputString);
        } catch (InputMismatchException e) {
            time = - 1;
        }
    }
    hour = time / 3600;
    min = ((time % 3600) / 60);
    sec = ((time % 3600) % 60);
    System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19201609_19201814_5_38
19201609_19202111_4_45
Title: checking if scanner input as positive integer 
----------------------------------------

public static void main (String [] args) {
    int a = 0, sec, min, hour;
    boolean cond = true;
    while (cond) {
        boolean mis = false;
        System.out.println ("Please enter the number of seconds");
        Scanner user_input = new Scanner (System.in);
        try {
            a = user_input.nextInt ();
        } catch (InputMismatchException e) {
            System.out.println ("Error: INVALID INPUT, please try again");
            cond = true;
            mis = true;
        }
        if ((a < 0 || a != (int) a) && mis == false) {
            System.out.println ("Error: INVALID INPUT, please try again");
            cond = true;
        } else if (mis == false) {
            cond = false;
        }

        if (cond == false) {
            break;
        }
    }
    hour = a / 3600;
    min = ((a % 3600) / 60);
    sec = ((a % 3600) % 60);
    System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
}
----------------------------------------

public static void main (String [] args) {
    int time, sec, min, hour;
    String inputString;
    System.out.println ("Please enter the number of seconds");
    Scanner user_input = new Scanner (System.in);
    time = - 1;
    inputString = user_input.nextLine ();
    try {
        time = Integer.parseInt (inputString);
    } catch (NumberFormatException e) {
        time = - 1;
    }
    while (time < 0) {
        System.out.println ("Error: INVALID INPUT, please try again");
        System.out.println ("Please enter the number of seconds");
        inputString = user_input.next ();
        try {
            time = Integer.parseInt (inputString);
        } catch (InputMismatchException e) {
            time = - 1;
        }
    }
    hour = time / 3600;
    min = ((time % 3600) / 60);
    sec = ((time % 3600) % 60);
    System.out.println (hour + " hours " + min + " minutes " + sec + " seconds");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19203023_19203116_1_25
19203023_19203166_1_26
Title: Java Array Loop 
----------------------------------------

public static void main (String [] args) {
    int list [] [] [] = new int [3] [5] [3];
    int i, j, k;
    int ctr = 0;
    for (i = 0; i < 3; i ++) {
        for (j = 0; j < 5; j ++) {
            for (k = 0; k < 3; k ++) {
                list [i] [j] [k] = ctr ++;
            }
        }
    }
    for (i = 0; i < 3; i ++) {
        for (j = 0; j < 5; j ++) {
            for (k = 0; k < 3; k ++) {
                System.out.println (list [i] [j] [k] + " ");
            }
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int list [] [] [] = new int [3] [5] [3];
    int i, j, k;
    int ctr = 0;
    for (i = 0; i < 3; i ++) for (j = 0; j < 5; j ++) for (k = 0; k < 3; k ++) {
        list [i] [j] [k] = ctr ++;
    }

    for (i = 0; i < 3; i ++) for (j = 0; j < 5; j ++) for (k = 0; k < 3; k ++) {
        System.out.println (list [i] [j] [k] + " ");
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19203935_19204026_1_17
19203935_19204065_2_14
Title: Need Help Writing Loops 
----------------------------------------

public static void main (String [] args) {
    int count = 1;
    for (int a = 1;
    a <= 100; a ++) {
        if (count < 10) {
            System.out.print (String.valueOf (a + "\t"));
            count ++;
        } else {
            System.out.println (a);
            count = 1;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int count = 1;
    for (int i = 1;
    i <= 10; i ++) {
        for (int k = 1;
        k <= i; k ++) {
            System.out.print (" ");
        }
        for (int j = 1;
        j <= 10; j ++) {
            System.out.print (" " + count);
            count ++;
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19221896_19222000_4_25
19221896_19222294_4_29
Title: Accessing a variable in different methods Java 
----------------------------------------

public static void main (String [] args) {
    double temp;
    String c = "c";
    String f = "f";
    String a;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the temperature: ");
    temp = input.nextDouble ();
    input = new Scanner (System.in);
    System.out.println ("Please enter whether you wish to convert to Celsius or Fahrenheit(c or f)");
    a = input.nextLine ();
    if (a.equals (c)) {
        System.out.println (celsiusEq (temp));
    } else {
        Fahren (temp);
    }
}
----------------------------------------

public static void main (String [] args) {
    double temp;
    String a;
    System.out.println ("Please enter the temperature: ");
    Scanner input = new Scanner (System.in);
    temp = input.nextDouble ();
    System.out.println ("Please enter whether you wish to convert to Celsius or Fahrenheit(c or f)");
    a = input.nextLine ();
    switch (a) {
        case "c" :
            temp = toCelsius (temp);
            System.out.println ("Temp in Celsius: " + temp);
            break;
        case "f" :
            temp = toFahren (temp);
            System.out.println ("Temp in Fahren: " + temp);
            break;
        default :
            System.out.println ("Invalid Entry");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19221896_19222294_4_29
19221896_19222311_3_24
Title: Accessing a variable in different methods Java 
----------------------------------------

public static void main (String [] args) {
    double temp;
    String a;
    System.out.println ("Please enter the temperature: ");
    Scanner input = new Scanner (System.in);
    temp = input.nextDouble ();
    System.out.println ("Please enter whether you wish to convert to Celsius or Fahrenheit(c or f)");
    a = input.nextLine ();
    switch (a) {
        case "c" :
            temp = toCelsius (temp);
            System.out.println ("Temp in Celsius: " + temp);
            break;
        case "f" :
            temp = toFahren (temp);
            System.out.println ("Temp in Fahren: " + temp);
            break;
        default :
            System.out.println ("Invalid Entry");
    }
}
----------------------------------------

public static void main (String [] args) {
    double temp;
    String c = "c";
    String f = "f";
    String a;
    Scanner input = new Scanner (System.in);
    System.out.println ("Please enter the temperature: ");
    temp = input.nextDouble ();
    input = new Scanner (System.in);
    System.out.println ("Please enter whether you wish to convert to Celsius or Fahrenheit(c or f)");
    a = input.nextLine ();
    if (a.equals (c)) {
        celsiusEq (temp);
    } else {
        Fahren (temp);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
1922290_1922348_3_20
1922290_37362606_4_19
Title: How to get the number of threads in a Java process 
----------------------------------------

public static void main (String args []) {
    Thread t = Thread.currentThread ();
    t.setName ("My Thread");
    t.setPriority (1);
    System.out.println ("current thread: " + t);
    int active = Thread.activeCount ();
    System.out.println ("currently active threads: " + active);
    Thread all [] = new Thread [active];
    Thread.enumerate (all);
    for (int i = 0;
    i < active; i ++) {
        System.out.println (i + ": " + all [i]);
    }
}
----------------------------------------

public static void main (String args []) throws Exception {
    for (int i = 0;
    i < 5; i ++) {
        Thread t = new Thread (new MyThread ());
        t.setName ("MyThread:" + i);
        t.start ();
    }
    int threadCount = 0;
    Set < Thread > threadSet = Thread.getAllStackTraces ().keySet ();
    for (Thread t : threadSet) {
        if (t.getThreadGroup () == Thread.currentThread ().getThreadGroup ()) {
            System.out.println ("Thread :" + t + ":" + "state:" + t.getState ());
            ++ threadCount;
        }
    }
    System.out.println ("Thread count started by Main thread:" + threadCount);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19226702_19226741_12_32
19226702_19226741_72_131
Title: "Why i am i getting different results at different computers with jpanel?" 
----------------------------------------

public static void setLaf () {
    if (setLaf (null, 1, 6, 0, "com.sun.java.swing.plaf.windows.WindowsLookAndFeel")) {
        return;
    }
    if (setLaf ("Windows Vista", 1, 3, 0, UIManager.getCrossPlatformLookAndFeelClassName ())) {
        return;
    }
    if (setLaf ("Windows XP", 1, 3, 0, UIManager.getCrossPlatformLookAndFeelClassName ())) {
        return;
    }
    setLaf (null, 1, 3, 0, UIManager.getSystemLookAndFeelClassName ());
}
----------------------------------------

private static boolean setLaf (String os, int wantedMajor, int wantedMinor, int wantedBugFix, String lafClassName) {
    if (os != null && ! System.getProperty ("os.name", "unknown").equals (os)) {
        return false;
    }
    try {
        UIManager.setLookAndFeel (lafClassName);
    } catch (UnsupportedLookAndFeelException e) {
        if (DEBUGGING) {
            System.err.println ("fail: UnsupportedLookAndFeelException" + lafClassName + e.getMessage ());
        }
        return false;
    } catch (IllegalAccessException e) {
        if (DEBUGGING) {
            System.err.println ("fail: IllegalAccessException" + lafClassName + e.getMessage ());
        }
        return false;
    } catch (InstantiationException e) {
        if (DEBUGGING) {
            System.err.println ("fail: InstantiationException" + lafClassName + e.getMessage ());
        }
        return false;
    } catch (ClassNotFoundException e) {
        if (DEBUGGING) {
            System.err.println ("fail: ClassNotFoundException" + lafClassName + e.getMessage ());
        }
        return false;
    } catch (Exception e) {
        if (DEBUGGING) {
            System.err.println ("fail: Exception" + lafClassName + e.getMessage ());
        }
        return false;
    }
    if (DEBUGGING) {
        System.err.println ("Choosing L&F " + lafClassName);
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19231727_19234082_29_43
19231727_19234082_72_86
Title: Sort Array based on number of character occurrences 
----------------------------------------

public int compare (Integer number1, Integer number2) {
    if (number1 == null && number2 == null) return 0;

    if (number1 == null) return - 1;

    if (number2 == null) return 1;

    int digitCount1 = digitCount (sortDigit, number1);
    int digitCount2 = digitCount (sortDigit, number2);
    return digitCount1 > 0 && digitCount2 > 0 ? digitCount1 - digitCount2 : digitCount2 > 0 ? - 1 : digitCount1 > 0 ? 1 : number1 - number2;
}
----------------------------------------

public int compare (String number1, String number2) {
    if (number1 == null && number2 == null) return 0;

    if (number1 == null) return - 1;

    if (number2 == null) return 1;

    int digitCount1 = digitCount (sortDigit, number1);
    int digitCount2 = digitCount (sortDigit, number2);
    return digitCount1 > 0 && digitCount2 > 0 ? digitCount1 - digitCount2 : digitCount2 > 0 ? - 1 : digitCount1 > 0 ? 1 : Integer.parseInt (number1) - Integer.parseInt (number2);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19236980_19237083_1_10
19236980_19237136_2_10
Title: How Do I Print the values in a recursive Program in Java? 
----------------------------------------

public static void f (int a, int b) {
    if (a == b) {
        System.out.print (a);
    } else {
        System.out.print (a + ",");
        f (a + 1, b);
        System.out.print ("," + a);
    }
}
----------------------------------------

public static void f (int a, int b) {
    if (a == b) {
        System.out.print (a);
    } else {
        System.out.print (a + ",");
        f (a + 1, b);
        System.out.print ("," + a);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19236980_19237083_1_10
19236980_19237345_1_13
Title: How Do I Print the values in a recursive Program in Java? 
----------------------------------------

public static void f (int a, int b) {
    if (a == b) {
        System.out.print (a);
    } else {
        System.out.print (a + ",");
        f (a + 1, b);
        System.out.print ("," + a);
    }
}
----------------------------------------

public static void f (int a, int b) {
    if (a != b) {
        System.out.print (a + ",");
        if (a < b) {
            f (a + 1, b);
        } else {
            f (a - 1, b);
        }
        System.out.print ("," + a);
    } else {
        System.out.print (a);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19236980_19237136_2_10
19236980_19237345_1_13
Title: How Do I Print the values in a recursive Program in Java? 
----------------------------------------

public static void f (int a, int b) {
    if (a == b) {
        System.out.print (a);
    } else {
        System.out.print (a + ",");
        f (a + 1, b);
        System.out.print ("," + a);
    }
}
----------------------------------------

public static void f (int a, int b) {
    if (a != b) {
        System.out.print (a + ",");
        if (a < b) {
            f (a + 1, b);
        } else {
            f (a - 1, b);
        }
        System.out.print ("," + a);
    } else {
        System.out.print (a);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19238329_19238384_2_13
19238329_19238396_1_12
Title: Grabbing doubles from a scanned line. 
----------------------------------------

public static void main (String args []) {
    String input = "# should be O: 0.00, A: 0.45, B: 0.35, AB: 0.20";
    Pattern pattern = Pattern.compile ("[0-9].[0-9]{2}");
    Matcher m = pattern.matcher (input);
    int i = 0;
    while (m.find ()) {
        String str = m.group ();
        double value = Double.parseDouble (str);
        System.out.println ("#" + i + " " + value);
        i ++;
    }
}
----------------------------------------

public static void main (String [] args) {
    String line = "# should be O: 0.00, A: 0.45, B: 0.35, AB: 0.20";
    Scanner sc = new Scanner (line);
    sc.useDelimiter ("\\ |,");
    for (int i = 0;
    i < 4; i ++) {
        while (! sc.hasNextDouble ()) {
            sc.next ();
        }
        double d = sc.nextDouble ();
        System.out.println (d);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19243678_19244245_1_21
19243678_19244253_1_17
Title: Is Hashing a suitable solution? Am I over-complicating it? 
----------------------------------------

public Door getDoor (int doorID) {
    switch (doorID) {
        case NORTH :
            {
                if (doorExists (NORTH)) return doors [0];
                else return null;

            } case SOUTH :
            {
                if (doorExists (NORTH)) return doors [1];
                else return null;

            } case EAST :
            {
                if (doorExists (NORTH)) return doors [2];
                else return null;

            } case WEST :
            {
                if (doorExists (NORTH)) return doors [3];
                else return null;

            }}
    return null;
}
----------------------------------------

public Door getDoor (int doorID) {
    switch (doorID) {
        case NORTH :
            {
                return doors [0];
            } case SOUTH :
            {
                return doors [1];
            } case EAST :
            {
                return doors [2];
            } case WEST :
            {
                return doors [3];
            }}
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19247060_19247207_1_17
19247060_19247210_1_11
Title: Iterate 3 vectors split contents and assign 
----------------------------------------

public static List < Tokens > getTokens (Vector < NameBuffer > vc1) {
    List < Tokens > tokenList = new ArrayList < Tokens > ();
    while (it1.hasNext ()) {
        Tokens tokens = new Tokens ();
        tokenList.add (tokens);
        while (stringTokenizer.hasMoreElements ()) {
        }
        System.out.println (tokens);
    }
    return tokenList;
}
----------------------------------------

public static Tokens getTokens (Vector < NameBuffer > vc1) {
    Iterator it1 = vc1.iterator ();
    while (it1.hasNext ()) {
        String onerecord = it1.next ().toString ();
        String ss [] = onerecord.split (":|\\s");
        System.out.println (ss [0] + " = " + ss [1]);
        System.out.println (ss [2] + " = " + ss [3]);
        System.out.println (ss [4] + " = " + ss [5]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19250888_19250980_5_23
19250888_19251185_1_25
Title: Performance issue in String to Number conversion 
----------------------------------------

public static int doSum (String str) {
    String [] sArray = str.split (" ");
    char [] chr = null;
    String temp;
    String number = "";
    int sum = 0;
    for (String s : sArray) {
        chr = s.toCharArray ();
        for (char c : chr) {
            temp = String.valueOf (c);
            if (isNum (temp)) {
                number = number + temp;
            }
        }
        sum = sum + Integer.parseInt (number);
        number = "";
    }
    return sum;
}
----------------------------------------

public static int doSum (String str) {
    int sum = 0;
    int start = - 1;
    for (int i = 0;
    i < str.length (); i ++) {
        char ch = str.charAt (i);
        if (Character.isDigit (ch)) {
            if (start == - 1) {
                start = i;
            }
        } else {
            if (start != - 1) {
                sum += Integer.parseInt (str.substring (start, i));
                start = - 1;
            }
        }
    }
    if (start != - 1) {
        sum += Integer.parseInt (str.substring (start, str.length ()));
    }
    return sum;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19259847_19259942_5_17
19259847_19260101_7_26
Title: Can I instantiate a switch? Or what is wrong with this? 
----------------------------------------

public static void main (String args []) {
    System.out.println ("Welcome to setup. ");
    System.out.println ("1. First setup");
    System.out.println ("2. I didn't mean to setup, go back");
    switch (setup_menu) {
        case 1 :
            SetUp first = new SetUp ();
            break;
        default :
            break;
    }
}
----------------------------------------

public static void main (String args []) {
    System.out.println ("Welcome to setup. ");
    Scanner in = new Scanner (System.in);
    int menu_choice = in.nextInt ();
    switch (menu_choice) {
        case 1 :
            System.out.println ("1. First setup");
            break;
        case 2 :
            System.out.println ("2. Second setup");
            break;
        default :
            System.out.println ("This setup case will be executed " + "if not any else case is met (optional).");
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19260820_19260969_1_11
19260820_21426184_1_12
Title: Alternating between two arraylists. 
----------------------------------------

private static void interleave (ArrayList < Integer > a1, ArrayList < Integer > a2) {
    int i = - 1;
    for (Integer elem : a2) {
        if (i < a1.size () - 1) {
            i += 2;
        } else {
            i += 1;
        }
        a1.add (i, elem);
    }
}
----------------------------------------

private static void interleave (ArrayList < Integer > a1, ArrayList < Integer > a2) {
    int i = - 1;
    for (Integer elem : a2) {
        if (i < a1.size () - 1) {
            i += 2;
        } else {
            i += 1;
        }
        a1.add (i, elem);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261329_23649002_6_40
19261329_23652514_7_16
Title: Math string with no spaces? 
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("enter a number ");
    int x = scanner.nextInt ();
    System.out.println ("put +, -, / or * ");
    char expo1 = scanner.next ().charAt (0);
    System.out.println ("second number please ");
    int y = scanner.nextInt ();
    System.out.println ("Answer is" + ":");
    if (expo1 == '/' && y == '0') {
        System.out.println ("cannot be divided by 0");
    } else if (expo1 == '-') {
        System.out.println (x - y);
    } else if (expo1 == '+') {
        System.out.println (x + y);
    } else if (expo1 == '/') {
        System.out.println (x / y);
    } else if (expo1 == '%') {
        System.out.println (x % y);
    } else {
        System.out.println (" Error!");
    }

}
----------------------------------------

public static void main (String [] args) throws ScriptException {
    System.out.println ("Enter an operation:");
    Scanner input = new Scanner (System.in);
    String operation = input.nextLine ();
    ScriptEngineManager manager = new ScriptEngineManager ();
    ScriptEngine engine = manager.getEngineByName ("js");
    Object result = engine.eval (operation);
    System.out.printf ("%s = %s%n", operation, result);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261374_19261426_1_25
19261374_19261467_1_26
Title: "Exception handling catch causes while loop to stop" 
----------------------------------------

public static void readNumbers () {
    File inputFile = new File ("C:/users/AC/Desktop/input.txt");
    try {
        Scanner reader = new Scanner (inputFile);
        while (reader.hasNext ()) {
            try {
                int num = reader.nextInt ();
                System.out.println ("Number read: " + num);
            } catch (InputMismatchException e) {
                System.out.println ("Input error ");
            }
        }
    } catch (FileNotFoundException e2) {
        System.out.println ("File not found!");
    }
}
----------------------------------------

public static void readNumbers () {
    File inputFile = new File ("C:/users/AC/Desktop/input.txt");
    try {
        Scanner reader = new Scanner (inputFile);
        while (reader.hasNext ()) {
            try {
                int num = reader.nextInt ();
                System.out.println ("Number read: " + num);
            } catch (InputMismatchException e) {
                System.out.println ("Input error ");
                reader.next ();
            }
        }
    } catch (FileNotFoundException e2) {
        System.out.println ("File not found!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261758_19261893_15_22
19261758_19262270_19_26
Title: "Can find all the prime numbers but doesn't include ""2""?" 
----------------------------------------

public static boolean Priem (int n) {
    for (int i = 2;
    i < n; i ++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean Priem (int n) {
    for (int i = 2;
    i < Math.sqrt (n) + 1; i ++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261758_19261893_2_13
19261758_19261955_2_10
Title: "Can find all the prime numbers but doesn't include ""2""?" 
----------------------------------------

public static void main (String [] args) {
    int cnt = 0;
    for (int i = 2;
    ; i ++) {
        if (Priem (i)) {
            cnt ++;
            System.out.println (i);
            if (cnt == 200) break;

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int range = 500;
    for (int i = 2;
    i < range; i ++) {
        if (isPrime (i)) {
            System.out.println (i);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261758_19261893_2_13
19261758_19262270_1_17
Title: "Can find all the prime numbers but doesn't include ""2""?" 
----------------------------------------

public static void main (String [] args) {
    int cnt = 0;
    for (int i = 2;
    ; i ++) {
        if (Priem (i)) {
            cnt ++;
            System.out.println (i);
            if (cnt == 200) break;

        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int cnt = 0;
    for (int i = 2;
    ; i ++) {
        if (i == 2) {
            System.out.println (i);
            continue;
        }
        if (Priem (i)) {
            cnt ++;
            System.out.println (i);
            if (cnt == 200) break;

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19261758_19261955_2_10
19261758_19262270_1_17
Title: "Can find all the prime numbers but doesn't include ""2""?" 
----------------------------------------

public static void main (String [] args) {
    int range = 500;
    for (int i = 2;
    i < range; i ++) {
        if (isPrime (i)) {
            System.out.println (i);
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int cnt = 0;
    for (int i = 2;
    ; i ++) {
        if (i == 2) {
            System.out.println (i);
            continue;
        }
        if (Priem (i)) {
            cnt ++;
            System.out.println (i);
            if (cnt == 200) break;

        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19262454_19262574_1_18
19262454_19262643_10_32
Title: Babysitting Application 
----------------------------------------

public BabysittingJob (int year, int sequentialNumber, int babysitterCode, int childrenNumber, int hoursWorked) {
    year = year % 2000;
    int jobNumber = ((year * 10000) + sequentialNumber);
    if (babysitterCode == 1) {
        babysitter = "Cindy";
    } else if (babysitterCode == 2) {
        babysitter = "Greg";
    } else if (babysitterCode == 3) {
        babysitter = "Marcia";
    }

    if (babysitterCode == 1) {
        fee = hoursWorked * 7 * childrenNumber;
    } else if (babysitterCode > 1 && childrenNumber == 1) {
        fee = hoursWorked * 9 * childrenNumber;
    } else if (babysitterCode > 1 && childrenNumber > 1) {
        fee = (hoursWorked * 9) + ((-- childrenNumber) * hoursWorked * 4);
    }

}
----------------------------------------

public BabysittingJob (int year, int sequentialNumber, int babysitterCode, int childrenNumber, int hoursWorked, String babysitter) {
    year = year % 2000;
    this.childrenNumber = childrenNumber;
    this.hoursWorked = hoursWorked;
    this.babysitterCode = babysitterCode;
    this.jobNumber = ((year * 10000) + sequentialNumber);
    if (babysitterCode == 1) {
        this.babysitter = "Cindy";
    } else if (babysitterCode == 2) {
        this.babysitter = "Greg";
    } else if (babysitterCode == 3) {
        this.babysitter = "Marcia";
    }

    if (babysitterCode == 1) {
        this.fee = hoursWorked * 7 * childrenNumber;
    } else if (babysitterCode > 1 && childrenNumber == 1) {
        this.fee = hoursWorked * 9 * childrenNumber;
    } else if (babysitterCode > 1 && childrenNumber > 1) {
        this.fee = (hoursWorked * 9) + ((-- childrenNumber) * hoursWorked * 4);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19263288_19263357_1_10
19263288_19263475_17_26
Title: User input using this Scanner class in JAVA 
----------------------------------------

public NewCar (int year, String make, String model, int sticker, int discount, int tax, int month) {
    this.year = year;
    this.make = make;
    this.model = model;
    this.sticker = sticker;
    this.discount = discount;
    this.tax = tax;
    this.month = month;
}
----------------------------------------

public NewCar (int year, String make, String model, double sticker, double discount, double tax, int month) {
    this.year = year;
    this.make = make;
    this.model = model;
    this.sticker = sticker;
    this.discount = discount;
    this.tax = tax;
    this.month = month;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19271455_19274778_3_14
19271455_19280866_5_15
Title: unable to handle comet based thread at server side 
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep (60000);
            synchronized (sessions) {
                for (Session sx : sessions) {
                    if (sx.isExpired ()) {
                        sx.dispose ();
                        sessions.remove (sx);
                    }
                }
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep (60000);
            for (HttpSession sx : sessions) {
                sx.setAttribute ("noExpire", "me again");
            }
        } catch (Exception e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19284411_19294684_17_49
19284411_19303112_21_49
Title: How to make the MenuItems in a JavaFX context menu support an onMouseOver event 
----------------------------------------

public void start (Stage stage) throws Exception {
    AnchorPane anchorPane = new AnchorPane ();
    Scene scene = new Scene (anchorPane);
    stage.setScene (scene);
    Line linea = new Line (0, 0, 50, 50);
    linea.setFill (Color.BLACK);
    final Tooltip t = new Tooltip ("Line 1");
    linea.setOnMouseEntered (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent event) {
            Line line = (Line) event.getSource ();
            line.setStroke (Color.RED);
            t.show ((Line) event.getSource (), event.getScreenX (), event.getScreenY ());
        }}

    );
    linea.setOnMouseExited (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent event) {
            Line line = (Line) event.getSource ();
            line.setStroke (Color.BLACK);
            t.hide ();
        }}

    );
    anchorPane.getChildren ().add (linea);
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    final Line line1 = new Line (60, 10, 150, 10);
    final Line line2 = new Line (60, 30, 150, 50);
    final Line line3 = new Line (60, 60, 150, 90);
    final ContextMenu cm = new ContextMenu ();
    cm.getItems ().add (getMenuItemForLine ("line 1", line1));
    cm.getItems ().add (getMenuItemForLine ("line 2", line2));
    cm.getItems ().add (getMenuItemForLine ("line 3", line3));
    final Rectangle rectangle = new Rectangle (70, 70, Color.TAN);
    rectangle.addEventHandler (MouseEvent.MOUSE_CLICKED, new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent e) {
            if (e.getButton () == MouseButton.SECONDARY) {
                cm.show (rectangle, e.getScreenX (), e.getScreenY ());
            }
        }}

    );
    Group root = new Group ();
    root.getChildren ().addAll (rectangle, line1, line2, line3);
    Scene scene = new Scene (root, 300, 250);
    scene.getStylesheets ().add (getClass ().getResource ("style.css").toExternalForm ());
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19287212_37895323_1_29
19287212_42676067_3_21
Title: Find non-repeated character in a string 
----------------------------------------

public static void main (String args []) {
    String input = "tweet";
    char process [] = input.toCharArray ();
    boolean status = false;
    int index = 0;
    for (int i = 0;
    i < process.length; i ++) {
        for (int j = 0;
        j < process.length; j ++) {
            if (i == j) {
                continue;
            } else {
                if (process [i] == process [j]) {
                    status = false;
                    break;
                } else {
                    status = true;
                    index = i;
                }
            }
        }
        if (status) {
            System.out.println ("First non-repeated string is : " + process [index] + " INDEX " + index);
            break;
        }
    }
}
----------------------------------------

public static void main (String args []) {
    System.out.println ("Enter input String");
    Scanner s = new Scanner (System.in);
    String input = s.nextLine ();
    int length = input.length ();
    for (int i = 0;
    i < length; i ++) {
        int temp = 0;
        for (int j = 0;
        j < length; j ++) {
            if (input.charAt (i) == input.charAt (j)) {
                temp ++;
            }
        }
        if (temp == 1) {
            System.out.println (input.charAt (i));
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19288580_19288984_35_44
19288580_19288984_56_69
Title: Multi Threading Creating Random delay per thread 
----------------------------------------

public void run () {
    while (true) {
        try {
            QueueItem next = queue.take ();
            System.out.println ("Picked " + next);
        } catch (InterruptedException ex) {
            ex.printStackTrace ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        try {
            Thread.sleep ((int) (250 + (Math.random () * 4750)));
        } catch (InterruptedException ex) {
        }
        queue.offer (new QueueItem (name));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19296519_19296795_1_27
19296519_19296938_7_37
Title: Purchase Java part 2 
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    int capacity = 100;
    String [] b = new String [capacity];
    String [] aw = new String [capacity];
    int itemCount = 0;
    int x;
    do {
        System.out.print ("Item code:");
        b [itemCount] = a.next ();
        System.out.print ("des:");
        aw [itemCount] = a.next ();
        System.out.println ("yes or no:");
        ans = a.next ();
        itemCount ++;
    } while (ans.equals ("yes"));
    for (x = 0; x < itemCount; x ++) {
        System.out.println ("Item code:" + b [x]);
        System.out.println ("Item description:" + aw [x]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    ArrayList < String > br = new ArrayList < String > ();
    ArrayList < String > ar = new ArrayList < String > ();
    do {
        System.out.print ("Item code:");
        br.add (a.next ());
        System.out.print ("des:");
        ar.add (a.next ());
        System.out.println ("yes or no:");
        ans = a.next ();
    } while (ans.equals ("yes"));
    for (int i = 0;
    i < br.size (); i ++) {
        System.out.println ("Item code:" + br.get (i));
        System.out.println ("Item description:" + ar.get (i));
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19296519_19296795_1_27
19296519_19297107_1_25
Title: Purchase Java part 2 
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    int capacity = 100;
    String [] b = new String [capacity];
    String [] aw = new String [capacity];
    int itemCount = 0;
    int x;
    do {
        System.out.print ("Item code:");
        b [itemCount] = a.next ();
        System.out.print ("des:");
        aw [itemCount] = a.next ();
        System.out.println ("yes or no:");
        ans = a.next ();
        itemCount ++;
    } while (ans.equals ("yes"));
    for (x = 0; x < itemCount; x ++) {
        System.out.println ("Item code:" + b [x]);
        System.out.println ("Item description:" + aw [x]);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    String itemCounts = "";
    String descriptions = "";
    do {
        System.out.print ("Item code:");
        itemCounts += "" + a.next () + "\n";
        System.out.print ("des:");
        descriptions += "" + a.next () + "\n";
        System.out.println ("yes or no:");
        ans = a.next ();
    } while (ans.equals ("yes"));
    String [] b = itemCounts.split ("\n");
    String [] aw = descriptions.split ("\n");
    for (int i = 0;
    i < b.length; i ++) {
        System.out.println ("Item code:" + b [i]);
        System.out.println ("Item description:" + aw [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19296519_19296938_7_37
19296519_19297107_1_25
Title: Purchase Java part 2 
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    ArrayList < String > br = new ArrayList < String > ();
    ArrayList < String > ar = new ArrayList < String > ();
    do {
        System.out.print ("Item code:");
        br.add (a.next ());
        System.out.print ("des:");
        ar.add (a.next ());
        System.out.println ("yes or no:");
        ans = a.next ();
    } while (ans.equals ("yes"));
    for (int i = 0;
    i < br.size (); i ++) {
        System.out.println ("Item code:" + br.get (i));
        System.out.println ("Item description:" + ar.get (i));
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner a = new Scanner (System.in);
    String ans;
    String itemCounts = "";
    String descriptions = "";
    do {
        System.out.print ("Item code:");
        itemCounts += "" + a.next () + "\n";
        System.out.print ("des:");
        descriptions += "" + a.next () + "\n";
        System.out.println ("yes or no:");
        ans = a.next ();
    } while (ans.equals ("yes"));
    String [] b = itemCounts.split ("\n");
    String [] aw = descriptions.split ("\n");
    for (int i = 0;
    i < b.length; i ++) {
        System.out.println ("Item code:" + b [i]);
        System.out.println ("Item description:" + aw [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19299193_19299300_6_13
19299193_19299535_8_17
Title: How to loop user input in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 20; i ++) {
        System.out.println ("What is the kitten's name?");
        String kitten = scan.nextLine ();
        System.out.println ("That kitten's name was " + kitten);
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] kittenNames = new int [NUMBER_OF_KITTENS];
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < NUMBER_OF_KITTENS; ++ i) {
        System.out.println ("What is the name of kitten number " + (i + 1) + "?");
        kittenNames [i] = scan.nextLine ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
19299193_19299300_6_13
19299193_19299574_1_14
Title: How to loop user input in Java 
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    for (int i = 0;
    i < 20; i ++) {
        System.out.println ("What is the kitten's name?");
        String kitten = scan.nextLine ();
        System.out.println ("That kitten's name was " + kitten);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scan = new Scanner (System.in);
    ArrayList < String > kittenNames = new ArrayList < > ();
    int number = 3;
    for (int i = 1;
    i < number; i ++) {
        System.out.printf ("What is the %s kitten's name?\n", ordinal (i));
        kittenNames.add (scan.nextLine ());
    }
    System.out.println ("===============================================");
    for (String name : kittenNames) {
        System.out.println (name);
    }
}
----------------------------------------
