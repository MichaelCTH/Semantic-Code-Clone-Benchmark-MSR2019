$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52237861_52237926_2_19
52237861_52238066_1_16
Title: Java while loop is doing three iterations by default 
----------------------------------------

public static void main (String [] args) throws java.io.IOException {
    char answer = 'K', ignore, ch = 'a';
    int i = 0;
    while (ch != answer) {
        System.out.println ("I am Thinking of a letter between A and Z, can you guess it?");
        ch = (char) System.in.read ();
        i ++;
        if (ch != answer) {
            System.out.println ("Wrong ! please try again");
        } else {
            System.out.println ("Correct!, you guessed after " + i + " attempts");
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    char answer = 'K', ignore, ch = 'a';
    int i = 0;
    System.out.println ("I am Thinking of a letter between A and Z, can  you guess it?");
    while (ch != 'K') {
        ch = (char) System.in.read ();
        if (! Character.isLetter (ch)) {
            continue;
        }
        System.out.println ("Wrong ! please try again");
        i ++;
    }
    System.out.println ("Correct!, you guessed after " + i + " attempts");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52238587_52238616_1_11
52238587_52238819_6_19
Title: How to ensure the closure of an I/O stream? 
----------------------------------------

void print (Reader reader) throws IOException {
    try {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    } finally {
        reader.close ();
    }
}
----------------------------------------

void print (Reader reader) throws IOException {
    try {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    } finally {
        try {
            reader.close ();
        } catch (IOException e) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52238587_52238616_1_11
52238587_52243223_6_14
Title: How to ensure the closure of an I/O stream? 
----------------------------------------

void print (Reader reader) throws IOException {
    try {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    } finally {
        reader.close ();
    }
}
----------------------------------------

void print (Reader readerArg) throws IOException {
    try (Reader reader = readerArg) {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52238587_52238819_6_19
52238587_52243223_6_14
Title: How to ensure the closure of an I/O stream? 
----------------------------------------

void print (Reader reader) throws IOException {
    try {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    } finally {
        try {
            reader.close ();
        } catch (IOException e) {
        }
    }
}
----------------------------------------

void print (Reader readerArg) throws IOException {
    try (Reader reader = readerArg) {
        int code = reader.read ();
        while (code != - 1) {
            System.out.print ((char) code);
            code = reader.read ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52242565_52242655_2_24
52242565_52242779_8_22
Title: how to delete up extra line breakers in string 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner scan = new Scanner (new File ("file.txt"));
    while (scan.hasNext ()) {
        String f1 [] = null;
        f1 = scan.nextLine ().split ("(.*?);");
        for (int i = 0;
        i < f1.length; i ++) {
            System.out.print (f1 [i]);
        }
    }
    scan.close ();
    BufferedReader br = new BufferedReader (new FileReader (new File ("file.txt")));
    String str = null;
    while ((str = br.readLine ()) != null) {
        String f1 [] = null;
        f1 = str.split ("(.*?);");
        for (int i = 0;
        i < f1.length; i ++) {
            System.out.print (f1 [i]);
        }
    }
    br.close ();
}
----------------------------------------

public static void main (String [] args) {
    String s = "trump;Donald Trump;trump@yahoo.eu    " + "obama;Barack Obama;obama@google.com   " + "bush;George Bush;bush@inbox.com    " + "clinton;Bill Clinton;clinton@mail.com";
    String spaceStrings [] = s.split ("[\\s,;]+");
    String output = "";
    for (String word : spaceStrings) {
        if (validate (word)) {
            output += word;
        }
    }
    System.out.println (output);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52243580_52243654_1_21
52243580_52243691_1_13
Title: how to remove input buffer from java 
----------------------------------------

public static void main (String [] args) {
    String text = "5\n" + "line 1\n" + "line 2\n" + "line 3\n" + "line 4\n" + "line 5\n" + "line 6\n";
    Scanner input = new Scanner (new ByteArrayInputStream (text.getBytes ()));
    int n = input.nextInt ();
    input.nextLine ();
    String [] arr = new String [n];
    for (int i = 0;
    i < n; i ++) {
        arr [i] = input.nextLine ();
    }
    System.out.println (Arrays.asList (arr));
}
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    int n = Integer.parseInt (input.nextLine ());
    String [] arr = new String [n];
    int i, j;
    for (i = 0; i < n; i ++) {
        arr [i] = input.nextLine ();
    }
    for (String s : arr) {
        System.out.println (s);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52251112_52251306_6_23
52251112_52251610_5_22
Title: New to Java and Keep Getting Syntax Error 
----------------------------------------

public static void main (String [] args) {
    double cartonhold = 3.78;
    double productioncost = 0.38;
    double cartonprofit = 0.27;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter how many liters of milk was produced; ");
    double produced = sc.nextInt ();
    double cartonsneeded = produced / cartonhold;
    System.out.println ("Milk cartons needed = " + cartonsneeded);
    System.out.println ("Cost of production = " + produced * productioncost);
    System.out.println ("Profit = " + produced * cartonprofit);
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    double cartonhold = 3.78;
    double productioncost = 0.38;
    double cartonprofit = 0.27;
    Scanner sc = new Scanner (System.in);
    System.out.print ("Enter how many liters of milk was produced; ");
    double produced = sc.nextInt ();
    double cartonsneeded = produced / cartonhold;
    System.out.println ("Milk cartons needed = " + cartonsneeded);
    System.out.println ("Cost of production = " + produced * productioncost);
    System.out.println ("Profit = " + produced * cartonprofit);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52252336_52252856_1_10
52252336_52253841_6_16
Title: Find an array of Keys(a pattern) in an given array 
----------------------------------------

public static void main (String args []) {
    int [] a = {1, 5, 7, 3, 6, 10, 9, 8, 3, 6, 7, 10, 9, 8};
    int [] key = {3, 6, 10};
    List < Integer > pos = new ArrayList < Integer > ();
    for (int i = 0;
    i <= a.length - key.length; i ++) {
        pos = getPosition (i, a, key);
        if (pos != null) System.err.println (pos);

    }
}
----------------------------------------

public static void main (String [] args) {
    int [] key = {3, 8, 6};
    int [] target = {3, 6, 8, 8, 6, 3, 8, 6, 2, 4};
    for (int i = 0;
    i < target.length - key.length; i ++) {
        int [] temp = Arrays.copyOfRange (target, i, i + key.length);
        if (Arrays.equals (key, temp)) {
            String indices = IntStream.range (i, i + key.length).mapToObj (e -> String.valueOf (e)).collect (Collectors.joining (","));
            System.out.println (indices);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52255757_52255905_1_11
52255757_52256356_2_11
Title: Getting weird output while finding prime number in java 
----------------------------------------

public boolean isPrime (int n) {
    if (n <= 1) {
        return false;
    }
    for (int i = 2;
    i < Math.sqrt (n); i ++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

boolean isPrime (int num) {
    if (num % 2 == 0) return false;

    for (int i = 3;
    i * i <= num; i += 2) {
        if (num % i == 0) return false;

    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52263366_52263510_3_29
52263366_52264209_2_31
Title: multidimensional array with no repeated numbers of the same row 
----------------------------------------

public static void main (String [] args) {
    int matrice2 [] [] = new int [5] [5];
    for (int i = 0;
    i < 5; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < 5; j ++) {
            matrice2 [i] [j] = (int) (Math.random () * 10);
            System.out.print (" " + matrice2 [i] [j] + " ");
        }
    }
    System.out.println (" ");
    System.out.println (" ");
    for (int i = 0;
    i < 5; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < 5; j ++) {
            for (int k = 0;
            k < 5; k ++) {
                if (j != k) {
                    if (matrice2 [i] [j] == matrice2 [i] [k]) {
                        int newValue = (int) (Math.random () * 10);
                        matrice2 [i] [j] = newValue;
                    }
                }
            }
            System.out.print (" " + matrice2 [i] [j] + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    int matrix [] [] = new int [5] [5];
    boolean uniqeMatrixFound = false;
    while (! uniqeMatrixFound) {
        fillMatrix (matrix);
        for (int i = 0;
        i < matrix.length; i ++) {
            HashSet < Integer > columnNumber = new HashSet < > ();
            for (int j = 0;
            j < matrix.length; j ++) {
                columnNumber.add (matrix [j] [i]);
            }
            if (columnNumber.size () != matrix.length) {
                uniqeMatrixFound = false;
                break;
            }
            uniqeMatrixFound = true;
        }
    }
    for (int i = 0;
    i < matrix.length; i ++) {
        System.out.println (" ");
        for (int j = 0;
        j < matrix.length; j ++) {
            System.out.print (" " + matrix [i] [j] + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52279289_52281811_1_29
52279289_52283219_10_24
Title: Rotating a triangle around its axis 
----------------------------------------

public void paintComponent (Graphics g) {
    int num_2 = 8;
    int bigOval_h = 300, bigOval_w = 300;
    g.setColor (Color.BLUE);
    g.drawOval (0 + 500, 0, bigOval_h, bigOval_w);
    g.setColor (Color.RED);
    Line2D lin1 = new Line2D.Float (150f + 500f, 0f, 20f + 500f, 225f);
    Line2D lin2 = new Line2D.Float (150f + 500f, 0f, 280f + 500f, 225f);
    Line2D lin3 = new Line2D.Float (20f + 500f, 225f, 280f + 500f, 225f);
    double pivotX = 500.0 + bigOval_w / 2.0;
    double pivotY = 0.0 + bigOval_h / 2.0;
    for (int i = 0;
    i < num_2; i ++) {
        AffineTransform affineTransform = AffineTransform.getRotateInstance (Math.toRadians (360.0 / num_2 * i), pivotX, pivotY);
        ((Graphics2D) g).draw (affineTransform.createTransformedShape (lin1));
        ((Graphics2D) g).draw (affineTransform.createTransformedShape (lin2));
        ((Graphics2D) g).draw (affineTransform.createTransformedShape (lin3));
    }
}
----------------------------------------

public void paintComponent (Graphics2D g, Point center) {
    int [] xVertices = new int [3];
    int [] yVertices = new int [3];
    xVertices [0] = (int) (center.getX () - (Math.cos (rotation) * radius));
    yVertices [0] = (int) (center.getY () - (Math.sin (rotation) * radius));
    xVertices [1] = (int) (center.getX () - (Math.cos (Math.PI * 0.66667 + rotation) * radius));
    yVertices [1] = (int) (center.getY () - (Math.sin (Math.PI * 0.66667 + rotation) * radius));
    xVertices [2] = (int) (center.getX () - (Math.cos (Math.PI * 1.33333 + rotation) * radius));
    yVertices [2] = (int) (center.getY () - (Math.sin (Math.PI * 1.33333 + rotation) * radius));
    Polygon polygon = new Polygon (xVertices, yVertices, 3);
    g.setColor (Color.RED);
    g.drawPolygon (polygon);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52304357_52304654_6_36
52304357_52304668_13_58
Title: getting five random elements out of a java array 
----------------------------------------

public static void main (String [] args) {
    List < String > myCards = Arrays.asList ("two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "jack", "queen", "king", "ace");
    Collections.shuffle (myCards);
    HashSet < String > myHand = new HashSet < > ();
    for (int i = 0;
    i < 5; i ++) {
        myHand.add (myCards.get (i));
        System.out.println (myCards.get (i));
    }
    System.out.print ("Guess the card in my hand: ");
    Scanner answer = new Scanner (System.in);
    String s = answer.nextLine ();
    if (myHand.contains (s)) {
        System.out.println ("I have that card in my hand");
    } else {
        System.out.println ("I do not have that card in hand!");
    }
    System.out.print ("These are the cards which is in my hand: ");
    System.out.println (String.join (",", myHand));
}
----------------------------------------

public static void main (String [] args) {
    String [] myCards = new String [] {"two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "jack", "queen", "king", "ace"};
    String [] cardsInHand = new String [5];
    List < String > cards = new LinkedList < > (Arrays.asList (myCards));
    Collections.shuffle (cards);
    for (int i = 0;
    i < 5; i ++) {
        cardsInHand [i] = cards.remove (0);
    }
    System.out.println (Arrays.toString (cardsInHand));
    System.out.print ("Guess the card in my hand: ");
    Scanner answer = new Scanner (System.in);
    String s = answer.nextLine ();
    Arrays.sort (cardsInHand);
    if (Arrays.binarySearch (cardsInHand, s) >= 0) {
        System.out.println ("I do have that card in hand");
    } else {
        System.out.println ("I do not have that card in hand!");
    }
    answer.close ();
    System.out.print ("These were the cards I had in hand: ");
    System.out.println (Arrays.toString (cardsInHand));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52315294_52315657_1_24
52315294_52315797_1_20
Title: How to check Tic-Tac-Toe wins 
----------------------------------------

public static int checkWin (int [] [] field) {
    if (field [0] [0] != 0 && checkField (field, 0, 0, 1, 0, field [0] [0]) == 2) return field [0] [0];

    if (field [0] [0] != 0 && checkField (field, 0, 0, 1, 1, field [0] [0]) == 2) return field [0] [0];

    if (field [0] [0] != 0 && checkField (field, 0, 0, 0, 1, field [0] [0]) == 2) return field [0] [0];

    if (field [2] [0] != 0 && checkField (field, 2, 0, 0, 1, field [2] [0]) == 2) return field [2] [0];

    if (field [2] [0] != 0 && checkField (field, 2, 0, - 1, 1, field [2] [0]) == 2) return field [2] [0];

    if (field [0] [2] != 0 && checkField (field, 0, 2, 1, 0, field [0] [2]) == 2) return field [0] [2];

    return 0;
}
----------------------------------------

private static boolean checkWin (final char...seq) {
    char firstEncounteredPlayer = ' ';
    for (char c : seq) {
        if (c == '+') {
            return false;
        }
        if (firstEncounteredPlayer == ' ') {
            firstEncounteredPlayer = c;
        }
        if (firstEncounteredPlayer != c) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52327457_52327769_3_24
52327457_52327895_2_12
Title: Number of rotations required to make string 
----------------------------------------

public static int arrayLeftRotation (String str1, String str2) {
    int nr_rotate;
    int counter;
    nr_rotate = 0;
    for (counter = 0; counter < str1.length (); counter ++) {
        if (str1.equals (str2)) return (nr_rotate);
        else {
            str1 = leftRotateByOne (str1);
            nr_rotate ++;
            System.out.println (str1);
        }
    }
    return (- 1);
}
----------------------------------------

public static int arrayLeftRotation (StringBuilder str1, StringBuilder str2) {
    int i;
    int count = 0;
    for (i = 0; i < str1.length (); i ++) {
        if (! str1.toString ().equals (str2.toString ())) {
            count ++;
            str1 = leftRotatebyOne (str1);
        } else return count;

    }
    return count;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52327457_52327769_3_24
52327457_52327930_1_10
Title: Number of rotations required to make string 
----------------------------------------

public static int arrayLeftRotation (String str1, String str2) {
    int nr_rotate;
    int counter;
    nr_rotate = 0;
    for (counter = 0; counter < str1.length (); counter ++) {
        if (str1.equals (str2)) return (nr_rotate);
        else {
            str1 = leftRotateByOne (str1);
            nr_rotate ++;
            System.out.println (str1);
        }
    }
    return (- 1);
}
----------------------------------------

public static int arrayLeftRotation (String str1, String str2) {
    StringBuilder builder = new StringBuilder (str1);
    for (int i = 0;
    i < str1.length (); i ++) {
        builder.append (str1.charAt (i)).delete (0, 1);
        if (str2.equals (builder.toString ())) {
            return i + 1;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52327457_52327895_2_12
52327457_52327930_1_10
Title: Number of rotations required to make string 
----------------------------------------

public static int arrayLeftRotation (StringBuilder str1, StringBuilder str2) {
    int i;
    int count = 0;
    for (i = 0; i < str1.length (); i ++) {
        if (! str1.toString ().equals (str2.toString ())) {
            count ++;
            str1 = leftRotatebyOne (str1);
        } else return count;

    }
    return count;
}
----------------------------------------

public static int arrayLeftRotation (String str1, String str2) {
    StringBuilder builder = new StringBuilder (str1);
    for (int i = 0;
    i < str1.length (); i ++) {
        builder.append (str1.charAt (i)).delete (0, 1);
        if (str2.equals (builder.toString ())) {
            return i + 1;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52350983_4_18
52350940_52351040_6_32
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

private static void countString (String str, Character character) {
    int [] counts = new int [MAX_CHAR];
    char [] chars = str.toCharArray ();
    for (char ch : chars) {
        if (character != null && character != ch) {
            continue;
        }
        counts [ch] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) {
            System.out.println ("Character " + (char) i + " appeared " + counts [i] + " times");
        }
    }
}
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52350983_4_18
52350940_52351109_6_38
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

private static void countString (String str, Character character) {
    int [] counts = new int [MAX_CHAR];
    char [] chars = str.toCharArray ();
    for (char ch : chars) {
        if (character != null && character != ch) {
            continue;
        }
        counts [ch] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) {
            System.out.println ("Character " + (char) i + " appeared " + counts [i] + " times");
        }
    }
}
----------------------------------------

public static void countString (String str) {
    int count [] = new int [MAX_CHAR];
    int length = str.length ();
    for (int i = 0;
    i < length; i ++) count [str.charAt (i)] ++;

    char ch [] = new char [str.length ()];
    for (int i = 0;
    i < length; i ++) {
        ch [i] = str.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (str.charAt (i) == ch [j]) {
                find ++;
            }
        }
        if (find == 1) {
            for (int k = 0;
            k < count [str.charAt (i)]; k ++) System.out.print (str.charAt (i) + ",");

            System.out.println (count [str.charAt (i)]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52350983_4_18
52350940_52351119_8_32
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

private static void countString (String str, Character character) {
    int [] counts = new int [MAX_CHAR];
    char [] chars = str.toCharArray ();
    for (char ch : chars) {
        if (character != null && character != ch) {
            continue;
        }
        counts [ch] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) {
            System.out.println ("Character " + (char) i + " appeared " + counts [i] + " times");
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52350983_4_18
52350940_52351254_10_19
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

private static void countString (String str, Character character) {
    int [] counts = new int [MAX_CHAR];
    char [] chars = str.toCharArray ();
    for (char ch : chars) {
        if (character != null && character != ch) {
            continue;
        }
        counts [ch] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) {
            System.out.println ("Character " + (char) i + " appeared " + counts [i] + " times");
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";

    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52350983_4_18
52350940_52351340_13_29
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

private static void countString (String str, Character character) {
    int [] counts = new int [MAX_CHAR];
    char [] chars = str.toCharArray ();
    for (char ch : chars) {
        if (character != null && character != ch) {
            continue;
        }
        counts [ch] ++;
    }
    for (int i = 0;
    i < counts.length; i ++) {
        if (counts [i] > 0) {
            System.out.println ("Character " + (char) i + " appeared " + counts [i] + " times");
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count ++;

    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
    for (int i = 0;
    i < count; i ++) {
        System.out.println (searchKey);
    }
    if (count > 0) {
        System.out.println (count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351040_6_32
52350940_52351109_6_38
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

public static void countString (String str) {
    int count [] = new int [MAX_CHAR];
    int length = str.length ();
    for (int i = 0;
    i < length; i ++) count [str.charAt (i)] ++;

    char ch [] = new char [str.length ()];
    for (int i = 0;
    i < length; i ++) {
        ch [i] = str.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (str.charAt (i) == ch [j]) {
                find ++;
            }
        }
        if (find == 1) {
            for (int k = 0;
            k < count [str.charAt (i)]; k ++) System.out.print (str.charAt (i) + ",");

            System.out.println (count [str.charAt (i)]);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351040_6_32
52350940_52351119_8_32
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351040_6_32
52350940_52351254_10_19
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";

    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351040_6_32
52350940_52351340_13_29
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    if (str != null) {
        int length = str.length ();
        char ch [] = str.toCharArray ();
        Arrays.sort (ch);
        if (length > 0) {
            char x = ch [0];
            int count = 1;
            for (int i = 1;
            i < length; i ++) {
                if (ch [i] == x) {
                    count ++;
                } else {
                    System.out.println ("Number of Occurrence of '" + ch [i - 1] + "' is: " + count);
                    x = ch [i];
                    count = 1;
                }
            }
            System.out.println ("Number of Occurrence of '" + ch [length - 1] + "' is: " + count);
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count ++;

    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
    for (int i = 0;
    i < count; i ++) {
        System.out.println (searchKey);
    }
    if (count > 0) {
        System.out.println (count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351109_6_38
52350940_52351119_8_32
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    int count [] = new int [MAX_CHAR];
    int length = str.length ();
    for (int i = 0;
    i < length; i ++) count [str.charAt (i)] ++;

    char ch [] = new char [str.length ()];
    for (int i = 0;
    i < length; i ++) {
        ch [i] = str.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (str.charAt (i) == ch [j]) {
                find ++;
            }
        }
        if (find == 1) {
            for (int k = 0;
            k < count [str.charAt (i)]; k ++) System.out.print (str.charAt (i) + ",");

            System.out.println (count [str.charAt (i)]);
        }
    }
}
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351109_6_38
52350940_52351254_10_19
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    int count [] = new int [MAX_CHAR];
    int length = str.length ();
    for (int i = 0;
    i < length; i ++) count [str.charAt (i)] ++;

    char ch [] = new char [str.length ()];
    for (int i = 0;
    i < length; i ++) {
        ch [i] = str.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (str.charAt (i) == ch [j]) {
                find ++;
            }
        }
        if (find == 1) {
            for (int k = 0;
            k < count [str.charAt (i)]; k ++) System.out.print (str.charAt (i) + ",");

            System.out.println (count [str.charAt (i)]);
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";

    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351109_6_38
52350940_52351340_13_29
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str) {
    int count [] = new int [MAX_CHAR];
    int length = str.length ();
    for (int i = 0;
    i < length; i ++) count [str.charAt (i)] ++;

    char ch [] = new char [str.length ()];
    for (int i = 0;
    i < length; i ++) {
        ch [i] = str.charAt (i);
        int find = 0;
        for (int j = 0;
        j <= i; j ++) {
            if (str.charAt (i) == ch [j]) {
                find ++;
            }
        }
        if (find == 1) {
            for (int k = 0;
            k < count [str.charAt (i)]; k ++) System.out.print (str.charAt (i) + ",");

            System.out.println (count [str.charAt (i)]);
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count ++;

    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
    for (int i = 0;
    i < count; i ++) {
        System.out.println (searchKey);
    }
    if (count > 0) {
        System.out.println (count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351119_8_32
52350940_52351254_10_19
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";

    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351119_8_32
52350940_52351340_13_29
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str, char value) {
    String [] arr = str.split ("");
    StringBuffer tempString = new StringBuffer ();
    for (String s : arr) {
        tempString.append (s);
        for (char ch : s.toCharArray ()) {
            System.out.println ("Number of Occurrence of " + ch + " is:" + tempString.chars ().filter (i -> i == ch).count ());
        }
    }
    if (! (Character.toString (value).isEmpty ())) {
        StringBuffer tempString2 = new StringBuffer ();
        for (String s : arr) {
            tempString2.append (s);
            for (char ch : s.toCharArray ()) {
                if (ch == value) {
                    System.out.println ("Number of Occurrence of " + ch + " is:" + tempString2.chars ().filter (i -> i == ch).count ());
                }
            }
        }
    }
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count ++;

    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
    for (int i = 0;
    i < count; i ++) {
        System.out.println (searchKey);
    }
    if (count > 0) {
        System.out.println (count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52350940_52351254_10_19
52350940_52351340_13_29
Title: I want to display the occurrence of a character in string. How can I improve my code? 
----------------------------------------

public static void countString (String str, char searchKey) {
    String count = "";
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count += str.charAt (i) + "\n";

    }
    System.out.println (count + "\nNumber of Occurrence of " + searchKey + " is " + count.length () + " in string " + str);
}
----------------------------------------

public static void countString (String str, char searchKey) {
    int count = 0;
    for (int i = 0;
    i < str.length (); i ++) {
        if (str.charAt (i) == searchKey) count ++;

    }
    System.out.println ("Number of Occurrence of " + searchKey + " is " + count + " in string " + str);
    for (int i = 0;
    i < count; i ++) {
        System.out.println (searchKey);
    }
    if (count > 0) {
        System.out.println (count);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52351931_52352071_26_44
52351931_52352071_81_89
Title: Display troubles with canvas 
----------------------------------------

public void run () {
    try {
        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        ex.printStackTrace ();
    }
    PaintPane paintPane = new PaintPane ();
    JFrame frame = new JFrame ("Testing");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.add (new ButtonPane (), BorderLayout.WEST);
    frame.add (paintPane);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    paintPane.start ();
}
----------------------------------------

public void run () {
    while (running.get ()) {
        render ();
        try {
            Thread.sleep (5);
        } catch (InterruptedException ex) {
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52354268_52354280_1_10
52354268_52354321_1_12
Title: Return a string that has been created in a for loop 
----------------------------------------

public String toUpperCase (String str) {
    String t = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char a = str.charAt (i);
        char b = Character.toUpperCase (a);
        t += Character.toString (b);
    }
    return t;
}
----------------------------------------

public String toUpperCase (String str) {
    String t = "";
    for (int i = 0;
    i < str.length (); i ++) {
        char a = str.charAt (i);
        char b = Character.toUpperCase (a);
        t = t + Character.toString (b);
    }
    return t;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52354956_52356208_3_23
52354956_52356905_5_37
Title: how to sort (indexes) of an array to get the original array sorted from the smallest to the biggest value by using those indexes 
----------------------------------------

public static void main (String [] args) {
    int [] a = new int [] {6, 10, 16, 11, 7, 12, 3, 9, 8, 5};
    int [] result = new int [a.length];
    Map < Integer, Queue < Integer > > map = new HashMap < > ();
    for (int i = 0;
    i < a.length; ++ i) {
        if (map.containsKey (a [i])) {
            map.get (a [i]).offer (i);
        } else {
            Queue < Integer > q = new LinkedList < Integer > ();
            q.offer (i);
            map.put (a [i], q);
        }
    }
    Arrays.sort (a);
    for (int i = 0;
    i < result.length; ++ i) {
        result [i] = map.get (a [i]).poll ();
    }
    System.out.println (Arrays.toString (result));
}
----------------------------------------

public static void main (String [] args) {
    int [] a = {6, 10, 16, 11, 7, 12, 3, 9, 8, 5};
    Integer [] I = new Integer [a.length];
    for (int i = 0;
    i < I.length; i ++) I [i] = i;

    Arrays.sort (I, (i, j) -> a [i] - a [j]);
    for (int i = 0;
    i < a.length; i ++) System.out.println (a [I [i]]);

    for (int i = 0;
    i < I.length; i ++) {
        if (i != I [i]) {
            int t = a [i];
            int j;
            int k = i;
            while (i != (j = I [k])) {
                a [k] = a [j];
                I [k] = k;
                k = j;
            }
            a [k] = t;
            I [k] = k;
        }
    }
    System.out.println ();
    for (int i = 0;
    i < a.length; i ++) System.out.println (a [i]);

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52355978_52356288_1_28
52355978_52356462_1_27
Title: How to split string provided as user enter in java? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("how many cars :");
    int num_of_cars = sc.nextInt ();
    sc.nextLine ();
    String [] input;
    Map < String, Integer > mapCountColor = new TreeMap < > ();
    System.out.println ("Enter car#color");
    while (num_of_cars > 0) {
        input = sc.nextLine ().split ("#");
        if (mapCountColor.get (input [1]) != null) {
            mapCountColor.put (input [1], mapCountColor.get (input [1]) + 1);
        } else {
            mapCountColor.put (input [1], 1);
        }
        num_of_cars --;
    }
    mapCountColor.entrySet ().forEach (e -> System.out.println (e.getKey () + " " + e.getValue ()));
}
----------------------------------------

public static void main (String [] args) {
    try {
        int numberOfCars;
        String format;
        BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
        numberOfCars = Integer.parseInt (br.readLine ());
        Class1 [] dataArray = new Class1 [numberOfCars];
        for (int a = 0;
        a < dataArray.length; a ++) {
            Class1 data = new Class1 ();
            data.setFormat (br.readLine ());
            data.split ();
            dataArray [a] = data;
        }
        Arrays.stream (dataArray).collect (Collectors.groupingBy (car -> car.getColor (), Collectors.counting ())).entrySet ().stream ().sorted (Comparator.comparing (entry -> entry.getKey ())).forEach ((entry) -> System.out.println (entry.getKey () + " " + entry.getValue ()));
    } catch (NumberFormatException | IOException | ArrayIndexOutOfBoundsException e) {
        System.out.println ("Error occurred try again");
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52358715_52358831_16_29
52358715_52359054_45_56
Title: Why won't main method print anything? 
----------------------------------------

public static void main (final String [] args) {
    JFrame frame = new JFrame ("Triangle Area Calculator");
    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);
    GUI one = new GUI ();
    frame.getContentPane ().add (one);
    frame.pack ();
    frame.setVisible (true);
    System.out.println ("hello world");
}
----------------------------------------

public static void main (String [] args) {
    EventQueue.invokeLater (new Runnable () {
        @Override
        public void run () {
            JFrame frame = new JFrame ();
            frame.add (new GUI ());
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52358715_52358831_40_54
52358715_52359054_21_43
Title: Why won't main method print anything? 
----------------------------------------

public GUI () {
    super ();
    setSize (500, 300);
    setLayout (g);
    add (baseIn);
    add (heightIn);
    add (base);
    add (height);
    add (area);
    add (calc);
    area.setEditable (false);
    calc.addActionListener ((ActionListener) this);
    setVisible (true);
}
----------------------------------------

public GUI () {
    setLayout (g);
    add (baseIn);
    add (heightIn);
    add (base);
    add (height);
    add (area);
    add (calc);
    area.setEditable (false);
    calc.addActionListener (new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            try {
                double bInput = Integer.valueOf (base.getText ());
                double hInput = Integer.valueOf (height.getText ());
                double aOutput = 0.5 * bInput * hInput;
                area.setText ("Area of your triangle is: " + aOutput);
            } catch (NumberFormatException n) {
                System.out.println (n.getMessage ());
            }
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52361247_52361375_1_29
52361247_52362709_1_11
Title: How to create a more optimal solution 
----------------------------------------

static int differentTeams (String skills) {
    int numberOfTeams = Integer.MAX_VALUE;
    int [] countArr = new int [5];
    for (int i = 0;
    i < skills.length; i ++) {
        char subject = skills.charAt (i);
        if (subject == 'p') {
            countArr [0] ++;
        } else if (subject == 'c') {
            countArr [1] ++;
        } else if (subject == 'm') {
            countArr [2] ++;
        } else if (subject == 'b') {
            countArr [3] ++;
        } else if (subject == 'z') {
            countArr [4] ++;
        } else {
            throw new IllegalArgumentException ("Invalid Input: " + subject);
        }

    }
    for (int i = 0;
    i < 5; i ++) {
        if (countArr [i] < numberOfTeams) {
            numberOfTeams = countArr [i];
        }
    }
    return numberOfTeams;
}
----------------------------------------

static int differentTeams (String skills) {
    int min = Integer.MAX_VALUE;
    for (String subj : "pcmbz".split ("")) {
        String skillsRem = skills.replaceAll (subj, "");
        min = Math.min (skills.length () - skillsRem.length (), min);
        skills = skillsRem;
    }
    return min;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5236486_44173160_13_29
5236486_44968521_59_71
Title: Adding items to end of linked list 
----------------------------------------

public static void main (String args []) {
    LinkedList ll = new LinkedList ();
    ll.head = new Node (1);
    Node second = new Node (2);
    Node third = new Node (3);
    Node fourth = new Node (4);
    ll.head.next = second;
    second.next = third;
    third.next = fourth;
    fourth.next = null;
    ll.printList ();
    System.out.println ("Add element 100 to the last");
    ll.addLast (100);
    ll.printList ();
}
----------------------------------------

public static void main (String [] args) {
    LinkedList ll = new LinkedList ();
    Date startTime = new Date ();
    for (int i = 0;
    i < 100000; i ++) {
        ll.addLastx (i);
    }
    Date endTime = new Date ();
    System.out.println ("To total processing time : " + (endTime.getTime () - startTime.getTime ()));
    System.out.println (ll.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5236486_44173160_39_57
5236486_44968521_13_24
Title: Adding items to end of linked list 
----------------------------------------

public void addLast (int item) {
    Node new_item = new Node (item);
    if (head == null) {
        head = new_item;
        return;
    }
    new_item.next = null;
    Node last = head;
    Node temp = null;
    while (last != null) {
        if (last != null) temp = last;

        last = last.next;
    }
    temp.next = new_item;
    return;
}
----------------------------------------

public void addLast (int data) {
    if (head == null) {
        head = new Node (data);
        return;
    }
    Node last = head;
    while (last.next != null) {
        last = last.next;
    }
    last.next = new Node (data);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5236486_44173160_39_57
5236486_5236710_9_26
Title: Adding items to end of linked list 
----------------------------------------

public void addLast (int item) {
    Node new_item = new Node (item);
    if (head == null) {
        head = new_item;
        return;
    }
    new_item.next = null;
    Node last = head;
    Node temp = null;
    while (last != null) {
        if (last != null) temp = last;

        last = last.next;
    }
    temp.next = new_item;
    return;
}
----------------------------------------

public static Node addLast (Node header, Object x) {
    Node ret = header;
    if (header == null) {
        return new Node (x, null);
    }
    while ((header.next != null)) {
        header = header.next;
    }
    header.next = new Node (x, null);
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5236486_44968521_13_24
5236486_5236710_9_26
Title: Adding items to end of linked list 
----------------------------------------

public void addLast (int data) {
    if (head == null) {
        head = new Node (data);
        return;
    }
    Node last = head;
    while (last.next != null) {
        last = last.next;
    }
    last.next = new Node (data);
}
----------------------------------------

public static Node addLast (Node header, Object x) {
    Node ret = header;
    if (header == null) {
        return new Node (x, null);
    }
    while ((header.next != null)) {
        header = header.next;
    }
    header.next = new Node (x, null);
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52372495_52374504_1_9
52372495_52385616_1_16
Title: Calculate directory size while recursing directory tree 
----------------------------------------

private void recurseDirectory (File file) {
    System.out.println (file.getAbsolutePath () + " - " + size (file));
    if (file.isDirectory ()) {
        File [] files = file.listFiles ();
        for (File f : files) {
            recurseDirectory (f);
        }
    }
}
----------------------------------------

private long recurseDirectory (File file) {
    if (file.isFile ()) {
        System.out.println (file.getAbsolutePath () + " - " + file.length ());
        return file.length ();
    } else if (file.isDirectory ()) {
        long size = 0;
        File [] files = file.listFiles ();
        for (File f : files) {
            size += recurseDirectory (f);
        }
        System.out.println (file.getAbsolutePath () + " - " + size);
        return size;
    }

    return 0;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52373766_52374064_1_17
52373766_52374398_1_16
Title: how to implement a descending selection sort in java? 
----------------------------------------

public static void newSortMethod (int [] a) {
    for (int i = 0;
    i < a.length; i ++) {
        int maxPosition = i;
        int minPosition = i;
        for (int j = i + 1;
        j < a.length - i; j ++) {
            if (a [j] < a [minPosition]) {
                minPosition = j;
            }
            if (a [j] > a [maxPosition]) {
                maxPosition = j;
            }
        }
        swap (a, minPosition, maxPosition);
        swap (a, maxPosition, i);
        swap (a, minPosition, a.length - i - 1);
    }
}
----------------------------------------

public static void newSortMethod (int [] a) {
    int n = 0;
    for (int i = 0;
    i < a.length - 1; i ++) {
        int maxPosition = i;
        for (int j = i + 1;
        j < a.length; j ++) {
            if (a [j] > a [maxPosition]) {
                maxPosition = j;
            }
        }
        if (maxPosition != i) {
            swap (a, maxPosition, i);
            n ++;
        }
    }
    System.out.println (n);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52378583_52378648_1_16
52378583_52416759_21_38
Title: How to properly pause app until permission request is finished? 
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    switch (requestCode) {
        case REQUEST_CODE :
            {
                if (permissions [0].equals (Manifest.permission.ACCESS_COARSE_LOCATION)) {
                    if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {
                        init ();
                    } else {
                        PermissionDialog newDialog = new PermissionDialog ();
                        newDialog.show (getSupportFragmentManager (), "Request Location Permission");
                    }
                }
            }}
}
----------------------------------------

@Override
public void onRequestPermissionsResult (int requestCode, String permissions [], int [] grantResults) {
    Log.i ("Permission", "Callback made");
    switch (requestCode) {
        case REQUEST_CODE :
            {
                if (permissions [0].equals (Manifest.permission.ACCESS_COARSE_LOCATION)) {
                    if (grantResults [0] != PackageManager.PERMISSION_GRANTED) {
                        PermissionDialog newDialog = new PermissionDialog ();
                        newDialog.show (getSupportFragmentManager (), "Request Location Permission");
                    } else {
                        startBluetooth ();
                    }
                }
            }}
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5238491_36749788_23_34
5238491_44680378_1_16
Title: Check if String contains only letters 
----------------------------------------

public static boolean isAlpha (String name) {
    char [] chars = name.toCharArray ();
    long startTimeOne = System.nanoTime ();
    for (char c : chars) {
        if (! Character.isLetter (c)) {
            System.out.println (System.nanoTime () - startTimeOne);
            return false;
        }
    }
    System.out.println (System.nanoTime () - startTimeOne);
    return true;
}
----------------------------------------

public boolean isAlpha (String name) {
    String s = name.toLowerCase ();
    for (int i = 0;
    i < s.length (); i ++) {
        if ((s.charAt (i) >= 'a' && s.charAt (i) <= 'z')) {
            continue;
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5238491_36749788_23_34
5238491_5238524_1_11
Title: Check if String contains only letters 
----------------------------------------

public static boolean isAlpha (String name) {
    char [] chars = name.toCharArray ();
    long startTimeOne = System.nanoTime ();
    for (char c : chars) {
        if (! Character.isLetter (c)) {
            System.out.println (System.nanoTime () - startTimeOne);
            return false;
        }
    }
    System.out.println (System.nanoTime () - startTimeOne);
    return true;
}
----------------------------------------

public boolean isAlpha (String name) {
    char [] chars = name.toCharArray ();
    for (char c : chars) {
        if (! Character.isLetter (c)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5238491_44680378_1_16
5238491_5238524_1_11
Title: Check if String contains only letters 
----------------------------------------

public boolean isAlpha (String name) {
    String s = name.toLowerCase ();
    for (int i = 0;
    i < s.length (); i ++) {
        if ((s.charAt (i) >= 'a' && s.charAt (i) <= 'z')) {
            continue;
        } else {
            return false;
        }
    }
    return true;
}
----------------------------------------

public boolean isAlpha (String name) {
    char [] chars = name.toCharArray ();
    for (char c : chars) {
        if (! Character.isLetter (c)) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52407307_52407604_1_15
52407307_52408519_4_32
Title: Change the eye of a dice 
----------------------------------------

public static void main (String [] args) {
    System.out.println ("Which character should be used as the eye of the dice:");
    char eyeDice = input.next ().charAt (0);
    System.out.println (eyeDice);
    int Dice;
    Dice = (int) (Math.random () * 6 + 1);
    while (Dice < 6) {
        Dice = (int) (Math.random () * 6 + 1);
        System.out.println (Dice);
    }
}
----------------------------------------

public static void main (String [] args) {
    Random input = new Random ();
    int a = 3;
    int b = 6;
    int c = input.nextInt (b - a) + a;
    switch (a) {
        case 2 :
            System.out.println ("*");
            break;
        case 5 :
            System.out.println ("*  *");
            break;
        case 6 :
            System.out.println ("* \n * \n  *");
            break;
        case 4 :
            System.out.println ("*  * \n*  *");
            break;
        case 1 :
            System.out.println ("*   *\n  *\n*   *");
            break;
        case 3 :
            System.out.println (" *  *  *\n\n *  *  *");
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52419108_52419279_4_17
52419108_52419793_6_58
Title: Counting filled EditText fields 
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    LinearLayout parentLayout = (LinearLayout) findViewById (R.id.linearLayout);
    int elements = parentLayout.getChildCount ();
    View v = null;
    for (int i = 0;
    i < elements; i ++) {
        v = parentLayout.getChildAt (i);
        if (v.getTag () != null && v.getTag ().equals ("et")) {
            count = count ++;
        }
    }
}
----------------------------------------

protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_sample);
    Button btn = findViewById (R.id.btn);
    editText1 = findViewById (R.id.editText1);
    editText2 = findViewById (R.id.editText2);
    editText3 = findViewById (R.id.editText3);
    editText4 = findViewById (R.id.editText4);
    btn.setOnClickListener (new View.OnClickListener () {
        @Override
        public void onClick (View v) {
            int filledFileds = countFilledFields ();
            Log.d ("filled", String.valueOf (filledFileds));
            Class newClass = SampleActivity.class;
            switch (filledFileds) {
                case 1 :
                    newClass = Activity1.class;
                    break;
                case 2 :
                    newClass = Activity2.class;
                    break;
                case 3 :
                    newClass = Activity3.class;
                    break;
                case 4 :
                    newClass = Activity4.class;
                    break;
                default :
            }
            Intent intent = new Intent (SampleActivity.this, newClass);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52419600_52426968_31_89
52419600_52446725_25_72
Title: Using java.awt.image.BufferedImage for creating BIFF8 BITMAP record takes much time - Is there any better approach? 
----------------------------------------

static byte [] getBackgroundBitmapData (String filePath) throws Exception {
    BufferedImage in = ImageIO.read (new FileInputStream (filePath));
    BufferedImage image = new BufferedImage (in.getWidth (), in.getHeight (), BufferedImage.TYPE_3BYTE_BGR);
    Graphics2D graphics = image.createGraphics ();
    graphics.drawImage (in, null, 0, 0);
    graphics.dispose ();
    short width = (short) image.getWidth ();
    short height = (short) image.getHeight ();
    int widthBytesMultOf4 = (int) ((width * 3 + 3) / 4 * 4);
    int size = 12 + height * widthBytesMultOf4;
    ByteBuffer headers = ByteBuffer.allocate (20);
    headers.order (ByteOrder.LITTLE_ENDIAN);
    headers.putShort ((short) 0x09);
    headers.putShort ((short) 0x01);
    headers.putInt (size);
    headers.putInt (0x0C);
    headers.putShort (width);
    headers.putShort (height);
    headers.putShort ((short) 0x01);
    headers.putShort ((short) 0x18);
    ByteArrayOutputStream data = new ByteArrayOutputStream ();
    data.write (headers.array ());
    Raster raster = image.getData ();
    for (short y = (short) (height - 1);
    y >= 0; y --) {
        for (short x = 0;
        x < width; x ++) {
            int r = raster.getSample (x, y, 2);
            data.write ((byte) r);
            int g = raster.getSample (x, y, 1);
            data.write ((byte) g);
            int b = raster.getSample (x, y, 0);
            data.write ((byte) b);
        }
        for (int x = width * 3;
        x < widthBytesMultOf4; x ++) {
            data.write ((byte) 0);
        }
    }
    return data.toByteArray ();
}
----------------------------------------

static byte [] getBackgroundBitmapData (String filePath) throws Exception {
    BufferedImage in = ImageIO.read (new FileInputStream (filePath));
    BufferedImage image = new BufferedImage (in.getWidth (), in.getHeight (), BufferedImage.TYPE_3BYTE_BGR);
    Graphics2D graphics = image.createGraphics ();
    graphics.drawImage (in, null, 0, 0);
    graphics.dispose ();
    int rowSize = ((24 * image.getWidth () + 31) / 32) * 4;
    ByteArrayOutputStream output = new ByteArrayOutputStream (image.getHeight () * rowSize * 3 + 1024);
    ByteBuffer header = ByteBuffer.allocate (8 + 12);
    header.order (ByteOrder.LITTLE_ENDIAN);
    header.putShort ((short) 0x09);
    header.putShort ((short) 0x01);
    header.putInt (image.getHeight () * rowSize + 12);
    header.putInt (12);
    header.putShort ((short) image.getWidth ());
    header.putShort ((short) image.getHeight ());
    header.putShort ((short) 1);
    header.putShort ((short) 24);
    output.write (header.array ());
    Raster raster = image.getRaster ().createChild (0, 0, image.getWidth (), image.getHeight (), 0, 0, new int [] {2, 1, 0});
    byte [] row = new byte [rowSize];
    for (int i = image.getHeight () - 1;
    i >= 0; i --) {
        row = (byte []) raster.getDataElements (0, i, image.getWidth (), 1, row);
        output.write (row);
    }
    return output.toByteArray ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52421486_52424025_28_40
52421486_52424025_48_60
Title: Parse a json using jackson 
----------------------------------------

public static < T > T readValue (String jsonStr, Class < T > valueType) {
    if (objectMapper == null) {
        objectMapper = new ObjectMapper ();
    }
    try {
        return objectMapper.readValue (jsonStr, valueType);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------

public static < T > T readValue (String jsonStr, TypeReference < T > valueTypeRef) {
    if (objectMapper == null) {
        objectMapper = new ObjectMapper ();
    }
    try {
        return objectMapper.readValue (jsonStr, valueTypeRef);
    } catch (Exception e) {
        e.printStackTrace ();
    }
    return null;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52427336_52427414_4_12
52427336_52427484_2_16
Title: How to count strings added to a list array using count sub method and a target string in Java? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > y = new ArrayList < > ();
    y.add ("Go");
    y.add ("Home");
    y.add ("Go");
    y.add ("Home");
    System.out.println (y);
    System.out.println (countOccurence ("Go", y));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > listOfString = new ArrayList < > ();
    listOfString.add ("Go");
    listOfString.add ("Home");
    listOfString.add ("Go");
    listOfString.add ("Home");
    Map < String, Long > counts = listOfString.stream ().collect (Collectors.groupingBy (Function.identity (), Collectors.counting ()));
    System.out.println (counts.get ("Go"));
    System.out.println (counts.get ("Home"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52427336_52427414_4_12
52427336_52427513_1_9
Title: How to count strings added to a list array using count sub method and a target string in Java? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > y = new ArrayList < > ();
    y.add ("Go");
    y.add ("Home");
    y.add ("Go");
    y.add ("Home");
    System.out.println (y);
    System.out.println (countOccurence ("Go", y));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > y = new ArrayList < > ();
    y.add ("Go");
    y.add ("Home");
    y.add ("Go");
    y.add ("Home");
    System.out.println (y);
    System.out.println ("Occurence of 'Go' is " + countOccurence ("Go", y));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52427336_52427484_2_16
52427336_52427513_1_9
Title: How to count strings added to a list array using count sub method and a target string in Java? 
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > listOfString = new ArrayList < > ();
    listOfString.add ("Go");
    listOfString.add ("Home");
    listOfString.add ("Go");
    listOfString.add ("Home");
    Map < String, Long > counts = listOfString.stream ().collect (Collectors.groupingBy (Function.identity (), Collectors.counting ()));
    System.out.println (counts.get ("Go"));
    System.out.println (counts.get ("Home"));
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < String > y = new ArrayList < > ();
    y.add ("Go");
    y.add ("Home");
    y.add ("Go");
    y.add ("Home");
    System.out.println (y);
    System.out.println ("Occurence of 'Go' is " + countOccurence ("Go", y));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52427971_52428201_1_12
52427971_52428642_1_12
Title: "Calculating Sums and Averages of inputted numbers and sorting numbers in Eclipse" 
----------------------------------------

public static void main (String [] args) throws IOException, JSONException, ParseException {
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter 5 numbers: ");
    int [] array = new int [5];
    for (int i = 0;
    i < array.length; i ++) {
        array [i] = input.nextInt ();
    }
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i]);
    }
}
----------------------------------------

public static void main (String [] args) {
    int length = 5;
    Scanner input = new Scanner (System.in);
    System.out.println ("Enter 5 numbers: ");
    int [] numbers = new int [length];
    for (int i = 0;
    i < length; i ++) {
        numbers [i] = input.nextInt ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52449381_52449400_1_18
52449381_52449534_1_13
Title: Boolean Method with a comparison nest loop for an array how to fix 
----------------------------------------

public static boolean hasDuplicate (int [] numArr) {
    int numOfElements = numArr.length;
    boolean result = false;
    for (int i = 0;
    i < numOfElements; i ++) {
        for (int j = i + 1;
        j < numOfElements; j ++) {
            if (numArr [i] == numArr [j]) {
                result = true;
                return result;
            }
        }
    }
    return result;
}
----------------------------------------

public static boolean hasDuplicate (int numOfElement, int [] numArr) {
    boolean found = false;
    int i = 0;
    while (! found && i < numOfElement) {
        int j = i + 1;
        while (! found && j < numOfElement) {
            if (numArr [i] == numArr [j]) {
                found = true;
            }
        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52452999_52453041_1_21
52452999_52453060_3_21
Title: How to find the difference of two numbers and the absolute value of that answer without using math.abs function JAVA SOLVED 
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    System.out.println ("Enter a: ");
    double a = in.nextDouble ();
    System.out.println ("Enter b: ");
    double b = in.nextDouble ();
    double value = a - b;
    double value2 = b - a;
    value = (value < 0) ? - value : value;
    value2 = (value2 < 0) ? - value2 : value2;
    System.out.println (a + "-" + b + "=" + value);
    System.out.println (b + "-" + a + "=" + value2);
}
----------------------------------------

public static void main (String [] args) {
    Scanner in = new Scanner (System.in);
    double a;
    double b;
    System.out.println ("Enter a: ");
    a = in.nextDouble ();
    System.out.println ("Enter b: ");
    b = in.nextDouble ();
    double value = a - b;
    value = (value < 0) ? - value : value;
    System.out.println ("|" + a + "-" + b + "|" + " =" + value);
    System.out.println ("|" + b + "-" + a + "|" + " =" + value);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52472953_52473033_1_18
52472953_52473119_3_21
Title: How to add multiple characters to one index in a Char Array? 
----------------------------------------

public static ArrayList < String > splitString (String str) {
    ArrayList < String > output = new ArrayList < > ();
    String combo = "";
    for (char c : str.toCharArray ()) {
        if (combo.length () > 0 && c != combo.charAt (combo.length () - 1)) {
            output.add (combo);
            combo = "";
        }
        combo += c;
    }
    output.add (combo);
    return output;
}
----------------------------------------

static ArrayList < String > splitString (String str) {
    ArrayList < String > result_list = new ArrayList < String > ();
    int last_index;
    if (str == null) {
        return null;
    } else {
        while (str.length () != 0) {
            last_index = str.lastIndexOf (str.charAt (0));
            result_list.add (str.substring (0, last_index + 1));
            str = str.substring (last_index + 1);
        }
    }
    return result_list;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52496708_52496968_1_20
52496708_52497037_7_46
Title: Merge Sort names alphabetically not working 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    ArrayList < String > words = new ArrayList < String > ();
    System.out.println ("Enter the word or write STOP to exit:");
    while (in.hasNext ()) {
        String inputLine = in.nextLine ();
        if (inputLine.equalsIgnoreCase ("STOP")) {
            break;
        }
        words.add (inputLine);
    }
    Collections.sort (words);
    System.out.println ("The words sorted:");
    System.out.println (words);
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    Scanner in = new Scanner (System.in);
    System.out.print ("Enter maximum number of items: ");
    int num = sc.nextInt ();
    String [] arr1 = new String [num + 1];
    String [] arr2 = new String [num + 1];
    String sLine = "";
    int i;
    try {
        FileInputStream fstream = new FileInputStream ("ioc.txt");
        BufferedReader bin = new BufferedReader (new InputStreamReader (fstream));
        System.out.format ("%-10s%-30s%-30s", "Index", "Array 1", "Array 2");
        System.out.println ("");
        for (i = 1; sLine != null && i <= num; i ++) {
            sLine = bin.readLine ();
            arr1 [i] = sLine;
            arr2 [i] = sLine;
            if (sLine == null) System.out.println ("EOF");
            else {
                System.out.format ("%-10d", i);
                System.out.format ("%-30s", arr1 [i]);
                System.out.format ("%-30s\n", arr2 [i]);
            }
        }
        sort (arr1);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52496708_52496968_1_20
52496708_52497047_1_19
Title: Merge Sort names alphabetically not working 
----------------------------------------

public static void main (String args []) {
    Scanner in = new Scanner (System.in);
    ArrayList < String > words = new ArrayList < String > ();
    System.out.println ("Enter the word or write STOP to exit:");
    while (in.hasNext ()) {
        String inputLine = in.nextLine ();
        if (inputLine.equalsIgnoreCase ("STOP")) {
            break;
        }
        words.add (inputLine);
    }
    Collections.sort (words);
    System.out.println ("The words sorted:");
    System.out.println (words);
    in.close ();
}
----------------------------------------

public static void main (String [] args) {
    Set < String > result = new TreeSet < > ();
    try (BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream ("ioc.txt")))) {
        String line;
        while ((line = br.readLine ()) != null) {
            result.add (line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println (result);
    String [] array = result.toArray (new String [result.size ()]);
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52496708_52497037_7_46
52496708_52497047_1_19
Title: Merge Sort names alphabetically not working 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    Scanner in = new Scanner (System.in);
    System.out.print ("Enter maximum number of items: ");
    int num = sc.nextInt ();
    String [] arr1 = new String [num + 1];
    String [] arr2 = new String [num + 1];
    String sLine = "";
    int i;
    try {
        FileInputStream fstream = new FileInputStream ("ioc.txt");
        BufferedReader bin = new BufferedReader (new InputStreamReader (fstream));
        System.out.format ("%-10s%-30s%-30s", "Index", "Array 1", "Array 2");
        System.out.println ("");
        for (i = 1; sLine != null && i <= num; i ++) {
            sLine = bin.readLine ();
            arr1 [i] = sLine;
            arr2 [i] = sLine;
            if (sLine == null) System.out.println ("EOF");
            else {
                System.out.format ("%-10d", i);
                System.out.format ("%-30s", arr1 [i]);
                System.out.format ("%-30s\n", arr2 [i]);
            }
        }
        sort (arr1);
    } catch (IOException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Set < String > result = new TreeSet < > ();
    try (BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream ("ioc.txt")))) {
        String line;
        while ((line = br.readLine ()) != null) {
            result.add (line);
        }
    } catch (IOException e) {
        e.printStackTrace ();
    }
    System.out.println (result);
    String [] array = result.toArray (new String [result.size ()]);
    System.out.println (Arrays.toString (array));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52500373_52500922_9_19
52500373_52500993_9_19
Title: StringTokenizer error: NoSuchelementException after tokenized line finishes 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner sc = new Scanner (new FileInputStream ("/usr/projects/tryouts/src/tryouts/test.txt"));
    String line = sc.nextLine ();
    System.out.println (line);
    StringTokenizer lineTok = new StringTokenizer (line);
    String first = (String) lineTok.nextToken ();
    System.out.println (first);
    String last = (String) lineTok.nextToken ();
    System.out.println (last);
    sc.close ();
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Scanner sc = new Scanner (new FileInputStream ("/usr/projects/tryouts/src/tryouts/test.txt"));
    String line = sc.nextLine ();
    System.out.println (line);
    StringTokenizer lineTok = new StringTokenizer (line);
    while (lineTok.hasMoreTokens ()) {
        System.out.println (lineTok.nextToken ());
    }
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52501040_52501806_112_121
52501040_52504869_163_173
Title: Java Swing GridBagLayout JTextField Changing size after adding error message 
----------------------------------------

private static void createAndShowGui () {
    MyPanel mainPanel = new MyPanel ();
    JFrame frame = new JFrame ("MyPanel");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.getContentPane ().add (mainPanel);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
}
----------------------------------------

private static void createAndShowGui () {
    MyPanel mainPanel = new MyPanel ();
    JDialog dialog = new JDialog ((JFrame) null, "Job Editor", ModalityType.APPLICATION_MODAL);
    dialog.getContentPane ().add (mainPanel);
    dialog.setResizable (false);
    dialog.pack ();
    dialog.setLocationRelativeTo (null);
    dialog.setVisible (true);
    System.exit (0);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52501040_52501806_18_75
52501040_52504869_26_126
Title: Java Swing GridBagLayout JTextField Changing size after adding error message 
----------------------------------------

public MyPanel () {
    setLayout (new BorderLayout ());
    setBackground (BACKGROUND);
    JPanel labelFieldPanel = new JPanel (new GridBagLayout ());
    labelFieldPanel.setOpaque (false);
    for (int i = 0;
    i < LABELS.length; i ++) {
        String text = LABELS [i];
        JLabel label = new JLabel (text);
        JTextField textField = new JTextField (TF_COLS);
        JLabel errorLabel = new JLabel ("    ");
        label.setFont (LABEL_FONT);
        label.setForeground (Color.WHITE);
        errorLabel.setFont (ERROR_FONT);
        errorLabel.setForeground (Color.RED);
        labelFieldMap.put (text, textField);
        errorLabelMap.put (text, errorLabel);
        GridBagConstraints gbc = createLabelConstraint (i);
        labelFieldPanel.add (label, gbc);
        gbc = createTextFieldConstraints (i);
        labelFieldPanel.add (textField, gbc);
        gbc = createErrorLabelConstraints (i);
        labelFieldPanel.add (errorLabel, gbc);
        gbc.gridx = 0;
        labelFieldPanel.add (new JLabel (), gbc);
    }
    JButton acceptButton = new JButton ("Accept");
    acceptButton.setMnemonic (KeyEvent.VK_A);
    acceptButton.addActionListener (e -> {
        for (int i = 0;
        i < LABELS.length - 1; i ++) {
            String text = LABELS [i];
            JTextField textField = labelFieldMap.get (text);
            JLabel errorLabel = errorLabelMap.get (text);
            if (textField.getText ().trim ().isEmpty ()) {
                errorLabel.setText (ERROR_MESSAGE);
            } else {
                errorLabel.setText (" ");
                System.out.println (text + " " + textField.getText ());
            }
        }
        System.out.println ();
    });
    JPanel btnPanel = new JPanel ();
    btnPanel.setOpaque (false);
    btnPanel.add (acceptButton);
    add (labelFieldPanel, BorderLayout.CENTER);
    add (btnPanel, BorderLayout.PAGE_END);
}
----------------------------------------

public MyPanel () {
    JLabel titleLabel = new JLabel (TITLE, SwingConstants.CENTER);
    titleLabel.setForeground (TITLE_COLOR);
    titleLabel.setFont (TITLE_FONT);
    JPanel titlePanel = new JPanel ();
    titlePanel.setOpaque (false);
    titlePanel.add (titleLabel);
    titlePanel.setBorder (BorderFactory.createEtchedBorder ());
    JPanel labelFieldPanel = new JPanel (new GridBagLayout ());
    labelFieldPanel.setOpaque (false);
    int bGap = 3;
    labelFieldPanel.setBorder (BorderFactory.createEmptyBorder (bGap, bGap, bGap, bGap));
    for (int i = 0;
    i < LABELS.length; i ++) {
        String text = LABELS [i];
        JLabel label = new JLabel (text);
        JTextField textField = new JTextField (TF_COLS);
        JLabel errorLabel = new JLabel ("    ");
        Border innerBorder = textField.getBorder ();
        Border outerBorder = BorderFactory.createLineBorder (BACKGROUND);
        CompoundBorder myBorder = BorderFactory.createCompoundBorder (outerBorder, innerBorder);
        textField.setBorder (myBorder);
        label.setFont (LABEL_FONT);
        label.setForeground (Color.WHITE);
        errorLabel.setFont (ERROR_FONT);
        errorLabel.setForeground (Color.RED);
        labelFieldMap.put (text, textField);
        errorLabelMap.put (text, errorLabel);
        GridBagConstraints gbc = createLabelConstraint (i);
        labelFieldPanel.add (label, gbc);
        gbc = createTextFieldConstraints (i);
        labelFieldPanel.add (textField, gbc);
        gbc = createErrorLabelConstraints (i);
        labelFieldPanel.add (errorLabel, gbc);
        gbc.gridx = 0;
        labelFieldPanel.add (new JLabel (), gbc);
    }
    JButton acceptButton = new JButton ("Accept");
    acceptButton.setMnemonic (KeyEvent.VK_A);
    acceptButton.addActionListener (e -> {
        boolean okToTransfer = true;
        for (int i = 0;
        i < LABELS.length; i ++) {
            String text = LABELS [i];
            JTextField textField = labelFieldMap.get (text);
            JLabel errorLabel = errorLabelMap.get (text);
            CompoundBorder myBorder = (CompoundBorder) textField.getBorder ();
            Border insideBorder = myBorder.getInsideBorder ();
            if (i < LABELS.length - 1 && textField.getText ().trim ().isEmpty ()) {
                errorLabel.setText (ERROR_MESSAGE);
                textField.setBackground (ERROR_BG_COLOR);
                okToTransfer = false;
                Border outsideBorder = BorderFactory.createLineBorder (Color.RED);
                CompoundBorder newBorder = BorderFactory.createCompoundBorder (outsideBorder, insideBorder);
                textField.setBorder (newBorder);
            } else {
                errorLabel.setText (" ");
                textField.setBackground (Color.WHITE);
                Border outsideBorder = BorderFactory.createLineBorder (BACKGROUND);
                CompoundBorder newBorder = BorderFactory.createCompoundBorder (outsideBorder, insideBorder);
                textField.setBorder (newBorder);
            }
            System.out.println (text + " " + textField.getText ());
        }
        System.out.println ();
        if (okToTransfer) {
        }
    });
    JButton cancelBtn = new JButton ("Cancel");
    cancelBtn.setMnemonic (KeyEvent.VK_C);
    cancelBtn.addActionListener (e -> {
        Window win = SwingUtilities.getWindowAncestor (MyPanel.this);
        win.dispose ();
    });
    int btnPanelGap = 15;
    JPanel btnPanel = new JPanel (new GridLayout (1, 0, btnPanelGap, 0));
    btnPanel.setBorder (BorderFactory.createEmptyBorder (4, btnPanelGap, 4, btnPanelGap));
    btnPanel.setOpaque (false);
    btnPanel.add (acceptButton);
    btnPanel.add (cancelBtn);
    setLayout (new BoxLayout (this, BoxLayout.PAGE_AXIS));
    setBackground (BACKGROUND);
    add (titlePanel);
    add (labelFieldPanel);
    add (btnPanel);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52513490_52513600_1_24
52513490_52513614_1_13
Title: Max Consecutive Ones in a given array(Leetcode) 
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int i = 0, j = 0, maxLen = 0;
    while (j < nums.length) {
        if (nums [j] == 1) {
            i = j;
            while (j + 1 < nums.length && nums [j + 1] == 1) {
                j ++;
            }
            if (j - i + 1 > maxLen) {
                maxLen = j - i + 1;
            }
        }
        j ++;
    }
    return maxLen;
}
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int maxCount = 0;
    int currentCount = 0;
    for (int number : nums) {
        if (number == 1) {
            currentCount ++;
        } else {
            currentCount = 0;
        }
        maxCount = Math.max (maxCount, currentCount);
    }
    return maxCount;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52513490_52513600_1_24
52513490_52513769_1_17
Title: Max Consecutive Ones in a given array(Leetcode) 
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int i = 0, j = 0, maxLen = 0;
    while (j < nums.length) {
        if (nums [j] == 1) {
            i = j;
            while (j + 1 < nums.length && nums [j + 1] == 1) {
                j ++;
            }
            if (j - i + 1 > maxLen) {
                maxLen = j - i + 1;
            }
        }
        j ++;
    }
    return maxLen;
}
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int reset = 0, run = 0, maxLen = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 1) {
            run ++;
        } else {
            maxLen = Math.max (maxLen, run);
            run = 0;
        }
    }
    maxLen = Math.max (maxLen, run);
    return maxLen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52513490_52513614_1_13
52513490_52513769_1_17
Title: Max Consecutive Ones in a given array(Leetcode) 
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int maxCount = 0;
    int currentCount = 0;
    for (int number : nums) {
        if (number == 1) {
            currentCount ++;
        } else {
            currentCount = 0;
        }
        maxCount = Math.max (maxCount, currentCount);
    }
    return maxCount;
}
----------------------------------------

public static int findMaxConsecutiveOnes (int [] nums) {
    int reset = 0, run = 0, maxLen = 0;
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == 1) {
            run ++;
        } else {
            maxLen = Math.max (maxLen, run);
            run = 0;
        }
    }
    maxLen = Math.max (maxLen, run);
    return maxLen;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52522609_52523068_1_16
52522609_52523161_1_16
Title: If else statement not calling isServiceCharge() method? 
----------------------------------------

public void isServiceCharge () {
    if (accountType.equals ("s") || accountType.equals ("S")) {
        double newBalance = currentBalance - 10.0;
        JOptionPane.showMessageDialog (null, "Account Number: " + getAccountNumber () + "\nAccount Type: " + getAccountType () + "\nMinimum Balance: $" + getMinSavings () + "\nBalance Before Interest and Fees: $" + getCurrentBalance () + "\n\nNew Balance: $" + newBalance);
    } else if (accountType.equals ("c") || accountType.equals ("C")) {
        double newBalance = currentBalance - 25.0;
        JOptionPane.showMessageDialog (null, "Account Number: " + getAccountNumber () + "\nAccount Type: " + getAccountType () + "\nMinimum Balance: $" + getMinSavings () + "\nBalance Before Interest and Fees: $" + getCurrentBalance () + "\n\nNew Balance: $" + newBalance);
    }

}
----------------------------------------

public void isServiceCharge () {
    if (accountType.equals ("s") || accountType.equals ("S")) {
        double newBalance = currentBalance - 10.0;
        JOptionPane.showMessageDialog (null, "Account Number: " + getAccountNumber () + "\nAccount Type: " + getAccountType () + "\nMinimum Balance: $" + getMinSavings () + "\nBalance Before Interest and Fees: $" + getCurrentBalance () + "\n\nNew Balance: $" + newBalance);
    } else if (accountType.equals ("c") || accountType.equals ("C")) {
        double newBalance = currentBalance - 25.0;
        JOptionPane.showMessageDialog (null, "Account Number: " + getAccountNumber () + "\nAccount Type: " + getAccountType () + "\nMinimum Balance: $" + getMinSavings () + "\nBalance Before Interest and Fees: $" + getCurrentBalance () + "\n\nNew Balance: $" + newBalance);
    }

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52528279_52528572_4_33
52528279_52528881_11_50
Title: Drawing a diamond of numbers in a 2d array Java 
----------------------------------------

public static void main (String [] args) {
    int n = 8;
    int x = 4 - 1;
    int y = 5 - 1;
    int r = 3;
    char [] [] array = new char [n] [n];
    for (int i = 0;
    i < n; i ++) {
        for (int j = 0;
        j < n; j ++) {
            int dist = Math.abs (x - i) + Math.abs (y - j);
            if (dist == 0) {
                array [i] [j] = 'x';
            } else if (dist <= r) {
                array [i] [j] = (char) (dist + '0');
            } else {
                array [i] [j] = '0';
            }

        }
    }
    System.out.println (Arrays.deepToString (array).replace ("], ", "]\n").replace ("[", "").replace ("]", "").replace (", ", " "));
}
----------------------------------------

public static void main (String [] args) throws IOException {
    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));
    StringTokenizer st = new StringTokenizer (br.readLine (), " ");
    int N = Integer.parseInt (st.nextToken ());
    int R = Integer.parseInt (st.nextToken ()) - 1;
    int C = Integer.parseInt (st.nextToken ()) - 1;
    int range = Integer.parseInt (st.nextToken ());
    char [] [] arr = new char [N] [N];
    for (int i = 0;
    i < N; i ++) {
        Arrays.fill (arr [i], '0');
    }
    Queue < int [] > q = new LinkedList < > ();
    q.add (new int [] {0, R, C});
    while (! q.isEmpty ()) {
        int [] current = q.remove ();
        if (arr [current [1]] [current [2]] == '0' && current [0] <= range) {
            arr [current [1]] [current [2]] = (current [0] + "").charAt (0);
            if (current [1] + 1 < N) q.add (new int [] {current [0] + 1, current [1] + 1, current [2]});

            if (current [1] - 1 >= 0) q.add (new int [] {current [0] + 1, current [1] - 1, current [2]});

            if (current [2] + 1 < N) q.add (new int [] {current [0] + 1, current [1], current [2] + 1});

            if (current [2] - 1 >= 0) q.add (new int [] {current [0] + 1, current [1], current [2] - 1});

        }
    }
    arr [R] [C] = 'x';
    for (int i = 0;
    i < N; i ++) {
        for (int j = 0;
        j < N; j ++) {
            System.out.print (arr [i] [j] + " ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52535612_52538254_18_28
52535612_52540013_40_58
Title: Print integers from 1 to 10 with only 5 Threads in a specific order 
----------------------------------------

public void run () {
    for (;;) {
        if (index.get () == array.length) {
            break;
        }
        if (ai.get () == current) {
            System.out.println (Thread.currentThread ().getName () + " " + array [index.getAndIncrement ()]);
            ai.compareAndSet (current, next);
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        phaser.arriveAndAwaitAdvance ();
        int newCount = count.incrementAndGet ();
        if (newCount > 10) {
            next.arriveAndDeregister ();
            return;
        }
        System.out.println (getName () + " -> " + newCount);
        phaser.register ();
        next.arriveAndDeregister ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52535612_52538254_18_28
52535612_52541964_18_44
Title: Print integers from 1 to 10 with only 5 Threads in a specific order 
----------------------------------------

public void run () {
    for (;;) {
        if (index.get () == array.length) {
            break;
        }
        if (ai.get () == current) {
            System.out.println (Thread.currentThread ().getName () + " " + array [index.getAndIncrement ()]);
            ai.compareAndSet (current, next);
        }
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            synchronized (lock) {
                int count = lock.get ();
                String name = Thread.currentThread ().getName ();
                if (count == a) System.out.println (name + " -> " + a);
                else if (count == b) System.out.println (name + " -> " + b);
                else continue;

                lock.incrementAndGet ();
                lock.notifyAll ();
                if (count == a) lock.wait ();
                else return;

            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52535612_52540013_40_58
52535612_52541964_18_44
Title: Print integers from 1 to 10 with only 5 Threads in a specific order 
----------------------------------------

public void run () {
    while (true) {
        phaser.arriveAndAwaitAdvance ();
        int newCount = count.incrementAndGet ();
        if (newCount > 10) {
            next.arriveAndDeregister ();
            return;
        }
        System.out.println (getName () + " -> " + newCount);
        phaser.register ();
        next.arriveAndDeregister ();
    }
}
----------------------------------------

public void run () {
    try {
        while (true) {
            synchronized (lock) {
                int count = lock.get ();
                String name = Thread.currentThread ().getName ();
                if (count == a) System.out.println (name + " -> " + a);
                else if (count == b) System.out.println (name + " -> " + b);
                else continue;

                lock.incrementAndGet ();
                lock.notifyAll ();
                if (count == a) lock.wait ();
                else return;

            }
        }
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52535612_52540013_8_28
52535612_52541964_1_51
Title: Print integers from 1 to 10 with only 5 Threads in a specific order 
----------------------------------------

public static void main (String [] args) {
    PrintThread [] threads = new PrintThread [5];
    for (int i = 0;
    i < 5; i ++) {
        threads [i] = new PrintThread ("T" + (i + 1));
        if (i > 0) threads [i - 1].next = threads [i].phaser;

    }
    threads [4].next = threads [0].phaser;
    for (PrintThread pt : threads) pt.start ();

    threads [0].phaser.arriveAndDeregister ();
}
----------------------------------------

public static void main (String...args) {
    class LocalTask extends Thread {
        public static final int TOTAL = 5;
        private final int a;
        private final int b;
        private final AtomicInteger lock;
        public LocalTask (int id, AtomicInteger lock) {
            super ("T" + id);
            a = id;
            b = id + TOTAL;
            this.lock = lock;
        }@Override
        public void run () {
            try {
                while (true) {
                    synchronized (lock) {
                        int count = lock.get ();
                        String name = Thread.currentThread ().getName ();
                        if (count == a) System.out.println (name + " -> " + a);
                        else if (count == b) System.out.println (name + " -> " + b);
                        else continue;

                        lock.incrementAndGet ();
                        lock.notifyAll ();
                        if (count == a) lock.wait ();
                        else return;

                    }
                }
            } catch (InterruptedException e) {
                e.printStackTrace ();
            }
        }}

    AtomicInteger lock = new AtomicInteger (1);
    for (int i = 1;
    i <= LocalTask.TOTAL; i ++) new LocalTask (i, lock).start ();

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52538069_52538180_29_43
52538069_52538545_10_24
Title: Binary tree in java with getters and setters 
----------------------------------------

public void insert (int value) {
    if (value < getData ()) {
        if (getLeft () == null) {
            setLeft (new Tree (value));
        } else {
            getLeft ().insert (value);
        }
    } else {
        if (getRight () == null) {
            setRight (new Tree (value));
        } else {
            getLeft ().insert (value);
        }
    }
}
----------------------------------------

public void insert (int value) {
    if (value < data) {
        if (left == null) {
            left = new Tree (value);
        } else {
            left.insert (value);
        }
    } else {
        if (right == null) {
            right = new Tree (value);
        } else {
            right.insert (value);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52546739_52548146_34_55
52546739_52602213_78_101
Title: How to use Comparator for duplicates? 
----------------------------------------

public static void main (String [] args) {
    List < TestArr > num1 = new ArrayList < > ();
    num1.add (new TestArr (40));
    num1.add (new TestArr (50));
    num1.add (new TestArr (50));
    num1.add (new TestArr (40));
    num1.add (new TestArr (20));
    num1.add (new TestArr (10));
    num1.add (new TestArr (10));
    num1.add (new TestArr (30));
    num1.add (new TestArr (20));
    num1.add (new TestArr (30));
    sort (num1);
    Iterator < TestArr > itr = num1.iterator ();
    while (itr.hasNext ()) {
        TestArr st = itr.next ();
        System.out.println (st.var);
    }
    System.out.println ();
}
----------------------------------------

public static void main (String [] args) {
    String [] data = null;
    System.out.print ("Please input data (1, 5, 10, 2, 15, 3, 20): ");
    try (Scanner scanner = new Scanner (System.in)) {
        data = scanner.nextLine ().split (",");
    } catch (Exception ex) {
        System.out.println ("\nIncorrect data format.");
        return;
    }
    if (data == null || data.length < 2) {
        System.out.println ("Incorrect data format.");
        return;
    }
    List < Integer > deck = new ArrayList < > ();
    for (String value : data) deck.add (new Integer (value.trim ()));

    Collection < List < Integer > > resultDecks = sort (deck, 3);
    System.out.println ("Final decks:\t" + resultDecks);
    System.out.println ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52546739_52548146_9_32
52546739_52602213_28_76
Title: How to use Comparator for duplicates? 
----------------------------------------

private static void sort (List < TestArr > num1) {
    Map < TestArr, Integer > histogram = new TreeMap < TestArr, Integer > ();
    for (TestArr test : num1) {
        Integer count = histogram.get (test);
        if (count == null) count = 0;

        histogram.put (test, ++ count);
    }
    num1.clear ();
    while (! histogram.isEmpty ()) {
        Iterator < TestArr > itr = histogram.keySet ().iterator ();
        while (itr.hasNext ()) {
            TestArr st = itr.next ();
            Integer count = histogram.get (st);
            if (count > 0) {
                num1.add (st);
                histogram.put (st, -- count);
                continue;
            }
            itr.remove ();
        }
    }
}
----------------------------------------

private static Collection < List < Integer > > sort (List < Integer > deck, Integer splitSize) {
    Map < Integer, List < Integer > > decks = new TreeMap < > ();
    outerLoop : for (Integer card : deck) {
        List < Integer > cards = new ArrayList < > ();
        Iterator < Integer > itr = decks.keySet ().iterator ();
        while (itr.hasNext ()) {
            Integer masterCard = itr.next ();
            if (isInRange (card, masterCard)) {
                decks.get (masterCard).add (card);
                continue outerLoop;
            }
        }
        decks.put (card, cards);
        decks.get (card).add (card);
    }
    System.out.println ("Arranged decks:\t" + decks.values ());
    List < List < Integer > > resultDecks = new ArrayList < > ();
    if (splitSize == null || splitSize < 2) splitSize = decks.size ();

    for (int i = 0;
    i < splitSize; ++ i) resultDecks.add (new ArrayList < > ());

    boolean lastCard = false;
    while (! decks.isEmpty ()) {
        Iterator < Integer > itr = decks.keySet ().iterator ();
        if (itr.hasNext ()) {
            Integer masterCard = itr.next ();
            List < Integer > cards = decks.get (masterCard);
            Integer card = Collections.min (cards);
            cards.remove (card);
            boolean uno = cards.isEmpty ();
            if (uno) {
                lastCard = true;
                getDeckWithLessCards (resultDecks).add (card);
                itr.remove ();
            } else if (lastCard) {
                resultDecks.get (0).add (card);
                lastCard = false;
            } else getDeckWithLessCards (resultDecks).add (card);

        }
    }
    return resultDecks;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52553608_52553726_1_30
52553608_52553761_1_15
Title: Hi im trying to have my if statement equal to more then one number 
----------------------------------------

public Date (int cMonth, int cDate, int cYear, int cDayToDate, String cStrMonth, int dayYear) {
    switch (cMonth) {
        case 1 :
        case 3 :
        case 5 :
        case 7 :
        case 8 :
        case 10 :
        case 12 :
            if (cDate > 31) throw new IllegalArgumentException ();

            break;
        case 4 :
        case 6 :
        case 9 :
        case 11 :
            if (cDate > 30) throw new IllegalArgumentException ();

            break;
        case 2 :
            int days = isLeapYear (cYear) ? 29 : 28;
            if (cDate > days) throw new IllegalArgumentException ();

            break;
        default :
            throw new IllegalArgumentException ();
    }
    date = cDate;
}
----------------------------------------

public Date (int cMonth, int cDate, int cYear, int cDayToDate, String cStrMonth, int dayYear) {
    switch (cMonth) {
        case 1 :
        case 12 :
            break;
        case 4 :
        case 6 :
        case 9 :
        case 11 :
            break;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5255658_29637705_3_13
5255658_5256849_1_10
Title: Need help solving issue with Java array problem 
----------------------------------------

public static int [] stutter (int [] a) {
    int [] j = new int [a.length * 2];
    for (int i = 0;
    i < j.length; i ++) {
        j [i] = a [i];
        j [i + 1] = a [i];
        i ++;
    }
    return j;
}
----------------------------------------

public static int [] stutter (int [] a) {
    int [] j = new int [a.length * 2];
    for (int i = 0;
    i < a.length; i ++) {
        j [i * 2] = a [i];
        j [i * 2 + 1] = a [i];
    }
    return j;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52562019_52562048_1_9
52562019_52562092_6_14
Title: why does Random(System.currentTimeMillis()); give me repeated values (Java)? 
----------------------------------------

public static void main (String [] args) {
    int points = 0;
    Random num = new Random (System.nanoTime ());
    while (points < 100) {
        int [] scoreInfo = diceGen (num);
        System.out.println (scoreInfo [0] + ", " + scoreInfo [1]);
        points += 1;
    }
}
----------------------------------------

public static void main (String [] args) {
    int points = 0;
    while (points < 100) {
        int [] scoreInfo = diceGen ();
        System.out.println (scoreInfo [0]);
        System.out.println (scoreInfo [1]);
        points += 1;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52569365_52569682_36_48
52569365_52569756_3_17
Title: How to type a string using * chars? 
----------------------------------------

public static void main (String [] args) {
    LetterPrinter printer = new LetterPrinter ();
    for (int i = 0;
    i <= 4; i ++) {
        printer.print (6, i);
        System.out.print ("  ");
        printer.print (0, i);
        System.out.print ("  ");
        printer.print (6, i);
        System.out.print ("\n");
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    ArrayList < Letter > ar = new ArrayList < > ();
    System.out.println ("Please input string: ");
    String s = sc.next ();
    for (char c : s.toCharArray ()) {
        ar.add (JavaApplication57.convertToLetter (c));
    }
    for (int i = 0;
    i < 5; i ++) {
        for (Letter l : ar) {
            System.out.print (l.getLine (i) + " ");
        }
        System.out.println ("");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52572566_52572848_4_23
52572566_52600858_1_17
Title: error: incompatible types: double cannot be converted to double[] 
----------------------------------------

public static void main (String [] args) {
    double [] mass = new double [3];
    double [] volume = new double [3];
    Scanner scan = new Scanner (System.in);
    System.out.println ("Enter the mass and volume for your three compounds.");
    for (int i = 0;
    i < 3; i ++) {
        System.out.print ("Enter mass in grams:  ");
        mass [i] = scan.nextDouble ();
        System.out.print ("Enter volume in millimeters:  ");
        volume [i] = scan.nextDouble ();
    }
    System.out.print ("The density for mass = ");
    System.out.printf ("%.2f", mass [0]);
    System.out.print ("g and volume = ");
    System.out.printf ("%.2f", volume [0]);
    System.out.print ("ml is: ");
    System.out.printf ("%.2f", calculateDensity (mass [0], volume [0]));
}
----------------------------------------

public static void main (String [] args) {
    double [] mass = new double [3];
    double [] volume = new double [3];
    Scanner s = new Scanner (System.in);
    System.out.println ("Enter the mass and volume for your 3 compounds.\n");
    for (int i = 0;
    i < 3; i ++) {
        System.out.print ("Enter mass in grams: ");
        mass [i] = s.nextDouble ();
        System.out.println ();
        System.out.printf ("Enter volume in milliliters: ");
        volume [i] = s.nextDouble ();
        System.out.println ();
    }
    s.close ();
    calculateDensity (mass, volume);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52575186_52575522_18_37
52575186_52575918_27_39
Title: Compare two String using recursion (case insensitive) 
----------------------------------------

public static int recursiveCompare (String s1, String s2) {
    if (s1.length () == 0 || s2.length () == 0) {
        if ((s1.length () == 0 && s2.length () == 0)) {
            return 0;
        } else if (s1.length () != 0) {
            return 1;
        } else {
            return - 1;
        }

    }
    if (s1.charAt (0) < s2.charAt (0)) {
        return - 1;
    } else if (s1.charAt (0) > s2.charAt (0)) {
        return 1;
    } else if (s1.charAt (0) == s2.charAt (0)) {
        return 0;
    } else {
        return recursiveCompare (s1.substring (1), s2.substring (1));
    }

}
----------------------------------------

public static int recursiveCompare (String s1, String S2) {
    if (s1.length () == 0 || S2.length () == 0) {
        if ((s1.length () == 0 && S2.length () == 0)) {
            result = 0;
        } else if ((s1.length () != 0 || S2.length () == 0)) {
            result = 1;
        } else if ((s1.length () == 0 || S2.length () != 0)) {
            result = - 1;
        }

    } else {
        recursiveCompareHelper (s1, S2, 0);
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52583943_52584088_1_38
52583943_52585365_1_45
Title: Check if all characters of string contains same number of times 
----------------------------------------

private static boolean isValid (String s) {
    TreeMap < Long, Long > frequencyCounts = s.chars ().boxed ().collect (Collectors.groupingBy (Function.identity (), Collectors.counting ())).values ().stream ().collect (Collectors.groupingBy (Function.identity (), TreeMap :: new, Collectors.counting ()));
    if (frequencyCounts.size () == 1) {
        return true;
    }
    if (frequencyCounts.size () == 2) {
        Iterator < Map.Entry < Long, Long > > iter = frequencyCounts.entrySet ().iterator ();
        Map.Entry < Long, Long > minEntry = iter.next ();
        long minFrequency = minEntry.getKey ();
        long numMinFrequency = minEntry.getValue ();
        if (minFrequency == 1L && numMinFrequency == 1L) {
            return true;
        }
        Map.Entry < Long, Long > maxEntry = iter.next ();
        long maxFrequency = maxEntry.getKey ();
        long numMaxFrequency = maxEntry.getValue ();
        if (numMaxFrequency == 1L && maxFrequency == minFrequency + 1L) {
            return true;
        }
    }
    return false;
}
----------------------------------------

static String isValid (String s) {
    Integer arr [] = new Integer [26];
    Arrays.fill (arr, 0);
    for (int i = 0;
    i < s.length (); i ++) {
        arr [s.charAt (i) - 97] ++;
    }
    List < Integer > arrList = Arrays.asList (arr);
    HashSet < Integer > set = new HashSet < Integer > (arrList);
    set.remove (new Integer (0));
    int len = set.size ();
    if (len == 1) return "YES";
    else if (len == 2) {
        List < Integer > list = new ArrayList < > (set);
        int x = list.get (0);
        int y = list.get (1);
        int max = (x > y) ? x : y;
        int min = (x < y) ? x : y;
        if (Collections.frequency (arrList, min) == 1 && min == 1) {
            return "YES";
        } else if (max - min == 1) {
            if ((Collections.frequency (arrList, max) == 1)) {
                return "YES";
            } else {
                return "NO";
            }
        } else {
            return "NO";
        }

    } else return "NO";

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52583943_52584088_1_38
52583943_52828839_1_32
Title: Check if all characters of string contains same number of times 
----------------------------------------

private static boolean isValid (String s) {
    TreeMap < Long, Long > frequencyCounts = s.chars ().boxed ().collect (Collectors.groupingBy (Function.identity (), Collectors.counting ())).values ().stream ().collect (Collectors.groupingBy (Function.identity (), TreeMap :: new, Collectors.counting ()));
    if (frequencyCounts.size () == 1) {
        return true;
    }
    if (frequencyCounts.size () == 2) {
        Iterator < Map.Entry < Long, Long > > iter = frequencyCounts.entrySet ().iterator ();
        Map.Entry < Long, Long > minEntry = iter.next ();
        long minFrequency = minEntry.getKey ();
        long numMinFrequency = minEntry.getValue ();
        if (minFrequency == 1L && numMinFrequency == 1L) {
            return true;
        }
        Map.Entry < Long, Long > maxEntry = iter.next ();
        long maxFrequency = maxEntry.getKey ();
        long numMaxFrequency = maxEntry.getValue ();
        if (numMaxFrequency == 1L && maxFrequency == minFrequency + 1L) {
            return true;
        }
    }
    return false;
}
----------------------------------------

static String isValid (String s) {
    int a [] = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        int index = s.charAt (i) - 'a';
        a [index] ++;
    }
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < 26; i ++) {
        if (a [i] != 0) {
            if (map.containsKey (a [i])) {
                map.put (a [i], map.get (a [i]) + 1);
            } else {
                map.put (a [i], 1);
            }
        }
    }
    if (map.size () == 1) return "YES";

    if (map.size () == 2) {
        Set < Entry < Integer, Integer > > entrySet = map.entrySet ();
        Iterator it = entrySet.iterator ();
        Entry < Integer, Integer > e1 = (Entry < Integer, Integer >) it.next ();
        int key1 = e1.getKey ();
        int value1 = e1.getValue ();
        Entry < Integer, Integer > e2 = (Entry < Integer, Integer >) it.next ();
        int key2 = e2.getKey ();
        int value2 = e2.getValue ();
        if (value1 == 1 || value2 == 1 && Math.abs (key1 - key2) == 1) return "YES";

    }
    return "NO";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52583943_52585365_1_45
52583943_52828839_1_32
Title: Check if all characters of string contains same number of times 
----------------------------------------

static String isValid (String s) {
    Integer arr [] = new Integer [26];
    Arrays.fill (arr, 0);
    for (int i = 0;
    i < s.length (); i ++) {
        arr [s.charAt (i) - 97] ++;
    }
    List < Integer > arrList = Arrays.asList (arr);
    HashSet < Integer > set = new HashSet < Integer > (arrList);
    set.remove (new Integer (0));
    int len = set.size ();
    if (len == 1) return "YES";
    else if (len == 2) {
        List < Integer > list = new ArrayList < > (set);
        int x = list.get (0);
        int y = list.get (1);
        int max = (x > y) ? x : y;
        int min = (x < y) ? x : y;
        if (Collections.frequency (arrList, min) == 1 && min == 1) {
            return "YES";
        } else if (max - min == 1) {
            if ((Collections.frequency (arrList, max) == 1)) {
                return "YES";
            } else {
                return "NO";
            }
        } else {
            return "NO";
        }

    } else return "NO";

}
----------------------------------------

static String isValid (String s) {
    int a [] = new int [26];
    for (int i = 0;
    i < s.length (); i ++) {
        int index = s.charAt (i) - 'a';
        a [index] ++;
    }
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (int i = 0;
    i < 26; i ++) {
        if (a [i] != 0) {
            if (map.containsKey (a [i])) {
                map.put (a [i], map.get (a [i]) + 1);
            } else {
                map.put (a [i], 1);
            }
        }
    }
    if (map.size () == 1) return "YES";

    if (map.size () == 2) {
        Set < Entry < Integer, Integer > > entrySet = map.entrySet ();
        Iterator it = entrySet.iterator ();
        Entry < Integer, Integer > e1 = (Entry < Integer, Integer >) it.next ();
        int key1 = e1.getKey ();
        int value1 = e1.getValue ();
        Entry < Integer, Integer > e2 = (Entry < Integer, Integer >) it.next ();
        int key2 = e2.getKey ();
        int value2 = e2.getValue ();
        if (value1 == 1 || value2 == 1 && Math.abs (key1 - key2) == 1) return "YES";

    }
    return "NO";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52585878_52586104_12_33
52585878_52586104_46_65
Title: asynchronous threads each running an infinite loop 
----------------------------------------

public void run () {
    while (true) {
        synchronized (queue) {
            while (queue.size () == maxSize) {
                try {
                    System.out.println ("Queue is full, " + "Producer thread waiting for " + "consumer to take something from queue");
                    queue.wait ();
                } catch (Exception ex) {
                    ex.printStackTrace ();
                }
            }
            Random random = new Random ();
            int i = random.nextInt ();
            System.out.println ("Producing value : " + i);
            queue.add (i);
            queue.notifyAll ();
        }
    }
}
----------------------------------------

public void run () {
    while (true) {
        synchronized (queue) {
            while (queue.isEmpty ()) {
                System.out.println ("Queue is empty," + "Consumer thread is waiting" + " for producer thread to put something in queue");
                try {
                    queue.wait ();
                } catch (Exception ex) {
                    ex.printStackTrace ();
                }
            }
            System.out.println ("Consuming value : " + queue.remove ());
            queue.notifyAll ();
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52585986_52589397_113_137
52585986_52604518_122_146
Title: Android: Store CheckBox state in CheckList for different days 
----------------------------------------

private String getCheckboxColumnNameFromNumber (int checkbox) {
    switch (checkbox) {
        case 1 :
            return DAYENTRIES_COL_CB01;
        case 2 :
            return DAYENTRIES_COL_CB02;
        case 3 :
            return DAYENTRIES_COL_CB03;
        case 4 :
            return DAYENTRIES_COL_CB04;
        case 5 :
            return DAYENTRIES_COL_CB05;
        case 6 :
            return DAYENTRIES_COL_CB06;
        case 7 :
            return DAYENTRIES_COL_CB07;
        case 8 :
            return DAYENTRIES_COL_CB08;
        case 9 :
            return DAYENTRIES_COL_CB09;
        case 10 :
            return DAYENTRIES_COL_CB10;
    }
    return "";
}
----------------------------------------

private String getCheckboxColumnNameFromNumber (int checkbox) {
    switch (checkbox) {
        case 1 :
            return DAYENTRIES_COL_CB01;
        case 2 :
            return DAYENTRIES_COL_CB02;
        case 3 :
            return DAYENTRIES_COL_CB03;
        case 4 :
            return DAYENTRIES_COL_CB04;
        case 5 :
            return DAYENTRIES_COL_CB05;
        case 6 :
            return DAYENTRIES_COL_CB06;
        case 7 :
            return DAYENTRIES_COL_CB07;
        case 8 :
            return DAYENTRIES_COL_CB08;
        case 9 :
            return DAYENTRIES_COL_CB09;
        case 10 :
            return DAYENTRIES_COL_CB10;
    }
    return "";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52585986_52589397_55_96
52585986_52604518_60_105
Title: Android: Store CheckBox state in CheckList for different days 
----------------------------------------

public int setDayEntryForOneCheckBox (String date, int checkbox) {
    int rv = 0;
    String whereclause = DAYENTRIES_COL_DATE + "=?";
    String [] whereargs = new String [] {date};
    ContentValues cv = new ContentValues ();
    switch (checkbox) {
        case 1 :
            cv.put (DAYENTRIES_COL_CB01, 1);
            break;
        case 2 :
            cv.put (DAYENTRIES_COL_CB02, 1);
            break;
        case 3 :
            cv.put (DAYENTRIES_COL_CB03, 1);
            break;
        case 4 :
            cv.put (DAYENTRIES_COL_CB04, 1);
            break;
        case 5 :
            cv.put (DAYENTRIES_COL_CB05, 1);
            break;
        case 6 :
            cv.put (DAYENTRIES_COL_CB06, 1);
            break;
        case 7 :
            cv.put (DAYENTRIES_COL_CB07, 1);
            break;
        case 8 :
            cv.put (DAYENTRIES_COL_CB08, 1);
            break;
        case 9 :
            cv.put (DAYENTRIES_COL_CB09, 1);
            break;
        case 10 :
            cv.put (DAYENTRIES_COL_CB10, 1);
            break;
    }
    if (cv.size () == 1) {
        rv = mDB.update (TB_DAYENTRIES, cv, whereclause, whereargs);
    }
    return rv;
}
----------------------------------------

public int setDayEntryForOneCheckBox (String date, int checkbox, boolean status) {
    int rv = 0;
    String whereclause = DAYENTRIES_COL_DATE + "=?";
    String [] whereargs = new String [] {date};
    ContentValues cv = new ContentValues ();
    int value = 0;
    if (status) {
        value = 1;
    }
    switch (checkbox) {
        case 1 :
            cv.put (DAYENTRIES_COL_CB01, value);
            break;
        case 2 :
            cv.put (DAYENTRIES_COL_CB02, value);
            break;
        case 3 :
            cv.put (DAYENTRIES_COL_CB03, value);
            break;
        case 4 :
            cv.put (DAYENTRIES_COL_CB04, value);
            break;
        case 5 :
            cv.put (DAYENTRIES_COL_CB05, value);
            break;
        case 6 :
            cv.put (DAYENTRIES_COL_CB06, value);
            break;
        case 7 :
            cv.put (DAYENTRIES_COL_CB07, value);
            break;
        case 8 :
            cv.put (DAYENTRIES_COL_CB08, value);
            break;
        case 9 :
            cv.put (DAYENTRIES_COL_CB09, value);
            break;
        case 10 :
            cv.put (DAYENTRIES_COL_CB10, value);
            break;
    }
    if (cv.size () == 1) {
        rv = mDB.update (TB_DAYENTRIES, cv, whereclause, whereargs);
    }
    return rv;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52585986_52589397_98_111
52585986_52604518_107_120
Title: Android: Store CheckBox state in CheckList for different days 
----------------------------------------

public boolean isDayEntryCheckboxSet (String date, int checkbox) {
    boolean rv = false;
    String whereclause = DAYENTRIES_COL_DATE + "=?";
    String [] whereargs = new String [] {date};
    if (checkbox < 1 || checkbox > 10) {
        return rv;
    }
    Cursor csr = mDB.query (TB_DAYENTRIES, null, whereclause, whereargs, null, null, null);
    if (csr.moveToFirst ()) {
        rv = csr.getInt (csr.getColumnIndex (getCheckboxColumnNameFromNumber (checkbox))) == 1;
    }
    csr.close ();
    return rv;
}
----------------------------------------

public boolean isDayEntryCheckboxSet (String date, int checkbox) {
    boolean rv = false;
    String whereclause = DAYENTRIES_COL_DATE + "=?";
    String [] whereargs = new String [] {date};
    if (checkbox < 1 || checkbox > 10) {
        return false;
    }
    Cursor csr = mDB.query (TB_DAYENTRIES, null, whereclause, whereargs, null, null, null);
    if (csr.moveToFirst ()) {
        rv = csr.getInt (csr.getColumnIndex (getCheckboxColumnNameFromNumber (checkbox))) == 1;
    }
    csr.close ();
    return rv;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52589512_52589630_1_10
52589512_52589658_24_31
Title: Display all prime numbers based on range inputted in java 
----------------------------------------

private static boolean isPrime (int n) {
    if (n % 2 == 0) return false;

    for (int i = 3;
    i * i <= n; i += 2) {
        if (n % i == 0) return false;

    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    for (int i = 2;
    i < number; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52589512_52589658_1_18
52589512_52589708_19_30
Title: Display all prime numbers based on range inputted in java 
----------------------------------------

public static void main (String args []) {
    System.out.println ("Enter the amount of prime numbers to be printed: ");
    int limit = new Scanner (System.in).nextInt ();
    int count = 1;
    System.out.println ("Printing prime number from 1 to " + limit);
    for (int number = 2;
    count <= limit; number ++) {
        if (isPrime (number)) {
            System.out.println (number);
            count ++;
        }
    }
}
----------------------------------------

public static void main (String [] args) throws Exception {
    int isPrime = 0;
    int counter = 0;
    int size = 10;
    while (isPrime < size) {
        counter ++;
        if (checkPrime (counter)) {
            isPrime ++;
            System.out.println (counter);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52589640_52593029_10_36
52589640_52594017_24_83
Title: Change javafx circles color in certain time using multithreads 
----------------------------------------

public void start (Stage stage) {
    circle = new Circle (15, 15, 30, Color.GREEN);
    colorHashMap.put (circle, Color.GREEN);
    counterHashMap.put (circle, 3);
    circle1 = new Circle (15, 45, 30, Color.GREY);
    colorHashMap.put (circle1, Color.YELLOW);
    counterHashMap.put (circle1, 2);
    circle2 = new Circle (15, 60, 30, Color.GREY);
    colorHashMap.put (circle2, Color.RED);
    counterHashMap.put (circle2, 1);
    VBox vBox = new VBox ();
    vBox.getChildren ().addAll (circle, circle1, circle2);
    Scene scene = new Scene (vBox);
    stage = new Stage ();
    stage.setScene (scene);
    stage.show ();
    try {
        startThreads ();
    } catch (InterruptedException e) {
        e.printStackTrace ();
    }
}
----------------------------------------

public void start (Stage primaryStage) {
    String COLOR_GREEN_DARK = "#008000";
    String COLOR_GREEN = "47C746";
    String COLOR_YELLOW_DARK = "CA7602";
    String COLOR_YELLOW = "FFFF40";
    String COLOR_RED_DARK = "A30504";
    String COLOR_RED = "FF0000";
    Circle red = new Circle (25, Color.valueOf (COLOR_RED_DARK));
    Circle green = new Circle (25, Color.valueOf (COLOR_GREEN_DARK));
    Circle yellow = new Circle (25, Color.valueOf (COLOR_YELLOW_DARK));
    VBox trafficLight = new VBox (red, yellow, green);
    Timeline timeline = new Timeline (new KeyFrame (Duration.seconds (2), (ActionEvent event) -> {
        switch (currentLight) {
            case "GREEN" :
                red.setFill (Color.valueOf (COLOR_RED_DARK));
                green.setFill (Color.valueOf (COLOR_GREEN));
                currentLight = "YELLOW";
                break;
            case "RED" :
                yellow.setFill (Color.valueOf (COLOR_YELLOW_DARK));
                red.setFill (Color.valueOf (COLOR_RED));
                currentLight = "GREEN";
                break;
            case "YELLOW" :
                green.setFill (Color.valueOf (COLOR_GREEN_DARK));
                yellow.setFill (Color.valueOf (COLOR_YELLOW));
                currentLight = "RED";
                break;
        }
    }));
    timeline.setCycleCount (Timeline.INDEFINITE);
    Button btn = new Button ();
    btn.setText ("Start");
    btn.setOnAction ((ActionEvent event) -> {
        switch (timeline.getStatus ()) {
            case STOPPED :
            case PAUSED :
                timeline.play ();
                break;
            case RUNNING :
                timeline.pause ();
                break;
        }
    });
    VBox root = new VBox (new StackPane (trafficLight), btn);
    Scene scene = new Scene (root, 300, 250);
    primaryStage.setTitle ("Hello World!");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52594725_52594773_52_60
52594725_52595059_57_65
Title: User adding new words to a string array which is used by a list (App stops working) 
----------------------------------------

public void add (View view) {
    EditText txtw = (EditText) findViewById (R.id.t1);
    String ndef = txtw.getText ().toString ();
    defn.add (ndef);
    EditText txtd = (EditText) findViewById (R.id.t2);
    String nword = txtd.getText ().toString ();
    words.add (nword);
    adap.notifyDataSetChanged ();
}
----------------------------------------

public void add (View view) {
    EditText txtw = (EditText) findViewById (R.id.t1);
    String ndef = txtw.getText ().toString ();
    defn.add (ndef);
    EditText txtd = (EditText) findViewById (R.id.t2);
    String nword = txtd.getText ().toString ();
    words.add (nword);
    run ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5259768_5260245_6_19
5259768_5276137_16_39
Title: Set size of a JLabel inside JToolbar 
----------------------------------------

public EditorStatusBar () {
    super ();
    addSeparator (new Dimension (100, this.getSize ().height));
    this.areaCoordX = new JLabel ("    ");
    this.areaCoordX.setMinimumSize (new Dimension (80, 10));
    this.areaCoordX.setPreferredSize (new Dimension (80, 10));
    this.areaCoordX.setHorizontalAlignment (JLabel.RIGHT);
    this.areaCoordX.setOpaque (true);
    this.areaCoordY = new JLabel ("");
    add (areaCoordX);
    add (areaCoordY);
}
----------------------------------------

public EditorStatusBar (Component parent) {
    super ();
    setFloatable (false);
    add (new JButton ("Button 1"));
    addSeparator ();
    coords = new JTextField (5);
    coords.setEditable (false);
    coords.setHorizontalAlignment (JTextField.CENTER);
    add (coords);
    addSeparator ();
    add (new JButton ("Button 2"));
    parent.addMouseMotionListener (new MouseMotionAdapter () {
        @Override
        public void mouseMoved (MouseEvent e) {
            Point p = e.getPoint ();
            coords.setText (p.x + ":" + p.y);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52605751_52606042_10_18
52605751_52606505_1_35
Title: How to parse soap string in java 
----------------------------------------

public static void main (String [] args) {
    try {
        JSONObject xmlJSONObj = XML.toJSONObject (TEST_XML_STRING);
        String jsonPrettyPrintString = xmlJSONObj.toString (PRETTY_PRINT_INDENT_FACTOR);
        System.out.println (jsonPrettyPrintString);
    } catch (JSONException je) {
        System.out.println (je.toString ());
    }
}
----------------------------------------

public static void main (String [] args) {
    String xml = "<?xml version='1.0' encoding='UTF-8'?>" + "<S:Envelope xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\"><![CDATA[" + "<S:Body>" + "<ns2:processResponse xmlns:ns2=\"http://ws.xxxxx.com/\"><![CDATA[" + "<response><direction>response</direction>" + "<reference>09FG10021008111306320</reference>" + "<amount>0.0</amount>" + "<totalFailed>0</totalFailed>" + "<totalSuccess>0</totalSuccess>" + "<error>1</error>" + "<message>Invalid</message>" + "<otherReference>6360e28990c743a3b3234</otherReference>" + "<action>FT</action>" + "<openingBalance>0.0</openingBalance>" + "<closingBalance>0.0</closingBalance>" + "</response>" + "</ns2:processResponse>" + "</S:Body>" + "</S:Envelope>\n";
    SAXBuilder builder = new SAXBuilder ();
    Reader in = new StringReader (xml);
    Document doc = null;
    Element root = null;
    Element error = null;
    Element status_message = null;
    String status_code = "";
    String message = "";
    try {
        doc = builder.build (in);
        root = doc.getRootElement ();
        Element body = root.getChild ("Body", Namespace.getNamespace ("S", "http://schemas.xmlsoap.org/soap/envelope/"));
        Element processResponse = body.getChild ("processResponse", Namespace.getNamespace ("ns2", "http://ws.xxxxx.com/"));
        Element response = processResponse.getChild ("response");
        error = response.getChild ("error");
        status_message = response.getChild ("message");
        status_code = error.getText ();
        message = status_message.getText ();
    } catch (Exception e) {
        e.printStackTrace ();
    }
    System.out.println ("status_code: " + status_code + "\nmessage: " + message);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52609409_52609634_1_18
52609409_52609735_1_12
Title: How can I compare these two strings and remove a common letter without using arrays? 
----------------------------------------

public static String myTrim (String input, String list) {
    String r = "";
    for (int i = 0;
    i < input.length (); i ++) {
        int k = 0;
        for (; k < list.length (); k ++) {
            if (input.charAt (i) == list.charAt (k)) {
                break;
            }
        }
        if (k == list.length ()) r += input.charAt (i);

    }
    return r;
}
----------------------------------------

public static String myTrim (String input, String list) {
    StringBuilder result = new StringBuilder ();
    char c;
    for (int i = 0;
    i < input.length (); i ++) {
        c = input.charAt (i);
        if (list.indexOf (c) < 0) result.append (c);

    }
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
52619977_52620430_6_33
52619977_52621586_1_31
Title: Move a certain elements in 2D Array 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    String [] [] array = new String [7] [];
    array [0] = new String [] {"continents", "Asia", "Europe", "Africa", "Australia", "South America", "North America"};
    array [1] = new String [] {"profession", "teacher", "doctor", "lawyer"};
    array [2] = new String [] {"brand", "apple", "samsung"};
    array [3] = new String [] {"name", "lisa", "peter", "sam", "jack"};
    array [4] = new String [] {"profession", "engineer", "Professor", "Dentist", "Driver"};
    array [5] = new String [] {"sex", "value", "male", "female"};
    array [6] = new String [] {"exp", "value", "1", "2", "3", "4"};
    int index = sc.nextInt ();
    String [] tempReference = array [index - 1];
    for (int i = index - 1;
    i < array.length - 1; i ++) {
        array [i] = array [i + 1];
    }
    array [array.length - 1] = tempReference;
    for (String [] tempArray : array) {
        for (String s : tempArray) {
            System.out.print (s + " ");
        }
        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    String [] [] arr = new String [] [] {new String [] {"continents", "abc"}, new String [] {"name", "test"}, new String [] {"something", "test something"},};
    int indexOfNameArray = - 1;
    for (int i = 0;
    i < arr.length; i ++) {
        if (indexOfNameArray > - 1 && indexOfNameArray < arr.length - 1) {
            String [] temp = arr [i];
            arr [i] = arr [i - 1];
            arr [i - 1] = temp;
            indexOfNameArray = i;
        } else if (arr [i] [0].equals ("name")) {
            indexOfNameArray = i;
        }

    }
    for (int i = 0;
    i < arr.length; i ++) {
        for (int j = 0;
        j < arr [i].length; j ++) {
            System.out.print (arr [i] [j] + ", ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
5262096_5262123_9_20
5262096_5262401_6_18
Title: "How do I get the value of an Enum if I don't know the class at compile time?" 
----------------------------------------

public static void main (String [] args) {
    @SuppressWarnings ("rawtypes")
    Class cls = Foo.class;
    if (cls.isEnum ()) {
        @SuppressWarnings ("unchecked")
        Object value = Enum.valueOf (cls, "BAR");
        System.out.println (value);
    }
}
----------------------------------------

public static void main (String [] args) {
    Class < ? > cls = Foo.class;
    if (cls.isEnum ()) {
        for (Object constant : cls.getEnumConstants ()) {
            Enum < ? > enumConstant = (Enum < ? >) constant;
            if (enumConstant.name ().equals ("BAR")) {
                System.out.println (constant);
                break;
            }
        }
    }
}
----------------------------------------
