$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22016091_22016608_352_367
22016091_22016608_415_434
Title: How can I save a BufferedImage to be below a particular size 
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        int maxResolution = resolutionLimitSlider.getValue ();
        imageLimiter.setMaxResolution (maxResolution);
        updateOutputImage (imageLimiter.getOutputImage ());
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        int sizeLimit = (Integer) sizeLimitSpinner.getValue ();
        imageLimiter.setMaxFileSize (sizeLimit);
        updateOutputImage (imageLimiter.getOutputImage ());
        qualityLabel.setText ("Quality: " + String.format ("%.2f", imageLimiter.getQuality ()));
        qualitySlider.setValue ((int) (imageLimiter.getQuality () * 100));
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22016091_22016608_383_399
22016091_22016608_415_434
Title: How can I save a BufferedImage to be below a particular size 
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        float quality = qualitySlider.getValue () / 100.0f;
        imageLimiter.setQuality (quality);
        updateOutputImage (imageLimiter.getOutputImage ());
        qualityLabel.setText ("Quality: " + String.format ("%.2f", quality));
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------

public void stateChanged (ChangeEvent arg0) {
    if (! updating) {
        updating = true;
        int sizeLimit = (Integer) sizeLimitSpinner.getValue ();
        imageLimiter.setMaxFileSize (sizeLimit);
        updateOutputImage (imageLimiter.getOutputImage ());
        qualityLabel.setText ("Quality: " + String.format ("%.2f", imageLimiter.getQuality ()));
        qualitySlider.setValue ((int) (imageLimiter.getQuality () * 100));
        sizeLimitLabel.setText ("Size: " + imageLimiter.getFileSizeBytes ());
        sizeLimitSpinner.setValue (imageLimiter.getFileSizeBytes ());
        updating = false;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22021448_22021616_5_24
22021448_22021933_2_20
Title: retriving elements using enumeration 
----------------------------------------

public static void main (String [] args) {
    Vector < Integer > vector = new Vector < Integer > ();
    vector.add (1);
    vector.add (2);
    System.out.println ("After adding 1 and 2 to the Vector<Integer>");
    System.out.println (vector);
    Enumeration < Integer > enumeration = vector.elements ();
    while (enumeration.hasMoreElements ()) {
        Integer integer = (Integer) enumeration.nextElement ();
        System.out.println ("in first loop before print");
        System.out.println (integer);
        System.out.println ("in first loop after print");
    }
    vector.add (3);
    while (enumeration.hasMoreElements ()) {
        Integer integer1 = (Integer) enumeration.nextElement ();
        System.out.println (integer1);
        System.out.println ("why not printing");
    }
}
----------------------------------------

public static void main (String [] args) {
    Vector < Integer > vector = new Vector < Integer > ();
    vector.add (1);
    vector.add (2);
    System.out.println (vector);
    Enumeration < Integer > enumeration = vector.elements ();
    while (enumeration.hasMoreElements ()) {
        Integer integer = (Integer) enumeration.nextElement ();
        System.out.print (integer);
    }
    System.out.println ();
    System.out.println ("first loop finished");
    vector.add (3);
    while (enumeration.hasMoreElements ()) {
        Integer integer1 = (Integer) enumeration.nextElement ();
        System.out.println (integer1);
        System.out.println ("why not printing");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22021571_22021663_27_61
22021571_22021666_21_54
Title: Java GUI: How do I have more than one button on a row using GridBagLayout 
----------------------------------------

void init () {
    mainPanel = new JPanel ();
    mainPanel.setLayout (gbLayout);
    mainPanel.setBorder (BorderFactory.createEmptyBorder (10, 20, 10, 20));
    this.setContentPane (mainPanel);
    cText.anchor = GridBagConstraints.WEST;
    cText.weightx = 0.0;
    cText.gridx = 0;
    cText.gridy = 0;
    JTextField tf = new JTextField (20);
    gbLayout.setConstraints (tf, cText);
    mainPanel.add (tf);
    cButton.gridwidth = 4;
    cButton.weightx = 0.0;
    cButton.gridx = 0;
    cButton.gridy = 1;
    JPanel demoPanel = new JPanel ();
    JButton b = new JButton ("Submit");
    gbLayout.setConstraints (demoPanel, cButton);
    demoPanel.add (b);
    b = new JButton ("Cancel");
    demoPanel.add (b);
    mainPanel.add (demoPanel);
    this.pack ();
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setVisible (true);
}
----------------------------------------

void init () {
    mainPanel = new JPanel ();
    mainPanel.setLayout (gbLayout);
    mainPanel.setBorder (BorderFactory.createEmptyBorder (10, 20, 10, 20));
    this.setContentPane (mainPanel);
    GridBagConstraints gbc = new GridBagConstraints ();
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets (GAP, GAP, GAP, GAP);
    gbc.gridwidth = 2;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.gridx = 0;
    gbc.gridy = 0;
    JTextField tf = new JTextField (20);
    mainPanel.add (tf, gbc);
    gbc.gridwidth = 1;
    gbc.gridx = 0;
    gbc.gridy = 1;
    JButton b = new JButton ("Submit");
    mainPanel.add (b, gbc);
    b = new JButton ("Cancel");
    gbc.gridx ++;
    mainPanel.add (b, gbc);
    this.pack ();
    this.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    this.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22024770_22024873_1_14
22024770_22025274_1_27
Title: putting text file data into a hash map 
----------------------------------------

public static void main (String [] args) throws IOException {
    Map < Integer, String > map = new HashMap < Integer, String > ();
    BufferedReader br = new BufferedReader (new FileReader ("movieReviews.txt"));
    String line = "";
    int i = 0;
    while (line != null) {
        line = br.readLine ();
        map.put (i, line);
        i ++;
    }
    for (int j = 0;
    j < map.size (); j ++) {
        System.out.println (map.get (j));
    }
}
----------------------------------------

public static void main (String [] args) throws IOException {
    Map < Integer, String > map = new HashMap < Integer, String > ();
    BufferedReader br = new BufferedReader (new FileReader ("movieReviews.txt"));
    String line = "";
    int i = 0;
    while (line != null) {
        line = br.readLine ();
        map.put (i, line);
        i ++;
    }
    String movieNumber = "";
    String movieTitle = "";
    String movieRating = "";
    String movieOther1 = "";
    String movieOther2 = "";
    for (int j = 0;
    j < map.size (); j ++) {
        if (! (map.get (j) == null)) {
            String [] getData = map.get (j).toString ().split ("\\,");
            movieNumber = getData [0];
            movieTitle = getData [1];
            movieRating = getData [2];
            movieOther1 = getData [3];
            movieOther2 = getData [4];
            System.out.println ("|" + movieNumber + "|" + movieTitle + "|" + movieRating + "|" + movieOther1 + "|" + movieOther2);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22027843_22028198_18_32
22027843_22028891_3_42
Title: Sorting using comparable 
----------------------------------------

public String [] sort (String [] dirs) {
    ArrayList < Sort > sorts = new ArrayList < Sort > ();
    for (String dir : dirs) {
        String [] parts = dir.split ("/");
        sorts.add (new Sort (parts, dir));
    }
    Collections.sort (sorts);
    String [] result = new String [sorts.size ()];
    int count = 0;
    for (Sort sort : sorts) {
        result [count] = sort.toString ();
        count ++;
    }
    return result;
}
----------------------------------------

public static String [] sort (String [] dirs) {
    ArrayList < Path > mySort = new ArrayList < Path > ();
    Path pathDir;
    for (String dir : dirs) {
        pathDir = Paths.get (dir);
        if (Files.isDirectory (pathDir)) {
            mySort.add (pathDir);
        }
    }
    Collections.sort (mySort, new Comparator < Path > () {
        @Override
        public int compare (Path o1, Path o2) {
            if (o1.getNameCount () < o2.getNameCount ()) {
                return - 1;
            } else if (o1.getNameCount () > o2.getNameCount ()) {
                return 1;
            } else {
                return o1.compareTo (o2);
            }

        }}

    );
    String [] result = new String [mySort.size ()];
    for (int i = 0;
    i < result.length; i ++) {
        result [i] = mySort.get (i).toString ();
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2203030_2203045_1_14
2203030_2203071_1_17
Title: Throwing a Linked List of Exceptions in Java 
----------------------------------------

public void myFunction () throws CustomException {
    List < MyError > errors = new ArrayList < MyError > ();
    while (stuff) {
        try {
            DoSomething ()
        } catch (Exception ex) {
            errors.add (new MyError (some, stuff, of, mine, ex));
        }
    }
    if (errors.size () > 0) {
        throw new CustomException (errors);
    }
}
----------------------------------------

public void myFunction () throws MyException {
    MyException myException = null;
    while (stuff) {
        try {
            DoSomething ()
        } catch (Exception ex) {
            if (myException == null) {
                myException = new MyException ();
            }
            myException.addException (some, stuff, of, mine, ex);
        }
    }
    if (myException != null) {
        throw myException;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22035176_22035414_15_46
22035176_22035516_1_20
Title: How can I make this into a loop? 
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    Set < String > words = new HashSet < String > ();
    File dir = new File ("filestxt");
    for (File f : dir.listFiles ()) {
        Scanner in = new Scanner (f);
        while (in.hasNextLine ()) {
            String line = in.nextLine ();
            words.add (line);
        }
    }
    List < String > shuffle1 = shuffle (words);
    List < String > shuffle2 = shuffle (words);
    List < String > shuffle3 = shuffle (words);
    List < String > shuffle4 = shuffle (words);
    List < String > shuffle5 = shuffle (words);
    Collections.shuffle (shuffle1);
    Collections.shuffle (shuffle2);
    Collections.shuffle (shuffle3);
    Collections.shuffle (shuffle4);
    Collections.shuffle (shuffle5);
    System.out.println (shuffle1);
    System.out.println (shuffle2);
    System.out.println (shuffle3);
    System.out.println (shuffle4);
    System.out.println (shuffle5);
}
----------------------------------------

public static void main (String [] args) throws FileNotFoundException {
    HashSet < String > words = new HashSet < String > ();
    File dir = new File ("filestxt");
    for (File f : dir.listFiles ()) {
        Scanner in = new Scanner (f);
        while (in.hasNextLine ()) {
            words.add (in.nextLine ());
        }
    }
    for (int i = 0;
    i < 5; i ++) {
        List < String > shuffle = new ArrayList < String > ();
        for (String s : words) {
            shuffle.add (s);
        }
        Collections.shuffle (shuffle);
        System.out.println (shuffle);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22039952_22040040_9_28
22039952_22040056_11_29
Title: How to get a string variable from another class 
----------------------------------------

public String read () throws IOException {
    FileReader fr = new FileReader ("read_listflow.txt");
    BufferedReader br = new BufferedReader (fr);
    while ((line = br.readLine ()) != null) {
        lnum = lnum + 1;
    }
    FileReader fr1 = new FileReader ("read_listflow.txt");
    BufferedReader br1 = new BufferedReader (fr1);
    ar = new String [lnum];
    while ((line = br1.readLine ()) != null) {
        ar [a] = line;
        a = a + 1;
    }
    S1 = ar [1];
    return S1;
}
----------------------------------------

public read (String args []) throws IOException {
    FileReader fr = new FileReader ("read_listflow.txt");
    BufferedReader br = new BufferedReader (fr);
    while ((line = br.readLine ()) != null) {
        lnum = lnum + 1;
    }
    FileReader fr1 = new FileReader ("read_listflow.txt");
    BufferedReader br1 = new BufferedReader (fr1);
    ar = new String [lnum];
    while ((line = br1.readLine ()) != null) {
        ar [a] = line;
        a = a + 1;
    }
    S1 = ar [1];
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22043452_22045794_17_39
22043452_22046519_20_38
Title: JScrollPane inside a JScrollPane 
----------------------------------------

public void init () {
    JPanel p = new JPanel (new GridBagLayout ());
    GridBagConstraints c = new GridBagConstraints ();
    String text = "This text is inside a JScrollPane of its own. " + "But no scroller is shown when the frames size is decreased. " + "Wrong viewPort?....................................";
    JTextArea innerText = new JTextArea (1, 20);
    innerText.setText (text);
    innerText.setEditable (false);
    innerText.setOpaque (false);
    JScrollPane innerScroller = new JScrollPane (innerText, JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
    p.add (innerScroller);
    JScrollPane frameScrollpane = new JScrollPane (p, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    getContentPane ().add (frameScrollpane, BorderLayout.CENTER);
}
----------------------------------------

public void init () {
    ScrollablePanel p = new ScrollablePanel (new BorderLayout ());
    p.setScrollableWidth (ScrollablePanel.ScrollableSizeHint.FIT);
    GridBagConstraints c = new GridBagConstraints ();
    JLabel innerText = new JLabel ("This text is inside a JScrollPane of its own. But no scroller is shown when the frames size is decreased. Wrong viewPort?....................................");
    JScrollPane innerScroller = new JScrollPane (innerText, JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    Dimension d = innerScroller.getPreferredSize ();
    innerScroller.setPreferredSize (new Dimension (d.width, d.height * 2));
    p.add (innerScroller, BorderLayout.NORTH);
    JScrollPane frameScrollpane = new JScrollPane (p, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    getContentPane ().add (frameScrollpane, BorderLayout.CENTER);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22050545_22050945_5_40
22050545_22050985_4_47
Title: Java Reading mixed data into different arrays 
----------------------------------------

public static void main (String [] args) throws IOException {
    Scanner s = null;
    String str = "FH45 36.266\nMF18 46.967";
    ArrayList < String > array1 = new ArrayList < String > ();
    ArrayList < Double > array2 = new ArrayList < Double > ();
    try {
        s = new Scanner (new BufferedReader (new StringReader (str)));
        while (s.hasNext ()) {
            String token = s.next ();
            try {
                double d = Double.parseDouble (token);
                array2.add (d);
            } catch (NumberFormatException nfe) {
                array1.add (token);
            }
        }
    } finally {
        if (s != null) {
            s.close ();
        }
        System.out.println ("Printing Letter Array ");
        for (String out : array1) {
            System.out.print (out + " ");
        }
        System.out.println ("\nPrinting Numeric Array");
        for (Double out : array2) {
            System.out.print (out + " ");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    ArrayList < Integer > Int = new ArrayList < Integer > ();
    ArrayList < Double > duble = new ArrayList < Double > ();
    ArrayList < Character > FirstChar = new ArrayList < Character > ();
    ArrayList < Character > SecondChar = new ArrayList < Character > ();
    try {
        Scanner scan = new Scanner (new BufferedReader (new FileReader (filepath)));
        while (scan.hasNext ()) {
            String str = scan.nextLine ();
            FirstChar.add (str.charAt (0));
            SecondChar.add (str.charAt (1));
            Int.add (Integer.parseInt (str.substring (2, 4)));
            duble.add (Double.parseDouble (str.substring (5)));
            scan.next ();
        }
        for (Integer I : Int) System.out.print (I.intValue () + "\t");

        System.out.println ();
        for (Double d : duble) System.out.print (d.doubleValue () + "\t");

        System.out.println ();
        for (Character Char : FirstChar) System.out.print (Char.charValue () + "\t");

        System.out.println ();
        for (Character Char : SecondChar) System.out.print (Char.charValue () + "\t");

        System.out.println ();
    } catch (Exception e) {
        e.printStackTrace ();
    } finally {
        scan.close ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22059802_22059851_1_10
22059802_22060019_1_38
Title: how to print all of arrays with for loop in java 
----------------------------------------

public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (int i = 0;
    i < planets.length; i ++) {
        sb.append (planets [i].getName ());
        sb.append ("\n");
    }
    return sb.toString ();
}
----------------------------------------

public String toString () {
    StringBuilder mainresult = new StringBuilder ();
    for (int i = 0;
    i < planets.length; i ++) {
        StringBuilder result = new StringBuilder ();
        String newLine = System.getProperty ("line.separator");
        result.append (planets [i].getClass ().getName ());
        result.append (" Object {");
        result.append (newLine);
        Field [] fields = this.getClass ().getDeclaredFields ();
        for (Field field : fields) {
            result.append ("  ");
            try {
                result.append (field.getName ());
                result.append (": ");
                result.append (field.get (this));
            } catch (IllegalAccessException ex) {
                System.out.println (ex);
            }
            result.append (newLine);
        }
        result.append ("}");
        if (i == 0) {
            mainresult.append (result.toString ());
            continue;
        }
        mainresult.append (newLine);
        mainresult.append (result.toString ());
    }
    return mainresult.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22062803_22062927_1_11
22062803_22063015_1_10
Title: Correct way to return from inside of for loop in Java? 
----------------------------------------

public Banesa gjejBanese (int nrBaneses) {
    Banesa ret;
    for (int i = 0;
    i < listaBanesave.length; i ++) {
        ret = listaBansesave [i];
        if (ret.getNrBanesa () == nrBaneses) return ret;

    }
    return null;
}
----------------------------------------

public Banesa gjejBanese (int nrBaneses) {
    Banesa found = null;
    for (int i = 0;
    i < listaBanesave.length; i ++) {
        if (listaBanesave [i].getNrBanesa () == nrBaneses) {
            found = listaBanesave [i];
            break;
        }
    }
    return found;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22064558_22064824_1_11
22064558_22064837_1_11
Title: Finding the largest number in a column using 2D arrays 
----------------------------------------

public static void max1 (int [] [] score) {
    for (int i = 0;
    i < score.length; i ++) {
        int max = Integer.MIN_VALUE;
        for (int j = 0;
        j < score [i].length; j ++) {
            if (score [i] [j] > max) max = score [i] [j];

        }
        System.out.println (max + "      ");
    }
}
----------------------------------------

public static void max1 (int [] [] score) {
    for (int i = 0;
    i < score [0].length; i ++) {
        int max = score [0] [i];
        for (int j = 0;
        j < score.length; j ++) {
            if (score [j] [i] > max) {
                max = score [j] [i];
            }
        }
        System.out.println (max + "      ");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22064558_22064824_1_11
22064558_23113974_1_10
Title: Finding the largest number in a column using 2D arrays 
----------------------------------------

public static void max1 (int [] [] score) {
    for (int i = 0;
    i < score.length; i ++) {
        int max = Integer.MIN_VALUE;
        for (int j = 0;
        j < score [i].length; j ++) {
            if (score [i] [j] > max) max = score [i] [j];

        }
        System.out.println (max + "      ");
    }
}
----------------------------------------

static int max1 (int [] [] score) {
    int max = score [0] [0];
    for (int i = 0;
    i < score.length; i ++) {
        for (int j = 0;
        j < score [i].length; j ++) {
            if (score [i] [j] > max) {
                max = score [i] [j];
            }
        }
    }
    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22064558_22064837_1_11
22064558_23113974_1_10
Title: Finding the largest number in a column using 2D arrays 
----------------------------------------

public static void max1 (int [] [] score) {
    for (int i = 0;
    i < score [0].length; i ++) {
        int max = score [0] [i];
        for (int j = 0;
        j < score.length; j ++) {
            if (score [j] [i] > max) {
                max = score [j] [i];
            }
        }
        System.out.println (max + "      ");
    }
}
----------------------------------------

static int max1 (int [] [] score) {
    int max = score [0] [0];
    for (int i = 0;
    i < score.length; i ++) {
        for (int j = 0;
        j < score [i].length; j ++) {
            if (score [i] [j] > max) {
                max = score [i] [j];
            }
        }
    }
    return max;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22066387_22066938_18_64
22066387_22067320_85_97
Title: how to search an element in a JTable java? 
----------------------------------------

public static void main (String args []) {
    JFrame frame = new JFrame ("Regexing JTable");
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    Object rows [] [] = {{"A", "About", 44.36}, {"B", "Boy", 44.84}, {"C", "Cat", 463.63}, {"D", "Day", 27.14}, {"E", "Eat", 44.57}, {"F", "Fail", 23.15}, {"G", "Good", 4.40}, {"H", "Hot", 24.96}, {"I", "Ivey", 5.45}, {"J", "Jack", 49.54}, {"K", "Kids", 280.00}};
    String columns [] = {"Symbol", "Name", "Price"};
    TableModel model = new DefaultTableModel (rows, columns) {
        public Class getColumnClass (int column) {
            Class returnValue;
            if ((column >= 0) && (column < getColumnCount ())) {
                returnValue = getValueAt (0, column).getClass ();
            } else {
                returnValue = Object.class;
            }
            return returnValue;
        }}

    ;
    final JTable table = new JTable (model);
    final TableRowSorter < TableModel > sorter = new TableRowSorter < TableModel > (model);
    table.setRowSorter (sorter);
    JScrollPane pane = new JScrollPane (table);
    frame.add (pane, BorderLayout.CENTER);
    JPanel panel = new JPanel (new BorderLayout ());
    JLabel label = new JLabel ("Filter");
    panel.add (label, BorderLayout.WEST);
    final JTextField filterText = new JTextField ("A");
    panel.add (filterText, BorderLayout.CENTER);
    frame.add (panel, BorderLayout.NORTH);
    JButton button = new JButton ("Filter");
    button.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            String text = filterText.getText ();
            if (text.length () == 0) {
                sorter.setRowFilter (null);
            } else {
                sorter.setRowFilter (RowFilter.regexFilter (text));
            }
        }}

    );
    frame.add (button, BorderLayout.SOUTH);
    frame.setSize (300, 250);
    frame.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ("Row Filter");
            frame.add (new TestTableSortFilter ());
            frame.pack ();
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22074173_22074220_1_14
22074173_22074224_1_16
Title: This method must return a result of type int? 
----------------------------------------

public static int search (int [] nums) {
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("What value do you want?");
    int value = keyboard.nextInt ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == value) return nums [value];
        else return - 1;

    }
    return 0;
}
----------------------------------------

public static int search (int [] nums) {
    int ret = - 1;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("What value do you want?");
    int value = keyboard.nextInt ();
    for (int i = 0;
    i < nums.length; i ++) {
        if (nums [i] == value) {
            ret = nums [value];
            break;
        }
    }
    return ret;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_31157954_3_47
22075224_35376504_4_20
Title: find all palindromes in string 
----------------------------------------

public static void main (String [] args) {
    String s = "bob";
    ArrayList < Character > chr = new ArrayList < Character > ();
    ArrayList < String > subs = new ArrayList < String > ();
    for (int i = 0;
    i < s.length (); i ++) {
        chr.add (s.charAt (i));
    }
    System.out.println (chr.toString ());
    StringBuilder subString = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        for (int j = i + 1;
        j < s.length (); j ++) {
            for (int k = i;
            k <= j; k ++) {
                subString.append (chr.get (k));
            }
            System.out.println (subString.toString ());
            subs.add (subString.toString ());
            subString.setLength (0);
        }
    }
    System.out.println (subs);
    for (String st : subs) {
        String st2 = new StringBuffer (st).reverse ().toString ();
        if (st.equals (st2)) {
            System.out.println (st + " is a palindrome");
        } else {
            System.out.println (st + "  not a palindrome");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    String s1 = sc.next ();
    String array [] = s1.split ("");
    System.out.println ("Palindromes are :");
    for (int i = 0;
    i <= array.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            String B = s1.substring (j, i);
            verify (B);
        }
    }
    System.out.println ("\n" + count);
    sc.close ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_31157954_3_47
22075224_50600388_2_14
Title: find all palindromes in string 
----------------------------------------

public static void main (String [] args) {
    String s = "bob";
    ArrayList < Character > chr = new ArrayList < Character > ();
    ArrayList < String > subs = new ArrayList < String > ();
    for (int i = 0;
    i < s.length (); i ++) {
        chr.add (s.charAt (i));
    }
    System.out.println (chr.toString ());
    StringBuilder subString = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        for (int j = i + 1;
        j < s.length (); j ++) {
            for (int k = i;
            k <= j; k ++) {
                subString.append (chr.get (k));
            }
            System.out.println (subString.toString ());
            subs.add (subString.toString ());
            subString.setLength (0);
        }
    }
    System.out.println (subs);
    for (String st : subs) {
        String st2 = new StringBuffer (st).reverse ().toString ();
        if (st.equals (st2)) {
            System.out.println (st + " is a palindrome");
        } else {
            System.out.println (st + "  not a palindrome");
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    String a = "ProtijayiMeyeMADAMGiniiniGSoudiptaGina";
    List < String > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        String t = helper (a, i, i);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
        t = helper (a, i, i + 1);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
    }
    list.forEach ((k) -> System.out.println (k));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_31157954_3_47
22075224_51463441_4_32
Title: find all palindromes in string 
----------------------------------------

public static void main (String [] args) {
    String s = "bob";
    ArrayList < Character > chr = new ArrayList < Character > ();
    ArrayList < String > subs = new ArrayList < String > ();
    for (int i = 0;
    i < s.length (); i ++) {
        chr.add (s.charAt (i));
    }
    System.out.println (chr.toString ());
    StringBuilder subString = new StringBuilder ();
    for (int i = 0;
    i < s.length (); i ++) {
        for (int j = i + 1;
        j < s.length (); j ++) {
            for (int k = i;
            k <= j; k ++) {
                subString.append (chr.get (k));
            }
            System.out.println (subString.toString ());
            subs.add (subString.toString ());
            subString.setLength (0);
        }
    }
    System.out.println (subs);
    for (String st : subs) {
        String st2 = new StringBuffer (st).reverse ().toString ();
        if (st.equals (st2)) {
            System.out.println (st + " is a palindrome");
        } else {
            System.out.println (st + "  not a palindrome");
        }
    }
}
----------------------------------------

public static void main (String args []) {
    String input = "abbaalla";
    if (input.length () <= 1) {
        System.out.println ("Not Palindrome Found.");
    } else {
        int length = input.length ();
        Set < String > set = new HashSet < String > ();
        for (int i = 0;
        i < length; i ++) {
            for (int j = i + 1;
            j < length + 1; j ++) {
                String s = input.substring (i, j);
                StringBuffer sb = new StringBuffer (s);
                sb.reverse ();
                if (s.equals (sb.toString ()) && s.length () > 1) {
                    set.add (s);
                }
            }
        }
        System.out.println (set);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_35376504_4_20
22075224_50600388_2_14
Title: find all palindromes in string 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    String s1 = sc.next ();
    String array [] = s1.split ("");
    System.out.println ("Palindromes are :");
    for (int i = 0;
    i <= array.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            String B = s1.substring (j, i);
            verify (B);
        }
    }
    System.out.println ("\n" + count);
    sc.close ();
}
----------------------------------------

public static void main (String [] args) {
    String a = "ProtijayiMeyeMADAMGiniiniGSoudiptaGina";
    List < String > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        String t = helper (a, i, i);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
        t = helper (a, i, i + 1);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
    }
    list.forEach ((k) -> System.out.println (k));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_35376504_4_20
22075224_51463441_4_32
Title: find all palindromes in string 
----------------------------------------

public static void main (String args []) {
    Scanner sc = new Scanner (System.in);
    String s1 = sc.next ();
    String array [] = s1.split ("");
    System.out.println ("Palindromes are :");
    for (int i = 0;
    i <= array.length; i ++) {
        for (int j = 0;
        j < i; j ++) {
            String B = s1.substring (j, i);
            verify (B);
        }
    }
    System.out.println ("\n" + count);
    sc.close ();
}
----------------------------------------

public static void main (String args []) {
    String input = "abbaalla";
    if (input.length () <= 1) {
        System.out.println ("Not Palindrome Found.");
    } else {
        int length = input.length ();
        Set < String > set = new HashSet < String > ();
        for (int i = 0;
        i < length; i ++) {
            for (int j = i + 1;
            j < length + 1; j ++) {
                String s = input.substring (i, j);
                StringBuffer sb = new StringBuffer (s);
                sb.reverse ();
                if (s.equals (sb.toString ()) && s.length () > 1) {
                    set.add (s);
                }
            }
        }
        System.out.println (set);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22075224_50600388_2_14
22075224_51463441_4_32
Title: find all palindromes in string 
----------------------------------------

public static void main (String [] args) {
    String a = "ProtijayiMeyeMADAMGiniiniGSoudiptaGina";
    List < String > list = new ArrayList < > ();
    for (int i = 0;
    i < a.length (); i ++) {
        String t = helper (a, i, i);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
        t = helper (a, i, i + 1);
        if (t.length () > 1) {
            if (! list.contains (t)) {
                list.add (t);
            }
        }
    }
    list.forEach ((k) -> System.out.println (k));
}
----------------------------------------

public static void main (String args []) {
    String input = "abbaalla";
    if (input.length () <= 1) {
        System.out.println ("Not Palindrome Found.");
    } else {
        int length = input.length ();
        Set < String > set = new HashSet < String > ();
        for (int i = 0;
        i < length; i ++) {
            for (int j = i + 1;
            j < length + 1; j ++) {
                String s = input.substring (i, j);
                StringBuffer sb = new StringBuffer (s);
                sb.reverse ();
                if (s.equals (sb.toString ()) && s.length () > 1) {
                    set.add (s);
                }
            }
        }
        System.out.println (set);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2207583_10595047_1_34
2207583_11233147_22_36
Title: Quicksort algorithm program in Java 
----------------------------------------

static void quickSort (int [] numbers, int low, int high) {
    int i = low;
    int j = high;
    int temp;
    int middle = numbers [(low + high) / 2];
    while (i < j) {
        while (numbers [i] < middle) {
            i ++;
        }
        while (numbers [j] > middle) {
            j --;
        }
        if (i <= j) {
            temp = numbers [i];
            numbers [i] = numbers [j];
            numbers [j] = temp;
            i ++;
            j --;
        }
    }
    if (low < j) {
        quickSort (numbers, low, j);
    }
    if (i < high) {
        quickSort (numbers, i, high);
    }
}
----------------------------------------

public static void quickSort (int [] a, int p, int r) {
    if (p < r) {
        int q = partition (a, p, r);
        if (p == q) {
            quickSort (a, p + 1, r);
        } else if (q == r) {
            quickSort (a, p, r - 1);
        } else {
            quickSort (a, p, q);
            quickSort (a, q + 1, r);
        }

    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22082770_22083190_1_23
22082770_22084491_7_69
Title: Next Prime number Java only working with certain numbers 
----------------------------------------

public static int nextPrime (int n) {
    boolean isPrime = false;
    int start = 2;
    while (! isPrime) {
        n += 1;
        int m = (int) Math.ceil (Math.sqrt (n));
        isPrime = true;
        for (int i = start;
        i <= m; i ++) {
            if (n % i == 0) {
                isPrime = false;
                break;
            }
        }
    }
    return n;
}
----------------------------------------

public static int nextPrime (int number) {
    if (primes.size () == 0) {
        primes.add (2);
        primes.add (3);
        primes.add (5);
        primes.add (7);
    }
    int idx = primes.size () - 1;
    int last = primes.get (idx);
    if (last > number) {
        boolean high = false;
        boolean low = false;
        int prevIdx = 0;
        int spread = 0;
        while ((high = primes.get (idx - 1) > number) || (low = primes.get (idx) <= number)) {
            spread = Math.abs (prevIdx - idx);
            spread = spread < 2 ? 2 : spread;
            prevIdx = idx;
            if (high) {
                idx -= spread / 2;
            } else if (low) {
                idx += spread / 2;
            }

        }
        return primes.get (idx);
    }
    number ++;
    int newPrime = last;
    while ((last = primes.get (primes.size () - 1)) < number) {
        newPrime += 2;
        boolean isPrime = true;
        idx = 0;
        int comparisonPrime;
        int sqrt = (int) Math.sqrt (newPrime);
        while ((comparisonPrime = primes.get (idx ++)) <= sqrt) {
            if (newPrime % comparisonPrime == 0) {
                isPrime = false;
            }
        }
        if (isPrime) {
            primes.add (newPrime);
        }
    }
    return last;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22082770_22083190_1_23
22082770_28065801_4_27
Title: Next Prime number Java only working with certain numbers 
----------------------------------------

public static int nextPrime (int n) {
    boolean isPrime = false;
    int start = 2;
    while (! isPrime) {
        n += 1;
        int m = (int) Math.ceil (Math.sqrt (n));
        isPrime = true;
        for (int i = start;
        i <= m; i ++) {
            if (n % i == 0) {
                isPrime = false;
                break;
            }
        }
    }
    return n;
}
----------------------------------------

int nextPrime (int x) {
    int num = x, j;
    for (j = num + 1;; j ++) {
        int count = 0;
        for (int i = 1;
        i <= j; i ++) {
            if (j % i == 0) {
                count ++;
            }
        }
        if (count == 2) {
            System.out.println (" next prime is ");
            break;
        }
    }
    return j;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22082770_22084491_7_69
22082770_28065801_4_27
Title: Next Prime number Java only working with certain numbers 
----------------------------------------

public static int nextPrime (int number) {
    if (primes.size () == 0) {
        primes.add (2);
        primes.add (3);
        primes.add (5);
        primes.add (7);
    }
    int idx = primes.size () - 1;
    int last = primes.get (idx);
    if (last > number) {
        boolean high = false;
        boolean low = false;
        int prevIdx = 0;
        int spread = 0;
        while ((high = primes.get (idx - 1) > number) || (low = primes.get (idx) <= number)) {
            spread = Math.abs (prevIdx - idx);
            spread = spread < 2 ? 2 : spread;
            prevIdx = idx;
            if (high) {
                idx -= spread / 2;
            } else if (low) {
                idx += spread / 2;
            }

        }
        return primes.get (idx);
    }
    number ++;
    int newPrime = last;
    while ((last = primes.get (primes.size () - 1)) < number) {
        newPrime += 2;
        boolean isPrime = true;
        idx = 0;
        int comparisonPrime;
        int sqrt = (int) Math.sqrt (newPrime);
        while ((comparisonPrime = primes.get (idx ++)) <= sqrt) {
            if (newPrime % comparisonPrime == 0) {
                isPrime = false;
            }
        }
        if (isPrime) {
            primes.add (newPrime);
        }
    }
    return last;
}
----------------------------------------

int nextPrime (int x) {
    int num = x, j;
    for (j = num + 1;; j ++) {
        int count = 0;
        for (int i = 1;
        i <= j; i ++) {
            if (j % i == 0) {
                count ++;
            }
        }
        if (count == 2) {
            System.out.println (" next prime is ");
            break;
        }
    }
    return j;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22082770_26864285_5_23
22082770_31965492_6_23
Title: Next Prime number Java only working with certain numbers 
----------------------------------------

public static void main (String Ar []) {
    int a = 0, i, j;
    Scanner in = new Scanner (System.in);
    a = in.nextInt ();
    for (j = a + 1;; j ++) {
        for (i = 2; i < j; i ++) {
            if (j % i == 0) break;

        }
        if (i == j) {
            System.out.println (j);
            break;
        }
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scanner = new Scanner (System.in);
    System.out.println ("Enter a positive integer number : ");
    int n = scanner.nextInt ();
    for (int x = n + 1;
    ; x ++) {
        boolean isPrime = true;
        for (int i = 2;
        i < x / 2; i ++) {
            if (x % i == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            System.out.println ("Next prime is : " + x);
            break;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22090876_22103334_18_26
22090876_22103334_34_44
Title: JavaFX ComboBox setButtonCell 
----------------------------------------

protected void updateItem (Person t, boolean bln) {
    super.updateItem (t, bln);
    if (t != null) {
        setText (t.getStepProperty ().getValue ());
        System.out.println ("SET PROPERTY " + t.getStepProperty ().getValue ());
    } else {
        setText (null);
    }
}
----------------------------------------

protected void updateItem (Person t, boolean bln) {
    super.updateItem (t, bln);
    if (t != null) {
        setText (t.getNextStepProperty ().getValue ().toString ());
        System.out.println ("SET PROPERTY BUTTONCELL " + t.getNextStepProperty ().getValue ());
    } else {
        setText (null);
        System.out.println ("SET PROPERTY BUTTONCELL NULL");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22093817_22093939_1_10
22093817_22093957_1_11
Title: enforcing specific date format in java 
----------------------------------------

private boolean isValidDate (String flight_DATE) {
    SimpleDateFormat myDateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    try {
        myDateFormat.parse (flight_DATE);
        return true;
    } catch (ParseException ex) {
        return false;
    }
}
----------------------------------------

private boolean isValidDate (String flightDate) {
    SimpleDateFormat myDateFormat = new SimpleDateFormat ("dd/MM/yyyy");
    myDateFormat.setLenient (false);
    try {
        myDateFormat.parse (flightDate);
    } catch (ParseException e) {
        return false;
    }
    System.out.println ("accepted OK");
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22113348_22113370_1_32
22113348_22113720_1_11
Title: if statament not working 
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    if (txt_pangkat.getText ().trim ().equals ("") || icon_image1 == null) {
        JOptionPane.showMessageDialog (null, "Please Insert a value");
        dispose ();
    } else {
        try {
            String sql = "insert into KKKB1 (Pangkat,Sains)values (?,?)";
            pst = conn.prepareStatement (sql);
            pst.setString (1, txt_pangkat.getText ());
            pst.setBytes (2, icon_image1);
            pst.execute ();
            JOptionPane.showMessageDialog (null, "Data Saved");
            txt_pangkat.setText ("");
            back ();
        } catch (Exception e) {
            JOptionPane.showMessageDialog (null, e);
        } finally {
            try {
                pst.close ();
            } catch (Exception e) {
            }
        }
    }
}
----------------------------------------

private void jButton1ActionPerformed (java.awt.event.ActionEvent evt) {
    try {
        assert ! txt_pangkat.getText ().equals ("");
        assert icon_image1 != null;
    } catch (Exception e) {
        JOptionPane.showMessageDialog (null, "Please Insert a value");
        dispose ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22118184_22118360_1_16
22118184_22118469_53_65
Title: calling method with IOException 
----------------------------------------

public static void main (String [] Args) {
    double chargeNumber = 0;
    chargeAccountModi object1 = new chargeAccountModi ();
    try {
        System.out.println (" The search result is : " + object1.sequentialSearch (chargeNumber));
    } catch (IOException ioe) {
        System.out.println ("Exception!!!");
        ioe.printStackTrace ();
    }
}
----------------------------------------

public static void main (String [] args) {
    double chargeNumber = 0;
    ChargeAccountModi object1 = new ChargeAccountModi ();
    try {
        System.out.println ("The search result is : " + object1.sequentialSearch (chargeNumber));
    } catch (Exception e) {
        e.printStackTrace ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22123706_22123766_7_19
22123706_45075381_3_17
Title: What is the logic to find a missing number in a sequence? 
----------------------------------------

public static final void main (String [] ignored) {
    List < Integer > ascUnqIntList = Arrays.asList (4, 5, 8, 9);
    int num = ascUnqIntList.get (0);
    for (int i : ascUnqIntList) {
        if (num != i) {
            System.out.println ("First missing number in sequence: " + num);
            break;
        }
        System.out.println (i);
        num ++;
    }
}
----------------------------------------

public static void main (String args []) {
    int [] arr = {5, 6, 7, 0, 9};
    int start = arr [0];
    int length = arr.length;
    int total = 0;
    int missing = 0;
    if (start == 1) {
        missing = ((length * (length + 1)) / 2) - arrTotal (arr);
    } else {
        total = ((arr [length - 1] * (arr [length - 1] + 1)) / 2) - (((start - 1) * start) / 2);
        missing = total - arrTotal (arr);
    }
    System.out.println ("Missing Number : " + missing);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22134211_22134231_1_30
22134211_22134460_1_14
Title: Prime Number Test in java 
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    if (number == 2) {
        return true;
    }
    if (number % 2 == 0) {
        return false;
    }
    int square = (int) Math.sqrt (number);
    for (int i = 3;
    i <= square; i += 2) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number < 2) {
        return false;
    }
    for (int i = 2;
    i < number / 2; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22134469_22134535_1_30
22134469_22134546_1_12
Title: Prime Number test in java 
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    if (number == 2) {
        return true;
    }
    if (number % 2 == 0) {
        return false;
    }
    int square = (int) Math.sqrt (number);
    for (int i = 3;
    i <= square; i += 2) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    for (int i = 2;
    i <= number / 2; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22134469_22134535_1_30
22134469_22134560_1_11
Title: Prime Number test in java 
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    if (number == 2) {
        return true;
    }
    if (number % 2 == 0) {
        return false;
    }
    int square = (int) Math.sqrt (number);
    for (int i = 3;
    i <= square; i += 2) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    for (int i = 2;
    i * i <= number; i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22134469_22134535_1_30
22134469_22134967_1_13
Title: Prime Number test in java 
----------------------------------------

public static boolean isPrime (int number) {
    if (number <= 1) {
        return false;
    }
    if (number == 2) {
        return true;
    }
    if (number % 2 == 0) {
        return false;
    }
    int square = (int) Math.sqrt (number);
    for (int i = 3;
    i <= square; i += 2) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------

public static boolean isPrime (int number) {
    if (number < 2) {
        return false;
    }
    for (int i = 2;
    i <= (int) Math.sqrt (number); i ++) {
        if (number % i == 0) {
            return false;
        }
    }
    return true;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22135477_22135556_132_187
22135477_22135556_39_65
Title: Resizing jPanels with animation 
----------------------------------------

void execute (final double durationS, final LayoutAnimationCallback layoutAnimatorCallback) {
    final Map < Component, Rectangle > oldBounds = getAllBounds (container.getComponents ());
    container.setLayout (newLayout);
    newLayout.layoutContainer (container);
    final Map < Component, Rectangle > newBounds = getAllBounds (container.getComponents ());
    container.setLayout (null);
    setAllBounds (container.getComponents (), oldBounds);
    final Map < Component, Rectangle > currentBounds = getAllBounds (container.getComponents ());
    timer.addActionListener (new ActionListener () {
        double alpha = 0;
        double alphaStep = 1.0 / (durationS * (1000.0 / delayMS));
        @Override
        public void actionPerformed (ActionEvent e) {
            if (alpha == 1.0) {
                timer.stop ();
                container.setLayout (newLayout);
                layoutAnimatorCallback.animationFinished ();
            }
            alpha += alphaStep;
            alpha = Math.min (1.0, alpha);
            interpolate (oldBounds, newBounds, currentBounds, alpha);
            setAllBounds (container.getComponents (), currentBounds);
        }}

    );
    timer.setCoalesce (true);
    timer.start ();
}
----------------------------------------

public static synchronized void execute (Container container, LayoutManager newLayout, double durationS) {
    LayoutAnimation runningLayoutAnimtion = running.get (container);
    if (runningLayoutAnimtion != null) {
        runningLayoutAnimtion.cancel ();
        running.remove (container);
    }
    final LayoutAnimation layoutAnimtion = new LayoutAnimation (container, newLayout);
    running.put (container, layoutAnimtion);
    layoutAnimtion.execute (durationS, new LayoutAnimationCallback () {
        @Override
        public void animationFinished () {
            running.remove (layoutAnimtion);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22139615_22140462_13_55
22139615_33873003_9_24
Title: Dragging buttons in Javafx 
----------------------------------------

public void start (Stage stage) throws Exception {
    BorderPane borderPane = new BorderPane ();
    borderPane.setPrefSize (800, 600);
    final Button button = new Button ("Drag ME !");
    final Delta dragDelta = new Delta ();
    button.setOnMousePressed (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent mouseEvent) {
            dragDelta.x = button.getLayoutX () - mouseEvent.getSceneX ();
            dragDelta.y = button.getLayoutY () - mouseEvent.getSceneY ();
            button.setCursor (Cursor.MOVE);
        }}

    );
    button.setOnMouseReleased (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent mouseEvent) {
            button.setCursor (Cursor.HAND);
        }}

    );
    button.setOnMouseDragged (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent mouseEvent) {
            button.setLayoutX (mouseEvent.getSceneX () + dragDelta.x);
            button.setLayoutY (mouseEvent.getSceneY () + dragDelta.y);
        }}

    );
    button.setOnMouseEntered (new EventHandler < MouseEvent > () {
        @Override
        public void handle (MouseEvent mouseEvent) {
            button.setCursor (Cursor.HAND);
        }}

    );
    borderPane.setCenter (button);
    Scene scene = new Scene (borderPane);
    stage.setScene (scene);
    stage.show ();
}
----------------------------------------

public void start (Stage primaryStage) {
    Button btOK = new Button ("OK");
    Pane pane = new Pane ();
    btOK.setOnMouseDragged (e -> {
        btOK.setLayoutX (e.getSceneX ());
        btOK.setLayoutY (e.getSceneY ());
    });
    pane.getChildren ().add (btOK);
    Scene scene = new Scene (pane, 200, 250);
    primaryStage.setTitle ("A Draggable button");
    primaryStage.setScene (scene);
    primaryStage.show ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22149945_22150167_15_27
22149945_22150167_1_14
Title: How to fix erasing fields when navigating between forms? 
----------------------------------------

@RequestMapping (value = "/show", method = RequestMethod.POST)
public String show (@ModelAttribute ("user")
User user, BindingResult result, HttpSession session) {
    User userInSession = (User) session.getAttribute ("user");
    userInSession.setPermissions (user.getPermissions ());
    if (result.hasErrors ()) {
        System.out.println ("Error");
        return "show";
    } else {
        System.out.println (userInSession);
        return "show";
    }
}
----------------------------------------

@RequestMapping (value = "/user", method = RequestMethod.POST)
public String processedForm (@ModelAttribute ("user")
User user, BindingResult result, ModelMap model, HttpSession session) {
    if (result.hasErrors ()) {
        return "form/userForm";
    }
    session.setAttribute ("user", user);
    ArrayList < String > p = new ArrayList < String > ();
    p.add ("add_user");
    p.add ("delete_user");
    model.addAttribute ("permissions", p);
    model.addAttribute ("user", user);
    return "form/permissionForm";
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22167734_22168538_13_40
22167734_22168652_1_30
Title: Getting Array from inside try - catch loop 
----------------------------------------

public String [] Vote () {
    sc = new Scanner (System.in);
    System.out.println ("Enter file name > ");
    String filename = sc.next ();
    try {
        br = new BufferedReader (new InputStreamReader (new FileInputStream (filename)));
    } catch (FileNotFoundException ex) {
    }
    do {
        voter ++;
        try {
            filename = br.readLine ();
        } catch (IOException ex) {
            Logger.getLogger (Vote.class.getName ()).log (Level.SEVERE, null, ex);
        }
        String votesPerPosition [] = filename.split (",");
        for (String vote : votesPerPosition) {
            Integer.parseInt (vote);
            for (j = 0; j < votesPerPosition.length; j ++);

            {
                System.out.println ("voter " + voter + "voted for candidate #" + vote);
                voterCount ++;
            }}
        return votesPerPosition;
    } while (filename != null);
}
----------------------------------------

public void Vote () {
    String filename = null, line = null;
    sc = new Scanner (System.in);
    System.out.println ("Enter file name > ");
    filename = sc.next ();
    try {
        br = new BufferedReader (new InputStreamReader (new FileInputStream (filename)));
    } catch (FileNotFoundException ex) {
    }
    if (br != null) {
        do {
            voter ++;
            try {
                line = br.readLine ();
                if (line != null && line.contains (",")) {
                    String votesPerPosition [] = line.split (",");
                    VotesPosition.put (voter, votesPerPosition.length);
                } else if (line != null) {
                    VotesPosition.put (voter, 1);
                }

            } catch (IOException ex) {
                line = null;
            }
        } while (line != null);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2217418_10544111_11_32
2217418_2220624_12_34
Title: Fine-grained Authentication with RESTlet 
----------------------------------------

private ChallengeAuthenticator createAuthenticator () {
    Context context = getContext ();
    ChallengeScheme challengeScheme = ChallengeScheme.HTTP_BASIC;
    String realm = "Example site";
    MapVerifier verifier = new MapVerifier ();
    verifier.getLocalSecrets ().put ("user", "password".toCharArray ());
    ChallengeAuthenticator authOnGet = new ChallengeAuthenticator (context, challengeScheme, realm) {
        @Override
        protected int beforeHandle (Request request, Response response) {
            if (request.getMethod () == Method.GET) return super.beforeHandle (request, response);

            response.setStatus (Status.SUCCESS_OK);
            return CONTINUE;
        }}

    ;
    return authOnGet;
}
----------------------------------------

private ChallengeAuthenticator createAuthenticator () {
    Context context = getContext ();
    boolean optional = true;
    ChallengeScheme challengeScheme = ChallengeScheme.HTTP_BASIC;
    String realm = "Example site";
    MapVerifier verifier = new MapVerifier ();
    verifier.getLocalSecrets ().put ("user", "password".toCharArray ());
    ChallengeAuthenticator auth = new ChallengeAuthenticator (context, optional, challengeScheme, realm, verifier) {
        @Override
        protected boolean authenticate (Request request, Response response) {
            if (request.getChallengeResponse () == null) {
                return false;
            } else {
                return super.authenticate (request, response);
            }
        }}

    ;
    return auth;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22177675_22177766_8_35
22177675_22178626_1_27
Title: Else Statement is a syntax error? 
----------------------------------------

public static void main (String [] args) {
    Scanner kb = new Scanner (System.in);
    int num1, num2, num3, num4, min = 0;
    System.out.println ("Please enter three numbers.");
    System.out.print ("First value: ");
    num1 = kb.nextInt ();
    System.out.print ("Second value: ");
    num2 = kb.nextInt ();
    System.out.print ("Third value: ");
    num3 = kb.nextInt ();
    System.out.print ("Fourth value: ");
    num4 = kb.nextInt ();
    if (num1 < num2) {
        if (num1 < num3) min = num1;
        else min = num3;

    } else if (num2 < num3) min = num2;
    else if (num4 < num3) min = num4;
    else min = num3;

    System.out.println ("Minimum value is: " + min);
}
----------------------------------------

public static void main (String [] args) {
    int num1 = 4;
    int num2 = 2;
    int num3 = 3;
    int num4 = 10;
    int array [] = {num1, num2, num3, num4};
    for (int i = 0;
    i < array.length; i ++) {
        for (int j = 0;
        j < array.length - 1; j ++) {
            if (array [j] > array [j + 1]) {
                int x = array [j];
                array [j] = array [j + 1];
                array [j + 1] = x;
            }
        }
    }
    for (int i = 0;
    i < array.length; i ++) {
        System.out.println (array [i]);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22178092_22178314_16_27
22178092_22178477_16_27
Title: CircularQueue program is getting errors 
----------------------------------------

public void insertQueue () {
    if (isQueueFull ()) System.out.println ("Overflow");
    else {
        name = getName ();
        if (isQueueEmpty ()) head = + 1;

        if (tail == Size - 1) tail = - 1;

        q [++ tail] = name;
    }
}
----------------------------------------

public void insertQueue () {
    if (isQueueFull ()) System.out.println ("Overflow");
    else {
        name = getName ();
        if (isQueueEmpty ()) head = + 1;

        if (tail == Size - 1) tail = - 1;

        q [++ tail] = name;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22178866_22178970_1_11
22178866_22179042_7_16
Title: Java: drawing circles with recursion 
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponents (g);
    g.setColor (Color.BLUE);
    g.drawOval (250 - radius, 250 - radius, radius * 2, radius * 2);
    radius += 10;
    if (radius + 10 < 250) {
        paintComponent (g);
    }
}
----------------------------------------

public void paintComponent (Graphics g) {
    super.paintComponents (g);
    g.setColor (Color.BLUE);
    g.drawOval (250 - (radius / 2), 250 - (radius / 2), radius, radius);
    radius += 10;
    if (radius + 10 < 250) {
        paintComponent (g);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22179569_22180228_5_14
22179569_22180255_7_28
Title: Java - How to find an element in a 2D Array using recursion 
----------------------------------------

private boolean searchTable (int [] [] data, int element, int p) {
    if (p < 0 || p > data.length) {
        return false;
    }
    int [] row = getRow (data, p);
    if (searchRow (row, element, 0)) {
        return true;
    }
    return searchTable (data, element, 1 + p);
}
----------------------------------------

public boolean searchTable (int [] [] data, int element) {
    if (data [rowCount].length == columnCount) {
        rowCount ++;
        columnCount = 0;
    }
    if (data.length > rowCount) {
        if (data [rowCount] [columnCount] == element) {
            result = true;
        } else {
            columnCount ++;
            searchTable (data, element);
        }
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22181272_22181323_1_12
22181272_22181368_1_11
Title: Return method cannot be resolved to variable 
----------------------------------------

public String toString () {
    String result;
    if (isEmpty ()) {
        result = String.format ("Interval: (EMPTY)");
    } else {
        result = String.format ("Interval: [%s, %s]", Double.toString (left), Double.toString (right));
    }
    return result;
}
----------------------------------------

public String toString () {
    String result;
    if (isEmpty ()) {
        result = String.format ("Interval: (EMPTY)");
    } else {
        result = String.format ("Interval: [%s, %s]", Double.toString (left), Double.toString (right));
    }
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22182248_22182650_4_26
22182248_22185511_4_17
Title: im trying to Write a program that accepts an integer n and prints the following picture with 2n – 1 rows: 
----------------------------------------

public static void main (String [] args) {
    Scanner input = new Scanner (System.in);
    System.out.println ("enter a number: ");
    int n = input.nextInt ();
    int lines = 2 * n - 1;
    for (int i = 1;
    i <= lines; i ++) {
        int Xs = 2 * i - 1;
        int white = lines - Xs / 2;
        for (int j = 0;
        j < white; j ++) System.out.print (" ");

        for (int j = 0;
        j < Xs; j ++) System.out.print ('X');

        for (int j = 0;
        j < white; j ++) System.out.print (" ");

        System.out.println ();
    }
    for (int i = lines;
    i >= 1; i --) {
        int Xs = 2 * i - 1;
        int white = lines - Xs / 2;
        for (int j = 0;
        j < white; j ++) System.out.print (" ");

        for (int j = 0;
        j < Xs; j ++) System.out.print ("X");

        for (int j = 0;
        j < white; j ++) System.out.print (" ");

        System.out.println ();
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner scn = new Scanner (System.in);
    int n = scn.nextInt ();
    String accumulator = "";
    for (int i = 0;
    i < 2 * (n - 1) + 1; i ++) accumulator += "x";

    String space = "";
    String res = accumulator;
    while (accumulator.length () > 2) {
        accumulator = accumulator.substring (2);
        space += " ";
        res = space + accumulator + "\n" + res + "\n" + space + accumulator;
    }
    System.out.println (res);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22183968_22184551_12_22
22183968_48432365_1_13
Title: Counting Letters Between the First and Last - Java 
----------------------------------------

static String countMe (String countWord) {
    int count = 0;
    String first = String.valueOf (countWord.charAt (0));
    String last = String.valueOf (countWord.charAt (countWord.length () - 1));
    for (int i = 1;
    i < countWord.length () - 1; i ++) {
        if (String.valueOf (countWord.charAt (i)) != first) {
            count ++;
        }
    }
    return first + count + last;
}
----------------------------------------

static String countMe (String countWord) {
    char first = countWord.charAt (0);
    char last = countWord.charAt (countWord.length () - 1);
    int count = 0;
    for (int i = 1;
    i < countWord.length () - 1; i ++) {
        count ++;
    }
    return first + String.valueOf (count) + last;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22185731_22185786_1_12
22185731_22185819_1_12
Title: Using Generic type to have a general method 
----------------------------------------

public static Object [] [] extractCol (Object [] [] matrix, int [] col) {
    Object [] [] output = new Object [matrix.length] [col.length];
    int con = 0;
    for (int i = 0;
    i < matrix.length; i ++) {
        con = 0;
        for (int j = 0;
        j < col.length; j ++) {
            output [i] [con] = matrix [i] [col [j]];
            con ++;
        }
    }
    return output;
}
----------------------------------------

public static Object [] [] extractCol (final Object [] [] matrix, final int [] col) {
    final Object [] [] output = new Object [matrix.length] [col.length];
    int con = 0;
    for (int i = 0;
    i < matrix.length; i ++) {
        con = - 1;
        for (final int element : col) {
            con ++;
            output [i] [con] = matrix [i] [element];
        }
    }
    return output;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22188940_22190844_117_131
22188940_22190844_133_180
Title: .gif image doesn't moves on adding it to the JTabbed pane 
----------------------------------------

protected AnimatedGif (JComponent value) {
    this.player = value;
    frames = new ArrayList < > (25);
    playTimer = new Timer (0, new ActionListener () {
        @Override
        public void actionPerformed (ActionEvent e) {
            frame ++;
            if (frame >= frames.size ()) {
                frame = 0;
            }
            player.repaint ();
            playTimer.setDelay (frames.get (0).getGraphicControlExtension ().getDelayTime ());
        }}

    );
}
----------------------------------------

public AnimatedGif (JComponent player, URL url) throws IOException {
    this (player);
    try (InputStream is = url.openStream (); ImageInputStream stream = ImageIO.createImageInputStream (is)) {
        Iterator readers = ImageIO.getImageReaders (stream);
        if (! readers.hasNext ()) {
            throw new RuntimeException ("no image reader found");
        }
        ImageReader reader = (ImageReader) readers.next ();
        reader.setInput (stream);
        int n = reader.getNumImages (true);
        System.out.println ("numImages = " + n);
        for (int i = 0;
        i < n; i ++) {
            BufferedImage image = reader.read (i);
            ImageFrame imageFrame = new ImageFrame (image);
            IIOMetadata imd = reader.getImageMetadata (i);
            Node tree = imd.getAsTree ("javax_imageio_gif_image_1.0");
            NodeList children = tree.getChildNodes ();
            for (int j = 0;
            j < children.getLength (); j ++) {
                Node nodeItem = children.item (j);
                NamedNodeMap attr = nodeItem.getAttributes ();
                switch (nodeItem.getNodeName ()) {
                    case "ImageDescriptor" :
                        ImageDescriptor id = new ImageDescriptor (getIntValue (attr.getNamedItem ("imageLeftPosition")), getIntValue (attr.getNamedItem ("imageTopPosition")), getIntValue (attr.getNamedItem ("imageWidth")), getIntValue (attr.getNamedItem ("imageHeight")), getBooleanValue (attr.getNamedItem ("interlaceFlag")));
                        imageFrame.setImageDescriptor (id);
                        break;
                    case "GraphicControlExtension" :
                        GraphicControlExtension gc = new GraphicControlExtension (DisposalMethod.find (getNodeValue (attr.getNamedItem ("disposalMethod"))), getBooleanValue (attr.getNamedItem ("userInputFlag")), getBooleanValue (attr.getNamedItem ("transparentColorFlag")), getIntValue (attr.getNamedItem ("delayTime")) * 10, getIntValue (attr.getNamedItem ("transparentColorIndex")));
                        imageFrame.setGraphicControlExtension (gc);
                        break;
                }
            }
            frames.add (imageFrame);
        }
    } finally {
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22190130_22190822_1_15
22190130_22190835_18_27
Title: Implement a Stack with a circular singly linked list 
----------------------------------------

public Node pop () {
    if (isEmpty ()) {
        return null;
    }
    Node temp = current;
    if (count == 1) {
        current = null;
    } else {
        current = current.next;
    }
    count --;
    temp.next = null;
    return temp;
}
----------------------------------------

public Long pop () {
    if (isEmpty ()) {
        return null;
    } else {
        count --;
        Node node = EOS.next;
        EOS.next = node.next;
        return node.iData;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2219556_3131885_1_12
2219556_4510800_1_14
Title: "How do I ""listen"" for something in WebView Android?" 
----------------------------------------

@Override
public boolean shouldOverrideUrlLoading (WebView view, String url) {
    if (url.contains ("google.com")) {
        view.loadUrl ("http://example.com/");
        return true;
    }
    view.loadUrl (url);
    return true;
}
----------------------------------------

@Override
public boolean shouldOverrideUrlLoading (WebView view, String url) {
    boolean returnVal = false;
    if (url.startsWith (mUrlHost)) {
    } else {
        Toast.makeText (mActivity, "Launching Browser", Toast.LENGTH_SHORT).show ();
        Uri uri = Uri.parse (url);
        Intent intent = new Intent (Intent.ACTION_VIEW, uri);
        mActivity.startActivity (intent);
        returnVal = true;
    }
    return returnVal;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22201501_22201706_1_26
22201501_22206871_1_14
Title: Put values into array using foreach loop 
----------------------------------------

public static int getInvisibleCharactersCount (String inputWords) {
    int invisibleCharacters = 0;
    int decimalEquivalent = 0;
    char [] caInputWords = inputWords.toCharArray ();
    int [] intArray = new int [caInputWords.length];
    int i = 0;
    for (char asciiChar : caInputWords) {
        decimalEquivalent = (int) asciiChar;
        intArray [i] = decimalEquivalent;
        i ++;
    }
    for (int ctr = 0;
    ctr < intArray.length; ctr ++) {
        if ((intArray [ctr] >= 0 && intArray [ctr] < 33) || (intArray [ctr] >= 127 && intArray [ctr] < 161)) {
            invisibleCharacters ++;
        }
    }
    return invisibleCharacters;
}
----------------------------------------

public static int getInvisibleCharactersCount (String inputWords) {
    int invisibleCharacters = 0;
    char [] caInputWords = inputWords.toCharArray ();
    for (int ctr = 0;
    ctr < caInputWords.length; ctr ++) {
        if ((caInputWords [ctr] >= 0 && caInputWords [ctr] < 33) || (caInputWords [ctr] >= 127 && caInputWords [ctr] < 161)) {
            invisibleCharacters ++;
        }
    }
    return invisibleCharacters;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22208281_22208650_7_15
22208281_22210320_1_10
Title: How to find a key that corresponds to a value in a hashmap without iterating the table (Java) 
----------------------------------------

void put (K key, V value) {
    if (map.containsValue (value)) {
        K keyToRemove = findKeyByValue (value);
        map.remove (keyToRemove);
        map.put (key, value);
    } else {
        map.put (key, value);
    }
}
----------------------------------------

public void put (K key, V val) {
    Iterator < Map.Entry < K, V > > entries = entrySet ().iterator ();
    while (entries.hasNext ()) {
        if (entries.next ().getValue ().equals (val)) {
            entries.remove ();
            break;
        }
    }
    super.put (key, val);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22209551_22209796_1_24
22209551_22209965_1_19
Title: Removing certain values from an arraylist 
----------------------------------------

public static void main (String [] args) throws InvalidFormatException, IOException {
    List arr = new ArrayList ();
    File f = new File ("C:\\java\\marchcalllast.csv");
    Scanner in = new Scanner (f).useDelimiter (",");
    while (in.hasNext ()) {
        String nextToken = in.next ();
        try {
            Double tokenAsNumber = Double.parseDouble (nextToken);
            if (tokenAsNumber >= 0.1) {
                arr.add (tokenAsNumber);
            } else {
                System.out.println ("Ignoring value less than 0.1: " + tokenAsNumber);
            }
        } catch (NumberFormatException nfe) {
            System.err.println (nextToken + " is not a number, ignoring");
        }
    }
    System.out.println (arr);
}
----------------------------------------

public static void main (String [] args) throws IOException {
    List < Double > arr = new ArrayList < Double > ();
    File f = new File ("C:\\java\\marchcalllast.csv");
    Scanner in = new Scanner (f).useDelimiter (",");
    while (in.hasNext ()) {
        arr.add (Double.valueOf (in.next ()));
    }
    List < Double > toRemove = new ArrayList < Double > ();
    for (Double item : arr) {
        if (item < 0.1) {
            toRemove.add (item);
        }
    }
    arr.removeAll (toRemove);
    System.out.println (arr);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22211521_23094601_1_24
22211521_48319844_14_40
Title: How to recursively remove all adjacent duplicates 
----------------------------------------

public static String removeDuplicates (String s) {
    if (s.isEmpty ()) {
        return s;
    }
    char [] buf = s.toCharArray ();
    char lastchar = buf [0];
    int o = 1;
    for (int i = 1;
    i < buf.length; i ++) {
        if (o > 0 && buf [i] == buf [o - 1]) {
            lastchar = buf [o - 1];
            while (o > 0 && buf [o - 1] == lastchar) {
                o --;
            }
        } else if (buf [i] == lastchar) {
        } else {
            buf [o ++] = buf [i];
        }

    }
    return new String (buf, 0, o);
}
----------------------------------------

public static String removeDuplicates (String s) {
    int count = 0;
    String sout = "";
    if (s.isEmpty () || s.length () == 1) {
        return s;
    } else {
        s = s + " ";
        for (int i = 0;
        i < s.length () - 1; i ++) {
            if (s.charAt (i) != s.charAt (i + 1) || s.charAt (i + 1) == ' ') {
                sout = sout + s.charAt (i);
            } else {
                count ++;
                i = i + 1;
            }
        }
    }
    for (int i = 0;
    i < sout.length () - 1; i ++) {
        if (sout.charAt (i) == sout.charAt (i + 1)) count ++;

    }
    if (count > 0) {
        return removeDuplicates (sout);
    } else return sout;

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22219833_22219899_10_47
22219833_22219954_29_48
Title: Creating an XML document using Java 
----------------------------------------

public static void main (String [] args) {
    try {
        Element company = new Element ("company");
        Document doc = new Document (company);
        doc.setRootElement (company);
        Element staff = new Element ("staff");
        staff.setAttribute (new Attribute ("id", "1"));
        staff.addContent (new Element ("firstname").setText ("yong"));
        staff.addContent (new Element ("lastname").setText ("mook kim"));
        staff.addContent (new Element ("nickname").setText ("mkyong"));
        staff.addContent (new Element ("salary").setText ("199999"));
        doc.getRootElement ().addContent (staff);
        Element staff2 = new Element ("staff");
        staff2.setAttribute (new Attribute ("id", "2"));
        staff2.addContent (new Element ("firstname").setText ("low"));
        staff2.addContent (new Element ("lastname").setText ("yin fong"));
        staff2.addContent (new Element ("nickname").setText ("fong fong"));
        staff2.addContent (new Element ("salary").setText ("188888"));
        doc.getRootElement ().addContent (staff2);
        XMLOutputter xmlOutput = new XMLOutputter ();
        xmlOutput.setFormat (Format.getPrettyFormat ());
        xmlOutput.output (doc, new FileWriter ("c:\\file.xml"));
        System.out.println ("File Saved!");
    } catch (IOException io) {
        System.out.println (io.getMessage ());
    }
}
----------------------------------------

public static void main (String args []) throws JAXBException {
    File xmlFile = new File ("C:/temp/test.xml");
    SimpleXML xml = new SimpleXML ();
    xml.setId (4);
    xml.setName ("TestName");
    JAXBContext context = JAXBContext.newInstance (SimpleXML.class);
    Unmarshaller unmarshaller = context.createUnmarshaller ();
    Marshaller marshaller = context.createMarshaller ();
    marshaller.marshal (xml, xmlFile);
    SimpleXML newXML = (SimpleXML) unmarshaller.unmarshal (xmlFile);
    System.out.println (newXML.id);
    System.out.println (newXML.name);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22229762_22230092_13_20
22229762_22230357_6_24
Title: How to customize sort of Set in Java 
----------------------------------------

public int compare (DAY o1, DAY o2) {
    if (o1.getPrio () == o2.getPrio ()) {
        return 0;
    } else if (o1.getPrio () < o2.getPrio ()) {
        return - 1;
    }

    return 1;
}
----------------------------------------

public int compare (DAY d0, DAY d1) {
    if (d0 == DAY.SUN) {
        if (d1 == DAY.SUN) {
            return 0;
        } else {
            return - 1;
        }
    } else if (d1 == DAY.SUN) {
        return 1;
    }

    return d0.ordinal () - d1.ordinal ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22229762_22230092_13_20
22229762_22231248_41_50
Title: How to customize sort of Set in Java 
----------------------------------------

public int compare (DAY o1, DAY o2) {
    if (o1.getPrio () == o2.getPrio ()) {
        return 0;
    } else if (o1.getPrio () < o2.getPrio ()) {
        return - 1;
    }

    return 1;
}
----------------------------------------

public int compare (final DAY o1, final DAY o2) {
    int returnValue = 0;
    if (o1.m_index > o2.m_index) {
        returnValue = 1;
    } else if (o1.m_index < o2.m_index) {
        returnValue = - 1;
    }

    return returnValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22229762_22230092_28_40
22229762_22230132_10_16
Title: How to customize sort of Set in Java 
----------------------------------------

public static void sortDates (List < DAY > dayList, Comparator < DAY > comparator) {
    Set < DAY > setd = new TreeSet < DAY > (comparator);
    setd.addAll (dayList);
    Set < DAY > set = new TreeSet < DAY > (dayList);
    for (DAY day : set) {
        System.out.println (day);
    }
    System.out.println ("comparator:");
    for (DAY day : setd) {
        System.out.println (day);
    }
}
----------------------------------------

public static void sortDates (List < DAY > dayList) {
    Collections.sort (dayList, new Comparator < DAY > () {
        public int compare (DAY day1, DAY day2) {
            return day1.getWeight () - day2.getWeight ();
        }}

    );
    System.out.println ("sortedlist is" + dayList.toString ());
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22229762_22230357_6_24
22229762_22231248_41_50
Title: How to customize sort of Set in Java 
----------------------------------------

public int compare (DAY d0, DAY d1) {
    if (d0 == DAY.SUN) {
        if (d1 == DAY.SUN) {
            return 0;
        } else {
            return - 1;
        }
    } else if (d1 == DAY.SUN) {
        return 1;
    }

    return d0.ordinal () - d1.ordinal ();
}
----------------------------------------

public int compare (final DAY o1, final DAY o2) {
    int returnValue = 0;
    if (o1.m_index > o2.m_index) {
        returnValue = 1;
    } else if (o1.m_index < o2.m_index) {
        returnValue = - 1;
    }

    return returnValue;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22233402_22233742_31_43
22233402_22233978_1_12
Title: How to implement Add and Delete methods using objects in a Linked List 
----------------------------------------

public Train delete (int trainNumber, ListNode currentNode) {
    if (currentNode.getNext () == null) {
        return null;
    } else if (currentNode.getNext ().getTrain ().getTrainNumber () == trainNumber) {
        ListNode tmp = currentNode.getNext ();
        currentNode.setNext (currentNode.getNext ().getNext ());
        return tmp.getTrain ();
    } else {
        return delete (trainNumber, currentNode.getNext ());
    }

}
----------------------------------------

public Train delete (int index) {
    ListNode tmp = head;
    for (int i = 0;
    i < index; i ++) {
        tmp = tmp.next;
    }
    ListNode deleted = tmp.next;
    tmp.next = tmp.next.next;
    count --;
    return deleted.train;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22234664_22239636_20_40
22234664_22239636_75_86
Title: How to read and sort a text file? 
----------------------------------------

public String toString () {
    String idString = Integer.toString (id);
    StringBuilder result = new StringBuilder (60 + idString.length () + firstName.length () + lastName.length () + 52 * class1Races.size () + 52 * class2Races.size ());
    result.append ("Athlete Number: ");
    result.append (idString);
    result.append ("\nFirst Name: ");
    result.append (firstName);
    result.append ("\nFamily Name: ");
    result.append (lastName);
    result.append ("\nClass1\n");
    for (Race race : class1Races) {
        result.append (race.toString ());
        result.append ("\n");
    }
    result.append ("Class2\n");
    for (Race race : class2Races) {
        result.append (race.toString ());
        result.append ("\n");
    }
    return result.toString ();
}
----------------------------------------

public String toString () {
    String positionString = Integer.toString (position);
    String pointsString = Integer.toString (points);
    StringBuilder result = new StringBuilder (42 + name.length () + positionString.length () + pointsString.length ());
    result.append ("Position and points awarded for ");
    result.append (name);
    result.append (" race: ");
    result.append (positionString);
    result.append ("  ");
    result.append (pointsString);
    return result.toString ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22235319_26893620_1_53
22235319_26894145_1_68
Title: Find numbers present in at least two of the three arrays 
----------------------------------------

public static void twice (int [] a, int [] b, int [] c) {
    Set < Integer > setA = new HashSet < Integer > ();
    for (int i = 0;
    i < a.length; i ++) {
        setA.add (a [i]);
    }
    Set < Integer > setB = new HashSet < Integer > ();
    for (int i = 0;
    i < b.length; i ++) {
        setB.add (b [i]);
    }
    Set < Integer > setC = new HashSet < Integer > ();
    for (int i = 0;
    i < c.length; i ++) {
        setC.add (c [i]);
    }
    Map < Integer, Integer > map = new HashMap < Integer, Integer > ();
    for (Integer val : setA) {
        map.put (val, 1);
    }
    for (Integer val : setB) {
        if (map.get (val) != null) {
            int count = map.get (val);
            count ++;
            map.put (val, count);
        } else {
            map.put (val, 1);
        }
    }
    for (Integer val : setC) {
        if (map.get (val) != null) {
            int count = map.get (val);
            count ++;
            map.put (val, count);
        } else {
            map.put (val, 1);
        }
    }
    for (Map.Entry < Integer, Integer > entry2 : map.entrySet ()) {
        if (entry2.getValue () >= 2) {
            System.out.print (" " + entry2.getKey ());
        }
    }
}
----------------------------------------

public static void twice (int [] a, int [] b, int [] c) {
    int [] a1 = removeDuplicates (a);
    int [] b1 = removeDuplicates (b);
    int [] c1 = removeDuplicates (c);
    int totalLen = a1.length + b1.length + c1.length;
    int [] [] keyValue = new int [totalLen] [2];
    int index = 0;
    for (int i = 0;
    i < a1.length; i ++, index ++) {
        keyValue [index] [0] = a1 [i];
        keyValue [index] [1] = 1;
    }
    for (int i = 0;
    i < b1.length; i ++) {
        boolean found = false;
        int tempIndex = - 1;
        for (int j = 0;
        j < index; j ++) {
            if (keyValue [j] [0] == b1 [i]) {
                found = true;
                tempIndex = j;
                break;
            }
        }
        if (found) {
            keyValue [tempIndex] [1] ++;
        } else {
            keyValue [index] [0] = b1 [i];
            keyValue [index] [1] = 1;
            index ++;
        }
    }
    for (int i = 0;
    i < c1.length; i ++) {
        boolean found = false;
        int tempIndex = - 1;
        for (int j = 0;
        j < index; j ++) {
            if (keyValue [j] [0] == c1 [i]) {
                found = true;
                tempIndex = j;
                break;
            }
        }
        if (found) {
            keyValue [tempIndex] [1] ++;
        } else {
            keyValue [index] [0] = c1 [i];
            keyValue [index] [1] = 1;
            index ++;
        }
    }
    for (int i = 0;
    i < index; i ++) {
        if (keyValue [i] [1] >= 2) {
            System.out.print (keyValue [i] [0] + " ");
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22242726_22242918_5_49
22242726_22243027_7_25
Title: Assigning Strings in Private method 
----------------------------------------

private static String ConverttoNumerals (int newinteger) {
    String Roman = "";
    String Romant = "";
    String Romanh = "";
    String Romanq = "";
    int number = newinteger;
    int ones = number % 10;
    if (ones == 1) {
        Roman = "I";
    } else if (ones == 2) {
        Roman = "II";
    } else if (ones == 3) {
        Roman = "III";
    } else if (ones == 4) {
        Roman = "IV";
    } else if (ones == 5) {
        Roman = "V";
    } else if (ones == 6) {
        Roman = "VI";
    } else if (ones == 7) {
        Roman = "VII";
    } else if (ones == 8) {
        Roman = "VII";
    } else if (ones == 9) {
        Roman = "IX";
    } else if (ones == 0) {
        Roman = "";
    }

    int tenths = ((number / 10) % 10);
    if (tenths == 1) {
        Romant = "X";
    } else if (tenths == 2) {
        Romant = "XX";
    } else if (tenths == 3) {
        Romant = "XXX";
    } else if (tenths == 4) {
        Romant = "XL";
    } else if (tenths == 5) {
        Romant = "L";
    } else if (tenths == 6) {
        Romant = "LX";
    } else if (tenths == 7) {
        Romant = "LXX";
    } else if (tenths == 8) {
        Romant = "LXXX";
    } else if (tenths == 9) {
        Romant = "XC";
    }

    int hundredths = ((number / 100) % 10);
    if (hundredths == 1) {
        Romanh = "C";
    } else if (hundredths == 2) {
        Romanh = "CC";
    } else if (hundredths == 3) {
        Romanh = "CCC";
    } else if (hundredths == 4) {
        Romanh = "CD";
    } else if (hundredths == 5) {
        Romanh = "D";
    } else if (hundredths == 6) {
        Romanh = "DC";
    } else if (hundredths == 7) {
        Romanh = "DCC";
    } else if (hundredths == 8) {
        Romanh = "DCCC";
    } else if (hundredths == 9) {
        Romanh = "CM";
    }

    int thousandth = ((number / 1000) % 10);
    if (thousandth == 1) {
        Romanq = "M";
    } else if (thousandth == 2) {
        Romanq = "MM";
    } else if (thousandth == 3) {
        Romanq = "MMMM";
    }

    return Romanq + Romanh + Romant + Roman;
}
----------------------------------------

public static String ConverttoNumerals (int newinteger) {
    int n = newinteger;
    int digit = n / 1000;
    String result = thousands [digit];
    n = n - digit * 1000;
    digit = n / 100;
    result = result + hundreds [digit];
    n = n - digit * 100;
    digit = n / 10;
    result = result + tens [digit];
    n = n - digit * 10;
    result = result + units [digit];
    return result;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22245124_22245739_1_24
22245124_22289786_3_37
Title: How to print out each three number (for Even number and Odd number)? 
----------------------------------------

public static void main (String str []) {
    final int step = 3;
    for (int s = 0;
    s < 50; s += step * 2) {
        System.out.println ("Even number");
        for (int i = 0;
        i < step; i ++) {
            int val = (s + i * 2);
            if (val <= 50) System.out.println (val);

        }
        System.out.println ("Odd number");
        for (int i = 0;
        i < step; i ++) {
            int val = (s + i * 2 + 1);
            if (val <= 50) System.out.println (val);

        }
    }
}
----------------------------------------

public static void main (String args []) {
    int j = 0, k = 1;
    for (; k < 50;) {
        for (int firstLoop = 0;
        firstLoop < 3; firstLoop ++) {
            if ((j % 2) == 0) {
                if (j > 50) {
                    break;
                }
                System.out.println ("Number is even: " + j);
                j += 2;
            }
        }
        for (int secondLoop = 0;
        secondLoop < 3; secondLoop ++) {
            if (! ((k % 2) == 0)) {
                if (k > 50) {
                    break;
                }
                System.out.println ("Number is odd: " + k);
                k += 2;
            }
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22247538_22247594_1_10
22247538_22247830_115_139
Title: Add to a String[] another String[] 
----------------------------------------

public static void main (String [] args) throws Exception {
    String [] all = new String [15];
    String [] some = new String [] {"one", "two", "three"};
    String [] more = new String [] {"four", "five"};
    System.arraycopy (some, 0, all, 0, some.length);
    System.arraycopy (more, 0, all, some.length, more.length);
    for (String value : all) System.out.println (value);

}
----------------------------------------

public static void main (String [] args) {
    JoinedArray < String > a = new JoinedArray < > (new String [] {"One"}, new String [] {"Two", "Three", "Four", "Five"}, new String [] {"Six", "Seven", "Eight", "Nine"});
    for (String s : a) {
        System.out.println (s);
    }
    String [] four = new String [4];
    int copied = a.copyTo (four, 3, 4);
    System.out.println ("Copied " + copied + " = " + Arrays.toString (four));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22252543_22252774_3_12
22252543_22252916_3_12
Title: Squaring Numbers in java using Math.pow getting error of precision 
----------------------------------------

public static void main (String [] args) {
    int ARRAY_SIZE = 5;
    long size = ARRAY_SIZE;
    double [] array = new double [ARRAY_SIZE];
    for (int i = 0;
    i < ARRAY_SIZE; ++ i) {
        array [i] = Math.pow (size, 2);
    }
}
----------------------------------------

public static void main (String [] args) {
    int ARRAY_SIZE = 5;
    long size = ARRAY_SIZE;
    double [] array = new double [ARRAY_SIZE];
    for (int i = 0;
    i < ARRAY_SIZE; ++ i) {
        array [i] = Math.pow (2, i);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2225540_30846612_41_60
2225540_42620661_11_30
Title: Trie implementation 
----------------------------------------

private void add (String word) {
    Node crawl = root;
    int n = word.length ();
    for (int i = 0;
    i < n; i ++) {
        char ch = word.charAt (i);
        if (crawl.children.containsKey (ch)) {
            crawl = crawl.children.get (ch);
        } else {
            crawl.children.put (ch, new Node (false));
            Node temp = crawl.children.get (ch);
            if (i == n - 1) {
                temp.end = true;
            }
            crawl = temp;
            System.out.println (ch + "      " + crawl.end);
        }
    }
}
----------------------------------------

public void add (String word) {
    Leaf current = root;
    Leaf newLeaf = null;
    for (char c : word.toCharArray ()) {
        boolean found = false;
        for (Leaf leaf : current.leaves) {
            if (leaf.c == c) {
                current = leaf;
                current.counter ++;
                found = true;
                break;
            }
        }
        if (! found) {
            newLeaf = new Leaf (c);
            current.leaves.add (newLeaf);
            current = newLeaf;
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
2225540_38042078_45_61
2225540_42620661_31_45
Title: Trie implementation 
----------------------------------------

static boolean find (String data, Node root) {
    if (data == null || data.length () == 0) {
        return true;
    }
    char x = data.charAt (0);
    Node node = root.children [getIndex (x)];
    if (node == null) {
        return false;
    } else {
        if (data.length () == 1) {
            return node.isLeaf;
        } else {
            return find (data.substring (1, data.length ()), node);
        }
    }
}
----------------------------------------

public int find (String partial) {
    Leaf current = root;
    for (char c : partial.toCharArray ()) {
        boolean found = false;
        for (Leaf leaf : current.leaves) {
            if (leaf.c == c) {
                current = leaf;
                found = true;
                break;
            }
        }
        if (! found) return 0;

    }
    return current.counter;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22263843_22264791_66_113
22263843_22275609_13_70
Title: Trying to implement text-based Hangman game in Java 
----------------------------------------

public static final void main (String [] idx0_alphaNumSecretWord) {
    HangmanWord hword = null;
    try {
        hword = new HangmanWord (idx0_alphaNumSecretWord [0]);
    } catch (ArrayIndexOutOfBoundsException abx) {
        throw new IllegalArgumentException ("Missing one required parameter: The alpha-numeric secret word.");
    }
    HangmanGuess [] testGuesses = new HangmanGuess [] {new HangmanGuess ('t', 2, 3, 4), new HangmanGuess ('e', 6, 7, 8, 9), new HangmanGuess ('a', 6, 7, 8), new HangmanGuess ('a', 4), new HangmanGuess ('o', 0, 3), new HangmanGuess ('o', 0, 2, 8, 6), new HangmanGuess ('p', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), new HangmanGuess ('n', 1), new HangmanGuess ('t', 4, 5), new HangmanGuess ('z', 0), new HangmanGuess ('m', 3, 4), new HangmanGuess ('i', 10), new HangmanGuess ('a', 11)};
    int testIdx = 0;
    while (! hword.didWin ()) {
        System.out.print ("The secret word is: " + hword.getMasked () + ". Guess (char idx idx idx ...): ");
        HangmanGuess hguess = testGuesses [testIdx ++];
        System.out.print (hguess);
        int matchesThisGuess = hword.getMatchedCountFromGuess (hguess.chr, hguess.idxGuesses);
        System.out.println ();
        if (matchesThisGuess == 0) {
            System.out.println ("No characters guessed.");
        }
    }
    System.out.println ("SUCCESS: " + hword.getMasked ());
}
----------------------------------------

public static void main (String [] args) throws Exception {
    String word = WORDS [new Random ().nextInt (WORDS.length)];
    Scanner in = new Scanner (System.in);
    int badGuessCount = 0;
    String guessInput = null;
    Map < String, Object > unqGuessedCharsAsStrMap = new TreeMap < String, Object > ();
    String allGuessCharsStr = "";
    String currCharGuessAsStr = " ";
    do {
        System.out.print (getMasked (word, allGuessCharsStr) + " Guess a character [Bad guesses: " + badGuessCount + " of " + MAX_BAD_GUESSES + "]: ");
        guessInput = in.nextLine ();
        if (guessInput != null) {
            if (! guessInput.matches ("^[a-zA-Z]$")) {
                System.out.println ("Bad input. Must a single letter.");
                badGuessCount ++;
            } else {
                currCharGuessAsStr = guessInput.toUpperCase ();
                if (unqGuessedCharsAsStrMap.containsKey (currCharGuessAsStr)) {
                    System.out.println ("Already guessed that letter. All guesses: " + allGuessCharsStr.trim ());
                } else {
                    unqGuessedCharsAsStrMap.put (currCharGuessAsStr, null);
                    allGuessCharsStr += currCharGuessAsStr;
                    char [] allGuessedChars = allGuessCharsStr.toCharArray ();
                    Arrays.sort (allGuessedChars);
                    allGuessCharsStr = new String (allGuessedChars);
                }
                if (! word.contains (currCharGuessAsStr)) {
                    badGuessCount ++;
                }
            }
        }
    } while (! word.matches ("[" + allGuessCharsStr + "]+") && badGuessCount <= MAX_BAD_GUESSES);
    System.out.println (getMasked (word, allGuessCharsStr));
    System.out.println (word + (badGuessCount > MAX_BAD_GUESSES ? " not" : "") + " solved with " + badGuessCount + " incorrect guesses (max allowed=" + MAX_BAD_GUESSES + ").");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22265452_22269672_30_64
22265452_28229114_30_76
Title: How To Remove The Last Image In An Animation 
----------------------------------------

public NerdGirl () {
    try {
        img = ImageIO.read (getClass ().getResource ("/resources/nerd-girl.jpg"));
    } catch (IOException ex) {
        Logger.getLogger (NerdGirl.class.getName ()).log (Level.SEVERE, null, ex);
    }
    DIM_W = img.getWidth () / SPRITE_ROWS;
    DIM_H = img.getHeight () / SPRITE_COLUMNS;
    x1Src = 0;
    y1Src = 0;
    x2Src = x1Src + DIM_W;
    y2Src = y1Src + DIM_H;
    Timer timer = new Timer (DELAY, new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            if (x1Src >= img.getWidth () - DIM_H - 5) {
                x1Src = 0;
                x2Src = x1Src + DIM_W;
                if (y1Src >= DIM_H - 5) {
                    y1Src = 0;
                    y2Src = y1Src + DIM_H;
                } else {
                    y1Src += DIM_H;
                    y2Src = y1Src + DIM_H;
                }
            } else {
                x1Src += DIM_W;
                x2Src = x1Src + DIM_W;
            }
            repaint ();
        }}

    );
    timer.start ();
}
----------------------------------------

public NerdGirl () {
    try {
        img = ImageIO.read (getClass ().getResource ("images/nerdgirl.jpg"));
        SPRITE_ROWS = 2;
    } catch (IOException ex) {
        Logger.getLogger (NerdGirl.class.getName ()).log (Level.SEVERE, null, ex);
    }
    dim_W = img.getWidth () / SPRITE_ROWS;
    dim_H = img.getHeight () / SPRITE_COLUMNS;
    x1Src = 0;
    y1Src = 0;
    x2Src = x1Src + dim_W;
    y2Src = y1Src + dim_H;
    Timer timer = new Timer (DELAY, new ActionListener () {
        public void actionPerformed (ActionEvent e) {
            x1Src += dim_W;
            x2Src += dim_W;
            if (x2Src > img.getWidth ()) {
                x1Src = 0;
                x2Src = dim_W;
                y1Src += dim_H;
                y2Src += dim_H;
                if (y2Src > img.getHeight ()) {
                    y1Src = 0;
                    y2Src = dim_H;
                }
            }
            repaint ();
        }}

    );
    timer.start ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22265452_22269672_43_61
22265452_28229114_54_73
Title: How To Remove The Last Image In An Animation 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (x1Src >= img.getWidth () - DIM_H - 5) {
        x1Src = 0;
        x2Src = x1Src + DIM_W;
        if (y1Src >= DIM_H - 5) {
            y1Src = 0;
            y2Src = y1Src + DIM_H;
        } else {
            y1Src += DIM_H;
            y2Src = y1Src + DIM_H;
        }
    } else {
        x1Src += DIM_W;
        x2Src = x1Src + DIM_W;
    }
    repaint ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    x1Src += dim_W;
    x2Src += dim_W;
    if (x2Src > img.getWidth ()) {
        x1Src = 0;
        x2Src = dim_W;
        y1Src += dim_H;
        y2Src += dim_H;
        if (y2Src > img.getHeight ()) {
            y1Src = 0;
            y2Src = dim_H;
        }
    }
    repaint ();
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22265452_22269672_77_88
22265452_28229114_89_100
Title: How To Remove The Last Image In An Animation 
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ();
            frame.add (new NerdGirl ());
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    SwingUtilities.invokeLater (new Runnable () {
        public void run () {
            JFrame frame = new JFrame ();
            frame.add (new NerdGirl ());
            frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
            frame.pack ();
            frame.setLocationRelativeTo (null);
            frame.setVisible (true);
        }}

    );
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22266451_22266560_2_32
22266451_22273243_2_31
Title: Returning an array of data from database in a java method 
----------------------------------------

public static Date [] Dates () {
    Connection con = null;
    String url = "jdbc:mysql://localhost:3306/";
    String db = "GreetingCard";
    String driver = "com.mysql.jdbc.Driver";
    String user = "root";
    String pass = "";
    Date [] str = new Date [10];
    try {
        Class.forName (driver);
        con = DriverManager.getConnection (url + db, user, pass);
        Statement st = con.createStatement ();
        ResultSet rs = st.executeQuery ("select date from profile");
        ResultSetMetaData metadata = rs.getMetaData ();
        int columnCount = metadata.getColumnCount ();
        str = new Date [columnCount];
        int a = 0;
        while (rs.next ()) {
            str [a ++] = rs.getDate ("date");
        }
    } catch (Exception e) {
        System.out.println (e);
    }
    return str;
}
----------------------------------------

public static Date [] Dates () {
    Connection con = null;
    String url = "jdbc:mysql://localhost:3306/";
    String db = "GreetingCard";
    String driver = "com.mysql.jdbc.Driver";
    String user = "root";
    String pass = "";
    try {
        Class.forName (driver);
        con = DriverManager.getConnection (url + db, user, pass);
        Statement st = con.createStatement ();
        ResultSet rs = st.executeQuery ("select date from profile");
        ResultSetMetaData metadata = rs.getMetaData ();
        int columnCount = metadata.getColumnCount ();
        Date [] str = new Date [columnCount];
        int a = 0;
        while (rs.next ()) {
            str [a ++] = rs.getDate ("date");
        }
        return str;
    } catch (Exception e) {
        System.out.println (e);
        return null;
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22273924_22274057_1_10
22273924_22274330_1_10
Title: How to catch all the values which is returned by this program? 
----------------------------------------

static String nthDigit (int number, int n) {
    String digit = 0;
    for (int i = 0;
    i <= n; i ++) {
        digit += (number % 10).ToString ();
        number /= 10;
    }
    return digit;
}
----------------------------------------

static int nthDigit (int number, int n) {
    n = String.valueOf (number).length () - n;
    int digit = 0;
    for (int i = 0;
    i <= n; i ++) {
        digit = number % 10;
        number /= 10;
    }
    return digit;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22275435_22275584_111_126
22275435_22275584_196_214
Title: "CardLayout showing two panels flashing" 
----------------------------------------

public void actionPerformed (ActionEvent e) {
    final String oldKey = key;
    key = (String) cardCombo.getSelectedItem ();
    cardCombo.setEnabled (false);
    final JComponent firstComp = componentMap.get (oldKey);
    final BufferedImage firstImg = extractComponentImg (firstComp);
    final JComponent secondComp = componentMap.get (key);
    final BufferedImage secondImg = extractComponentImg (secondComp);
    cardlayout.show (cardHolderPanel, SWAPPING_IMG_PANEL);
    swappingImgPanel.setFirstImg (firstImg);
    swappingImgPanel.setSecondImg (secondImg);
    swappingImgPanel.swap ();
}
----------------------------------------

public void actionPerformed (ActionEvent e) {
    if (counter >= elapsedTime / deltaTime) {
        ((Timer) e.getSource ()).stop ();
        done ();
        return;
    }
    alpha1 = ((float) max - counter) / (float) max;
    alpha2 = (float) counter / (float) max;
    alpha1 = Math.min (1f, alpha1);
    alpha1 = Math.max (0f, alpha1);
    alpha2 = Math.min (1f, alpha2);
    alpha2 = Math.max (0f, alpha2);
    repaint ();
    counter ++;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22278160_22278190_3_16
22278160_22278214_1_13
Title: Reading integers for a stack from user input 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.println ("Enter how many numbers you want to place on the Stack: ");
    int stackSize = sc.nextInt ();
    Stack < Integer > stack = new Stack < Integer > ();
    for (int i = 0;
    i < stackSize; i ++) {
        System.out.println ("Enter numbers: ");
        int number = sc.nextInt ();
        stack.push (number);
    }
    while (! (stack.isEmpty ())) {
        System.out.println (stack.pop ());
    }
}
----------------------------------------

public static void main (String [] args) {
    final Scanner sc = new Scanner (System.in);
    System.out.print ("Enter numbers (finish with something else): ");
    final Stack < Integer > stack = new Stack < Integer > ();
    while (sc.hasNextInt ()) stack.push (sc.nextInt ());

    while (! (stack.isEmpty ())) System.out.println (stack.pop ());

}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22278902_22278973_1_10
22278902_22278986_1_11
Title: Java.lang.AssertionError in a SortedArrayList 
----------------------------------------

@Test
public void testIteratorInt () {
    Iterator < String > iter = this.list.iterator (0);
    assertTrue (iter.hasNext ());
    assertTrue (iter.next ().equals ("Amy"));
    iter = this.list.iterator (2);
    assertTrue (iter.hasNext ());
    assertTrue (iter.next ().equals ("Bob"));
}
----------------------------------------

@Test
public void testIteratorInt () {
    Iterator < String > iter = this.list.iterator (0);
    assertTrue (iter.hasNext ());
    assertTrue (iter.next ().equals ("Amy"));
    iter = this.list.iterator (2);
    assertTrue (iter.hasNext ());
    assertTrue (iter.next ().equals ("Bob"));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22279077_25940605_1_33
22279077_35372620_6_19
Title: Android Splash screen to activity 
----------------------------------------

@Override
protected void onCreate (Bundle savedInstanceState) {
    super.onCreate (savedInstanceState);
    setContentView (R.layout.activity_main);
    Thread th = new Thread (new Runnable () {
        @Override
        public void run () {
            try {
                Thread.sleep (5000);
            } catch (InterruptedException e) {
                e.printStackTrace ();
            } finally {
                Intent i = new Intent (MainActivity.this, Splash_Class.class);
                startActivity (i);
                finish ();
            }
        }}

    );
    th.start ();
}
----------------------------------------

public void onCreate (Bundle bundle) {
    super.onCreate (bundle);
    new Handler ().postDelayed (new Runnable () {
        @Override
        public void run () {
            Intent mainIntent = new Intent (SplashActivity.this, MainActivity.class);
            SplashActivity.this.startActivity (mainIntent);
            SplashActivity.this.finish ();
        }}

    , SPLASH_DISPLAY_DURATION);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22288749_22288932_14_25
22288749_22288982_1_17
Title: find the index in a sorted array 
----------------------------------------

public int search (int [] a, int target, int s, int e) {
    if (s == e) return s;

    int mid = (s + e) / 2;
    if (a [mid] == target) {
        return mid;
    } else if (target < a [mid]) {
        return search (a, target, 0, mid - 1);
    } else {
        return search (a, target, mid + 1, e);
    }

}
----------------------------------------

public int search (int [] a, int target, int s, int e) {
    int low = s;
    int high = e - 1;
    while (low <= high) {
        int mid = (low + high)>>> 1;
        int midVal = a [mid];
        if (midVal < target) low = mid + 1;
        else if (midVal > target) high = mid - 1;
        else return mid;

    }
    return - (low + 1);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22288749_22288932_14_25
22288749_51530782_1_14
Title: find the index in a sorted array 
----------------------------------------

public int search (int [] a, int target, int s, int e) {
    if (s == e) return s;

    int mid = (s + e) / 2;
    if (a [mid] == target) {
        return mid;
    } else if (target < a [mid]) {
        return search (a, target, 0, mid - 1);
    } else {
        return search (a, target, mid + 1, e);
    }

}
----------------------------------------

public static int search (int [] a, int target) {
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] == target) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22288749_22288982_1_17
22288749_51530782_1_14
Title: find the index in a sorted array 
----------------------------------------

public int search (int [] a, int target, int s, int e) {
    int low = s;
    int high = e - 1;
    while (low <= high) {
        int mid = (low + high)>>> 1;
        int midVal = a [mid];
        if (midVal < target) low = mid + 1;
        else if (midVal > target) high = mid - 1;
        else return mid;

    }
    return - (low + 1);
}
----------------------------------------

public static int search (int [] a, int target) {
    for (int i = 0;
    i < a.length; i ++) {
        if (a [i] == target) {
            return i;
        }
    }
    return - 1;
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22289124_22314639_31_50
22289124_22362171_25_43
Title: How to programmatically generate a client authentication certificate 
----------------------------------------

public void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    PrintWriter out = response.getWriter ();
    out.println ("<html>");
    out.println ("<head>");
    out.println ("<title>Example</title>");
    out.println ("</head>");
    out.println ("<body bgcolor=\"white\"><![CDATA[");
    out.println ("<form method=\"post\"><![CDATA[");
    out.println ("<keygen name=\"pubkey\" challenge=\"randomchars\"><![CDATA[");
    out.println ("Username: <input type=\"text\" name=\"username\" value=\"Sam Sanders\"><![CDATA[");
    out.println ("<input type=\"submit\" name=\"createcert\" value=\"Generate\"><![CDATA[");
    out.println ("</form>");
    out.println ("</body>");
    out.println ("</html>");
}
----------------------------------------

public void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    PrintWriter out = response.getWriter ();
    out.println ("<html>");
    out.println ("<head>");
    out.println ("<title>SSL Generator</title>");
    out.println ("</head>");
    out.println ("<body>");
    out.println ("<form method=\"post\"><![CDATA[");
    out.println ("<keygen name=\"pubkey\" challenge=\"randomchars\"><![CDATA[");
    out.println ("Username: <input type=\"text\" name=\"username\" value=\"John Doe\"><![CDATA[");
    out.println ("<input type=\"submit\" name=\"createcert\" value=\"Generate\"><![CDATA[");
    out.println ("</form>");
    out.println ("</body>");
    out.println ("</html>");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22289124_22314639_52_124
22289124_22362171_45_65
Title: How to programmatically generate a client authentication certificate 
----------------------------------------

protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("application/x-x509-user-cert");
    String CN = "/var/lib/tomcat7/webapps/ROOT/WEB-INF/certs/";
    PrintWriter out = new PrintWriter (CN + "log.txt", "UTF-8");
    try {
        String ClientID = "CilentX";
        String pass = "password";
        String pubkey = request.getParameter ("pubkey");
        String username = request.getParameter ("username");
        PrintWriter writer = new PrintWriter (CN + ClientID + ".spkac", "UTF-8");
        writer.println ("SPKAC=" + pubkey.replace ("\n", "").replace ("\r", "").replace ("\t", "").replace ("\0", ""));
        writer.println ("CN=" + username);
        writer.println ("emailAddress=test@test.com");
        writer.println ("0.OU=test client certificate");
        writer.println ("organizationName=organizationName");
        writer.println ("countryName=AU");
        writer.println ("stateOrProvinceName=State");
        writer.println ("localityName=City");
        writer.close ();
        writer.flush ();
        writer = new PrintWriter (CN + ClientID + ".cnf", "UTF-8");
        writer.println ("[ ca ]");
        writer.println ("default_ca      = CA_default");
        writer.println ("[ CA_default ]");
        writer.println ("dir            = " + CN);
        writer.println ("database       = " + CN + "demoCA/index.txt");
        writer.println ("new_certs_dir  = " + CN + "demoCA/newcerts");
        writer.println ("certificate    = " + CN + "ca.crt");
        writer.println ("serial         = " + CN + "demoCA/serial");
        writer.println ("private_key    = " + CN + "ca.key");
        writer.println ("RANDFILE       = " + CN + "demoCA/.rnd");
        writer.println ("HOME           = " + CN);
        writer.println ("default_days   = 3650");
        writer.println ("default_crl_days= 60");
        writer.println ("default_md     = sha1");
        writer.println ("policy         = policy_any");
        writer.println ("email_in_dn    = yes");
        writer.println ("name_opt       = ca_default");
        writer.println ("cert_opt       = ca_default");
        writer.println ("copy_extensions = none");
        writer.println ("[ policy_any ]");
        writer.println ("countryName            = supplied");
        writer.println ("stateOrProvinceName    = optional");
        writer.println ("organizationName       = optional");
        writer.println ("organizationalUnitName = optional");
        writer.println ("commonName             = supplied");
        writer.println ("emailAddress           = optional");
        writer.close ();
        writer.flush ();
        RunProcessBuilder x = new RunProcessBuilder (new File (CN), out);
        x.Run (new String [] {"openssl", "ca", "-config", CN + ClientID + ".cnf", "-days", "365", "-notext", "-batch", "-spkac", CN + ClientID + ".spkac", "-passin", "pass:" + pass, "-out", CN + ClientID + ".crt"});
        InputStream is = new BufferedInputStream (new FileInputStream (new File (CN + ClientID + ".crt")));
        OutputStream os = response.getOutputStream ();
        byte [] buf = new byte [1024];
        for (int nChunk = is.read (buf);
        nChunk != - 1; nChunk = is.read (buf)) {
            os.write (buf, 0, nChunk);
        }
        os.close ();
        os.flush ();
    } catch (Throwable t) {
        t.printStackTrace (out);
    }
    out.close ();
    out.flush ();
}
----------------------------------------

protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String CN = "/var/lib/tomcat7/webapps/ROOT/WEB-INF/certs/";
    PrintWriter out = new PrintWriter (CN + "log.txt", "UTF-8");
    try {
        response.setContentType ("application/x-x509-user-cert");
        OutputStream os = response.getOutputStream ();
        String pubkey = request.getParameter ("pubkey");
        pubkey = pubkey.replace ("\n", "").replace ("\r", "").replace ("\t", "").replace ("\0", "").replace ("\u000B", "");
        String username = request.getParameter ("username");
        BC_SingCert_Spkac (os, pubkey, username, out);
        os.close ();
        os.flush ();
    } catch (Throwable t) {
        t.printStackTrace (out);
    } finally {
        out.close ();
        out.flush ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22301892_22302908_11_21
22301892_22302908_28_39
Title: Print to console while waiting for input in java? 
----------------------------------------

public void run () {
    final Scanner in = new Scanner (System.in);
    while (in.hasNext ()) {
        final String line = in.nextLine ();
        System.out.println ("Input line: " + line);
        if ("end".equalsIgnoreCase (line)) {
            System.out.println ("Ending one thread");
            break;
        }
    }
}
----------------------------------------

public void run () {
    int i = 50;
    while (i > 0) {
        System.out.println ("Beep: " + i --);
        try {
            Thread.sleep (1000);
        } catch (InterruptedException ex) {
            throw new IllegalStateException (ex);
        }
    }
    System.out.println ("!!!! BOOM !!!!");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22317194_22317360_5_29
22317194_22317375_5_32
Title: Can someone please help me fix this Java code? 
----------------------------------------

public static void main (String [] args) {
    int [] [] distance = {{0, 171, 115, 141, 240}, {171, 0, 103, 194, 333}, {115, 103, 0, 120, 235}, {141, 194, 120, 0, 104}, {240, 333, 235, 104, 0}};
    int mileage;
    int first = - 1, second = - 1;
    Scanner keyboard = new Scanner (System.in);
    System.out.println ("To determine the mileage between cities, enter the \n");
    System.out.println ("numbers of two cities from the following list:\n");
    System.out.println ("      1:  Albany           4:  NY\n");
    System.out.println ("      2:  Boston           5:  Phila\n");
    System.out.println ("      3:  Hartford\n\n");
    System.out.println ("Enter your city numbers ==> ");
    first = keyboard.nextInt ();
    second = keyboard.nextInt ();
    mileage = distance [first - 1] [second - 1];
    System.out.println ("The distance between your two cities is " + mileage);
}
----------------------------------------

public static void main (String [] args) {
    Scanner keyboardReader = new Scanner (System.in);
    int [] [] distance = {{0, 171, 115, 141, 240}, {171, 0, 103, 194, 333}, {115, 103, 0, 120, 235}, {141, 194, 120, 0, 104}, {240, 333, 235, 104, 0}};
    int mileage;
    int first = - 1, second = - 1;
    System.out.println ("To determine the mileage between cities, enter the \n");
    System.out.println ("numbers of two cities from the following list:\n");
    System.out.println ("      1:  Albany           4:  NY\n");
    System.out.println ("      2:  Boston           5:  Phila\n");
    System.out.println ("      3:  Hartford\n\n");
    System.out.println ("Enter your city numbers ==> ");
    first = keyboardReader.nextInt ();
    second = keyboardReader.nextInt ();
    mileage = distance [first - 1] [second - 1];
    System.out.println ("The distance between your two cities is " + mileage + ".");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22317194_22317375_5_32
22317194_22317392_1_25
Title: Can someone please help me fix this Java code? 
----------------------------------------

public static void main (String [] args) {
    Scanner keyboardReader = new Scanner (System.in);
    int [] [] distance = {{0, 171, 115, 141, 240}, {171, 0, 103, 194, 333}, {115, 103, 0, 120, 235}, {141, 194, 120, 0, 104}, {240, 333, 235, 104, 0}};
    int mileage;
    int first = - 1, second = - 1;
    System.out.println ("To determine the mileage between cities, enter the \n");
    System.out.println ("numbers of two cities from the following list:\n");
    System.out.println ("      1:  Albany           4:  NY\n");
    System.out.println ("      2:  Boston           5:  Phila\n");
    System.out.println ("      3:  Hartford\n\n");
    System.out.println ("Enter your city numbers ==> ");
    first = keyboardReader.nextInt ();
    second = keyboardReader.nextInt ();
    mileage = distance [first - 1] [second - 1];
    System.out.println ("The distance between your two cities is " + mileage + ".");
}
----------------------------------------

public static void main (String [] args) {
    int [] [] distance = {{0, 171, 115, 141, 240}, {171, 0, 103, 194, 333}, {115, 103, 0, 120, 235}, {141, 194, 120, 0, 104}, {240, 333, 235, 104, 0}};
    int mileage;
    int first = - 1, second = - 1;
    Scanner in = new Scanner (System.in);
    System.out.println ("To determine the mileage between cities, enter the \n");
    System.out.println ("numbers of two cities from the following list:\n");
    System.out.println ("      1:  Albany           4:  NY\n");
    System.out.println ("      2:  Boston           5:  Phila\n");
    System.out.println ("      3:  Hartford\n\n");
    System.out.println ("Enter your city numbers ==> ");
    first = in.nextInt ();
    second = in.nextInt ();
    mileage = distance [first - 1] [second - 1];
    System.out.println ("The distance between your two cities is " + mileage);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22318056_22320464_76_90
22318056_24301784_14_47
Title: swing java app and iframe - two way communication 
----------------------------------------

public static void main (String [] args) throws Exception {
    EventQueue.invokeLater (new Runnable () {
        public void run () {
            try {
                GetComponent frame = new GetComponent ();
            } catch (Exception e) {
                System.out.println (e);
            }
        }}

    );
}
----------------------------------------

public static void main (String [] args) {
    Browser browser = BrowserFactory.create ();
    browser.registerFunction ("MyFunction", new BrowserFunction () {
        public JSValue invoke (JSValue...args) {
            for (JSValue arg : args) {
                System.out.println ("arg = " + arg);
            }
            return JSValue.create ("Hello!");
        }}

    );
    JFrame frame = new JFrame ();
    frame.add (browser.getView ().getComponent (), BorderLayout.CENTER);
    frame.setSize (800, 600);
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    browser.addLoadListener (new LoadAdapter () {
        @Override
        public void onFinishLoadingFrame (FinishLoadingEvent event) {
            if (event.isMainFrame ()) {
                Browser browser = event.getBrowser ();
                JSValue returnValue = browser.executeJavaScriptAndReturnValue ("MyFunction('Hello JxBrowser!', 1, 2, 3, true);");
                System.out.println ("return value = " + returnValue);
            }
        }}

    );
    browser.loadURL ("about:blank");
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22325640_22325697_8_37
22325640_22325939_3_29
Title: "Closing a JDialog by hitting the ""enter"" on keyboard" 
----------------------------------------

public static void main (String [] args) {
    JFrame frame = new JFrame ("Frame");
    frame.add (Box.createRigidArea (new Dimension (400, 300)));
    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    frame.pack ();
    frame.setLocationRelativeTo (null);
    frame.setVisible (true);
    final JDialog dialog = new JDialog (frame, "Dialog", true);
    int condition = JPanel.WHEN_IN_FOCUSED_WINDOW;
    InputMap inputMap = ((JPanel) dialog.getContentPane ()).getInputMap (condition);
    ActionMap actionMap = ((JPanel) dialog.getContentPane ()).getActionMap ();
    String enter = "enter";
    inputMap.put (KeyStroke.getKeyStroke (KeyEvent.VK_ENTER, 0), enter);
    actionMap.put (enter, new AbstractAction () {
        @Override
        public void actionPerformed (ActionEvent e) {
            dialog.dispose ();
        }}

    );
    dialog.add (Box.createRigidArea (new Dimension (200, 200)));
    dialog.pack ();
    dialog.setLocationRelativeTo (frame);
    dialog.setVisible (true);
}
----------------------------------------

public static void main (String [] args) {
    JDialog jd = new JDialog ();
    jd.addKeyListener (new KeyListener () {
        @Override
        public void keyTyped (KeyEvent e) {
        }@Override
        public void keyPressed (KeyEvent e) {
        }@Override
        public void keyReleased (KeyEvent e) {
            if (e.getKeyCode () == KeyEvent.VK_ENTER) {
                JDialog d = (JDialog) e.getSource ();
                d.dispose ();
            }
        }}

    );
    jd.setVisible (true);
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22344139_22344170_1_12
22344139_22344198_1_10
Title: How do I loop my main method in a way? 
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    System.out.print ("Please enter the first name of the person you would love to know about : ");
    String hisName = sc.next ();
    printSomeInfoAbout (hisName);
    System.out.print ("AGAIN (Y/N) : ");
    String var = sc.next ();
    if (var.equalsIgnoreCase ("Y")) {
        main (null);
    }
}
----------------------------------------

public static void main (String [] args) {
    Scanner sc = new Scanner (System.in);
    do {
        System.out.print ("Please enter the first name of the person you would love to know about : ");
        String hisName = sc.next ();
        if (hisName.equals ("")) {
            printSomeInfoAbout (hisName);
        }
    } while (! hisName.equals (""));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22355961_22357601_51_60
22355961_35685424_4_40
Title: java coin toss simulator problems 
----------------------------------------

public static void main (String [] args) {
    Coin coin = new Coin ();
    for (int i = 1;
    i <= 20; i ++) {
        coin.toss ();
        coin.checkToss ();
    }
    System.out.println ("Total Heads = " + coin.getHeadsCount () + " Total Tails = " + coin.getTailsCount ());
}
----------------------------------------

public static void main (String args []) throws Exception {
    InputStreamReader ir = new InputStreamReader (System.in);
    BufferedReader br = new BufferedReader (ir);
    double d, drop, side, s_d, re = 1;
    int tries = 0, score = 0;
    while (re == 1) {
        tries ++;
        System.out.println ("-> Hi, please choose your side\n-> Press 1 for    Head\n-> Press 2 for Tails");
        side = Integer.parseInt (br.readLine ());
        drop = Math.random ();
        d = Math.round (drop);
        if (d == 0) {
            s_d = 1;
        } else {
            s_d = 2;
        }
        if (s_d == side) {
            System.out.println ("-> You Won");
            score ++;
        } else {
            System.out.println ("-> You Lose");
        }
        if (s_d == 1) {
            System.out.println ("->Its Heads");
        } else if (s_d == 2) {
            System.out.println ("-> Its tails");
        }

        System.out.println ("-> Press 1 to Toss again \n -> Press 2 to     Quit");
        re = Double.parseDouble (br.readLine ());
        if (re == 2) {
            System.out.println ("You Scored " + score + " out of " + tries);
        }
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22365385_22365508_1_19
22365385_22365575_4_25
Title: Need help using random numbers and modulos 
----------------------------------------

public static void main (String [] args) {
    Random rnd = new Random ();
    int repeat = 19;
    int n = 0;
    int [] numbers = new int [3];
    for (int i = 0;
    i <= repeat; i ++) {
        n = rnd.nextInt (100) + 1;
        System.out.print (n + ", ");
        if (n % 3 == 0) System.out.println ("The number " + n + " is divisible by 3");
        else System.out.println ("" + n + " modulo 3 = " + n % 3);

        numbers [n % 3] ++;
    }
    System.out.println ("Numbers divisible by 3: " + numbers [0]);
    System.out.println ("Numbers with modulo 3 = 1: " + numbers [1]);
    System.out.println ("Numbers with modulo 3 = 2: " + numbers [2]);
}
----------------------------------------

public static void main (String [] args) {
    Random rnd = new Random ();
    int repeat = 19;
    int n = 0;
    int [] nMod = new int [3];
    nMod [0] = 0;
    nMod [1] = 0;
    nMod [2] = 0;
    for (int i = 0;
    i <= repeat; i ++) {
        n = rnd.nextInt (100) + 1;
        nMod [n % 3] = nMod [n % 3] + 1;
        System.out.print (n + " (" + n % 3 + "), ");
    }
    System.out.println ();
    System.out.println ("-------------------------------------");
    System.out.println ("Numbers divisible by three: " + nMod [0] + (", "));
    System.out.println ("Numbers equivalent to one modulo three: " + nMod [1] + (", "));
    System.out.println ("Numbers equivalent to two modulo three: " + nMod [2] + (", "));
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22370432_22370491_1_18
22370432_22370668_1_25
Title: Check Consecutive 13 digits in java 
----------------------------------------

public static void checkPosCardNoAndMask (String cardNo) {
    int n = 1;
    char c1 = cardNo.charAt (0);
    for (int i = 1, len = cardNo.length ();
    i < len && n < 13; i ++) {
        char c2 = cardNo.charAt (i);
        if (c2 >= '1' && c2 <= '9' && (c2 - c1 == 1 || c2 == '1' && c1 == '9')) {
            n ++;
        } else {
            n = 0;
        }
        c1 = c2;
    }
    if (n == 13) {
        System.out.println ("Consecutive found!!");
    } else {
        System.out.println ("Consecutive not found!!");
    }
}
----------------------------------------

public void checkPosCardNoAndMask (String cardNo) {
    String maskNumber = "";
    String starValue = "";
    boolean isConsecutive = false;
    int checkConsecutive = 0;
    for (int i = 0, len = cardNo.length ();
    i < len; i ++) {
        if (Character.isDigit (cardNo.charAt (i))) {
            maskNumber = maskNumber + cardNo.charAt (i);
            checkConsecutive ++;
        } else {
            if (checkConsecutive >= 13) {
                isConsecutive = true;
                break;
            } else checkConsecutive = 0;

            starValue = starValue + cardNo.charAt (i);
        }
    }
    if (isConsecutive) {
        System.out.printIn ("Consecutive found!!");
    } else {
        System.out.printIn ("Consecutive not found!!");
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22377447_22426940_6_45
22377447_22428926_5_29
Title: Java multidimensional Array to string and String to Array 
----------------------------------------

public static void main (String [] args) {
    String [] [] in = new String [10] [4];
    String [] [] out = new String [10] [4];
    arrays nr = new arrays ();
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            in [i] [j] = nr.Rand (5);
        }
    }
    System.out.println (Arrays.deepToString (in));
    String line = "";
    for (int i = 0;
    i < 4; i ++) {
        for (int j = 0;
        j < 4; j ++) {
            line += in [i] [j] + "_";
        }
        line += ":";
    }
    System.out.println (line);
    String [] xline = line.split (":");
    int ss = 0;
    for (String str : xline) {
        out [ss] = (String []) str.split ("_");
        System.out.println ("string line>>>" + str);
        ss ++;
    }
    System.out.println (Arrays.deepToString (out));
}
----------------------------------------

public static void main (String [] args) {
    int row, col;
    row = 2;
    col = 3;
    String [] [] in = new String [row] [col];
    for (int i = 0;
    i < row; i ++) {
        for (int j = 0;
        j < col; j ++) {
            in [i] [j] = i + " " + j;
        }
    }
    String str = Arrays.deepToString (in);
    System.out.println (str);
    String [] [] out = stringToDeep (str);
    for (String s2 [] : out) {
        for (String s3 : s2) {
            System.out.print (s3 + "  ");
        }
        System.out.println ();
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22377606_22386055_13_20
22377606_22386055_22_30
Title: How to concatenate the columns in an two dimensional array? 
----------------------------------------

public String [] combine () {
    if (result.isEmpty ()) {
        for (int level = 2;
        level < row.length; level ++) {
            combine (level, 0, row.length - level, "");
        }
    }
    return result.toArray (new String [result.size ()]);
}
----------------------------------------

private void combine (int level, int lower, int upper, String value) {
    if (level > 0) {
        for (int c = lower;
        c <= upper; c ++) {
            combine (level - 1, c + 1, upper + 1, value + row [c]);
        }
    } else {
        result.add (value);
    }
}
----------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
0
0
0
22380890_22381217_1_29
22380890_22381297_1_17
Title: Generate n random numbers whose sum is m and all numbers should be greater than zero 
----------------------------------------

public static void n_random (int targetSum, int numberOfDraws) {
    Random r = new Random ();
    List < Integer > load = new ArrayList < > ();
    int sum = 0;
    for (int i = 0;
    i < numberOfDraws; i ++) {
        int next = r.nextInt (targetSum) + 1;
        load.add (next);
        sum += next;
    }
    double scale = 1d * targetSum / sum;
    sum = 0;
    for (int i = 0;
    i < numberOfDraws; i ++) {
        load.set (i, (int) (load.get (i) * scale));
        sum += load.get (i);
    }
    while (sum ++ < targetSum) {
        int i = r.nextInt (numberOfDraws);
        load.set (i, load.get (i) + 1);
    }
    System.out.println ("Random arraylist " + load);
    System.out.println ("Sum is " + (sum - 1));
}
----------------------------------------

public static void n_random (int count, int finalSum) {
    Random r = new Random ();
    int numbers [] = new int [count];
    int sum = 0;
    for (int i = 0;
    i < count - 1; i ++) {
        numbers [i] = r.nextInt ((finalSum - sum) / 2) + 1;
        sum += numbers [i];
    }
    numbers [count - 1] = finalSum - sum;
    StringBuilder numbersString = new StringBuilder ("Random number list: ");
    for (int i = 0;
    i < count; i ++) numbersString.append (numbers [i] + " ");

    System.out.println (numbersString);
}
----------------------------------------
